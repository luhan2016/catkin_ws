sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 0
s is car_state1
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.214838027954


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:1


222 self.state_dicts[msg.id][msg.t] is (-3.218975782394409, 74.2719497680664, 4.818473815917969, 14.04351806640625)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7ffb976d1518>


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:2


self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7ffb976ee320>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (-3.784167766571045, 73.8429183959961, 4.890714645385742, 14.000732421875)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:3


maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9000)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:4




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:5


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: 3.1152985096
y: -62.2876243591
theta: 1.69754564762
speed: 14.1001977921
id: 0
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.1152985096
y: -62.2876243591
theta: 1.69754564762
speed: 14.1001977921
id: 0
t: 5
xxx after update is x: 3.45983123779
y: -61.2938804626
theta: 1.59122025967
speed: 13.9177742004
id: 0
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:6




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.45983123779
y: -61.2938804626
theta: 1.59122025967
speed: 13.9177742004
id: 0
t: 6
xxx after update is x: 3.45320940018
y: -60.7715530396
theta: 1.57914423943
speed: 13.5400953293
id: 0
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:7




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx besim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 1
s is car_state0
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.261112928391
222 self.state_dicts[msg.id][msg.t] is (3.3402774333953857, -64.77494812011719, 1.4685603380203247, 13.9124116897583)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:1




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:2


222 self.state_dicts[msg.id][msg.t] is (2.930777072906494, -63.45201873779297, 1.6125333309173584, 13.97819709777832)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7fa12569e9e0>


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:3


self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7fa1256c0dd0>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:4


maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (3.0720694065093994, -62.30518341064453, 1.4593411684036255, 13.537199974060059)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9001)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:5




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: -3.61098122597
y: 71.0294952393
theta: 4.82128715515
speed: 14.1200313568
id: 1
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:7


xxx before update is x: -3.61098122597
y: 71.0294952393
theta: 4.82128715515
speed: 14.1200313568
id: 1
t: 6
xxx after update is x: -3.37104487419
y: 70.960647583
theta: 4.76196289062
speed: 14.2125282288
id: 1
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.37104487419fore update is x: 3.45320940018
y: -60.7715530396
theta: 1.57914423943
speed: 13.5400953293
id: 0
t: 7
xxx after update is x: 3.13685941696
y: -59.9688034058
theta: 1.561881423
speed: 13.8971881866
id: 0
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:8




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.13685941696
y: -59.9688034058
theta: 1.561881423
speed: 13.8971881866
id: 0
t: 8
xxx after update is x: 3.06286668777
y: -59.9397697449
theta: 1.52565121651
speed: 14.1461257935
id: 0
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:9




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: 3.06286668777
y: -59.9397697449
theta: 1.52565121651
speed: 14.1461257935
id: 0
t: 9
xxx after update is x: 2.507604599
y: -58.8038787842
theta: 1.67200005054
speed: 13.6333456039
id: 0
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.444444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: 2.507604599
y: -58.8038787842
theta: 1.67200005054
speed: 13.6333456039
id: 0
t: 10
xxx after update is x: 3.443795681
y: -58.3608665466
theta: 1.65451812744
speed: 13.806974411
id: 0
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: 3.443795681
y: -58.3608665466
theta: 1.65451812744
speed: 13.806974411
id: 0
t: 11
xxx after update is x: 3.10200810432
y: -57.4450569153
theta: 1.54412555695
speed: 14.0324544907
id: 0
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3745289769237618, 0.3986034317739941]
222 self.state_dicts[msg.id][msg.t] is (-3.578312873840332, 67.87425994873047, 4.791558742523193, 13.941813468933105)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: 3.10200810432
y: -57.4450569153
theta: 1.54412555695
speed: 14.0324544907
id: 0
t: 12
xxx after update is x: 3.0144546032
y: -56.9174118042
theta: 1.66640555859
speed: 14.0364027023
id: 0
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: 3.0144546032
y: -56.9174118042
theta: 1.66640555859
speed: 14.0364027023
id: 0
t: 13
xxx after update is x: 3.31181406975
y: -56.0106086731
theta: 1.59972786903
speed: 13.9974279404
id: 0
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: 3.31181406975
y: -56.0106086731
theta: 1.59972786903
speed: 13.9974279404
id: 0
t: 14
xxx after update is x: 3.54140257835
y: -55.6223640442
theta: 1.56109559536
speed: 13.9280376434
id: 0
t: 15
maneuver_negotiatir.py finish the update agent state fro
y: 70.960647583
theta: 4.76196289062
speed: 14.2125282288
id: 1
t: 7
xxx after update is x: -3.40903115273
y: 69.7902908325
theta: 4.73635673523
speed: 13.8654031754
id: 1
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:8




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: -3.40903115273
y: 69.7902908325
theta: 4.73635673523
speed: 13.8654031754
id: 1
t: 8
xxx after update is x: -3.50594162941
y: 69.7611160278
theta: 4.6925110817
speed: 14.1664352417
id: 1
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: -3.50594162941
y: 69.7611160278
theta: 4.6925110817
speed: 14.1664352417
id: 1
t: 9
xxx after update is x: -3.14480829239
y: 69.162322998
theta: 4.73189544678
speed: 13.833363533
id: 1
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: -3.14480829239
y: 69.162322998
theta: 4.73189544678
speed: 13.833363533
id: 1
t: 10
xxx after update is x: -3.64929032326
y: 67.8504333496
theta: 4.88864088058
speed: 13.8859081268
id: 1
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.488888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: -3.64929032326
y: 67.8504333496
theta: 4.88864088058
speed: 13.8859081268
id: 1
t: 11
xxx after update is x: -3.57831287384
y: 67.8742599487
theta: 4.79155874252
speed: 13.9418134689
id: 1
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.5015087677540376, 0.23376694604347337]
222 self.state_dicts[msg.id][msg.t] is (3.102008104324341, -57.4450569152832, 1.5441255569458008, 14.032454490661621)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: -3.57831287384
y: 67.8742599487
theta: 4.79155874252
speed: 13.9418134689
id: 1
t: 12
xxx after update is x: -2.91294693947
y: 66.7571716309
theta: 4.59891939163
speed: 13.8178396225
id: 1
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: -2.91294693947
y: 66.7571716309
theta: 4.59891939163
speed: 13.8178396225
id: 1
t: 13
xxx after update is x: -3.23224902153
y: 66.1687774658
theta: 4.55346345901
speed: 13.8191814423
id: 1
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: -3.23224902153
y: 66.1687774658
theta: 4.55346345901
speed: 13.8191814423
id: 1
t: 14
xxx after update is x: -2.48459196091
y: 65.852355957
theta: 4.62024593353
speed: 14.1094961166
id: 1
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: -2.48459196091
y: 65.852355957
theta: 4.62024593353
speed: 14.1094961166
id: 1
t: 15
xxx after update is x: -2.78123092651
y: 64.857460022
theta: 4.95099306107
speed: 13.5661745071
id: 1
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: -2.78123092651
y: 64.857460022
theta: 4.95099306107
speed: 13.5661745071
id: 1
t: 16
xxx after update is x: -3.21948838234
y: 64.3967056274
theta: 4.65505599976
speed: 13.8861179352
id: 1
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.39519758077771827, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0425119400024414, -54.270179748535156, 1.4399141073226929, 14.139910697937012)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: -3.21948838234
y: 64.3967056274
theta: 4.65505599976
speed: 13.8861179352
id: 1
t: 17
xxx after update is x: -3.04346084595
y: 63.7860946655
theta: 4.66300010681
speed: 14.0353870392
id: 1
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:19


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.8






self.maneuver_requested None
xxx before update is x: -3.04346084595
y: 63.7860946655
theta: 4.66300010681
speed: 14.0353870392
id: 1
t: 18
xxx after update is x: -2.74966359138
y: 63.4313735962
theta: 4.71972990036
speed: 14.0353803635
id: 1
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: -2.74966359138
y: 63.4313735962
theta: 4.71972990036
speed: 14.0353803635
id: 1
t: 19
xxx after update is x: -3.66487789154
y: 62.010471344
theta: 4.72935533524
speed: 13.6064949036
id: 1
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: -3.66487789154
y: 62.010471344
theta: 4.72935533524
speed: 13.6064949036
id: 1
t: 20
xxx after update is x: -3.69565200806
y: 62.0967788696
theta: 4.69427204132
speed: 13.7842054367
id: 1
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: -3.69565200806
y: 62.0967788696
theta: 4.69427204132
speed: 13.7842054367
id: 1
t: 21
xxx after update is x: -3.13677978516
y: 61.4211387634
theta: 4.78036546707
speed: 14.0632715225
id: 1
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id ==m ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: 3.54140257835
y: -55.6223640442
theta: 1.56109559536
speed: 13.9280376434
id: 0
t: 15
xxx after update is x: 3.11500024796
y: -55.0742874146
theta: 1.61885118484
speed: 13.8217067719
id: 0
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: 3.11500024796
y: -55.0742874146
theta: 1.61885118484
speed: 13.8217067719
id: 0
t: 16
xxx after update is x: 3.04251194
y: -54.2701797485
theta: 1.43991410732
speed: 14.1399106979
id: 0
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.755555555556






self.maneuver_requested None
xxx before update is x: 3.04251194
y: -54.2701797485
theta: 1.43991410732
speed: 14.1399106979
id: 0
t: 17
xxx after update is x: 3.31615495682
y: -54.1046333313
theta: 1.66977524757
speed: 14.0965433121
id: 0
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:18


maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.3026658193247207, 0.33903447012722493]
222 self.state_dicts[msg.id][msg.t] is (-3.0434608459472656, 63.786094665527344, 4.663000106811523, 14.03538703918457)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: 3.31615495682
y: -54.1046333313
theta: 1.66977524757
speed: 14.0965433121
id: 0
t: 18
xxx after update is x: 3.64343976974
y: -53.2642822266
theta: 1.51812076569
speed: 13.9196386337
id: 0
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.64343976974
y: -53.2642822266
theta: 1.51812076569
speed: 13.9196386337
id: 0
t: 19
xxx after update is x: 3.2125184536
y: -52.2194519043
theta: 1.53336191177
speed: 14.0948610306
id: 0
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:20




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: 3.2125184536
y: -52.2194519043
theta: 1.53336191177
speed: 14.0948610306
id: 0
t: 20
xxx after update is x: 3.387373209
y: -52.0248641968
theta: 1.46256995201
speed: 14.0004205704
id: 0
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: 3.387373209
y: -52.0248641968
theta: 1.46256995201
speed: 14.0004205704
id: 0
t: 21
xxx after update is x: 3.50952029228
y: -51.4366569519
theta: 1.47562849522
speed: 13.9056510925
id: 0
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: 3.50952029228
y: -51.4366569519
theta: 1.47562849522
speed: 13.9056510925
id: 0
t: 22
xxx after update is x: 3.329 1):
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: -3.13677978516
y: 61.4211387634
theta: 4.78036546707
speed: 14.0632715225
id: 1
t: 22
xxx after update is x: -2.43890619278
y: 60.5151748657
theta: 4.79060316086
speed: 13.7982597351
id: 1
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: -2.43890619278
y: 60.5151748657
theta: 4.79060316086
speed: 13.7982597351
id: 1
t: 23
xxx after update is x: -3.18678092957
y: 60.0708503723
theta: 4.63786697388
speed: 13.8704309464
id: 1
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: -3.18678092957
y: 60.0708503723
theta: 4.63786697388
speed: 13.8704309464
id: 1
t: 24
xxx after update is x: -3.40274238586
y: 59.7467689514
theta: 4.83170318604
speed: 13.7290277481
id: 1
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3346061197757918, 0]
222 self.state_dicts[msg.id][msg.t] is (3.886624336242676, -49.35143280029297, 1.5073468685150146, 13.87829875946045)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.40274238586
y: 59.7467689514
theta: 4.83170318604
speed: 13.7290277481
id: 1
t: 25
xxx after update is x: -3.55754303932
y: 58.4589729309
theta: 4.63012075424
speed: 13.5206155777
id: 1
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:26


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.15555555556






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: -3.55754303932
y: 58.4589729309
theta: 4.63012075424
speed: 13.5206155777
id: 1
t: 26
xxx after update is x: -3.48928999901
y: 58.7039146423
theta: 4.64078617096
speed: 13.7529659271
id: 1
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: -3.48928999901
y: 58.7039146423
theta: 4.64078617096
speed: 13.7529659271
id: 1
t: 27
xxx after update is x: -3.28869533539
y: 57.488861084
theta: 4.84987354279
speed: 13.7332620621
id: 1
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: -3.28869533539
y: 57.488861084
theta: 4.84987354279
speed: 13.7332620621
id: 1
t: 28
xxx after update is x: -3.63575792313
y: 57.3216171265
theta: 4.99231290817
speed: 13.5251674652
id: 1
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: -3.63575792313
y: 57.3216171265
theta: 4.99231290817
speed: 13.5251674652
id: 1
t: 29
xxx after update is 40936089
y: -50.8867950439
theta: 1.45662713051
speed: 13.7011833191
id: 0
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: 3.32940936089
y: -50.8867950439
theta: 1.45662713051
speed: 13.7011833191
id: 0
t: 23
xxx after update is x: 3.52866077423
y: -50.4441452026
theta: 1.67567849159
speed: 13.9607810974
id: 0
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: 3.52866077423
y: -50.4441452026
theta: 1.67567849159
speed: 13.9607810974
id: 0
t: 24
xxx after update is x: 3.88662433624
y: -49.3514328003
theta: 1.50734686852
speed: 13.8782987595
id: 0
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.88662433624
y: -49.3514328003
theta: 1.50734686852
speed: 13.8782987595
id: 0
t: 25
xxx after update is x: 3.46059799194
y: -48.8092842102
theta: 1.62984263897
speed: 13.5629243851
id: 0
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.15555555556






self.maneuver_requested None
leave the update function 
in spin function, finish the n times spin:26


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: 3.46059799194
y: -48.8092842102
theta: 1.62984263897
speed: 13.5629243851
id: 0
t: 26
xxx after update is x: 3.46283912659
y: -48.5634803772
theta: 1.70938670635
speed: 13.5871238708
id: 0
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: 3.46283912659
y: -48.5634803772
theta: 1.70938670635
speed: 13.5871238708
id: 0
t: 27
xxx after update is x: 3.18097424507
y: -47.6292686462
theta: 1.60533416271
speed: 13.9369888306
id: 0
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: 3.18097424507
y: -47.6292686462
theta: 1.60533416271
speed: 13.9369888306
id: 0
t: 28
xxx after update is x: 3.37706065178
y: -46.9078369141
theta: 1.48742604256
speed: 13.850356102
id: 0
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.2824009898223324, 0.29301896233115315]
222 self.state_dicts[msg.id][msg.t] is (-3.6357579231262207, 57.321617126464844, 4.992312908172607, 13.525167465209961)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: 3.37706065178
y: -46.9078369141
theta: 1.48742604256
speed: 13.850356102
id: 0
t: 29
xxx after update is x: 3.45365047455
y: -46.3759346008
theta: 1.51011753082
speed: 13.9140443802
id: 0
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n x: -3.36205673218
y: 56.5183181763
theta: 4.69018936157
speed: 13.7878847122
id: 1
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: -3.36205673218
y: 56.5183181763
theta: 4.69018936157
speed: 13.7878847122
id: 1
t: 30
xxx after update is x: -2.99233984947
y: 56.1648406982
theta: 4.78482341766
speed: 13.8211698532
id: 1
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.31022513267072394, 0]
222 self.state_dicts[msg.id][msg.t] is (3.276008129119873, -46.065162658691406, 1.4237284660339355, 13.98462200164795)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: -2.99233984947
y: 56.1648406982
theta: 4.78482341766
speed: 13.8211698532
id: 1
t: 31
xxx after update is x: -3.21746921539
y: 55.0371055603
theta: 4.74184322357
speed: 13.8882799149
id: 1
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.21746921539
y: 55.0371055603
theta: 4.74184322357
speed: 13.8882799149
id: 1
t: 32
xxx after update is x: -3.01863217354
y: 55.0065727234
theta: 4.57208347321
speed: 13.950594902
id: 1
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:33




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: -3.01863217354
y: 55.0065727234
theta: 4.57208347321
speed: 13.950594902
id: 1
t: 33
xxx after update is x: -3.29212117195
y: 53.3611869812
theta: 4.64677286148
speed: 13.7764873505
id: 1
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.51111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: -3.29212117195
y: 53.3611869812
theta: 4.64677286148
speed: 13.7764873505
id: 1
t: 34
xxx after update is x: -3.22920012474
y: 53.2065353394
theta: 4.55398750305
speed: 14.2654314041
id: 1
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: -3.22920012474
y: 53.2065353394
theta: 4.55398750305
speed: 14.2654314041
id: 1
t: 35
xxx after update is x: -3.39745593071
y: 52.7282943726
theta: 4.65811634064
speed: 14.0511245728
id: 1
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: -3.39745593071
y: 52.7282943726
theta: 4.65811634064
speed: 14.0511245728
id: 1
t: 36
xxx after update is x: -2.90663099289
y: 52.2998695374
theta: 4.74923419952
speed: 13.8660259247
id: 1
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the simtimes spin:31

xxx before update is x: 3.45365047455
y: -46.3759346008
theta: 1.51011753082
speed: 13.9140443802
id: 0
t: 30
xxx after update is x: 3.27600812912
y: -46.0651626587
theta: 1.42372846603
speed: 13.9846220016
id: 0
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.27600812912
y: -46.0651626587
theta: 1.42372846603
speed: 13.9846220016
id: 0
t: 31
xxx after update is x: 2.98514318466
y: -44.8916969299
theta: 1.61788451672
speed: 13.8099184036
id: 0
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:32




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: 2.98514318466
y: -44.8916969299
theta: 1.61788451672
speed: 13.8099184036
id: 0
t: 32
xxx after update is x: 3.22054076195
y: -44.582069397
theta: 1.67640948296
speed: 13.7107057571
id: 0
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.46666666667






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: 3.22054076195
y: -44.582069397
theta: 1.67640948296
speed: 13.7107057571
id: 0
t: 33
xxx after update is x: 2.63873386383
y: -44.4100837708
theta: 1.47526657581
speed: 13.8147611618
id: 0
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: 2.63873386383
y: -44.4100837708
theta: 1.47526657581
speed: 13.8147611618
id: 0
t: 34
xxx after update is x: 3.2958009243
y: -43.6481246948
theta: 1.7360509634
speed: 13.7757902145
id: 0
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: 3.2958009243
y: -43.6481246948
theta: 1.7360509634
speed: 13.7757902145
id: 0
t: 35
xxx after update is x: 3.29363107681
y: -43.1772499084
theta: 1.80485081673
speed: 13.9865789413
id: 0
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: 3.29363107681
y: -43.1772499084
theta: 1.80485081673
speed: 13.9865789413
id: 0
t: 36
xxx after update is x: 3.4239730835
y: -41.7277870178
theta: 1.73450732231
speed: 13.820599556
id: 0
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: 3.4239730835
y: -41.7277870178
theta: 1.73450732231
speed: 13.820599556
id: 0
t: 37
xxx after update is x: 3.28399515152
y: -41.4951095581
theta: 1.61813211441
speed: 14.1720733643
id: 0
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3453302392360499, 0.32410465607020744]
222 self.state_dicts[msg.id][msg.t] is (-3.926948308944702, 51.573673248291016, 4.7846479415893555, 13.783875465393066)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the u.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: -2.90663099289
y: 52.2998695374
theta: 4.74923419952
speed: 13.8660259247
id: 1
t: 37
xxx after update is x: -3.92694830894
y: 51.5736732483
theta: 4.78464794159
speed: 13.7838754654
id: 1
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.27993150693892493, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2839951515197754, -41.49510955810547, 1.6181321144104004, 14.172073364257812)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: -3.92694830894
y: 51.5736732483
theta: 4.78464794159
speed: 13.7838754654
id: 1
t: 38
xxx after update is x: -3.66837787628
y: 51.034412384
theta: 4.612200737
speed: 14.1711034775
id: 1
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: -3.66837787628
y: 51.034412384
theta: 4.612200737
speed: 14.1711034775
id: 1
t: 39
xxx after update is x: -3.06079006195
y: 50.2626457214
theta: 4.6542057991
speed: 13.7568216324
id: 1
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: -3.06079006195
y: 50.2626457214
theta: 4.6542057991
speed: 13.7568216324
id: 1
t: 40
xxx after update is x: -2.90206074715
y: 49.6082839966
theta: 4.75157022476
speed: 13.8099689484
id: 1
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.90206074715
y: 49.6082839966
theta: 4.75157022476
speed: 13.8099689484
id: 1
t: 41
xxx after update is x: -3.32726168633
y: 49.143573761
theta: 4.62615680695
speed: 14.0341062546
id: 1
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:42


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.86666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: -3.32726168633
y: 49.143573761
theta: 4.62615680695
speed: 14.0341062546
id: 1
t: 42
xxx after update is x: -2.62220692635
y: 48.8252220154
theta: 4.81922721863
speed: 13.7828807831
id: 1
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: -2.62220692635
y: 48.8252220154
theta: 4.81922721863
speed: 13.7828807831
id: 1
t: 43
xxx after update is x: -3.10684275627
y: 47.5296630859
theta: 4.77792787552
speed: 14.0770664215
id: 1
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: -3.10684275627
y: 47.5296630859
theta: 4.777pdate function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: 3.28399515152
y: -41.4951095581
theta: 1.61813211441
speed: 14.1720733643
id: 0
t: 38
xxx after update is x: 2.89320421219
y: -40.6823005676
theta: 1.65243864059
speed: 13.6586713791
id: 0
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: 2.89320421219
y: -40.6823005676
theta: 1.65243864059
speed: 13.6586713791
id: 0
t: 39
xxx after update is x: 3.50072932243
y: -40.3407211304
theta: 1.56047749519
speed: 13.8632049561
id: 0
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.50072932243
y: -40.3407211304
theta: 1.56047749519
speed: 13.8632049561
id: 0
t: 40
xxx after update is x: 3.56105136871
y: -40.0525474548
theta: 1.60292077065
speed: 14.0397720337
id: 0
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:41


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.82222222222






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.56105136871
y: -40.0525474548
theta: 1.60292077065
speed: 14.0397720337
id: 0
t: 41
xxx after update is x: 2.96574568748
y: -38.8067932129
theta: 1.52911007404
speed: 14.0553274155
id: 0
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:42


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: 2.96574568748
y: -38.8067932129
theta: 1.52911007404
speed: 14.0553274155
id: 0
t: 42
xxx after update is x: 2.66038203239
y: -38.2521133423
theta: 1.53812074661
speed: 13.6694345474
id: 0
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: 2.66038203239
y: -38.2521133423
theta: 1.53812074661
speed: 13.6694345474
id: 0
t: 43
xxx after update is x: 3.58341050148
y: -38.1862068176
theta: 1.50455796719
speed: 13.6759634018
id: 0
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: 3.58341050148
y: -38.1862068176
theta: 1.50455796719
speed: 13.6759634018
id: 0
t: 44
xxx after update is x: 3.46595644951
y: -37.2814445496
theta: 1.7130613327
speed: 13.8919487
id: 0
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: 3.46595644951
y: -37.2814445496
theta: 1.7130613327
speed: 13.8919487
id: 0
t: 45
xxx after update is x: 3.18183159828
y: -36.4562492371
theta: 1.50547289848
speed: 13.8690958023
id: 0
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.39364473696239854, 0.35885941159012646]
222 self.state_dicts[msg.id][msg.t] is (-3.448518753051758, 46.37333679199219, 4.734273910522461, 14.272316932678223)
if w92787552
speed: 14.0770664215
id: 1
t: 44
xxx after update is x: -3.20579123497
y: 46.7154312134
theta: 4.75882720947
speed: 13.7292871475
id: 1
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3784893811656058, 0]
222 self.state_dicts[msg.id][msg.t] is (3.465956449508667, -37.28144454956055, 1.7130613327026367, 13.891948699951172)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.20579123497
y: 46.7154312134
theta: 4.75882720947
speed: 13.7292871475
id: 1
t: 45
xxx after update is x: -3.44851875305
y: 46.373336792
theta: 4.73427391052
speed: 14.2723169327
id: 1
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:46




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: -3.44851875305
y: 46.373336792
theta: 4.73427391052
speed: 14.2723169327
id: 1
t: 46
xxx after update is x: -2.91463208199
y: 45.9033126831
theta: 4.71252822876
speed: 13.5920534134
id: 1
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: -2.91463208199
y: 45.9033126831
theta: 4.71252822876
speed: 13.5920534134
id: 1
t: 47
xxx after update is x: -2.89311528206
y: 44.97265625
theta: 4.86808395386
speed: 14.1307811737
id: 1
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: -2.89311528206
y: 44.97265625
theta: 4.86808395386
speed: 14.1307811737
id: 1
t: 48
xxx after update is x: -2.8736717701
y: 44.2023544312
theta: 4.32588624954
speed: 13.9758386612
id: 1
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3429499595279412, 0]
222 self.state_dicts[msg.id][msg.t] is (2.576310634613037, -34.682071685791016, 1.5510774850845337, 13.991266250610352)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: -2.8736717701
y: 44.2023544312
theta: 4.32588624954
speed: 13.9758386612
id: 1
t: 49
xxx after update is x: -3.58088850975
y: 43.6649246216
theta: 4.7111620903
speed: 13.9213666916
id: 1
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.22222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: -3.58088850975
y: 43.6649246216
theta: 4.7111620903
speed: 13.9213666916
id: 1
t: 50
xxx after update is x: -3.56099557877
y: 43.3079681396
theta: 4.72470474243
speed: 14.3723869324
id: 1
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish e have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: 3.18183159828
y: -36.4562492371
theta: 1.50547289848
speed: 13.8690958023
id: 0
t: 46
xxx after update is x: 3.39445495605
y: -35.7549743652
theta: 1.53113174438
speed: 13.9505224228
id: 0
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: 3.39445495605
y: -35.7549743652
theta: 1.53113174438
speed: 13.9505224228
id: 0
t: 47
xxx after update is x: 3.48710465431
y: -35.35887146
theta: 1.64993274212
speed: 13.7719316483
id: 0
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: 3.48710465431
y: -35.35887146
theta: 1.64993274212
speed: 13.7719316483
id: 0
t: 48
xxx after update is x: 2.57631063461
y: -34.6820716858
theta: 1.55107748508
speed: 13.9912662506
id: 0
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.17777777778






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.57631063461
y: -34.6820716858
theta: 1.55107748508
speed: 13.9912662506
id: 0
t: 49
xxx after update is x: 3.16403198242
y: -34.0464248657
theta: 1.43330407143
speed: 13.9337444305
id: 0
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:50


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: 3.16403198242
y: -34.0464248657
theta: 1.43330407143
speed: 13.9337444305
id: 0
t: 50
xxx after update is x: 3.71876811981
y: -33.8418235779
theta: 1.65757095814
speed: 13.7313890457
id: 0
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: 3.71876811981
y: -33.8418235779
theta: 1.65757095814
speed: 13.7313890457
id: 0
t: 51
xxx after update is x: 3.42255520821
y: -32.5312538147
theta: 1.60797059536
speed: 13.6902246475
id: 0
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.42255520821
y: -32.5312538147
theta: 1.60797059536
speed: 13.6902246475
id: 0
t: 52
xxx after update is x: 3.22363591194
y: -32.4791717529
theta: 1.40145397186
speed: 13.7295446396
id: 0
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:53


aaaaaa
risk is [0.37458224471434304, 0.33867768490873845]
222 self.state_dicts[msg.id][msg.t] is (-3.192871332168579, 42.217994689941406, 4.702149391174316, 13.740202903747559)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:54


xxx bethe n times spin:52

xxx before update is x: -3.56099557877
y: 43.3079681396
theta: 4.72470474243
speed: 14.3723869324
id: 1
t: 51
xxx after update is x: -3.22990512848
y: 42.3559417725
theta: 4.75601196289
speed: 13.8961324692
id: 1
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:53


xxx before update is x: -3.22990512848
y: 42.3559417725
theta: 4.75601196289
speed: 13.8961324692
id: 1
t: 52
xxx after update is x: -3.19287133217
y: 42.2179946899
theta: 4.70214939117
speed: 13.7402029037
id: 1
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.19287133217
y: 42.2179946899
theta: 4.70214939117
speed: 13.7402029037
id: 1
t: 53
xxx after update is x: -3.3992497921
y: 42.1700210571
theta: 4.63884115219
speed: 13.9152441025
id: 1
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:54


aaaaaa
aaaaaabbbbb
risk is [0.41268158895614754, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2233097553253174, -31.256744384765625, 1.6843613386154175, 14.225902557373047)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: -3.3992497921
y: 42.1700210571
theta: 4.63884115219
speed: 13.9152441025
id: 1
t: 54
xxx after update is x: -2.98958539963
y: 41.0075302124
theta: 4.69658279419
speed: 13.5698728561
id: 1
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: -2.98958539963
y: 41.0075302124
theta: 4.69658279419
speed: 13.5698728561
id: 1
t: 55
xxx after update is x: -3.34573125839
y: 40.3363189697
theta: 4.64973402023
speed: 13.991150856
id: 1
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: -3.34573125839
y: 40.3363189697
theta: 4.64973402023
speed: 13.991150856
id: 1
t: 56
xxx after update is x: -3.27777862549
y: 39.9225921631
theta: 4.69516944885
speed: 13.7672319412
id: 1
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.53333333333






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: -3.27777862549
y: 39.9225921631
theta: 4.69516944885
speed: 13.7672319412
id: 1
t: 57
xxx after update is x: -3.1528236866
y: 38.6340370178
theta: 4.5503616333
speed: 14.3170928955
id: 1
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: -3.1528236866
y: 38.6340370178
theta: 4.5503616333
speed: 14.3170928955
id: 1
t: 58
xxx after update is x: -3.1699886322
y: 38.7325019836
theta: 4.68423700333
speefore update is x: 3.22363591194
y: -32.4791717529
theta: 1.40145397186
speed: 13.7295446396
id: 0
t: 53
xxx after update is x: 3.22330975533
y: -31.2567443848
theta: 1.68436133862
speed: 14.2259025574
id: 0
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: 3.22330975533
y: -31.2567443848
theta: 1.68436133862
speed: 14.2259025574
id: 0
t: 54
xxx after update is x: 3.73154234886
y: -31.3468456268
theta: 1.72157657146
speed: 13.8399734497
id: 0
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: 3.73154234886
y: -31.3468456268
theta: 1.72157657146
speed: 13.8399734497
id: 0
t: 55
xxx after update is x: 2.91932916641
y: -30.3801078796
theta: 1.59913003445
speed: 13.6270294189
id: 0
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: 2.91932916641
y: -30.3801078796
theta: 1.59913003445
speed: 13.6270294189
id: 0
t: 56
xxx after update is x: 3.46935963631
y: -30.1885795593
theta: 1.54642832279
speed: 13.8977441788
id: 0
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.53333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: 3.46935963631
y: -30.1885795593
theta: 1.54642832279
speed: 13.8977441788
id: 0
t: 57
xxx after update is x: 3.09601306915
y: -29.2407989502
theta: 1.4339672327
speed: 14.0737695694
id: 0
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: 3.09601306915
y: -29.2407989502
theta: 1.4339672327
speed: 14.0737695694
id: 0
t: 58
xxx after update is x: 3.13736224174
y: -28.5832824707
theta: 1.64468920231
speed: 13.9201831818
id: 0
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: 3.13736224174
y: -28.5832824707
theta: 1.64468920231
speed: 13.9201831818
id: 0
t: 59
xxx after update is x: 3.47913360596
y: -28.1450481415
theta: 1.52745270729
speed: 13.7878627777
id: 0
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.43878249885588205, 0.43426305904308987]
222 self.state_dicts[msg.id][msg.t] is (-3.6070451736450195, 37.738128662109375, 4.731882572174072, 13.592604637145996)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: 3.47913360596
y: -28.1450481415
theta: 1.52745270729
speed: 13.7878627777
id: 0
t: 60
xxx after update is x: 3.1647644043
y: -27.5903949738
theta: 1.5192091465
speed: 14.0482301712
id: 0
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
d: 13.8772611618
id: 1
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.29871613338097885, 0]
222 self.state_dicts[msg.id][msg.t] is (3.137362241744995, -28.583282470703125, 1.6446892023086548, 13.920183181762695)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: -3.1699886322
y: 38.7325019836
theta: 4.68423700333
speed: 13.8772611618
id: 1
t: 59
xxx after update is x: -3.60704517365
y: 37.7381286621
theta: 4.73188257217
speed: 13.5926046371
id: 1
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.60704517365
y: 37.7381286621
theta: 4.73188257217
speed: 13.5926046371
id: 1
t: 60
xxx after update is x: -3.5865585804
y: 37.3893661499
theta: 4.60591030121
speed: 13.6523036957
id: 1
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:61




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: -3.5865585804
y: 37.3893661499
theta: 4.60591030121
speed: 13.6523036957
id: 1
t: 61
xxx after update is x: -3.31775951385
y: 36.570476532
theta: 4.84103918076
speed: 13.8299036026
id: 1
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: -3.31775951385
y: 36.570476532
theta: 4.84103918076
speed: 13.8299036026
id: 1
t: 62
xxx after update is x: -2.76975607872
y: 36.2568588257
theta: 4.52001476288
speed: 13.7013492584
id: 1
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.76975607872
y: 36.2568588257
theta: 4.52001476288
speed: 13.7013492584
id: 1
t: 63
xxx after update is x: -3.04726362228
y: 36.1634750366
theta: 4.57761621475
speed: 13.8815765381
id: 1
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:64


aaaaaa
aaaaaabbbbb
risk is [0.37928947777288247, 0]
222 self.state_dicts[msg.id][msg.t] is (2.9130966663360596, -25.11716651916504, 1.4980757236480713, 13.61110782623291)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.04726362228
y: 36.1634750366
theta: 4.57761621475
speed: 13.8815765381
id: 1
t: 64
xxx after update is x: -3.38465356827
y: 34.7488098145
theta: 4.73797273636
speed: 13.8450632095
id: 1
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:65


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.88888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: -3.38465356827
y: 34.7488098145
theta: 4.73797273636
speed: 13.845063sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: 3.1647644043
y: -27.5903949738
theta: 1.5192091465
speed: 14.0482301712
id: 0
t: 61
xxx after update is x: 2.89520907402
y: -26.6135177612
theta: 1.58700311184
speed: 13.5632419586
id: 0
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: 2.89520907402
y: -26.6135177612
theta: 1.58700311184
speed: 13.5632419586
id: 0
t: 62
xxx after update is x: 3.15484285355
y: -25.8595466614
theta: 1.58096814156
speed: 13.3388185501
id: 0
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 3.15484285355
y: -25.8595466614
theta: 1.58096814156
speed: 13.3388185501
id: 0
t: 63
xxx after update is x: 2.91309666634
y: -25.1171665192
theta: 1.49807572365
speed: 13.6111078262
id: 0
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:64




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: 2.91309666634
y: -25.1171665192
theta: 1.49807572365
speed: 13.6111078262
id: 0
t: 64
xxx after update is x: 3.02059483528
y: -25.2782306671
theta: 1.58685338497
speed: 13.3909034729
id: 0
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.88888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: 3.02059483528
y: -25.2782306671
theta: 1.58685338497
speed: 13.3909034729
id: 0
t: 65
xxx after update is x: 2.83817028999
y: -24.5529747009
theta: 1.48662090302
speed: 13.0301675797
id: 0
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: 2.83817028999
y: -24.5529747009
theta: 1.48662090302
speed: 13.0301675797
id: 0
t: 66
xxx after update is x: 3.15505385399
y: -23.6799716949
theta: 1.43155264854
speed: 12.6073741913
id: 0
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 3.15505385399
y: -23.6799716949
theta: 1.43155264854
speed: 12.6073741913
id: 0
t: 67
xxx after update is x: 3.11004662514
y: -23.2836017609
theta: 1.72250497341
speed: 12.3225622177
id: 0
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:68




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: 3.11004662514
y: -23.2836017609
theta: 1.72250497341
speed: 12.3225622177
id: 0
t: 68
xxx after update is x: 2.92540168762
y: -22.1787452698
theta: 1.51692175865
speed: 12.5137729645
id: 0
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.46261844185041795, 0.4079619603916706]
222 self.state_dicts[msg.id][msg.t] is (-2.7569851875305176, 32.516090393066406, 4.654783248901367, 13.911994934082031)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm2095
id: 1
t: 65
xxx after update is x: -3.02625870705
y: 34.0919570923
theta: 4.74769163132
speed: 13.6812496185
id: 1
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: -3.02625870705
y: 34.0919570923
theta: 4.74769163132
speed: 13.6812496185
id: 1
t: 66
xxx after update is x: -3.22881484032
y: 33.9456138611
theta: 4.78941392899
speed: 13.5859661102
id: 1
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: -3.22881484032
y: 33.9456138611
theta: 4.78941392899
speed: 13.5859661102
id: 1
t: 67
xxx after update is x: -2.82023906708
y: 33.0048751831
theta: 4.75074195862
speed: 13.5059232712
id: 1
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: -2.82023906708
y: 33.0048751831
theta: 4.75074195862
speed: 13.5059232712
id: 1
t: 68
xxx after update is x: -2.75698518753
y: 32.5160903931
theta: 4.6547832489
speed: 13.9119949341
id: 1
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.75698518753
y: 32.5160903931
theta: 4.6547832489
speed: 13.9119949341
id: 1
t: 69
xxx after update is x: -3.23854064941
y: 31.7953453064
theta: 4.76935386658
speed: 14.0535612106
id: 1
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:70




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.23854064941
y: 31.7953453064
theta: 4.76935386658
speed: 14.0535612106
id: 1
t: 70
xxx after update is x: -3.73614788055
y: 30.906124115
theta: 4.60870361328
speed: 14.0816287994
id: 1
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:71


aaaaaa
aaaaaabbbbb
risk is [0.3904540873226204, 0]
222 self.state_dicts[msg.id][msg.t] is (2.9225587844848633, -21.607107162475586, 1.6298679113388062, 11.640637397766113)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: -3.73614788055
y: 30.906124115
theta: 4.60870361328
speed: 14.0816287994
id: 1
t: 71
xxx after update is x: -3.62829303741
y: 29.9759197235
theta: 4.6625752449
speed: 13.635011673
id: 1
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: -3.62829303741
y: 29.9759197235
theta: 4.6625752449
speed: 13.635011673
id: 1
t: 72
xxx after update is x: -2.93268036842
y: 29.7232189178
theta: 4.59636926651
speed: 13.9937543869
id: 1
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.24444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the u:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: 2.92540168762
y: -22.1787452698
theta: 1.51692175865
speed: 12.5137729645
id: 0
t: 69
xxx after update is x: 3.35099864006
y: -22.2551498413
theta: 1.66915380955
speed: 12.2457666397
id: 0
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: 3.35099864006
y: -22.2551498413
theta: 1.66915380955
speed: 12.2457666397
id: 0
t: 70
xxx after update is x: 2.92255878448
y: -21.6071071625
theta: 1.62986791134
speed: 11.6406373978
id: 0
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: 2.92255878448
y: -21.6071071625
theta: 1.62986791134
speed: 11.6406373978
id: 0
t: 71
xxx after update is x: 2.67590522766
y: -20.7900390625
theta: 1.69947516918
speed: 11.3532781601
id: 0
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.2






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: 2.67590522766
y: -20.7900390625
theta: 1.69947516918
speed: 11.3532781601
id: 0
t: 72
xxx after update is x: 3.12527799606
y: -20.743396759
theta: 1.54198813438
speed: 11.4244756699
id: 0
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:
initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$


 self.man_init:
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: 3.12527799606
y: -20.743396759
theta: 1.54198813438
speed: 11.4244756699
id: 0
t: 73
xxx after update is x: 3.15893220901
y: -20.1311817169
theta: 1.56294119358
speed: 11.16289711
id: 0
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 1
current clock is 3.28888888889
!!!!after check statue the self.tag is [3.2888888888888888, 0, 'left']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.28888888889

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.2444444444444445, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.28888888889,(3.1589322090148926, -20.131181716918945, 1.5629411935806274),11,1,3.28888888889,0,left
!!!!change state to get
GET,0,3.28888888889,(3.1589322090148926, -20.131181716918945, 1.5629411935806274),11,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.28888888889
self.communication_details == 0
sending GET,0,3.28888888889,(3.1589322090148926, -20.131181716918945, 1.5629411935806274),11,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
Received -->>: 
current clock is 3.28888888889




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.28888888889
maneuver_negotiatir.py messagepdate function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: -2.93268036842
y: 29.7232189178
theta: 4.59636926651
speed: 13.9937543869
id: 1
t: 73
xxx after update is x: -2.86563777924
y: 29.5342254639
theta: 4.73455286026
speed: 13.9330644608
id: 1
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.28888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.28888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '3.28888888889', 'IntendedCourse': 'left', 'Position': ['3.1589322090148926', ' -20.131181716918945', ' 1.5629411935806274'], 'TagID': '0', 'Type': 'GET', 'Velocity': '11'}
car 1 received GET,0,3.28888888889,(3.1589322090148926, -20.131181716918945, 1.5629411935806274),11,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.146172839506
sender travel direction is:  north
sender earliest entering time is:  1.83838788763
sender last entering time is:  2.24594999913
sender last leaving time is:  4.43394332316
my entering time is:  1.73619262846
my leaving time is:  4.40621241741
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.28888888889
self.communication_details == 0
sending DENY,1,3.28888888889,(-2.932680368423462, 29.72321891784668, 4.59636926651001),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: -2.86563777924
y: 29.5342254639
theta: 4.73455286026
speed: 13.9330644608
id: 1
t: 74
xxx after update is x: -2.90742707253
y: 28.4469146729
theta: 4.79480934143
speed: 14.0031309128
id: 1
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: -2.90742707253
y: 28.4469146729
theta: 4.79480934143
speed: 14.0031309128
id: 1
t: 75
xxx after update is x: -3.68806195259
y: 27.5033054352
theta: 4.7561788559
speed: 14.0634622574
id: 1
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.68806195259
y: 27.5033054352
theta: 4.7561788559
speed: 14.0634622574
id: 1
t: 76
xxx after update is x: -3.29332709312
y: 27.181098938
theta: 4.71976947784
speed: 13.7319335938
id: 1
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:77




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:78


xxx before update is x: -3.29332709312
y: 27.181098938
theta: 4.71976947784
speed: 13.7319335938
id: 1
t: 77
xxx after update is x: -3.06170582771
y: 27.0188827515
theta: 4.61212587357
speed: 13.8644208908
id: 1
t: 78
maneuver_negotiatir.py finish the update agent state fr_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '3.28888888889', 'Position': ['(-2.932680368423462', ' 29.72321891784668', ' 4.59636926651001)'], 'Type': 'DENY'}
car 0 received DENY,1,3.28888888889,(-2.932680368423462, 29.72321891784668, 4.59636926651001),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.2444444444444445, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.2444444444444445, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




finish try maneuver


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: 3.15893220901
y: -20.1311817169
theta: 1.56294119358
speed: 11.16289711
id: 0
t: 74
xxx after update is x: 3.30584001541
y: -19.4641036987
theta: 1.60320222378
speed: 11.2185707092
id: 0
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: 3.30584001541
y: -19.4641036987
theta: 1.60320222378
speed: 11.2185707092
id: 0
t: 75
xxx after update is x: 3.36020469666
y: -19.2276802063
theta: 1.52153527737
speed: 10.7514533997
id: 0
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: 3.36020469666
y: -19.2276802063
theta: 1.52153527737
speed: 10.7514533997
id: 0
t: 76
xxx after update is x: 3.41333317757
y: -18.6899852753
theta: 1.63478446007
speed: 10.7082328796
id: 0
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.41333317757
y: -18.6899852753
theta: 1.63478446007
speed: 10.7082328796
id: 0
t: 77
xxx after update is x: 3.89103412628
y: -17.1970710754
theta: 1.6607915163
speed: 10.1528720856
id: 0
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:78




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: 3.89103412628
y: -17.1970710754
theta: 1.6607915163
speed: 10.1528720856
id: 0
t: 78
xxx after update is x: 3.67682600021
y: -17.538892746
theta: 1.73725032806
speed: 10.210975647
id: 0
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.40980152820032856, 0.36005340522267737]
222 self.state_dicts[msg.id][msg.t] is (-3.0561728477478027, 26.508329391479492, 4.778010845184326, 13.677434921264648)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:80


xxx before update is x: 3.67682600021
y: -17.538892746
theta: 1.73725032806
speed: 10.210975647
id: 0
t: 79
xxx after update is x: 3.43888521194om ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.585036498012438, 0]
222 self.state_dicts[msg.id][msg.t] is (3.8910341262817383, -17.197071075439453, 1.6607915163040161, 10.152872085571289)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: -3.06170582771
y: 27.0188827515
theta: 4.61212587357
speed: 13.8644208908
id: 1
t: 78
xxx after update is x: -3.05617284775
y: 26.5083293915
theta: 4.77801084518
speed: 13.6774349213
id: 1
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.05617284775
y: 26.5083293915
theta: 4.77801084518
speed: 13.6774349213
id: 1
t: 79
xxx after update is x: -3.5455288887
y: 26.2025985718
theta: 4.79523658752
speed: 14.1318445206
id: 1
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:80


Received -->>: 
current clock is 3.55555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.55555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '9', 'Sender': '0', 'TagID': '1', 'Time': '3.55555555556', 'Position': ['(3.43888521194458', ' -17.353271484375', ' 1.3325148820877075)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,3.55555555556,(3.43888521194458, -17.353271484375, 1.3325148820877075),9,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:81


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.55555555556






self.maneuver_requested None
xxx before update is x: -3.5455288887
y: 26.2025985718
theta: 4.79523658752
speed: 14.1318445206
id: 1
t: 80
xxx after update is x: -3.43856906891
y: 24.6164665222
theta: 4.75985479355
speed: 13.7514743805
id: 1
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: -3.43856906891
y: 24.6164665222
theta: 4.75985479355
speed: 13.7514743805
id: 1
t: 81
xxx after update is x: -3.40240526199
y: 24.3585166931
theta: 4.77747964859
speed: 13.6874361038
id: 1
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:83


xxx before update is x: -3.40240526199
y: 24.3585166931
theta: 4.77747964859
speed: 13.6874361038
id: 1
t: 82
xxx after update is x: -3.2090690136
y: 23.5671329498
theta: 4.46252727509
speed: 14.0791702271
id: 1
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.8415818901428664, 0]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.0165770053863525, -15.829245567321777, 1.5596623420715332, 9.014215469360352)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.i
y: -17.3532714844
theta: 1.33251488209
speed: 9.75342464447
id: 0
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.55555555556






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.511111111111111, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 3.55555555556
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.51111111111
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,3.55555555556,(3.43888521194458, -17.353271484375, 1.3325148820877075),9,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 3.55555555556
self.communication_details == 0
sending RELEASE,0,3.55555555556,(3.43888521194458, -17.353271484375, 1.3325148820877075),9,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: 3.43888521194
y: -17.3532714844
theta: 1.33251488209
speed: 9.75342464447
id: 0
t: 80
xxx after update is x: 3.02830052376
y: -16.7957725525
theta: 1.42985272408
speed: 9.80112171173
id: 0
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: 3.02830052376
y: -16.7957725525
theta: 1.42985272408
speed: 9.80112171173
id: 0
t: 81
xxx after update is x: 3.53129673004
y: -16.2945308685
theta: 1.53145396709
speed: 9.29733848572
id: 0
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:83


xxx before update is x: 3.53129673004
y: -16.2945308685
theta: 1.53145396709
speed: 9.29733848572
id: 0
t: 82
xxx after update is x: 3.01657700539
y: -15.8292455673
theta: 1.55966234207
speed: 9.01421546936
id: 0
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.01657700539
y: -15.8292455673
theta: 1.55966234207
speed: 9.01421546936
id: 0
t: 83
xxx after update is x: 3.62782645226
y: -15.0174293518
theta: 1.63868951797
speed: 9.14178276062
id: 0
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:84




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: 3.62782645226
y: -15.0174293518
theta: 1.63868951797
speed: 9.14178276062
id: 0
t: 84
xxx after update is x: 3.53452253342
y: -14.6552057266
theta: 1.64589345455
speed: 8.54590702057
id: 0
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.53452253342
y: -14.6552057266
theta: 1.64589345455
speed: 8.54590702057
id: 0
t: 85
xxx after update is x: 3.45613217354
y: -14.8820867538
theta: 1.5206553936
speed: 8.66843605042
id: 0
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spd == 1):
xxx before update is x: -3.2090690136
y: 23.5671329498
theta: 4.46252727509
speed: 14.0791702271
id: 1
t: 83
xxx after update is x: -3.26168727875
y: 23.2042598724
theta: 4.74210643768
speed: 13.875787735
id: 1
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:84




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: -3.26168727875
y: 23.2042598724
theta: 4.74210643768
speed: 13.875787735
id: 1
t: 84
xxx after update is x: -3.50023198128
y: 22.2936725616
theta: 4.75895452499
speed: 13.8839120865
id: 1
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: -3.50023198128
y: 22.2936725616
theta: 4.75895452499
speed: 13.8839120865
id: 1
t: 85
xxx after update is x: -3.10586929321
y: 20.9542865753
theta: 4.82650661469
speed: 13.8512544632
id: 1
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: -3.10586929321
y: 20.9542865753
theta: 4.82650661469
speed: 13.8512544632
id: 1
t: 86
xxx after update is x: -3.08407902718
y: 21.2299213409
theta: 4.70793056488
speed: 13.6664505005
id: 1
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: -3.08407902718
y: 21.2299213409
theta: 4.70793056488
speed: 13.6664505005
id: 1
t: 87
xxx after update is x: -3.00539183617
y: 20.5468006134
theta: 4.69421434402
speed: 13.6806163788
id: 1
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.5725249918179559, 1.0000000000000007]
222 self.state_dicts[msg.id][msg.t] is (3.735405683517456, -13.963627815246582, 1.7111924886703491, 8.246875762939453)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
current clock is 3.91111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.91111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '3.91111111111', 'IntendedCourse': 'left', 'Position': ['3.735405683517456', ' -13.963627815246582', ' 1.7111924886703491'], 'TagID': '0', 'Type': 'GET', 'Velocity': '8'}
car 1 received GET,0,3.91111111111,(3.735405683517456, -13.963627815246582, 1.7111924886703491),8,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.173827160494
sender travel direction is:  north
sender earliest entering time is:  1.22620541144
sender last entering time is:  2.17382716049
sender last leaving time is:  4.54712541692
my entering time is:  1.11675236021
my leaving time is:  3.13967755993
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.91111111111
self.communication_details == 0
sending DENY,1,3.91111111in:86


risk is [0.3346520476797003, 0.36245824274797567]
222 self.state_dicts[msg.id][msg.t] is (-3.1058692932128906, 20.954286575317383, 4.826506614685059, 13.8512544631958)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: 3.45613217354
y: -14.8820867538
theta: 1.5206553936
speed: 8.66843605042
id: 0
t: 86
xxx after update is x: 3.36786341667
y: -14.1116580963
theta: 1.69855356216
speed: 8.42370223999
id: 0
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: 3.36786341667
y: -14.1116580963
theta: 1.69855356216
speed: 8.42370223999
id: 0
t: 87
xxx after update is x: 3.73540568352
y: -13.9636278152
theta: 1.71119248867
speed: 8.24687576294
id: 0
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.91111111111

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.8666666666666667, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.91111111111,(3.735405683517456, -13.963627815246582, 1.7111924886703491),8,1,3.28888888889,0,left
!!!!change state to get
GET,0,3.91111111111,(3.735405683517456, -13.963627815246582, 1.7111924886703491),8,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.91111111111
self.communication_details == 0
sending GET,0,3.91111111111,(3.735405683517456, -13.963627815246582, 1.7111924886703491),8,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.91111111111






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0
Received -->>: 
current clock is 3.91111111111




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.91111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '14', 'Sender': '1', 'TagID': '1', 'Time': '3.91111111111', 'Position': ['(-3.5455288887023926', ' 26.202598571777344', ' 4.795236587524414)'], 'Type': 'DENY'}
car 0 received DENY,1,3.91111111111,(-3.5455288887023926, 26.202598571777344, 4.795236587524414),14,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.8666666666666667, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.8666666666666667, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update 111,(-3.5455288887023926, 26.202598571777344, 4.795236587524414),14,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.91111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: -3.00539183617
y: 20.5468006134
theta: 4.69421434402
speed: 13.6806163788
id: 1
t: 88
xxx after update is x: -2.66923093796
y: 19.7644386292
theta: 4.73968839645
speed: 13.8100728989
id: 1
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:90


xxx before update is x: -2.66923093796
y: 19.7644386292
theta: 4.73968839645
speed: 13.8100728989
id: 1
t: 89
xxx after update is x: -3.4068543911
y: 19.481803894
theta: 4.74631023407
speed: 13.3453245163
id: 1
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: -3.4068543911
y: 19.481803894
theta: 4.74631023407
speed: 13.3453245163
id: 1
t: 90
xxx after update is x: -3.29820489883
y: 18.0230712891
theta: 4.83281707764
speed: 14.0967693329
id: 1
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:92


xxx before update is x: -3.29820489883
y: 18.0230712891
theta: 4.83281707764
speed: 14.0967693329
id: 1
t: 91
xxx after update is x: -2.79710292816
y: 18.1410827637
theta: 4.59578180313
speed: 13.5708065033
id: 1
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.2502738820987605, 0.9999999999999982]
222 self.state_dicts[msg.id][msg.t] is (3.3715920448303223, -12.339767456054688, 1.648025631904602, 7.263567924499512)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: -2.79710292816
y: 18.1410827637
theta: 4.59578180313
speed: 13.5708065033
id: 1
t: 92
xxx after update is x: -3.57121348381
y: 17.6080589294
theta: 4.60707569122
speed: 14.0178365707
id: 1
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: -3.57121348381
y: 17.6080589294
theta: 4.60707569122
speed: 14.0178365707
id: 1
t: 93
xxx after update is x: -3.08719325066
y: 16.8101711273
theta: 4.56006622314
speed: 13.8905763626
id: 1
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: -3.08719325066
y: 16.8101711273
theta: 4.56006622314
speed: 13.8905763626
id: 1
t: 94
xxx after update is x: -3.50508069992
y: 16.6345348358
theta: 4.8193359375
speed: 14.0501670837
id: 1
t: 95
maneuver_negotiatir.pyfunction
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: 3.73540568352
y: -13.9636278152
theta: 1.71119248867
speed: 8.24687576294
id: 0
t: 88
xxx after update is x: 3.64164233208
y: -14.2101793289
theta: 1.65560281277
speed: 7.61488485336
id: 0
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:90


xxx before update is x: 3.64164233208
y: -14.2101793289
theta: 1.65560281277
speed: 7.61488485336
id: 0
t: 89
xxx after update is x: 3.42153215408
y: -13.7215185165
theta: 1.48241388798
speed: 7.63270616531
id: 0
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: 3.42153215408
y: -13.7215185165
theta: 1.48241388798
speed: 7.63270616531
id: 0
t: 90
xxx after update is x: 3.09192872047
y: -12.7585840225
theta: 1.69515573978
speed: 7.07474565506
id: 0
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.09192872047
y: -12.7585840225
theta: 1.69515573978
speed: 7.07474565506
id: 0
t: 91
xxx after update is x: 3.37159204483
y: -12.3397674561
theta: 1.6480256319
speed: 7.2635679245
id: 0
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:92




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: 3.37159204483
y: -12.3397674561
theta: 1.6480256319
speed: 7.2635679245
id: 0
t: 92
xxx after update is x: 3.38494277
y: -11.6344575882
theta: 1.65263533592
speed: 7.12508916855
id: 0
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: 3.38494277
y: -11.6344575882
theta: 1.65263533592
speed: 7.12508916855
id: 0
t: 93
xxx after update is x: 3.22535991669
y: -12.1759929657
theta: 1.55631530285
speed: 6.9370470047
id: 0
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.48008511665654524, 0.18096442370227095]
222 self.state_dicts[msg.id][msg.t] is (-3.087193250656128, 16.810171127319336, 4.560066223144531, 13.890576362609863)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.22535991669
y: -12.1759929657
theta: 1.55631530285
speed: 6.9370470047
id: 0
t: 94
xxx after update is x: 3.61051726341
y: -11.3390769958
theta: 1.49249446392
speed: 6.49079799652
id: 0
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:95




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: 3.61051726341
y: -11.3390769958
theta: 1.49249446392
speed: 6.49079799652
id: 0
t: 95
xxx after update is x: 2.80610322952
y: -12.045759201
theta: 1.62986934185
speed: 6.38048028946
id: 0
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try  finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: -3.50508069992
y: 16.6345348358
theta: 4.8193359375
speed: 14.0501670837
id: 1
t: 95
xxx after update is x: -2.88608431816
y: 15.221953392
theta: 4.76910305023
speed: 14.0210475922
id: 1
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.26666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.26666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '6', 'Sender': '0', 'TagID': '1', 'Time': '4.26666666667', 'Position': ['(2.806103229522705', ' -12.045759201049805', ' 1.6298693418502808)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.26666666667,(2.806103229522705, -12.045759201049805, 1.6298693418502808),6,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.26666666667






self.maneuver_requested None
aaaaaa
aaaaaabbbbb
risk is [0.5545301401668796, 1.0000000000000002]
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (2.806103229522705, -12.045759201049805, 1.6298693418502808, 6.3804802894592285)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.88608431816
y: 15.221953392
theta: 4.76910305023
speed: 14.0210475922
id: 1
t: 96
xxx after update is x: -3.19749689102
y: 14.8376522064
theta: 4.83082580566
speed: 13.9202165604
id: 1
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:97




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: -3.19749689102
y: 14.8376522064
theta: 4.83082580566
speed: 13.9202165604
id: 1
t: 97
xxx after update is x: -3.26478171349
y: 14.0966291428
theta: 4.73485088348
speed: 13.8344650269
id: 1
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: -3.26478171349
y: 14.0966291428
theta: 4.73485088348
speed: 13.8344650269
id: 1
t: 98
xxx after update is x: -3.20882868767
y: 13.9275245667
theta: 4.76377916336
speed: 13.8829841614
id: 1
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: -3.20882868767
y: 13.9275245667
theta: 4.76377916336
speed: 13.8829841614
id: 1
t: 99
xxx after update is x: -3.24489331245
y: 13.4360485077
theta: 4.50299549103
speed: 13.9950437546
id: 1
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: -3.24489331245
y: 13.4360485077
theta: 4.50299549103
speed: 13.9950437546
id: 1
t: 100
xxx after update is x: -3.3271446228
y: 12.721829maneuver function update -. strat
current clock is 4.26666666667






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.266666666666667, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.26666666667
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.26666666667
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,4.26666666667,(2.806103229522705, -12.045759201049805, 1.6298693418502808),6,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 4.26666666667
self.communication_details == 0
sending RELEASE,0,4.26666666667,(2.806103229522705, -12.045759201049805, 1.6298693418502808),6,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.80610322952
y: -12.045759201
theta: 1.62986934185
speed: 6.38048028946
id: 0
t: 96
xxx after update is x: 3.44800758362
y: -11.2407045364
theta: 1.63158512115
speed: 6.52341651917
id: 0
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:97




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: 3.44800758362
y: -11.2407045364
theta: 1.63158512115
speed: 6.52341651917
id: 0
t: 97
xxx after update is x: 3.37783074379
y: -11.1476898193
theta: 1.46884155273
speed: 5.48981189728
id: 0
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: 3.37783074379
y: -11.1476898193
theta: 1.46884155273
speed: 5.48981189728
id: 0
t: 98
xxx after update is x: 3.38888645172
y: -10.8281126022
theta: 1.63188660145
speed: 6.07417440414
id: 0
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.5216046345264138, 0.0008219252937733124]
222 self.state_dicts[msg.id][msg.t] is (-3.2088286876678467, 13.92752456665039, 4.763779163360596, 13.882984161376953)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: 3.38888645172
y: -10.8281126022
theta: 1.63188660145
speed: 6.07417440414
id: 0
t: 99
xxx after update is x: 2.87974047661
y: -10.0447120667
theta: 1.61146497726
speed: 5.15682792664
id: 0
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: 2.87974047661
y: -10.0447120667
theta: 1.61146497726
speed: 5.15682792664
id: 0
t: 100
xxx after update is x: 3.29810190201
y: -10.3368759155
theta: 1.70231759548
speed: 5.31409549713
id: 0
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: 3.29810190201
y: -10.3368759155
theta: 1.70231759548
speed: 5.31409549713
id: 0
t: 101
xxx after update is x: 3.4922811985
y: -10.1834516525
theta: 1.51822638512
speed: 4.67917871475
id: 0
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.4922811985
y: -10.1834516525
theta: 1.51822638512
speed: 4.67917871475
id: 0
t: 102
xxx after update is x: 2.92934441566
y: -9.59370136261
theta: 1.81300604343
speed: 4.5718255043
id: 0
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:103


maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 4.57777777778

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.5777777777777775, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.57777777778,(2.929344415664673, -9.593701362609863, 1.813006043434143),4,1,3.28888888889,0,left
!!!!change state to get
GET,0,4.57777777778,(2.929344415664673, -9.593701362609863, 1.813006043434143),4,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 4.57777777778
self.communication_details == 0
sending GET,0,4.57777777778,(2.929344415664673, -9.593701362609863, 1.813006043434143),4,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
Received -->>: 
current clock is 4.57777777778




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 4.57777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '14', 'Sender': '1', 'TagID': '1', 'Time': '4.57777777778', 'Position': ['(-2.8860843181610107', ' 15.221953392028809', ' 4.769103050231934)'], 'Type': 'DENY'}
car 0 received DENY,1,4.57777777778,(-2.8860843181610107, 15.221953392028809, 4.769103050231934),14,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.5777777777777775, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [4.5777777777777775, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.57777777778






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: 2.92934441566
y: -9.59370136261
theta: 1.81300604343
speed: 4.5718255043
id: 0
t: 103
xxx after update is x: 3.16116642952
y: -9.3587846756
theta: 1.62055766582
speed: 4.23839187622
id: 0
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
membership is [4.5777777777777775, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.57777777778
(RATE*SLOWDOWN) is 22.5
MR[0] is 4144
theta: 4.56464099884
speed: 13.6761226654
id: 1
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.6402643575303106, 1.0]
222 self.state_dicts[msg.id][msg.t] is (3.2981019020080566, -10.336875915527344, 1.7023175954818726, 5.314095497131348)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: -3.3271446228
y: 12.7218294144
theta: 4.56464099884
speed: 13.6761226654
id: 1
t: 101
xxx after update is x: -2.7577495575
y: 11.7524909973
theta: 4.81926727295
speed: 13.9324703217
id: 1
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: -2.7577495575
y: 11.7524909973
theta: 4.81926727295
speed: 13.9324703217
id: 1
t: 102
xxx after update is x: -3.51680254936
y: 11.2924346924
theta: 4.64075374603
speed: 13.9560098648
id: 1
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.57777777778




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.57777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '4.57777777778', 'IntendedCourse': 'left', 'Position': ['2.929344415664673', ' -9.593701362609863', ' 1.813006043434143'], 'TagID': '0', 'Type': 'GET', 'Velocity': '4'}
car 1 received GET,0,4.57777777778,(2.929344415664673, -9.593701362609863, 1.813006043434143),4,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.203456790124
sender travel direction is:  north
sender earliest entering time is:  0.61661933169
sender last entering time is:  2.20345679012
sender last leaving time is:  4.57675504655
my entering time is:  0.480067643531
my leaving time is:  1.83667849694
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 4.57777777778
self.communication_details == 0
sending DENY,1,4.57777777778,(-2.8860843181610107, 15.221953392028809, 4.769103050231934),14,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: -3.51680254936
y: 11.2924346924
theta: 4.64075374603
speed: 13.9560098648
id: 1
t: 103
xxx after update is x: -3.62222719193
y: 11.3384752274
theta: 4.73138856888
speed: 14.1724090576
id: 1
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.62222222222






self.maneuver_requested None
Received -->>: 
current clock is 4.62222222222




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.62222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '4', 'Sender': '0', 'TagID': '1', 'Time': '4.57777777778', 'Position': ['(2.929344415664673', ' -9.593701362609863', ' 1.813006043434143)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.57777777778,(2.929344415664673, -9.593701362609863, 1.813006043434143),4,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.47616912689621405, 1.0000000000000002]
222 self.state_dicts[msg.id][msg.t] is (3.1611664295196533, -9.358784675598145, 1.6205576658248901, 4.238391876220703)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:105


xxx before update is x: -3.62222719193
y: 11.3384752274
theta: 4.73138856888
speed: 14.1724090576
id: 1
t: 104
xxx after update is x: -2.97521662712
y: 10.1516389847
theta: 4.67601680756
speed: 14.2086935043
id: 1
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: -2.97521662712
y: 10.1516389847
theta: 4.67601680756
speed: 14.2086935043
id: 1
t: 105
xxx after update is x: -3.17023777962
y: 9.67098331451
theta: 4.70950603485
speed: 14.0181341171
id: 1
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: -3.17023777962
y: 9.67098331451
theta: 4.70950603485
speed: 14.0181341171
id: 1
t: 106
xxx after update is x: -3.86980056763
y: 8.79406166077
theta: 4.72690200806
speed: 13.7750577927
id: 1
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: -3.86980056763
y: 8.79406166077
theta: 4.72690200806
speed: 13.7750577927
id: 1
t: 107
xxx after update is x: -3.60924220085
y: 8.21621417999
theta: 4.5984005928
speed: 14.0544137955
id: 1
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: -3.60924220085
y: 8.21621417999
theta: 4.5984005928
speed: 14.0544137955
id: 1
t: 108
xxx after update is x: -3.14343738556
y: 8.0118227005
theta: 4.69292974472
speed: 13.8757781982
id: 1
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.5705636085221161, 1.0000000000000002]
222 self.state_dicts[msg.id][msg.t] is (3.4667558670043945, -8.738197326660156, 1.528141975402832, 3.149778127670288)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:110


xxx before update is x: -3.14343738556
y: 8.0118227005
theta: 4.69292974472
speed: 13.8757781982
id: 1
t: 109
xxx after update is x: -4.0057682991
y: 7.01656389236
theta: 4.63018751144
speed: 13.8541164398
id: 1
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed4.57777777778
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,4.57777777778,(2.929344415664673, -9.593701362609863, 1.813006043434143),4,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 4.62222222222
self.communication_details == 0
sending RELEASE,0,4.57777777778,(2.929344415664673, -9.593701362609863, 1.813006043434143),4,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.28652344734877083, 0.004122401131018804]
222 self.state_dicts[msg.id][msg.t] is (-3.622227191925049, 11.338475227355957, 4.731388568878174, 14.172409057617188)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:105


xxx before update is x: 3.16116642952
y: -9.3587846756
theta: 1.62055766582
speed: 4.23839187622
id: 0
t: 104
xxx after update is x: 2.71727848053
y: -9.58968257904
theta: 1.46908485889
speed: 4.06026315689
id: 0
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.71727848053
y: -9.58968257904
theta: 1.46908485889
speed: 4.06026315689
id: 0
t: 105
xxx after update is x: 3.23424649239
y: -8.98237514496
theta: 1.5272462368
speed: 3.85746192932
id: 0
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:106




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: 3.23424649239
y: -8.98237514496
theta: 1.5272462368
speed: 3.85746192932
id: 0
t: 106
xxx after update is x: 3.16255927086
y: -8.72658538818
theta: 1.42600572109
speed: 3.87661528587
id: 0
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: 3.16255927086
y: -8.72658538818
theta: 1.42600572109
speed: 3.87661528587
id: 0
t: 107
xxx after update is x: 3.49250245094
y: -8.90048885345
theta: 1.47444117069
speed: 3.25131416321
id: 0
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.49250245094
y: -8.90048885345
theta: 1.47444117069
speed: 3.25131416321
id: 0
t: 108
xxx after update is x: 3.466755867
y: -8.73819732666
theta: 1.5281419754
speed: 3.14977812767
id: 0
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:109




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.466755867
y: -8.73819732666
theta: 1.5281419754
speed: 3.14977812767
id: 0
t: 109
xxx after update is x: 3.37565612793
y: -8.77470207214
theta: 1.52553284168
speed: 2.72621107101
id: 0
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:110




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:111


xxx before update is x: 3.37565612793
y: -8.77470207214
theta: 1.52553284168
speed: 2.72621107101
id: 0
t: 110
xxx after update is x: 3.14877796173
y: -8.55914306641
theta: 1.57600998878
speed: 2.90211582184
id: 0
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 4.93333333333

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.933333333333334, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.93333333333,(3.148777961730957, -8.55914306640625, 1.57600998878479),2,1,3.28888888889,0,left
!!!!change state to get
GET,0,4.93333333333,(3.148777961730957, -8.55914306640625, 1.57600998878479),2,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 4.93333333333
self.communication_details == 0
sending GET,0,4.93333333333,(3.148777961730957, -8.55914306640625, 1.57600998878479),2,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
Received -->>: 
current clock is 4.93333333333




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 4.93333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '14', 'Sender': '1', 'TagID': '1', 'Time': '4.93333333333', 'Position': ['(-3.061066150665283', ' 6.570245742797852', ' 4.7888970375061035)'], 'Type': 'DENY'}
car 0 received DENY,1,4.93333333333,(-3.061066150665283, 6.570245742797852, 4.7888970375061035),14,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.933333333333334, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [4.933333333333334, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:112


xxx before update is x: 3.14877796173
y: -8.55914306641
theta: 1.57600998878
speed: 2.90211582184
id: 0
t: 111
xxx after update is x: 3.5217692852
y: -7.65151023865
theta: 1.43087387085
speed: 2.18163275719
id: 0
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.97777777778






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.933333333333334, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.97777777778
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.93333333333
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,4.97777777778,(3.5217692852020264, -7.651510238647461, 1.4308738708496094),2,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 4.97777777778
self.communication_details == 0
sending RELEASE,0,4.97777777778,(3.5217692852020264, -7.651510238647461, 1.4308738708496094),2,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:111


xxx before update is x: -4.0057682991
y: 7.01656389236
theta: 4.63018751144
speed: 13.8541164398
id: 1
t: 110
xxx after update is x: -3.06106615067
y: 6.5702457428
theta: 4.78889703751
speed: 14.0749616623
id: 1
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.93333333333






self.maneuver_requested None
Received -->>: 
current clock is 4.93333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.93333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '4.93333333333', 'IntendedCourse': 'left', 'Position': ['3.148777961730957', ' -8.55914306640625', ' 1.57600998878479'], 'TagID': '0', 'Type': 'GET', 'Velocity': '2'}
car 1 received GET,0,4.93333333333,(3.148777961730957, -8.55914306640625, 1.57600998878479),2,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.219259259259
sender travel direction is:  north
sender earliest entering time is:  0.567217933741
sender last entering time is:  2.21925925926
sender last leaving time is:  4.59255751568
my entering time is:  0.219259259259
my leaving time is:  1.23231695274
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 4.93333333333
self.communication_details == 0
sending DENY,1,4.93333333333,(-3.061066150665283, 6.570245742797852, 4.7888970375061035),14,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:112


xxx before update is x: -3.06106615067
y: 6.5702457428
theta: 4.78889703751
speed: 14.0749616623
id: 1
t: 111
xxx after update is x: -3.05297112465
y: 5.73102855682
theta: 4.66831111908
speed: 14.0995569229
id: 1
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.97777777778




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.97777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '2', 'Sender': '0', 'TagID': '1', 'Time': '4.97777777778', 'Position': ['(3.5217692852020264', ' -7.651510238647461', ' 1.4308738708496094)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.97777777778,(3.5217692852020264, -7.651510238647461, 1.4308738708496094),2,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:113


xxx before update is x: -3.05297112465
y: 5.73102855682
theta: 4.66831111908
speed: 14.0995569229
id: 1
t: 112
xxx after update is x: -3.09098744392
y: 4.59889316559
theta: 4.82830286026
speed: 13.881149292
id: 1
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.5255548992471463, 0.10507887975821596]
222 self.state_dicts[msg.id][msg.t] is (-3.052971124649048, 5.7310285568237305, 4.66831111907959, 14.099556922912598)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:113


xxx before update is x: 3.5217692852
y: -7.65151023865
theta: 1.43087387085
speed: 2.18163275719
id: 0
t: 112
xxx after update is x: 3.14890837669
y: -7.75432109833
theta: 1.68361186981
speed: 2.08436393738
id: 0
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: 3.14890837669
y: -7.75432109833
theta: 1.68361186981
speed: 2.08436393738
id: 0
t: 113
xxx after update is x: 3.49268245697
y: -7.94466876984
theta: 1.45288991928
speed: 2.0041949749
id: 0
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:115


xxx before update is x: 3.49268245697
y: -7.94466876984
theta: 1.45288991928
speed: 2.0041949749
id: 0
t: 114
xxx after update is x: 3.21540880203
y: -7.24606227875
theta: 1.53981733322
speed: 1.99921154976
id: 0
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: 3.21540880203
y: -7.24606227875
theta: 1.53981733322
speed: 1.99921154976
id: 0
t: 115
xxx after update is x: 3.41404032707
y: -7.72720527649
theta: 1.71759986877
speed: 1.79838204384
id: 0
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: 3.41404032707
y: -7.72720527649
theta: 1.71759986877
speed: 1.79838204384
id: 0
t: 116
xxx after update is x: 3.58004593849
y: -7.15079593658
theta: 1.57088088989
speed: 1.74263226986
id: 0
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: 3.58004593849
y: -7.15079593658
theta: 1.57088088989
speed: 1.74263226986
id: 0
t: 117
xxx after update is x: 3.01383280754
y: -7.54222393036
theta: 1.37016308308
speed: 0.920509397984
id: 0
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.45479990329048176, 0.034842447605664004]
222 self.state_dicts[msg.id][msg.t] is (-3.9726200103759766, 1.8765735626220703, 4.7530903816223145, 14.31177043914795)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.01383280754
y: -7.54222393036
theta: 1.37016308308
speed: 0.920509397984
id: 0
t: 118
xxx after update is x: 3.04240012169
y: -7.25716352463
theta: 1.66477525234
speed: 0.799270868301
id: 0
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:119


maneuver_negotiatir.py in the t_re function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: -3.09098744392
y: 4.59889316559
theta: 4.82830286026
speed: 13.881149292
id: 1
t: 113
xxx after update is x: -3.14775967598
y: 4.54252958298
theta: 4.7958445549
speed: 13.7782497406
id: 1
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.5290751177690591, 1.0]
222 self.state_dicts[msg.id][msg.t] is (3.492682456970215, -7.944668769836426, 1.4528899192810059, 2.004194974899292)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:115


xxx before update is x: -3.14775967598
y: 4.54252958298
theta: 4.7958445549
speed: 13.7782497406
id: 1
t: 114
xxx after update is x: -2.88249349594
y: 3.90198469162
theta: 4.70432519913
speed: 13.5690832138
id: 1
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: -2.88249349594
y: 3.90198469162
theta: 4.70432519913
speed: 13.5690832138
id: 1
t: 115
xxx after update is x: -3.18232107162
y: 3.49236798286
theta: 4.56774187088
speed: 13.5947465897
id: 1
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: -3.18232107162
y: 3.49236798286
theta: 4.56774187088
speed: 13.5947465897
id: 1
t: 116
xxx after update is x: -3.07180070877
y: 2.67534518242
theta: 4.67495203018
speed: 13.9636802673
id: 1
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: -3.07180070877
y: 2.67534518242
theta: 4.67495203018
speed: 13.9636802673
id: 1
t: 117
xxx after update is x: -3.97262001038
y: 1.87657356262
theta: 4.75309038162
speed: 14.3117704391
id: 1
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.5319375224649276, 1.0]
222 self.state_dicts[msg.id][msg.t] is (3.0138328075408936, -7.542223930358887, 1.370163083076477, 0.920509397983551)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.97262001038
y: 1.87657356262
theta: 4.75309038162
speed: 14.3117704391
id: 1
t: 118
xxx after update is x: -3.58206653595
y: 1.66742324829
theta: 4.62701463699
speed: 13.7625226974
id: 1
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:119


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.28888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 5.28888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 5.28888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Stry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 5.28888888889

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.2444444444444445, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,5.28888888889,(3.0424001216888428, -7.2571635246276855, 1.6647752523422241),0,1,3.28888888889,0,left
!!!!change state to get
GET,0,5.28888888889,(3.0424001216888428, -7.2571635246276855, 1.6647752523422241),0,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 5.28888888889
self.communication_details == 0
sending GET,0,5.28888888889,(3.0424001216888428, -7.2571635246276855, 1.6647752523422241),0,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.28888888889






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
Received -->>: 
current clock is 5.28888888889




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 5.28888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GRANT, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '5.28888888889', 'Position': ['(-3.582066535949707', ' 1.6674232482910156', ' 4.627014636993408)'], 'Type': 'GRANT'}
car 0 received GRANT,1,5.28888888889,(-3.582066535949707, 1.6674232482910156, 4.627014636993408),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.2444444444444445, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [5.2444444444444445, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




finish try maneuver
xxx before update is x: 3.04240012169
y: -7.25716352463
theta: 1.66477525234
speed: 0.799270868301
id: 0
t: 119
xxx after update is x: 3.34441256523
y: -7.50831794739
theta: 1.64900004864
speed: 0.854502022266
id: 0
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:120


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.34441256523
y: -7.50831794739
theta: 1.64900004864
speed: 0.854502022266
id: 0
t: 120
xxx after update is x: 3.21149158478
y: -7.74332618713
theta: 1.58073532581
speed: 0.147439613938
id: 0
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:121




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: 3.21149158478
y: -7.74332618713
theta: 1.58073532581
speed: 0.147439613938
id: 0
t: 121
xxx after update is x: 3.5781750679
y: -7.55960178375
ender': '0', 'Time': '5.28888888889', 'IntendedCourse': 'left', 'Position': ['3.0424001216888428', ' -7.2571635246276855', ' 1.6647752523422241'], 'TagID': '0', 'Type': 'GET', 'Velocity': '0'}
car 1 received GET,0,5.28888888889,(3.0424001216888428, -7.2571635246276855, 1.6647752523422241),0,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.235061728395
maneuver_negotiatir.py sender travel direction is none
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, not conlicted
maneuver_negotiatir.py message_processing,!!dd342 change status to GRANT
self.grantID is 0
GRANT,1,5.28888888889,(-3.582066535949707, 1.6674232482910156, 4.627014636993408),13,1,0,0
added car with id 0 to grantlist. current grantlist:  {0: [10.066666666666666, 'left']}
maneuver_negotiatir.py start the update_agent_message
current clock is 5.28888888889
self.communication_details == 0
sending GRANT,1,5.28888888889,(-3.582066535949707, 1.6674232482910156, 4.627014636993408),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
current clock is 5.28888888889


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:120


xxx before update is x: -3.58206653595
y: 1.66742324829
theta: 4.62701463699
speed: 13.7625226974
id: 1
t: 119
xxx after update is x: -3.04817438126
y: 1.09362673759
theta: 4.55850601196
speed: 13.8413667679
id: 1
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.04817438126
y: 1.09362673759
theta: 4.55850601196
speed: 13.8413667679
id: 1
t: 120
xxx after update is x: -3.32890295982
y: 0.549840390682
theta: 4.88856363297
speed: 13.7809228897
id: 1
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:121




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: -3.32890295982
y: 0.549840390682
theta: 4.88856363297
speed: 13.7809228897
id: 1
t: 121
xxx after update is x: -3.30832338333
y: -0.0825803428888
theta: 4.76399707794
speed: 13.9598884583
id: 1
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: -3.30832338333
y: -0.0825803428888
theta: 4.76399707794
speed: 13.9598884583
id: 1
t: 122
xxx after update is x: -3.53248095512
y: -0.83034825325
theta: 4.77642536163
speed: 14.4575395584
id: 1
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.7631291802988086, 0.481599999999998]
222 self.state_dicts[msg.id][msg.t] is (3.272946357727051, -7.662410736083984, 1.5770883560180664, -0.15031108260154724)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: -3.53248095512
y: -0.83034825325
theta: 4.77642536163
speed: 14.4575395584
id: 1
t: 123
xxx after update is x: -3.67772555351
y: -2.06171011925
theta: 4.98480176926
speed: 14.1582403183
id: 1
t: 124
maneuver_negtheta: 1.39053559303
speed: 0.174672424793
id: 0
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: 3.5781750679
y: -7.55960178375
theta: 1.39053559303
speed: 0.174672424793
id: 0
t: 122
xxx after update is x: 3.27294635773
y: -7.66241073608
theta: 1.57708835602
speed: -0.150311082602
id: 0
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.573950766896044, 0.0004533009328335374]
222 self.state_dicts[msg.id][msg.t] is (-3.5324809551239014, -0.8303482532501221, 4.776425361633301, 14.457539558410645)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: 3.27294635773
y: -7.66241073608
theta: 1.57708835602
speed: -0.150311082602
id: 0
t: 123
xxx after update is x: 3.63848829269
y: -7.3619966507
theta: 1.52916812897
speed: -0.25880241394
id: 0
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:125


xxx before update is x: 3.63848829269
y: -7.3619966507
theta: 1.52916812897
speed: -0.25880241394
id: 0
t: 124
xxx after update is x: 2.92523765564
y: -7.03524494171
theta: 1.41210746765
speed: -0.138516888022
id: 0
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: 2.92523765564
y: -7.03524494171
theta: 1.41210746765
speed: -0.138516888022
id: 0
t: 125
xxx after update is x: 3.36711406708
y: -7.32598543167
theta: 1.446860075
speed: -0.0127643849701
id: 0
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: 3.36711406708
y: -7.32598543167
theta: 1.446860075
speed: -0.0127643849701
id: 0
t: 126
xxx after update is x: 3.47796344757
y: -7.24556684494
theta: 1.50541079044
speed: 0.0302691292018
id: 0
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.64444444444






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.644444444444445, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 5.64444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 5.64444444444
self.TMan is 5
Empty
self.agents_to_ask is []
stopped retry timer
deny not in message
maneuver_negotiatir.py in the domaneuver function - start
added car with id 0 to grantlist. current grantlist:  {0: [10.244444444444444, 'left']}
Doing maneuver
maneuver_negotiatir.py finish the do maneuver function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: 3.47796344757
y: -7.24556684494
theta: 1.50541079044
speed: 0.0302691292018
id: 0
t: 127
xxx after update is x: 3.23669314384
y: -7.49856948853
theta: 1.444otiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:125


xxx before update is x: -3.67772555351
y: -2.06171011925
theta: 4.98480176926
speed: 14.1582403183
id: 1
t: 124
xxx after update is x: -2.9994366169
y: -2.36504220963
theta: 4.84968662262
speed: 13.7520265579
id: 1
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: -2.9994366169
y: -2.36504220963
theta: 4.84968662262
speed: 13.7520265579
id: 1
t: 125
xxx after update is x: -3.24876689911
y: -3.47607302666
theta: 4.64140796661
speed: 13.7981758118
id: 1
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.24876689911
y: -3.47607302666
theta: 4.64140796661
speed: 13.7981758118
id: 1
t: 126
xxx after update is x: -3.50510811806
y: -3.39557003975
theta: 4.66829776764
speed: 14.0527515411
id: 1
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:127


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.64444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: -3.50510811806
y: -3.39557003975
theta: 4.66829776764
speed: 14.0527515411
id: 1
t: 127
xxx after update is x: -3.26721835136
y: -3.94670510292
theta: 4.58093166351
speed: 13.7772569656
id: 1
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.9580501785628923, 0.5167999999999984]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.2366931438446045, -7.498569488525391, 1.4441879987716675, -0.11535549908876419)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:129


xxx before update is x: -3.26721835136
y: -3.94670510292
theta: 4.58093166351
speed: 13.7772569656
id: 1
t: 128
xxx after update is x: -3.0723733902
y: -4.24812650681
theta: 4.67456817627
speed: 13.4499177933
id: 1
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.0723733902
y: -4.24812650681
theta: 4.67456817627
speed: 13.4499177933
id: 1
t: 129
xxx after update is x: -3.74993729591
y: -5.22431468964
theta: 4.683781147
speed: 14.0091352463
id: 1
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:130




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:131


xxx before update is x: -3.74993729591
y: -5.22431468964
theta: 4.683781147
speed: 14.0091352463
id: 1
t: 130
xxx after update is x: -3.19403409958
y: -5.84865856171
theta: 4.77114248276
speed: 14.090256691
id: 1
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py u18799877
speed: -0.115355499089
id: 0
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.4318236100948481, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2672183513641357, -3.9467051029205322, 4.580931663513184, 13.777256965637207)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:129


xxx before update is x: 3.23669314384
y: -7.49856948853
theta: 1.44418799877
speed: -0.115355499089
id: 0
t: 128
xxx after update is x: 3.39167261124
y: -7.40997076035
theta: 1.49671840668
speed: 0.422620534897
id: 0
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: 3.39167261124
y: -7.40997076035
theta: 1.49671840668
speed: 0.422620534897
id: 0
t: 129
xxx after update is x: 2.67376756668
y: -7.51753759384
theta: 1.60827851295
speed: 0.568992733955
id: 0
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:131


xxx before update is x: 2.67376756668
y: -7.51753759384
theta: 1.60827851295
speed: 0.568992733955
id: 0
t: 130
xxx after update is x: 3.16734194756
y: -7.66423511505
theta: 1.77369368076
speed: 1.190325737
id: 0
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: 3.16734194756
y: -7.66423511505
theta: 1.77369368076
speed: 1.190325737
id: 0
t: 131
xxx after update is x: 3.36819791794
y: -7.42073249817
theta: 1.5970697403
speed: 0.966850936413
id: 0
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:133


xxx before update is x: 3.36819791794
y: -7.42073249817
theta: 1.5970697403
speed: 0.966850936413
id: 0
t: 132
xxx after update is x: 2.70556998253
y: -7.21433210373
theta: 1.57814085484
speed: 1.38542866707
id: 0
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: 2.70556998253
y: -7.21433210373
theta: 1.57814085484
speed: 1.38542866707
id: 0
t: 133
xxx after update is x: 3.14327001572
y: -7.19722318649
theta: 1.55765962601
speed: 1.76597869396
id: 0
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.14327001572
y: -7.19722318649
theta: 1.55765962601
speed: 1.76597869396
id: 0
t: 134
xxx after update is x: 3.40753293037
y: -7.28221225739
theta: 1.65041744709
speed: 1.76282715797
id: 0
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:135


aaaaaa
risk is [0.9312778169195135, 0.9988219066871025]
222 self.state_dicts[msg.id][msg.t] is (-2.9976000785827637, -8.718749046325684, 4.633236408233643, 13.692631721496582)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
calpdate function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: -3.19403409958
y: -5.84865856171
theta: 4.77114248276
speed: 14.090256691
id: 1
t: 131
xxx after update is x: -3.3501906395
y: -6.66963338852
theta: 4.65533542633
speed: 13.9015464783
id: 1
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:133


xxx before update is x: -3.3501906395
y: -6.66963338852
theta: 4.65533542633
speed: 13.9015464783
id: 1
t: 132
xxx after update is x: -3.52317404747
y: -7.2192440033
theta: 4.65209245682
speed: 14.0578651428
id: 1
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.9334409223600516, 0.48799999999999794]
Stops!
222 self.state_dicts[msg.id][msg.t] is (2.7055699825286865, -7.214332103729248, 1.5781408548355103, 1.3854286670684814)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: -3.52317404747
y: -7.2192440033
theta: 4.65209245682
speed: 14.0578651428
id: 1
t: 133
xxx after update is x: -2.86201310158
y: -7.73691940308
theta: 4.60796499252
speed: 13.4221439362
id: 1
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.95555555556






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:135


xxx before update is x: -2.86201310158
y: -7.73691940308
theta: 4.60796499252
speed: 13.4221439362
id: 1
t: 134
xxx after update is x: -2.99760007858
y: -8.71874904633
theta: 4.63323640823
speed: 13.6926317215
id: 1
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: -2.99760007858
y: -8.71874904633
theta: 4.63323640823
speed: 13.6926317215
id: 1
t: 135
xxx after update is x: -3.31042718887
y: -9.06834411621
theta: 4.64660310745
speed: 13.8759460449
id: 1
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:137


xxx before update is x: -3.31042718887
y: -9.06834411621
theta: 4.64660310745
speed: 13.8759460449
id: 1
t: 136
xxx after update is x: -3.5216319561
y: -9.76240921021
theta: 4.74913740158
speed: 14.2252874374
id: 1
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: -3.5216319561
y: -9.76240921021
theta: 4.74913740158
speed: 14.2252874374
id: 1
t: 137
xxx after update is x: -3.59957385063
y: -10.1634321213
theta: 4.82332420349
speed: 13.9970445633
id: 1
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin functionl update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: 3.40753293037
y: -7.28221225739
theta: 1.65041744709
speed: 1.76282715797
id: 0
t: 135
xxx after update is x: 3.10884380341
y: -7.13773775101
theta: 1.60391008854
speed: 2.08894205093
id: 0
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:137


xxx before update is x: 3.10884380341
y: -7.13773775101
theta: 1.60391008854
speed: 2.08894205093
id: 0
t: 136
xxx after update is x: 3.49237394333
y: -7.67123413086
theta: 1.67204916477
speed: 2.43712162971
id: 0
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.49237394333
y: -7.67123413086
theta: 1.67204916477
speed: 2.43712162971
id: 0
t: 137
xxx after update is x: 3.678835392
y: -7.36087989807
theta: 1.59750938416
speed: 2.75036144257
id: 0
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:138




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.678835392
y: -7.36087989807
theta: 1.59750938416
speed: 2.75036144257
id: 0
t: 138
xxx after update is x: 3.46034646034
y: -7.08886575699
theta: 1.66418397427
speed: 3.06390118599
id: 0
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:139




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: 3.46034646034
y: -7.08886575699
theta: 1.66418397427
speed: 3.06390118599
id: 0
t: 139
xxx after update is x: 3.53096699715
y: -6.89755296707
theta: 1.73365879059
speed: 3.17593717575
id: 0
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: 3.53096699715
y: -6.89755296707
theta: 1.73365879059
speed: 3.17593717575
id: 0
t: 140
xxx after update is x: 2.88809561729
y: -6.15041446686
theta: 1.56972002983
speed: 3.61271977425
id: 0
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: 2.88809561729
y: -6.15041446686
theta: 1.56972002983
speed: 3.61271977425
id: 0
t: 141
xxx after update is x: 3.73280453682
y: -6.71954917908
theta: 1.65646708012
speed: 3.56544756889
id: 0
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: 3.73280453682
y: -6.71954917908
theta: 1.65646708012
speed: 3.56544756889
id: 0
t: 142
xxx after update is x: 3.41054677963
y: -6.25093650818
theta: 1.70709872246
speed: 3.89404368401
id: 0
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.010267719577630261, 0.9986311334960891]
222 self.state_dicts[msg.id][msg.t] is (-2.9750349521636963, -13.180447578430176, 4.809512615203857, 13.924920082092285)
if we hav, finish the n times spin:139

xxx before update is x: -3.59957385063
y: -10.1634321213
theta: 4.82332420349
speed: 13.9970445633
id: 1
t: 138
xxx after update is x: -3.61760997772
y: -10.8315677643
theta: 4.7831568718
speed: 14.020283699
id: 1
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: -3.61760997772
y: -10.8315677643
theta: 4.7831568718
speed: 14.020283699
id: 1
t: 139
xxx after update is x: -3.29301071167
y: -11.3584880829
theta: 4.90612602234
speed: 13.812338829
id: 1
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: -3.29301071167
y: -11.3584880829
theta: 4.90612602234
speed: 13.812338829
id: 1
t: 140
xxx after update is x: -3.07668924332
y: -12.0655651093
theta: 4.81503868103
speed: 13.7508745193
id: 1
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: -3.07668924332
y: -12.0655651093
theta: 4.81503868103
speed: 13.7508745193
id: 1
t: 141
xxx after update is x: -2.85795688629
y: -12.8961791992
theta: 4.78915309906
speed: 14.4566488266
id: 1
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.004624958465859311, 0.4927999999999979]
222 self.state_dicts[msg.id][msg.t] is (3.732804536819458, -6.719549179077148, 1.656467080116272, 3.5654475688934326)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.31111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: -2.85795688629
y: -12.8961791992
theta: 4.78915309906
speed: 14.4566488266
id: 1
t: 142
xxx after update is x: -2.97503495216
y: -13.1804475784
theta: 4.8095126152
speed: 13.9249200821
id: 1
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: -2.97503495216
y: -13.1804475784
theta: 4.8095126152
speed: 13.9249200821
id: 1
t: 143
xxx after update is x: -3.51651024818
y: -13.6566524506
theta: 4.81400966644
speed: 14.0149068832
id: 1
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: -3.51651024818
y: -13.6566524506
theta: 4.81400966644
speed: 14.0149068832
id: 1
t: 144
xxx after update is x: -3.56524968147
y: -14.5834722519
theta: 4.84439611435
speed: 13.8617668152
id: 1
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
!!! change status from grant to normal
current clock is 6.44444444444
!!!threading.Timer
tgarnt done


going to the update function
sim.py in the sim.py update function 
targetspeed < sele all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.41054677963
y: -6.25093650818
theta: 1.70709872246
speed: 3.89404368401
id: 0
t: 143
xxx after update is x: 3.34855794907
y: -5.99928283691
theta: 1.53035640717
speed: 4.27334499359
id: 0
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:144




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: 3.34855794907
y: -5.99928283691
theta: 1.53035640717
speed: 4.27334499359
id: 0
t: 144
xxx after update is x: 3.11914682388
y: -5.95319890976
theta: 1.52650928497
speed: 4.56146287918
id: 0
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.11914682388
y: -5.95319890976
theta: 1.52650928497
speed: 4.56146287918
id: 0
t: 145
xxx after update is x: 4.14762020111
y: -5.27360343933
theta: 1.69554829597
speed: 4.95602464676
id: 0
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:146




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: 4.14762020111
y: -5.27360343933
theta: 1.69554829597
speed: 4.95602464676
id: 0
t: 146
xxx after update is x: 3.25118160248
y: -5.120449543
theta: 1.66366910934
speed: 5.81715679169
id: 0
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: 3.25118160248
y: -5.120449543
theta: 1.66366910934
speed: 5.81715679169
id: 0
t: 147
xxx after update is x: 3.64688968658
y: -5.10452461243
theta: 1.64720487595
speed: 5.42557477951
id: 0
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: 3.64688968658
y: -5.10452461243
theta: 1.64720487595
speed: 5.42557477951
id: 0
t: 148
xxx after update is x: 2.77670431137
y: -5.42759275436
theta: 1.73363900185
speed: 5.56419706345
id: 0
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [6.185496115099091e-67, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.467020273208618, -17.159893035888672, 4.55269718170166, 13.923857688903809)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: 2.77670431137
y: -5.42759275436
theta: 1.73363900185
speed: 5.56419706345
id: 0
t: 149
xxx after update is x: 2.99099111557
y: -4.81201410294
theta: 1.8069729805
speed: 5.90888309479
id: 0
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: 2.99099111557
y: -4.81201410294
theta: 1.8069729805
speef.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.56524968147
y: -14.5834722519
theta: 4.84439611435
speed: 13.8617668152
id: 1
t: 145
xxx after update is x: -3.13275170326
y: -15.1570425034
theta: 4.63501167297
speed: 13.5001621246
id: 1
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:146




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: -3.13275170326
y: -15.1570425034
theta: 4.63501167297
speed: 13.5001621246
id: 1
t: 146
xxx after update is x: -3.41983103752
y: -15.6403055191
theta: 4.56552267075
speed: 14.4156122208
id: 1
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [1.825720377101516e-56, 0.5503999999999993]
222 self.state_dicts[msg.id][msg.t] is (3.2511816024780273, -5.120449542999268, 1.6636691093444824, 5.817156791687012)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: -3.41983103752
y: -15.6403055191
theta: 4.56552267075
speed: 14.4156122208
id: 1
t: 147
xxx after update is x: -3.37903618813
y: -16.0008144379
theta: 4.88871240616
speed: 13.5684185028
id: 1
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: -3.37903618813
y: -16.0008144379
theta: 4.88871240616
speed: 13.5684185028
id: 1
t: 148
xxx after update is x: -3.46702027321
y: -17.1598930359
theta: 4.5526971817
speed: 13.9238576889
id: 1
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: -3.46702027321
y: -17.1598930359
theta: 4.5526971817
speed: 13.9238576889
id: 1
t: 149
xxx after update is x: -3.103505373
y: -17.6972370148
theta: 4.84758663177
speed: 13.9783477783
id: 1
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.66666666667






self.maneuver_requested None
aaaaaa
aaaaaabbbbb
risk is [1.118649872280313e-196, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (2.9909911155700684, -4.812014102935791, 1.8069729804992676, 5.908883094787598)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: -3.103505373
y: -17.6972370148
theta: 4.84758663177
speed: 13.9783477783
id: 1
t: 150
xxx after update is x: -3.01475691795
y: -17.8435878754
theta: 4.74419212341
speed: 14.0028676987
id: 1
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:152


xxx before update is x: -3.01475691795
y: -17.8435878754
theta: 4.74419212341
speed: 14.0028676987
id: 1
t: d: 5.90888309479
id: 0
t: 150
xxx after update is x: 2.90383982658
y: -4.92998361588
theta: 1.82791078091
speed: 6.2335190773
id: 0
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:152


xxx before update is x: 2.90383982658
y: -4.92998361588
theta: 1.82791078091
speed: 6.2335190773
id: 0
t: 151
xxx after update is x: 2.97085857391
y: -3.39217281342
theta: 1.76705503464
speed: 6.49513435364
id: 0
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [2.3238072842826007e-178, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1943624019622803, -19.082469940185547, 4.823012351989746, 14.165197372436523)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:153


xxx before update is x: 2.97085857391
y: -3.39217281342
theta: 1.76705503464
speed: 6.49513435364
id: 0
t: 152
xxx after update is x: 2.59530425072
y: -3.86527395248
theta: 1.90202331543
speed: 6.95862007141
id: 0
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:154


xxx before update is x: 2.59530425072
y: -3.86527395248
theta: 1.90202331543
speed: 6.95862007141
id: 0
t: 153
xxx after update is x: 2.87835645676
y: -4.37197542191
theta: 1.9202824831
speed: 6.71817207336
id: 0
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:155


xxx before update is x: 2.87835645676
y: -4.37197542191
theta: 1.9202824831
speed: 6.71817207336
id: 0
t: 154
xxx after update is x: 2.70580911636
y: -3.44709706306
theta: 1.7729883194
speed: 7.01357555389
id: 0
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: 2.70580911636
y: -3.44709706306
theta: 1.7729883194
speed: 7.01357555389
id: 0
t: 155
xxx after update is x: 3.25043296814
y: -3.65615272522
theta: 1.84076392651
speed: 7.58004808426
id: 0
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: 3.25043296814
y: -3.65615272522
theta: 1.84076392651
speed: 7.58004808426
id: 0
t: 156
xxx after update is x: 2.69528651237
y: -2.65399694443
theta: 1.87803065777
speed: 7.96364212036
id: 0
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [2.2008127033600084e-268, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1600916385650635, -21.85338020324707, 4.621931552886963, 13.864439964294434)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: 2.69528651237
y: -2.65399694443
theta: 1.87803065777
speed: 7.96364212036
id: 0
t: 157
xxx after update is x: 2.21533346176
y: -2.27490282059
theta: 1.841151
xxx after update is x: -3.19436240196
y: -19.0824699402
theta: 4.82301235199
speed: 14.1651973724
id: 1
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:153


xxx before update is x: -3.19436240196
y: -19.0824699402
theta: 4.82301235199
speed: 14.1651973724
id: 1
t: 152
xxx after update is x: -3.36724328995
y: -19.2873516083
theta: 4.7815117836
speed: 13.9933013916
id: 1
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [1.085219586700801e-207, 0.502399999999998]
222 self.state_dicts[msg.id][msg.t] is (2.595304250717163, -3.865273952484131, 1.9020233154296875, 6.958620071411133)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:154


xxx before update is x: -3.36724328995
y: -19.2873516083
theta: 4.7815117836
speed: 13.9933013916
id: 1
t: 153
xxx after update is x: -3.37537932396
y: -20.242433548
theta: 4.65706062317
speed: 14.0378112793
id: 1
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
tgarnt done


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:155


xxx before update is x: -3.37537932396
y: -20.242433548
theta: 4.65706062317
speed: 14.0378112793
id: 1
t: 154
xxx after update is x: -3.12662792206
y: -20.4099178314
theta: 4.7656993866
speed: 14.2320404053
id: 1
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: -3.12662792206
y: -20.4099178314
theta: 4.7656993866
speed: 14.2320404053
id: 1
t: 155
xxx after update is x: -3.48596739769
y: -21.0428905487
theta: 4.67430257797
speed: 13.9431352615
id: 1
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: -3.48596739769
y: -21.0428905487
theta: 4.67430257797
speed: 13.9431352615
id: 1
t: 156
xxx after update is x: -3.16009163857
y: -21.8533802032
theta: 4.62193155289
speed: 13.8644399643
id: 1
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: -3.16009163857
y: -21.8533802032
theta: 4.62193155289
speed: 13.8644399643
id: 1
t: 157
xxx after update is x: -3.49026656151
y: -22.04429245
theta: 4.5818400383
speed: 13.6448249817
id: 1
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [1.3281791234800358e-297, 0.5215999999999985]
222 self.state_dicts[msg.id][msg.t] is (2.2153334617614746, -2.274902820587158, 1.8411022424697876, 7.6793999671936035)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.02222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:159


xxx before update is x: -3.49026656151
y: -22.04429245
theta: 4.5818400383
speed: 13.6448249817
id: 1
t: 158
xxx after update is x: -3.46064972878
y: -23.3260116577
theta: 4.61297130585
speed: 13.6365318298
id: 1
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:160


xxx before update is x: -3.46064972878
y: -23.3260116577
theta: 4.61297130585
speed: 13.6365318298
id: 1
t: 159
xxx after update is x: -3.11619377136
y: -23.863861084
theta: 4.6085562706
speed: 13.8742542267
id: 1
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: -3.11619377136
y: -23.863861084
theta: 4.6085562706
speed: 13.8742542267
id: 1
t: 160
xxx after update is x: -2.94437551498
y: -24.0388736725
theta: 4.76874542236
speed: 14.2182846069
id: 1
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4639999999999981]
222 self.state_dicts[msg.id][msg.t] is (2.225370168685913, -0.7622049450874329, 2.205220937728882, 8.7769193649292)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: -2.94437551498
y: -24.0388736725
theta: 4.76874542236
speed: 14.2182846069
id: 1
t: 161
xxx after update is x: -3.08210325241
y: -24.8205394745
theta: 4.6731095314
speed: 13.964925766
id: 1
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:163


xxx before update is x: -3.08210325241
y: -24.8205394745
theta: 4.6731095314
speed: 13.964925766
id: 1
t: 162
xxx after update is x: -2.79866480827
y: -25.8628425598
theta: 4.53726768494
speed: 13.61921978
id: 1
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: -2.79866480827
y: -25.8628425598
theta: 4.53726768494
speed: 13.61921978
id: 1
t: 163
xxx after update is x: -2.90757226944
y: -25.887802124
theta: 4.92040920258
speed: 13.5557851791
id: 1
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (1.2977913618087769, -0.09865202754735947, 2.3827884197235107, 9.553780555725098)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:165


xxx before update is x: -2.90757226944
y: -25.887802124
theta: 4.92040920258
speed: 13.5557851791
id: 1
t: 164
xxx after update is x: -3.33184862137
y: -26.8443565369
theta: 4.73133325577
speed: 13.7930574417
i10224247
speed: 7.67939996719
id: 0
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:159


xxx before update is x: 2.21533346176
y: -2.27490282059
theta: 1.84110224247
speed: 7.67939996719
id: 0
t: 158
xxx after update is x: 2.02234721184
y: -2.22978687286
theta: 2.05481052399
speed: 8.13078975677
id: 0
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:160


xxx before update is x: 2.02234721184
y: -2.22978687286
theta: 2.05481052399
speed: 8.13078975677
id: 0
t: 159
xxx after update is x: 1.78327190876
y: -1.92700648308
theta: 2.09019398689
speed: 8.51683139801
id: 0
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: 1.78327190876
y: -1.92700648308
theta: 2.09019398689
speed: 8.51683139801
id: 0
t: 160
xxx after update is x: 2.22537016869
y: -0.762204945087
theta: 2.20522093773
speed: 8.77691936493
id: 0
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.944375514984131, -24.03887367248535, 4.768745422363281, 14.218284606933594)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: 2.22537016869
y: -0.762204945087
theta: 2.20522093773
speed: 8.77691936493
id: 0
t: 161
xxx after update is x: 1.77313756943
y: -1.24047875404
theta: 2.26048111916
speed: 9.09065246582
id: 0
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:163


xxx before update is x: 1.77313756943
y: -1.24047875404
theta: 2.26048111916
speed: 9.09065246582
id: 0
t: 162
xxx after update is x: 1.41836881638
y: -0.932004213333
theta: 2.29751682281
speed: 9.34914684296
id: 0
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: 1.41836881638
y: -0.932004213333
theta: 2.29751682281
speed: 9.34914684296
id: 0
t: 163
xxx after update is x: 1.29779136181
y: -0.0986520275474
theta: 2.38278841972
speed: 9.55378055573
id: 0
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.9075722694396973, -25.887802124023438, 4.920409202575684, 13.555785179138184)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:165


xxx before update is x: 1.29779136181
y: -0.0986520275474
theta: 2.38278841972
speed: 9.55378055573
id: 0
t: 164
xxx after update is x: 0.514007210732
y: 0.0721920281649
theta: 2.42410373688
speed: 9.85201263428
id: 0
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion


going td: 1
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.33333333333






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:166


xxx before update is x: -3.33184862137
y: -26.8443565369
theta: 4.73133325577
speed: 13.7930574417
id: 1
t: 165
xxx after update is x: -3.13218975067
y: -27.7868728638
theta: 4.61531352997
speed: 14.0610551834
id: 1
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:167


maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: -3.13218975067
y: -27.7868728638
theta: 4.61531352997
speed: 14.0610551834
id: 1
t: 166
xxx after update is x: -3.59871339798
y: -27.9465236664
theta: 4.59157800674
speed: 13.9514980316
id: 1
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: -3.59871339798
y: -27.9465236664
theta: 4.59157800674
speed: 13.9514980316
id: 1
t: 167
xxx after update is x: -3.14151930809
y: -28.8828907013
theta: 4.58581638336
speed: 14.0719566345
id: 1
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.14151930809
y: -28.8828907013
theta: 4.58581638336
speed: 14.0719566345
id: 1
t: 168
xxx after update is x: -3.41461634636
y: -28.63555336
theta: 4.57841873169
speed: 14.0335893631
id: 1
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:169


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (-0.537268340587616, 0.5460551381111145, 2.4386398792266846, 10.697876930236816)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: -3.41461634636
y: -28.63555336
theta: 4.57841873169
speed: 14.0335893631
id: 1
t: 169
xxx after update is x: -3.39832901955
y: -29.708366394
theta: 4.66940927505
speed: 14.2208938599
id: 1
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.39832901955
y: -29.708366394
theta: 4.66940927505
speed: 14.2208938599
id: 1
t: 170
xxx after update is x: -3.30255818367
y: -30.7841396332
theta: 4.4993481636
speed: 13.9997253418
id: 1
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:171




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: -3.30255818367
y: -30.7841396332
theta: 4.4993481636
speed: 13.9997253418
id: 1
t: 171
xxx after update is x: -3.80878186226
y: -30.7869586945
theta: 4.75170564651
speed: 13.8795862198
id: 1
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight***************o the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:166


xxx before update is x: 0.514007210732
y: 0.0721920281649
theta: 2.42410373688
speed: 9.85201263428
id: 0
t: 165
xxx after update is x: 0.685520470142
y: -0.0864648669958
theta: 2.39522385597
speed: 10.5190057755
id: 0
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: 0.685520470142
y: -0.0864648669958
theta: 2.39522385597
speed: 10.5190057755
id: 0
t: 166
xxx after update is x: 0.202384993434
y: 0.118035197258
theta: 2.40653204918
speed: 10.1954212189
id: 0
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: 0.202384993434
y: 0.118035197258
theta: 2.40653204918
speed: 10.1954212189
id: 0
t: 167
xxx after update is x: -0.368111640215
y: 1.05454969406
theta: 2.49761223793
speed: 10.6634588242
id: 0
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.14151930809021, -28.882890701293945, 4.585816383361816, 14.071956634521484)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: -0.368111640215
y: 1.05454969406
theta: 2.49761223793
speed: 10.6634588242
id: 0
t: 168
xxx after update is x: -0.537268340588
y: 0.546055138111
theta: 2.43863987923
speed: 10.6978769302
id: 0
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: -0.537268340588
y: 0.546055138111
theta: 2.43863987923
speed: 10.6978769302
id: 0
t: 169
xxx after update is x: -1.0893778801
y: 1.11886572838
theta: 2.57512116432
speed: 11.1493377686
id: 0
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:171


xxx before update is x: -1.0893778801
y: 1.11886572838
theta: 2.57512116432
speed: 11.1493377686
id: 0
t: 170
xxx after update is x: -1.111130476
y: 1.01415526867
theta: 2.66146230698
speed: 11.3577823639
id: 0
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.302558183670044, -30.78413963317871, 4.499348163604736, 13.999725341796875)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: -1.111130476
y: 1.01415526867
theta: 2.66146230698
speed: 11.3577823639
id: 0
t: 171
xxx after update is x: -1.79017043114
y: 1.64890658855
theta: 2.61430382729
speed: 11.7882766724
id: 0
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the upd*******
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48799999999999794]
222 self.state_dicts[msg.id][msg.t] is (-1.790170431137085, 1.6489065885543823, 2.6143038272857666, 11.788276672363281)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:173


xxx before update is x: -3.80878186226
y: -30.7869586945
theta: 4.75170564651
speed: 13.8795862198
id: 1
t: 172
xxx after update is x: -3.37360453606
y: -31.5588245392
theta: 4.74630641937
speed: 13.8037004471
id: 1
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: -3.37360453606
y: -31.5588245392
theta: 4.74630641937
speed: 13.8037004471
id: 1
t: 173
xxx after update is x: -3.48374271393
y: -32.3363265991
theta: 4.85464859009
speed: 14.2451181412
id: 1
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.73333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: -3.48374271393
y: -32.3363265991
theta: 4.85464859009
speed: 14.2451181412
id: 1
t: 174
xxx after update is x: -3.51276350021
y: -32.7523460388
theta: 4.67436408997
speed: 13.8348970413
id: 1
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.475199999999998]
222 self.state_dicts[msg.id][msg.t] is (-3.175079584121704, 2.4147045612335205, 2.5189218521118164, 12.400933265686035)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: -3.51276350021
y: -32.7523460388
theta: 4.67436408997
speed: 13.8348970413
id: 1
t: 175
xxx after update is x: -2.80567646027
y: -33.8730545044
theta: 4.60920476913
speed: 13.9373111725
id: 1
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:177


xxx before update is x: -2.80567646027
y: -33.8730545044
theta: 4.60920476913
speed: 13.9373111725
id: 1
t: 176
xxx after update is x: -2.92913913727
y: -34.4035644531
theta: 4.60835170746
speed: 13.8163957596
id: 1
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: -2.92913913727
y: -34.4035644531
theta: 4.60835170746
speed: 13.8163957596
id: 1
t: 177
xxx after update is x: -3.29174017906
y: -34.9331474304
theta: 4.59171056747
speed: 13.7824630737
id: 1
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: -3.29174017906
y: -34.9331474304
theta: 4.59171056747
speed: 13.782463ate function xxx before update is x: -1.79017043114
y: 1.64890658855
theta: 2.61430382729
speed: 11.7882766724
id: 0
t: 172
xxx after update is x: -1.67005562782
y: 2.09050965309
theta: 2.71562075615
speed: 11.9806413651
id: 0
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:173




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: -1.67005562782
y: 2.09050965309
theta: 2.71562075615
speed: 11.9806413651
id: 0
t: 173
xxx after update is x: -2.4809718132
y: 2.31680846214
theta: 2.76029038429
speed: 12.4972047806
id: 0
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: -2.4809718132
y: 2.31680846214
theta: 2.76029038429
speed: 12.4972047806
id: 0
t: 174
xxx after update is x: -3.17507958412
y: 2.41470456123
theta: 2.51892185211
speed: 12.4009332657
id: 0
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.512763500213623, -32.75234603881836, 4.67436408996582, 13.8348970413208)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: -3.17507958412
y: 2.41470456123
theta: 2.51892185211
speed: 12.4009332657
id: 0
t: 175
xxx after update is x: -3.87091636658
y: 3.11477589607
theta: 2.71547269821
speed: 12.555524826
id: 0
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:177


xxx before update is x: -3.87091636658
y: 3.11477589607
theta: 2.71547269821
speed: 12.555524826
id: 0
t: 176
xxx after update is x: -4.43797969818
y: 2.46199893951
theta: 2.8466219902
speed: 12.7802505493
id: 0
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: -4.43797969818
y: 2.46199893951
theta: 2.8466219902
speed: 12.7802505493
id: 0
t: 177
xxx after update is x: -6.20080900192
y: 3.20457434654
theta: 3.05566692352
speed: 13.3361434937
id: 0
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: -6.20080900192
y: 3.20457434654
theta: 3.05566692352
speed: 13.3361434937
id: 0
t: 178
xxx after update is x: -5.65406417847
y: 3.20870447159
theta: 3.03933548927
speed: 13.3204517365
id: 0
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.9086754322052, -35.238338470458984, 4.648768424987793, 14.386178970336914)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:180


xxx before update is x: -5.65406417847
y: 3.20870447159
theta: 3.03933548927
speed0737
id: 1
t: 178
xxx after update is x: -2.90867543221
y: -35.2383384705
theta: 4.64876842499
speed: 14.3861789703
id: 1
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48319999999999796]
222 self.state_dicts[msg.id][msg.t] is (-5.654064178466797, 3.2087044715881348, 3.0393354892730713, 13.320451736450195)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:180


xxx before update is x: -2.90867543221
y: -35.2383384705
theta: 4.64876842499
speed: 14.3861789703
id: 1
t: 179
xxx after update is x: -3.67238807678
y: -35.8937110901
theta: 4.9247546196
speed: 13.6343517303
id: 1
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:181


xxx before update is x: -3.67238807678
y: -35.8937110901
theta: 4.9247546196
speed: 13.6343517303
id: 1
t: 180
xxx after update is x: -2.73637485504
y: -36.5527114868
theta: 4.54625368118
speed: 13.8976459503
id: 1
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.73637485504
y: -36.5527114868
theta: 4.54625368118
speed: 13.8976459503
id: 1
t: 181
xxx after update is x: -3.37351846695
y: -37.6132049561
theta: 4.61639022827
speed: 14.0350484848
id: 1
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:182


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.08888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.37351846695
y: -37.6132049561
theta: 4.61639022827
speed: 14.0350484848
id: 1
t: 182
xxx after update is x: -3.44900488853
y: -37.42212677
theta: 4.71211767197
speed: 13.6118574142
id: 1
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:183


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: -3.44900488853
y: -37.42212677
theta: 4.71211767197
speed: 13.6118574142
id: 1
t: 183
xxx after update is x: -3.60827708244
y: -38.2344017029
theta: 4.73751831055
speed: 13.6374368668
id: 1
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (-8.750871658325195, 3.3683149814605713, 2.7677152156829834, 13.905954360961914)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:185


xxx before update is x: -3.60827708244
y: -38.2344017029
theta: 4.73751831055
speed: 13.6374368668
id: 1
t: 184
xxx after update is x: -3.1010556221
y: -39.4800720215
theta: 4.62055253983
speed: 13.5925273895
id: 1
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py u: 13.3204517365
id: 0
t: 179
xxx after update is x: -6.35686159134
y: 3.37284636497
theta: 3.02513885498
speed: 13.6410932541
id: 0
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -6.35686159134
y: 3.37284636497
theta: 3.02513885498
speed: 13.6410932541
id: 0
t: 180
xxx after update is x: -7.0312204361
y: 3.09265422821
theta: 3.07964015007
speed: 13.6403427124
id: 0
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:181




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:182


xxx before update is x: -7.0312204361
y: 3.09265422821
theta: 3.07964015007
speed: 13.6403427124
id: 0
t: 181
xxx after update is x: -7.39146471024
y: 3.39041280746
theta: 3.22778201103
speed: 13.960808754
id: 0
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:183


xxx before update is x: -7.39146471024
y: 3.39041280746
theta: 3.22778201103
speed: 13.960808754
id: 0
t: 182
xxx after update is x: -8.4060754776
y: 3.73690295219
theta: 3.22259569168
speed: 13.7186880112
id: 0
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: -8.4060754776
y: 3.73690295219
theta: 3.22259569168
speed: 13.7186880112
id: 0
t: 183
xxx after update is x: -8.75087165833
y: 3.36831498146
theta: 2.76771521568
speed: 13.905954361
id: 0
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:185


xxx before update is x: -8.75087165833
y: 3.36831498146
theta: 2.76771521568
speed: 13.905954361
id: 0
t: 184
xxx after update is x: -9.13962268829
y: 3.69993138313
theta: 3.26588606834
speed: 14.1947021484
id: 0
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.10105562210083, -39.480072021484375, 4.6205525398254395, 13.592527389526367)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: -9.13962268829
y: 3.69993138313
theta: 3.26588606834
speed: 14.1947021484
id: 0
t: 185
xxx after update is x: -9.8947763443
y: 3.91910243034
theta: 3.18128442764
speed: 13.8318433762
id: 0
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: -9.8947763443
y: 3.91910243034
theta: 3.18128442764
speed: 13.8318433762
id: 0
t: 186
xxx after update is x: -9.91981506348
y: 3.42658352852
theta: 3.11522316933
speed: 13.9312448502
id: 0
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:188


xxx before update ipdate function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: -3.1010556221
y: -39.4800720215
theta: 4.62055253983
speed: 13.5925273895
id: 1
t: 185
xxx after update is x: -3.06571555138
y: -40.0346221924
theta: 4.58631372452
speed: 14.2238531113
id: 1
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: -3.06571555138
y: -40.0346221924
theta: 4.58631372452
speed: 14.2238531113
id: 1
t: 186
xxx after update is x: -3.22158741951
y: -40.6358451843
theta: 4.80744552612
speed: 13.8118219376
id: 1
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.503999999999998]
222 self.state_dicts[msg.id][msg.t] is (-9.919815063476562, 3.4265835285186768, 3.1152231693267822, 13.931244850158691)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.22158741951
y: -40.6358451843
theta: 4.80744552612
speed: 13.8118219376
id: 1
t: 187
xxx after update is x: -3.84309673309
y: -40.5698928833
theta: 4.81102514267
speed: 13.945110321
id: 1
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:188




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: -3.84309673309
y: -40.5698928833
theta: 4.81102514267
speed: 13.945110321
id: 1
t: 188
xxx after update is x: -3.22198653221
y: -41.5473175049
theta: 4.55030632019
speed: 13.8483009338
id: 1
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: -3.22198653221
y: -41.5473175049
theta: 4.55030632019
speed: 13.8483009338
id: 1
t: 189
xxx after update is x: -2.80789542198
y: -42.1976776123
theta: 4.71775388718
speed: 14.2461090088
id: 1
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.44444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.476799999999998]
222 self.state_dicts[msg.id][msg.t] is (-12.314949035644531, 3.4584174156188965, 3.0279955863952637, 14.027738571166992)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -2.80789542198
y: -42.1976776123
theta: 4.71775388718
speed: 14.2461090088
id: 1
t: 190
xxx after update is x: -3.01475477219
y: -42.8623123169
theta: 4.66300916672
speed: 14.3951053619
id: 1
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.01475477219
y: -42.8623123169
theta: 4.66300916672
speed: 14.3951053619
id: 1
t: 191
xxx after update is x: -2.97127890587
y: -43.3449325562
theta: 4.652496s x: -9.91981506348
y: 3.42658352852
theta: 3.11522316933
speed: 13.9312448502
id: 0
t: 187
xxx after update is x: -10.6296405792
y: 3.83580303192
theta: 3.13117432594
speed: 13.9383478165
id: 0
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.8430967330932617, -40.56989288330078, 4.811025142669678, 13.945110321044922)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: -10.6296405792
y: 3.83580303192
theta: 3.13117432594
speed: 13.9383478165
id: 0
t: 188
xxx after update is x: -11.6030397415
y: 3.56338524818
theta: 3.20811080933
speed: 13.9766626358
id: 0
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -11.6030397415
y: 3.56338524818
theta: 3.20811080933
speed: 13.9766626358
id: 0
t: 189
xxx after update is x: -12.3149490356
y: 3.45841741562
theta: 3.0279955864
speed: 14.0277385712
id: 0
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:190




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -12.3149490356
y: 3.45841741562
theta: 3.0279955864
speed: 14.0277385712
id: 0
t: 190
xxx after update is x: -12.526968956
y: 3.3310213089
theta: 3.33975172043
speed: 13.7544527054
id: 0
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:191




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:192


xxx before update is x: -12.526968956
y: 3.3310213089
theta: 3.33975172043
speed: 13.7544527054
id: 0
t: 191
xxx after update is x: -13.8483352661
y: 3.90226554871
theta: 3.06885886192
speed: 13.6679553986
id: 0
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.9712789058685303, -43.344932556152344, 4.652496337890625, 13.72045612335205)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -13.8483352661
y: 3.90226554871
theta: 3.06885886192
speed: 13.6679553986
id: 0
t: 192
xxx after update is x: -14.5210189819
y: 2.97833347321
theta: 3.26503038406
speed: 14.1748933792
id: 0
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:193




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:194


xxx before update is x: -14.5210189819
y: 2.97833347321
theta: 3.26503038406
speed: 14.1748933792
id: 0
t: 193
xxx after update is x: -14.8835468292
y: 3.26623344421
theta: 3.21985960007
speed: 13.5599250793
id: 0
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:195


xxx before update is x: -14.8835468292
y: 3.26623344421
theta: 3.21985960007
speed: 13.5599250793
id: 0
t: 194
xxx after update is x: -15.3534975052
y: 2.87933789
speed: 13.7204561234
id: 1
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:192


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:193


xxx before update is x: -2.97127890587
y: -43.3449325562
theta: 4.65249633789
speed: 13.7204561234
id: 1
t: 192
xxx after update is x: -3.64453530312
y: -44.3584976196
theta: 4.83606481552
speed: 13.8113164902
id: 1
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-14.521018981933594, 2.9783334732055664, 3.2650303840637207, 14.174893379211426)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:194


xxx before update is x: -3.64453530312
y: -44.3584976196
theta: 4.83606481552
speed: 13.8113164902
id: 1
t: 193
xxx after update is x: -3.17276978493
y: -45.1223068237
theta: 4.7492647171
speed: 13.9425888062
id: 1
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:195


xxx before update is x: -3.17276978493
y: -45.1223068237
theta: 4.7492647171
speed: 13.9425888062
id: 1
t: 194
xxx after update is x: -3.52175927162
y: -45.1190757751
theta: 4.76560497284
speed: 13.8566064835
id: 1
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
removed car with id 0 from grantlist. currentgrantlist: {}


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:196


xxx before update is x: -3.52175927162
y: -45.1190757751
theta: 4.76560497284
speed: 13.8566064835
id: 1
t: 195
xxx after update is x: -3.01847958565
y: -46.106174469
theta: 4.77605867386
speed: 13.8838376999
id: 1
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -3.01847958565
y: -46.106174469
theta: 4.77605867386
speed: 13.8838376999
id: 1
t: 196
xxx after update is x: -3.25329375267
y: -46.4778366089
theta: 4.62258434296
speed: 13.7196512222
id: 1
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.75555555556






self.maneuver_requested None
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.503999999999998]
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-16.66593360900879, 2.6904213428497314, 2.9623687267303467, 13.855154991149902)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:198


xxx before update is x: -3.25329375267
y: -46.4778366089
theta: 4.62258434296
speed: 13.7196512222
id: 1
t: 197
xxx after update is x: -3.70088410378
y: -47.7949142456
theta: 4.49167919159
speed: 13.8704357147
id: 1
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion


goin08005714
theta: 3.21047496796
speed: 13.706700325
id: 0
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:196




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -15.3534975052
y: 2.87908005714
theta: 3.21047496796
speed: 13.706700325
id: 0
t: 195
xxx after update is x: -16.6114597321
y: 3.1270635128
theta: 3.17691612244
speed: 13.7594900131
id: 0
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -16.6114597321
y: 3.1270635128
theta: 3.17691612244
speed: 13.7594900131
id: 0
t: 196
xxx after update is x: -16.665933609
y: 2.69042134285
theta: 2.96236872673
speed: 13.8551549911
id: 0
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:198


xxx before update is x: -16.665933609
y: 2.69042134285
theta: 2.96236872673
speed: 13.8551549911
id: 0
t: 197
xxx after update is x: -17.3753490448
y: 2.96146702766
theta: 3.03712821007
speed: 13.8517818451
id: 0
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.7008841037750244, -47.79491424560547, 4.4916791915893555, 13.87043571472168)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:199


xxx before update is x: -17.3753490448
y: 2.96146702766
theta: 3.03712821007
speed: 13.8517818451
id: 0
t: 198
xxx after update is x: -17.910276413
y: 3.1863052845
theta: 3.23339724541
speed: 13.9168663025
id: 0
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: -17.910276413
y: 3.1863052845
theta: 3.23339724541
speed: 13.9168663025
id: 0
t: 199
xxx after update is x: -18.5668945312
y: 2.78957724571
theta: 3.23514604568
speed: 14.1967067719
id: 0
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -18.5668945312
y: 2.78957724571
theta: 3.23514604568
speed: 14.1967067719
id: 0
t: 200
xxx after update is x: -19.008934021
y: 3.60093021393
theta: 3.20807957649
speed: 13.7309541702
id: 0
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:202


xxx before update is x: -19.008934021
y: 3.60093021393
theta: 3.20807957649
speed: 13.7309541702
id: 0
t: 201
xxx after update is x: -19.7126674652
y: 3.20587730408
theta: 3.30119562149
speed: 13.9305667877
id: 0
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion
removed car with id 0 from grantlist. currentgrantlist: {}


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:203


xxx before update is x: -19.712667465g to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:199


xxx before update is x: -3.70088410378
y: -47.7949142456
theta: 4.49167919159
speed: 13.8704357147
id: 1
t: 198
xxx after update is x: -2.98313546181
y: -48.0018501282
theta: 4.64978790283
speed: 13.7933683395
id: 1
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: -2.98313546181
y: -48.0018501282
theta: 4.64978790283
speed: 13.7933683395
id: 1
t: 199
xxx after update is x: -3.32874202728
y: -48.1773643494
theta: 4.75196552277
speed: 13.7417535782
id: 1
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -3.32874202728
y: -48.1773643494
theta: 4.75196552277
speed: 13.7417535782
id: 1
t: 200
xxx after update is x: -2.55059623718
y: -48.7813529968
theta: 4.70690917969
speed: 13.9871921539
id: 1
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:202


xxx before update is x: -2.55059623718
y: -48.7813529968
theta: 4.70690917969
speed: 13.9871921539
id: 1
t: 201
xxx after update is x: -2.74415063858
y: -49.3969497681
theta: 4.65889310837
speed: 13.9154434204
id: 1
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4943999999999979]
222 self.state_dicts[msg.id][msg.t] is (-19.71266746520996, 3.2058773040771484, 3.3011956214904785, 13.930566787719727)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.74415063858
y: -49.3969497681
theta: 4.65889310837
speed: 13.9154434204
id: 1
t: 202
xxx after update is x: -3.23595285416
y: -49.9758682251
theta: 4.86742162704
speed: 13.8905029297
id: 1
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:203




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:204


xxx before update is x: -3.23595285416
y: -49.9758682251
theta: 4.86742162704
speed: 13.8905029297
id: 1
t: 203
xxx after update is x: -3.75027036667
y: -50.8936920166
theta: 4.73235559464
speed: 14.0542640686
id: 1
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:205


xxx before update is x: -3.75027036667
y: -50.8936920166
theta: 4.73235559464
speed: 14.0542640686
id: 1
t: 204
xxx after update is x: -3.4431078434
y: -51.3407745361
theta: 4.71812105179
speed: 14.024969101
id: 1
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.11111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targe2
y: 3.20587730408
theta: 3.30119562149
speed: 13.9305667877
id: 0
t: 202
xxx after update is x: -19.9057064056
y: 3.55839800835
theta: 3.22548317909
speed: 13.7702560425
id: 0
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.235952854156494, -49.975868225097656, 4.867421627044678, 13.8905029296875)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -19.9057064056
y: 3.55839800835
theta: 3.22548317909
speed: 13.7702560425
id: 0
t: 203
xxx after update is x: -21.0587596893
y: 3.51221895218
theta: 3.1922814846
speed: 14.0689153671
id: 0
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:204




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:205


xxx before update is x: -21.0587596893
y: 3.51221895218
theta: 3.1922814846
speed: 14.0689153671
id: 0
t: 204
xxx after update is x: -21.0900096893
y: 3.60504889488
theta: 3.16133904457
speed: 13.665643692
id: 0
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -21.0900096893
y: 3.60504889488
theta: 3.16133904457
speed: 13.665643692
id: 0
t: 205
xxx after update is x: -22.0497093201
y: 3.4357624054
theta: 3.20064234734
speed: 13.7756147385
id: 0
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:206




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:207


xxx before update is x: -22.0497093201
y: 3.4357624054
theta: 3.20064234734
speed: 13.7756147385
id: 0
t: 206
xxx after update is x: -22.5841350555
y: 3.96583104134
theta: 3.1053340435
speed: 13.9191656113
id: 0
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:208


xxx before update is x: -22.5841350555
y: 3.96583104134
theta: 3.1053340435
speed: 13.9191656113
id: 0
t: 207
xxx after update is x: -23.112745285
y: 3.33148789406
theta: 3.13378691673
speed: 14.1782112122
id: 0
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.460172414779663, -53.05624008178711, 4.790777206420898, 13.733019828796387)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -23.112745285
y: 3.33148789406
theta: 3.13378691673
speed: 14.1782112122
id: 0
t: 208
xxx after update is x: -23.2833824158
y: 3.27320194244
theta: 3.09991168976
speed: 13.9481897354
id: 0
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -23.2833824158
y: 3.27320194244
theta: 3.09991168976
speed: 13.9481897354
id: 0
t: 209
xxx after update is x: -24.5746002197
y: 3.11351633072
theta: 3.1365466tspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:206


xxx before update is x: -3.4431078434
y: -51.3407745361
theta: 4.71812105179
speed: 14.024969101
id: 1
t: 205
xxx after update is x: -3.55234956741
y: -52.6280326843
theta: 4.69177865982
speed: 13.8128757477
id: 1
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48319999999999796]
222 self.state_dicts[msg.id][msg.t] is (-22.04970932006836, 3.435762405395508, 3.2006423473358154, 13.775614738464355)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:207


xxx before update is x: -3.55234956741
y: -52.6280326843
theta: 4.69177865982
speed: 13.8128757477
id: 1
t: 206
xxx after update is x: -2.73552513123
y: -52.5184860229
theta: 4.68456315994
speed: 13.6345024109
id: 1
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:208


xxx before update is x: -2.73552513123
y: -52.5184860229
theta: 4.68456315994
speed: 13.6345024109
id: 1
t: 207
xxx after update is x: -3.46017241478
y: -53.0562400818
theta: 4.79077720642
speed: 13.7330198288
id: 1
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -3.46017241478
y: -53.0562400818
theta: 4.79077720642
speed: 13.7330198288
id: 1
t: 208
xxx after update is x: -3.39687466621
y: -53.9324913025
theta: 4.67475557327
speed: 13.8124017715
id: 1
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.505599999999998]
222 self.state_dicts[msg.id][msg.t] is (-23.283382415771484, 3.2732019424438477, 3.099911689758301, 13.948189735412598)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -3.39687466621
y: -53.9324913025
theta: 4.67475557327
speed: 13.8124017715
id: 1
t: 209
xxx after update is x: -3.03793501854
y: -54.77186203
theta: 4.78783273697
speed: 14.1259336472
id: 1
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:211


xxx before update is x: -3.03793501854
y: -54.77186203
theta: 4.78783273697
speed: 14.1259336472
id: 1
t: 210
xxx after update is x: -2.88370513916
y: -55.375705719
theta: 4.77705097198
speed: 14.0331916809
id: 1
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:212


xxx before update is x: -2.88370513916
y: -55.375705719
theta: 4.77705097198
speed: 14.0331916809
id: 1
t: 211
xxx after update is x: -3.51735687256
y: -55.689163208
theta: 4.6832280159
speed: 13.9854164124
id: 1
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxx1179
speed: 13.8582019806
id: 0
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:211


xxx before update is x: -24.5746002197
y: 3.11351633072
theta: 3.13654661179
speed: 13.8582019806
id: 0
t: 210
xxx after update is x: -24.6667404175
y: 3.31681084633
theta: 3.17703151703
speed: 13.6184225082
id: 0
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -24.6667404175
y: 3.31681084633
theta: 3.17703151703
speed: 13.6184225082
id: 0
t: 211
xxx after update is x: -25.5620632172
y: 3.16603398323
theta: 3.11086916924
speed: 13.8041210175
id: 0
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:212




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -25.5620632172
y: 3.16603398323
theta: 3.11086916924
speed: 13.8041210175
id: 0
t: 212
xxx after update is x: -26.4402427673
y: 3.12992358208
theta: 3.18589091301
speed: 14.0577125549
id: 0
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0873796939849854, -56.72779083251953, 4.644401550292969, 14.216042518615723)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:214


xxx before update is x: -26.4402427673
y: 3.12992358208
theta: 3.18589091301
speed: 14.0577125549
id: 0
t: 213
xxx after update is x: -27.1171569824
y: 3.81778645515
theta: 3.14589762688
speed: 13.6721162796
id: 0
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:215


xxx before update is x: -27.1171569824
y: 3.81778645515
theta: 3.14589762688
speed: 13.6721162796
id: 0
t: 214
xxx after update is x: -27.4657878876
y: 2.83683514595
theta: 3.2673034668
speed: 14.0055599213
id: 0
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:216


xxx before update is x: -27.4657878876
y: 2.83683514595
theta: 3.2673034668
speed: 14.0055599213
id: 0
t: 215
xxx after update is x: -27.9087486267
y: 3.62246441841
theta: 3.28273510933
speed: 13.8896627426
id: 0
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -27.9087486267
y: 3.62246441841
theta: 3.28273510933
speed: 13.8896627426
id: 0
t: 216
xxx after update is x: -28.5705375671
y: 3.46146655083
theta: 3.14766550064
speed: 13.6444196701
id: 0
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:217




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -28.5705375671
y: 3.46146655083
theta: 3.14766550064
speed: 13.6444196701
id: 0
t: 217
xxx after update is x: -29.6080093384
y: 3.2732629776
theta: 3.02310848236
xxxxxmaneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.42222222222






self.maneuver_requested None

(self.id == 1):
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -3.51735687256
y: -55.689163208
theta: 4.6832280159
speed: 13.9854164124
id: 1
t: 212
xxx after update is x: -3.08737969398
y: -56.7277908325
theta: 4.64440155029
speed: 14.2160425186
id: 1
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:214


xxx before update is x: -3.08737969398
y: -56.7277908325
theta: 4.64440155029
speed: 14.2160425186
id: 1
t: 213
xxx after update is x: -3.52483916283
y: -57.2005500793
theta: 4.76765298843
speed: 13.8121356964
id: 1
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:215


xxx before update is x: -3.52483916283
y: -57.2005500793
theta: 4.76765298843
speed: 13.8121356964
id: 1
t: 214
xxx after update is x: -3.39794421196
y: -57.2309646606
theta: 4.64949893951
speed: 13.692158699
id: 1
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5231999999999986]
222 self.state_dicts[msg.id][msg.t] is (-27.465787887573242, 2.8368351459503174, 3.267303466796875, 14.005559921264648)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:216


xxx before update is x: -3.39794421196
y: -57.2309646606
theta: 4.64949893951
speed: 13.692158699
id: 1
t: 215
xxx after update is x: -3.1227684021
y: -58.2527427673
theta: 4.79577970505
speed: 13.9039182663
id: 1
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.1227684021
y: -58.2527427673
theta: 4.79577970505
speed: 13.9039182663
id: 1
t: 216
xxx after update is x: -3.16607689857
y: -58.7769508362
theta: 4.80466938019
speed: 13.8465662003
id: 1
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:217




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.16607689857
y: -58.7769508362
theta: 4.80466938019
speed: 13.8465662003
id: 1
t: 217
xxx after update is x: -3.33665442467
y: -59.0316390991
theta: 4.65882873535
speed: 13.5696468353
id: 1
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:218




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -3.33665442467
y: -59.0316390991
theta: 4.65882873535
speed: 13.5696468353
id: 1
t: 218
xxx after update is x: -3.36113572121
y: -60.7054176331
theta: 4.73745012283
speed: 13.8621463776
id: 1
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finisspeed: 13.8004417419
id: 0
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:218




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -29.6080093384
y: 3.2732629776
theta: 3.02310848236
speed: 13.8004417419
id: 0
t: 218
xxx after update is x: -29.9458656311
y: 3.25814390182
theta: 3.08955454826
speed: 13.69444561
id: 0
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:220


xxx before update is x: -29.9458656311
y: 3.25814390182
theta: 3.08955454826
speed: 13.69444561
id: 0
t: 219
xxx after update is x: -30.542552948
y: 3.33744692802
theta: 3.26425099373
speed: 14.0704107285
id: 0
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5252652168273926, -60.55503845214844, 4.731698989868164, 13.56078052520752)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -30.542552948
y: 3.33744692802
theta: 3.26425099373
speed: 14.0704107285
id: 0
t: 220
xxx after update is x: -31.5681266785
y: 2.68695211411
theta: 3.2875790596
speed: 13.6513299942
id: 0
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:221




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:222


xxx before update is x: -31.5681266785
y: 2.68695211411
theta: 3.2875790596
speed: 13.6513299942
id: 0
t: 221
xxx after update is x: -31.5361232758
y: 2.89762377739
theta: 3.00486826897
speed: 14.0202798843
id: 0
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -31.5361232758
y: 2.89762377739
theta: 3.00486826897
speed: 14.0202798843
id: 0
t: 222
xxx after update is x: -32.2471084595
y: 2.95952343941
theta: 3.15800046921
speed: 14.0147266388
id: 0
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:224


xxx before update is x: -32.2471084595
y: 2.95952343941
theta: 3.15800046921
speed: 14.0147266388
id: 0
t: 223
xxx after update is x: -33.2394294739
y: 3.82550525665
theta: 3.06606698036
speed: 13.7081232071
id: 0
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:225


xxx before update is x: -33.2394294739
y: 3.82550525665
theta: 3.06606698036
speed: 13.7081232071
id: 0
t: 224
xxx after update is x: -33.9310760498
y: 3.71786570549
theta: 3.09771323204
speed: 14.107211113
id: 0
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0940206050872803, -63.45867156982422, 4.864638805389404, 14.09561824798584)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm h the n times spin:220

xxx before update is x: -3.36113572121
y: -60.7054176331
theta: 4.73745012283
speed: 13.8621463776
id: 1
t: 219
xxx after update is x: -3.52526521683
y: -60.5550384521
theta: 4.73169898987
speed: 13.5607805252
id: 1
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion

aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5135999999999983]
222 self.state_dicts[msg.id][msg.t] is (-30.542552947998047, 3.337446928024292, 3.2642509937286377, 14.07041072845459)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.77777777778






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -3.52526521683
y: -60.5550384521
theta: 4.73169898987
speed: 13.5607805252
id: 1
t: 220
xxx after update is x: -3.10169458389
y: -61.4053115845
theta: 4.69061279297
speed: 14.2290649414
id: 1
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.10169458389
y: -61.4053115845
theta: 4.69061279297
speed: 14.2290649414
id: 1
t: 221
xxx after update is x: -3.28388667107
y: -62.1565322876
theta: 4.67493391037
speed: 13.9197063446
id: 1
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:222




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -3.28388667107
y: -62.1565322876
theta: 4.67493391037
speed: 13.9197063446
id: 1
t: 222
xxx after update is x: -3.59133911133
y: -62.5842247009
theta: 4.56060361862
speed: 13.8281621933
id: 1
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:224


xxx before update is x: -3.59133911133
y: -62.5842247009
theta: 4.56060361862
speed: 13.8281621933
id: 1
t: 223
xxx after update is x: -3.02428913116
y: -63.5904159546
theta: 4.9799118042
speed: 13.7942266464
id: 1
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.475199999999998]
222 self.state_dicts[msg.id][msg.t] is (-33.23942947387695, 3.825505256652832, 3.0660669803619385, 13.708123207092285)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:225


xxx before update is x: -3.02428913116
y: -63.5904159546
theta: 4.9799118042
speed: 13.7942266464
id: 1
t: 224
xxx after update is x: -3.09402060509
y: -63.4586715698
theta: 4.86463880539
speed: 14.095618248
id: 1
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:226


xxx before update is x: -3.09402060509
y: -63.4586715698
theta: 4.86463880539
speed: 14.095618248
id: 1
t: 225
xxx after update is x: -2.98679494858
y: -64.4365234375
theta: 5.10504055023
speed: 13.8951730728
id: 1
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -2.98679494858
y: -64.4365234375
theta: 5.10504055023
speed: 13.8951730728
id: 1
t: 226
xxx after update is x: -3.11406612396
y: -65.4377365112
theta: 4.72407341003
speed: 13.9990320206
id: 1
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:228


xxx before update is x: -3.11406612396
y: -65.4377365112
theta: 4.72407341003
speed: 13.9990320206
id: 1
t: 227
xxx after update is x: -3.72159099579
y: -65.3018188477
theta: 4.72278404236
speed: 14.3212842941
id: 1
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-36.054386138916016, 2.932678699493408, 3.0638272762298584, 13.972070693969727)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.1333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -3.72159099579
y: -65.3018188477
theta: 4.72278404236
speed: 14.3212842941
id: 1
t: 228
xxx after update is x: -3.44744634628
y: -66.2946853638
theta: 4.66145372391
speed: 13.4591999054
id: 1
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -3.44744634628
y: -66.2946853638
theta: 4.66145372391
speed: 13.4591999054
id: 1
t: 229
xxx after update is x: -2.97279429436
y: -66.4516983032
theta: 4.61557006836
speed: 13.8148775101
id: 1
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:231


xxx before update is x: -2.97279429436
y: -66.4516983032
theta: 4.61557006836
speed: 13.8148775101
id: 1
t: 230
xxx after update is x: -3.39254498482
y: -67.8203048706
theta: 4.60999488831
speed: 13.7126140594
id: 1
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.539199999999999]
222 self.state_dicts[msg.id][msg.t] is (-37.14469909667969, 3.3340182304382324, 3.2214925289154053, 13.872554779052734)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:232


xxx before update is x: -3.39254498482
y: -67.8203048706
theta: 4.60999488831
speed: 13.7126140594
id: 1
t: 231
xxx after update is x: -2.88222384453
y: -67.8788833618
theta: 4.74129867554
speed: 13.8016281128
id: 1
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -2.88222384453= False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:226


xxx before update is x: -33.9310760498
y: 3.71786570549
theta: 3.09771323204
speed: 14.107211113
id: 0
t: 225
xxx after update is x: -34.5775299072
y: 2.31919836998
theta: 3.15629553795
speed: 13.8081226349
id: 0
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -34.5775299072
y: 2.31919836998
theta: 3.15629553795
speed: 13.8081226349
id: 0
t: 226
xxx after update is x: -34.4378395081
y: 3.28188347816
theta: 3.16198325157
speed: 14.0547819138
id: 0
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:228


xxx before update is x: -34.4378395081
y: 3.28188347816
theta: 3.16198325157
speed: 14.0547819138
id: 0
t: 227
xxx after update is x: -36.0543861389
y: 2.93267869949
theta: 3.06382727623
speed: 13.972070694
id: 0
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -36.0543861389
y: 2.93267869949
theta: 3.06382727623
speed: 13.972070694
id: 0
t: 228
xxx after update is x: -35.9192848206
y: 3.20834708214
theta: 3.08149290085
speed: 13.8599157333
id: 0
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -35.9192848206
y: 3.20834708214
theta: 3.08149290085
speed: 13.8599157333
id: 0
t: 229
xxx after update is x: -36.6243743896
y: 3.35138130188
theta: 3.09724068642
speed: 14.0487070084
id: 0
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.9727942943573, -66.45169830322266, 4.615570068359375, 13.8148775100708)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:231


xxx before update is x: -36.6243743896
y: 3.35138130188
theta: 3.09724068642
speed: 14.0487070084
id: 0
t: 230
xxx after update is x: -37.1446990967
y: 3.33401823044
theta: 3.22149252892
speed: 13.8725547791
id: 0
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:232


xxx before update is x: -37.1446990967
y: 3.33401823044
theta: 3.22149252892
speed: 13.8725547791
id: 0
t: 231
xxx after update is x: -37.4757118225
y: 3.35330414772
theta: 3.09101724625
speed: 13.8120307922
id: 0
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -37.4757118225
y: 3.35330414772
theta: 3.09101724625
speed: 13.8120307922
id: 0
t: 232
xxx after update is x: -38.7420578003
y: 3.2158639431
theta: 3.15405774117
speed
y: -67.8788833618
theta: 4.74129867554
speed: 13.8016281128
id: 1
t: 232
xxx after update is x: -3.2654914856
y: -68.9415664673
theta: 4.81033229828
speed: 13.7923355103
id: 1
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -3.2654914856
y: -68.9415664673
theta: 4.81033229828
speed: 13.7923355103
id: 1
t: 233
xxx after update is x: -2.85154461861
y: -69.6931838989
theta: 4.74805593491
speed: 13.8394870758
id: 1
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -2.85154461861
y: -69.6931838989
theta: 4.74805593491
speed: 13.8394870758
id: 1
t: 234
xxx after update is x: -3.08563065529
y: -69.8798217773
theta: 4.68451213837
speed: 14.1765861511
id: 1
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4895999999999979]
222 self.state_dicts[msg.id][msg.t] is (-39.37429428100586, 3.8169689178466797, 2.9466586112976074, 13.672914505004883)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.08563065529
y: -69.8798217773
theta: 4.68451213837
speed: 14.1765861511
id: 1
t: 235
xxx after update is x: -3.54686236382
y: -71.0763092041
theta: 4.67827510834
speed: 13.6529188156
id: 1
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:236


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.4888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -3.54686236382
y: -71.0763092041
theta: 4.67827510834
speed: 13.6529188156
id: 1
t: 236
xxx after update is x: -3.74944472313
y: -71.7082443237
theta: 4.68725538254
speed: 14.1669378281
id: 1
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -3.74944472313
y: -71.7082443237
theta: 4.68725538254
speed: 14.1669378281
id: 1
t: 237
xxx after update is x: -3.0133998394
y: -70.9311752319
theta: 4.76074886322
speed: 13.6385383606
id: 1
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:239


xxx before update is x: -3.0133998394
y: -70.9311752319
theta: 4.76074886322
speed: 13.6385383606
id: 1
t: 238
xxx after update is x: -3.36671280861
y: -73.1222381592
theta: 4.74127101898
speed: 13.6520586014
id: 1
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5263999999999986]
222 self.state_dicts[msg.id][msg.t] is (-42.646949768066406, 3.706805944442749, 3.180466890335083, 14.195025444030762)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state funct: 13.8506317139
id: 0
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -38.7420578003
y: 3.2158639431
theta: 3.15405774117
speed: 13.8506317139
id: 0
t: 233
xxx after update is x: -39.0883865356
y: 2.62355351448
theta: 3.04235839844
speed: 13.6921510696
id: 0
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.8515446186065674, -69.69318389892578, 4.748055934906006, 13.839487075805664)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -39.0883865356
y: 2.62355351448
theta: 3.04235839844
speed: 13.6921510696
id: 0
t: 234
xxx after update is x: -39.374294281
y: 3.81696891785
theta: 2.9466586113
speed: 13.672914505
id: 0
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:236


xxx before update is x: -39.374294281
y: 3.81696891785
theta: 2.9466586113
speed: 13.672914505
id: 0
t: 235
xxx after update is x: -40.9709396362
y: 3.03333711624
theta: 3.03030562401
speed: 13.6249008179
id: 0
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -40.9709396362
y: 3.03333711624
theta: 3.03030562401
speed: 13.6249008179
id: 0
t: 236
xxx after update is x: -41.0960578918
y: 3.63338637352
theta: 3.19337892532
speed: 13.7367563248
id: 0
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -41.0960578918
y: 3.63338637352
theta: 3.19337892532
speed: 13.7367563248
id: 0
t: 237
xxx after update is x: -41.4455223083
y: 3.21927285194
theta: 3.0208940506
speed: 13.9493484497
id: 0
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:239


xxx before update is x: -41.4455223083
y: 3.21927285194
theta: 3.0208940506
speed: 13.9493484497
id: 0
t: 238
xxx after update is x: -42.6469497681
y: 3.70680594444
theta: 3.18046689034
speed: 14.195025444
id: 0
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.366712808609009, -73.12223815917969, 4.741271018981934, 13.652058601379395)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:240


xxx before update is x: -42.6469497681
y: 3.70680594444
theta: 3.18046689034
speed: 14.195025444
id: 0
t: 239
xxx after update is x: -42.4944038391
y: 3.36555290222
theta: 3.05471467972
speed: 14.0185880661
id: 0
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the ion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:240


xxx before update is x: -3.36671280861
y: -73.1222381592
theta: 4.74127101898
speed: 13.6520586014
id: 1
t: 239
xxx after update is x: -2.91927957535
y: -72.7202987671
theta: 4.79130601883
speed: 13.7558450699
id: 1
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:241


xxx before update is x: -2.91927957535
y: -72.7202987671
theta: 4.79130601883
speed: 13.7558450699
id: 1
t: 240
xxx after update is x: -3.46564006805
y: -73.8841781616
theta: 4.6641201973
speed: 13.6718873978
id: 1
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.46564006805
y: -73.8841781616
theta: 4.6641201973
speed: 13.6718873978
id: 1
t: 241
xxx after update is x: -3.14593052864
y: -74.1852111816
theta: 4.64471197128
speed: 14.1140699387
id: 1
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:242




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:243


xxx before update is x: -3.14593052864
y: -74.1852111816
theta: 4.64471197128
speed: 14.1140699387
id: 1
t: 242
xxx after update is x: -3.53977322578
y: -75.0912322998
theta: 4.85622262955
speed: 14.0449066162
id: 1
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.8






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:244


xxx before update is x: -3.53977322578
y: -75.0912322998
theta: 4.85622262955
speed: 14.0449066162
id: 1
t: 243
xxx after update is x: -3.09056043625
y: -75.8266906738
theta: 4.6882147789
speed: 13.8817892075
id: 1
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5359999999999989]
222 self.state_dicts[msg.id][msg.t] is (-44.92412185668945, 3.167383909225464, 3.1855967044830322, 13.723118782043457)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:245


xxx before update is x: -3.09056043625
y: -75.8266906738
theta: 4.6882147789
speed: 13.8817892075
id: 1
t: 244
xxx after update is x: -3.29823470116
y: -76.5807876587
theta: 4.78213596344
speed: 13.878194809
id: 1
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.29823470116
y: -76.5807876587
theta: 4.78213596344
speed: 13.878194809
id: 1
t: 245
xxx after update is x: -2.85433602333
y: -77.3642730713
theta: 4.58809423447
speed: 13.9967927933
id: 1
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:246




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave thesim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -42.4944038391
y: 3.36555290222
theta: 3.05471467972
speed: 14.0185880661
id: 0
t: 240
xxx after update is x: -44.0424308777
y: 2.89528012276
theta: 3.08117771149
speed: 13.955165863
id: 0
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:241




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -44.0424308777
y: 2.89528012276
theta: 3.08117771149
speed: 13.955165863
id: 0
t: 241
xxx after update is x: -44.7239570618
y: 2.75131559372
theta: 3.12883710861
speed: 13.5613269806
id: 0
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:243


xxx before update is x: -44.7239570618
y: 2.75131559372
theta: 3.12883710861
speed: 13.5613269806
id: 0
t: 242
xxx after update is x: -45.2520217896
y: 3.71514725685
theta: 3.19856238365
speed: 13.7450256348
id: 0
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:244


xxx before update is x: -45.2520217896
y: 3.71514725685
theta: 3.19856238365
speed: 13.7450256348
id: 0
t: 243
xxx after update is x: -44.9241218567
y: 3.16738390923
theta: 3.18559670448
speed: 13.723118782
id: 0
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:245


xxx before update is x: -44.9241218567
y: 3.16738390923
theta: 3.18559670448
speed: 13.723118782
id: 0
t: 244
xxx after update is x: -46.3387298584
y: 3.42720913887
theta: 3.0320584774
speed: 13.972943306
id: 0
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.298234701156616, -76.5807876586914, 4.782135963439941, 13.878194808959961)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:246


xxx before update is x: -46.3387298584
y: 3.42720913887
theta: 3.0320584774
speed: 13.972943306
id: 0
t: 245
xxx after update is x: -46.3265686035
y: 3.68985056877
theta: 3.24007320404
speed: 13.9876346588
id: 0
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -46.3265686035
y: 3.68985056877
theta: 3.24007320404
speed: 13.9876346588
id: 0
t: 246
xxx after update is x: -47.2046508789
y: 3.15544843674
theta: 3.15775179863
speed: 13.9990415573
id: 0
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -47.2046508789
y: 3.15544843674
theta: 3.15775179863
speed: 13.9990415573
id: 0
t: 247
xxx after update is x: -48.1033325195
y: 3.02837085724
theta: 3.05121946335
speed: 14.0937566757
id: 0
t: 248
maneuver_negotiatir.py finish the update agent state update function xxx before update is x: -2.85433602333
y: -77.3642730713
theta: 4.58809423447
speed: 13.9967927933
id: 1
t: 246
xxx after update is x: -3.56066322327
y: -77.4598007202
theta: 4.78812932968
speed: 13.8161506653
id: 1
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:247




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -3.56066322327
y: -77.4598007202
theta: 4.78812932968
speed: 13.8161506653
id: 1
t: 247
xxx after update is x: -3.13372635841
y: -78.3774108887
theta: 4.74733638763
speed: 13.9957675934
id: 1
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -3.13372635841
y: -78.3774108887
theta: 4.74733638763
speed: 13.9957675934
id: 1
t: 248
xxx after update is x: -3.02461123466
y: -78.8653945923
theta: 4.6587395668
speed: 13.9363574982
id: 1
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5231999999999986]
222 self.state_dicts[msg.id][msg.t] is (-48.6693115234375, 3.633525848388672, 3.1218605041503906, 14.143478393554688)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:250


xxx before update is x: -3.02461123466
y: -78.8653945923
theta: 4.6587395668
speed: 13.9363574982
id: 1
t: 249
xxx after update is x: -3.02973747253
y: -79.3591079712
theta: 4.56838703156
speed: 13.7896194458
id: 1
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:251


xxx before update is x: -3.02973747253
y: -79.3591079712
theta: 4.56838703156
speed: 13.7896194458
id: 1
t: 250
xxx after update is x: -3.49649715424
y: -79.8158187866
theta: 4.73235321045
speed: 14.0880708694
id: 1
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.1555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:252


xxx before update is x: -3.49649715424
y: -79.8158187866
theta: 4.73235321045
speed: 14.0880708694
id: 1
t: 251
xxx after update is x: -3.27600908279
y: -80.4914321899
theta: 4.80454683304
speed: 13.8419799805
id: 1
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5231999999999986]
222 self.state_dicts[msg.id][msg.t] is (-50.023651123046875, 3.113410234451294, 3.119563102722168, 13.888249397277832)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.27600908279
y: -80.4914321899
theta: 4.80454683304
speed: 13.8419799805
id: 1
t: 252
xxx after update is x: -3.5392138958
y: -81.1489639282
theta: 4.73762369156
speed: 13.9010457993
id: 1
t: 253
maneuver_negotiatir.py finish the upda from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -48.1033325195
y: 3.02837085724
theta: 3.05121946335
speed: 14.0937566757
id: 0
t: 248
xxx after update is x: -48.6693115234
y: 3.63352584839
theta: 3.12186050415
speed: 14.1434783936
id: 0
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:250


xxx before update is x: -48.6693115234
y: 3.63352584839
theta: 3.12186050415
speed: 14.1434783936
id: 0
t: 249
xxx after update is x: -49.1717987061
y: 2.64035916328
theta: 3.32134628296
speed: 13.9779195786
id: 0
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0297374725341797, -79.3591079711914, 4.568387031555176, 13.789619445800781)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -49.1717987061
y: 2.64035916328
theta: 3.32134628296
speed: 13.9779195786
id: 0
t: 250
xxx after update is x: -49.3393859863
y: 3.29836344719
theta: 2.93923091888
speed: 14.3118600845
id: 0
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:251




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:252


xxx before update is x: -49.3393859863
y: 3.29836344719
theta: 2.93923091888
speed: 14.3118600845
id: 0
t: 251
xxx after update is x: -50.023651123
y: 3.11341023445
theta: 3.11956310272
speed: 13.8882493973
id: 0
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:253


xxx before update is x: -50.023651123
y: 3.11341023445
theta: 3.11956310272
speed: 13.8882493973
id: 0
t: 252
xxx after update is x: -50.6015586853
y: 3.15993309021
theta: 3.10262107849
speed: 13.7314004898
id: 0
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:254


xxx before update is x: -50.6015586853
y: 3.15993309021
theta: 3.10262107849
speed: 13.7314004898
id: 0
t: 253
xxx after update is x: -51.9577674866
y: 3.2922410965
theta: 3.1077914238
speed: 14.0589237213
id: 0
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:255


xxx before update is x: -51.9577674866
y: 3.2922410965
theta: 3.1077914238
speed: 14.0589237213
id: 0
t: 254
xxx after update is x: -51.9432411194
y: 3.24792432785
theta: 3.029286623
speed: 13.8359394073
id: 0
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.237436056137085, -82.70931243896484, 4.947113513946533, 14.04186725616455)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leavete agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:253




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.5392138958
y: -81.1489639282
theta: 4.73762369156
speed: 13.9010457993
id: 1
t: 253
xxx after update is x: -3.4276714325
y: -81.6236953735
theta: 4.8741812706
speed: 14.205534935
id: 1
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:254




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:255


xxx before update is x: -3.4276714325
y: -81.6236953735
theta: 4.8741812706
speed: 14.205534935
id: 1
t: 254
xxx after update is x: -3.23743605614
y: -82.709312439
theta: 4.94711351395
speed: 14.0418672562
id: 1
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5183999999999984]
222 self.state_dicts[msg.id][msg.t] is (-51.943241119384766, 3.247924327850342, 3.0292866230010986, 13.835939407348633)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:256


xxx before update is x: -3.23743605614
y: -82.709312439
theta: 4.94711351395
speed: 14.0418672562
id: 1
t: 255
xxx after update is x: -3.42196178436
y: -83.1777114868
theta: 4.66301727295
speed: 13.9450178146
id: 1
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:257


xxx before update is x: -3.42196178436
y: -83.1777114868
theta: 4.66301727295
speed: 13.9450178146
id: 1
t: 256
xxx after update is x: -3.2537753582
y: -83.2046127319
theta: 4.78587245941
speed: 13.8610877991
id: 1
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:258


xxx before update is x: -3.2537753582
y: -83.2046127319
theta: 4.78587245941
speed: 13.8610877991
id: 1
t: 257
xxx after update is x: -2.86309194565
y: -84.5740890503
theta: 4.61023426056
speed: 14.1986913681
id: 1
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:259


xxx before update is x: -2.86309194565
y: -84.5740890503
theta: 4.61023426056
speed: 14.1986913681
id: 1
t: 258
xxx after update is x: -3.06655454636
y: -84.9001235962
theta: 4.77102041245
speed: 14.0064182281
id: 1
t: 259
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.5111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:260


xxx before update is x: -3.06655454636
y: -84.9001235962
theta: 4.77102041245
speed: 14.0064182281
id: 1
t: 259
xxx after update is x: -3.02735495567
y: -85.4282913208
theta: 4.79997777939
speed: 13.8406705856
id: 1
t: 260
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize the update function xxx before update is x: -51.9432411194
y: 3.24792432785
theta: 3.029286623
speed: 13.8359394073
id: 0
t: 255
xxx after update is x: -52.8259773254
y: 3.3761742115
theta: 3.12858915329
speed: 13.8808794022
id: 0
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:256




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:257


xxx before update is x: -52.8259773254
y: 3.3761742115
theta: 3.12858915329
speed: 13.8808794022
id: 0
t: 256
xxx after update is x: -53.6418838501
y: 2.99672913551
theta: 3.09898710251
speed: 14.0270414352
id: 0
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -53.6418838501
y: 2.99672913551
theta: 3.09898710251
speed: 14.0270414352
id: 0
t: 257
xxx after update is x: -54.1101646423
y: 3.20343399048
theta: 3.15479969978
speed: 13.9114942551
id: 0
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:258




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:259


xxx before update is x: -54.1101646423
y: 3.20343399048
theta: 3.15479969978
speed: 13.9114942551
id: 0
t: 258
xxx after update is x: -54.8568115234
y: 3.0090072155
theta: 3.16093850136
speed: 14.0815763474
id: 0
t: 259
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:260


xxx before update is x: -54.8568115234
y: 3.0090072155
theta: 3.16093850136
speed: 14.0815763474
id: 0
t: 259
xxx after update is x: -55.6764564514
y: 2.64936900139
theta: 3.15155005455
speed: 13.8859767914
id: 0
t: 260
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0273549556732178, -85.42829132080078, 4.799977779388428, 13.840670585632324)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:261


xxx before update is x: -55.6764564514
y: 2.64936900139
theta: 3.15155005455
speed: 13.8859767914
id: 0
t: 260
xxx after update is x: -56.2529182434
y: 3.04096293449
theta: 3.16287398338
speed: 13.8522644043
id: 0
t: 261
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -56.2529182434
y: 3.04096293449
theta: 3.16287398338
speed: 13.8522644043
id: 0
t: 261
xxx after update is x: -56.8516578674
y: 3.42481946945
theta: 3.08907842636
speed: 14.0277013779
id: 0
t: 262
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:262




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:263


xxx before update is x: -56.8516578674
y: 3.42481946945
theta: 3.08907842636
speed: 14.0277013779
id: 0
t: 262
xxx after update is x: -57.2762069702
y: 3.15941309929
theta: 3.08884263039
speed: 13.9614601135
id: 0
t: 263
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.44959999999999817]
222 self.state_dicts[msg.id][msg.t] is (-55.676456451416016, 2.64936900138855, 3.151550054550171, 13.885976791381836)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:261


xxx before update is x: -3.02735495567
y: -85.4282913208
theta: 4.79997777939
speed: 13.8406705856
id: 1
t: 260
xxx after update is x: -3.64200305939
y: -85.7651672363
theta: 4.58932590485
speed: 14.1797866821
id: 1
t: 261
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:262


xxx before update is x: -3.64200305939
y: -85.7651672363
theta: 4.58932590485
speed: 14.1797866821
id: 1
t: 261
xxx after update is x: -3.4687693119
y: -86.8672409058
theta: 4.74719953537
speed: 13.8368730545
id: 1
t: 262
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:263


xxx before update is x: -3.4687693119
y: -86.8672409058
theta: 4.74719953537
speed: 13.8368730545
id: 1
t: 262
xxx after update is x: -3.1062040329
y: -87.534828186
theta: 4.89237546921
speed: 13.9704637527
id: 1
t: 263
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:264


xxx before update is x: -3.1062040329
y: -87.534828186
theta: 4.89237546921
speed: 13.9704637527
id: 1
t: 263
xxx after update is x: -2.76954627037
y: -87.9795837402
theta: 4.7066617012
speed: 13.8435277939
id: 1
t: 264
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5183999999999984]
222 self.state_dicts[msg.id][msg.t] is (-57.43470001220703, 3.1980185508728027, 3.057459831237793, 13.581758499145508)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:265


xxx before update is x: -2.76954627037
y: -87.9795837402
theta: 4.7066617012
speed: 13.8435277939
id: 1
t: 264
xxx after update is x: -2.78523826599
y: -88.4052581787
theta: 4.67956161499
speed: 14.1438732147
id: 1
t: 265
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.78523826599
y: -88.4052581787
theta: 4.67956161499
speed: 14.1438732147
id: 1
t: 265
xxx after update is x: -3.51293110847
y: -88.9730224609
theta: 4.69142198563
speed: 14.0414533615
id: 1
t: 266
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:266




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:267


xxx before update is x: -3.51293110847
y: -88.9730224609
theta: 4.69142198563
speed: 14.0414533615
id: 1
t: 266
xxx after update is x: -3.38937473297
y: -89.8067398071
theta: 4.77784490585
speed: 14.0114793777
id: 1
t: 267
maneuver_negotiatir.py finish the update agent state from ros f function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -57.2762069702
y: 3.15941309929
theta: 3.08884263039
speed: 13.9614601135
id: 0
t: 263
xxx after update is x: -57.4347000122
y: 3.19801855087
theta: 3.05745983124
speed: 13.5817584991
id: 0
t: 264
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:264


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.7695462703704834, -87.97958374023438, 4.706661701202393, 13.843527793884277)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:265


xxx before update is x: -57.4347000122
y: 3.19801855087
theta: 3.05745983124
speed: 13.5817584991
id: 0
t: 264
xxx after update is x: -58.280620575
y: 3.09567666054
theta: 3.04853749275
speed: 13.8220949173
id: 0
t: 265
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:266


xxx before update is x: -58.280620575
y: 3.09567666054
theta: 3.04853749275
speed: 13.8220949173
id: 0
t: 265
xxx after update is x: -59.2131614685
y: 3.21958494186
theta: 3.0951128006
speed: 13.8875131607
id: 0
t: 266
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:267


xxx before update is x: -59.2131614685
y: 3.21958494186
theta: 3.0951128006
speed: 13.8875131607
id: 0
t: 266
xxx after update is x: -59.3035774231
y: 3.06779313087
theta: 3.00319671631
speed: 13.9255657196
id: 0
t: 267
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:268


xxx before update is x: -59.3035774231
y: 3.06779313087
theta: 3.00319671631
speed: 13.9255657196
id: 0
t: 267
xxx after update is x: -60.4072875977
y: 3.27586436272
theta: 3.22121047974
speed: 13.7778081894
id: 0
t: 268
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3973782062530518, -90.35944366455078, 4.6162872314453125, 14.08924674987793)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:269


xxx before update is x: -60.4072875977
y: 3.27586436272
theta: 3.22121047974
speed: 13.7778081894
id: 0
t: 268
xxx after update is x: -60.8598327637
y: 3.2779853344
theta: 3.20774531364
speed: 13.7112598419
id: 0
t: 269
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:270


xxx before update is x: -60.8598327637
y: 3.2779853344
theta: 3.20774531364
speed: 13.7112598419
id: 0
t: 269
xxx after update is x: -61.2866973877
y: 3.56342220306
theta: 3.10419821739
speed: 13.7681083679
id: 0
t: 270
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:271


xuntion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.8666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.45279999999999815]
222 self.state_dicts[msg.id][msg.t] is (-59.3035774230957, 3.067793130874634, 3.0031967163085938, 13.925565719604492)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:268


xxx before update is x: -3.38937473297
y: -89.8067398071
theta: 4.77784490585
speed: 14.0114793777
id: 1
t: 267
xxx after update is x: -3.39737820625
y: -90.3594436646
theta: 4.61628723145
speed: 14.0892467499
id: 1
t: 268
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:269


xxx before update is x: -3.39737820625
y: -90.3594436646
theta: 4.61628723145
speed: 14.0892467499
id: 1
t: 268
xxx after update is x: -3.1884458065
y: -91.4589004517
theta: 4.8451499939
speed: 13.6039571762
id: 1
t: 269
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:270


xxx before update is x: -3.1884458065
y: -91.4589004517
theta: 4.8451499939
speed: 13.6039571762
id: 1
t: 269
xxx after update is x: -3.1612598896
y: -91.8127059937
theta: 4.79550695419
speed: 13.7842178345
id: 1
t: 270
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:271


xxx before update is x: -3.1612598896
y: -91.8127059937
theta: 4.79550695419
speed: 13.7842178345
id: 1
t: 270
xxx after update is x: -3.75551915169
y: -92.1543045044
theta: 4.92973995209
speed: 13.9322061539
id: 1
t: 271
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.475199999999998]
222 self.state_dicts[msg.id][msg.t] is (-61.79542922973633, 2.728013038635254, 3.0018441677093506, 13.816421508789062)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.75551915169
y: -92.1543045044
theta: 4.92973995209
speed: 13.9322061539
id: 1
t: 271
xxx after update is x: -3.42849755287
y: -92.5723953247
theta: 4.72660827637
speed: 14.2066488266
id: 1
t: 272
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:272




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:273


xxx before update is x: -3.42849755287
y: -92.5723953247
theta: 4.72660827637
speed: 14.2066488266
id: 1
t: 272
xxx after update is x: -3.00688934326
y: -93.3971481323
theta: 4.54039764404
speed: 13.7840013504
id: 1
t: 273
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.00688934326
y: -93.3971481323
theta: 4.54039764404
speed: 13.7840013504
id: 1
t: 273
xxx after updatexx before update is x: -61.2866973877
y: 3.56342220306
theta: 3.10419821739
speed: 13.7681083679
id: 0
t: 270
xxx after update is x: -61.7954292297
y: 2.72801303864
theta: 3.00184416771
speed: 13.8164215088
id: 0
t: 271
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:272


xxx before update is x: -61.7954292297
y: 2.72801303864
theta: 3.00184416771
speed: 13.8164215088
id: 0
t: 271
xxx after update is x: -62.8029823303
y: 3.74120545387
theta: 3.11968874931
speed: 13.8064718246
id: 0
t: 272
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:273


xxx before update is x: -62.8029823303
y: 3.74120545387
theta: 3.11968874931
speed: 13.8064718246
id: 0
t: 272
xxx after update is x: -63.058555603
y: 3.01194763184
theta: 3.15433096886
speed: 13.8200750351
id: 0
t: 273
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0068893432617188, -93.39714813232422, 4.540397644042969, 13.784001350402832)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:274


xxx before update is x: -63.058555603
y: 3.01194763184
theta: 3.15433096886
speed: 13.8200750351
id: 0
t: 273
xxx after update is x: -63.4977684021
y: 3.543394804
theta: 2.8907020092
speed: 13.6069374084
id: 0
t: 274
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:275


xxx before update is x: -63.4977684021
y: 3.543394804
theta: 2.8907020092
speed: 13.6069374084
id: 0
t: 274
xxx after update is x: -64.5906906128
y: 3.54644703865
theta: 3.34264922142
speed: 14.0140161514
id: 0
t: 275
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -64.5906906128
y: 3.54644703865
theta: 3.34264922142
speed: 14.0140161514
id: 0
t: 275
xxx after update is x: -64.8113708496
y: 3.05717945099
theta: 3.2734131813
speed: 13.730175972
id: 0
t: 276
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:276




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:277


xxx before update is x: -64.8113708496
y: 3.05717945099
theta: 3.2734131813
speed: 13.730175972
id: 0
t: 276
xxx after update is x: -65.538520813
y: 3.44730973244
theta: 3.17719960213
speed: 14.0827455521
id: 0
t: 277
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:278


xxx before update is x: -65.538520813
y: 3.44730973244
theta: 3.17719960213
speed: 14.0827455521
id: 0
t: 277
xxx after update is x: -66.4218597412
y: 3.71437954903
theta: 3.09667158127
speed: 14.1670255661
id: 0
t: 278
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update  is x: -3.34343695641
y: -94.3372344971
theta: 4.52848482132
speed: 13.9629154205
id: 1
t: 274
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:274


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.1777777778






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:275


xxx before update is x: -3.34343695641
y: -94.3372344971
theta: 4.52848482132
speed: 13.9629154205
id: 1
t: 274
xxx after update is x: -3.88954997063
y: -94.7159957886
theta: 4.73295879364
speed: 13.9896812439
id: 1
t: 275
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:276


xxx before update is x: -3.88954997063
y: -94.7159957886
theta: 4.73295879364
speed: 13.9896812439
id: 1
t: 275
xxx after update is x: -3.33346796036
y: -95.0523376465
theta: 4.9049706459
speed: 13.9773931503
id: 1
t: 276
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-64.81137084960938, 3.0571794509887695, 3.2734131813049316, 13.730175971984863)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.33346796036
y: -95.0523376465
theta: 4.9049706459
speed: 13.9773931503
id: 1
t: 276
xxx after update is x: -3.36075758934
y: -96.0173034668
theta: 4.77467393875
speed: 14.1782712936
id: 1
t: 277
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:277




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:278


xxx before update is x: -3.36075758934
y: -96.0173034668
theta: 4.77467393875
speed: 14.1782712936
id: 1
t: 277
xxx after update is x: -3.63392496109
y: -96.2793197632
theta: 4.67075014114
speed: 13.9365129471
id: 1
t: 278
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:279


xxx before update is x: -3.63392496109
y: -96.2793197632
theta: 4.67075014114
speed: 13.9365129471
id: 1
t: 278
xxx after update is x: -3.18160915375
y: -97.0130844116
theta: 4.68224143982
speed: 13.9041509628
id: 1
t: 279
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:280


xxx before update is x: -3.18160915375
y: -97.0130844116
theta: 4.68224143982
speed: 13.9041509628
id: 1
t: 279
xxx after update is x: -2.99212408066
y: -97.5488433838
theta: 4.80157232285
speed: 14.2441864014
id: 1
t: 280
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5183999999999984]
222 self.state_dicts[msg.id][msg.t] is (-67.03168487548828, 3.7677788734436035, 3.0295727252960205, 13.971038818359375)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going function xxx before update is x: -66.4218597412
y: 3.71437954903
theta: 3.09667158127
speed: 14.1670255661
id: 0
t: 278
xxx after update is x: -66.6478652954
y: 2.99740719795
theta: 2.95987725258
speed: 13.65873909
id: 0
t: 279
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:279


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1816091537475586, -97.0130844116211, 4.682241439819336, 13.90415096282959)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:280


xxx before update is x: -66.6478652954
y: 2.99740719795
theta: 2.95987725258
speed: 13.65873909
id: 0
t: 279
xxx after update is x: -67.0316848755
y: 3.76777887344
theta: 3.0295727253
speed: 13.9710388184
id: 0
t: 280
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:281


xxx before update is x: -67.0316848755
y: 3.76777887344
theta: 3.0295727253
speed: 13.9710388184
id: 0
t: 280
xxx after update is x: -67.8104400635
y: 3.13261342049
theta: 3.26858901978
speed: 13.9171152115
id: 0
t: 281
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:282


xxx before update is x: -67.8104400635
y: 3.13261342049
theta: 3.26858901978
speed: 13.9171152115
id: 0
t: 281
xxx after update is x: -68.9039840698
y: 2.83717370033
theta: 3.13930773735
speed: 13.7690134048
id: 0
t: 282
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:283


xxx before update is x: -68.9039840698
y: 2.83717370033
theta: 3.13930773735
speed: 13.7690134048
id: 0
t: 282
xxx after update is x: -69.5840454102
y: 2.9117064476
theta: 3.2652657032
speed: 13.7228555679
id: 0
t: 283
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:284


xxx before update is x: -69.5840454102
y: 2.9117064476
theta: 3.2652657032
speed: 13.7228555679
id: 0
t: 283
xxx after update is x: -69.8761901855
y: 3.34950852394
theta: 3.1467397213
speed: 13.7169389725
id: 0
t: 284
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.383310079574585, -100.63800811767578, 4.694530963897705, 13.643836975097656)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:285


xxx before update is x: -69.8761901855
y: 3.34950852394
theta: 3.1467397213
speed: 13.7169389725
id: 0
t: 284
xxx after update is x: -70.6342315674
y: 3.07005405426
theta: 3.1237885952
speed: 13.7461118698
id: 0
t: 285
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:286


xxx before update is x: -70.6342315674
y: 3.07005405426
theta: 3.1237885952
speed: 13.746to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:281


xxx before update is x: -2.99212408066
y: -97.5488433838
theta: 4.80157232285
speed: 14.2441864014
id: 1
t: 280
xxx after update is x: -2.73006010056
y: -98.4670410156
theta: 4.67250108719
speed: 13.6683492661
id: 1
t: 281
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:282


xxx before update is x: -2.73006010056
y: -98.4670410156
theta: 4.67250108719
speed: 13.6683492661
id: 1
t: 281
xxx after update is x: -2.96892666817
y: -98.7703399658
theta: 4.82404756546
speed: 13.9435300827
id: 1
t: 282
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.5333333333






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:283


xxx before update is x: -2.96892666817
y: -98.7703399658
theta: 4.82404756546
speed: 13.9435300827
id: 1
t: 282
xxx after update is x: -3.36319184303
y: -99.8498840332
theta: 4.80234289169
speed: 14.1224069595
id: 1
t: 283
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5167999999999984]
222 self.state_dicts[msg.id][msg.t] is (-69.58404541015625, 2.9117064476013184, 3.265265703201294, 13.722855567932129)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:284


xxx before update is x: -3.36319184303
y: -99.8498840332
theta: 4.80234289169
speed: 14.1224069595
id: 1
t: 283
xxx after update is x: -3.38331007957
y: -100.638008118
theta: 4.6945309639
speed: 13.6438369751
id: 1
t: 284
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:285


xxx before update is x: -3.38331007957
y: -100.638008118
theta: 4.6945309639
speed: 13.6438369751
id: 1
t: 284
xxx after update is x: -3.59396409988
y: -100.743461609
theta: 4.65632343292
speed: 13.8259630203
id: 1
t: 285
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:286


xxx before update is x: -3.59396409988
y: -100.743461609
theta: 4.65632343292
speed: 13.8259630203
id: 1
t: 285
xxx after update is x: -2.56910419464
y: -101.000160217
theta: 4.80576038361
speed: 14.0315580368
id: 1
t: 286
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:287


xxx before update is x: -2.56910419464
y: -101.000160217
theta: 4.80576038361
speed: 14.0315580368
id: 1
t: 286
xxx after update is x: -3.29519581795
y: -102.544670105
theta: 4.81106281281
speed: 13.8606672287
id: 1
t: 287
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4927999999999979]
222 self.state_dicts[msg.id][msg.t] is (-71.97970581054688, 3.197122812271118, 3.0781641006469727, 13.712153434753418)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:288


xxx before update is x: -3.29519581795
y: -102.544670105
theta: 4.81106281281
speed: 13.8606672287
id: 1
t: 287
xxx after update is x: -3.66099524498
y: -102.79372406
theta: 4.82052087784
speed: 13.5877561569
id: 1
t: 288
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:289


xxx before update is x: -3.66099524498
y: -102.79372406
theta: 4.82052087784
speed: 13.5877561569
id: 1
t: 288
xxx after update is x: -3.33968567848
y: -103.678497314
theta: 4.79594182968
speed: 13.9354534149
id: 1
t: 289
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:290


xxx before update is x: -3.33968567848
y: -103.678497314
theta: 4.79594182968
speed: 13.9354534149
id: 1
t: 289
xxx after update is x: -2.71288847923
y: -103.906768799
theta: 4.52917861938
speed: 13.6856975555
id: 1
t: 290
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.8888888889






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:291


xxx before update is x: -2.71288847923
y: -103.906768799
theta: 4.52917861938
speed: 13.6856975555
id: 1
t: 290
xxx after update is x: -3.36231708527
y: -105.126022339
theta: 4.72186422348
speed: 14.0974731445
id: 1
t: 291
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48319999999999796]
222 self.state_dicts[msg.id][msg.t] is (-74.36358642578125, 3.3013153076171875, 3.0794577598571777, 13.62948226928711)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:292


xxx before update is x: -3.36231708527
y: -105.126022339
theta: 4.72186422348
speed: 14.0974731445
id: 1
t: 291
xxx after update is x: -3.40741491318
y: -105.269622803
theta: 4.71780633926
speed: 13.9980754852
id: 1
t: 292
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:293


xxx before update is x: -3.40741491318
y: -105.269622803
theta: 4.71780633926
speed: 13.9980754852
id: 1
t: 292
xxx after update is x: -2.79982447624
y: -105.955451965
theta: 4.66508054733
speed: 14.0188827515
id: 1
t: 293
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:294


xxx before update is x: -2.79982447624
y: -105.955451965
theta: 4.66508054733
speed: 14.0188827515
id: 1
t: 293
xxx after update is x: -3.12375402451
y: -106.373466492
theta: 4.552991118698
id: 0
t: 285
xxx after update is x: -72.0537567139
y: 3.40997171402
theta: 3.15701007843
speed: 13.9356012344
id: 0
t: 286
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:287


xxx before update is x: -72.0537567139
y: 3.40997171402
theta: 3.15701007843
speed: 13.9356012344
id: 0
t: 286
xxx after update is x: -71.9797058105
y: 3.19712281227
theta: 3.07816410065
speed: 13.7121534348
id: 0
t: 287
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:288


xxx before update is x: -71.9797058105
y: 3.19712281227
theta: 3.07816410065
speed: 13.7121534348
id: 0
t: 287
xxx after update is x: -72.479309082
y: 3.18335676193
theta: 3.00220417976
speed: 14.0346755981
id: 0
t: 288
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:289


xxx before update is x: -72.479309082
y: 3.18335676193
theta: 3.00220417976
speed: 14.0346755981
id: 0
t: 288
xxx after update is x: -72.9470291138
y: 3.53218245506
theta: 3.27214598656
speed: 14.2051172256
id: 0
t: 289
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3396856784820557, -103.67849731445312, 4.7959418296813965, 13.935453414916992)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:290


xxx before update is x: -72.9470291138
y: 3.53218245506
theta: 3.27214598656
speed: 14.2051172256
id: 0
t: 289
xxx after update is x: -73.8500366211
y: 3.3138692379
theta: 3.14773631096
speed: 14.0917863846
id: 0
t: 290
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:291


xxx before update is x: -73.8500366211
y: 3.3138692379
theta: 3.14773631096
speed: 14.0917863846
id: 0
t: 290
xxx after update is x: -74.3635864258
y: 3.30131530762
theta: 3.07945775986
speed: 13.6294822693
id: 0
t: 291
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:292


xxx before update is x: -74.3635864258
y: 3.30131530762
theta: 3.07945775986
speed: 13.6294822693
id: 0
t: 291
xxx after update is x: -74.9526062012
y: 3.15902924538
theta: 3.04860520363
speed: 13.7676334381
id: 0
t: 292
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:293


xxx before update is x: -74.9526062012
y: 3.15902924538
theta: 3.04860520363
speed: 13.7676334381
id: 0
t: 292
xxx after update is x: -75.2360534668
y: 3.45722866058
theta: 3.15103507042
speed: 13.6169271469
id: 0
t: 293
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:294


xxx before update i806595
speed: 13.7198152542
id: 1
t: 294
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:295


xxx before update is x: -3.12375402451
y: -106.373466492
theta: 4.55299806595
speed: 13.7198152542
id: 1
t: 294
xxx after update is x: -3.49925255775
y: -107.071990967
theta: 4.68986320496
speed: 13.3920116425
id: 1
t: 295
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.479999999999998]
222 self.state_dicts[msg.id][msg.t] is (-76.35973358154297, 3.243321418762207, 3.0122766494750977, 14.111433029174805)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:296


xxx before update is x: -3.49925255775
y: -107.071990967
theta: 4.68986320496
speed: 13.3920116425
id: 1
t: 295
xxx after update is x: -2.86262154579
y: -107.936149597
theta: 4.61060667038
speed: 14.0327177048
id: 1
t: 296
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:297


xxx before update is x: -2.86262154579
y: -107.936149597
theta: 4.61060667038
speed: 14.0327177048
id: 1
t: 296
xxx after update is x: -3.74560618401
y: -108.56552124
theta: 4.74019384384
speed: 14.1497879028
id: 1
t: 297
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:298


xxx before update is x: -3.74560618401
y: -108.56552124
theta: 4.74019384384
speed: 14.1497879028
id: 1
t: 297
xxx after update is x: -3.29568386078
y: -109.471633911
theta: 4.81624650955
speed: 13.8699426651
id: 1
t: 298
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48319999999999796]
222 self.state_dicts[msg.id][msg.t] is (-79.09916687011719, 3.2180817127227783, 3.1825339794158936, 13.781987190246582)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:299


xxx before update is x: -3.29568386078
y: -109.471633911
theta: 4.81624650955
speed: 13.8699426651
id: 1
t: 298
xxx after update is x: -3.20407772064
y: -109.727218628
theta: 4.79833269119
speed: 13.9693565369
id: 1
t: 299
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.2888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:300


xxx before update is x: -3.20407772064
y: -109.727218628
theta: 4.79833269119
speed: 13.9693565369
id: 1
t: 299
xxx after update is x: -3.32200288773
y: -110.03679657
theta: 4.72958135605
speed: 13.8951196671
id: 1
t: 300
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update fus x: -75.2360534668
y: 3.45722866058
theta: 3.15103507042
speed: 13.6169271469
id: 0
t: 293
xxx after update is x: -76.5159988403
y: 3.19302988052
theta: 3.06481313705
speed: 13.8904047012
id: 0
t: 294
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1237540245056152, -106.37346649169922, 4.552998065948486, 13.719815254211426)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:295


xxx before update is x: -76.5159988403
y: 3.19302988052
theta: 3.06481313705
speed: 13.8904047012
id: 0
t: 294
xxx after update is x: -76.3597335815
y: 3.24332141876
theta: 3.01227664948
speed: 14.1114330292
id: 0
t: 295
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:296


xxx before update is x: -76.3597335815
y: 3.24332141876
theta: 3.01227664948
speed: 14.1114330292
id: 0
t: 295
xxx after update is x: -77.5052337646
y: 2.87580513954
theta: 3.11182975769
speed: 13.8753423691
id: 0
t: 296
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:297


xxx before update is x: -77.5052337646
y: 2.87580513954
theta: 3.11182975769
speed: 13.8753423691
id: 0
t: 296
xxx after update is x: -78.4449234009
y: 3.05978655815
theta: 3.06013154984
speed: 13.6334638596
id: 0
t: 297
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:298


xxx before update is x: -78.4449234009
y: 3.05978655815
theta: 3.06013154984
speed: 13.6334638596
id: 0
t: 297
xxx after update is x: -79.0991668701
y: 3.21808171272
theta: 3.18253397942
speed: 13.7819871902
id: 0
t: 298
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -79.0991668701
y: 3.21808171272
theta: 3.18253397942
speed: 13.7819871902
id: 0
t: 298
xxx after update is x: -79.8519744873
y: 3.25752282143
theta: 3.21264433861
speed: 13.7901973724
id: 0
t: 299
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:299


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.20407772064209, -109.72721862792969, 4.798332691192627, 13.969356536865234)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -79.8519744873
y: 3.25752282143
theta: 3.21264433861
speed: 13.7901973724
id: 0
t: 299
xxx after update is x: -80.0915679932
y: 3.23962712288
theta: 2.96712183952
speed: 14.1527080536
id: 0
t: 300
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:300




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:301


xxx before update is x: -80.0915679932
y: 3.23962712288
theta: 2.96712183952
speed: 14.1527080536
id: 0
t: 300
xxx after update is x: -80.7399368286
y:nction xxx before update is x: -3.32200288773
y: -110.03679657
theta: 4.72958135605
speed: 13.8951196671
id: 1
t: 300
xxx after update is x: -3.62194466591
y: -110.317077637
theta: 4.61807012558
speed: 13.9263477325
id: 1
t: 301
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:301


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4895999999999979]
222 self.state_dicts[msg.id][msg.t] is (-80.73993682861328, 3.1125218868255615, 2.9945218563079834, 13.956174850463867)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:302


xxx before update is x: -3.62194466591
y: -110.317077637
theta: 4.61807012558
speed: 13.9263477325
id: 1
t: 301
xxx after update is x: -3.19473171234
y: -111.154655457
theta: 4.7127289772
speed: 13.9539194107
id: 1
t: 302
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:303


xxx before update is x: -3.19473171234
y: -111.154655457
theta: 4.7127289772
speed: 13.9539194107
id: 1
t: 302
xxx after update is x: -3.15618991852
y: -112.171890259
theta: 4.91434860229
speed: 13.6614522934
id: 1
t: 303
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:304


xxx before update is x: -3.15618991852
y: -112.171890259
theta: 4.91434860229
speed: 13.6614522934
id: 1
t: 303
xxx after update is x: -3.47334265709
y: -112.450828552
theta: 4.56166172028
speed: 13.8763198853
id: 1
t: 304
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:305


xxx before update is x: -3.47334265709
y: -112.450828552
theta: 4.56166172028
speed: 13.8763198853
id: 1
t: 304
xxx after update is x: -3.55114245415
y: -113.38709259
theta: 4.65864038467
speed: 13.9815311432
id: 1
t: 305
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48479999999999795]
222 self.state_dicts[msg.id][msg.t] is (-83.29701232910156, 3.1929471492767334, 3.0096323490142822, 13.86605453491211)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:306


xxx before update is x: -3.55114245415
y: -113.38709259
theta: 4.65864038467
speed: 13.9815311432
id: 1
t: 305
xxx after update is x: -2.88321089745
y: -113.87336731
theta: 4.80474328995
speed: 13.7725896835
id: 1
t: 306
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.6






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:307


xxx before update is x: -2.88321089745
y: -113.87336731
theta: 4.80474328995
speed: 13.7725896835
id: 1
t: 306
xxx after update is x: -3.3683950901
y: -114.324279785
theta: 4.80151748657
speed: 13.8986854553
id: 1
t: 307
maneuver_negotiatir.py finish the update agent state f 3.11252188683
theta: 2.99452185631
speed: 13.9561748505
id: 0
t: 301
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:302


xxx before update is x: -80.7399368286
y: 3.11252188683
theta: 2.99452185631
speed: 13.9561748505
id: 0
t: 301
xxx after update is x: -82.1427993774
y: 3.59956812859
theta: 3.10421919823
speed: 14.0352010727
id: 0
t: 302
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:303


xxx before update is x: -82.1427993774
y: 3.59956812859
theta: 3.10421919823
speed: 14.0352010727
id: 0
t: 302
xxx after update is x: -81.6510772705
y: 3.27303385735
theta: 3.09842371941
speed: 13.704082489
id: 0
t: 303
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1561899185180664, -112.17189025878906, 4.914348602294922, 13.661452293395996)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:304


xxx before update is x: -81.6510772705
y: 3.27303385735
theta: 3.09842371941
speed: 13.704082489
id: 0
t: 303
xxx after update is x: -83.0489425659
y: 3.44882583618
theta: 3.06355619431
speed: 13.790512085
id: 0
t: 304
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -83.0489425659
y: 3.44882583618
theta: 3.06355619431
speed: 13.790512085
id: 0
t: 304
xxx after update is x: -83.2970123291
y: 3.19294714928
theta: 3.00963234901
speed: 13.8660545349
id: 0
t: 305
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:305




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:306


xxx before update is x: -83.2970123291
y: 3.19294714928
theta: 3.00963234901
speed: 13.8660545349
id: 0
t: 305
xxx after update is x: -83.5533065796
y: 3.24717974663
theta: 2.98777580261
speed: 14.1975669861
id: 0
t: 306
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:307


xxx before update is x: -83.5533065796
y: 3.24717974663
theta: 2.98777580261
speed: 14.1975669861
id: 0
t: 306
xxx after update is x: -83.6003570557
y: 3.0013563633
theta: 3.18015742302
speed: 13.7675056458
id: 0
t: 307
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:308


xxx before update is x: -83.6003570557
y: 3.0013563633
theta: 3.18015742302
speed: 13.7675056458
id: 0
t: 307
xxx after update is x: -84.4206161499
y: 3.57998228073
theta: 3.07848596573
speed: 13.5686359406
id: 0
t: 308
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.245206356048584, -115.3219985961914, 4.6829047203063965, 14.044449806213379)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state functirom ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.3683950901
y: -114.324279785
theta: 4.80151748657
speed: 13.8986854553
id: 1
t: 307
xxx after update is x: -3.24520635605
y: -115.321998596
theta: 4.68290472031
speed: 14.0444498062
id: 1
t: 308
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:308


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48639999999999795]
222 self.state_dicts[msg.id][msg.t] is (-84.42061614990234, 3.579982280731201, 3.0784859657287598, 13.568635940551758)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:309


xxx before update is x: -3.24520635605
y: -115.321998596
theta: 4.68290472031
speed: 14.0444498062
id: 1
t: 308
xxx after update is x: -3.53628277779
y: -115.958183289
theta: 4.81086969376
speed: 13.8603601456
id: 1
t: 309
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:310


xxx before update is x: -3.53628277779
y: -115.958183289
theta: 4.81086969376
speed: 13.8603601456
id: 1
t: 309
xxx after update is x: -3.11600017548
y: -116.49130249
theta: 4.65098333359
speed: 13.5978031158
id: 1
t: 310
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:311


xxx before update is x: -3.11600017548
y: -116.49130249
theta: 4.65098333359
speed: 13.5978031158
id: 1
t: 310
xxx after update is x: -3.58779907227
y: -116.794387817
theta: 4.8014087677
speed: 13.6901950836
id: 1
t: 311
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:312


xxx before update is x: -3.58779907227
y: -116.794387817
theta: 4.8014087677
speed: 13.6901950836
id: 1
t: 311
xxx after update is x: -3.74910378456
y: -117.597434998
theta: 4.70920991898
speed: 13.9525508881
id: 1
t: 312
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5103999999999982]
222 self.state_dicts[msg.id][msg.t] is (-87.62759399414062, 3.1752512454986572, 3.306713104248047, 14.185583114624023)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.74910378456
y: -117.597434998
theta: 4.70920991898
speed: 13.9525508881
id: 1
t: 312
xxx after update is x: -2.76327753067
y: -118.107009888
theta: 4.62380504608
speed: 13.6959571838
id: 1
t: 313
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:313




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:314


xxx before update is x: -2.76327753067
y: -118.107009888
theta: 4.62380504608
speed: 13.6959571838
id: 1
t: 313
xxx after update is x: -3.10334205627
y: -119.5337677
theta: 4.on


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:309


xxx before update is x: -84.4206161499
y: 3.57998228073
theta: 3.07848596573
speed: 13.5686359406
id: 0
t: 308
xxx after update is x: -85.7891082764
y: 3.337028265
theta: 3.23022937775
speed: 13.4381198883
id: 0
t: 309
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:310


xxx before update is x: -85.7891082764
y: 3.337028265
theta: 3.23022937775
speed: 13.4381198883
id: 0
t: 309
xxx after update is x: -86.6509933472
y: 3.88943958282
theta: 3.04604411125
speed: 13.9574747086
id: 0
t: 310
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:311


xxx before update is x: -86.6509933472
y: 3.88943958282
theta: 3.04604411125
speed: 13.9574747086
id: 0
t: 310
xxx after update is x: -87.0755844116
y: 3.25693464279
theta: 3.31558942795
speed: 13.6048974991
id: 0
t: 311
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -87.0755844116
y: 3.25693464279
theta: 3.31558942795
speed: 13.6048974991
id: 0
t: 311
xxx after update is x: -87.6275939941
y: 3.1752512455
theta: 3.30671310425
speed: 14.1855831146
id: 0
t: 312
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:312


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.7491037845611572, -117.5974349975586, 4.70920991897583, 13.952550888061523)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -87.6275939941
y: 3.1752512455
theta: 3.30671310425
speed: 14.1855831146
id: 0
t: 312
xxx after update is x: -87.9339523315
y: 3.41702246666
theta: 3.21382260323
speed: 13.6312761307
id: 0
t: 313
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:313




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:314


xxx before update is x: -87.9339523315
y: 3.41702246666
theta: 3.21382260323
speed: 13.6312761307
id: 0
t: 313
xxx after update is x: -88.9634399414
y: 3.60998749733
theta: 3.14231109619
speed: 13.6583900452
id: 0
t: 314
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:315


xxx before update is x: -88.9634399414
y: 3.60998749733
theta: 3.14231109619
speed: 13.6583900452
id: 0
t: 314
xxx after update is x: -89.1007614136
y: 3.07459497452
theta: 3.11676502228
speed: 13.9646129608
id: 0
t: 315
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:316


xxx before update is x: -89.1007614136
y: 3.07459497452
theta: 3.11676502228
speed: 13.9646129608
id: 0
t: 315
xxx after update is x: -89.8311080933
y: 3.54861092567
theta: 3.09987735748
speed: 14.202796936
id: 0
t: 316
ma81010961533
speed: 14.3094415665
id: 1
t: 314
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.9555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:315


xxx before update is x: -3.10334205627
y: -119.5337677
theta: 4.81010961533
speed: 14.3094415665
id: 1
t: 314
xxx after update is x: -3.31180644035
y: -119.491348267
theta: 4.66255569458
speed: 14.0155830383
id: 1
t: 315
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:316


xxx before update is x: -3.31180644035
y: -119.491348267
theta: 4.66255569458
speed: 14.0155830383
id: 1
t: 315
xxx after update is x: -3.33604288101
y: -120.20173645
theta: 4.72917604446
speed: 13.6293992996
id: 1
t: 316
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5119999999999982]
222 self.state_dicts[msg.id][msg.t] is (-89.83110809326172, 3.5486109256744385, 3.09987735748291, 14.202796936035156)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:317




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:318


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5407999999999991]
222 self.state_dicts[msg.id][msg.t] is (-90.6266860961914, 3.3632354736328125, 3.023860454559326, 14.141477584838867)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:319


222 self.state_dicts[msg.id][msg.t] is (-92.02507781982422, 3.4837229251861572, 3.068862199783325, 13.705567359924316)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:320


222 self.state_dicts[msg.id][msg.t] is (-92.49623107910156, 3.0232150554656982, 3.1998562812805176, 13.989171981811523)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:321


222 self.state_dicts[msg.id][msg.t] is (-92.64105224609375, 3.4159317016601562, 3.228891134262085, 14.201557159423828)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:322


222 self.state_dicts[msg.id][msg.t] is (-93.53466033935547, 2.778808832168579, 3.183838129043579, 13.756026268005371)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:323


222 self.state_dicts[msg.id][msg.t] is (-94.18193817138672, 3.555394172668457, 3.197165012359619, 14.048952102661133)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:324


222 self.state_dicts[msg.id][msg.t] is (-94.57423400878906, 3.450713872909546, 3.1990549564361572, 14.046935081481934)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:325


222 self.stneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:317


xxx before update is x: -89.8311080933
y: 3.54861092567
theta: 3.09987735748
speed: 14.202796936
id: 0
t: 316
xxx after update is x: -89.9675064087
y: 3.2579562664
theta: 3.05107307434
speed: 13.695941925
id: 0
t: 317
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:318


xxx before update is x: -89.9675064087
y: 3.2579562664
theta: 3.05107307434
speed: 13.695941925
id: 0
t: 317
xxx after update is x: -90.6266860962
y: 3.36323547363
theta: 3.02386045456
speed: 14.1414775848
id: 0
t: 318
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:319


xxx before update is x: -90.6266860962
y: 3.36323547363
theta: 3.02386045456
speed: 14.1414775848
id: 0
t: 318
xxx after update is x: -92.0250778198
y: 3.48372292519
theta: 3.06886219978
speed: 13.7055673599
id: 0
t: 319
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -92.0250778198
y: 3.48372292519
theta: 3.06886219978
speed: 13.7055673599
id: 0
t: 319
xxx after update is x: -92.4962310791
y: 3.02321505547
theta: 3.19985628128
speed: 13.9891719818
id: 0
t: 320
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:320




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -92.4962310791
y: 3.02321505547
theta: 3.19985628128
speed: 13.9891719818
id: 0
t: 320
xxx after update is x: -92.6410522461
y: 3.41593170166
theta: 3.22889113426
speed: 14.2015571594
id: 0
t: 321
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:321




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -92.6410522461
y: 3.41593170166
theta: 3.22889113426
speed: 14.2015571594
id: 0
t: 321
xxx after update is x: -93.5346603394
y: 2.77880883217
theta: 3.18383812904
speed: 13.756026268
id: 0
t: 322
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:322




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -93.5346603394
y: 2.77880883217
theta: 3.18383812904
speed: 13.756026268
id: 0
t: 322
xxx after update is x: -94.1819381714
y: 3.55539417267
theta: 3.19716501236
speed: 14.0489521027
id: 0
t: 323
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:323




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -94.1819381714
y: 3.55539417267
theta: 3.19716501236
speed: 14.0489521027
id: 0
t: 323
xxx after update is x: -94.5742340088
y: 3.45071387291
theta: 3.19905495644
speed: 14.0469350815
id: 0
t: 324
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:324




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -94.5742340088
y: 3.45071387291
theta: 3.19905495644
speed: 14.0469350815
id: 0
t: 324
xxx after update is x: -95.6004638672
y: 3.06519985199
theta: 3.0068423748
speed: 13.7403688431
id: 0
t: 325
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:325




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -95.6004638672
y: 3.06519985199
theta: 3.0068423748
speed: 13.7403688431
id: 0
t: 325
xxx after update is x: -95.9636688232
y: 3.27397036552
theta: 3.12467432022
speed: 13.4645500183
id: 0
t: 326
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:326




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -95.9636688232
y: 3.27397036552
theta: 3.12467432022
speed: 13.4645500183
id: 0
t: 326
xxx after update is x: -96.6843414307
y: 3.68894743919
theta: 3.31955194473
speed: 13.9967517853
id: 0
t: 327
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:327




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -96.6843414307
y: 3.68894743919
theta: 3.31955194473
speed: 13.9967517853
id: 0
t: 327
xxx after update is x: -97.3333816528
y: 3.01305556297
theta: 3.13400173187
speed: 13.990029335
id: 0
t: 328
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:328




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -97.3333816528
y: 3.01305556297
theta: 3.13400173187
speed: 13.990029335
id: 0
t: 328
xxx after update is x: -98.0309753418
y: 3.41159796715
theta: 3.23902654648
speed: 13.3102617264
id: 0
t: 329
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:329




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -98.0309753418
y: 3.41159796715
theta: 3.23902654648
speed: 13.3102617264
id: 0
t: 329
xxx after update is x: -98.6152496338
y: 3.02272391319
theta: 3.26315927505
speed: 12.7814826965
id: 0
t: 330
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:330




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -98.6152496338
y: 3.02272391319
theta: 3.26315927505
speed: 12.7814826965
id: 0
t: 330
xxx after update is x: -99.0473251343
y: 3.16737246513
theta: 3.22100734711
speed: 12.8165311813
id: 0
t: 331
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:331




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -99.0473251343
y: 3.16737246513
theta: 3.22100734711
speed: 12.8165311813
id: 0
t: 331
xxx after update is x: -99.5275726318
y: 3.12156629562
theta: 3.18159985542
speed: 12.6729021072
id: 0
t: 332
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:332




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -99.5275726318
y: 3.12156629562
theta: 3.18159985542
speed: 12.6729021072
id: 0
t: 332
xxx after update is x: -100.282264709
y: 2.88864827156
theta: 3.25079011917
speed: 12.3902654648
id: 0
t: 333
maneuver_negotiatir.py finish the update agentate_dicts[msg.id][msg.t] is (-95.6004638671875, 3.065199851989746, 3.0068423748016357, 13.740368843078613)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:326


222 self.state_dicts[msg.id][msg.t] is (-95.96366882324219, 3.273970365524292, 3.1246743202209473, 13.464550018310547)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:327


222 self.state_dicts[msg.id][msg.t] is (-96.68434143066406, 3.6889474391937256, 3.319551944732666, 13.99675178527832)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:328


222 self.state_dicts[msg.id][msg.t] is (-97.33338165283203, 3.0130555629730225, 3.1340017318725586, 13.990029335021973)
222 self.state_dicts[msg.id][msg.t] is (-98.03097534179688, 3.411597967147827, 3.2390265464782715, 13.310261726379395)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:329


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-98.61524963378906, 3.022723913192749, 3.2631592750549316, 12.781482696533203)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:330


222 self.state_dicts[msg.id][msg.t] is (-99.04732513427734, 3.167372465133667, 3.2210073471069336, 12.81653118133545)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:331


222 self.state_dicts[msg.id][msg.t] is (-99.52757263183594, 3.1215662956237793, 3.1815998554229736, 12.67290210723877)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:332




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:333


222 self.state_dicts[msg.id][msg.t] is (-100.28226470947266, 2.888648271560669, 3.2507901191711426, 12.390265464782715)
222 self.state_dicts[msg.id][msg.t] is (-100.3698959350586, 3.043562173843384, 3.113743305206299, 12.002403259277344)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:334


222 self.state_dicts[msg.id][msg.t] is (-101.29428100585938, 3.1236233711242676, 2.962888717651367, 11.352099418640137)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:335


222 self.state_dicts[msg.id][msg.t] is (-101.96380615234375, 3.1820852756500244, 3.1736042499542236, 11.170734405517578)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:336


222 self.state_dicts[msg.id][msg.t] is (-102.48640441894531, 2.8139119148254395, 3.170625686645508, 11.63730525970459)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:337


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-102.60053253173828, 3.0398221015930176, 3.125856637954712, 10.92085075378418)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:338




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:339


222 self.state_d state from ros funtion
leave the update function 
in spin function, finish the n times spin:333




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -100.282264709
y: 2.88864827156
theta: 3.25079011917
speed: 12.3902654648
id: 0
t: 333
xxx after update is x: -100.369895935
y: 3.04356217384
theta: 3.11374330521
speed: 12.0024032593
id: 0
t: 334
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:334




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -100.369895935
y: 3.04356217384
theta: 3.11374330521
speed: 12.0024032593
id: 0
t: 334
xxx after update is x: -101.294281006
y: 3.12362337112
theta: 2.96288871765
speed: 11.3520994186
id: 0
t: 335
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:335




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -101.294281006
y: 3.12362337112
theta: 2.96288871765
speed: 11.3520994186
id: 0
t: 335
xxx after update is x: -101.963806152
y: 3.18208527565
theta: 3.17360424995
speed: 11.1707344055
id: 0
t: 336
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:336




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -101.963806152
y: 3.18208527565
theta: 3.17360424995
speed: 11.1707344055
id: 0
t: 336
xxx after update is x: -102.486404419
y: 2.81391191483
theta: 3.17062568665
speed: 11.6373052597
id: 0
t: 337
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:337




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -102.486404419
y: 2.81391191483
theta: 3.17062568665
speed: 11.6373052597
id: 0
t: 337
xxx after update is x: -102.600532532
y: 3.03982210159
theta: 3.12585663795
speed: 10.9208507538
id: 0
t: 338
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:338




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -102.600532532
y: 3.03982210159
theta: 3.12585663795
speed: 10.9208507538
id: 0
t: 338
xxx after update is x: -102.812446594
y: 3.22057747841
theta: 3.07105708122
speed: 10.6329193115
id: 0
t: 339
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:339




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -102.812446594
y: 3.22057747841
theta: 3.07105708122
speed: 10.6329193115
id: 0
t: 339
xxx after update is x: -103.779251099
y: 3.51362705231
theta: 3.12779021263
speed: 10.7857542038
id: 0
t: 340
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:340




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -103.779251099
y: 3.51362705231
theta: 3.12779021263
speed: 10.7857542038
id: 0
t: 340
xxx after update is x: -104.557823181
y: 3.42065811157
theta: 3.19119143486
speed: 9.98530769348
id: 0
t: 341
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:341




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -104.557823181
y: 3.42065811157
theta: 3.19119143486
speed: 9.98530769348
id: 0
t: 341
xxx after update is x: -104.890808105
y: 3.91741085052
theta: 3.2333214283
speed: 9.97511672974
id: 0
t: 342
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:342




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -104.890808105
y: 3.91741085052
theta: 3.2333214283
speed: 9.97511672974
id: 0
t: 342
xxx after update is x: -105.348449707
y: 3.25768995285
theta: 3.11764955521
speed: 9.74453258514
id: 0
t: 343
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:343




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -105.348449707
y: 3.25768995285
theta: 3.11764955521
speed: 9.74453258514
id: 0
t: 343
xxx after update is x: -105.348625183
y: 3.84847283363
theta: 3.35885572433
speed: 9.42995643616
id: 0
t: 344
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:344




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -105.348625183
y: 3.84847283363
theta: 3.35885572433
speed: 9.42995643616
id: 0
t: 344
xxx after update is x: -105.945709229
y: 3.44668865204
theta: 3.11343502998
speed: 9.28318786621
id: 0
t: 345
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:345




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -105.945709229
y: 3.44668865204
theta: 3.11343502998
speed: 9.28318786621
id: 0
t: 345
xxx after update is x: -106.219444275
y: 3.48543810844
theta: 3.12906074524
speed: 8.60838031769
id: 0
t: 346
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:346




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -106.219444275
y: 3.48543810844
theta: 3.12906074524
speed: 8.60838031769
id: 0
t: 346
xxx after update is x: -106.485939026
y: 3.4911301136
theta: 3.05838108063
speed: 8.48834705353
id: 0
t: 347
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:347




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -106.485939026
y: 3.4911301136
theta: 3.05838108063
speed: 8.48834705353
id: 0
t: 347
xxx after update is x: -107.055465698
y: 3.10629153252
theta: 3.25288677216
speed: 8.24175739288
id: 0
t: 348
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:348




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -107.055465698
y: 3.10629153252
theta: 3.25288677216
speed: 8.24175739288
id: 0
t: 348
xxx after update is x: -107.546714783
y: 3.39799141884
theta: 3.13336610794
speed: 8.10169219971
id: 0
t: 349
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:349




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -107.546714783
y: 3.39799141884
theta: 3.13336610794
speed: 8.10169219971
id: 0
t: 349
xxx after update is x: -107.987236023
y: 3.28205513954
theta: 3.22133374214
speed: 7.4779253006
id: 0
t: 350
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times icts[msg.id][msg.t] is (-102.81244659423828, 3.2205774784088135, 3.071057081222534, 10.632919311523438)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:340


222 self.state_dicts[msg.id][msg.t] is (-103.77925109863281, 3.513627052307129, 3.1277902126312256, 10.785754203796387)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:341


222 self.state_dicts[msg.id][msg.t] is (-104.55782318115234, 3.4206581115722656, 3.1911914348602295, 9.985307693481445)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:342


222 self.state_dicts[msg.id][msg.t] is (-104.89080810546875, 3.9174108505249023, 3.23332142829895, 9.975116729736328)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:343


222 self.state_dicts[msg.id][msg.t] is (-105.34844970703125, 3.257689952850342, 3.117649555206299, 9.744532585144043)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:344


222 self.state_dicts[msg.id][msg.t] is (-105.34862518310547, 3.848472833633423, 3.358855724334717, 9.429956436157227)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:345


222 self.state_dicts[msg.id][msg.t] is (-105.94570922851562, 3.446688652038574, 3.1134350299835205, 9.283187866210938)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:346


222 self.state_dicts[msg.id][msg.t] is (-106.21944427490234, 3.485438108444214, 3.129060745239258, 8.608380317687988)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:347


222 self.state_dicts[msg.id][msg.t] is (-106.4859390258789, 3.4911301136016846, 3.0583810806274414, 8.488347053527832)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:348


222 self.state_dicts[msg.id][msg.t] is (-107.05546569824219, 3.1062915325164795, 3.2528867721557617, 8.2417573928833)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:349


222 self.state_dicts[msg.id][msg.t] is (-107.54671478271484, 3.397991418838501, 3.133366107940674, 8.101692199707031)
222 self.state_dicts[msg.id][msg.t] is (-107.98723602294922, 3.282055139541626, 3.2213337421417236, 7.4779253005981445)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:350


222 self.state_dicts[msg.id][msg.t] is (-107.70767211914062, 3.1943917274475098, 3.035029411315918, 7.526130199432373)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:351




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:352


222 self.state_dicts[msg.id][msg.t] is (-108.46440887451172, 3.7149689197540283, 3.191382884979248, 7.196340084075928)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-108.796142578125, 3.467135190963745, 3.063323974609375, 6.774605751037598)


going to the update function
sim.py in the sim.py spin:350




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -107.987236023
y: 3.28205513954
theta: 3.22133374214
speed: 7.4779253006
id: 0
t: 350
xxx after update is x: -107.707672119
y: 3.19439172745
theta: 3.03502941132
speed: 7.52613019943
id: 0
t: 351
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:351




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -107.707672119
y: 3.19439172745
theta: 3.03502941132
speed: 7.52613019943
id: 0
t: 351
xxx after update is x: -108.464408875
y: 3.71496891975
theta: 3.19138288498
speed: 7.19634008408
id: 0
t: 352
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:352




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -108.464408875
y: 3.71496891975
theta: 3.19138288498
speed: 7.19634008408
id: 0
t: 352
xxx after update is x: -108.796142578
y: 3.46713519096
theta: 3.06332397461
speed: 6.77460575104
id: 0
t: 353
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:353




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -108.796142578
y: 3.46713519096
theta: 3.06332397461
speed: 6.77460575104
id: 0
t: 353
xxx after update is x: -108.918663025
y: 3.65361642838
theta: 3.00960755348
speed: 6.83420228958
id: 0
t: 354
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:354




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -108.918663025
y: 3.65361642838
theta: 3.00960755348
speed: 6.83420228958
id: 0
t: 354
xxx after update is x: -109.123908997
y: 2.59843635559
theta: 3.10114383698
speed: 6.50837278366
id: 0
t: 355
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:355




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -109.123908997
y: 2.59843635559
theta: 3.10114383698
speed: 6.50837278366
id: 0
t: 355
xxx after update is x: -109.888031006
y: 3.14559102058
theta: 2.92456007004
speed: 6.33524894714
id: 0
t: 356
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:356




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -109.888031006
y: 3.14559102058
theta: 2.92456007004
speed: 6.33524894714
id: 0
t: 356
xxx after update is x: -109.831359863
y: 3.26503300667
theta: 3.1900396347
speed: 5.97248363495
id: 0
t: 357
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:357




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -109.831359863
y: 3.26503300667
theta: 3.1900396347
speed: 5.97248363495
id: 0
t: 357
xxx after update is x: -110.051841736
y: 2.92238330841
theta: 3.10538625717
speed: 5.46411800385
id: 0
t: 358
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:358




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -110.051841736
y: 2.92238330841
theta: 3.10538625717
speed: 5.46411800385
id: 0
t: 358
xxx after update is x: -110.642112732
y: 3.2268455update function 
leave the update function 
in spin function, finish the n times spin:353


222 self.state_dicts[msg.id][msg.t] is (-108.91866302490234, 3.653616428375244, 3.0096075534820557, 6.834202289581299)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:354


222 self.state_dicts[msg.id][msg.t] is (-109.12390899658203, 2.5984363555908203, 3.1011438369750977, 6.508372783660889)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:355


222 self.state_dicts[msg.id][msg.t] is (-109.88803100585938, 3.1455910205841064, 2.924560070037842, 6.335248947143555)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:356




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:357


222 self.state_dicts[msg.id][msg.t] is (-109.83135986328125, 3.265033006668091, 3.19003963470459, 5.9724836349487305)
222 self.state_dicts[msg.id][msg.t] is (-110.05184173583984, 2.9223833084106445, 3.105386257171631, 5.464118003845215)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:358


222 self.state_dicts[msg.id][msg.t] is (-110.6421127319336, 3.2268455028533936, 3.169745683670044, 5.265603065490723)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:359


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444
222 self.state_dicts[msg.id][msg.t] is (-110.73213958740234, 3.091151475906372, 2.99639892578125, 5.358327865600586)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:360








self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-110.8381576538086, 3.0557546615600586, 3.1998238563537598, 4.891025066375732)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:361




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:362


222 self.state_dicts[msg.id][msg.t] is (-111.17637634277344, 3.4536166191101074, 3.1039347648620605, 4.421761512756348)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:363


222 self.state_dicts[msg.id][msg.t] is (-111.22148895263672, 2.9368462562561035, 3.145552158355713, 4.206425189971924)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:364


222 self.state_dicts[msg.id][msg.t] is (-112.00155639648438, 3.056626796722412, 3.1907191276550293, 3.9058210849761963)
222 self.state_dicts[msg.id][msg.t] is (-111.76759338378906, 2.9785215854644775, 3.2848963737487793, 3.8228628635406494)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:365


222 self.state_dicts[msg.id][msg.t] is (-112.02690124511719, 3.9149961471557617, 3.0498714447021484, 3.286874771118164)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:366




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:367


222 self.state_dicts[msg.id][msg.t] is (-112.18839263916016, 3.2794029712677, 2.96923828125, 3.236732244491577)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requ0285
theta: 3.16974568367
speed: 5.26560306549
id: 0
t: 359
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:359




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -110.642112732
y: 3.22684550285
theta: 3.16974568367
speed: 5.26560306549
id: 0
t: 359
xxx after update is x: -110.732139587
y: 3.09115147591
theta: 2.99639892578
speed: 5.3583278656
id: 0
t: 360
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:360




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -110.732139587
y: 3.09115147591
theta: 2.99639892578
speed: 5.3583278656
id: 0
t: 360
xxx after update is x: -110.838157654
y: 3.05575466156
theta: 3.19982385635
speed: 4.89102506638
id: 0
t: 361
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:361




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -110.838157654
y: 3.05575466156
theta: 3.19982385635
speed: 4.89102506638
id: 0
t: 361
xxx after update is x: -111.176376343
y: 3.45361661911
theta: 3.10393476486
speed: 4.42176151276
id: 0
t: 362
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:362




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -111.176376343
y: 3.45361661911
theta: 3.10393476486
speed: 4.42176151276
id: 0
t: 362
xxx after update is x: -111.221488953
y: 2.93684625626
theta: 3.14555215836
speed: 4.20642518997
id: 0
t: 363
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:363




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -111.221488953
y: 2.93684625626
theta: 3.14555215836
speed: 4.20642518997
id: 0
t: 363
xxx after update is x: -112.001556396
y: 3.05662679672
theta: 3.19071912766
speed: 3.90582108498
id: 0
t: 364
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:364




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -112.001556396
y: 3.05662679672
theta: 3.19071912766
speed: 3.90582108498
id: 0
t: 364
xxx after update is x: -111.767593384
y: 2.97852158546
theta: 3.28489637375
speed: 3.82286286354
id: 0
t: 365
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:365




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -111.767593384
y: 2.97852158546
theta: 3.28489637375
speed: 3.82286286354
id: 0
t: 365
xxx after update is x: -112.026901245
y: 3.91499614716
theta: 3.0498714447
speed: 3.28687477112
id: 0
t: 366
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:366




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -112.026901245
y: 3.91499614716
theta: 3.0498714447
speed: 3.28687477112
id: 0
t: 366
xxx after update is x: -112.188392639
y: 3.27940297127
theta: 2.96923828125
speed: 3.23673224449
id: 0
t: 367
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:367




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -112.188392639
y: 3.27940297127
theta: 2.96923828125
speed: 3.23673224449
id: 0
t: 367
xxx after update is x: -112.533424377
y: 3.43257594109
theta: 3.20561051369
speed: 3.00908470154
id: 0
t: 368
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:368




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -112.533424377
y: 3.43257594109
theta: 3.20561051369
speed: 3.00908470154
id: 0
t: 368
xxx after update is x: -112.477104187
y: 3.60419249535
theta: 3.02884054184
speed: 2.75841283798
id: 0
t: 369
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:369




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -112.477104187
y: 3.60419249535
theta: 3.02884054184
speed: 2.75841283798
id: 0
t: 369
xxx after update is x: -112.484916687
y: 3.41200351715
theta: 3.17438149452
speed: 2.70097231865
id: 0
t: 370
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:370




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -112.484916687
y: 3.41200351715
theta: 3.17438149452
speed: 2.70097231865
id: 0
t: 370
xxx after update is x: -112.654327393
y: 3.06532096863
theta: 3.12620592117
speed: 2.10977506638
id: 0
t: 371
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:371




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -112.654327393
y: 3.06532096863
theta: 3.12620592117
speed: 2.10977506638
id: 0
t: 371
xxx after update is x: -113.060722351
y: 3.35824537277
theta: 3.0435731411
speed: 2.11596918106
id: 0
t: 372
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:372




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -113.060722351
y: 3.35824537277
theta: 3.0435731411
speed: 2.11596918106
id: 0
t: 372
xxx after update is x: -112.765571594
y: 3.32178735733
theta: 3.21315717697
speed: 1.70501732826
id: 0
t: 373
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:373




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -112.765571594
y: 3.32178735733
theta: 3.21315717697
speed: 1.70501732826
id: 0
t: 373
xxx after update is x: -112.88193512
y: 3.7162129879
theta: 3.13995194435
speed: 1.07057392597
id: 0
t: 374
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:374




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -112.88193512
y: 3.7162129879
theta: 3.13995194435
speed: 1.07057392597
id: 0
t: 374
xxx after update is x: -113.298286438
y: 3.27540588379
theta: 3.08247923851
speed: 0.807988226414
id: 0
t: 375
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:375




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -113.298286438
y: 3.27540588379
theta: 3.08247923851
speed: 0.807988226414
id: 0
t: 375
xxx after update is x: -113.3358078
y: 3.16566300392
theta: 3.25348901749
speed: 0.555162489414
id: 0
t: 376
maneuver_negotiatir.py finish thested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-112.5334243774414, 3.4325759410858154, 3.205610513687134, 3.009084701538086)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:368




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:369


222 self.state_dicts[msg.id][msg.t] is (-112.47710418701172, 3.6041924953460693, 3.0288405418395996, 2.7584128379821777)
222 self.state_dicts[msg.id][msg.t] is (-112.48491668701172, 3.412003517150879, 3.1743814945220947, 2.700972318649292)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:370


222 self.state_dicts[msg.id][msg.t] is (-112.65432739257812, 3.0653209686279297, 3.1262059211730957, 2.1097750663757324)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:371


222 self.state_dicts[msg.id][msg.t] is (-113.06072235107422, 3.358245372772217, 3.0435731410980225, 2.115969181060791)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:372


222 self.state_dicts[msg.id][msg.t] is (-112.76557159423828, 3.3217873573303223, 3.2131571769714355, 1.705017328262329)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:373


222 self.state_dicts[msg.id][msg.t] is (-112.8819351196289, 3.7162129878997803, 3.1399519443511963, 1.0705739259719849)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:374




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:375


222 self.state_dicts[msg.id][msg.t] is (-113.29828643798828, 3.2754058837890625, 3.082479238510132, 0.8079882264137268)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:376


222 self.state_dicts[msg.id][msg.t] is (-113.33580780029297, 3.165663003921509, 3.2534890174865723, 0.5551624894142151)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:377


222 self.state_dicts[msg.id][msg.t] is (-113.06903839111328, 2.962435722351074, 3.248865842819214, 0.24010320007801056)
222 self.state_dicts[msg.id][msg.t] is (-112.40752410888672, 3.4920222759246826, 3.1481363773345947, 0.053133390843868256)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:378




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:379


222 self.state_dicts[msg.id][msg.t] is (-113.07221984863281, 3.2885701656341553, 3.0557644367218018, -0.07145512104034424)
222 self.state_dicts[msg.id][msg.t] is (-113.0091781616211, 3.1652228832244873, 3.2287395000457764, 0.19059917330741882)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:380




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:381


222 self.state_dicts[msg.id][msg.t] is (-112.81636810302734, 3.240703582763672, 3.182110548019409, 0.04578433558344841)
222 self.state_dicts[msg.id][msg.t] is (-113.14192962646484, 3.493990898132324, 3.352712392807007, -0.05911128e update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:376




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -113.3358078
y: 3.16566300392
theta: 3.25348901749
speed: 0.555162489414
id: 0
t: 376
xxx after update is x: -113.069038391
y: 2.96243572235
theta: 3.24886584282
speed: 0.240103200078
id: 0
t: 377
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:377




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -113.069038391
y: 2.96243572235
theta: 3.24886584282
speed: 0.240103200078
id: 0
t: 377
xxx after update is x: -112.407524109
y: 3.49202227592
theta: 3.14813637733
speed: 0.0531333908439
id: 0
t: 378
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:378




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -112.407524109
y: 3.49202227592
theta: 3.14813637733
speed: 0.0531333908439
id: 0
t: 378
xxx after update is x: -113.072219849
y: 3.28857016563
theta: 3.05576443672
speed: -0.0714551210403
id: 0
t: 379
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:379




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -113.072219849
y: 3.28857016563
theta: 3.05576443672
speed: -0.0714551210403
id: 0
t: 379
xxx after update is x: -113.009178162
y: 3.16522288322
theta: 3.22873950005
speed: 0.190599173307
id: 0
t: 380
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:380




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.009178162
y: 3.16522288322
theta: 3.22873950005
speed: 0.190599173307
id: 0
t: 380
xxx after update is x: -112.816368103
y: 3.24070358276
theta: 3.18211054802
speed: 0.0457843355834
id: 0
t: 381
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:381




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.816368103
y: 3.24070358276
theta: 3.18211054802
speed: 0.0457843355834
id: 0
t: 381
xxx after update is x: -113.141929626
y: 3.49399089813
theta: 3.35271239281
speed: -0.0591112822294
id: 0
t: 382
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:382




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.141929626
y: 3.49399089813
theta: 3.35271239281
speed: -0.0591112822294
id: 0
t: 382
xxx after update is x: -112.85269165
y: 3.05101752281
theta: 3.22451663017
speed: -0.0358155108988
id: 0
t: 383
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:383




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.85269165
y: 3.05101752281
theta: 3.22451663017
speed: -0.0358155108988
id: 0
t: 383
xxx after update is x: -112.9789505
y: 3.15234708786
theta: 3.13986968994
speed: -0.278757065535
id: 0
t: 384
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:384




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.9789505
y: 3.15234708786
theta: 3.13986968994
speed: -0.278757065535
id: 0
t: 384
xxx after update is x: -112.998245239
y: 3.61670184135
theta: 3.14267516136
speed: -0.0940831452608
id: 0
t: 385
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:385




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.998245239
y: 3.61670184135
theta: 3.14267516136
speed: -0.0940831452608
id: 0
t: 385
xxx after update is x: -113.022216797
y: 3.4057238102
theta: 3.1366019249
speed: -0.0677076354623
id: 0
t: 386
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:386




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.022216797
y: 3.4057238102
theta: 3.1366019249
speed: -0.0677076354623
id: 0
t: 386
xxx after update is x: -112.591560364
y: 3.68438506126
theta: 3.03783488274
speed: -0.193808376789
id: 0
t: 387
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:387




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.591560364
y: 3.68438506126
theta: 3.03783488274
speed: -0.193808376789
id: 0
t: 387
xxx after update is x: -112.883247375
y: 3.10885858536
theta: 3.12666654587
speed: 0.277562379837
id: 0
t: 388
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:388




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.883247375
y: 3.10885858536
theta: 3.12666654587
speed: 0.277562379837
id: 0
t: 388
xxx after update is x: -113.540985107
y: 2.62361454964
theta: 2.9226167202
speed: -0.0190622340888
id: 0
t: 389
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:389




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.540985107
y: 2.62361454964
theta: 2.9226167202
speed: -0.0190622340888
id: 0
t: 389
xxx after update is x: -112.966659546
y: 3.73656272888
theta: 3.13891339302
speed: 0.11464291811
id: 0
t: 390
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:390




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.966659546
y: 3.73656272888
theta: 3.13891339302
speed: 0.11464291811
id: 0
t: 390
xxx after update is x: -113.262176514
y: 3.66438317299
theta: 3.16525602341
speed: -0.0985567718744
id: 0
t: 391
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:391




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.262176514
y: 3.66438317299
theta: 3.16525602341
speed: -0.0985567718744
id: 0
t: 391
xxx after update is x: -112.870895386
y: 3.3088080883
theta: 2.94497084618
speed: 0.27776491642
id: 0
t: 392
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:392




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.870895386
y: 3.3088080883
theta: 2.94497084618
speed: 0.27776491642
id: 0
t: 392
xxx after update is x: -113.070785522
y: 3.26876068115
thet222942352)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:382


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:383


222 self.state_dicts[msg.id][msg.t] is (-112.85269165039062, 3.0510175228118896, 3.2245166301727295, -0.035815510898828506)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:384


222 self.state_dicts[msg.id][msg.t] is (-112.97895050048828, 3.1523470878601074, 3.1398696899414062, -0.2787570655345917)
222 self.state_dicts[msg.id][msg.t] is (-112.99824523925781, 3.61670184135437, 3.1426751613616943, -0.09408314526081085)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:385


222 self.state_dicts[msg.id][msg.t] is (-113.022216796875, 3.405723810195923, 3.1366019248962402, -0.06770763546228409)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:386




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:387


222 self.state_dicts[msg.id][msg.t] is (-112.59156036376953, 3.684385061264038, 3.037834882736206, -0.19380837678909302)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:388


222 self.state_dicts[msg.id][msg.t] is (-112.88324737548828, 3.108858585357666, 3.12666654586792, 0.27756237983703613)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:389


222 self.state_dicts[msg.id][msg.t] is (-113.54098510742188, 2.623614549636841, 2.922616720199585, -0.019062234088778496)
222 self.state_dicts[msg.id][msg.t] is (-112.96665954589844, 3.736562728881836, 3.13891339302063, 0.1146429181098938)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:390


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:391


222 self.state_dicts[msg.id][msg.t] is (-113.26217651367188, 3.6643831729888916, 3.1652560234069824, -0.0985567718744278)
222 self.state_dicts[msg.id][msg.t] is (-112.87089538574219, 3.3088080883026123, 2.9449708461761475, 0.2777649164199829)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:392




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:393


222 self.state_dicts[msg.id][msg.t] is (-113.07078552246094, 3.2687606811523438, 3.152805805206299, -0.2018709033727646)
222 self.state_dicts[msg.id][msg.t] is (-113.0911865234375, 2.945722818374634, 3.262965679168701, -0.27306658029556274)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:394


222 self.state_dicts[msg.id][msg.t] is (-113.30338287353516, 3.6482648849487305, 3.149604558944702, 0.01402263529598713)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:395


222 self.state_dicts[msg.id][msg.t] is (-113.28932189941406, 3.277029514312744, 3.0920865a: 3.15280580521
speed: -0.201870903373
id: 0
t: 393
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:393




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.070785522
y: 3.26876068115
theta: 3.15280580521
speed: -0.201870903373
id: 0
t: 393
xxx after update is x: -113.091186523
y: 2.94572281837
theta: 3.26296567917
speed: -0.273066580296
id: 0
t: 394
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:394




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.091186523
y: 2.94572281837
theta: 3.26296567917
speed: -0.273066580296
id: 0
t: 394
xxx after update is x: -113.303382874
y: 3.64826488495
theta: 3.14960455894
speed: 0.014022635296
id: 0
t: 395
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:395




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.303382874
y: 3.64826488495
theta: 3.14960455894
speed: 0.014022635296
id: 0
t: 395
xxx after update is x: -113.289321899
y: 3.27702951431
theta: 3.09208655357
speed: -0.136866927147
id: 0
t: 396
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:396




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.289321899
y: 3.27702951431
theta: 3.09208655357
speed: -0.136866927147
id: 0
t: 396
xxx after update is x: -113.08769989
y: 3.29966211319
theta: 3.13281369209
speed: -0.20300360024
id: 0
t: 397
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:397




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.08769989
y: 3.29966211319
theta: 3.13281369209
speed: -0.20300360024
id: 0
t: 397
xxx after update is x: -112.777427673
y: 3.97592806816
theta: 3.07623004913
speed: -0.169222310185
id: 0
t: 398
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:398




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.777427673
y: 3.97592806816
theta: 3.07623004913
speed: -0.169222310185
id: 0
t: 398
xxx after update is x: -113.11063385
y: 3.01046514511
theta: 3.05369663239
speed: 0.218563228846
id: 0
t: 399
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:399




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.11063385
y: 3.01046514511
theta: 3.05369663239
speed: 0.218563228846
id: 0
t: 399
xxx after update is x: -113.135368347
y: 3.41455435753
theta: 3.29366064072
speed: 0.0233554821461
id: 0
t: 400
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:400




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.135368347
y: 3.41455435753
theta: 3.29366064072
speed: 0.0233554821461
id: 0
t: 400
xxx after update is x: -113.455497742
y: 2.69029998779
theta: 3.11685228348
speed: 0.131621047854
id: 0
t: 401
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times 535736084, -0.13686692714691162)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:396




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:397


222 self.state_dicts[msg.id][msg.t] is (-113.08769989013672, 3.2996621131896973, 3.1328136920928955, -0.20300360023975372)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-112.77742767333984, 3.9759280681610107, 3.076230049133301, -0.16922231018543243)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:398




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:399


222 self.state_dicts[msg.id][msg.t] is (-113.11063385009766, 3.010465145111084, 3.053696632385254, 0.2185632288455963)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:400


222 self.state_dicts[msg.id][msg.t] is (-113.13536834716797, 3.4145543575286865, 3.2936606407165527, 0.023355482146143913)
222 self.state_dicts[msg.id][msg.t] is (-113.45549774169922, 2.6902999877929688, 3.116852283477783, 0.13162104785442352)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:401


222 self.state_dicts[msg.id][msg.t] is (-112.6310043334961, 3.1490612030029297, 3.0374367237091064, -0.1187097504734993)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:402


222 self.state_dicts[msg.id][msg.t] is (-112.835693359375, 3.2250983715057373, 3.1404099464416504, -0.16996349394321442)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:403


222 self.state_dicts[msg.id][msg.t] is (-113.51360321044922, 3.0266454219818115, 3.0690619945526123, -0.09471968561410904)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:404


222 self.state_dicts[msg.id][msg.t] is (-112.8341064453125, 3.1559038162231445, 3.2521259784698486, -0.22463048994541168)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:405


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-112.8145980834961, 3.040306568145752, 3.0773911476135254, 0.18412157893180847)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:406


222 self.state_dicts[msg.id][msg.t] is (-113.15634155273438, 2.887397289276123, 3.183837890625, 0.020571960136294365)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:407


222 self.state_dicts[msg.id][msg.t] is (-113.22713470458984, 3.587963581085205, 3.0589566230773926, -0.07386516034603119)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:408




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:409


222 self.state_dicts[msg.id][msg.t] is (-112.97960662841797, 3.5283403396606445, 3.1328649520874023, 0.0028188934084028006)


going to the update function
sim.py in the sim.py update fspin:401




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.455497742
y: 2.69029998779
theta: 3.11685228348
speed: 0.131621047854
id: 0
t: 401
xxx after update is x: -112.631004333
y: 3.149061203
theta: 3.03743672371
speed: -0.118709750473
id: 0
t: 402
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:402




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.631004333
y: 3.149061203
theta: 3.03743672371
speed: -0.118709750473
id: 0
t: 402
xxx after update is x: -112.835693359
y: 3.22509837151
theta: 3.14040994644
speed: -0.169963493943
id: 0
t: 403
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:403




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.835693359
y: 3.22509837151
theta: 3.14040994644
speed: -0.169963493943
id: 0
t: 403
xxx after update is x: -113.51360321
y: 3.02664542198
theta: 3.06906199455
speed: -0.0947196856141
id: 0
t: 404
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:404




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.51360321
y: 3.02664542198
theta: 3.06906199455
speed: -0.0947196856141
id: 0
t: 404
xxx after update is x: -112.834106445
y: 3.15590381622
theta: 3.25212597847
speed: -0.224630489945
id: 0
t: 405
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:405




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.834106445
y: 3.15590381622
theta: 3.25212597847
speed: -0.224630489945
id: 0
t: 405
xxx after update is x: -112.814598083
y: 3.04030656815
theta: 3.07739114761
speed: 0.184121578932
id: 0
t: 406
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:406




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.814598083
y: 3.04030656815
theta: 3.07739114761
speed: 0.184121578932
id: 0
t: 406
xxx after update is x: -113.156341553
y: 2.88739728928
theta: 3.18383789062
speed: 0.0205719601363
id: 0
t: 407
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:407




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.156341553
y: 2.88739728928
theta: 3.18383789062
speed: 0.0205719601363
id: 0
t: 407
xxx after update is x: -113.227134705
y: 3.58796358109
theta: 3.05895662308
speed: -0.073865160346
id: 0
t: 408
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:408




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.227134705
y: 3.58796358109
theta: 3.05895662308
speed: -0.073865160346
id: 0
t: 408
xxx after update is x: -112.979606628
y: 3.52834033966
theta: 3.13286495209
speed: 0.0028188934084
id: 0
t: 409
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:409




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.979606628
y: 3.52834033966
theta: 3.13286495209
speed: 0.0028188934084
id: 0
t: 409
xxx after update is x: -112.677581787
y: 3.65391731262
theta: 3.06234884262
speed: 0.0674991384149
id: 0
t: 410
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:410




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.677581787
y: 3.65391731262
theta: 3.06234884262
speed: 0.0674991384149
id: 0
t: 410
xxx after update is x: -113.249214172
y: 3.22948241234
theta: 2.99981641769
speed: -0.0830726847053
id: 0
t: 411
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:411




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.249214172
y: 3.22948241234
theta: 2.99981641769
speed: -0.0830726847053
id: 0
t: 411
xxx after update is x: -113.628417969
y: 3.71806573868
theta: 3.20406913757
speed: -0.160411268473
id: 0
t: 412
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:412




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.628417969
y: 3.71806573868
theta: 3.20406913757
speed: -0.160411268473
id: 0
t: 412
xxx after update is x: -112.609062195
y: 3.35016751289
theta: 3.25324320793
speed: 0.0684372782707
id: 0
t: 413
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:413




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.609062195
y: 3.35016751289
theta: 3.25324320793
speed: 0.0684372782707
id: 0
t: 413
xxx after update is x: -113.15625
y: 2.88204669952
theta: 3.1101193428
speed: -0.139307320118
id: 0
t: 414
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:414




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.15625
y: 2.88204669952
theta: 3.1101193428
speed: -0.139307320118
id: 0
t: 414
xxx after update is x: -113.050003052
y: 3.11792635918
theta: 3.03690171242
speed: 0.403435647488
id: 0
t: 415
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:415




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.050003052
y: 3.11792635918
theta: 3.03690171242
speed: 0.403435647488
id: 0
t: 415
xxx after update is x: -113.17490387
y: 2.91846060753
theta: 3.07104539871
speed: 0.0272319409996
id: 0
t: 416
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:416




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.17490387
y: 2.91846060753
theta: 3.07104539871
speed: 0.0272319409996
id: 0
t: 416
xxx after update is x: -112.73600769
y: 3.1316587925
theta: 3.20726132393
speed: -0.000996859977022
id: 0
t: 417
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:417




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.73600769
y: 3.1316587925
theta: 3.20726132393
speed: -0.000996859977022
id: 0
t: 417
xxx after update is x: -112.41608429
y: 2.96960878372
theta: 3.24909353256
speed: -0.0122232157737
id: 0
t: 418
maneuver_negounction 
leave the update function 
in spin function, finish the n times spin:410


222 self.state_dicts[msg.id][msg.t] is (-112.67758178710938, 3.6539173126220703, 3.0623488426208496, 0.06749913841485977)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:411


222 self.state_dicts[msg.id][msg.t] is (-113.24921417236328, 3.229482412338257, 2.999816417694092, -0.08307268470525742)
222 self.state_dicts[msg.id][msg.t] is (-113.62841796875, 3.7180657386779785, 3.204069137573242, -0.1604112684726715)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:412


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:413


222 self.state_dicts[msg.id][msg.t] is (-112.60906219482422, 3.3501675128936768, 3.2532432079315186, 0.06843727827072144)
222 self.state_dicts[msg.id][msg.t] is (-113.15625, 2.882046699523926, 3.110119342803955, -0.13930732011795044)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:414


222 self.state_dicts[msg.id][msg.t] is (-113.05000305175781, 3.1179263591766357, 3.0369017124176025, 0.4034356474876404)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:415


222 self.state_dicts[msg.id][msg.t] is (-113.1749038696289, 2.9184606075286865, 3.071045398712158, 0.027231940999627113)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:416


222 self.state_dicts[msg.id][msg.t] is (-112.73600769042969, 3.1316587924957275, 3.207261323928833, -0.0009968599770218134)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:417




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:418


222 self.state_dicts[msg.id][msg.t] is (-112.41608428955078, 2.969608783721924, 3.249093532562256, -0.012223215773701668)
222 self.state_dicts[msg.id][msg.t] is (-113.27203369140625, 2.6155576705932617, 3.0605340003967285, 0.09640538692474365)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:419


222 self.state_dicts[msg.id][msg.t] is (-112.41473388671875, 3.542909622192383, 3.0305161476135254, -0.05484529584646225)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:420


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:421


222 self.state_dicts[msg.id][msg.t] is (-113.03948974609375, 3.0131983757019043, 3.1584646701812744, 0.057895760983228683)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:422


222 self.state_dicts[msg.id][msg.t] is (-113.2933349609375, 2.7909188270568848, 3.2272536754608154, -0.24905529618263245)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:423


222 self.state_dicts[msg.id][msg.t] is (-113.3368148803711, 3.2100861072540283, 3.1088597774505615, 0.33471715450286865)
222 self.state_dicts[msg.id][msg.t] is tiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:418




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.41608429
y: 2.96960878372
theta: 3.24909353256
speed: -0.0122232157737
id: 0
t: 418
xxx after update is x: -113.272033691
y: 2.61555767059
theta: 3.0605340004
speed: 0.0964053869247
id: 0
t: 419
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:419




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.272033691
y: 2.61555767059
theta: 3.0605340004
speed: 0.0964053869247
id: 0
t: 419
xxx after update is x: -112.414733887
y: 3.54290962219
theta: 3.03051614761
speed: -0.0548452958465
id: 0
t: 420
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:420




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.414733887
y: 3.54290962219
theta: 3.03051614761
speed: -0.0548452958465
id: 0
t: 420
xxx after update is x: -113.039489746
y: 3.0131983757
theta: 3.15846467018
speed: 0.0578957609832
id: 0
t: 421
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:421




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.039489746
y: 3.0131983757
theta: 3.15846467018
speed: 0.0578957609832
id: 0
t: 421
xxx after update is x: -113.293334961
y: 2.79091882706
theta: 3.22725367546
speed: -0.249055296183
id: 0
t: 422
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:422




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.293334961
y: 2.79091882706
theta: 3.22725367546
speed: -0.249055296183
id: 0
t: 422
xxx after update is x: -113.33681488
y: 3.21008610725
theta: 3.10885977745
speed: 0.334717154503
id: 0
t: 423
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:423




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.33681488
y: 3.21008610725
theta: 3.10885977745
speed: 0.334717154503
id: 0
t: 423
xxx after update is x: -112.870635986
y: 3.73992562294
theta: 2.95269846916
speed: -0.0359233878553
id: 0
t: 424
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:424




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.870635986
y: 3.73992562294
theta: 2.95269846916
speed: -0.0359233878553
id: 0
t: 424
xxx after update is x: -113.072372437
y: 3.04408669472
theta: 3.10468888283
speed: -0.130678042769
id: 0
t: 425
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:425




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.072372437
y: 3.04408669472
theta: 3.10468888283
speed: -0.130678042769
id: 0
t: 425
xxx after update is x: -112.95765686
y: 3.06978082657
theta: 3.30005383492
speed: -0.0642955303192
id: 0
t: 426
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:426




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.95765686
y: 3.06978082657
theta: 3.30005383492
speed: -0.0642955303192
id: 0
t: 426
xxx after update is x: -113.213912964
y: 2.80884957314
theta: 3.14305520058
speed: 0.138059005141
id: 0
t: 427
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:427




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.213912964
y: 2.80884957314
theta: 3.14305520058
speed: 0.138059005141
id: 0
t: 427
xxx after update is x: -113.127738953
y: 3.5411233902
theta: 3.25033783913
speed: -0.275598824024
id: 0
t: 428
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:428




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.127738953
y: 3.5411233902
theta: 3.25033783913
speed: -0.275598824024
id: 0
t: 428
xxx after update is x: -112.789733887
y: 3.16918039322
theta: 3.03020000458
speed: -0.448252499104
id: 0
t: 429
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:429




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.789733887
y: 3.16918039322
theta: 3.03020000458
speed: -0.448252499104
id: 0
t: 429
xxx after update is x: -113.145957947
y: 3.27970647812
theta: 3.32881808281
speed: 0.0358597524464
id: 0
t: 430
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:430




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.145957947
y: 3.27970647812
theta: 3.32881808281
speed: 0.0358597524464
id: 0
t: 430
xxx after update is x: -113.098747253
y: 2.87489748001
theta: 3.15034270287
speed: -0.393461883068
id: 0
t: 431
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:431




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.098747253
y: 2.87489748001
theta: 3.15034270287
speed: -0.393461883068
id: 0
t: 431
xxx after update is x: -113.073043823
y: 2.74943065643
theta: 3.19701457024
speed: -0.0759537294507
id: 0
t: 432
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:432




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.073043823
y: 2.74943065643
theta: 3.19701457024
speed: -0.0759537294507
id: 0
t: 432
xxx after update is x: -113.189865112
y: 2.87660264969
theta: 3.09217357635
speed: -0.274242162704
id: 0
t: 433
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:433




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:434


xxx before update is x: -113.189865112
y: 2.87660264969
theta: 3.09217357635
speed: -0.274242162704
id: 0
t: 433
xxx after update is x: -112.969955444
y: 2.78977394104
theta: 3.09689307213
speed: 0.164812728763
id: 0
t: 434
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.969955444
y: 2.78977394104
theta: 3.09689307213
speed: 0.164812728763
id: 0
t:(-112.87063598632812, 3.7399256229400635, 2.9526984691619873, -0.03592338785529137)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:424


222 self.state_dicts[msg.id][msg.t] is (-113.07237243652344, 3.0440866947174072, 3.104688882827759, -0.13067804276943207)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:425


222 self.state_dicts[msg.id][msg.t] is (-112.95765686035156, 3.0697808265686035, 3.300053834915161, -0.06429553031921387)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:426


222 self.state_dicts[msg.id][msg.t] is (-113.21391296386719, 2.808849573135376, 3.1430552005767822, 0.13805900514125824)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:427


222 self.state_dicts[msg.id][msg.t] is (-113.12773895263672, 3.541123390197754, 3.250337839126587, -0.27559882402420044)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:428


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:429


222 self.state_dicts[msg.id][msg.t] is (-112.78973388671875, 3.169180393218994, 3.0302000045776367, -0.44825249910354614)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:430


222 self.state_dicts[msg.id][msg.t] is (-113.14595794677734, 3.2797064781188965, 3.3288180828094482, 0.03585975244641304)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:431


222 self.state_dicts[msg.id][msg.t] is (-113.09874725341797, 2.8748974800109863, 3.1503427028656006, -0.3934618830680847)
222 self.state_dicts[msg.id][msg.t] is (-113.07304382324219, 2.7494306564331055, 3.197014570236206, -0.07595372945070267)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:432


222 self.state_dicts[msg.id][msg.t] is (-113.18986511230469, 2.8766026496887207, 3.0921735763549805, -0.2742421627044678)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:433




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:434


222 self.state_dicts[msg.id][msg.t] is (-112.96995544433594, 2.789773941040039, 3.096893072128296, 0.16481272876262665)
222 self.state_dicts[msg.id][msg.t] is (-112.86380004882812, 3.5427324771881104, 3.195525646209717, 0.4299895763397217)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:435


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-113.17996978759766, 3.503059148788452, 3.180344820022583, 0.08888763934373856)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:436




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:437


222 self.state_dicts[msg.id][msg.t] is (-113.41173553466797, 3.4994843006134033, 3.2322914600372314, -0.32171595096588135)
222 self. 434
xxx after update is x: -112.863800049
y: 3.54273247719
theta: 3.19552564621
speed: 0.42998957634
id: 0
t: 435
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:435




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.863800049
y: 3.54273247719
theta: 3.19552564621
speed: 0.42998957634
id: 0
t: 435
xxx after update is x: -113.179969788
y: 3.50305914879
theta: 3.18034482002
speed: 0.0888876393437
id: 0
t: 436
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:436




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.179969788
y: 3.50305914879
theta: 3.18034482002
speed: 0.0888876393437
id: 0
t: 436
xxx after update is x: -113.411735535
y: 3.49948430061
theta: 3.23229146004
speed: -0.321715950966
id: 0
t: 437
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:437




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.411735535
y: 3.49948430061
theta: 3.23229146004
speed: -0.321715950966
id: 0
t: 437
xxx after update is x: -113.309638977
y: 3.18456077576
theta: 3.10400009155
speed: 0.204097807407
id: 0
t: 438
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:438




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.309638977
y: 3.18456077576
theta: 3.10400009155
speed: 0.204097807407
id: 0
t: 438
xxx after update is x: -112.89226532
y: 3.14371466637
theta: 3.02401351929
speed: 0.365693479776
id: 0
t: 439
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:439




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.89226532
y: 3.14371466637
theta: 3.02401351929
speed: 0.365693479776
id: 0
t: 439
xxx after update is x: -113.268501282
y: 3.64812755585
theta: 3.13094425201
speed: 0.0245835725218
id: 0
t: 440
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:440




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.268501282
y: 3.64812755585
theta: 3.13094425201
speed: 0.0245835725218
id: 0
t: 440
xxx after update is x: -112.765274048
y: 3.08481431007
theta: 3.07950639725
speed: 0.109008230269
id: 0
t: 441
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:441




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.765274048
y: 3.08481431007
theta: 3.07950639725
speed: 0.109008230269
id: 0
t: 441
xxx after update is x: -112.574287415
y: 3.24110460281
theta: 3.24670982361
speed: -0.0568292997777
id: 0
t: 442
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:442




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.574287415
y: 3.24110460281
theta: 3.24670982361
speed: -0.0568292997777
id: 0
t: 442
xxx after update is x: -113.009849548
y: 3.13835692406
theta: 3.12097930908
speed: -0.130652815104
id: 0
t: 443
maneuver_negotiatir.py finish the update agent state from ros funtionstate_dicts[msg.id][msg.t] is (-113.30963897705078, 3.184560775756836, 3.1040000915527344, 0.20409780740737915)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:438


222 self.state_dicts[msg.id][msg.t] is (-112.89226531982422, 3.143714666366577, 3.0240135192871094, 0.36569347977638245)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:439


222 self.state_dicts[msg.id][msg.t] is (-113.26850128173828, 3.648127555847168, 3.13094425201416, 0.024583572521805763)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:440




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:441


222 self.state_dicts[msg.id][msg.t] is (-112.76527404785156, 3.0848143100738525, 3.0795063972473145, 0.10900823026895523)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:442


222 self.state_dicts[msg.id][msg.t] is (-112.57428741455078, 3.2411046028137207, 3.2467098236083984, -0.0568292997777462)
222 self.state_dicts[msg.id][msg.t] is (-113.00984954833984, 3.138356924057007, 3.1209793090820312, -0.13065281510353088)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:443


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:444


222 self.state_dicts[msg.id][msg.t] is (-113.31588745117188, 3.043705463409424, 3.3121564388275146, 0.0018341165268793702)
222 self.state_dicts[msg.id][msg.t] is (-112.85900115966797, 3.0580570697784424, 3.257941722869873, 0.2850857973098755)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:445




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:446


222 self.state_dicts[msg.id][msg.t] is (-113.220703125, 3.387873888015747, 3.1551642417907715, 0.027548396959900856)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:447


222 self.state_dicts[msg.id][msg.t] is (-113.28538513183594, 3.567129373550415, 3.195343255996704, 0.29386699199676514)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:448


222 self.state_dicts[msg.id][msg.t] is (-112.7728042602539, 3.04976487159729, 2.997161865234375, 0.11683808267116547)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:449


222 self.state_dicts[msg.id][msg.t] is (-113.02937316894531, 3.305936574935913, 3.294889450073242, -0.054643742740154266)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:450


222 self.state_dicts[msg.id][msg.t] is (-112.96333312988281, 3.409128427505493, 3.025282621383667, -0.030969703570008278)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:451


222 self.state_dicts[msg.id][msg.t] is (-113.01473999023438, 3.3544418811798096, 3.3510069847106934, 0.27226525
leave the update function 
in spin function, finish the n times spin:443




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.009849548
y: 3.13835692406
theta: 3.12097930908
speed: -0.130652815104
id: 0
t: 443
xxx after update is x: -113.315887451
y: 3.04370546341
theta: 3.31215643883
speed: 0.00183411652688
id: 0
t: 444
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:444




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.315887451
y: 3.04370546341
theta: 3.31215643883
speed: 0.00183411652688
id: 0
t: 444
xxx after update is x: -112.85900116
y: 3.05805706978
theta: 3.25794172287
speed: 0.28508579731
id: 0
t: 445
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:445




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.85900116
y: 3.05805706978
theta: 3.25794172287
speed: 0.28508579731
id: 0
t: 445
xxx after update is x: -113.220703125
y: 3.38787388802
theta: 3.15516424179
speed: 0.0275483969599
id: 0
t: 446
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:446




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.220703125
y: 3.38787388802
theta: 3.15516424179
speed: 0.0275483969599
id: 0
t: 446
xxx after update is x: -113.285385132
y: 3.56712937355
theta: 3.195343256
speed: 0.293866991997
id: 0
t: 447
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:447




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.285385132
y: 3.56712937355
theta: 3.195343256
speed: 0.293866991997
id: 0
t: 447
xxx after update is x: -112.77280426
y: 3.0497648716
theta: 2.99716186523
speed: 0.116838082671
id: 0
t: 448
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:448




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.77280426
y: 3.0497648716
theta: 2.99716186523
speed: 0.116838082671
id: 0
t: 448
xxx after update is x: -113.029373169
y: 3.30593657494
theta: 3.29488945007
speed: -0.0546437427402
id: 0
t: 449
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:449




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.029373169
y: 3.30593657494
theta: 3.29488945007
speed: -0.0546437427402
id: 0
t: 449
xxx after update is x: -112.96333313
y: 3.40912842751
theta: 3.02528262138
speed: -0.03096970357
id: 0
t: 450
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:450




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.96333313
y: 3.40912842751
theta: 3.02528262138
speed: -0.03096970357
id: 0
t: 450
xxx after update is x: -113.01473999
y: 3.35444188118
theta: 3.35100698471
speed: 0.272265255451
id: 0
t: 451
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:451




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.01473999
y: 3.35444188118
theta: 3.35100698471
speed: 0.272265255451
id: 0
t: 451
xxx after update is x: -113.100021362
y: 3.37796330452
theta: 3.08884334564
speed: 0.333608269691
id: 0
t: 452
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:452




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.100021362
y: 3.37796330452
theta: 3.08884334564
speed: 0.333608269691
id: 0
t: 452
xxx after update is x: -113.232917786
y: 3.65327954292
theta: 3.04890418053
speed: 0.0565182864666
id: 0
t: 453
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:453




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.232917786
y: 3.65327954292
theta: 3.04890418053
speed: 0.0565182864666
id: 0
t: 453
xxx after update is x: -113.411262512
y: 3.37201356888
theta: 3.21484875679
speed: 0.028127271682
id: 0
t: 454
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:454




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.411262512
y: 3.37201356888
theta: 3.21484875679
speed: 0.028127271682
id: 0
t: 454
xxx after update is x: -112.58493042
y: 3.56486368179
theta: 3.16222500801
speed: -0.0723767653108
id: 0
t: 455
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:455




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.58493042
y: 3.56486368179
theta: 3.16222500801
speed: -0.0723767653108
id: 0
t: 455
xxx after update is x: -112.475265503
y: 3.77715134621
theta: 3.21199917793
speed: 0.119751736522
id: 0
t: 456
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:456




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.475265503
y: 3.77715134621
theta: 3.21199917793
speed: 0.119751736522
id: 0
t: 456
xxx after update is x: -113.647361755
y: 3.49540424347
theta: 3.20573139191
speed: 0.103619523346
id: 0
t: 457
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:457




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.647361755
y: 3.49540424347
theta: 3.20573139191
speed: 0.103619523346
id: 0
t: 457
xxx after update is x: -113.462593079
y: 2.5582754612
theta: 3.09821462631
speed: 0.346695721149
id: 0
t: 458
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:458




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.462593079
y: 2.5582754612
theta: 3.09821462631
speed: 0.346695721149
id: 0
t: 458
xxx after update is x: -113.262741089
y: 3.63850522041
theta: 3.13478469849
speed: -0.143884181976
id: 0
t: 459
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:459




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.262741089
y: 3.63850522041
theta: 3.13478469849
speed: -0.143884181976
id: 0
t: 459
xxx after update is x: -113.293289185
y: 3.49465084076
theta: 3.21431279182
s54512024)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:452


222 self.state_dicts[msg.id][msg.t] is (-113.10002136230469, 3.3779633045196533, 3.08884334564209, 0.3336082696914673)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:453


222 self.state_dicts[msg.id][msg.t] is (-113.23291778564453, 3.6532795429229736, 3.0489041805267334, 0.05651828646659851)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:454


222 self.state_dicts[msg.id][msg.t] is (-113.41126251220703, 3.372013568878174, 3.214848756790161, 0.028127271682024002)
222 self.state_dicts[msg.id][msg.t] is (-112.58493041992188, 3.564863681793213, 3.1622250080108643, -0.07237676531076431)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:455




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:456


222 self.state_dicts[msg.id][msg.t] is (-112.47526550292969, 3.777151346206665, 3.2119991779327393, 0.11975173652172089)
222 self.state_dicts[msg.id][msg.t] is (-113.6473617553711, 3.4954042434692383, 3.2057313919067383, 0.1036195233464241)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:457


222 self.state_dicts[msg.id][msg.t] is (-113.46259307861328, 2.5582754611968994, 3.098214626312256, 0.3466957211494446)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:458


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:459


222 self.state_dicts[msg.id][msg.t] is (-113.26274108886719, 3.638505220413208, 3.134784698486328, -0.14388418197631836)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:460


222 self.state_dicts[msg.id][msg.t] is (-113.29328918457031, 3.4946508407592773, 3.214312791824341, 0.08941874653100967)
222 self.state_dicts[msg.id][msg.t] is (-112.96637725830078, 3.237438678741455, 3.220367431640625, -0.08800864219665527)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:461


222 self.state_dicts[msg.id][msg.t] is (-112.68391418457031, 2.9155073165893555, 3.1283016204833984, -0.021633801981806755)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:462




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:463


222 self.state_dicts[msg.id][msg.t] is (-113.33312225341797, 2.8911514282226562, 2.9119162559509277, -0.104248046875)
222 self.state_dicts[msg.id][msg.t] is (-112.95945739746094, 3.269118309020996, 2.9871726036071777, 0.13988059759140015)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:464


222 self.state_dicts[msg.id][msg.t] is (-112.9955062866211, 3.521390914916992, 3.233309030532837, 0.048652347177267075)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:465


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuvepeed: 0.089418746531
id: 0
t: 460
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:460




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.293289185
y: 3.49465084076
theta: 3.21431279182
speed: 0.089418746531
id: 0
t: 460
xxx after update is x: -112.966377258
y: 3.23743867874
theta: 3.22036743164
speed: -0.0880086421967
id: 0
t: 461
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:461




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.966377258
y: 3.23743867874
theta: 3.22036743164
speed: -0.0880086421967
id: 0
t: 461
xxx after update is x: -112.683914185
y: 2.91550731659
theta: 3.12830162048
speed: -0.0216338019818
id: 0
t: 462
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:462




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.683914185
y: 2.91550731659
theta: 3.12830162048
speed: -0.0216338019818
id: 0
t: 462
xxx after update is x: -113.333122253
y: 2.89115142822
theta: 2.91191625595
speed: -0.104248046875
id: 0
t: 463
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:463




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.333122253
y: 2.89115142822
theta: 2.91191625595
speed: -0.104248046875
id: 0
t: 463
xxx after update is x: -112.959457397
y: 3.26911830902
theta: 2.98717260361
speed: 0.139880597591
id: 0
t: 464
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:464




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.959457397
y: 3.26911830902
theta: 2.98717260361
speed: 0.139880597591
id: 0
t: 464
xxx after update is x: -112.995506287
y: 3.52139091492
theta: 3.23330903053
speed: 0.0486523471773
id: 0
t: 465
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:465




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.995506287
y: 3.52139091492
theta: 3.23330903053
speed: 0.0486523471773
id: 0
t: 465
xxx after update is x: -112.790740967
y: 3.47115707397
theta: 3.22341418266
speed: -0.337892770767
id: 0
t: 466
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:466




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.790740967
y: 3.47115707397
theta: 3.22341418266
speed: -0.337892770767
id: 0
t: 466
xxx after update is x: -113.112800598
y: 3.41918563843
theta: 3.00131773949
speed: 0.25790733099
id: 0
t: 467
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:467




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.112800598
y: 3.41918563843
theta: 3.00131773949
speed: 0.25790733099
id: 0
t: 467
xxx after update is x: -113.089576721
y: 3.21700692177
theta: 3.18395233154
speed: -0.195347085595
id: 0
t: 468
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:468




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.089576721
y: 3.21700692177
theta: 3.18395233154
speed: -0.195347085595
id: 0
t: 468
xxx after update is x: -113.127754211
y: 2.74191093445
theta: 3.10762286186
speed: -0.0331541858613
id: 0
t: 469
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:469




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.127754211
y: 2.74191093445
theta: 3.10762286186
speed: -0.0331541858613
id: 0
t: 469
xxx after update is x: -113.126525879
y: 3.13614320755
theta: 3.16557073593
speed: 0.00910031422973
id: 0
t: 470
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:470




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.126525879
y: 3.13614320755
theta: 3.16557073593
speed: 0.00910031422973
id: 0
t: 470
xxx after update is x: -113.111839294
y: 3.2540204525
theta: 3.17378687859
speed: -0.360761344433
id: 0
t: 471
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:471




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.111839294
y: 3.2540204525
theta: 3.17378687859
speed: -0.360761344433
id: 0
t: 471
xxx after update is x: -113.113815308
y: 3.16761803627
theta: 3.16842961311
speed: 0.00788713432848
id: 0
t: 472
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:472




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.113815308
y: 3.16761803627
theta: 3.16842961311
speed: 0.00788713432848
id: 0
t: 472
xxx after update is x: -113.053153992
y: 3.2508020401
theta: 3.09518885612
speed: 0.0869047567248
id: 0
t: 473
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:473




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.053153992
y: 3.2508020401
theta: 3.09518885612
speed: 0.0869047567248
id: 0
t: 473
xxx after update is x: -113.014564514
y: 3.82526898384
theta: 3.47553825378
speed: 0.191509485245
id: 0
t: 474
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:474




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.014564514
y: 3.82526898384
theta: 3.47553825378
speed: 0.191509485245
id: 0
t: 474
xxx after update is x: -112.911384583
y: 3.40514016151
theta: 3.28234577179
speed: 0.239794313908
id: 0
t: 475
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:475




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.911384583
y: 3.40514016151
theta: 3.28234577179
speed: 0.239794313908
id: 0
t: 475
xxx after update is x: -113.004737854
y: 3.28631401062
theta: 3.11503958702
speed: -0.129390478134
id: 0
t: 476
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:476




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.004737854
y: 3.28631401062
thr function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:466


222 self.state_dicts[msg.id][msg.t] is (-112.79074096679688, 3.4711570739746094, 3.223414182662964, -0.3378927707672119)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:467


222 self.state_dicts[msg.id][msg.t] is (-113.11280059814453, 3.4191856384277344, 3.0013177394866943, 0.25790733098983765)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:468


222 self.state_dicts[msg.id][msg.t] is (-113.0895767211914, 3.2170069217681885, 3.1839523315429688, -0.19534708559513092)
222 self.state_dicts[msg.id][msg.t] is (-113.12775421142578, 2.741910934448242, 3.1076228618621826, -0.033154185861349106)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:469


222 self.state_dicts[msg.id][msg.t] is (-113.12652587890625, 3.136143207550049, 3.1655707359313965, 0.009100314229726791)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:470




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:471


222 self.state_dicts[msg.id][msg.t] is (-113.1118392944336, 3.2540204524993896, 3.1737868785858154, -0.3607613444328308)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:472


222 self.state_dicts[msg.id][msg.t] is (-113.11381530761719, 3.1676180362701416, 3.1684296131134033, 0.007887134328484535)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:473


222 self.state_dicts[msg.id][msg.t] is (-113.05315399169922, 3.2508020401000977, 3.095188856124878, 0.08690475672483444)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:474


222 self.state_dicts[msg.id][msg.t] is (-113.01456451416016, 3.8252689838409424, 3.4755382537841797, 0.19150948524475098)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:475


222 self.state_dicts[msg.id][msg.t] is (-112.91138458251953, 3.4051401615142822, 3.282345771789551, 0.2397943139076233)
222 self.state_dicts[msg.id][msg.t] is (-113.0047378540039, 3.286314010620117, 3.115039587020874, -0.12939047813415527)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:476




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:477


222 self.state_dicts[msg.id][msg.t] is (-114.06832122802734, 3.1915178298950195, 3.1734631061553955, -0.2439519315958023)
222 self.state_dicts[msg.id][msg.t] is (-112.443359375, 3.4523191452026367, 3.150411367416382, -0.13944272696971893)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:478




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:479


222 self.state_dicts[msg.id][msg.t] is (-113.06865692138672, 3.025268316268921, 3.168492317199707, -0.14430761337280273)
222 self.state_dicts[msg.id][msg.t] is (-112.79911804199219, 3.805591344833374, 3.04826021194458, -0.4078286588191986)


going to the update function
eta: 3.11503958702
speed: -0.129390478134
id: 0
t: 476
xxx after update is x: -114.068321228
y: 3.1915178299
theta: 3.17346310616
speed: -0.243951931596
id: 0
t: 477
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:477




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -114.068321228
y: 3.1915178299
theta: 3.17346310616
speed: -0.243951931596
id: 0
t: 477
xxx after update is x: -112.443359375
y: 3.4523191452
theta: 3.15041136742
speed: -0.13944272697
id: 0
t: 478
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:478




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.443359375
y: 3.4523191452
theta: 3.15041136742
speed: -0.13944272697
id: 0
t: 478
xxx after update is x: -113.068656921
y: 3.02526831627
theta: 3.1684923172
speed: -0.144307613373
id: 0
t: 479
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:479




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.068656921
y: 3.02526831627
theta: 3.1684923172
speed: -0.144307613373
id: 0
t: 479
xxx after update is x: -112.799118042
y: 3.80559134483
theta: 3.04826021194
speed: -0.407828658819
id: 0
t: 480
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:480




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.799118042
y: 3.80559134483
theta: 3.04826021194
speed: -0.407828658819
id: 0
t: 480
xxx after update is x: -113.44329071
y: 3.37146782875
theta: 2.94992136955
speed: -0.366679489613
id: 0
t: 481
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:481




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.44329071
y: 3.37146782875
theta: 2.94992136955
speed: -0.366679489613
id: 0
t: 481
xxx after update is x: -113.388595581
y: 3.21921634674
theta: 3.13872718811
speed: 0.347581595182
id: 0
t: 482
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:482




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.388595581
y: 3.21921634674
theta: 3.13872718811
speed: 0.347581595182
id: 0
t: 482
xxx after update is x: -113.002815247
y: 3.17541718483
theta: 3.32550644875
speed: 0.0298379939049
id: 0
t: 483
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:483




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.002815247
y: 3.17541718483
theta: 3.32550644875
speed: 0.0298379939049
id: 0
t: 483
xxx after update is x: -112.921691895
y: 3.07146716118
theta: 3.0331890583
speed: 0.0898900479078
id: 0
t: 484
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:484




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.921691895
y: 3.07146716118
theta: 3.0331890583
speed: 0.0898900479078
id: 0
t: 484
xxx after update is x: -112.637985229
y: 2.96880054474
theta: 3.28223133087
speed: 0.017173236236
id: 0
t: 485
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:485




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.637985229
y: 2.96880054474
theta: 3.28223133087
speed: 0.017173236236
id: 0
t: 485
xxx after update is x: -113.113632202
y: 3.26423192024
theta: 3.19780993462
speed: 0.387557506561
id: 0
t: 486
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:486




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.113632202
y: 3.26423192024
theta: 3.19780993462
speed: 0.387557506561
id: 0
t: 486
xxx after update is x: -112.924789429
y: 3.27351307869
theta: 2.9757297039
speed: 0.230936184525
id: 0
t: 487
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:487




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.924789429
y: 3.27351307869
theta: 2.9757297039
speed: 0.230936184525
id: 0
t: 487
xxx after update is x: -113.143310547
y: 3.55059766769
theta: 3.13247394562
speed: 0.0887002199888
id: 0
t: 488
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:488




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.143310547
y: 3.55059766769
theta: 3.13247394562
speed: 0.0887002199888
id: 0
t: 488
xxx after update is x: -112.991897583
y: 3.69715929031
theta: 3.24838137627
speed: -0.202171459794
id: 0
t: 489
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:489




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.991897583
y: 3.69715929031
theta: 3.24838137627
speed: -0.202171459794
id: 0
t: 489
xxx after update is x: -113.37550354
y: 2.97385001183
theta: 3.19280385971
speed: -0.0297415908426
id: 0
t: 490
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:490




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.37550354
y: 2.97385001183
theta: 3.19280385971
speed: -0.0297415908426
id: 0
t: 490
xxx after update is x: -113.175392151
y: 3.57190060616
theta: 3.07638764381
speed: -0.0617960989475
id: 0
t: 491
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:491




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.175392151
y: 3.57190060616
theta: 3.07638764381
speed: -0.0617960989475
id: 0
t: 491
xxx after update is x: -113.61353302
y: 3.28398156166
theta: 3.1537103653
speed: 0.0503180362284
id: 0
t: 492
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:492




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.61353302
y: 3.28398156166
theta: 3.1537103653
speed: 0.0503180362284
id: 0
t: 492
xxx after update is x: -112.778343201
y: 3.64515328407
theta: 3.22762179375
speed: 0.335345059633
id: 0
t: 493
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:493




going to the update function
sim.py in the sim.py update functisim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:480


222 self.state_dicts[msg.id][msg.t] is (-113.44329071044922, 3.3714678287506104, 2.9499213695526123, -0.36667948961257935)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:481


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:482


222 self.state_dicts[msg.id][msg.t] is (-113.38859558105469, 3.2192163467407227, 3.1387271881103516, 0.3475815951824188)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:483


222 self.state_dicts[msg.id][msg.t] is (-113.00281524658203, 3.175417184829712, 3.3255064487457275, 0.029837993904948235)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:484


222 self.state_dicts[msg.id][msg.t] is (-112.92169189453125, 3.071467161178589, 3.033189058303833, 0.08989004790782928)
222 self.state_dicts[msg.id][msg.t] is (-112.63798522949219, 2.9688005447387695, 3.282231330871582, 0.01717323623597622)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:485




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:486


222 self.state_dicts[msg.id][msg.t] is (-113.11363220214844, 3.2642319202423096, 3.197809934616089, 0.3875575065612793)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:487


222 self.state_dicts[msg.id][msg.t] is (-112.92478942871094, 3.273513078689575, 2.9757297039031982, 0.2309361845254898)
222 self.state_dicts[msg.id][msg.t] is (-113.143310546875, 3.550597667694092, 3.132473945617676, 0.08870021998882294)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:488


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-112.99189758300781, 3.6971592903137207, 3.2483813762664795, -0.2021714597940445)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:489




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:490


222 self.state_dicts[msg.id][msg.t] is (-113.37550354003906, 2.9738500118255615, 3.1928038597106934, -0.029741590842604637)


going to the update function 222 self.state_dicts[msg.id][msg.t] is (-113.1753921508789, 3.5719006061553955, 3.076387643814087, -0.061796098947525024)

sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:491




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:492


222 self.state_dicts[msg.id][msg.t] is (-113.61353302001953, 3.2839815616607666, 3.15371036529541, 0.05031803622841835)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:493


222 self.state_dicts[msg.id][msg.t] is (-112.7783432006836, 3.645153284072876, 3.2276217937469482, 0.335345059633255)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n timeon 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:494


xxx before update is x: -112.778343201
y: 3.64515328407
theta: 3.22762179375
speed: 0.335345059633
id: 0
t: 493
xxx after update is x: -112.94354248
y: 2.92568206787
theta: 3.24385523796
speed: -0.333933383226
id: 0
t: 494
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.94354248
y: 2.92568206787
theta: 3.24385523796
speed: -0.333933383226
id: 0
t: 494
xxx after update is x: -113.192520142
y: 3.14713954926
theta: 3.19907140732
speed: -0.0944623276591
id: 0
t: 495
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:495




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.192520142
y: 3.14713954926
theta: 3.19907140732
speed: -0.0944623276591
id: 0
t: 495
xxx after update is x: -112.784667969
y: 3.22663140297
theta: 3.1942076683
speed: -0.303315758705
id: 0
t: 496
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:496




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.784667969
y: 3.22663140297
theta: 3.1942076683
speed: -0.303315758705
id: 0
t: 496
xxx after update is x: -112.789718628
y: 3.17485046387
theta: 3.29240369797
speed: 0.361728519201
id: 0
t: 497
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:497




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.789718628
y: 3.17485046387
theta: 3.29240369797
speed: 0.361728519201
id: 0
t: 497
xxx after update is x: -113.283317566
y: 3.06222891808
theta: 3.12836360931
speed: 0.0668273642659
id: 0
t: 498
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:498




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.283317566
y: 3.06222891808
theta: 3.12836360931
speed: 0.0668273642659
id: 0
t: 498
xxx after update is x: -113.079818726
y: 3.06793618202
theta: 3.16272902489
speed: -0.21436086297
id: 0
t: 499
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:499




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.079818726
y: 3.06793618202
theta: 3.16272902489
speed: -0.21436086297
id: 0
t: 499
xxx after update is x: -113.856254578
y: 3.02036929131
theta: 3.13739895821
speed: -0.120122425258
id: 0
t: 500
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:500




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.856254578
y: 3.02036929131
theta: 3.13739895821
speed: -0.120122425258
id: 0
t: 500
xxx after update is x: -113.009216309
y: 2.76911377907
theta: 3.19223546982
speed: 0.154586315155
id: 0
t: 501
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:501




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.009216309
y: 2.76911377907
theta: 3.19223546982
speed: 0.154586315155
id: 0
t: 501
xxx after update s spin:494


222 self.state_dicts[msg.id][msg.t] is (-112.94354248046875, 2.9256820678710938, 3.2438552379608154, -0.33393338322639465)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:495


222 self.state_dicts[msg.id][msg.t] is (-113.19252014160156, 3.147139549255371, 3.1990714073181152, -0.0944623276591301)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:496


222 self.state_dicts[msg.id][msg.t] is (-112.78466796875, 3.2266314029693604, 3.1942076683044434, -0.30331575870513916)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-112.78971862792969, 3.1748504638671875, 3.2924036979675293, 0.3617285192012787)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:497


222 self.state_dicts[msg.id][msg.t] is (-113.28331756591797, 3.0622289180755615, 3.128363609313965, 0.06682736426591873)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:498


222 self.state_dicts[msg.id][msg.t] is (-113.07981872558594, 3.0679361820220947, 3.162729024887085, -0.21436086297035217)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:499


222 self.state_dicts[msg.id][msg.t] is (-113.85625457763672, 3.020369291305542, 3.1373989582061768, -0.12012242525815964)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:500


222 self.state_dicts[msg.id][msg.t] is (-113.00921630859375, 2.769113779067993, 3.1922354698181152, 0.1545863151550293)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:501


222 self.state_dicts[msg.id][msg.t] is (-112.9900131225586, 3.035947799682617, 3.130889892578125, -0.2720378041267395)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:502


222 self.state_dicts[msg.id][msg.t] is (-114.1318588256836, 3.4575719833374023, 3.292996883392334, 0.103270024061203)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:503


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:504


222 self.state_dicts[msg.id][msg.t] is (-112.88656616210938, 3.6364364624023438, 3.1453256607055664, 0.04814191162586212)
222 self.state_dicts[msg.id][msg.t] is (-113.14867401123047, 3.87882137298584, 3.1547465324401855, 0.20296664535999298)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:505




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:506


222 self.state_dicts[msg.id][msg.t] is (-112.34864044189453, 3.5218091011047363, 3.089505434036255, -0.16945023834705353)
222 self.state_dicts[msg.id][msg.t] is (-112.50692749023438, 2.806821823120117, 3.1916375160217285, 0.052140600979328156)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:507


222 self.state_dicts[msg.id][msg.t] is (-113.25030517578125, 3.134554386138916, 3.242436408996582, 0.101017951is x: -112.990013123
y: 3.03594779968
theta: 3.13088989258
speed: -0.272037804127
id: 0
t: 502
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:502




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.990013123
y: 3.03594779968
theta: 3.13088989258
speed: -0.272037804127
id: 0
t: 502
xxx after update is x: -114.131858826
y: 3.45757198334
theta: 3.29299688339
speed: 0.103270024061
id: 0
t: 503
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:503




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -114.131858826
y: 3.45757198334
theta: 3.29299688339
speed: 0.103270024061
id: 0
t: 503
xxx after update is x: -112.886566162
y: 3.6364364624
theta: 3.14532566071
speed: 0.0481419116259
id: 0
t: 504
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:504




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.886566162
y: 3.6364364624
theta: 3.14532566071
speed: 0.0481419116259
id: 0
t: 504
xxx after update is x: -113.148674011
y: 3.87882137299
theta: 3.15474653244
speed: 0.20296664536
id: 0
t: 505
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:505




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.148674011
y: 3.87882137299
theta: 3.15474653244
speed: 0.20296664536
id: 0
t: 505
xxx after update is x: -112.348640442
y: 3.5218091011
theta: 3.08950543404
speed: -0.169450238347
id: 0
t: 506
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:506




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.348640442
y: 3.5218091011
theta: 3.08950543404
speed: -0.169450238347
id: 0
t: 506
xxx after update is x: -112.50692749
y: 2.80682182312
theta: 3.19163751602
speed: 0.0521406009793
id: 0
t: 507
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:507




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.50692749
y: 2.80682182312
theta: 3.19163751602
speed: 0.0521406009793
id: 0
t: 507
xxx after update is x: -113.250305176
y: 3.13455438614
theta: 3.242436409
speed: 0.101017951965
id: 0
t: 508
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:508




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.250305176
y: 3.13455438614
theta: 3.242436409
speed: 0.101017951965
id: 0
t: 508
xxx after update is x: -113.5832901
y: 2.94378447533
theta: 3.11059308052
speed: 0.0933040827513
id: 0
t: 509
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:509




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.5832901
y: 2.94378447533
theta: 3.11059308052
speed: 0.0933040827513
id: 0
t: 509
xxx after update is x: -112.993782043
y: 2.94326233864
theta: 3.17815947533
speed: -0.198139771819
id: 0
t: 510
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:510




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.993782043
y: 2.94326233864
theta: 3.17815947533
speed: -0.198139771819
id: 0
t: 510
xxx after update is x: -113.206069946
y: 2.87092685699
theta: 3.01890587807
speed: 0.192748188972
id: 0
t: 511
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:511




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.206069946
y: 2.87092685699
theta: 3.01890587807
speed: 0.192748188972
id: 0
t: 511
xxx after update is x: -112.699874878
y: 3.49857759476
theta: 3.15513753891
speed: -0.232733815908
id: 0
t: 512
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:512




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.699874878
y: 3.49857759476
theta: 3.15513753891
speed: -0.232733815908
id: 0
t: 512
xxx after update is x: -113.194725037
y: 3.46929883957
theta: 3.0975420475
speed: 0.0613166093826
id: 0
t: 513
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:513




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.194725037
y: 3.46929883957
theta: 3.0975420475
speed: 0.0613166093826
id: 0
t: 513
xxx after update is x: -113.357170105
y: 3.83191227913
theta: 3.23684287071
speed: 0.29695379734
id: 0
t: 514
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:514




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.357170105
y: 3.83191227913
theta: 3.23684287071
speed: 0.29695379734
id: 0
t: 514
xxx after update is x: -112.658004761
y: 3.61210107803
theta: 3.20984363556
speed: -0.223816588521
id: 0
t: 515
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:515




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.658004761
y: 3.61210107803
theta: 3.20984363556
speed: -0.223816588521
id: 0
t: 515
xxx after update is x: -112.32460022
y: 3.82585382462
theta: 3.07637643814
speed: 0.195630773902
id: 0
t: 516
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:516




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.32460022
y: 3.82585382462
theta: 3.07637643814
speed: 0.195630773902
id: 0
t: 516
xxx after update is x: -113.134414673
y: 3.26795911789
theta: 3.20752120018
speed: 0.319739937782
id: 0
t: 517
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:517




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.134414673
y: 3.26795911789
theta: 3.20752120018
speed: 0.319739937782
id: 0
t: 517
xxx after update is x: -112.700393677
y: 3.6071460247
theta: 2.94003367424
speed: 0.431028425694
id: 0
t: 518
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:518




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.796533203)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:508




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:509


222 self.state_dicts[msg.id][msg.t] is (-113.58329010009766, 2.943784475326538, 3.11059308052063, 0.09330408275127411)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:510


222 self.state_dicts[msg.id][msg.t] is (-112.99378204345703, 2.9432623386383057, 3.178159475326538, -0.19813977181911469)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:511


222 self.state_dicts[msg.id][msg.t] is (-113.20606994628906, 2.870926856994629, 3.0189058780670166, 0.19274818897247314)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:512


222 self.state_dicts[msg.id][msg.t] is (-112.69987487792969, 3.49857759475708, 3.155137538909912, -0.232733815908432)
222 self.state_dicts[msg.id][msg.t] is (-113.1947250366211, 3.469298839569092, 3.0975420475006104, 0.061316609382629395)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:513


222 self.state_dicts[msg.id][msg.t] is (-113.35717010498047, 3.8319122791290283, 3.2368428707122803, 0.29695379734039307)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:514


222 self.state_dicts[msg.id][msg.t] is (-112.65800476074219, 3.6121010780334473, 3.209843635559082, -0.22381658852100372)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:515


222 self.state_dicts[msg.id][msg.t] is (-112.32460021972656, 3.8258538246154785, 3.076376438140869, 0.1956307739019394)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:516


222 self.state_dicts[msg.id][msg.t] is (-113.13441467285156, 3.2679591178894043, 3.2075212001800537, 0.3197399377822876)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:517


222 self.state_dicts[msg.id][msg.t] is (-112.70039367675781, 3.6071460247039795, 2.9400336742401123, 0.43102842569351196)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:518


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:519


222 self.state_dicts[msg.id][msg.t] is (-113.11674499511719, 3.2148869037628174, 3.187546491622925, 0.2574491500854492)
222 self.state_dicts[msg.id][msg.t] is (-112.59896087646484, 3.5976545810699463, 3.051926851272583, 0.029236309230327606)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:520


222 self.state_dicts[msg.id][msg.t] is (-112.31243896484375, 3.5696821212768555, 3.0299081802368164, -0.2354932725429535)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:521


222 self.state_dicts[msg.id][msg.t] is (-112.2262191772461, 2.8533945083618164, 3.1167402200393677
y: 3.6071460247
theta: 2.94003367424
speed: 0.431028425694
id: 0
t: 518
xxx after update is x: -113.116744995
y: 3.21488690376
theta: 3.18754649162
speed: 0.257449150085
id: 0
t: 519
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:519




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.116744995
y: 3.21488690376
theta: 3.18754649162
speed: 0.257449150085
id: 0
t: 519
xxx after update is x: -112.598960876
y: 3.59765458107
theta: 3.05192685127
speed: 0.0292363092303
id: 0
t: 520
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:520




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.598960876
y: 3.59765458107
theta: 3.05192685127
speed: 0.0292363092303
id: 0
t: 520
xxx after update is x: -112.312438965
y: 3.56968212128
theta: 3.02990818024
speed: -0.235493272543
id: 0
t: 521
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:521




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.312438965
y: 3.56968212128
theta: 3.02990818024
speed: -0.235493272543
id: 0
t: 521
xxx after update is x: -112.226219177
y: 2.85339450836
theta: 3.11674022675
speed: -0.0966507345438
id: 0
t: 522
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:522




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.226219177
y: 2.85339450836
theta: 3.11674022675
speed: -0.0966507345438
id: 0
t: 522
xxx after update is x: -112.865066528
y: 2.9592871666
theta: 3.17358398438
speed: 0.0202266387641
id: 0
t: 523
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:523




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.865066528
y: 2.9592871666
theta: 3.17358398438
speed: 0.0202266387641
id: 0
t: 523
xxx after update is x: -113.102935791
y: 3.01755428314
theta: 3.27962040901
speed: 0.0485747382045
id: 0
t: 524
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:524




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.102935791
y: 3.01755428314
theta: 3.27962040901
speed: 0.0485747382045
id: 0
t: 524
xxx after update is x: -112.208137512
y: 3.17028689384
theta: 3.18121910095
speed: -0.100561060011
id: 0
t: 525
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:525




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.208137512
y: 3.17028689384
theta: 3.18121910095
speed: -0.100561060011
id: 0
t: 525
xxx after update is x: -113.598632812
y: 3.56601047516
theta: 3.30532670021
speed: -0.24169421196
id: 0
t: 526
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:526




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.598632812
y: 3.56601047516
theta: 3.30532670021
speed: -0.24169421196
id: 0
t: 526
xxx after update is x: -112.768463135
y: 3.0413608551
theta: 3.19573450089
speed: -0.0845821946859
67456055, -0.09665073454380035)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:522


222 self.state_dicts[msg.id][msg.t] is (-112.86506652832031, 2.959287166595459, 3.173583984375, 0.02022663876414299)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:523


222 self.state_dicts[msg.id][msg.t] is (-113.10293579101562, 3.01755428314209, 3.279620409011841, 0.04857473820447922)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:524


222 self.state_dicts[msg.id][msg.t] is (-112.20813751220703, 3.1702868938446045, 3.1812191009521484, -0.10056106001138687)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:525


222 self.state_dicts[msg.id][msg.t] is (-113.5986328125, 3.5660104751586914, 3.3053267002105713, -0.24169421195983887)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:526


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:527


222 self.state_dicts[msg.id][msg.t] is (-112.76846313476562, 3.041360855102539, 3.1957345008850098, -0.08458219468593597)
222 self.state_dicts[msg.id][msg.t] is (-113.2493667602539, 3.833423614501953, 3.1471104621887207, 0.14575111865997314)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:528


222 self.state_dicts[msg.id][msg.t] is (-113.2061767578125, 3.420597553253174, 3.059476613998413, 0.10473991185426712)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:529


222 self.state_dicts[msg.id][msg.t] is (-112.96403503417969, 3.5903372764587402, 2.8950679302215576, -0.4018561542034149)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:530


222 self.state_dicts[msg.id][msg.t] is (-113.4078140258789, 3.753906488418579, 3.0122618675231934, -0.11593051999807358)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:531


222 self.state_dicts[msg.id][msg.t] is (-113.24593353271484, 3.315140962600708, 3.127812147140503, -0.23698900640010834)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:532


222 self.state_dicts[msg.id][msg.t] is (-112.91189575195312, 3.467284917831421, 3.258972406387329, 0.0872199535369873)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:533


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:534


222 self.state_dicts[msg.id][msg.t] is (-112.93820190429688, 3.313767433166504, 3.1038148403167725, 0.3905857503414154)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:535


222 self.state_dicts[msg.id][msg.t] is (-112.36486053466797, 3.0959129333496094, 3.0282793045043945, -0.08525430411100388)


going to the update function
sim.py in the sim.py update function 
leave id: 0
t: 527
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:527




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.768463135
y: 3.0413608551
theta: 3.19573450089
speed: -0.0845821946859
id: 0
t: 527
xxx after update is x: -113.24936676
y: 3.8334236145
theta: 3.14711046219
speed: 0.14575111866
id: 0
t: 528
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:528




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.24936676
y: 3.8334236145
theta: 3.14711046219
speed: 0.14575111866
id: 0
t: 528
xxx after update is x: -113.206176758
y: 3.42059755325
theta: 3.059476614
speed: 0.104739911854
id: 0
t: 529
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:529




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.206176758
y: 3.42059755325
theta: 3.059476614
speed: 0.104739911854
id: 0
t: 529
xxx after update is x: -112.964035034
y: 3.59033727646
theta: 2.89506793022
speed: -0.401856154203
id: 0
t: 530
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:530




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.964035034
y: 3.59033727646
theta: 2.89506793022
speed: -0.401856154203
id: 0
t: 530
xxx after update is x: -113.407814026
y: 3.75390648842
theta: 3.01226186752
speed: -0.115930519998
id: 0
t: 531
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:531




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.407814026
y: 3.75390648842
theta: 3.01226186752
speed: -0.115930519998
id: 0
t: 531
xxx after update is x: -113.245933533
y: 3.3151409626
theta: 3.12781214714
speed: -0.2369890064
id: 0
t: 532
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:532




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.245933533
y: 3.3151409626
theta: 3.12781214714
speed: -0.2369890064
id: 0
t: 532
xxx after update is x: -112.911895752
y: 3.46728491783
theta: 3.25897240639
speed: 0.087219953537
id: 0
t: 533
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:533




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.911895752
y: 3.46728491783
theta: 3.25897240639
speed: 0.087219953537
id: 0
t: 533
xxx after update is x: -112.938201904
y: 3.31376743317
theta: 3.10381484032
speed: 0.390585750341
id: 0
t: 534
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:534




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.938201904
y: 3.31376743317
theta: 3.10381484032
speed: 0.390585750341
id: 0
t: 534
xxx after update is x: -112.364860535
y: 3.09591293335
theta: 3.0282793045
speed: -0.085254304111
id: 0
t: 535
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:535




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.364860535
y: 3.09591293335
theta: 3.0282793045
speed: -0.085254304111
id: 0
t: 535
xxx after update is x: -113.691223145
y: 2.71024513245
theta: 3.26156878471
speed: 0.390814840794
id: 0
t: 536
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:536




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.691223145
y: 2.71024513245
theta: 3.26156878471
speed: 0.390814840794
id: 0
t: 536
xxx after update is x: -113.221473694
y: 3.24278402328
theta: 3.34289956093
speed: 0.111055292189
id: 0
t: 537
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:537




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.221473694
y: 3.24278402328
theta: 3.34289956093
speed: 0.111055292189
id: 0
t: 537
xxx after update is x: -113.065315247
y: 3.15836238861
theta: 3.26253867149
speed: -0.0540573485196
id: 0
t: 538
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:538




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.065315247
y: 3.15836238861
theta: 3.26253867149
speed: -0.0540573485196
id: 0
t: 538
xxx after update is x: -113.157966614
y: 3.57631325722
theta: 3.04362654686
speed: -0.0848557502031
id: 0
t: 539
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:539




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.157966614
y: 3.57631325722
theta: 3.04362654686
speed: -0.0848557502031
id: 0
t: 539
xxx after update is x: -113.104576111
y: 3.53012394905
theta: 3.18894267082
speed: -0.375831991434
id: 0
t: 540
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:540




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.104576111
y: 3.53012394905
theta: 3.18894267082
speed: -0.375831991434
id: 0
t: 540
xxx after update is x: -112.98021698
y: 3.32249736786
theta: 3.18381810188
speed: 0.261670827866
id: 0
t: 541
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:541




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.98021698
y: 3.32249736786
theta: 3.18381810188
speed: 0.261670827866
id: 0
t: 541
xxx after update is x: -113.209159851
y: 3.72073698044
theta: 3.19785690308
speed: -0.0137122524902
id: 0
t: 542
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:542




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.209159851
y: 3.72073698044
theta: 3.19785690308
speed: -0.0137122524902
id: 0
t: 542
xxx after update is x: -112.873985291
y: 3.04511642456
theta: 2.97330617905
speed: 0.0149002335966
id: 0
t: 543
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:543




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.873985291
y: 3.04511642456
theta: 2.97330617905
speed: 0.0149002335966
idthe update function 
in spin function, finish the n times spin:536


222 self.state_dicts[msg.id][msg.t] is (-113.69122314453125, 2.710245132446289, 3.261568784713745, 0.3908148407936096)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:537


222 self.state_dicts[msg.id][msg.t] is (-113.22147369384766, 3.242784023284912, 3.3428995609283447, 0.11105529218912125)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:538


222 self.state_dicts[msg.id][msg.t] is (-113.06531524658203, 3.15836238861084, 3.2625386714935303, -0.054057348519563675)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:539


222 self.state_dicts[msg.id][msg.t] is (-113.15796661376953, 3.5763132572174072, 3.043626546859741, -0.08485575020313263)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:540


222 self.state_dicts[msg.id][msg.t] is (-113.10457611083984, 3.5301239490509033, 3.1889426708221436, -0.3758319914340973)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:541


222 self.state_dicts[msg.id][msg.t] is (-112.98021697998047, 3.3224973678588867, 3.1838181018829346, 0.2616708278656006)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:542


222 self.state_dicts[msg.id][msg.t] is (-113.20915985107422, 3.7207369804382324, 3.197856903076172, -0.013712252490222454)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:543


222 self.state_dicts[msg.id][msg.t] is (-112.87398529052734, 3.045116424560547, 2.973306179046631, 0.01490023359656334)
222 self.state_dicts[msg.id][msg.t] is (-113.61833190917969, 3.434344530105591, 3.3378896713256836, 0.35001635551452637)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:544


222 self.state_dicts[msg.id][msg.t] is (-113.10427856445312, 2.867443799972534, 3.057338237762451, -0.05828113481402397)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:545


222 self.state_dicts[msg.id][msg.t] is (-112.72510528564453, 2.6715781688690186, 3.147320032119751, -0.15676240622997284)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:546




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:547


222 self.state_dicts[msg.id][msg.t] is (-113.23387145996094, 3.3276383876800537, 3.2136995792388916, -0.08239845931529999)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:548


222 self.state_dicts[msg.id][msg.t] is (-112.70114135742188, 3.348043918609619, 3.2020654678344727, 0.12071219086647034)
222 self.state_dicts[msg.id][msg.t] is (-113.23546600341797, 3.3042335510253906, 3.173832654953003, -0.02290293574333191)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:549


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-113.07: 0
t: 543
xxx after update is x: -113.618331909
y: 3.43434453011
theta: 3.33788967133
speed: 0.350016355515
id: 0
t: 544
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:544




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.618331909
y: 3.43434453011
theta: 3.33788967133
speed: 0.350016355515
id: 0
t: 544
xxx after update is x: -113.104278564
y: 2.86744379997
theta: 3.05733823776
speed: -0.058281134814
id: 0
t: 545
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:545




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.104278564
y: 2.86744379997
theta: 3.05733823776
speed: -0.058281134814
id: 0
t: 545
xxx after update is x: -112.725105286
y: 2.67157816887
theta: 3.14732003212
speed: -0.15676240623
id: 0
t: 546
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:546




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.725105286
y: 2.67157816887
theta: 3.14732003212
speed: -0.15676240623
id: 0
t: 546
xxx after update is x: -113.23387146
y: 3.32763838768
theta: 3.21369957924
speed: -0.0823984593153
id: 0
t: 547
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:547




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.23387146
y: 3.32763838768
theta: 3.21369957924
speed: -0.0823984593153
id: 0
t: 547
xxx after update is x: -112.701141357
y: 3.34804391861
theta: 3.20206546783
speed: 0.120712190866
id: 0
t: 548
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:548




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.701141357
y: 3.34804391861
theta: 3.20206546783
speed: 0.120712190866
id: 0
t: 548
xxx after update is x: -113.235466003
y: 3.30423355103
theta: 3.17383265495
speed: -0.0229029357433
id: 0
t: 549
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:549




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.235466003
y: 3.30423355103
theta: 3.17383265495
speed: -0.0229029357433
id: 0
t: 549
xxx after update is x: -113.079620361
y: 3.42118024826
theta: 3.29204773903
speed: -0.311882913113
id: 0
t: 550
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:550




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.079620361
y: 3.42118024826
theta: 3.29204773903
speed: -0.311882913113
id: 0
t: 550
xxx after update is x: -112.985328674
y: 2.99696874619
theta: 3.11767745018
speed: -0.0585115887225
id: 0
t: 551
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:551




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.985328674
y: 2.99696874619
theta: 3.11767745018
speed: -0.0585115887225
id: 0
t: 551
xxx after update is x: -112.741294861
y: 3.11148047447
theta: 3.10499191284
speed: -0.396306186914
id: 0
t: 552
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:552




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.741294861
y: 3.11148047447
theta: 3.10499191284
speed: -0.396306186914
id: 0
t: 552
xxx after update is x: -113.145141602
y: 3.35334825516
theta: 3.00069093704
speed: 0.173685476184
id: 0
t: 553
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:553




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.145141602
y: 3.35334825516
theta: 3.00069093704
speed: 0.173685476184
id: 0
t: 553
xxx after update is x: -112.782531738
y: 3.1938867569
theta: 3.16178131104
speed: 0.492277443409
id: 0
t: 554
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:554




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.782531738
y: 3.1938867569
theta: 3.16178131104
speed: 0.492277443409
id: 0
t: 554
xxx after update is x: -112.994598389
y: 3.84644794464
theta: 3.1073577404
speed: -0.169584527612
id: 0
t: 555
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:555




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.994598389
y: 3.84644794464
theta: 3.1073577404
speed: -0.169584527612
id: 0
t: 555
xxx after update is x: -112.845176697
y: 3.18845534325
theta: 3.07488846779
speed: -0.512012243271
id: 0
t: 556
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:556




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:557


xxx before update is x: -112.845176697
y: 3.18845534325
theta: 3.07488846779
speed: -0.512012243271
id: 0
t: 556
xxx after update is x: -112.76473999
y: 3.1896109581
theta: 3.1478767395
speed: -0.105064317584
id: 0
t: 557
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.76473999
y: 3.1896109581
theta: 3.1478767395
speed: -0.105064317584
id: 0
t: 557
xxx after update is x: -113.094978333
y: 3.25234150887
theta: 3.27440094948
speed: 0.687534928322
id: 0
t: 558
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:558




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.094978333
y: 3.25234150887
theta: 3.27440094948
speed: 0.687534928322
id: 0
t: 558
xxx after update is x: -113.26322937
y: 3.05012321472
theta: 3.19649076462
speed: 0.206404164433
id: 0
t: 559
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:559




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.26322937
y: 3.05012321472
theta: 3.19649076462
speed: 0.206404164433
id: 0
t: 559
xxx after update is x: -112.696487427
y: 3.36425590515
theta: 3.03053951263
speed: -0.204715639353
id: 0
t: 560
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:560




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 s962036132812, 3.421180248260498, 3.2920477390289307, -0.3118829131126404)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:550




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:551


222 self.state_dicts[msg.id][msg.t] is (-112.9853286743164, 2.9969687461853027, 3.1176774501800537, -0.05851158872246742)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:552


222 self.state_dicts[msg.id][msg.t] is (-112.74129486083984, 3.111480474472046, 3.104991912841797, -0.39630618691444397)
222 self.state_dicts[msg.id][msg.t] is (-113.1451416015625, 3.3533482551574707, 3.0006909370422363, 0.1736854761838913)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:553




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:554


222 self.state_dicts[msg.id][msg.t] is (-112.78253173828125, 3.1938867568969727, 3.1617813110351562, 0.49227744340896606)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:555


222 self.state_dicts[msg.id][msg.t] is (-112.99459838867188, 3.8464479446411133, 3.1073577404022217, -0.16958452761173248)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:556


222 self.state_dicts[msg.id][msg.t] is (-112.84517669677734, 3.18845534324646, 3.0748884677886963, -0.512012243270874)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:557


222 self.state_dicts[msg.id][msg.t] is (-112.76473999023438, 3.1896109580993652, 3.147876739501953, -0.10506431758403778)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:558


222 self.state_dicts[msg.id][msg.t] is (-113.09497833251953, 3.2523415088653564, 3.2744009494781494, 0.6875349283218384)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:559


222 self.state_dicts[msg.id][msg.t] is (-113.26322937011719, 3.0501232147216797, 3.19649076461792, 0.2064041644334793)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:560


222 self.state_dicts[msg.id][msg.t] is (-112.69648742675781, 3.364255905151367, 3.0305395126342773, -0.20471563935279846)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:561


222 self.state_dicts[msg.id][msg.t] is (-112.4303207397461, 3.5228617191314697, 3.087416410446167, 0.28270238637924194)
222 self.state_dicts[msg.id][msg.t] is (-112.93065643310547, 3.0433006286621094, 3.110522508621216, 0.41193869709968567)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:562


222 self.state_dicts[msg.id][msg.t] is (-113.10887145996094, 3.196582555770874, 3.0869321823120117, 0.04165132716298103)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:563


222 self.state_dicts[msg.id][msg.t] is (-112.65752410888672, 3.119755744934082, 3.052125930786133, 0.2962196469306946)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin functielf.man_init:
xxx before update is x: -112.696487427
y: 3.36425590515
theta: 3.03053951263
speed: -0.204715639353
id: 0
t: 560
xxx after update is x: -112.43032074
y: 3.52286171913
theta: 3.08741641045
speed: 0.282702386379
id: 0
t: 561
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:561




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.43032074
y: 3.52286171913
theta: 3.08741641045
speed: 0.282702386379
id: 0
t: 561
xxx after update is x: -112.930656433
y: 3.04330062866
theta: 3.11052250862
speed: 0.4119386971
id: 0
t: 562
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:562




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.930656433
y: 3.04330062866
theta: 3.11052250862
speed: 0.4119386971
id: 0
t: 562
xxx after update is x: -113.10887146
y: 3.19658255577
theta: 3.08693218231
speed: 0.041651327163
id: 0
t: 563
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:563




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.10887146
y: 3.19658255577
theta: 3.08693218231
speed: 0.041651327163
id: 0
t: 563
xxx after update is x: -112.657524109
y: 3.11975574493
theta: 3.05212593079
speed: 0.296219646931
id: 0
t: 564
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:564




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.657524109
y: 3.11975574493
theta: 3.05212593079
speed: 0.296219646931
id: 0
t: 564
xxx after update is x: -113.054527283
y: 3.07626223564
theta: 3.1443002224
speed: 0.336092084646
id: 0
t: 565
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:565




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.054527283
y: 3.07626223564
theta: 3.1443002224
speed: 0.336092084646
id: 0
t: 565
xxx after update is x: -112.820365906
y: 3.11546945572
theta: 3.05300331116
speed: 0.271417409182
id: 0
t: 566
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:566




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.820365906
y: 3.11546945572
theta: 3.05300331116
speed: 0.271417409182
id: 0
t: 566
xxx after update is x: -112.752311707
y: 3.50625419617
theta: 3.01616072655
speed: -0.100564874709
id: 0
t: 567
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:567




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.752311707
y: 3.50625419617
theta: 3.01616072655
speed: -0.100564874709
id: 0
t: 567
xxx after update is x: -112.709075928
y: 2.85728168488
theta: 3.01538896561
speed: -0.0447230786085
id: 0
t: 568
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:568




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.709075928
y: 2.85728168488
theta: 3.01538896561
speed: -0.0447230786085
id: 0
t: 568
xxx after update is x: -113.01738739
y: 3.17957520485
theta: 3.11573028564
speed: 0.20986123383
id: 0
t: 569
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:569




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.01738739
y: 3.17957520485
theta: 3.11573028564
speed: 0.20986123383
id: 0
t: 569
xxx after update is x: -112.881530762
y: 3.40411806107
theta: 3.23320269585
speed: -0.655282318592
id: 0
t: 570
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:570




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.881530762
y: 3.40411806107
theta: 3.23320269585
speed: -0.655282318592
id: 0
t: 570
xxx after update is x: -113.367393494
y: 3.34802889824
theta: 3.14112377167
speed: 0.138708919287
id: 0
t: 571
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:571




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.367393494
y: 3.34802889824
theta: 3.14112377167
speed: 0.138708919287
id: 0
t: 571
xxx after update is x: -113.002983093
y: 3.35103082657
theta: 3.17337751389
speed: 0.121091924608
id: 0
t: 572
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:572




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.002983093
y: 3.35103082657
theta: 3.17337751389
speed: 0.121091924608
id: 0
t: 572
xxx after update is x: -112.978034973
y: 3.00157237053
theta: 3.17695307732
speed: 0.304258048534
id: 0
t: 573
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:573




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.978034973
y: 3.00157237053
theta: 3.17695307732
speed: 0.304258048534
id: 0
t: 573
xxx after update is x: -113.10333252
y: 3.76231956482
theta: 3.272336483
speed: -0.088545717299
id: 0
t: 574
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:574




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.10333252
y: 3.76231956482
theta: 3.272336483
speed: -0.088545717299
id: 0
t: 574
xxx after update is x: -113.367103577
y: 2.99526977539
theta: 3.02472352982
speed: -0.057868488133
id: 0
t: 575
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:575




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.367103577
y: 2.99526977539
theta: 3.02472352982
speed: -0.057868488133
id: 0
t: 575
xxx after update is x: -113.185684204
y: 2.54203939438
theta: 3.0209608078
speed: -0.242737874389
id: 0
t: 576
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:576




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.185684204
y: 2.54203939438
theta: 3.0209608078
speed: -0.242737874389
id: 0
t: 576
xxx after update is x: -112.934539795
y: 3.47103023529
theta: 3.1799788475
speed: -0.0861661285162
id: 0
t: 577
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:577




going on, finish the n times spin:564


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:565


222 self.state_dicts[msg.id][msg.t] is (-113.05452728271484, 3.0762622356414795, 3.1443002223968506, 0.336092084646225)
222 self.state_dicts[msg.id][msg.t] is (-112.82036590576172, 3.115469455718994, 3.0530033111572266, 0.27141740918159485)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:566


222 self.state_dicts[msg.id][msg.t] is (-112.75231170654297, 3.506254196166992, 3.016160726547241, -0.1005648747086525)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:567




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:568


222 self.state_dicts[msg.id][msg.t] is (-112.70907592773438, 2.8572816848754883, 3.0153889656066895, -0.04472307860851288)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:569


222 self.state_dicts[msg.id][msg.t] is (-113.01738739013672, 3.179575204849243, 3.1157302856445312, 0.20986123383045197)
222 self.state_dicts[msg.id][msg.t] is (-112.88153076171875, 3.404118061065674, 3.2332026958465576, -0.6552823185920715)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:570


222 self.state_dicts[msg.id][msg.t] is (-113.36739349365234, 3.3480288982391357, 3.1411237716674805, 0.1387089192867279)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:571


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:572


222 self.state_dicts[msg.id][msg.t] is (-113.00298309326172, 3.3510308265686035, 3.173377513885498, 0.12109192460775375)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:573


222 self.state_dicts[msg.id][msg.t] is (-112.97803497314453, 3.001572370529175, 3.176953077316284, 0.3042580485343933)
222 self.state_dicts[msg.id][msg.t] is (-113.10333251953125, 3.762319564819336, 3.272336483001709, -0.08854571729898453)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:574


222 self.state_dicts[msg.id][msg.t] is (-113.36710357666016, 2.995269775390625, 3.024723529815674, -0.057868488132953644)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:575




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:576


222 self.state_dicts[msg.id][msg.t] is (-113.18568420410156, 2.542039394378662, 3.020960807800293, -0.24273787438869476)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:577


222 self.state_dicts[msg.id][msg.t] is (-112.93453979492188, 3.4710302352905273, 3.179978847503662, -0.0861661285161972)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:578


222 self.state_dicts[msg.id][msg.t] is (-113.25385284423828, 3.142to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.934539795
y: 3.47103023529
theta: 3.1799788475
speed: -0.0861661285162
id: 0
t: 577
xxx after update is x: -113.253852844
y: 3.14263820648
theta: 3.30639648438
speed: -0.261270076036
id: 0
t: 578
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:578




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.253852844
y: 3.14263820648
theta: 3.30639648438
speed: -0.261270076036
id: 0
t: 578
xxx after update is x: -113.05632019
y: 3.39311337471
theta: 2.93595337868
speed: 0.152113988996
id: 0
t: 579
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:579




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.05632019
y: 3.39311337471
theta: 2.93595337868
speed: 0.152113988996
id: 0
t: 579
xxx after update is x: -113.135162354
y: 3.58499503136
theta: 3.08218574524
speed: 0.168155789375
id: 0
t: 580
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:580




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.135162354
y: 3.58499503136
theta: 3.08218574524
speed: 0.168155789375
id: 0
t: 580
xxx after update is x: -113.276855469
y: 3.48878979683
theta: 3.13653373718
speed: -0.130566239357
id: 0
t: 581
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:581




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.276855469
y: 3.48878979683
theta: 3.13653373718
speed: -0.130566239357
id: 0
t: 581
xxx after update is x: -113.289665222
y: 3.70446515083
theta: 3.16505122185
speed: 0.016121705994
id: 0
t: 582
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:582




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.289665222
y: 3.70446515083
theta: 3.16505122185
speed: 0.016121705994
id: 0
t: 582
xxx after update is x: -113.378128052
y: 3.13532042503
theta: 3.1676595211
speed: 0.175861075521
id: 0
t: 583
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:583




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.378128052
y: 3.13532042503
theta: 3.1676595211
speed: 0.175861075521
id: 0
t: 583
xxx after update is x: -113.045387268
y: 3.47322583199
theta: 3.05060887337
speed: -0.295995086432
id: 0
t: 584
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:584




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.045387268
y: 3.47322583199
theta: 3.05060887337
speed: -0.295995086432
id: 0
t: 584
xxx after update is x: -112.968009949
y: 3.22702240944
theta: 3.23147392273
speed: 0.00588288903236
id: 0
t: 585
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:585




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.968009949
y: 3.22702240944
theta: 3.23147392276382064819336, 3.306396484375, -0.26127007603645325)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:579


222 self.state_dicts[msg.id][msg.t] is (-113.05632019042969, 3.393113374710083, 2.935953378677368, 0.15211398899555206)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:580


222 self.state_dicts[msg.id][msg.t] is (-113.13516235351562, 3.5849950313568115, 3.082185745239258, 0.16815578937530518)
222 self.state_dicts[msg.id][msg.t] is (-113.27685546875, 3.4887897968292236, 3.136533737182617, -0.13056623935699463)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:581


222 self.state_dicts[msg.id][msg.t] is (-113.28966522216797, 3.70446515083313, 3.165051221847534, 0.01612170599400997)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:582


222 self.state_dicts[msg.id][msg.t] is (-113.37812805175781, 3.1353204250335693, 3.1676595211029053, 0.17586107552051544)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:583


222 self.state_dicts[msg.id][msg.t] is (-113.0453872680664, 3.4732258319854736, 3.0506088733673096, -0.2959950864315033)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:584


222 self.state_dicts[msg.id][msg.t] is (-112.96800994873047, 3.227022409439087, 3.231473922729492, 0.005882889032363892)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:585


222 self.state_dicts[msg.id][msg.t] is (-112.76839447021484, 3.2160866260528564, 3.0096800327301025, -0.08106669783592224)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:586


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:587


222 self.state_dicts[msg.id][msg.t] is (-112.7939453125, 3.271221876144409, 3.132222890853882, 0.2114487737417221)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:588


222 self.state_dicts[msg.id][msg.t] is (-113.13204956054688, 3.3930435180664062, 3.218039035797119, -0.05118834599852562)
222 self.state_dicts[msg.id][msg.t] is (-112.99539184570312, 3.745082139968872, 3.275527238845825, 0.3747512400150299)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:589


222 self.state_dicts[msg.id][msg.t] is (-112.90647888183594, 3.641267776489258, 3.006298542022705, -0.09985078126192093)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:590




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:591


222 self.state_dicts[msg.id][msg.t] is (-113.29645538330078, 3.5888867378234863, 3.3088908195495605, -0.4044371545314789)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:592


222 self.state_dicts[msg.id][msg.t] is (-112.5947875973
speed: 0.00588288903236
id: 0
t: 585
xxx after update is x: -112.76839447
y: 3.21608662605
theta: 3.00968003273
speed: -0.0810666978359
id: 0
t: 586
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:586




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.76839447
y: 3.21608662605
theta: 3.00968003273
speed: -0.0810666978359
id: 0
t: 586
xxx after update is x: -112.793945312
y: 3.27122187614
theta: 3.13222289085
speed: 0.211448773742
id: 0
t: 587
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:587




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.793945312
y: 3.27122187614
theta: 3.13222289085
speed: 0.211448773742
id: 0
t: 587
xxx after update is x: -113.132049561
y: 3.39304351807
theta: 3.2180390358
speed: -0.0511883459985
id: 0
t: 588
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:588




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.132049561
y: 3.39304351807
theta: 3.2180390358
speed: -0.0511883459985
id: 0
t: 588
xxx after update is x: -112.995391846
y: 3.74508213997
theta: 3.27552723885
speed: 0.374751240015
id: 0
t: 589
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:589




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.995391846
y: 3.74508213997
theta: 3.27552723885
speed: 0.374751240015
id: 0
t: 589
xxx after update is x: -112.906478882
y: 3.64126777649
theta: 3.00629854202
speed: -0.0998507812619
id: 0
t: 590
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:590




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.906478882
y: 3.64126777649
theta: 3.00629854202
speed: -0.0998507812619
id: 0
t: 590
xxx after update is x: -113.296455383
y: 3.58888673782
theta: 3.30889081955
speed: -0.404437154531
id: 0
t: 591
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:591




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.296455383
y: 3.58888673782
theta: 3.30889081955
speed: -0.404437154531
id: 0
t: 591
xxx after update is x: -112.594787598
y: 3.69861912727
theta: 3.1605257988
speed: 0.141865819693
id: 0
t: 592
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:592




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.594787598
y: 3.69861912727
theta: 3.1605257988
speed: 0.141865819693
id: 0
t: 592
xxx after update is x: -112.972000122
y: 3.37586641312
theta: 3.17739200592
speed: 0.133670061827
id: 0
t: 593
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:593




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.972000122
y: 3.37586641312
theta: 3.17739200592
speed: 0.133670061827
id: 0
t: 593
xxx after update is x: -112.84487915
y: 3.3449549675
theta: 3.3409101963
speed: 0.0740653425455
id: 0
t: 594
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:594




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.84487915
y: 3.3449549675
theta: 3.3409101963
speed: 0.0740653425455
id: 0
t: 594
xxx after update is x: -112.548171997
y: 3.18654894829
theta: 3.30858683586
speed: 0.0244904607534
id: 0
t: 595
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:595




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.548171997
y: 3.18654894829
theta: 3.30858683586
speed: 0.0244904607534
id: 0
t: 595
xxx after update is x: -112.880157471
y: 3.87247252464
theta: 3.1459171772
speed: -0.159127905965
id: 0
t: 596
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:596




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.880157471
y: 3.87247252464
theta: 3.1459171772
speed: -0.159127905965
id: 0
t: 596
xxx after update is x: -113.239402771
y: 3.02136540413
theta: 3.12502884865
speed: 0.0654583796859
id: 0
t: 597
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:597




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.239402771
y: 3.02136540413
theta: 3.12502884865
speed: 0.0654583796859
id: 0
t: 597
xxx after update is x: -113.598937988
y: 2.97015976906
theta: 3.16959834099
speed: 0.274322420359
id: 0
t: 598
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:598




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.598937988
y: 2.97015976906
theta: 3.16959834099
speed: 0.274322420359
id: 0
t: 598
xxx after update is x: -112.618110657
y: 3.47740983963
theta: 3.25993728638
speed: 0.0372731722891
id: 0
t: 599
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:599




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.618110657
y: 3.47740983963
theta: 3.25993728638
speed: 0.0372731722891
id: 0
t: 599
xxx after update is x: -113.227416992
y: 3.09928512573
theta: 3.07408833504
speed: -0.192311182618
id: 0
t: 600
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:600




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.227416992
y: 3.09928512573
theta: 3.07408833504
speed: -0.192311182618
id: 0
t: 600
xxx after update is x: -113.431938171
y: 2.97956371307
theta: 3.19930768013
speed: -0.241888016462
id: 0
t: 601
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:601




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.431938171
y: 2.97956371307
theta: 3.19930768013
speed: -0.241888016462
id: 0
t: 601
xxx after update is x: -113.210334778
y: 3.19965291023
theta: 3.35526823997
speed: -0.372748881578
id: 0
t: 602
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:602




going to the update function
sim.py in the sim.py update function 
targe65625, 3.6986191272735596, 3.1605257987976074, 0.1418658196926117)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:593


222 self.state_dicts[msg.id][msg.t] is (-112.97200012207031, 3.375866413116455, 3.17739200592041, 0.13367006182670593)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:594


222 self.state_dicts[msg.id][msg.t] is (-112.84487915039062, 3.3449549674987793, 3.3409101963043213, 0.07406534254550934)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:595


222 self.state_dicts[msg.id][msg.t] is (-112.54817199707031, 3.186548948287964, 3.308586835861206, 0.024490460753440857)
222 self.state_dicts[msg.id][msg.t] is (-112.88015747070312, 3.8724725246429443, 3.1459171772003174, -0.15912790596485138)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:596




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:597


222 self.state_dicts[msg.id][msg.t] is (-113.2394027709961, 3.0213654041290283, 3.1250288486480713, 0.06545837968587875)
222 self.state_dicts[msg.id][msg.t] is (-113.59893798828125, 2.9701597690582275, 3.169598340988159, 0.27432242035865784)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:598




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:599


222 self.state_dicts[msg.id][msg.t] is (-112.61811065673828, 3.477409839630127, 3.259937286376953, 0.03727317228913307)
222 self.state_dicts[msg.id][msg.t] is (-113.2274169921875, 3.099285125732422, 3.0740883350372314, -0.19231118261814117)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:600


222 self.state_dicts[msg.id][msg.t] is (-113.43193817138672, 2.9795637130737305, 3.199307680130005, -0.24188801646232605)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:601


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:602


222 self.state_dicts[msg.id][msg.t] is (-113.21033477783203, 3.199652910232544, 3.3552682399749756, -0.37274888157844543)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:603


222 self.state_dicts[msg.id][msg.t] is (-113.19551086425781, 3.511463165283203, 3.092982292175293, -0.1278771162033081)
222 self.state_dicts[msg.id][msg.t] is (-112.90090942382812, 3.1425857543945312, 3.079117774963379, -0.07631881535053253)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:604


222 self.state_dicts[msg.id][msg.t] is (-113.18141174316406, 3.4701650142669678, 3.1804051399230957, 0.407283753156662)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:605




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:606


222 self.state_dicts[msg.id][mstspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.210334778
y: 3.19965291023
theta: 3.35526823997
speed: -0.372748881578
id: 0
t: 602
xxx after update is x: -113.195510864
y: 3.51146316528
theta: 3.09298229218
speed: -0.127877116203
id: 0
t: 603
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:603




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.195510864
y: 3.51146316528
theta: 3.09298229218
speed: -0.127877116203
id: 0
t: 603
xxx after update is x: -112.900909424
y: 3.14258575439
theta: 3.07911777496
speed: -0.0763188153505
id: 0
t: 604
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:604




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.900909424
y: 3.14258575439
theta: 3.07911777496
speed: -0.0763188153505
id: 0
t: 604
xxx after update is x: -113.181411743
y: 3.47016501427
theta: 3.18040513992
speed: 0.407283753157
id: 0
t: 605
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:605




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.181411743
y: 3.47016501427
theta: 3.18040513992
speed: 0.407283753157
id: 0
t: 605
xxx after update is x: -113.577651978
y: 3.13532185555
theta: 3.16605854034
speed: 0.334830731153
id: 0
t: 606
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:606




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.577651978
y: 3.13532185555
theta: 3.16605854034
speed: 0.334830731153
id: 0
t: 606
xxx after update is x: -113.188034058
y: 3.4192044735
theta: 3.1908197403
speed: 0.102838248014
id: 0
t: 607
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:607




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.188034058
y: 3.4192044735
theta: 3.1908197403
speed: 0.102838248014
id: 0
t: 607
xxx after update is x: -112.908081055
y: 3.26603031158
theta: 3.19585084915
speed: -0.272260606289
id: 0
t: 608
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:608




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.908081055
y: 3.26603031158
theta: 3.19585084915
speed: -0.272260606289
id: 0
t: 608
xxx after update is x: -112.834831238
y: 3.43417024612
theta: 3.23275828362
speed: 0.228180393577
id: 0
t: 609
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:609




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.834831238
y: 3.43417024612
theta: 3.23275828362
speed: 0.228180393577
id: 0
t: 609
xxx after update is x: -113.075592041
y: 3.19688653946
theta: 2.99156713486
speed: -0.114301972091
id: 0
t: 610
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:610




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.075592041
y: 3.19688653946
theta: 2.99156713486
speed: -0.114301972091
id: 0
t: 610
xxx after update is x: -113.069030762
y: 2.95386338234
theta: 3.10752534866
speed: 0.14350438118
id: 0
t: 611
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:611




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.069030762
y: 2.95386338234
theta: 3.10752534866
speed: 0.14350438118
id: 0
t: 611
xxx after update is x: -112.900535583
y: 3.18817973137
theta: 3.05365180969
speed: -0.202582538128
id: 0
t: 612
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:612




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.900535583
y: 3.18817973137
theta: 3.05365180969
speed: -0.202582538128
id: 0
t: 612
xxx after update is x: -112.651054382
y: 3.21959805489
theta: 3.15260767937
speed: -0.119890235364
id: 0
t: 613
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:613




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.651054382
y: 3.21959805489
theta: 3.15260767937
speed: -0.119890235364
id: 0
t: 613
xxx after update is x: -113.216499329
y: 2.74823260307
theta: 3.11010408401
speed: -0.190988600254
id: 0
t: 614
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:614




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.216499329
y: 2.74823260307
theta: 3.11010408401
speed: -0.190988600254
id: 0
t: 614
xxx after update is x: -113.726036072
y: 3.54793810844
theta: 3.20726752281
speed: -0.218072861433
id: 0
t: 615
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:615




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.726036072
y: 3.54793810844
theta: 3.20726752281
speed: -0.218072861433
id: 0
t: 615
xxx after update is x: -113.065704346
y: 3.41027283669
theta: 3.25436663628
speed: -0.153660342097
id: 0
t: 616
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:616




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.065704346
y: 3.41027283669
theta: 3.25436663628
speed: -0.153660342097
id: 0
t: 616
xxx after update is x: -112.507034302
y: 3.38744711876
theta: 3.14245128632
speed: 0.0717976912856
id: 0
t: 617
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:617




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.507034302
y: 3.38744711876
theta: 3.14245128632
speed: 0.0717976912856
id: 0
t: 617
xxx after update is x: -113.071289062
y: 3.15009021759
theta: 3.23612785339
speed: 0.2100738585
id: 0
t: 618
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:618




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.071289062
y: 3.15009021759
theta: 3.23612785339
speed: 0.2100738585
id: 0
t: 618
xxx after update is x: -112.387786865
y: 3.57721495628
theta: 3.09536314011
speed: -0.0383097939193
id: 0
t: 619
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in g.t] is (-113.57765197753906, 3.135321855545044, 3.1660585403442383, 0.33483073115348816)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:607


222 self.state_dicts[msg.id][msg.t] is (-113.18803405761719, 3.4192044734954834, 3.19081974029541, 0.10283824801445007)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:608


222 self.state_dicts[msg.id][msg.t] is (-112.9080810546875, 3.2660303115844727, 3.1958508491516113, -0.2722606062889099)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:609


222 self.state_dicts[msg.id][msg.t] is (-112.83483123779297, 3.4341702461242676, 3.2327582836151123, 0.228180393576622)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:610


222 self.state_dicts[msg.id][msg.t] is (-113.07559204101562, 3.1968865394592285, 2.9915671348571777, -0.11430197209119797)
222 self.state_dicts[msg.id][msg.t] is (-113.06903076171875, 2.9538633823394775, 3.10752534866333, 0.14350438117980957)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:611


222 self.state_dicts[msg.id][msg.t] is (-112.9005355834961, 3.1881797313690186, 3.053651809692383, -0.20258253812789917)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:612




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:613


222 self.state_dicts[msg.id][msg.t] is (-112.65105438232422, 3.2195980548858643, 3.1526076793670654, -0.1198902353644371)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:614


222 self.state_dicts[msg.id][msg.t] is (-113.21649932861328, 2.74823260307312, 3.1101040840148926, -0.19098860025405884)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:615


222 self.state_dicts[msg.id][msg.t] is (-113.72603607177734, 3.547938108444214, 3.2072675228118896, -0.21807286143302917)
222 self.state_dicts[msg.id][msg.t] is (-113.06570434570312, 3.4102728366851807, 3.254366636276245, -0.1536603420972824)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:616


222 self.state_dicts[msg.id][msg.t] is (-112.50703430175781, 3.3874471187591553, 3.142451286315918, 0.0717976912856102)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:617


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:618


222 self.state_dicts[msg.id][msg.t] is (-113.0712890625, 3.150090217590332, 3.2361278533935547, 0.21007385849952698)
222 self.state_dicts[msg.id][msg.t] is (-112.38778686523438, 3.5772149562835693, 3.095363140106201, -0.038309793919324875)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:619


222 self.state_dicts[msg.id][msg.t] is (-112.8711929321289, 2.794288396835327, 3.284789800643921, -0.134527787566185)


going to the update function
sim.pyspin function, finish the n times spin:619




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.387786865
y: 3.57721495628
theta: 3.09536314011
speed: -0.0383097939193
id: 0
t: 619
xxx after update is x: -112.871192932
y: 2.79428839684
theta: 3.28478980064
speed: -0.134527787566
id: 0
t: 620
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:620




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.871192932
y: 2.79428839684
theta: 3.28478980064
speed: -0.134527787566
id: 0
t: 620
xxx after update is x: -113.197792053
y: 3.54051113129
theta: 3.01612758636
speed: -0.0945969969034
id: 0
t: 621
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:621




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.197792053
y: 3.54051113129
theta: 3.01612758636
speed: -0.0945969969034
id: 0
t: 621
xxx after update is x: -113.448608398
y: 3.02602171898
theta: 3.09118461609
speed: -0.211870655417
id: 0
t: 622
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:622




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.448608398
y: 3.02602171898
theta: 3.09118461609
speed: -0.211870655417
id: 0
t: 622
xxx after update is x: -112.53691864
y: 3.32309484482
theta: 3.13948941231
speed: 0.528296291828
id: 0
t: 623
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:623




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.53691864
y: 3.32309484482
theta: 3.13948941231
speed: 0.528296291828
id: 0
t: 623
xxx after update is x: -113.428359985
y: 2.88018393517
theta: 3.02681398392
speed: 0.17410774529
id: 0
t: 624
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:624




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.428359985
y: 2.88018393517
theta: 3.02681398392
speed: 0.17410774529
id: 0
t: 624
xxx after update is x: -112.934303284
y: 2.5566277504
theta: 3.14442849159
speed: 0.279202520847
id: 0
t: 625
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:625




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.934303284
y: 2.5566277504
theta: 3.14442849159
speed: 0.279202520847
id: 0
t: 625
xxx after update is x: -112.645721436
y: 3.36202454567
theta: 3.13036084175
speed: 0.0606892704964
id: 0
t: 626
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:626




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.645721436
y: 3.36202454567
theta: 3.13036084175
speed: 0.0606892704964
id: 0
t: 626
xxx after update is x: -113.310028076
y: 3.857172966
theta: 3.21270799637
speed: 0.24271517992
id: 0
t: 627
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:627




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x:  in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:620




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:621


222 self.state_dicts[msg.id][msg.t] is (-113.19779205322266, 3.540511131286621, 3.016127586364746, -0.0945969969034195)
222 self.state_dicts[msg.id][msg.t] is (-113.4486083984375, 3.026021718978882, 3.091184616088867, -0.21187065541744232)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:622


222 self.state_dicts[msg.id][msg.t] is (-112.53691864013672, 3.3230948448181152, 3.1394894123077393, 0.5282962918281555)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:623


222 self.state_dicts[msg.id][msg.t] is (-113.42835998535156, 2.8801839351654053, 3.0268139839172363, 0.17410774528980255)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:624


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:625


222 self.state_dicts[msg.id][msg.t] is (-112.9343032836914, 2.5566277503967285, 3.1444284915924072, 0.27920252084732056)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:626


222 self.state_dicts[msg.id][msg.t] is (-112.64572143554688, 3.3620245456695557, 3.1303608417510986, 0.06068927049636841)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:627


222 self.state_dicts[msg.id][msg.t] is (-113.31002807617188, 3.857172966003418, 3.212707996368408, 0.24271517992019653)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:628


222 self.state_dicts[msg.id][msg.t] is (-112.97421264648438, 2.990360736846924, 3.1850411891937256, 0.19958434998989105)
222 self.state_dicts[msg.id][msg.t] is (-112.96953582763672, 2.831033945083618, 2.9380483627319336, -0.42347463965415955)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:629


222 self.state_dicts[msg.id][msg.t] is (-112.90834045410156, 2.9294893741607666, 3.195744276046753, 0.14946207404136658)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:630


222 self.state_dicts[msg.id][msg.t] is (-112.44554138183594, 3.192906618118286, 3.213040828704834, 0.08380890637636185)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:631


222 self.state_dicts[msg.id][msg.t] is (-112.85369873046875, 2.6950764656066895, 2.970115900039673, -0.04167376086115837)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:632


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:633


222 self.state_dicts[msg.id][msg.t] is (-113.57567596435547, 3.070861339569092, 3.2529959678649902, -0.13082942366600037)
222 self.state_dicts[msg.id][msg.t] is (-113.262451171875, 2.9456803798675537, 3.143691301345825, -0.1065792515873909)


going to the u-113.310028076
y: 3.857172966
theta: 3.21270799637
speed: 0.24271517992
id: 0
t: 627
xxx after update is x: -112.974212646
y: 2.99036073685
theta: 3.18504118919
speed: 0.19958434999
id: 0
t: 628
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:628




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.974212646
y: 2.99036073685
theta: 3.18504118919
speed: 0.19958434999
id: 0
t: 628
xxx after update is x: -112.969535828
y: 2.83103394508
theta: 2.93804836273
speed: -0.423474639654
id: 0
t: 629
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:629




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.969535828
y: 2.83103394508
theta: 2.93804836273
speed: -0.423474639654
id: 0
t: 629
xxx after update is x: -112.908340454
y: 2.92948937416
theta: 3.19574427605
speed: 0.149462074041
id: 0
t: 630
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:630




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.908340454
y: 2.92948937416
theta: 3.19574427605
speed: 0.149462074041
id: 0
t: 630
xxx after update is x: -112.445541382
y: 3.19290661812
theta: 3.2130408287
speed: 0.0838089063764
id: 0
t: 631
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:631




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.445541382
y: 3.19290661812
theta: 3.2130408287
speed: 0.0838089063764
id: 0
t: 631
xxx after update is x: -112.85369873
y: 2.69507646561
theta: 2.97011590004
speed: -0.0416737608612
id: 0
t: 632
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:632




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.85369873
y: 2.69507646561
theta: 2.97011590004
speed: -0.0416737608612
id: 0
t: 632
xxx after update is x: -113.575675964
y: 3.07086133957
theta: 3.25299596786
speed: -0.130829423666
id: 0
t: 633
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:633




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.575675964
y: 3.07086133957
theta: 3.25299596786
speed: -0.130829423666
id: 0
t: 633
xxx after update is x: -113.262451172
y: 2.94568037987
theta: 3.14369130135
speed: -0.106579251587
id: 0
t: 634
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:634




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.262451172
y: 2.94568037987
theta: 3.14369130135
speed: -0.106579251587
id: 0
t: 634
xxx after update is x: -113.522926331
y: 3.2196764946
theta: 3.05361843109
speed: -0.280487269163
id: 0
t: 635
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:635




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.522926331
y: 3.2196764946
theta: 3.05361843109
speed: -0.280487269163
id: 0
t: 635
xxx after update is x: -112.686080933
y: 3.72494769096
theta: 3.03325176239
speed: -0.0123043786734
id: 0
t: 636
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:636




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.686080933
y: 3.72494769096
theta: 3.03325176239
speed: -0.0123043786734
id: 0
t: 636
xxx after update is x: -112.99395752
y: 3.12842750549
theta: 3.16890335083
speed: -0.129349827766
id: 0
t: 637
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:637




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.99395752
y: 3.12842750549
theta: 3.16890335083
speed: -0.129349827766
id: 0
t: 637
xxx after update is x: -112.876495361
y: 3.45126748085
theta: 3.14288043976
speed: -0.0534891672432
id: 0
t: 638
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:638




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.876495361
y: 3.45126748085
theta: 3.14288043976
speed: -0.0534891672432
id: 0
t: 638
xxx after update is x: -113.076835632
y: 3.57475972176
theta: 2.99888634682
speed: 0.21859806776
id: 0
t: 639
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:639




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.076835632
y: 3.57475972176
theta: 2.99888634682
speed: 0.21859806776
id: 0
t: 639
xxx after update is x: -113.288223267
y: 3.26015973091
theta: 3.28236508369
speed: 0.277995377779
id: 0
t: 640
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:640




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.288223267
y: 3.26015973091
theta: 3.28236508369
speed: 0.277995377779
id: 0
t: 640
xxx after update is x: -113.152549744
y: 3.64810657501
theta: 3.13922262192
speed: -0.122500635684
id: 0
t: 641
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:641




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.152549744
y: 3.64810657501
theta: 3.13922262192
speed: -0.122500635684
id: 0
t: 641
xxx after update is x: -112.741119385
y: 3.33047628403
theta: 3.09628796577
speed: -0.16478100419
id: 0
t: 642
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:642




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.741119385
y: 3.33047628403
theta: 3.09628796577
speed: -0.16478100419
id: 0
t: 642
xxx after update is x: -113.156196594
y: 3.12712621689
theta: 3.15149760246
speed: -0.106867834926
id: 0
t: 643
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:643




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.156196594
y: 3.12712621689
theta: 3.15149760246
speed: -0.106867834926
id: 0
t: 643
xxx after update is x: -113.212593079
y: 2.51479029655
theta: 3.02334618568
speed: -0.341180622578
id: 0
t: 644
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:644




going to the update funcpdate function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:634


222 self.state_dicts[msg.id][msg.t] is (-113.5229263305664, 3.2196764945983887, 3.0536184310913086, -0.2804872691631317)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:635


222 self.state_dicts[msg.id][msg.t] is (-112.68608093261719, 3.724947690963745, 3.0332517623901367, -0.012304378673434258)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:636


222 self.state_dicts[msg.id][msg.t] is (-112.99395751953125, 3.128427505493164, 3.168903350830078, -0.12934982776641846)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:637




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:638


222 self.state_dicts[msg.id][msg.t] is (-112.87649536132812, 3.4512674808502197, 3.142880439758301, -0.053489167243242264)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:639


222 self.state_dicts[msg.id][msg.t] is (-113.07683563232422, 3.5747597217559814, 2.9988863468170166, 0.21859806776046753)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:640


222 self.state_dicts[msg.id][msg.t] is (-113.28822326660156, 3.260159730911255, 3.282365083694458, 0.27799537777900696)
222 self.state_dicts[msg.id][msg.t] is (-113.15254974365234, 3.648106575012207, 3.1392226219177246, -0.12250063568353653)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:641


222 self.state_dicts[msg.id][msg.t] is (-112.74111938476562, 3.3304762840270996, 3.096287965774536, -0.16478100419044495)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:642




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:643


222 self.state_dicts[msg.id][msg.t] is (-113.15619659423828, 3.1271262168884277, 3.1514976024627686, -0.10686783492565155)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:644


222 self.state_dicts[msg.id][msg.t] is (-113.21259307861328, 2.5147902965545654, 3.023346185684204, -0.34118062257766724)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:645


222 self.state_dicts[msg.id][msg.t] is (-112.98162078857422, 3.3873820304870605, 3.076826810836792, -0.0608244463801384)
222 self.state_dicts[msg.id][msg.t] is (-112.94803619384766, 3.211609363555908, 3.218278646469116, 0.2106202095746994)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:646




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:647


222 self.state_dicts[msg.id][msg.t] is (-113.1424560546875, 3.4438529014587402, 3.1237285137176514, 0.04496997222304344)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.212593079
y: 2.51479029655
theta: 3.02334618568
speed: -0.341180622578
id: 0
t: 644
xxx after update is x: -112.981620789
y: 3.38738203049
theta: 3.07682681084
speed: -0.0608244463801
id: 0
t: 645
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:645




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.981620789
y: 3.38738203049
theta: 3.07682681084
speed: -0.0608244463801
id: 0
t: 645
xxx after update is x: -112.948036194
y: 3.21160936356
theta: 3.21827864647
speed: 0.210620209575
id: 0
t: 646
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:646




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.948036194
y: 3.21160936356
theta: 3.21827864647
speed: 0.210620209575
id: 0
t: 646
xxx after update is x: -113.142456055
y: 3.44385290146
theta: 3.12372851372
speed: 0.044969972223
id: 0
t: 647
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:647




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.142456055
y: 3.44385290146
theta: 3.12372851372
speed: 0.044969972223
id: 0
t: 647
xxx after update is x: -113.052360535
y: 3.3250079155
theta: 3.08451008797
speed: 0.216411650181
id: 0
t: 648
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:648




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.052360535
y: 3.3250079155
theta: 3.08451008797
speed: 0.216411650181
id: 0
t: 648
xxx after update is x: -113.208206177
y: 3.12728381157
theta: 3.00315690041
speed: -0.129329457879
id: 0
t: 649
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:649




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.208206177
y: 3.12728381157
theta: 3.00315690041
speed: -0.129329457879
id: 0
t: 649
xxx after update is x: -113.185874939
y: 2.88601350784
theta: 3.10014677048
speed: -0.0106662288308
id: 0
t: 650
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:650




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.185874939
y: 2.88601350784
theta: 3.10014677048
speed: -0.0106662288308
id: 0
t: 650
xxx after update is x: -112.682518005
y: 3.06476950645
theta: 3.32354855537
speed: -0.157838508487
id: 0
t: 651
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:651




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.682518005
y: 3.06476950645
theta: 3.32354855537
speed: -0.157838508487
id: 0
t: 651
xxx after update is x: -112.808303833
y: 3.31492519379
theta: 3.18796277046
speed: 0.389529466629
id: 0
t: 652
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:652




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.808303833
y: 3.31492519379
theta: 3.18796277046
speed: 0.389529466629
id: 0
t: 652
xxx after update is x: -113.40083313
y: 3.1346385479
theta: 2.98660564423
speed: 0.0704155638814
id: 0
t: 653
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:653




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.40083313
y: 3.1346385479
theta: 2.98660564423
speed: 0.0704155638814
id: 0
t: 653
xxx after update is x: -112.791152954
y: 3.18179631233
theta: 3.18650889397
speed: 0.264473587275
id: 0
t: 654
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:654




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.791152954
y: 3.18179631233
theta: 3.18650889397
speed: 0.264473587275
id: 0
t: 654
xxx after update is x: -113.212043762
y: 2.89750003815
theta: 3.11085057259
speed: -0.150628462434
id: 0
t: 655
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:655




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.212043762
y: 2.89750003815
theta: 3.11085057259
speed: -0.150628462434
id: 0
t: 655
xxx after update is x: -112.714385986
y: 3.41000318527
theta: 3.11400175095
speed: 0.37675845623
id: 0
t: 656
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:656




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.714385986
y: 3.41000318527
theta: 3.11400175095
speed: 0.37675845623
id: 0
t: 656
xxx after update is x: -113.449897766
y: 3.04362726212
theta: 3.35523843765
speed: -0.230515494943
id: 0
t: 657
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:657




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.449897766
y: 3.04362726212
theta: 3.35523843765
speed: -0.230515494943
id: 0
t: 657
xxx after update is x: -113.00239563
y: 3.12672495842
theta: 3.01748394966
speed: -0.0283705051988
id: 0
t: 658
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:658




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.00239563
y: 3.12672495842
theta: 3.01748394966
speed: -0.0283705051988
id: 0
t: 658
xxx after update is x: -112.914978027
y: 3.38353681564
theta: 3.22111296654
speed: -0.344996452332
id: 0
t: 659
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:659




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.914978027
y: 3.38353681564
theta: 3.22111296654
speed: -0.344996452332
id: 0
t: 659
xxx after update is x: -113.747909546
y: 3.74891543388
theta: 3.25679278374
speed: 0.192810922861
id: 0
t: 660
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:660




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.747909546
y: 3.74891543388
theta: 3.25679278374
speed: 0.192810922861
id: 0
t: 660
xxx after update is x: -112.933547974
y: 3.37652182579
theta: 3.25625681877
speed: -0.154184699059
id: 0
t: 661
maneuver_negotiatir.py finish the update agent stattion, finish the n times spin:648


222 self.state_dicts[msg.id][msg.t] is (-113.05236053466797, 3.325007915496826, 3.084510087966919, 0.21641165018081665)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:649


222 self.state_dicts[msg.id][msg.t] is (-113.20820617675781, 3.127283811569214, 3.003156900405884, -0.12932945787906647)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:650


222 self.state_dicts[msg.id][msg.t] is (-113.18587493896484, 2.8860135078430176, 3.100146770477295, -0.010666228830814362)
222 self.state_dicts[msg.id][msg.t] is (-112.6825180053711, 3.0647695064544678, 3.3235485553741455, -0.15783850848674774)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:651


222 self.state_dicts[msg.id][msg.t] is (-112.80830383300781, 3.314925193786621, 3.187962770462036, 0.3895294666290283)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:652




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:653


222 self.state_dicts[msg.id][msg.t] is (-113.40083312988281, 3.134638547897339, 2.986605644226074, 0.07041556388139725)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:654


222 self.state_dicts[msg.id][msg.t] is (-112.79115295410156, 3.1817963123321533, 3.186508893966675, 0.2644735872745514)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:655


222 self.state_dicts[msg.id][msg.t] is (-113.21204376220703, 2.8975000381469727, 3.1108505725860596, -0.150628462433815)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:656


222 self.state_dicts[msg.id][msg.t] is (-112.71438598632812, 3.410003185272217, 3.114001750946045, 0.3767584562301636)
222 self.state_dicts[msg.id][msg.t] is (-113.44989776611328, 3.0436272621154785, 3.355238437652588, -0.2305154949426651)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:657




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:658


222 self.state_dicts[msg.id][msg.t] is (-113.00239562988281, 3.1267249584198, 3.017483949661255, -0.028370505198836327)
222 self.state_dicts[msg.id][msg.t] is (-112.91497802734375, 3.3835368156433105, 3.2211129665374756, -0.34499645233154297)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:659




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:660


222 self.state_dicts[msg.id][msg.t] is (-113.74790954589844, 3.748915433883667, 3.2567927837371826, 0.19281092286109924)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:661


222 self.state_dicts[msg.id][msg.t] is (-112.93354797363281, 3.3765218257904053, 3.2562568187713623, -0.15418469905853271)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:662


222 self.state_dicts[msg.id][msg.t] is (-112.86832427978516, 3.3480918407440186, 3.210021495819092, -0.13943597674369812)
maneuver_negotiatir.py ine from ros funtion
leave the update function 
in spin function, finish the n times spin:661




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.933547974
y: 3.37652182579
theta: 3.25625681877
speed: -0.154184699059
id: 0
t: 661
xxx after update is x: -112.86832428
y: 3.34809184074
theta: 3.21002149582
speed: -0.139435976744
id: 0
t: 662
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:662




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.86832428
y: 3.34809184074
theta: 3.21002149582
speed: -0.139435976744
id: 0
t: 662
xxx after update is x: -113.364715576
y: 3.39497447014
theta: 3.17944741249
speed: 0.0827196538448
id: 0
t: 663
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:663




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.364715576
y: 3.39497447014
theta: 3.17944741249
speed: 0.0827196538448
id: 0
t: 663
xxx after update is x: -113.347381592
y: 3.66300463676
theta: 3.21029067039
speed: 0.251688301563
id: 0
t: 664
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:664




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.347381592
y: 3.66300463676
theta: 3.21029067039
speed: 0.251688301563
id: 0
t: 664
xxx after update is x: -112.993087769
y: 3.33548474312
theta: 3.18769049644
speed: 0.130699396133
id: 0
t: 665
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:665




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.993087769
y: 3.33548474312
theta: 3.18769049644
speed: 0.130699396133
id: 0
t: 665
xxx after update is x: -113.094108582
y: 3.3665099144
theta: 3.16103196144
speed: 0.279279023409
id: 0
t: 666
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:666




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.094108582
y: 3.3665099144
theta: 3.16103196144
speed: 0.279279023409
id: 0
t: 666
xxx after update is x: -112.917816162
y: 2.57767534256
theta: 3.15195870399
speed: -0.201533362269
id: 0
t: 667
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:667




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.917816162
y: 2.57767534256
theta: 3.15195870399
speed: -0.201533362269
id: 0
t: 667
xxx after update is x: -112.71043396
y: 3.40786314011
theta: 3.26818346977
speed: -0.0796523168683
id: 0
t: 668
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:668




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.71043396
y: 3.40786314011
theta: 3.26818346977
speed: -0.0796523168683
id: 0
t: 668
xxx after update is x: -112.950500488
y: 3.07110571861
theta: 3.17566752434
speed: -0.228895634413
id: 0
t: 669
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:669




going to the update function
sim.py in the sim.py update function 
targetspeed < self.spee the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-113.36471557617188, 3.39497447013855, 3.1794474124908447, 0.08271965384483337)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:663




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:664


222 self.state_dicts[msg.id][msg.t] is (-113.34738159179688, 3.6630046367645264, 3.2102906703948975, 0.25168830156326294)
222 self.state_dicts[msg.id][msg.t] is (-112.99308776855469, 3.335484743118286, 3.187690496444702, 0.13069939613342285)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:665


222 self.state_dicts[msg.id][msg.t] is (-113.09410858154297, 3.3665099143981934, 3.16103196144104, 0.27927902340888977)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:666


222 self.state_dicts[msg.id][msg.t] is (-112.91781616210938, 2.5776753425598145, 3.151958703994751, -0.20153336226940155)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:667


222 self.state_dicts[msg.id][msg.t] is (-112.71043395996094, 3.407863140106201, 3.268183469772339, -0.0796523168683052)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:668


222 self.state_dicts[msg.id][msg.t] is (-112.95050048828125, 3.071105718612671, 3.1756675243377686, -0.2288956344127655)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:669


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:670


222 self.state_dicts[msg.id][msg.t] is (-112.79547119140625, 3.087667465209961, 3.0249576568603516, -0.22789637744426727)
222 self.state_dicts[msg.id][msg.t] is (-112.59526062011719, 3.1154346466064453, 3.298257350921631, 0.07220451533794403)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:671




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:672


222 self.state_dicts[msg.id][msg.t] is (-112.97811126708984, 3.2885327339172363, 3.0970447063446045, -0.16779489815235138)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:673


222 self.state_dicts[msg.id][msg.t] is (-112.79509735107422, 3.6866230964660645, 3.153200149536133, 0.19456984102725983)
222 self.state_dicts[msg.id][msg.t] is (-113.05402374267578, 3.6001362800598145, 3.126952886581421, 0.14606758952140808)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:674




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:675


222 self.state_dicts[msg.id][msg.t] is (-113.04686737060547, 3.5383784770965576, 3.231069564819336, -0.20288081467151642)
222 self.state_dicts[msg.id][msg.t] is (-113.06378936767578, 3.2543118000030518, 3.0220704078674316, 0.05501523241400719)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:676


d:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.950500488
y: 3.07110571861
theta: 3.17566752434
speed: -0.228895634413
id: 0
t: 669
xxx after update is x: -112.795471191
y: 3.08766746521
theta: 3.02495765686
speed: -0.227896377444
id: 0
t: 670
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:670




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.795471191
y: 3.08766746521
theta: 3.02495765686
speed: -0.227896377444
id: 0
t: 670
xxx after update is x: -112.59526062
y: 3.11543464661
theta: 3.29825735092
speed: 0.0722045153379
id: 0
t: 671
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:671




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.59526062
y: 3.11543464661
theta: 3.29825735092
speed: 0.0722045153379
id: 0
t: 671
xxx after update is x: -112.978111267
y: 3.28853273392
theta: 3.09704470634
speed: -0.167794898152
id: 0
t: 672
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:672




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.978111267
y: 3.28853273392
theta: 3.09704470634
speed: -0.167794898152
id: 0
t: 672
xxx after update is x: -112.795097351
y: 3.68662309647
theta: 3.15320014954
speed: 0.194569841027
id: 0
t: 673
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:673




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.795097351
y: 3.68662309647
theta: 3.15320014954
speed: 0.194569841027
id: 0
t: 673
xxx after update is x: -113.054023743
y: 3.60013628006
theta: 3.12695288658
speed: 0.146067589521
id: 0
t: 674
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:674




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.054023743
y: 3.60013628006
theta: 3.12695288658
speed: 0.146067589521
id: 0
t: 674
xxx after update is x: -113.046867371
y: 3.5383784771
theta: 3.23106956482
speed: -0.202880814672
id: 0
t: 675
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:675




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.046867371
y: 3.5383784771
theta: 3.23106956482
speed: -0.202880814672
id: 0
t: 675
xxx after update is x: -113.063789368
y: 3.2543118
theta: 3.02207040787
speed: 0.055015232414
id: 0
t: 676
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:676




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.063789368
y: 3.2543118
theta: 3.02207040787
speed: 0.055015232414
id: 0
t: 676
xxx after update is x: -113.37600708
y: 3.21217417717
theta: 3.18107414246
speed: 0.110110461712
id: 0
t: 677
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:677




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.37600708
y: 3.21217417717
theta: 3.18107414246
speed: 0.110110461712
id: 0
t: 677
xxx after update is x: -113.49786377
y: 3.67473816872
the

going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:677


222 self.state_dicts[msg.id][msg.t] is (-113.37600708007812, 3.2121741771698, 3.1810741424560547, 0.11011046171188354)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:678


222 self.state_dicts[msg.id][msg.t] is (-113.49786376953125, 3.6747381687164307, 3.264191150665283, -0.1891903281211853)
222 self.state_dicts[msg.id][msg.t] is (-113.2997055053711, 2.688565254211426, 3.1303067207336426, 0.24704183638095856)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:679




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:680


222 self.state_dicts[msg.id][msg.t] is (-113.14100646972656, 3.0152220726013184, 3.2603023052215576, 0.04646213725209236)
222 self.state_dicts[msg.id][msg.t] is (-113.7061538696289, 3.104788064956665, 3.2777528762817383, 0.02987484261393547)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:681


222 self.state_dicts[msg.id][msg.t] is (-112.88663482666016, 2.531426191329956, 3.1842305660247803, -0.030756061896681786)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:682


ta: 3.26419115067
speed: -0.189190328121
id: 0
t: 678
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:678




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.49786377
y: 3.67473816872
theta: 3.26419115067
speed: -0.189190328121
id: 0
t: 678
xxx after update is x: -113.299705505
y: 2.68856525421
theta: 3.13030672073
speed: 0.247041836381
id: 0
t: 679
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:679




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.299705505
y: 2.68856525421
theta: 3.13030672073
speed: 0.247041836381
id: 0
t: 679
xxx after update is x: -113.14100647
y: 3.0152220726
theta: 3.26030230522
speed: 0.0464621372521
id: 0
t: 680
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:680




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.14100647
y: 3.0152220726
theta: 3.26030230522
speed: 0.0464621372521
id: 0
t: 680
xxx after update is x: -113.70615387
y: 3.10478806496
theta: 3.27775287628
speed: 0.0298748426139
id: 0
t: 681
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:681




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -113.70615387
y: 3.10478806496
theta: 3.27775287628
speed: 0.0298748426139
id: 0
t: 681
xxx after update is x: -112.886634827
y: 2.53142619133
theta: 3.18423056602
speed: -0.0307560618967
id: 0
t: 682
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:682




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:683


... logging to /home/lu/.ros/log/b5225c90-ffa1-11e8-9ca8-000c291801fc/roslaunch-ubuntu-76633.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch
[1mstarted roslaunch server http://ubuntu:36565/[0m

SUMMARY
========

PARAMETERS
 * /enable_negotiator: True
 * /file_prefix: 
 * /nr_cars: 2
 * /plot: False
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /save: False

NODES
  /
    car0 (virtual_blinker/sim.py)
    car1 (virtual_blinker/sim.py)
    cloud (virtual_blinker/cloud.py)
    rviz (rviz/rviz)
    visualization (virtual_blinker/visualization.py)

auto-starting new master
[1mprocess[master]: started with pid [76644][0m
[1mROS_MASTER_URI=http://localhost:11311[0m
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch http://localhost:11311
[1msetting /run_id to b5225c90-ffa1-11e8-9ca8-000c291801fc[0m
[1mprocess[rosout-1]: started with pid [76664][0m
started core service [/rosout]
[1mprocess[visualization-2]: started with pid [76668][0m
[1mprocess[rviz-3]: started with pid [76683][0m
[1mprocess[car0-4]: started with pid [76684][0m
[1mprocess[car1-5]: started with pid [76685][0m
[1mprocess[cloud-6]: started with pid [76686][0m
[cloud-6] killing on exit
[car1-5] killing on exit
[car0-4] killing on exit
[rviz-3] killing on exit
[visualization-2] killing on exit
[rosout-1] killing on exit
[master] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
[1mdone[0m
