sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 1
s is car_state0
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 1.45730090141
222 self.state_dicts[msg.id][msg.t] is (3.2348289489746094, -34.60383605957031, 1.519831657409668, 13.905759811401367)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:1




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:2


222 self.state_dicts[msg.id][msg.t] is (3.2147715091705322, -33.561614990234375, 1.4686132669448853, 13.771631240844727)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7f30b9b88bd8>


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:3


self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f30b9ba9fc8>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (3.2629735469818115, -33.00298309326172, 1.6161906719207764, 13.860799789428711)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9001)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:4




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:5


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: -3.14047122002
y: 31.6699638367
theta: 4.67383098602
speed: 13.780462265
id: 1
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: -3.14047122002
y: 31.6699638367
theta: 4.67383098602
speed: 13.780462265
id: 1
t: 5
xxx after update is x: -2.86308550835
y: 31.4491157532
theta: 4.92065858841
speed: 13.7051963806
id: 1
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:7


xxx before update is x: -2.86308550835
y: 31.4491157532
theta: 4.92065858841
speed: 13.7051963806
id: 1
t: 6
xxx after update is x: -3.2450773716
y: 30.2272sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 0
s is car_state1
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 1.49526190758


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
222 self.state_dicts[msg.id][msg.t] is (-3.2287468910217285, 34.05077362060547, 4.805096626281738, 13.963203430175781)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
leave the update function 
in spin function, finish the n times spin:1


self.intersection <utils.Intersection.Intersection instance at 0x7f3a8a247830>


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:2


self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f3a8a2657a0>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (-3.1557109355926514, 33.72008514404297, 4.731309413909912, 13.769133567810059)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:3


maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9000)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:4




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:5


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: 3.41413426399
y: -31.7976417542
theta: 1.63761520386
speed: 13.9431285858
id: 0
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.41413426399
y: -31.7976417542
theta: 1.63761520386
speed: 13.9431285858
id: 0
t: 5
xxx after update is x: 3.71627640724
y: -31.1286220551
theta: 1.60830581188
speed: 14.0514535904
id: 0
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:6




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:7


xxx before update is x: 3.71627640724
y: -31.1286220551
theta: 1.60830581188
speed: 14.0514535904
id: 0
t: 6
xxx after update is x: 3.2065320015
y: -30.4959506989
theta: 1.56197226048
speed: 13.8606815338
id: 0
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxx167206
theta: 4.77840471268
speed: 13.9834098816
id: 1
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: -3.2450773716
y: 30.2272167206
theta: 4.77840471268
speed: 13.9834098816
id: 1
t: 7
xxx after update is x: -2.9884967804
y: 30.1648082733
theta: 4.82592773438
speed: 13.7653608322
id: 1
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: -2.9884967804
y: 30.1648082733
theta: 4.82592773438
speed: 13.7653608322
id: 1
t: 8
xxx after update is x: -3.55118322372
y: 28.9648742676
theta: 4.65251588821
speed: 13.6715326309
id: 1
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: -3.55118322372
y: 28.9648742676
theta: 4.65251588821
speed: 13.6715326309
id: 1
t: 9
xxx after update is x: -3.06808614731
y: 29.1638240814
theta: 4.67722606659
speed: 13.637635231
id: 1
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.444444444444






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: -3.06808614731
y: 29.1638240814
theta: 4.67722606659
speed: 13.637635231
id: 1
t: 10
xxx after update is x: -3.10798311234
y: 27.7596683502
theta: 4.67464017868
speed: 13.6099061966
id: 1
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: -3.10798311234
y: 27.7596683502
theta: 4.67464017868
speed: 13.6099061966
id: 1
t: 11
xxx after update is x: -3.17228579521
y: 27.8437213898
theta: 4.83575868607
speed: 14.1136445999
id: 1
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.408180532169502, 0.3494563549923982]
222 self.state_dicts[msg.id][msg.t] is (3.405273199081421, -27.292255401611328, 1.6300345659255981, 13.90199089050293)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: -3.17228579521
y: 27.8437213898
theta: 4.83575868607
speed: 14.1136445999
id: 1
t: 12
xxx after update is x: -3.54224872589
y: 26.8223342896
theta: 4.58286857605
speed: 13.6822099686
id: 1
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: -3.54224872589
y: 26.8223342896
theta: 4.58286857605
speed: 13.6822099686
id: 1
t: 13
xxx after update is x: -3.33723902702
y: 26.5970993042
theta: 4.7669095993
speed: 13.7629766464
id: 1
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.spex
xxx before update is x: 3.2065320015
y: -30.4959506989
theta: 1.56197226048
speed: 13.8606815338
id: 0
t: 7
xxx after update is x: 3.4469139576
y: -30.4889755249
theta: 1.45112752914
speed: 14.1533260345
id: 0
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:8




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.4469139576
y: -30.4889755249
theta: 1.45112752914
speed: 14.1533260345
id: 0
t: 8
xxx after update is x: 3.37502217293
y: -29.4808273315
theta: 1.54948198795
speed: 14.0311908722
id: 0
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:9




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: 3.37502217293
y: -29.4808273315
theta: 1.54948198795
speed: 14.0311908722
id: 0
t: 9
xxx after update is x: 3.02590441704
y: -28.8257846832
theta: 1.39928305149
speed: 14.0116529465
id: 0
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.444444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: 3.02590441704
y: -28.8257846832
theta: 1.39928305149
speed: 14.0116529465
id: 0
t: 10
xxx after update is x: 2.89665055275
y: -28.5849514008
theta: 1.61403000355
speed: 13.8363666534
id: 0
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: 2.89665055275
y: -28.5849514008
theta: 1.61403000355
speed: 13.8363666534
id: 0
t: 11
xxx after update is x: 3.40527319908
y: -27.2922554016
theta: 1.63003456593
speed: 13.9019908905
id: 0
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: 3.40527319908
y: -27.2922554016
theta: 1.63003456593
speed: 13.9019908905
id: 0
t: 12
xxx after update is x: 3.40971779823
y: -26.9148082733
theta: 1.5424772501
speed: 13.6996412277
id: 0
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3603601343964749, 0.38560668349506266]
222 self.state_dicts[msg.id][msg.t] is (-3.5422487258911133, 26.82233428955078, 4.582868576049805, 13.682209968566895)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 3.40971779823
y: -26.9148082733
theta: 1.5424772501
speed: 13.6996412277
id: 0
t: 13
xxx after update is x: 3.01649570465
y: -26.3204193115
theta: 1.58972942829
speed: 13.9885540009
id: 0
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:14




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 3.01649570465
y: -26.3204193115
theta: 1.58972942829
speed: 13.9885540009
id: 0
t: 14
xxx after update is x: 3.42606163025
y: -25.5769824982
theta: 1.64821648598
speed: 13.5526628494
id: 0
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the ned:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.33723902702
y: 26.5970993042
theta: 4.7669095993
speed: 13.7629766464
id: 1
t: 14
xxx after update is x: -3.52913355827
y: 25.9804897308
theta: 4.78921985626
speed: 13.9242334366
id: 1
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:15




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: -3.52913355827
y: 25.9804897308
theta: 4.78921985626
speed: 13.9242334366
id: 1
t: 15
xxx after update is x: -3.59969830513
y: 24.9272480011
theta: 4.73974370956
speed: 13.7582950592
id: 1
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: -3.59969830513
y: 24.9272480011
theta: 4.73974370956
speed: 13.7582950592
id: 1
t: 16
xxx after update is x: -3.31101822853
y: 24.9706382751
theta: 4.56794214249
speed: 13.7475738525
id: 1
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: -3.31101822853
y: 24.9706382751
theta: 4.56794214249
speed: 13.7475738525
id: 1
t: 17
xxx after update is x: -2.65165805817
y: 23.8317527771
theta: 4.71605968475
speed: 13.6153078079
id: 1
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.8






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: -2.65165805817
y: 23.8317527771
theta: 4.71605968475
speed: 13.6153078079
id: 1
t: 18
xxx after update is x: -3.58982038498
y: 23.2786254883
theta: 4.52585172653
speed: 13.7208547592
id: 1
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: -3.58982038498
y: 23.2786254883
theta: 4.52585172653
speed: 13.7208547592
id: 1
t: 19
xxx after update is x: -3.13085103035
y: 22.2550525665
theta: 4.67945098877
speed: 13.8129482269
id: 1
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3569197474383042, 0]
222 self.state_dicts[msg.id][msg.t] is (3.4344680309295654, -23.495698928833008, 1.662886381149292, 12.204845428466797)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: -3.13085103035
y: 22.2550525665
theta: 4.67945098877
speed: 13.8129482269
id: 1
t: 20
xxx after update is x: -3.60857582092
y: 22.136341095
theta: 4.89352226257
speed: 14.1058559418
id: 1
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: -3.60857582092
y: 22.136341095
theta: 4.89352226257
speed: 14.1058559418
id: 1
t: 21
xxx a times spin:15




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: 3.42606163025
y: -25.5769824982
theta: 1.64821648598
speed: 13.5526628494
id: 0
t: 15
xxx after update is x: 3.10569548607
y: -25.4980487823
theta: 1.75382232666
speed: 12.8782091141
id: 0
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: 3.10569548607
y: -25.4980487823
theta: 1.75382232666
speed: 12.8782091141
id: 0
t: 16
xxx after update is x: 3.25398993492
y: -24.5290546417
theta: 1.68868839741
speed: 12.9383506775
id: 0
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:18


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.755555555556






self.maneuver_requested None
xxx before update is x: 3.25398993492
y: -24.5290546417
theta: 1.68868839741
speed: 12.9383506775
id: 0
t: 17
xxx after update is x: 3.3407099247
y: -23.5331268311
theta: 1.61819422245
speed: 12.5938882828
id: 0
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: 3.3407099247
y: -23.5331268311
theta: 1.61819422245
speed: 12.5938882828
id: 0
t: 18
xxx after update is x: 3.2264623642
y: -22.9082603455
theta: 1.46496701241
speed: 12.7051181793
id: 0
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 3.2264623642
y: -22.9082603455
theta: 1.46496701241
speed: 12.7051181793
id: 0
t: 19
xxx after update is x: 3.43446803093
y: -23.4956989288
theta: 1.66288638115
speed: 12.2048454285
id: 0
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:20




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: 3.43446803093
y: -23.4956989288
theta: 1.66288638115
speed: 12.2048454285
id: 0
t: 20
xxx after update is x: 3.19235348701
y: -21.7450885773
theta: 1.55195748806
speed: 12.1176309586
id: 0
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: 3.19235348701
y: -21.7450885773
theta: 1.55195748806
speed: 12.1176309586
id: 0
t: 21
xxx after update is x: 3.08860421181
y: -21.7467021942
theta: 1.60735011101
speed: 11.8629646301
id: 0
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: 3.08860421181
y: -21.7467021942
theta: 1.60735011101
speed: 11.8629646301
id: 0
t: 22
xxx after update is x: 3.07078695297
y: -21.396982193
theta: 1.49330890179
speed: 11.7981472015
id: 0
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: 3.07078695297
y: -21.396982193
theta: 1.49330890179
speed: 11.7981472015
id: 0
t: 23
xxx after update is x: 2.95398283005
y: -20.2365894318
theta: 1.55846178532
speed: 11.7030696869
id: 0
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 2.95398283005
y: -20.2365894318
theta: 1.55846178532
speed: 11.7030696869
id: 0
t: 24
xxx after update is x: 3.71455669403
y: -20.2383804321
theta: 1.57349979877
speed: 11.3498039246
id: 0
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:25


risk is [0.3992581565480474, 0.3486624617210234]
222 self.state_dicts[msg.id][msg.t] is (-3.1100096702575684, 18.794851303100586, 4.744683742523193, 14.074864387512207)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.11111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:
initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$


maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 1
current clock is 1.11111111111
!!!!after check statue the self.tag is [1.1111111111111112, 0, 'left']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 1.11111111111

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [1.1111111111111112, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,1.11111111111,(3.7145566940307617, -20.238380432128906, 1.5734997987747192),11,1,1.11111111111,0,left
!!!!change state to get
GET,0,1.11111111111,(3.7145566940307617, -20.238380432128906, 1.5734997987747192),11,1,1.11111111111,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 1.11111111111
self.communication_details == 0
sending GET,0,1.11111111111,(3.7145566940307617, -20.238380432128906, 1.5734997987747192),11,1,1.11111111111,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
 self.man_init:
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: 3.71455669403
y: -20.2383804321
theta: 1.57349979877
speed: 11.3498039246
id: 0
t: 25
xxx after update is x: 3.15518665314
y: -19.6971340179
theta: 1.65978515148
speed: 11.3046455383
id: 0
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 1.15555555556




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 1.15555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '1.15555555556', 'Position': ['(-2.651658058166504', ' 23.83175277709961', ' 4.716059684753418)'], 'Type': 'DENY'}
car 0 received DENY,1,1.15555555556,(-2.651658058166504, 23.83175277709961, 4.716059684753418),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [1.1111111111111112, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [1fter update is x: -3.65687847137
y: 21.1284770966
theta: 4.7134308815
speed: 13.8563642502
id: 1
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: -3.65687847137
y: 21.1284770966
theta: 4.7134308815
speed: 13.8563642502
id: 1
t: 22
xxx after update is x: -3.53504371643
y: 20.7234268188
theta: 4.46044206619
speed: 13.7516613007
id: 1
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: -3.53504371643
y: 20.7234268188
theta: 4.46044206619
speed: 13.7516613007
id: 1
t: 23
xxx after update is x: -3.01362514496
y: 20.8039417267
theta: 4.7052526474
speed: 13.8785600662
id: 1
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.01362514496
y: 20.8039417267
theta: 4.7052526474
speed: 13.8785600662
id: 1
t: 24
xxx after update is x: -3.11000967026
y: 18.7948513031
theta: 4.74468374252
speed: 14.0748643875
id: 1
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:25




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.11000967026
y: 18.7948513031
theta: 4.74468374252
speed: 14.0748643875
id: 1
t: 25
xxx after update is x: -4.21650934219
y: 18.7164154053
theta: 4.79860115051
speed: 13.7434778214
id: 1
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:26


Received -->>: 
current clock is 1.15555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 1.15555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '1.11111111111', 'Sender': '0', 'Time': '1.11111111111', 'IntendedCourse': 'left', 'Position': ['3.7145566940307617', ' -20.238380432128906', ' 1.5734997987747192'], 'TagID': '0', 'Type': 'GET', 'Velocity': '11'}
car 1 received GET,0,1.11111111111,(3.7145566940307617, -20.238380432128906, 1.5734997987747192),11,1,1.11111111111,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.0493827160493
sender travel direction is:  north
sender earliest entering time is:  1.75111583783
sender last entering time is:  2.15299280154
sender last leaving time is:  4.33475609538
my entering time is:  0.860520180785
my leaving time is:  2.75165764552
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 1.15555555556
self.communication_details == 0
sending DENY,1,1.15555555556,(-2.651658058166504, 23.83175277709961, 4.716059684753418),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.15555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
ta.1111111111111112, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




finish try maneuver


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: 3.15518665314
y: -19.6971340179
theta: 1.65978515148
speed: 11.3046455383
id: 0
t: 26
xxx after update is x: 2.90224671364
y: -19.1157531738
theta: 1.65103399754
speed: 10.8452634811
id: 0
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: 2.90224671364
y: -19.1157531738
theta: 1.65103399754
speed: 10.8452634811
id: 0
t: 27
xxx after update is x: 3.6294901371
y: -19.1040096283
theta: 1.45578837395
speed: 10.6408939362
id: 0
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: 3.6294901371
y: -19.1040096283
theta: 1.45578837395
speed: 10.6408939362
id: 0
t: 28
xxx after update is x: 3.77950882912
y: -18.0768451691
theta: 1.59049892426
speed: 10.3846054077
id: 0
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.77950882912
y: -18.0768451691
theta: 1.59049892426
speed: 10.3846054077
id: 0
t: 29
xxx after update is x: 3.48995113373
y: -17.8526382446
theta: 1.44552063942
speed: 10.3684215546
id: 0
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:30




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.48995113373
y: -17.8526382446
theta: 1.44552063942
speed: 10.3684215546
id: 0
t: 30
xxx after update is x: 3.14675545692
y: -17.33335495
theta: 1.56205260754
speed: 9.55386734009
id: 0
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:31




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: 3.14675545692
y: -17.33335495
theta: 1.56205260754
speed: 9.55386734009
id: 0
t: 31
xxx after update is x: 2.88754367828
y: -16.8410930634
theta: 1.49098944664
speed: 9.63617992401
id: 0
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: 2.88754367828
y: -16.8410930634
theta: 1.49098944664
speed: 9.63617992401
id: 0
t: 32
xxx after update is x: 2.59886837006
y: -16.5900688171
theta: 1.49716067314
speed: 9.20949459076
id: 0
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.46666666667






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [1.4222222222222223, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 1.46666666667
(RATE*SLOWDOWN) is 22.5
MR[0] is 1.42222222222
rgetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: -4.21650934219
y: 18.7164154053
theta: 4.79860115051
speed: 13.7434778214
id: 1
t: 26
xxx after update is x: -3.08552074432
y: 18.258852005
theta: 4.73147010803
speed: 13.9387454987
id: 1
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.5002327989640136, 0]
222 self.state_dicts[msg.id][msg.t] is (2.9022467136383057, -19.115753173828125, 1.6510339975357056, 10.845263481140137)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: -3.08552074432
y: 18.258852005
theta: 4.73147010803
speed: 13.9387454987
id: 1
t: 27
xxx after update is x: -3.23214530945
y: 17.4903755188
theta: 4.73922538757
speed: 13.8497743607
id: 1
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: -3.23214530945
y: 17.4903755188
theta: 4.73922538757
speed: 13.8497743607
id: 1
t: 28
xxx after update is x: -3.2016851902
y: 16.9560527802
theta: 4.64462280273
speed: 13.9221115112
id: 1
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: -3.2016851902
y: 16.9560527802
theta: 4.64462280273
speed: 13.9221115112
id: 1
t: 29
xxx after update is x: -2.89995884895
y: 16.4076728821
theta: 4.85903263092
speed: 13.6141424179
id: 1
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.29405040503838115, 0]
222 self.state_dicts[msg.id][msg.t] is (3.4899511337280273, -17.852638244628906, 1.4455206394195557, 10.36842155456543)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: -2.89995884895
y: 16.4076728821
theta: 4.85903263092
speed: 13.6141424179
id: 1
t: 30
xxx after update is x: -3.77354955673
y: 16.0204143524
theta: 4.8444275856
speed: 14.0792236328
id: 1
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.77354955673
y: 16.0204143524
theta: 4.8444275856
speed: 14.0792236328
id: 1
t: 31
xxx after update is x: -2.96964907646
y: 15.1077337265
theta: 4.70377922058
speed: 13.9181976318
id: 1
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:32




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: -2.96964907646
y: 15.1077337265
theta: 4.70377922058
speed: 13.9181976318
id: 1
t: 32
xxx after update is x: -3.22462534904
y: 14.4014778137
theta: 4.69846057892
speed: 13.8668298721
id: 1
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 1.46666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 1.46666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '9', 'Sender': '0', 'TagID': '1', 'Time': '1.46666666667', 'Position': ['(2.5988683700561523', ' -16.590068817138672', ' 1.4971606731414795)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,1.46666666667,(2.5988683700561523, -16.590068817138672, 1.4971606731414795),9,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: -3.22462534904
y: 14.4014778137
theta: 4.69846057892
speed: 13.8668298721
id: 1
t: 33
xxx after update is x: -3.27179646492
y: 14.0269479752
theta: 4.67869853973
speed: 14.0192060471
id: 1
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.51111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: -3.27179646492
y: 14.0269479752
theta: 4.67869853973
speed: 14.0192060471
id: 1
t: 34
xxx after update is x: -3.8927295208
y: 13.4717388153
theta: 4.75002145767
speed: 13.8307409286
id: 1
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.5971108446982658, 0]
222 self.state_dicts[msg.id][msg.t] is (2.896904230117798, -15.385445594787598, 1.4000650644302368, 9.119443893432617)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: -3.8927295208
y: 13.4717388153
theta: 4.75002145767
speed: 13.8307409286
id: 1
t: 35
xxx after update is x: -3.12562727928
y: 13.0392694473
theta: 4.67296886444
speed: 13.7977342606
id: 1
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: -3.12562727928
y: 13.0392694473
theta: 4.67296886444
speed: 13.7977342606
id: 1
t: 36
xxx after update is x: -2.98093128204
y: 12.2359580994
theta: 4.82243108749
speed: 14.0246706009
id: 1
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: -2.98093128204
y: 12.2359580994
theta: 4.82243108749
speed: 14.0246706009
id: 1
t: 37
xxx after update is x: -3.58445072174
y: 11.4724359512
theta: 4.69711351395
speed: 13.6522779465
id: 1
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: -3.58445072174
y: 11.4724359512
theta: 4.69711351395
speed: 13.6522779465
id: 1
t: 38
xxx after update is x: -3.32681560516
y: 10.822019577
theta: 4.82796955109
speed: 13.5752725601
id: 1
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,1.46666666667,(2.5988683700561523, -16.590068817138672, 1.4971606731414795),9,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 1.46666666667
self.communication_details == 0
sending RELEASE,0,1.46666666667,(2.5988683700561523, -16.590068817138672, 1.4971606731414795),9,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: 2.59886837006
y: -16.5900688171
theta: 1.49716067314
speed: 9.20949459076
id: 0
t: 33
xxx after update is x: 2.45608091354
y: -15.380106926
theta: 1.58028948307
speed: 8.97665119171
id: 0
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.45608091354
y: -15.380106926
theta: 1.58028948307
speed: 8.97665119171
id: 0
t: 34
xxx after update is x: 2.89690423012
y: -15.3854455948
theta: 1.40006506443
speed: 9.11944389343
id: 0
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:35


aaaaaa
risk is [0.5773437690783015, 0.193170944354935]
222 self.state_dicts[msg.id][msg.t] is (-3.8927295207977295, 13.471738815307617, 4.750021457672119, 13.830740928649902)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.89690423012
y: -15.3854455948
theta: 1.40006506443
speed: 9.11944389343
id: 0
t: 35
xxx after update is x: 3.32100701332
y: -15.397277832
theta: 1.55195391178
speed: 8.67301559448
id: 0
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:36




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: 3.32100701332
y: -15.397277832
theta: 1.55195391178
speed: 8.67301559448
id: 0
t: 36
xxx after update is x: 3.19336414337
y: -14.7721633911
theta: 1.43472695351
speed: 8.46485900879
id: 0
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: 3.19336414337
y: -14.7721633911
theta: 1.43472695351
speed: 8.46485900879
id: 0
t: 37
xxx after update is x: 3.08775353432
y: -14.5938720703
theta: 1.61861550808
speed: 8.23409461975
id: 0
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: 3.08775353432
y: -14.5938720703
theta: 1.61861550808
speed: 8.23409461975
id: 0
t: 38
xxx after update is x: 2.95814728737
y: -14.1655778885
theta: 1.61511135101
speed: 8.51406478882
id: 0
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: 2.95814728737
y: -14.1655778885
theta: 1.61511135101
speed: 8.51406478882
id: 0
t: 39
xxx after update is x: 3.29638528824
y: -13.8444309235
theta: 1.58132076263
speed: 7.56053304672
id: 0
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: 3.29638528824
y: -13.8444309235
theta: 1.58132076263
speed: 7.56053304672
id: 0
t: 40
xxx after update is x: 4.00276422501
y: -13.1651859283
theta: 1.46952545643
speed: 6.99860286713
id: 0
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 1.82222222222

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [1.8222222222222222, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,1.82222222222,(4.0027642250061035, -13.165185928344727, 1.4695254564285278),6,1,1.11111111111,0,left
!!!!change state to get
GET,0,1.82222222222,(4.0027642250061035, -13.165185928344727, 1.4695254564285278),6,1,1.11111111111,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 1.82222222222
self.communication_details == 0
sending GET,0,1.82222222222,(4.0027642250061035, -13.165185928344727, 1.4695254564285278),6,1,1.11111111111,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.82222222222






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0
Received -->>: 
current clock is 1.82222222222




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 1.82222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '14', 'Sender': '1', 'TagID': '1', 'Time': '1.82222222222', 'Position': ['(-3.271796464920044', ' 14.026947975158691', ' 4.678698539733887)'], 'Type': 'DENY'}
car 0 received DENY,1,1.82222222222,(-3.271796464920044, 14.026947975158691, 4.678698539733887),14,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 4.00276422501
y: -13.1651859283
theta: 1.46952545643
speed: 6.99860286713
id: 0
t: 41
xxx after update is x: 3.40777468681
y: -12.4391326904
theta: 1.33254814148
speed: 7.74417924881
id: 0
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
membership is [1.8222222222222222, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [1.8222222222222222, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




leave the update function 
in spin function, finish the n times spin:42


maneuver_negotiatir.py in the try maneuver function update -. sfinish
finish try maneuver


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: 3.40777468681
y: -12.41):
xxx before update is x: -3.32681560516
y: 10.822019577
theta: 4.82796955109
speed: 13.5752725601
id: 1
t: 39
xxx after update is x: -3.61896324158
y: 10.487112999
theta: 4.722884655
speed: 13.5325975418
id: 1
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:40




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: -3.61896324158
y: 10.487112999
theta: 4.722884655
speed: 13.5325975418
id: 1
t: 40
xxx after update is x: -3.17666006088
y: 9.76383590698
theta: 4.69031047821
speed: 14.0798025131
id: 1
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 1.82222222222




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 1.82222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '1.11111111111', 'Sender': '0', 'Time': '1.82222222222', 'IntendedCourse': 'left', 'Position': ['4.0027642250061035', ' -13.165185928344727', ' 1.4695254564285278'], 'TagID': '0', 'Type': 'GET', 'Velocity': '6'}
car 1 received GET,0,1.82222222222,(4.0027642250061035, -13.165185928344727, 1.4695254564285278),6,1,1.11111111111,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.0809876543209
sender travel direction is:  north
sender earliest entering time is:  1.04623944578
sender last entering time is:  2.08098765432
sender last leaving time is:  4.45428591074
my entering time is:  0.243983839624
my leaving time is:  1.48698002493
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 1.82222222222
self.communication_details == 0
sending DENY,1,1.82222222222,(-3.271796464920044, 14.026947975158691, 4.678698539733887),14,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: -3.17666006088
y: 9.76383590698
theta: 4.69031047821
speed: 14.0798025131
id: 1
t: 41
xxx after update is x: -2.97703671455
y: 9.04232597351
theta: 4.7885518074
speed: 14.2634677887
id: 1
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.86666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.97703671455
y: 9.04232597351
theta: 4.7885518074
speed: 14.2634677887
id: 1
t: 42
xxx after update is x: -3.50423836708
y: 8.27684116364
theta: 4.72619390488
speed: 13.7436752319
id: 1
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:43




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.50423836708
y: 8.27684116364
theta: 4.72619390488
speed: 13.7436752319
id: 1
t: 43
xxx after update is x: -3.16492819786
y: 7.78619384766
theta: 4.61533546448
speed: 13.6695270538
id: 1
t: 44
maneuver_negotiatir.py finis391326904
theta: 1.33254814148
speed: 7.74417924881
id: 0
t: 42
xxx after update is x: 3.19957304001
y: -13.3320674896
theta: 1.42178285122
speed: 7.1793847084
id: 0
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: 3.19957304001
y: -13.3320674896
theta: 1.42178285122
speed: 7.1793847084
id: 0
t: 43
xxx after update is x: 3.08188486099
y: -12.3254747391
theta: 1.48510015011
speed: 6.83853578568
id: 0
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.5518452801860045, 2.7292264037734773e-06]
222 self.state_dicts[msg.id][msg.t] is (-3.1649281978607178, 7.78619384765625, 4.615335464477539, 13.669527053833008)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: 3.08188486099
y: -12.3254747391
theta: 1.48510015011
speed: 6.83853578568
id: 0
t: 44
xxx after update is x: 2.83208870888
y: -11.8326215744
theta: 1.66270685196
speed: 6.75519895554
id: 0
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: 2.83208870888
y: -11.8326215744
theta: 1.66270685196
speed: 6.75519895554
id: 0
t: 45
xxx after update is x: 3.72974061966
y: -11.7662134171
theta: 1.57160830498
speed: 6.73239278793
id: 0
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.72974061966
y: -11.7662134171
theta: 1.57160830498
speed: 6.73239278793
id: 0
t: 46
xxx after update is x: 2.86359572411
y: -11.7192401886
theta: 1.52642035484
speed: 6.15921258926
id: 0
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:47




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.86359572411
y: -11.7192401886
theta: 1.52642035484
speed: 6.15921258926
id: 0
t: 47
xxx after update is x: 2.94165229797
y: -11.4572696686
theta: 1.53304338455
speed: 6.16060686111
id: 0
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:48




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.94165229797
y: -11.4572696686
theta: 1.53304338455
speed: 6.16060686111
id: 0
t: 48
xxx after update is x: 3.32707285881
y: -11.3000869751
theta: 1.58640873432
speed: 5.76105451584
id: 0
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:49




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: 3.32707285881
y: -11.3000869751
theta: 1.58640873432
speed: 5.76105451584
id: 0
t: 49
xxx after update is x: 3.50696849823
y: -10.7427654266
theta: 1.81674039364
speed: 5.55699682236
id: 0
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.22222222222






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is h the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:44


aaaaaa
aaaaaabbbbb
risk is [0.43702932232446406, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0818848609924316, -12.325474739074707, 1.4851001501083374, 6.838535785675049)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: -3.16492819786
y: 7.78619384766
theta: 4.61533546448
speed: 13.6695270538
id: 1
t: 44
xxx after update is x: -3.38861346245
y: 6.66209173203
theta: 4.5747423172
speed: 13.7490625381
id: 1
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: -3.38861346245
y: 6.66209173203
theta: 4.5747423172
speed: 13.7490625381
id: 1
t: 45
xxx after update is x: -2.99708175659
y: 6.52020978928
theta: 4.77258253098
speed: 14.1563901901
id: 1
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.99708175659
y: 6.52020978928
theta: 4.77258253098
speed: 14.1563901901
id: 1
t: 46
xxx after update is x: -2.99599838257
y: 5.84088516235
theta: 4.54537820816
speed: 14.0681467056
id: 1
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:47




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: -2.99599838257
y: 5.84088516235
theta: 4.54537820816
speed: 14.0681467056
id: 1
t: 47
xxx after update is x: -3.19424271584
y: 5.19339799881
theta: 4.72266864777
speed: 13.7946634293
id: 1
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.6305806785883123, 0]
222 self.state_dicts[msg.id][msg.t] is (2.941652297973633, -11.457269668579102, 1.533043384552002, 6.160606861114502)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.19424271584
y: 5.19339799881
theta: 4.72266864777
speed: 13.7946634293
id: 1
t: 48
xxx after update is x: -2.83127737045
y: 4.391664505
theta: 4.84592628479
speed: 13.5687894821
id: 1
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:49


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.17777777778






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: -2.83127737045
y: 4.391664505
theta: 4.84592628479
speed: 13.5687894821
id: 1
t: 49
xxx after update is x: -3.13541126251
y: 3.68939328194
theta: 4.81153821945
speed: 14.1001958847
id: 1
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 2.22222222222




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 2.22222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '5', 'Sender': '0', 'TagID': '1', 'Time': '2.22222222222', 'Position': ['(3.5069684982299805', ' -10.742765426635742', ' 1.8167403936386108)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,2.22222222222,(3.5069684982299805, -10.742765426635742, 1.8167403936386108),5,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: -3.13541126251
y: 3.68939328194
theta: 4.81153821945
speed: 14.1001958847
id: 1
t: 50
xxx after update is x: -3.048381567
y: 3.89453029633
theta: 4.60065555573
speed: 13.6877422333
id: 1
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: -3.048381567
y: 3.89453029633
theta: 4.60065555573
speed: 13.6877422333
id: 1
t: 51
xxx after update is x: -3.2855451107
y: 2.21999931335
theta: 4.64918613434
speed: 13.9743671417
id: 1
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:53


xxx before update is x: -3.2855451107
y: 2.21999931335
theta: 4.64918613434
speed: 13.9743671417
id: 1
t: 52
xxx after update is x: -3.20669555664
y: 2.28192973137
theta: 4.81763219833
speed: 13.9531517029
id: 1
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: -3.20669555664
y: 2.28192973137
theta: 4.81763219833
speed: 13.9531517029
id: 1
t: 53
xxx after update is x: -3.65981698036
y: 1.93026340008
theta: 4.67468070984
speed: 14.1101913452
id: 1
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: -3.65981698036
y: 1.93026340008
theta: 4.67468070984
speed: 14.1101913452
id: 1
t: 54
xxx after update is x: -2.94070029259
y: 0.505978882313
theta: 4.59814119339
speed: 13.6187009811
id: 1
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.5113190825235442, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3376293182373047, -9.095258712768555, 1.4402073621749878, 4.66151237487793)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: -2.94070029259
y: 0.505978882313
theta: 4.59814119339
speed: 13.6187009811
id: 1
t: 55
xxx after update is x: -3.84021878242
y: 0.551755011082
theta: 4.45566749573
speed: 13.8375110626
id: 1
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: -3.84021878242
y: 0.551755011082
theta: 4.45566749573
speed: 13.8375110626
id: 1
t: 56
xxx after update is x: -2.81276917458
y: 0.0133795496076
theta: 4.7316699028
speed: 13.6366930008
id: 1
t: 57
mempty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [2.1777777777777776, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 2.22222222222
(RATE*SLOWDOWN) is 22.5
MR[0] is 2.17777777778
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,2.22222222222,(3.5069684982299805, -10.742765426635742, 1.8167403936386108),5,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 2.22222222222
self.communication_details == 0
sending RELEASE,0,2.22222222222,(3.5069684982299805, -10.742765426635742, 1.8167403936386108),5,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: 3.50696849823
y: -10.7427654266
theta: 1.81674039364
speed: 5.55699682236
id: 0
t: 50
xxx after update is x: 3.06710529327
y: -9.92459201813
theta: 1.50977420807
speed: 5.14634799957
id: 0
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: 3.06710529327
y: -9.92459201813
theta: 1.50977420807
speed: 5.14634799957
id: 0
t: 51
xxx after update is x: 3.83148097992
y: -9.94792079926
theta: 1.45354795456
speed: 5.28146600723
id: 0
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.5965916975380725, 0.001068588615756328]
222 self.state_dicts[msg.id][msg.t] is (-3.2855451107025146, 2.219999313354492, 4.649186134338379, 13.974367141723633)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:53


xxx before update is x: 3.83148097992
y: -9.94792079926
theta: 1.45354795456
speed: 5.28146600723
id: 0
t: 52
xxx after update is x: 3.59486436844
y: -9.78005123138
theta: 1.61994731426
speed: 4.68934202194
id: 0
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: 3.59486436844
y: -9.78005123138
theta: 1.61994731426
speed: 4.68934202194
id: 0
t: 53
xxx after update is x: 3.16470384598
y: -9.84300041199
theta: 1.43372499943
speed: 4.84989023209
id: 0
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: 3.16470384598
y: -9.84300041199
theta: 1.43372499943
speed: 4.84989023209
id: 0
t: 54
xxx after update is x: 3.33762931824
y: -9.09525871277
theta: 1.44020736217
speed: 4.66151237488
id: 0
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: 3.33762931824
y: -9.09525871277
theta: 1.44020736217
speed: 4.66151237488
id: 0
t: 55
xxx after update is x: 3.10369300842
y: -9.2013425827
theta: 1.55365550518
speed: 4.53977298737
id: 0
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: 3.10369300842
y: -9.2013425827
theta: 1.55365550518
speed: 4.53977298737
id: 0
t: 56
xxx after update is x: 3.71073293686
y: -9.48297023773
theta: 1.39819347858
speed: 4.2634768486
id: 0
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: 3.71073293686
y: -9.48297023773
theta: 1.39819347858
speed: 4.2634768486
id: 0
t: 57
xxx after update is x: 2.83106040955
y: -8.80198764801
theta: 1.45994997025
speed: 3.64236617088
id: 0
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 2.57777777778

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [2.577777777777778, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,2.57777777778,(2.8310604095458984, -8.801987648010254, 1.4599499702453613),3,1,1.11111111111,0,left
!!!!change state to get
GET,0,2.57777777778,(2.8310604095458984, -8.801987648010254, 1.4599499702453613),3,1,1.11111111111,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 2.57777777778
self.communication_details == 0
sending GET,0,2.57777777778,(2.8310604095458984, -8.801987648010254, 1.4599499702453613),3,1,1.11111111111,0,left to car 1 from car 0
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.57777777778
maneuver_negotiatir.py finish the update_agent_message





self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0

finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 2.57777777778




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 2.57777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GRANT, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '2.57777777778', 'Position': ['(-2.8127691745758057', ' 0.013379549607634544', ' 4.731669902801514)'], 'Type': 'GRANT'}
car 0 received GRANT,1,2.57777777778,(-2.8127691745758057, 0.013379549607634544, 4.731669902801514),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [2.577777777777778, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [2.577777777777778, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: 2.83106040955
y: -8.80198764801
theta: 1.45994997025
speed: 3.64236617088
id: 0
t: 58
xxx after update is x: 2.92046117783
y: -9.00829219818
theta: 1.75453329aneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.53333333333






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: -2.81276917458
y: 0.0133795496076
theta: 4.7316699028
speed: 13.6366930008
id: 1
t: 57
xxx after update is x: -3.78681850433
y: -0.881460130215
theta: 4.818754673
speed: 13.9898033142
id: 1
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 2.57777777778




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 2.57777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '1.11111111111', 'Sender': '0', 'Time': '2.57777777778', 'IntendedCourse': 'left', 'Position': ['2.8310604095458984', ' -8.801987648010254', ' 1.4599499702453613'], 'TagID': '0', 'Type': 'GET', 'Velocity': '3'}
car 1 received GET,0,2.57777777778,(2.8310604095458984, -8.801987648010254, 1.4599499702453613),3,1,1.11111111111,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.114567901235
sender travel direction is:  north
sender earliest entering time is:  0.441608337169
sender last entering time is:  2.11456790123
sender last leaving time is:  4.48786615766
my entering time is:  0.114567901235
my leaving time is:  0.594658327415
i have left the intersection:  False
sender enters just im about to leave
time is  -0.153049990246
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, not conlicted










maneuver_negotiatir.py message_processing,!!dd342 change status to GRANT












self.grantID is 0
GRANT,1,2.57777777778,(-2.8127691745758057, 0.013379549607634544, 4.731669902801514),13,1,0,0
added car with id 0 to grantlist. current grantlist:  {0: [7.133333333333333, 'left']}
maneuver_negotiatir.py start the update_agent_message
current clock is 2.57777777778
self.communication_details == 0
sending GRANT,1,2.57777777778,(-2.8127691745758057, 0.013379549607634544, 4.731669902801514),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
current clock is 2.57777777778




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: -3.78681850433
y: -0.881460130215
theta: 4.818754673
speed: 13.9898033142
id: 1
t: 58
xxx after update is x: -3.30372238159
y: -1.4345511198
theta: 4.79660892487
speed: 13.8811178207
id: 1
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: -3.30372238159
y: -1.4345511198
theta: 4.79660892487
speed: 13.8811178207
id: 1
t: 59
xxx after update is x: -3.3432123661
y: -2.12567305565
theta: 4.72117567062
speed: 13.9129934311
id: 1
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: -3.3432123661
y: -2.12567305565
theta: 4.72117567062
speed: 13.9129934311
i086
speed: 3.14919734001
id: 0
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.6681583657185123, 0.015455408801152115]
222 self.state_dicts[msg.id][msg.t] is (-3.303722381591797, -1.4345511198043823, 4.796608924865723, 13.881117820739746)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: 2.92046117783
y: -9.00829219818
theta: 1.75453329086
speed: 3.14919734001
id: 0
t: 59
xxx after update is x: 3.59486865997
y: -8.86452102661
theta: 1.7192003727
speed: 3.71482658386
id: 0
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: 3.59486865997
y: -8.86452102661
theta: 1.7192003727
speed: 3.71482658386
id: 0
t: 60
xxx after update is x: 3.40537428856
y: -8.74390792847
theta: 1.48281002045
speed: 2.83859848976
id: 0
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: 3.40537428856
y: -8.74390792847
theta: 1.48281002045
speed: 2.83859848976
id: 0
t: 61
xxx after update is x: 3.48996901512
y: -8.57546615601
theta: 1.56927466393
speed: 2.79115533829
id: 0
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: 3.48996901512
y: -8.57546615601
theta: 1.56927466393
speed: 2.79115533829
id: 0
t: 62
xxx after update is x: 2.84213209152
y: -8.15966701508
theta: 1.56567406654
speed: 2.60691261292
id: 0
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.5434178378785355, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2995760440826416, -3.6863863468170166, 4.6981120109558105, 14.108331680297852)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: 2.84213209152
y: -8.15966701508
theta: 1.56567406654
speed: 2.60691261292
id: 0
t: 63
xxx after update is x: 3.21230483055
y: -8.2494764328
theta: 1.58441722393
speed: 2.21338105202
id: 0
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: 3.21230483055
y: -8.2494764328
theta: 1.58441722393
speed: 2.21338105202
id: 0
t: 64
xxx after update is x: 3.23745346069
y: -7.99765110016
theta: 1.48691546917
speed: 2.28327941895
id: 0
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: 3.23745346069
y: -7.99765110016
theta: 1.48691546917
speed: 2.28327941895
id: 0
t: 65
xxx after update is x: 3.26505422592
y: -8.0217218399
theta: 1.52653884888
speed: 1.91014921665
id: 0
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strd: 1
t: 60
xxx after update is x: -3.21116614342
y: -2.32190895081
theta: 4.68905687332
speed: 13.7970609665
id: 1
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.5217302565667937, 0.9960611748521243]
222 self.state_dicts[msg.id][msg.t] is (3.40537428855896, -8.743907928466797, 1.4828100204467773, 2.8385984897613525)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: -3.21116614342
y: -2.32190895081
theta: 4.68905687332
speed: 13.7970609665
id: 1
t: 61
xxx after update is x: -2.81928443909
y: -3.56285071373
theta: 4.62548589706
speed: 13.875916481
id: 1
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: -2.81928443909
y: -3.56285071373
theta: 4.62548589706
speed: 13.875916481
id: 1
t: 62
xxx after update is x: -3.29957604408
y: -3.68638634682
theta: 4.69811201096
speed: 14.1083316803
id: 1
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: -3.29957604408
y: -3.68638634682
theta: 4.69811201096
speed: 14.1083316803
id: 1
t: 63
xxx after update is x: -3.69447684288
y: -4.57385206223
theta: 4.76843690872
speed: 13.7963418961
id: 1
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: -3.69447684288
y: -4.57385206223
theta: 4.76843690872
speed: 13.7963418961
id: 1
t: 64
xxx after update is x: -3.25483417511
y: -5.14729547501
theta: 4.66439247131
speed: 14.0272159576
id: 1
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.998474905497614, 0.9998246464496459]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.2374534606933594, -7.997651100158691, 1.4869154691696167, 2.2832794189453125)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.88888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: -3.25483417511
y: -5.14729547501
theta: 4.66439247131
speed: 14.0272159576
id: 1
t: 65
xxx after update is x: -3.19628477097
y: -5.61940860748
theta: 4.86248493195
speed: 13.378786087
id: 1
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: -3.19628477097
y: -5.61940860748
theta: 4.86248493195
speed: 13.378786087
id: 1
t: 66
xxx after update is x: -4.10705327988
y: -6.54718160629
theta: 4.69316387177
speed: 13.6872520447
id: 1
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spinat
current clock is 2.93333333333






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [2.888888888888889, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 2.93333333333
(RATE*SLOWDOWN) is 22.5
MR[0] is 2.88888888889
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
deny not in message
maneuver_negotiatir.py in the domaneuver function - start
added car with id 0 to grantlist. current grantlist:  {0: [7.622222222222222, 'left']}
Doing maneuver
maneuver_negotiatir.py finish the do maneuver function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: 3.26505422592
y: -8.0217218399
theta: 1.52653884888
speed: 1.91014921665
id: 0
t: 66
xxx after update is x: 3.47754883766
y: -7.8791217804
theta: 1.31484615803
speed: 1.79508507252
id: 0
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: 3.47754883766
y: -7.8791217804
theta: 1.31484615803
speed: 1.79508507252
id: 0
t: 67
xxx after update is x: 3.57116866112
y: -8.09350585938
theta: 1.56710803509
speed: 2.32282114029
id: 0
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.5212620392920616, 0.6155011945415865]
222 self.state_dicts[msg.id][msg.t] is (-3.1785736083984375, -6.533970832824707, 4.558260440826416, 13.70554256439209)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: 3.57116866112
y: -8.09350585938
theta: 1.56710803509
speed: 2.32282114029
id: 0
t: 68
xxx after update is x: 2.86863017082
y: -7.10691308975
theta: 1.38210117817
speed: 2.14664673805
id: 0
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: 2.86863017082
y: -7.10691308975
theta: 1.38210117817
speed: 2.14664673805
id: 0
t: 69
xxx after update is x: 3.28142738342
y: -7.55209636688
theta: 1.42238092422
speed: 2.28046298027
id: 0
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: 3.28142738342
y: -7.55209636688
theta: 1.42238092422
speed: 2.28046298027
id: 0
t: 70
xxx after update is x: 3.08804655075
y: -7.87187576294
theta: 1.66947865486
speed: 2.96308302879
id: 0
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: 3.08804655075
y: -7.87187576294
theta: 1.66947865486
speed: 2.96308302879
id: 0
t: 71
xxx after update is x: 3.24336862564
y: -7.64755964279
theta: 1.42030668259
speed: 3.14340496063
id: 0
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in  function, finish the n times spin:68

xxx before update is x: -4.10705327988
y: -6.54718160629
theta: 4.69316387177
speed: 13.6872520447
id: 1
t: 67
xxx after update is x: -3.1785736084
y: -6.53397083282
theta: 4.55826044083
speed: 13.7055425644
id: 1
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: -3.1785736084
y: -6.53397083282
theta: 4.55826044083
speed: 13.7055425644
id: 1
t: 68
xxx after update is x: -3.14351391792
y: -6.84970998764
theta: 4.72250461578
speed: 13.582452774
id: 1
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.8813783833536554, 0.5199999999999985]
Stops!
222 self.state_dicts[msg.id][msg.t] is (2.8686301708221436, -7.106913089752197, 1.3821011781692505, 2.146646738052368)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: -3.14351391792
y: -6.84970998764
theta: 4.72250461578
speed: 13.582452774
id: 1
t: 69
xxx after update is x: -2.73175764084
y: -8.21528816223
theta: 4.47676467896
speed: 13.4301614761
id: 1
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.73175764084
y: -8.21528816223
theta: 4.47676467896
speed: 13.4301614761
id: 1
t: 70
xxx after update is x: -3.06949520111
y: -8.35072994232
theta: 4.69096422195
speed: 14.0798654556
id: 1
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:71




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.06949520111
y: -8.35072994232
theta: 4.69096422195
speed: 14.0798654556
id: 1
t: 71
xxx after update is x: -3.4592654705
y: -9.23527336121
theta: 4.60005092621
speed: 13.9430522919
id: 1
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:72




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.4592654705
y: -9.23527336121
theta: 4.60005092621
speed: 13.9430522919
id: 1
t: 72
xxx after update is x: -3.70108318329
y: -10.3595523834
theta: 4.76170969009
speed: 13.8069343567
id: 1
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.24444444444






self.maneuver_requested None
leave the update function 
in spin function, finish the n times spin:73


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: -3.70108318329
y: -10.3595523834
theta: 4.76170969009
speed: 13.8069343567
id: 1
t: 73
xxx after update is x: -3.37549424171
y: -10.9083185196
theta: 4.68534708023
speed: 13.7875699997
id: 1
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: -3.37549424171
y: -10.9083185196
theta: 4.68534708023
speed: 13.7875the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.24336862564
y: -7.64755964279
theta: 1.42030668259
speed: 3.14340496063
id: 0
t: 72
xxx after update is x: 3.11407923698
y: -7.33229112625
theta: 1.3861014843
speed: 3.3645324707
id: 0
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:73




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:74


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.24444444444






self.maneuver_requested left
xxx before update is x: 3.11407923698
y: -7.33229112625
theta: 1.3861014843
speed: 3.3645324707
id: 0
t: 73
xxx after update is x: 3.10884976387
y: -6.94692754745
theta: 1.45115661621
speed: 3.67183685303
id: 0
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.10884976387
y: -6.94692754745
theta: 1.45115661621
speed: 3.67183685303
id: 0
t: 74
xxx after update is x: 3.49790215492
y: -6.64353132248
theta: 1.47419714928
speed: 3.48265767097
id: 0
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:75




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: 3.49790215492
y: -6.64353132248
theta: 1.47419714928
speed: 3.48265767097
id: 0
t: 75
xxx after update is x: 3.52482175827
y: -6.96367263794
theta: 1.54226183891
speed: 4.24695158005
id: 0
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: 3.52482175827
y: -6.96367263794
theta: 1.54226183891
speed: 4.24695158005
id: 0
t: 76
xxx after update is x: 3.05356621742
y: -6.32344150543
theta: 1.5035135746
speed: 4.7938914299
id: 0
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:78


xxx before update is x: 3.05356621742
y: -6.32344150543
theta: 1.5035135746
speed: 4.7938914299
id: 0
t: 77
xxx after update is x: 3.13475704193
y: -6.26660394669
theta: 1.57506287098
speed: 4.87231016159
id: 0
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: 3.13475704193
y: -6.26660394669
theta: 1.57506287098
speed: 4.87231016159
id: 0
t: 78
xxx after update is x: 3.06861233711
y: -6.24128913879
theta: 1.56186234951
speed: 5.15067625046
id: 0
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.5787230651668649, 1.0000000000000002]
222 self.state_dicts[msg.id][msg.t] is (-3.5964438915252686, -13.702117919921875, 4.785886287689209, 13.73794174194336)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:80


xxx before update is x: 3.06861233711
y: -6.24128913879699997
id: 1
t: 74
xxx after update is x: -3.56871056557
y: -11.3799009323
theta: 5.00349235535
speed: 13.9792900085
id: 1
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
xxx before update is x: -3.56871056557
y: -11.3799009323
theta: 5.00349235535
speed: 13.9792900085
id: 1
t: 75
xxx after update is x: -3.36865234375
y: -11.7272129059
theta: 4.58300876617
speed: 13.6402444839
id: 1
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion
in spin function, finish the n times spin:76




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: -3.36865234375
y: -11.7272129059
theta: 4.58300876617
speed: 13.6402444839
id: 1
t: 76
xxx after update is x: -3.17538380623
y: -13.2542905807
theta: 4.7479057312
speed: 13.6396379471
id: 1
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:78


xxx before update is x: -3.17538380623
y: -13.2542905807
theta: 4.7479057312
speed: 13.6396379471
id: 1
t: 77
xxx after update is x: -3.82792854309
y: -13.1714458466
theta: 4.73539590836
speed: 14.2153148651
id: 1
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: -3.82792854309
y: -13.1714458466
theta: 4.73539590836
speed: 14.2153148651
id: 1
t: 78
xxx after update is x: -3.59644389153
y: -13.7021179199
theta: 4.78588628769
speed: 13.7379417419
id: 1
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:80


xxx before update is x: -3.59644389153
y: -13.7021179199
theta: 4.78588628769
speed: 13.7379417419
id: 1
t: 79
xxx after update is x: -3.19087815285
y: -14.0600633621
theta: 4.68647241592
speed: 14.0916748047
id: 1
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.09140293157003951, 0.4591999999999981]
222 self.state_dicts[msg.id][msg.t] is (3.3295834064483643, -5.761651039123535, 1.527140498161316, 5.456333637237549)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: -3.19087815285
y: -14.0600633621
theta: 4.68647241592
speed: 14.0916748047
id: 1
t: 80
xxx after update is x: -3.18831062317
y: -15.5432844162
theta: 4.75769948959
speed: 13.5079784393
id: 1
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.6






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: -3.18831062317
y: -15.5432844162
theta: 4.75769948959
speed: 13.5079784393
id: 1
t: 81
xxx after update is x: -3.23275899887
y: -15.486866951
theta: 4.73535060883
speed: 13.8485307693
id: 1
t: 82
maneuver
theta: 1.56186234951
speed: 5.15067625046
id: 0
t: 79
xxx after update is x: 3.32958340645
y: -5.76165103912
theta: 1.52714049816
speed: 5.45633363724
id: 0
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: 3.32958340645
y: -5.76165103912
theta: 1.52714049816
speed: 5.45633363724
id: 0
t: 80
xxx after update is x: 3.2929930687
y: -5.55996751785
theta: 1.70135843754
speed: 5.2330994606
id: 0
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.6






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: 3.2929930687
y: -5.55996751785
theta: 1.70135843754
speed: 5.2330994606
id: 0
t: 81
xxx after update is x: 2.88616371155
y: -4.78383302689
theta: 1.80218327045
speed: 6.07171630859
id: 0
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.88616371155
y: -4.78383302689
theta: 1.80218327045
speed: 6.07171630859
id: 0
t: 82
xxx after update is x: 2.88081789017
y: -4.87305736542
theta: 1.74089574814
speed: 6.09211492538
id: 0
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:83


aaaaaa
risk is [1.877973560338846e-51, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5537519454956055, -16.948469161987305, 4.736108779907227, 14.269954681396484)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: 2.88081789017
y: -4.87305736542
theta: 1.74089574814
speed: 6.09211492538
id: 0
t: 83
xxx after update is x: 3.13093137741
y: -4.99031686783
theta: 1.60149776936
speed: 6.17785835266
id: 0
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: 3.13093137741
y: -4.99031686783
theta: 1.60149776936
speed: 6.17785835266
id: 0
t: 84
xxx after update is x: 3.07077360153
y: -4.30769538879
theta: 1.88238918781
speed: 6.217253685
id: 0
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: 3.07077360153
y: -4.30769538879
theta: 1.88238918781
speed: 6.217253685
id: 0
t: 85
xxx after update is x: 3.14735269547
y: -4.57420253754
theta: 1.84959554672
speed: 6.58216619492
id: 0
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: 3.14735269547
y: -4.57420253754
theta: 1.84959554672
speed: 6.58216619492
id: 0
t: 86
xxx after update is x: 3.02224493027
y: -4.20507335663
theta: 1.81026411057
speed: 7.38620615005
id: 0
t: 87
maneuver_negotiatir.py finish the update agent state from ros fun_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:83


xxx before update is x: -3.23275899887
y: -15.486866951
theta: 4.73535060883
speed: 13.8485307693
id: 1
t: 82
xxx after update is x: -3.5537519455
y: -16.948469162
theta: 4.73610877991
speed: 14.2699546814
id: 1
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.5537519455
y: -16.948469162
theta: 4.73610877991
speed: 14.2699546814
id: 1
t: 83
xxx after update is x: -2.77412390709
y: -16.2015323639
theta: 4.61733007431
speed: 13.921875
id: 1
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:84


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [5.5073803396668684e-111, 0.503999999999998]
222 self.state_dicts[msg.id][msg.t] is (3.1309313774108887, -4.990316867828369, 1.601497769355774, 6.177858352661133)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.77412390709
y: -16.2015323639
theta: 4.61733007431
speed: 13.921875
id: 1
t: 84
xxx after update is x: -3.25045537949
y: -17.1439418793
theta: 4.63927412033
speed: 13.6480112076
id: 1
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:85




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: -3.25045537949
y: -17.1439418793
theta: 4.63927412033
speed: 13.6480112076
id: 1
t: 85
xxx after update is x: -3.16943407059
y: -17.7597866058
theta: 4.79690551758
speed: 14.1328840256
id: 1
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: -3.16943407059
y: -17.7597866058
theta: 4.79690551758
speed: 14.1328840256
id: 1
t: 86
xxx after update is x: -3.96351289749
y: -18.6844024658
theta: 4.61810016632
speed: 13.8299245834
id: 1
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [9.675610704010184e-222, 0.5311999999999988]
222 self.state_dicts[msg.id][msg.t] is (3.022244930267334, -4.205073356628418, 1.8102641105651855, 7.386206150054932)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: -3.96351289749
y: -18.6844024658
theta: 4.61810016632
speed: 13.8299245834
id: 1
t: 87
xxx after update is x: -3.90297198296
y: -18.7955284119
theta: 4.79730701447
speed: 13.7385492325
id: 1
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: -3.90297198296
y: -18.7955284119
theta: 4.79730701447
speed: 13.7385492325
id: 1
t: 88
xxx after update is x: -2.89504265785
y: -19.8060455322
theta: 4.78763008118
spetion
aaaaaa
risk is [3.8250114200100387e-218, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.963512897491455, -18.684402465820312, 4.618100166320801, 13.829924583435059)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: 3.02224493027
y: -4.20507335663
theta: 1.81026411057
speed: 7.38620615005
id: 0
t: 87
xxx after update is x: 2.92552876472
y: -4.06531906128
theta: 1.85317838192
speed: 7.48521089554
id: 0
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: 2.92552876472
y: -4.06531906128
theta: 1.85317838192
speed: 7.48521089554
id: 0
t: 88
xxx after update is x: 2.71629595757
y: -3.24796056747
theta: 1.96402156353
speed: 7.79215526581
id: 0
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.95555555556






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.71629595757
y: -3.24796056747
theta: 1.96402156353
speed: 7.79215526581
id: 0
t: 89
xxx after update is x: 2.6704249382
y: -3.00457835197
theta: 2.0369181633
speed: 7.74934625626
id: 0
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:90




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: 2.6704249382
y: -3.00457835197
theta: 2.0369181633
speed: 7.74934625626
id: 0
t: 90
xxx after update is x: 2.73100161552
y: -3.04284071922
theta: 2.09790706635
speed: 8.26604747772
id: 0
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [5e-323, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0510268211364746, -21.21139144897461, 4.623085975646973, 13.780223846435547)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.73100161552
y: -3.04284071922
theta: 2.09790706635
speed: 8.26604747772
id: 0
t: 91
xxx after update is x: 2.3173224926
y: -2.29518055916
theta: 1.94756865501
speed: 8.60449695587
id: 0
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:92




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: 2.3173224926
y: -2.29518055916
theta: 1.94756865501
speed: 8.60449695587
id: 0
t: 92
xxx after update is x: 2.34244465828
y: -2.21204710007
theta: 2.05938649178
speed: 8.49725723267
id: 0
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: 2.34244465828
y: -2.21204710007
theta: 2.05938649178
speed: 8.49725723267
id: 0
t: 93
xxx after update is x: 1.9374808073
y: -2.12601423264
theta: 2.17971348763
speed: 8.74673843384
id: 0
t: 9ed: 13.491104126
id: 1
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.95555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:90


xxx before update is x: -2.89504265785
y: -19.8060455322
theta: 4.78763008118
speed: 13.491104126
id: 1
t: 89
xxx after update is x: -3.5833272934
y: -20.3298549652
theta: 4.70337295532
speed: 13.8294754028
id: 1
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: -3.5833272934
y: -20.3298549652
theta: 4.70337295532
speed: 13.8294754028
id: 1
t: 90
xxx after update is x: -3.05102682114
y: -21.211391449
theta: 4.62308597565
speed: 13.7802238464
id: 1
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:92


xxx before update is x: -3.05102682114
y: -21.211391449
theta: 4.62308597565
speed: 13.7802238464
id: 1
t: 91
xxx after update is x: -3.32294893265
y: -22.0170555115
theta: 4.63329553604
speed: 13.7686367035
id: 1
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [2.77e-322, 0.5279999999999987]
222 self.state_dicts[msg.id][msg.t] is (2.3173224925994873, -2.295180559158325, 1.947568655014038, 8.604496955871582)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: -3.32294893265
y: -22.0170555115
theta: 4.63329553604
speed: 13.7686367035
id: 1
t: 92
xxx after update is x: -3.02825117111
y: -22.454120636
theta: 4.66230154037
speed: 14.1553049088
id: 1
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: -3.02825117111
y: -22.454120636
theta: 4.66230154037
speed: 14.1553049088
id: 1
t: 93
xxx after update is x: -2.92296385765
y: -22.6600952148
theta: 4.81358146667
speed: 14.0548496246
id: 1
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: -2.92296385765
y: -22.6600952148
theta: 4.81358146667
speed: 14.0548496246
id: 1
t: 94
xxx after update is x: -3.49639391899
y: -23.3869190216
theta: 4.76220417023
speed: 14.1772480011
id: 1
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: -3.49639391899
y: -23.3869190216
theta: 4.76220417023
speed: 14.1772480011
id: 1
t: 95
xxx after update is x: -3.34562373161
y: -24.9820232391
theta: 4.59355115891
speed: 13.9317789078
id: 1
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**************4
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: 1.9374808073
y: -2.12601423264
theta: 2.17971348763
speed: 8.74673843384
id: 0
t: 94
xxx after update is x: 1.81254553795
y: -1.65747964382
theta: 2.16920852661
speed: 9.56423282623
id: 0
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 1.81254553795
y: -1.65747964382
theta: 2.16920852661
speed: 9.56423282623
id: 0
t: 95
xxx after update is x: 1.46975505352
y: -1.36233592033
theta: 2.24323248863
speed: 9.1400718689
id: 0
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:96


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.345623731613159, -24.982023239135742, 4.593551158905029, 13.931778907775879)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:97


xxx before update is x: 1.46975505352
y: -1.36233592033
theta: 2.24323248863
speed: 9.1400718689
id: 0
t: 96
xxx after update is x: 0.809243440628
y: -0.939799189568
theta: 2.20114946365
speed: 9.60718631744
id: 0
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.31111111111






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 0.809243440628
y: -0.939799189568
theta: 2.20114946365
speed: 9.60718631744
id: 0
t: 97
xxx after update is x: 1.45495319366
y: -0.612562894821
theta: 2.23128533363
speed: 9.97758197784
id: 0
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:98




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: 1.45495319366
y: -0.612562894821
theta: 2.23128533363
speed: 9.97758197784
id: 0
t: 98
xxx after update is x: 0.172842770815
y: 0.148525983095
theta: 2.36054110527
speed: 10.1852340698
id: 0
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: 0.172842770815
y: 0.148525983095
theta: 2.36054110527
speed: 10.1852340698
id: 0
t: 99
xxx after update is x: 0.0201607700437
y: 0.0884449854493
theta: 2.48584914207
speed: 10.4805316925
id: 0
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5616438388824463, -26.661216735839844, 4.76090145111084, 13.71677017211914)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: 0.0201607700437
y: 0.0884449854493
theta: 2.48584914207
speed: 10.4805316925
id: 0
t: 100
xxx after update is x: 0.431689202785
y: 0********
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5199999999999985]
222 self.state_dicts[msg.id][msg.t] is (1.4697550535202026, -1.3623359203338623, 2.243232488632202, 9.140071868896484)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.26666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:97


xxx before update is x: -3.34562373161
y: -24.9820232391
theta: 4.59355115891
speed: 13.9317789078
id: 1
t: 96
xxx after update is x: -3.08493638039
y: -25.0263175964
theta: 4.56776237488
speed: 13.7819519043
id: 1
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: -3.08493638039
y: -25.0263175964
theta: 4.56776237488
speed: 13.7819519043
id: 1
t: 97
xxx after update is x: -3.02437448502
y: -25.4851551056
theta: 4.75883960724
speed: 14.1720733643
id: 1
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: -3.02437448502
y: -25.4851551056
theta: 4.75883960724
speed: 14.1720733643
id: 1
t: 98
xxx after update is x: -3.52284264565
y: -26.1947250366
theta: 4.70676898956
speed: 14.0166225433
id: 1
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: -3.52284264565
y: -26.1947250366
theta: 4.70676898956
speed: 14.0166225433
id: 1
t: 99
xxx after update is x: -3.56164383888
y: -26.6612167358
theta: 4.76090145111
speed: 13.7167701721
id: 1
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48479999999999795]
222 self.state_dicts[msg.id][msg.t] is (0.020160770043730736, 0.08844498544931412, 2.485849142074585, 10.480531692504883)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: -3.56164383888
y: -26.6612167358
theta: 4.76090145111
speed: 13.7167701721
id: 1
t: 100
xxx after update is x: -3.12849617004
y: -27.0082683563
theta: 4.97697305679
speed: 13.9658021927
id: 1
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.12849617004
y: -27.0082683563
theta: 4.97697305679
speed: 13.9658021927
id: 1
t: 101
xxx after update is x: -3.20567703247
y: -27.7772922516
theta: 4.76116323471
speed: 13.7713413239
id: 1
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:102


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: -3.20567703247
y: -27.7772.397998154163
theta: 2.39718747139
speed: 10.8820781708
id: 0
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: 0.431689202785
y: 0.397998154163
theta: 2.39718747139
speed: 10.8820781708
id: 0
t: 101
xxx after update is x: -0.329369902611
y: 0.854118525982
theta: 2.51803946495
speed: 11.2884874344
id: 0
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: -0.329369902611
y: 0.854118525982
theta: 2.51803946495
speed: 11.2884874344
id: 0
t: 102
xxx after update is x: -0.722452521324
y: 1.07669043541
theta: 2.63505125046
speed: 11.0794420242
id: 0
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -0.722452521324
y: 1.07669043541
theta: 2.63505125046
speed: 11.0794420242
id: 0
t: 103
xxx after update is x: -1.11127066612
y: 1.35355007648
theta: 2.59195566177
speed: 11.6969175339
id: 0
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:104


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.8178765773773193, -29.236562728881836, 4.779649257659912, 14.130009651184082)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:105


xxx before update is x: -1.11127066612
y: 1.35355007648
theta: 2.59195566177
speed: 11.6969175339
id: 0
t: 104
xxx after update is x: -1.88526046276
y: 1.63139617443
theta: 2.68735694885
speed: 12.0265827179
id: 0
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.66666666667






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: -1.88526046276
y: 1.63139617443
theta: 2.68735694885
speed: 12.0265827179
id: 0
t: 105
xxx after update is x: -2.24813747406
y: 1.72289156914
theta: 2.78038311005
speed: 11.9821901321
id: 0
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: -2.24813747406
y: 1.72289156914
theta: 2.78038311005
speed: 11.9821901321
id: 0
t: 106
xxx after update is x: -3.03626704216
y: 2.06351423264
theta: 2.69700741768
speed: 12.2439146042
id: 0
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: -3.03626704216
y: 2.06351423264
theta: 2.69700741768
speed: 12.2439146042
id: 0
t: 107
xxx after update is x: -3.40973806381
y: 2.09648942947
theta: 2.6741130352
speed: 12.4779443741
id: 0
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] i922516
theta: 4.76116323471
speed: 13.7713413239
id: 1
t: 102
xxx after update is x: -3.13286471367
y: -29.0724658966
theta: 4.82486963272
speed: 14.0330324173
id: 1
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48319999999999796]
222 self.state_dicts[msg.id][msg.t] is (-0.7224525213241577, 1.076690435409546, 2.6350512504577637, 11.079442024230957)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: -3.13286471367
y: -29.0724658966
theta: 4.82486963272
speed: 14.0330324173
id: 1
t: 103
xxx after update is x: -2.81787657738
y: -29.2365627289
theta: 4.77964925766
speed: 14.1300096512
id: 1
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.62222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.81787657738
y: -29.2365627289
theta: 4.77964925766
speed: 14.1300096512
id: 1
t: 104
xxx after update is x: -3.31334424019
y: -29.8074760437
theta: 4.62788629532
speed: 13.8564176559
id: 1
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:105




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: -3.31334424019
y: -29.8074760437
theta: 4.62788629532
speed: 13.8564176559
id: 1
t: 105
xxx after update is x: -2.86005568504
y: -30.3038921356
theta: 4.71642208099
speed: 13.7285003662
id: 1
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: -2.86005568504
y: -30.3038921356
theta: 4.71642208099
speed: 13.7285003662
id: 1
t: 106
xxx after update is x: -3.13175177574
y: -30.9156761169
theta: 4.62901592255
speed: 13.9986248016
id: 1
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5119999999999982]
222 self.state_dicts[msg.id][msg.t] is (-3.036267042160034, 2.063514232635498, 2.697007417678833, 12.243914604187012)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: -3.13175177574
y: -30.9156761169
theta: 4.62901592255
speed: 13.9986248016
id: 1
t: 107
xxx after update is x: -3.53408169746
y: -31.8041973114
theta: 4.71555042267
speed: 14.0673551559
id: 1
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: -3.53408169746
y: -31.8041973114
theta: 4.71555042267
speed: 14.0673551559
id: 1
t: 108
xxx after update is x: -2.9855837822
y: -32.6182518005
theta: 4.75266933441
speed: 14.0911626816
id: 1
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:110


xxx before update is x: -2.9855837822
y: -32.6182518005
theta: 4.75266933441
speed: 14.0911626816
id: 1
t: 109
xxx after update is x: -2.96198701859
y: -32.6480178833
theta: 4.64512205124
speed: 13.8580160141
id: 1
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (-4.535459995269775, 3.0402302742004395, 2.8890397548675537, 12.666571617126465)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.96198701859
y: -32.6480178833
theta: 4.64512205124
speed: 13.8580160141
id: 1
t: 110
xxx after update is x: -3.44498276711
y: -33.2654800415
theta: 4.61642122269
speed: 13.8711156845
id: 1
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:111




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:112


xxx before update is x: -3.44498276711
y: -33.2654800415
theta: 4.61642122269
speed: 13.8711156845
id: 1
t: 111
xxx after update is x: -3.72580718994
y: -33.9584884644
theta: 4.88612270355
speed: 13.778137207
id: 1
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.97777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 4.97777777778




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.97777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '4.97777777778', 'Position': ['(-4.910681247711182', ' 3.0434372425079346', ' 2.7989728450775146)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.97777777778,(-4.910681247711182, 3.0434372425079346, 2.7989728450775146),13,1,1.11111111111,0 from  car0
status: 4




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:113


xxx before update is x: -3.72580718994
y: -33.9584884644
theta: 4.88612270355
speed: 13.778137207
id: 1
t: 112
xxx after update is x: -3.49809765816
y: -34.4514045715
theta: 4.88972616196
speed: 13.8437585831
id: 1
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: -3.49809765816
y: -34.4514045715
theta: 4.88972616196
speed: 13.8437585831
id: 1
t: 113
xxx after update is x: -3.5209300518
y: -35.2437171936
theta: 4.65111923218
speed: 13.7894153595
id: 1
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5327999999999988]
222 self.state_dicts[msg.id][msg.t] is (-6.5579142570495605, 3.353447914123535, 2.888458251953125, 13.083765983581543)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in s (-3.5340816974639893, -31.804197311401367, 4.715550422668457, 14.067355155944824)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: -3.40973806381
y: 2.09648942947
theta: 2.6741130352
speed: 12.4779443741
id: 0
t: 108
xxx after update is x: -3.30380439758
y: 2.62496328354
theta: 2.817486763
speed: 12.5794849396
id: 0
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:110


xxx before update is x: -3.30380439758
y: 2.62496328354
theta: 2.817486763
speed: 12.5794849396
id: 0
t: 109
xxx after update is x: -4.53545999527
y: 3.0402302742
theta: 2.88903975487
speed: 12.6665716171
id: 0
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:111


xxx before update is x: -4.53545999527
y: 3.0402302742
theta: 2.88903975487
speed: 12.6665716171
id: 0
t: 110
xxx after update is x: -4.50226545334
y: 3.72743296623
theta: 2.81507992744
speed: 12.9703617096
id: 0
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:112


xxx before update is x: -4.50226545334
y: 3.72743296623
theta: 2.81507992744
speed: 12.9703617096
id: 0
t: 111
xxx after update is x: -4.91068124771
y: 3.04343724251
theta: 2.79897284508
speed: 13.4655618668
id: 0
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.97777777778






self.maneuver_requested left
RELEASE,0,4.97777777778,(-4.910681247711182, 3.0434372425079346, 2.7989728450775146),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 4.97777777778
self.communication_details == 0
sending RELEASE,0,4.97777777778,(-4.910681247711182, 3.0434372425079346, 2.7989728450775146),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:113


maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: -4.91068124771
y: 3.04343724251
theta: 2.79897284508
speed: 13.4655618668
id: 0
t: 112
xxx after update is x: -5.72420215607
y: 3.22501897812
theta: 3.10496068001
speed: 13.4580860138
id: 0
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4980976581573486, -34.4514045715332, 4.889726161956787, 13.843758583068848)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: -5.72420215607
y: 3.22501897812
theta: 3.10496068001
speed: 13.4580860138
id: 0
t: 113
xxx after update is x: -6.55791425705
y: 3.35344791412
theta: 2.88845825195
speed: 13.0837659836
id: 0
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.5209300518
y: -35.2437171936
theta: 4.65111923218
speed: 13.7894153595
id: 1
t: 114
xxx after update is x: -3.38844513893
y: -36.1329879761
theta: 4.76752710342
speed: 13.9201259613
id: 1
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:115




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: -3.38844513893
y: -36.1329879761
theta: 4.76752710342
speed: 13.9201259613
id: 1
t: 115
xxx after update is x: -3.29071450233
y: -36.3847694397
theta: 4.83218288422
speed: 13.8505401611
id: 1
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: -3.29071450233
y: -36.3847694397
theta: 4.83218288422
speed: 13.8505401611
id: 1
t: 116
xxx after update is x: -3.23470473289
y: -37.8472557068
theta: 4.78118610382
speed: 13.8381824493
id: 1
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.23470473289
y: -37.8472557068
theta: 4.78118610382
speed: 13.8381824493
id: 1
t: 117
xxx after update is x: -3.61444544792
y: -37.6360015869
theta: 4.72805452347
speed: 13.7873020172
id: 1
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:118




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.61444544792
y: -37.6360015869
theta: 4.72805452347
speed: 13.7873020172
id: 1
t: 118
xxx after update is x: -3.22545337677
y: -38.3569297791
theta: 4.76324319839
speed: 13.6637620926
id: 1
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:119


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5503999999999993]
222 self.state_dicts[msg.id][msg.t] is (-8.949967384338379, 3.3789939880371094, 2.9713873863220215, 12.691718101501465)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:120


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.28888888889






self.maneuver_requested None
xxx before update is x: -3.22545337677
y: -38.3569297791
theta: 4.76324319839
speed: 13.6637620926
id: 1
t: 119
xxx after update is x: -2.97055125237
y: -39.00415802
theta: 4.97629976273
speed: 14.3924789429
id: 1
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 5.33333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 5.33333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '5.33333333333', 'Position': ['(-9.924156188964844', ' 3.7408366203308105', ' 3.049532890319824)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,5.33333333333,(-9.924156188964844, 3.7408366203308105, 3.049532890319824),13,1,1.11111111111,0 from  car0
< self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:115


xxx before update is x: -6.55791425705
y: 3.35344791412
theta: 2.88845825195
speed: 13.0837659836
id: 0
t: 114
xxx after update is x: -7.01142549515
y: 3.13405418396
theta: 3.1481127739
speed: 13.0180587769
id: 0
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: -7.01142549515
y: 3.13405418396
theta: 3.1481127739
speed: 13.0180587769
id: 0
t: 115
xxx after update is x: -7.72013950348
y: 2.96965384483
theta: 3.11610341072
speed: 12.5284471512
id: 0
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -7.72013950348
y: 2.96965384483
theta: 3.11610341072
speed: 12.5284471512
id: 0
t: 116
xxx after update is x: -8.09712123871
y: 2.78824687004
theta: 3.03622579575
speed: 12.375459671
id: 0
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:117


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2347047328948975, -37.84725570678711, 4.781186103820801, 13.83818244934082)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: -8.09712123871
y: 2.78824687004
theta: 3.03622579575
speed: 12.375459671
id: 0
t: 117
xxx after update is x: -8.58193588257
y: 3.94113206863
theta: 3.11465454102
speed: 12.6026515961
id: 0
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: -8.58193588257
y: 3.94113206863
theta: 3.11465454102
speed: 12.6026515961
id: 0
t: 118
xxx after update is x: -8.94996738434
y: 3.37899398804
theta: 2.97138738632
speed: 12.6917181015
id: 0
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:120


xxx before update is x: -8.94996738434
y: 3.37899398804
theta: 2.97138738632
speed: 12.6917181015
id: 0
t: 119
xxx after update is x: -9.92415618896
y: 3.74083662033
theta: 3.04953289032
speed: 13.1340398788
id: 0
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.33333333333






self.maneuver_requested left
RELEASE,0,5.33333333333,(-9.924156188964844, 3.7408366203308105, 3.049532890319824),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 5.33333333333
self.communication_details == 0
sending RELEASE,0,5.33333333333,(-9.924156188964844, 3.7408366203308105, 3.049532890319824),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:121


xxx before update is x: -9.92415618896
y: 3.74083662033
theta: 3.04953289032
speed: 13.1340398788
id: 0
t: 120
xxx after update is x: -10.4314403534
y: 3.68728685379
theta: 3.21566128731
speed: 13.424242status: 4




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:121


xxx before update is x: -2.97055125237
y: -39.00415802
theta: 4.97629976273
speed: 14.3924789429
id: 1
t: 120
xxx after update is x: -3.56047081947
y: -39.8794631958
theta: 4.87523698807
speed: 13.7463359833
id: 1
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: -3.56047081947
y: -39.8794631958
theta: 4.87523698807
speed: 13.7463359833
id: 1
t: 121
xxx after update is x: -2.85517287254
y: -40.069229126
theta: 4.69050550461
speed: 14.1359653473
id: 1
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: -2.85517287254
y: -40.069229126
theta: 4.69050550461
speed: 14.1359653473
id: 1
t: 122
xxx after update is x: -3.42968535423
y: -41.1130867004
theta: 4.67952108383
speed: 13.8924942017
id: 1
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48799999999999794]
222 self.state_dicts[msg.id][msg.t] is (-11.016742706298828, 3.6544675827026367, 3.1159472465515137, 14.146367073059082)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: -3.42968535423
y: -41.1130867004
theta: 4.67952108383
speed: 13.8924942017
id: 1
t: 123
xxx after update is x: -3.10798668861
y: -41.7011299133
theta: 4.75296115875
speed: 13.9067907333
id: 1
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:125


xxx before update is x: -3.10798668861
y: -41.7011299133
theta: 4.75296115875
speed: 13.9067907333
id: 1
t: 124
xxx after update is x: -3.26160979271
y: -41.8293418884
theta: 4.71010255814
speed: 13.922123909
id: 1
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
!!! change status from grant to normal
current clock is 5.55555555556
!!!threading.Timer
tgarnt done
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5199999999999985]
222 self.state_dicts[msg.id][msg.t] is (-13.018771171569824, 3.186875581741333, 3.258920907974243, 14.082559585571289)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: -3.26160979271
y: -41.8293418884
theta: 4.71010255814
speed: 13.922123909
id: 1
t: 125
xxx after update is x: -3.51625394821
y: -42.8191871643
theta: 4.86704015732
speed: 13.4692049026
id: 1
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, 9733
id: 0
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: -10.4314403534
y: 3.68728685379
theta: 3.21566128731
speed: 13.4242429733
id: 0
t: 121
xxx after update is x: -10.6155328751
y: 3.12198352814
theta: 3.20884132385
speed: 13.9263877869
id: 0
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.855172872543335, -40.06922912597656, 4.690505504608154, 14.135965347290039)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: -10.6155328751
y: 3.12198352814
theta: 3.20884132385
speed: 13.9263877869
id: 0
t: 122
xxx after update is x: -11.0167427063
y: 3.6544675827
theta: 3.11594724655
speed: 14.1463670731
id: 0
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: -11.0167427063
y: 3.6544675827
theta: 3.11594724655
speed: 14.1463670731
id: 0
t: 123
xxx after update is x: -11.8297491074
y: 3.85489726067
theta: 3.18009972572
speed: 14.1564445496
id: 0
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -11.8297491074
y: 3.85489726067
theta: 3.18009972572
speed: 14.1564445496
id: 0
t: 124
xxx after update is x: -13.0187711716
y: 3.18687558174
theta: 3.25892090797
speed: 14.0825595856
id: 0
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:125


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2616097927093506, -41.829341888427734, 4.710102558135986, 13.922123908996582)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -13.0187711716
y: 3.18687558174
theta: 3.25892090797
speed: 14.0825595856
id: 0
t: 125
xxx after update is x: -13.329662323
y: 3.6481564045
theta: 3.17780900002
speed: 13.7051105499
id: 0
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:126




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -13.329662323
y: 3.6481564045
theta: 3.17780900002
speed: 13.7051105499
id: 0
t: 126
xxx after update is x: -13.8874034882
y: 2.67871189117
theta: 3.18287539482
speed: 13.6825637817
id: 0
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:127




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.64444444444






self.maneuver_requested left
RELEASE,0,5.64444444444,(-13.88740348815918, 2.6787118911743164, 3.182875394821167),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 5.64444444444
self.communication_details == 0
sending RELEASE,0,5.64444444444,(-13.88740348815918, 2.67871finish the n times spin:127

xxx before update is x: -3.51625394821
y: -42.8191871643
theta: 4.86704015732
speed: 13.4692049026
id: 1
t: 126
xxx after update is x: -2.91236972809
y: -43.3588829041
theta: 4.67436552048
speed: 13.643453598
id: 1
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion

maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.64444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:128


Received -->>: 
current clock is 5.64444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 5.64444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '5.64444444444', 'Position': ['(-13.88740348815918', ' 2.6787118911743164', ' 3.182875394821167)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,5.64444444444,(-13.88740348815918, 2.6787118911743164, 3.182875394821167),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




xxx before update is x: -2.91236972809
y: -43.3588829041
theta: 4.67436552048
speed: 13.643453598
id: 1
t: 127
xxx after update is x: -2.6765267849
y: -44.1513824463
theta: 4.73371553421
speed: 13.8229103088
id: 1
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:129


xxx before update is x: -2.6765267849
y: -44.1513824463
theta: 4.73371553421
speed: 13.8229103088
id: 1
t: 128
xxx after update is x: -3.32378745079
y: -44.5681190491
theta: 4.81112194061
speed: 13.9464979172
id: 1
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.32378745079
y: -44.5681190491
theta: 4.81112194061
speed: 13.9464979172
id: 1
t: 129
xxx after update is x: -3.24113106728
y: -45.3628578186
theta: 4.77648115158
speed: 14.1557865143
id: 1
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:130




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.24113106728
y: -45.3628578186
theta: 4.77648115158
speed: 14.1557865143
id: 1
t: 130
xxx after update is x: -3.22957968712
y: -45.5431404114
theta: 4.81033945084
speed: 13.6752376556
id: 1
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:131




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: -3.22957968712
y: -45.5431404114
theta: 4.81033945084
speed: 13.6752376556
id: 1
t: 131
xxx after update is x: -2.88294434547
y: -46.2515907288
theta: 4.71662473679
speed: 13.9012308121
id: 1
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-16.43427848815918, 3.0519204139709473, 3.2288804054260254, 13.72437572479248)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update f18911743164, 3.182875394821167),13,1,1.11111111111,0 to car 1 from car 0xxx before update is x: -13.8874034882
y: 2.67871189117
theta: 3.18287539482
speed: 13.6825637817
id: 0
t: 127
xxx after update is x: -14.3691577911
y: 3.81124401093
theta: 3.15935564041
speed: 14.0448217392
id: 0
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion

maneuver_negotiatir.py finish the update_agent_message
leave the update function 
in spin function, finish the n times spin:128


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:129


xxx before update is x: -14.3691577911
y: 3.81124401093
theta: 3.15935564041
speed: 14.0448217392
id: 0
t: 128
xxx after update is x: -15.1072797775
y: 2.81167268753
theta: 3.09220480919
speed: 13.8383131027
id: 0
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: -15.1072797775
y: 2.81167268753
theta: 3.09220480919
speed: 13.8383131027
id: 0
t: 129
xxx after update is x: -16.4068012238
y: 2.75777697563
theta: 3.24607539177
speed: 14.2332763672
id: 0
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -16.4068012238
y: 2.75777697563
theta: 3.24607539177
speed: 14.2332763672
id: 0
t: 130
xxx after update is x: -16.2356071472
y: 3.31530404091
theta: 3.30975747108
speed: 13.809589386
id: 0
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:131




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: -16.2356071472
y: 3.31530404091
theta: 3.30975747108
speed: 13.809589386
id: 0
t: 131
xxx after update is x: -16.4342784882
y: 3.05192041397
theta: 3.22888040543
speed: 13.7243757248
id: 0
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:133


xxx before update is x: -16.4342784882
y: 3.05192041397
theta: 3.22888040543
speed: 13.7243757248
id: 0
t: 132
xxx after update is x: -17.5440864563
y: 3.03082180023
theta: 3.11853480339
speed: 13.8711776733
id: 0
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4685611724853516, -47.17805099487305, 4.741574287414551, 13.9760103225708)
if we have all measurements for a certain time-stamp perform risk estimation


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: -17.5440864563
y: 3.03082180023
theta: 3.11853480339
speed: 13.8711776733
id: 0
t: 133
xxx after update is x: -18.7304916382
y: 3.41750383377
theta: 3.14951086044
speed: 13.5774698257
id: 0
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:135


xxx before update is x: -18.7304916382
y: 3.41750383377
theta: 3.14951086044
speed: 13.5774698257
id: 0
t: 134
xxx after update is x: -18.877178unction
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:133


xxx before update is x: -2.88294434547
y: -46.2515907288
theta: 4.71662473679
speed: 13.9012308121
id: 1
t: 132
xxx after update is x: -3.46856117249
y: -47.1780509949
theta: 4.74157428741
speed: 13.9760103226
id: 1
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
removed car with id 0 from grantlist. currentgrantlist: {}


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: -3.46856117249
y: -47.1780509949
theta: 4.74157428741
speed: 13.9760103226
id: 1
t: 133
xxx after update is x: -2.90647721291
y: -47.8495063782
theta: 4.72334861755
speed: 13.5657157898
id: 1
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:135


xxx before update is x: -2.90647721291
y: -47.8495063782
theta: 4.72334861755
speed: 13.5657157898
id: 1
t: 134
xxx after update is x: -2.9962542057
y: -48.2259368896
theta: 4.83112430573
speed: 13.9071369171
id: 1
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.0






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: -2.9962542057
y: -48.2259368896
theta: 4.83112430573
speed: 13.9071369171
id: 1
t: 135
xxx after update is x: -3.65339660645
y: -48.9716262817
theta: 4.71853160858
speed: 14.0122709274
id: 1
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 6.04444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 6.04444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '6.04444444444', 'Position': ['(-19.944873809814453', ' 3.459827423095703', ' 3.2405574321746826)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,6.04444444444,(-19.944873809814453, 3.459827423095703, 3.2405574321746826),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.65339660645
y: -48.9716262817
theta: 4.71853160858
speed: 14.0122709274
id: 1
t: 136
xxx after update is x: -2.95163607597
y: -49.3195381165
theta: 4.75683641434
speed: 13.6793718338
id: 1
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:137


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4927999999999979]
222 self.state_dicts[msg.id][msg.t] is (-20.696672439575195, 3.0788888931274414, 3.1324403285980225, 13.98840045928955)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: -2.95163607597
y: -49.3195381165
theta: 4.75683641434
speed: 13.6793718338
id: 1
t: 137
xxx afte1921
y: 3.70144081116
theta: 3.22276711464
speed: 14.0037994385
id: 0
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: -18.8771781921
y: 3.70144081116
theta: 3.22276711464
speed: 14.0037994385
id: 0
t: 135
xxx after update is x: -19.9448738098
y: 3.4598274231
theta: 3.24055743217
speed: 13.8766450882
id: 0
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.04444444444






self.maneuver_requested left
RELEASE,0,6.04444444444,(-19.944873809814453, 3.459827423095703, 3.2405574321746826),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 6.04444444444
self.communication_details == 0
sending RELEASE,0,6.04444444444,(-19.944873809814453, 3.459827423095703, 3.2405574321746826),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:137


xxx before update is x: -19.9448738098
y: 3.4598274231
theta: 3.24055743217
speed: 13.8766450882
id: 0
t: 136
xxx after update is x: -20.6966724396
y: 3.07888889313
theta: 3.1324403286
speed: 13.9884004593
id: 0
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: -20.6966724396
y: 3.07888889313
theta: 3.1324403286
speed: 13.9884004593
id: 0
t: 137
xxx after update is x: -20.5833377838
y: 3.60500407219
theta: 3.22870969772
speed: 14.1278381348
id: 0
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:139


xxx before update is x: -20.5833377838
y: 3.60500407219
theta: 3.22870969772
speed: 14.1278381348
id: 0
t: 138
xxx after update is x: -21.3407688141
y: 2.84331011772
theta: 3.00897598267
speed: 13.8793115616
id: 0
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.967026948928833, -51.079673767089844, 4.96427583694458, 13.70619010925293)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: -21.3407688141
y: 2.84331011772
theta: 3.00897598267
speed: 13.8793115616
id: 0
t: 139
xxx after update is x: -22.4845218658
y: 3.83680129051
theta: 2.93403458595
speed: 14.1550416946
id: 0
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: -22.4845218658
y: 3.83680129051
theta: 2.93403458595
speed: 14.1550416946
id: 0
t: 140
xxx after update is x: -22.8221054077
y: 3.0582857132
theta: 3.15653204918
speed: 14.086435318
id: 0
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
removed car with id 0 from grantlist. currentgrantlist: {}


going to the update function
sim.py in the sim.py update function 
targetspeed < ser update is x: -3.33309412003
y: -49.9494552612
theta: 4.72170448303
speed: 13.7545862198
id: 1
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:139


xxx before update is x: -3.33309412003
y: -49.9494552612
theta: 4.72170448303
speed: 13.7545862198
id: 1
t: 138
xxx after update is x: -2.96702694893
y: -51.0796737671
theta: 4.96427583694
speed: 13.7061901093
id: 1
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.96702694893
y: -51.0796737671
theta: 4.96427583694
speed: 13.7061901093
id: 1
t: 139
xxx after update is x: -2.99418640137
y: -51.6670455933
theta: 4.65734004974
speed: 13.9296607971
id: 1
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:140




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: -2.99418640137
y: -51.6670455933
theta: 4.65734004974
speed: 13.9296607971
id: 1
t: 140
xxx after update is x: -3.25424051285
y: -51.8337020874
theta: 4.88891410828
speed: 14.1237411499
id: 1
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: -3.25424051285
y: -51.8337020874
theta: 4.88891410828
speed: 14.1237411499
id: 1
t: 141
xxx after update is x: -2.6974875927
y: -52.5817985535
theta: 4.78317070007
speed: 13.4830465317
id: 1
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.49919999999999787]
222 self.state_dicts[msg.id][msg.t] is (-23.195087432861328, 3.7531185150146484, 3.0852530002593994, 13.862082481384277)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: -2.6974875927
y: -52.5817985535
theta: 4.78317070007
speed: 13.4830465317
id: 1
t: 142
xxx after update is x: -3.30611395836
y: -53.6393318176
theta: 4.7741522789
speed: 13.842751503
id: 1
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.35555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
Received -->>: 
current clock is 6.35555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 6.35555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '6.35555555556', 'Position': ['(-24.090473175048828', ' 3.260753870010376', ' 3.3516299724578857)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,6.35555555556,(-24.090473175048828, 3.260753870010376, 3.3516299724578857),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




xxx before update is x: -3.30611395836
y: -53.63lf.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -22.8221054077
y: 3.0582857132
theta: 3.15653204918
speed: 14.086435318
id: 0
t: 141
xxx after update is x: -23.1950874329
y: 3.75311851501
theta: 3.08525300026
speed: 13.8620824814
id: 0
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:142




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -23.1950874329
y: 3.75311851501
theta: 3.08525300026
speed: 13.8620824814
id: 0
t: 142
xxx after update is x: -24.090473175
y: 3.26075387001
theta: 3.35162997246
speed: 13.9226369858
id: 0
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:143


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.35555555556






self.maneuver_requested left
RELEASE,0,6.35555555556,(-24.090473175048828, 3.260753870010376, 3.3516299724578857),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 6.35555555556
self.communication_details == 0
sending RELEASE,0,6.35555555556,(-24.090473175048828, 3.260753870010376, 3.3516299724578857),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: -24.090473175
y: 3.26075387001
theta: 3.35162997246
speed: 13.9226369858
id: 0
t: 143
xxx after update is x: -24.0187358856
y: 3.3620865345
theta: 3.13876056671
speed: 13.8632926941
id: 0
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: -24.0187358856
y: 3.3620865345
theta: 3.13876056671
speed: 13.8632926941
id: 0
t: 144
xxx after update is x: -24.7272586823
y: 3.3814432621
theta: 3.1802008152
speed: 13.8021831512
id: 0
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3941802978515625, -54.51145553588867, 4.505744457244873, 13.830550193786621)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:146


xxx before update is x: -24.7272586823
y: 3.3814432621
theta: 3.1802008152
speed: 13.8021831512
id: 0
t: 145
xxx after update is x: -25.3662185669
y: 2.79714560509
theta: 3.2613940239
speed: 14.0535621643
id: 0
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: -25.3662185669
y: 2.79714560509
theta: 3.2613940239
speed: 14.0535621643
id: 0
t: 146
xxx after update is x: -26.5901317596
y: 3.23491406441
theta: 3.00770926476
speed: 13.8690576553
id: 0
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: -26.5901317596
y: 3.23491406441
theta: 3.00770926476
speed: 13.8690576553
id: 0
t: 147
xxx after update is x: -27.4862880707
y: 3.29113221169
theta: 3.155187606893318176
theta: 4.7741522789
speed: 13.842751503
id: 1
t: 143
xxx after update is x: -3.60378265381
y: -54.2534828186
theta: 4.70344829559
speed: 13.7540550232
id: 1
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:144


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: -3.60378265381
y: -54.2534828186
theta: 4.70344829559
speed: 13.7540550232
id: 1
t: 144
xxx after update is x: -3.39418029785
y: -54.5114555359
theta: 4.50574445724
speed: 13.8305501938
id: 1
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.49919999999999787]
222 self.state_dicts[msg.id][msg.t] is (-24.727258682250977, 3.3814432621002197, 3.1802008152008057, 13.802183151245117)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.39418029785
y: -54.5114555359
theta: 4.50574445724
speed: 13.8305501938
id: 1
t: 145
xxx after update is x: -3.78716421127
y: -55.3901252747
theta: 4.63709497452
speed: 14.0692110062
id: 1
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:146


maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
tgarnt done


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: -3.78716421127
y: -55.3901252747
theta: 4.63709497452
speed: 14.0692110062
id: 1
t: 146
xxx after update is x: -3.19010734558
y: -55.5147895813
theta: 4.65596675873
speed: 14.0237064362
id: 1
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: -3.19010734558
y: -55.5147895813
theta: 4.65596675873
speed: 14.0237064362
id: 1
t: 147
xxx after update is x: -3.25696516037
y: -56.8942451477
theta: 4.89890527725
speed: 13.855093956
id: 1
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: -3.25696516037
y: -56.8942451477
theta: 4.89890527725
speed: 13.855093956
id: 1
t: 148
xxx after update is x: -2.84162950516
y: -56.6007118225
theta: 4.63187026978
speed: 13.9276609421
id: 1
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.46719999999999806]
222 self.state_dicts[msg.id][msg.t] is (-28.041385650634766, 2.878113031387329, 3.125084400177002, 14.122991561889648)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: -2.84162950516
y: -56.6007118225
theta: 4.63187026978
speed: 13.9276609421
id: 1
t: 149
xxx after update is x: -3.52242803574
y: -57.4217262268
theta: 4.64927625656
speed: 14.0454282761
id: 1
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim1
speed: 13.8967218399
id: 0
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: -27.4862880707
y: 3.29113221169
theta: 3.15518760681
speed: 13.8967218399
id: 0
t: 148
xxx after update is x: -28.0413856506
y: 2.87811303139
theta: 3.12508440018
speed: 14.1229915619
id: 0
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.8416295051574707, -56.600711822509766, 4.631870269775391, 13.927660942077637)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -28.0413856506
y: 2.87811303139
theta: 3.12508440018
speed: 14.1229915619
id: 0
t: 149
xxx after update is x: -27.6000022888
y: 3.12382221222
theta: 3.20256876945
speed: 14.0877971649
id: 0
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:150




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: -27.6000022888
y: 3.12382221222
theta: 3.20256876945
speed: 14.0877971649
id: 0
t: 150
xxx after update is x: -28.3653659821
y: 3.71374726295
theta: 3.15006971359
speed: 14.0824546814
id: 0
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.71111111111






self.maneuver_requested left
RELEASE,0,6.71111111111,(-28.365365982055664, 3.713747262954712, 3.1500697135925293),14,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 6.71111111111
self.communication_details == 0
sending RELEASE,0,6.71111111111,(-28.365365982055664, 3.713747262954712, 3.1500697135925293),14,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:152


xxx before update is x: -28.3653659821
y: 3.71374726295
theta: 3.15006971359
speed: 14.0824546814
id: 0
t: 151
xxx after update is x: -28.5874862671
y: 2.84443020821
theta: 3.243724823
speed: 13.7246780396
id: 0
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:153


xxx before update is x: -28.5874862671
y: 2.84443020821
theta: 3.243724823
speed: 13.7246780396
id: 0
t: 152
xxx after update is x: -29.900806427
y: 2.89936590195
theta: 2.97788953781
speed: 13.4963026047
id: 0
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -29.900806427
y: 2.89936590195
theta: 2.97788953781
speed: 13.4963026047
id: 0
t: 153
xxx after update is x: -31.5625591278
y: 2.79492115974
theta: 3.11129689217
speed: 13.8010797501
id: 0
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:154




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n time.py in the sim.py update function maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.66666666667






self.maneuver_requested None

targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: -3.52242803574
y: -57.4217262268
theta: 4.64927625656
speed: 14.0454282761
id: 1
t: 150
xxx after update is x: -3.47823429108
y: -58.5905532837
theta: 4.79349565506
speed: 13.711479187
id: 1
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 6.71111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 6.71111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '6.71111111111', 'Position': ['(-28.365365982055664', ' 3.713747262954712', ' 3.1500697135925293)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,6.71111111111,(-28.365365982055664, 3.713747262954712, 3.1500697135925293),14,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:152


xxx before update is x: -3.47823429108
y: -58.5905532837
theta: 4.79349565506
speed: 13.711479187
id: 1
t: 151
xxx after update is x: -3.02541708946
y: -59.5153121948
theta: 4.66639947891
speed: 13.8099870682
id: 1
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:153


xxx before update is x: -3.02541708946
y: -59.5153121948
theta: 4.66639947891
speed: 13.8099870682
id: 1
t: 152
xxx after update is x: -3.25627541542
y: -59.6463775635
theta: 4.72376585007
speed: 14.2402191162
id: 1
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.25627541542
y: -59.6463775635
theta: 4.72376585007
speed: 14.2402191162
id: 1
t: 153
xxx after update is x: -3.55585718155
y: -60.3566894531
theta: 4.62748241425
speed: 14.0811481476
id: 1
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:154


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.55585718155
y: -60.3566894531
theta: 4.62748241425
speed: 14.0811481476
id: 1
t: 154
xxx after update is x: -2.74276208878
y: -60.5348548889
theta: 4.68630170822
speed: 13.9943084717
id: 1
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:155


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-31.12628936767578, 3.52856707572937, 3.1325442790985107, 13.83731746673584)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: -2.74276208878
y: -60.5348548889
theta: 4.68630170822
speed: 13.9943084717
id: 1
t: 155
xxx after update is x: -2.81143331528
y: -61.4213867188
theta: 4.540975s spin:155

xxx before update is x: -31.5625591278
y: 2.79492115974
theta: 3.11129689217
speed: 13.8010797501
id: 0
t: 154
xxx after update is x: -31.1262893677
y: 3.52856707573
theta: 3.1325442791
speed: 13.8373174667
id: 0
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: -31.1262893677
y: 3.52856707573
theta: 3.1325442791
speed: 13.8373174667
id: 0
t: 155
xxx after update is x: -31.863117218
y: 2.68022418022
theta: 3.21530342102
speed: 13.7419242859
id: 0
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.8114333152770996, -61.42138671875, 4.540975093841553, 14.11324691772461)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: -31.863117218
y: 2.68022418022
theta: 3.21530342102
speed: 13.7419242859
id: 0
t: 156
xxx after update is x: -32.9434547424
y: 3.20759415627
theta: 3.20537948608
speed: 13.9778308868
id: 0
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: -32.9434547424
y: 3.20759415627
theta: 3.20537948608
speed: 13.9778308868
id: 0
t: 157
xxx after update is x: -32.9089431763
y: 3.54574799538
theta: 3.20413160324
speed: 13.7906389236
id: 0
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:159


xxx before update is x: -32.9089431763
y: 3.54574799538
theta: 3.20413160324
speed: 13.7906389236
id: 0
t: 158
xxx after update is x: -33.5478553772
y: 3.09550142288
theta: 3.04180908203
speed: 13.8730707169
id: 0
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.06666666667






self.maneuver_requested left
RELEASE,0,7.06666666667,(-33.547855377197266, 3.09550142288208, 3.04180908203125),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.06666666667
self.communication_details == 0
sending RELEASE,0,7.06666666667,(-33.547855377197266, 3.09550142288208, 3.04180908203125),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -33.5478553772
y: 3.09550142288
theta: 3.04180908203
speed: 13.8730707169
id: 0
t: 159
xxx after update is x: -33.8487472534
y: 2.80360841751
theta: 3.26896715164
speed: 13.7500753403
id: 0
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:160




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -33.8487472534
y: 2.80360841751
theta: 3.26896715164
speed: 13.7500753403
id: 0
t: 160
xxx after update is x: -35.0250587463
y: 2.85113501549
theta: 3.06271576881
speed: 14.0990924835
id: 0
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin09384
speed: 14.1132469177
id: 1
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: -2.81143331528
y: -61.4213867188
theta: 4.54097509384
speed: 14.1132469177
id: 1
t: 156
xxx after update is x: -3.16308355331
y: -61.6939697266
theta: 4.54419755936
speed: 13.7871904373
id: 1
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: -3.16308355331
y: -61.6939697266
theta: 4.54419755936
speed: 13.7871904373
id: 1
t: 157
xxx after update is x: -3.67973661423
y: -62.5887336731
theta: 4.75482177734
speed: 13.7889080048
id: 1
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.02222222222






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:159


xxx before update is x: -3.67973661423
y: -62.5887336731
theta: 4.75482177734
speed: 13.7889080048
id: 1
t: 158
xxx after update is x: -3.7639875412
y: -62.8154678345
theta: 4.79315853119
speed: 14.0128326416
id: 1
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 7.06666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 7.06666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '7.06666666667', 'Position': ['(-33.547855377197266', ' 3.09550142288208', ' 3.04180908203125)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,7.06666666667,(-33.547855377197266, 3.09550142288208, 3.04180908203125),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.7639875412
y: -62.8154678345
theta: 4.79315853119
speed: 14.0128326416
id: 1
t: 159
xxx after update is x: -3.00331020355
y: -63.876625061
theta: 4.70583534241
speed: 13.7409009933
id: 1
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:160


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: -3.00331020355
y: -63.876625061
theta: 4.70583534241
speed: 13.7409009933
id: 1
t: 160
xxx after update is x: -2.90331625938
y: -63.6159210205
theta: 4.72076749802
speed: 13.9078874588
id: 1
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4943999999999979]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.90331625938
y: -63.6159210205
theta: 4.72076749802
speed: 13.9078874588
id: 1
t: 161
xxx after update is x: -3.02043414116
y: -65.1308517456
theta: 4.76385164261
speed: 14.0641469955
id: 1
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:162


222 se:161




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: -35.0250587463
y: 2.85113501549
theta: 3.06271576881
speed: 14.0990924835
id: 0
t: 161
xxx after update is x: -35.2171630859
y: 3.29883718491
theta: 3.05312514305
speed: 13.8545293808
id: 0
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -35.2171630859
y: 3.29883718491
theta: 3.05312514305
speed: 13.8545293808
id: 0
t: 162
xxx after update is x: -36.5822639465
y: 3.03410100937
theta: 3.27141904831
speed: 13.8643445969
id: 0
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:163




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -36.5822639465
y: 3.03410100937
theta: 3.27141904831
speed: 13.8643445969
id: 0
t: 163
xxx after update is x: -36.9084815979
y: 3.6268632412
theta: 3.15848922729
speed: 13.8100805283
id: 0
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:164


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2252728939056396, -66.120849609375, 4.712369441986084, 14.195199966430664)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:165


xxx before update is x: -36.9084815979
y: 3.6268632412
theta: 3.15848922729
speed: 13.8100805283
id: 0
t: 164
xxx after update is x: -37.7508201599
y: 3.29061961174
theta: 3.15797066689
speed: 13.9840354919
id: 0
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:166


xxx before update is x: -37.7508201599
y: 3.29061961174
theta: 3.15797066689
speed: 13.9840354919
id: 0
t: 165
xxx after update is x: -37.8673400879
y: 3.34068894386
theta: 3.17397880554
speed: 14.0509519577
id: 0
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -37.8673400879
y: 3.34068894386
theta: 3.17397880554
speed: 14.0509519577
id: 0
t: 166
xxx after update is x: -38.670501709
y: 3.12076687813
theta: 3.18954992294
speed: 14.1231918335
id: 0
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:167


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.42222222222






self.maneuver_requested left
RELEASE,0,7.42222222222,(-38.670501708984375, 3.1207668781280518, 3.1895499229431152),14,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.42222222222
self.communication_details == 0
sending RELEASE,0,7.42222222222,(-38.670501708984375, 3.1207668781280518, 3.1895499229431152),14,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: -38.670501709
y: 3.12076687813
theta: 3.18954992294
speed: 1lf.state_dicts[msg.id][msg.t] is (-35.2171630859375, 3.298837184906006, 3.0531251430511475, 13.85452938079834)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:163


xxx before update is x: -3.02043414116
y: -65.1308517456
theta: 4.76385164261
speed: 14.0641469955
id: 1
t: 162
xxx after update is x: -3.42203140259
y: -65.6634750366
theta: 4.61827850342
speed: 13.8415079117
id: 1
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.42203140259
y: -65.6634750366
theta: 4.61827850342
speed: 13.8415079117
id: 1
t: 163
xxx after update is x: -3.22527289391
y: -66.1208496094
theta: 4.71236944199
speed: 14.1951999664
id: 1
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:164




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:165


xxx before update is x: -3.22527289391
y: -66.1208496094
theta: 4.71236944199
speed: 14.1951999664
id: 1
t: 164
xxx after update is x: -2.42501974106
y: -66.7987594604
theta: 4.78696632385
speed: 14.06914711
id: 1
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:166


xxx before update is x: -2.42501974106
y: -66.7987594604
theta: 4.78696632385
speed: 14.06914711
id: 1
t: 165
xxx after update is x: -3.20081830025
y: -67.4347000122
theta: 5.00520896912
speed: 14.0856571198
id: 1
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.37777777778






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: -3.20081830025
y: -67.4347000122
theta: 5.00520896912
speed: 14.0856571198
id: 1
t: 166
xxx after update is x: -3.46675848961
y: -68.2364883423
theta: 4.68472146988
speed: 13.6746606827
id: 1
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 7.42222222222




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 7.42222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '7.42222222222', 'Position': ['(-38.670501708984375', ' 3.1207668781280518', ' 3.1895499229431152)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,7.42222222222,(-38.670501708984375, 3.1207668781280518, 3.1895499229431152),14,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (-38.670501708984375, 3.1207668781280518, 3.1895499229431152, 14.123191833496094)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:4.1231918335
id: 0
t: 167
xxx after update is x: -39.2339248657
y: 3.35606002808
theta: 3.12482023239
speed: 14.0739059448
id: 0
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: -39.2339248657
y: 3.35606002808
theta: 3.12482023239
speed: 14.0739059448
id: 0
t: 168
xxx after update is x: -39.9758491516
y: 3.36160826683
theta: 3.12368869781
speed: 13.9312705994
id: 0
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.945303440093994, -69.9021224975586, 4.851365089416504, 14.021100044250488)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: -39.9758491516
y: 3.36160826683
theta: 3.12368869781
speed: 13.9312705994
id: 0
t: 169
xxx after update is x: -40.4312591553
y: 3.55350375175
theta: 3.17076826096
speed: 13.748793602
id: 0
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:171


xxx before update is x: -40.4312591553
y: 3.55350375175
theta: 3.17076826096
speed: 13.748793602
id: 0
t: 170
xxx after update is x: -41.3934898376
y: 3.52227067947
theta: 3.28803277016
speed: 13.3877239227
id: 0
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: -41.3934898376
y: 3.52227067947
theta: 3.28803277016
speed: 13.3877239227
id: 0
t: 171
xxx after update is x: -41.5597419739
y: 3.09413409233
theta: 2.97597956657
speed: 13.8936872482
id: 0
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:173


xxx before update is x: -41.5597419739
y: 3.09413409233
theta: 2.97597956657
speed: 13.8936872482
id: 0
t: 172
xxx after update is x: -42.2774734497
y: 3.67229104042
theta: 3.28385591507
speed: 14.0184602737
id: 0
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4189319610595703, -72.1915054321289, 4.762975692749023, 13.874302864074707)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: -42.2774734497
y: 3.67229104042
theta: 3.28385591507
speed: 14.0184602737
id: 0
t: 173
xxx after update is x: -42.8214111328
y: 3.4836807251
theta: 3.24062561989
speed: 13.5576887131
id: 0
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.73333333333






self.maneuver_requested left
RELEASE,0,7.73333333333,(-42.8214111328125, 3.4836807250976562, 3.2406256198883057),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.73333333333
self.communication_details == 0
sending RELEASE,0,7.73333333333,(-42.8214111328125, 3.48368072xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: -3.46675848961
y: -68.2364883423
theta: 4.68472146988
speed: 13.6746606827
id: 1
t: 167
xxx after update is x: -3.66865611076
y: -68.4360961914
theta: 4.76868104935
speed: 13.7916097641
id: 1
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: -3.66865611076
y: -68.4360961914
theta: 4.76868104935
speed: 13.7916097641
id: 1
t: 168
xxx after update is x: -2.94530344009
y: -69.9021224976
theta: 4.85136508942
speed: 14.0211000443
id: 1
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: -2.94530344009
y: -69.9021224976
theta: 4.85136508942
speed: 14.0211000443
id: 1
t: 169
xxx after update is x: -3.2868642807
y: -70.0482330322
theta: 4.81454563141
speed: 13.7216711044
id: 1
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:171


xxx before update is x: -3.2868642807
y: -70.0482330322
theta: 4.81454563141
speed: 13.7216711044
id: 1
t: 170
xxx after update is x: -2.92263484001
y: -69.9801559448
theta: 4.65404033661
speed: 14.0036029816
id: 1
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: -2.92263484001
y: -69.9801559448
theta: 4.65404033661
speed: 14.0036029816
id: 1
t: 171
xxx after update is x: -3.57779955864
y: -71.2210235596
theta: 4.80848836899
speed: 13.9154920578
id: 1
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:173


xxx before update is x: -3.57779955864
y: -71.2210235596
theta: 4.80848836899
speed: 13.9154920578
id: 1
t: 172
xxx after update is x: -3.41893196106
y: -72.1915054321
theta: 4.76297569275
speed: 13.8743028641
id: 1
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48479999999999795]
222 self.state_dicts[msg.id][msg.t] is (-42.27747344970703, 3.6722910404205322, 3.28385591506958, 14.018460273742676)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: -3.41893196106
y: -72.1915054321
theta: 4.76297569275
speed: 13.8743028641
id: 1
t: 173
xxx after update is x: -2.87172460556
y: -72.7637786865
theta: 4.73661899567
speed: 13.8539485931
id: 1
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.73333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 7.73333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 7.73333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: -2.87172460556
y: -72.7637786865
theta: 4.73661899567
speed: 13.8539485931
id: 1
t: 174
xxx after update is x: -3.23220562935
y: -73.4889526367
theta: 4.63167572021
speed: 13.7817277908
id: 1
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion

maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '7.73333333333', 'Position': ['(-42.8214111328125', ' 3.4836807250976562', ' 3.2406256198883057)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,7.73333333333,(-42.8214111328125, 3.4836807250976562, 3.2406256198883057),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: -3.23220562935
y: -73.4889526367
theta: 4.63167572021
speed: 13.7817277908
id: 1
t: 175
xxx after update is x: -3.06703066826
y: -73.9950408936
theta: 4.71236133575
speed: 13.8344888687
id: 1
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:177


xxx before update is x: -3.06703066826
y: -73.9950408936
theta: 4.71236133575
speed: 13.8344888687
id: 1
t: 176
xxx after update is x: -3.15679717064
y: -74.719291687
theta: 4.79043722153
speed: 13.7696647644
id: 1
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.476799999999998]
222 self.state_dicts[msg.id][msg.t] is (-44.78563690185547, 3.2221014499664307, 2.9876046180725098, 13.87514877319336)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: -3.15679717064
y: -74.719291687
theta: 4.79043722153
speed: 13.7696647644
id: 1
t: 177
xxx after update is x: -2.90366888046
y: -75.3117828369
theta: 4.83294773102
speed: 13.6126384735
id: 1
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: -2.90366888046
y: -75.3117828369
theta: 4.83294773102
speed: 13.6126384735
id: 1
t: 178
xxx after update is x: -3.2278573513
y: -75.2704696655
theta: 4.70169067383
speed: 13.5483150482
id: 1
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:180


xxx before update is x: -3.2278573513
y: -75.2704696655
theta: 4.70169067383
speed: 13.5483150482
id: 1
t: 179
xxx after update is x: -3.33347272873
y: -76.2460708618
theta: 4.82549905777
speed: 13.8213977814
id: 1
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5199999999999985]
222 self.state_dicts[msg.id][msg.t] is (-45.96282958984375, 3.4473063945770264, 3.210249185562134, 14.092816352844238)
if we have all measurements for a certain time-stamp p50976562, 3.2406256198883057),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: -42.8214111328
y: 3.4836807251
theta: 3.24062561989
speed: 13.5576887131
id: 0
t: 174
xxx after update is x: -44.1253204346
y: 3.69277715683
theta: 3.12958526611
speed: 14.0762348175
id: 0
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: -44.1253204346
y: 3.69277715683
theta: 3.12958526611
speed: 14.0762348175
id: 0
t: 175
xxx after update is x: -43.784740448
y: 3.70352911949
theta: 3.15999746323
speed: 13.9300518036
id: 0
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:177


xxx before update is x: -43.784740448
y: 3.70352911949
theta: 3.15999746323
speed: 13.9300518036
id: 0
t: 176
xxx after update is x: -44.7856369019
y: 3.22210144997
theta: 2.98760461807
speed: 13.8751487732
id: 0
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: -44.7856369019
y: 3.22210144997
theta: 2.98760461807
speed: 13.8751487732
id: 0
t: 177
xxx after update is x: -45.2643890381
y: 3.17191147804
theta: 3.08396911621
speed: 14.3143186569
id: 0
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.9036688804626465, -75.31178283691406, 4.832947731018066, 13.612638473510742)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: -45.2643890381
y: 3.17191147804
theta: 3.08396911621
speed: 14.3143186569
id: 0
t: 178
xxx after update is x: -46.1749382019
y: 3.25693941116
theta: 3.14842414856
speed: 13.8756065369
id: 0
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:180


xxx before update is x: -46.1749382019
y: 3.25693941116
theta: 3.14842414856
speed: 13.8756065369
id: 0
t: 179
xxx after update is x: -45.9628295898
y: 3.44730639458
theta: 3.21024918556
speed: 14.0928163528
id: 0
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -45.9628295898
y: 3.44730639458
theta: 3.21024918556
speed: 14.0928163528
id: 0
t: 180
xxx after update is x: -46.9989738464
y: 3.25755929947
theta: 3.09974527359
speed: 14.1663370132
id: 0
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:181




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:182


xxx before update is x: -erform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:181


xxx before update is x: -3.33347272873
y: -76.2460708618
theta: 4.82549905777
speed: 13.8213977814
id: 1
t: 180
xxx after update is x: -3.19092345238
y: -76.7527389526
theta: 4.72759723663
speed: 13.88804245
id: 1
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:182


xxx before update is x: -3.19092345238
y: -76.7527389526
theta: 4.72759723663
speed: 13.88804245
id: 1
t: 181
xxx after update is x: -2.90382623672
y: -77.150718689
theta: 4.62895202637
speed: 13.6915454865
id: 1
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.08888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:183


xxx before update is x: -2.90382623672
y: -77.150718689
theta: 4.62895202637
speed: 13.6915454865
id: 1
t: 182
xxx after update is x: -2.945997715
y: -78.0571212769
theta: 4.73675584793
speed: 13.6464490891
id: 1
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 8.13333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 8.13333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '8.08888888889', 'Position': ['(-47.611000061035156', ' 2.5776054859161377', ' 3.230299949645996)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,8.08888888889,(-47.611000061035156, 2.5776054859161377, 3.230299949645996),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: -2.945997715
y: -78.0571212769
theta: 4.73675584793
speed: 13.6464490891
id: 1
t: 183
xxx after update is x: -3.65702176094
y: -78.6755218506
theta: 4.69829368591
speed: 13.7382907867
id: 1
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:185


xxx before update is x: -3.65702176094
y: -78.6755218506
theta: 4.69829368591
speed: 13.7382907867
id: 1
t: 184
xxx after update is x: -3.27424359322
y: -79.3988800049
theta: 4.66373157501
speed: 14.0325946808
id: 1
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.27424359322
y: -79.3988800049
theta: 4.66373157501
speed: 14.0325946808
id: 1
t: 185
xxx after update is x: -3.1611635685
y: -80.1705245972
theta: 4.73674440384
speed: 13.7229652405
id: 1
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:186


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5183999999999984]
222 self.state_dicts[msg.id][msg.t] 46.9989738464
y: 3.25755929947
theta: 3.09974527359
speed: 14.1663370132
id: 0
t: 181
xxx after update is x: -47.611000061
y: 2.57760548592
theta: 3.23029994965
speed: 13.7923412323
id: 0
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.08888888889






self.maneuver_requested left
RELEASE,0,8.08888888889,(-47.611000061035156, 2.5776054859161377, 3.230299949645996),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 8.08888888889
self.communication_details == 0
sending RELEASE,0,8.08888888889,(-47.611000061035156, 2.5776054859161377, 3.230299949645996),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:183


xxx before update is x: -47.611000061
y: 2.57760548592
theta: 3.23029994965
speed: 13.7923412323
id: 0
t: 182
xxx after update is x: -48.3177223206
y: 3.25769901276
theta: 3.13126564026
speed: 13.6298646927
id: 0
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: -48.3177223206
y: 3.25769901276
theta: 3.13126564026
speed: 13.6298646927
id: 0
t: 183
xxx after update is x: -49.6973838806
y: 2.79410123825
theta: 3.21453857422
speed: 14.0044679642
id: 0
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.6570217609405518, -78.67552185058594, 4.698293685913086, 13.738290786743164)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:185


xxx before update is x: -49.6973838806
y: 2.79410123825
theta: 3.21453857422
speed: 14.0044679642
id: 0
t: 184
xxx after update is x: -49.9577941895
y: 3.27589249611
theta: 3.31803822517
speed: 13.5987768173
id: 0
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: -49.9577941895
y: 3.27589249611
theta: 3.31803822517
speed: 13.5987768173
id: 0
t: 185
xxx after update is x: -49.9227180481
y: 3.07045030594
theta: 3.09930992126
speed: 13.7594871521
id: 0
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -49.9227180481
y: 3.07045030594
theta: 3.09930992126
speed: 13.7594871521
id: 0
t: 186
xxx after update is x: -50.6289901733
y: 3.05597186089
theta: 2.91417574883
speed: 14.0108356476
id: 0
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:187




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:188


xxx before update is x: -50.6289901733
y: 3.05597186089
theta: 2.91417574883
speed: 14.0108356476
id: 0
t: 187
xxx after update is x: -51.4700927734
y: 3.07141089439
theta: 3.1943731308
speed: 14.0331220627
id: 0
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the updatis (-49.9227180480957, 3.0704503059387207, 3.0993099212646484, 13.75948715209961)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: -3.1611635685
y: -80.1705245972
theta: 4.73674440384
speed: 13.7229652405
id: 1
t: 186
xxx after update is x: -3.02638435364
y: -80.3858108521
theta: 4.83751153946
speed: 13.9938154221
id: 1
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.02638435364
y: -80.3858108521
theta: 4.83751153946
speed: 13.9938154221
id: 1
t: 187
xxx after update is x: -2.87476658821
y: -81.023651123
theta: 4.7994594574
speed: 13.876452446
id: 1
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:188




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: -2.87476658821
y: -81.023651123
theta: 4.7994594574
speed: 13.876452446
id: 1
t: 188
xxx after update is x: -3.21084332466
y: -81.4317398071
theta: 4.60385799408
speed: 14.1231193542
id: 1
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (-52.717350006103516, 3.2940280437469482, 2.9076249599456787, 13.81778621673584)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: -3.21084332466
y: -81.4317398071
theta: 4.60385799408
speed: 14.1231193542
id: 1
t: 189
xxx after update is x: -4.01747751236
y: -82.4433441162
theta: 4.78634405136
speed: 13.9015130997
id: 1
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.44444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -4.01747751236
y: -82.4433441162
theta: 4.78634405136
speed: 13.9015130997
id: 1
t: 190
xxx after update is x: -3.1807103157
y: -82.9833374023
theta: 4.83420610428
speed: 13.8263025284
id: 1
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 8.48888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 8.48888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '8.44444444444', 'Position': ['(-53.07647705078125', ' 3.243496894836426', ' 3.0559306144714355)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,8.44444444444,(-53.07647705078125, 3.243496894836426, 3.0559306144714355),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the upe function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -51.4700927734
y: 3.07141089439
theta: 3.1943731308
speed: 14.0331220627
id: 0
t: 188
xxx after update is x: -52.7173500061
y: 3.29402804375
theta: 2.90762495995
speed: 13.8177862167
id: 0
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:189


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.210843324661255, -81.4317398071289, 4.60385799407959, 14.123119354248047)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: -52.7173500061
y: 3.29402804375
theta: 2.90762495995
speed: 13.8177862167
id: 0
t: 189
xxx after update is x: -53.0764770508
y: 3.24349689484
theta: 3.05593061447
speed: 13.6894845963
id: 0
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.44444444444






self.maneuver_requested left
RELEASE,0,8.44444444444,(-53.07647705078125, 3.243496894836426, 3.0559306144714355),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 8.44444444444
self.communication_details == 0
sending RELEASE,0,8.44444444444,(-53.07647705078125, 3.243496894836426, 3.0559306144714355),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -53.0764770508
y: 3.24349689484
theta: 3.05593061447
speed: 13.6894845963
id: 0
t: 190
xxx after update is x: -53.3353805542
y: 2.35927462578
theta: 3.20853900909
speed: 13.9939136505
id: 0
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:192


xxx before update is x: -53.3353805542
y: 2.35927462578
theta: 3.20853900909
speed: 13.9939136505
id: 0
t: 191
xxx after update is x: -54.1467247009
y: 3.0980219841
theta: 3.2372405529
speed: 13.8585662842
id: 0
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:193


xxx before update is x: -54.1467247009
y: 3.0980219841
theta: 3.2372405529
speed: 13.8585662842
id: 0
t: 192
xxx after update is x: -54.4843406677
y: 2.86804962158
theta: 3.29437828064
speed: 14.0604953766
id: 0
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:194


xxx before update is x: -54.4843406677
y: 2.86804962158
theta: 3.29437828064
speed: 14.0604953766
id: 0
t: 193
xxx after update is x: -55.0669174194
y: 3.18512415886
theta: 3.20684361458
speed: 13.9708166122
id: 0
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2685818672180176, -85.04450225830078, 4.641476154327393, 13.873611450195312)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sdate function xxx before update is x: -3.1807103157
y: -82.9833374023
theta: 4.83420610428
speed: 13.8263025284
id: 1
t: 191
xxx after update is x: -3.19335031509
y: -83.5173034668
theta: 4.66827201843
speed: 14.1817655563
id: 1
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:192




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:193


xxx before update is x: -3.19335031509
y: -83.5173034668
theta: 4.66827201843
speed: 14.1817655563
id: 1
t: 192
xxx after update is x: -2.99180340767
y: -83.7814483643
theta: 4.62666416168
speed: 13.8955612183
id: 1
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4927999999999979]
222 self.state_dicts[msg.id][msg.t] is (-54.48434066772461, 2.8680496215820312, 3.2943782806396484, 14.060495376586914)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.99180340767
y: -83.7814483643
theta: 4.62666416168
speed: 13.8955612183
id: 1
t: 193
xxx after update is x: -3.26858186722
y: -85.0445022583
theta: 4.64147615433
speed: 13.8736114502
id: 1
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:194




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:195


xxx before update is x: -3.26858186722
y: -85.0445022583
theta: 4.64147615433
speed: 13.8736114502
id: 1
t: 194
xxx after update is x: -3.34415769577
y: -85.8132476807
theta: 4.63765192032
speed: 13.6716003418
id: 1
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:196


xxx before update is x: -3.34415769577
y: -85.8132476807
theta: 4.63765192032
speed: 13.6716003418
id: 1
t: 195
xxx after update is x: -2.87788558006
y: -86.3203353882
theta: 4.77780103683
speed: 13.5798225403
id: 1
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -2.87788558006
y: -86.3203353882
theta: 4.77780103683
speed: 13.5798225403
id: 1
t: 196
xxx after update is x: -3.62024474144
y: -86.943107605
theta: 4.8107843399
speed: 14.1474676132
id: 1
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5119999999999982]
222 self.state_dicts[msg.id][msg.t] is (-56.98740768432617, 3.274193048477173, 3.0774216651916504, 13.495050430297852)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:198


xxx before update is x: -3.62024474144
y: -86.943107605
theta: 4.8107843399
speed: 14.1474676132
id: 1
t: 197
xxx after update is x: -3.53525257111
y: -87.2964859009
theta: 4.55473613739
speed: 13.8761453629
id: 1
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.8






self.im.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:195


xxx before update is x: -55.0669174194
y: 3.18512415886
theta: 3.20684361458
speed: 13.9708166122
id: 0
t: 194
xxx after update is x: -55.5758934021
y: 3.45643877983
theta: 3.10686516762
speed: 13.9187297821
id: 0
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:196


xxx before update is x: -55.5758934021
y: 3.45643877983
theta: 3.10686516762
speed: 13.9187297821
id: 0
t: 195
xxx after update is x: -56.4825439453
y: 3.24893832207
theta: 3.11049962044
speed: 13.6289453506
id: 0
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -56.4825439453
y: 3.24893832207
theta: 3.11049962044
speed: 13.6289453506
id: 0
t: 196
xxx after update is x: -56.9874076843
y: 3.27419304848
theta: 3.07742166519
speed: 13.4950504303
id: 0
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:198


xxx before update is x: -56.9874076843
y: 3.27419304848
theta: 3.07742166519
speed: 13.4950504303
id: 0
t: 197
xxx after update is x: -58.4110298157
y: 3.5693063736
theta: 3.21865344048
speed: 13.937792778
id: 0
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.8






self.maneuver_requested left
RELEASE,0,8.8,(-58.41102981567383, 3.5693063735961914, 3.218653440475464),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 8.8
self.communication_details == 0
sending RELEASE,0,8.8,(-58.41102981567383, 3.5693063735961914, 3.218653440475464),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:199


xxx before update is x: -58.4110298157
y: 3.5693063736
theta: 3.21865344048
speed: 13.937792778
id: 0
t: 198
xxx after update is x: -58.4818916321
y: 3.38640642166
theta: 3.20639133453
speed: 13.4382896423
id: 0
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.644406318664551, -87.94760131835938, 4.820416450500488, 13.905192375183105)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: -58.4818916321
y: 3.38640642166
theta: 3.20639133453
speed: 13.4382896423
id: 0
t: 199
xxx after update is x: -59.3219261169
y: 3.10249733925
theta: 3.19346547127
speed: 14.0957164764
id: 0
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -59.3219261169
y: 3.10249733925
theta: 3.19346547127
speed: 14.0957164764
id: 0
t: 200
xxx after update is x: -59.8519630432
y: 3.30031895638
tmaneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 8.8




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 8.8
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '8.8', 'Position': ['(-58.41102981567383', ' 3.5693063735961914', ' 3.218653440475464)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,8.8,(-58.41102981567383, 3.5693063735961914, 3.218653440475464),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:199


xxx before update is x: -3.53525257111
y: -87.2964859009
theta: 4.55473613739
speed: 13.8761453629
id: 1
t: 198
xxx after update is x: -2.64440631866
y: -87.9476013184
theta: 4.8204164505
speed: 13.9051923752
id: 1
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: -2.64440631866
y: -87.9476013184
theta: 4.8204164505
speed: 13.9051923752
id: 1
t: 199
xxx after update is x: -2.66557693481
y: -88.7571716309
theta: 4.55276966095
speed: 14.2535467148
id: 1
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -2.66557693481
y: -88.7571716309
theta: 4.55276966095
speed: 14.2535467148
id: 1
t: 200
xxx after update is x: -3.05913639069
y: -89.0942993164
theta: 4.65532112122
speed: 13.848443985
id: 1
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (-59.85196304321289, 3.300318956375122, 3.184020519256592, 13.756562232971191)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.05913639069
y: -89.0942993164
theta: 4.65532112122
speed: 13.848443985
id: 1
t: 201
xxx after update is x: -2.9352645874
y: -89.5500411987
theta: 4.677110672
speed: 13.5095415115
id: 1
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:202




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:203


xxx before update is x: -2.9352645874
y: -89.5500411987
theta: 4.677110672
speed: 13.5095415115
id: 1
t: 202
xxx after update is x: -2.861515522
y: -89.9881286621
theta: 4.65006399155
speed: 13.8321466446
id: 1
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.861515522
y: -89.9881286621
theta: 4.65006399155
speed: 13.8321466446
id: 1
t: 203
xxx after update is x: -3.30493593216
y: -90.2026290894
theta: 4.66235971451
speed: 13.9264631271
id: 1
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:204


************normaliheta: 3.18402051926
speed: 13.756562233
id: 0
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -59.8519630432
y: 3.30031895638
theta: 3.18402051926
speed: 13.756562233
id: 0
t: 201
xxx after update is x: -59.9998626709
y: 2.97819542885
theta: 3.59142184258
speed: 14.3480939865
id: 0
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:202




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:203


xxx before update is x: -59.9998626709
y: 2.97819542885
theta: 3.59142184258
speed: 14.3480939865
id: 0
t: 202
xxx after update is x: -60.90184021
y: 3.56317543983
theta: 3.14755105972
speed: 14.3335990906
id: 0
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:204


xxx before update is x: -60.90184021
y: 3.56317543983
theta: 3.14755105972
speed: 14.3335990906
id: 0
t: 203
xxx after update is x: -61.2899436951
y: 3.01318693161
theta: 3.05893349648
speed: 14.1442899704
id: 0
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.304935932159424, -90.20262908935547, 4.662359714508057, 13.92646312713623)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:205


xxx before update is x: -61.2899436951
y: 3.01318693161
theta: 3.05893349648
speed: 14.1442899704
id: 0
t: 204
xxx after update is x: -61.9862785339
y: 3.93558239937
theta: 3.10176348686
speed: 13.810125351
id: 0
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:206


xxx before update is x: -61.9862785339
y: 3.93558239937
theta: 3.10176348686
speed: 13.810125351
id: 0
t: 205
xxx after update is x: -62.8258666992
y: 3.4133503437
theta: 3.20515465736
speed: 13.4621162415
id: 0
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.15555555556






self.maneuver_requested left
RELEASE,0,9.15555555556,(-62.82586669921875, 3.4133503437042236, 3.2051546573638916),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 9.15555555556
self.communication_details == 0
sending RELEASE,0,9.15555555556,(-62.82586669921875, 3.4133503437042236, 3.2051546573638916),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:207


xxx before update is x: -62.8258666992
y: 3.4133503437
theta: 3.20515465736
speed: 13.4621162415
id: 0
t: 206
xxx after update is x: -63.3857688904
y: 3.71976232529
theta: 3.04877305031
speed: 13.8287210464
id: 0
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finishze weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:205


xxx before update is x: -3.30493593216
y: -90.2026290894
theta: 4.66235971451
speed: 13.9264631271
id: 1
t: 204
xxx after update is x: -3.41695189476
y: -91.9366073608
theta: 4.64577054977
speed: 13.6001052856
id: 1
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4927999999999979]
222 self.state_dicts[msg.id][msg.t] is (-61.98627853393555, 3.935582399368286, 3.1017634868621826, 13.810125350952148)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.11111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:206


xxx before update is x: -3.41695189476
y: -91.9366073608
theta: 4.64577054977
speed: 13.6001052856
id: 1
t: 205
xxx after update is x: -3.21443033218
y: -92.7780303955
theta: 4.72285318375
speed: 14.1070795059
id: 1
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 9.15555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 9.15555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '9.15555555556', 'Position': ['(-62.82586669921875', ' 3.4133503437042236', ' 3.2051546573638916)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,9.15555555556,(-62.82586669921875, 3.4133503437042236, 3.2051546573638916),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:207


xxx before update is x: -3.21443033218
y: -92.7780303955
theta: 4.72285318375
speed: 14.1070795059
id: 1
t: 206
xxx after update is x: -2.84871172905
y: -92.7507171631
theta: 4.75528097153
speed: 13.5467987061
id: 1
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:208


xxx before update is x: -2.84871172905
y: -92.7507171631
theta: 4.75528097153
speed: 13.5467987061
id: 1
t: 207
xxx after update is x: -2.98482728004
y: -93.4656143188
theta: 4.6114025116
speed: 13.9426927567
id: 1
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5183999999999984]
222 self.state_dicts[msg.id][msg.t] is (-64.15869903564453, 4.046627044677734, 3.1606619358062744, 13.510663032531738)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -2.98482728004
y: -93.4656143188
theta: 4.6114025116
speed: 13.9426927567
id: 1
t: 208
xxx after update is x: -3.18021559715
y: -93.8366928101
theta: 4.80663299561
speed: 13.6754226685
id: 1
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion


g the n times spin:208

xxx before update is x: -63.3857688904
y: 3.71976232529
theta: 3.04877305031
speed: 13.8287210464
id: 0
t: 207
xxx after update is x: -64.1586990356
y: 4.04662704468
theta: 3.16066193581
speed: 13.5106630325
id: 0
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -64.1586990356
y: 4.04662704468
theta: 3.16066193581
speed: 13.5106630325
id: 0
t: 208
xxx after update is x: -64.382270813
y: 3.38719892502
theta: 2.99499988556
speed: 13.7828474045
id: 0
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.18021559715271, -93.8366928100586, 4.806632995605469, 13.675422668457031)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -64.382270813
y: 3.38719892502
theta: 2.99499988556
speed: 13.7828474045
id: 0
t: 209
xxx after update is x: -64.8104248047
y: 3.25813651085
theta: 3.10939741135
speed: 13.5398273468
id: 0
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:211


xxx before update is x: -64.8104248047
y: 3.25813651085
theta: 3.10939741135
speed: 13.5398273468
id: 0
t: 210
xxx after update is x: -65.8215103149
y: 3.16428112984
theta: 3.11766958237
speed: 14.1868953705
id: 0
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:212


xxx before update is x: -65.8215103149
y: 3.16428112984
theta: 3.11766958237
speed: 14.1868953705
id: 0
t: 211
xxx after update is x: -66.267074585
y: 3.22581934929
theta: 3.07427358627
speed: 13.6735906601
id: 0
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -66.267074585
y: 3.22581934929
theta: 3.07427358627
speed: 13.6735906601
id: 0
t: 212
xxx after update is x: -67.5829696655
y: 3.07561326027
theta: 3.17329239845
speed: 13.9588737488
id: 0
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3140077590942383, -97.07273864746094, 4.6222004890441895, 13.962860107421875)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:214


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.46666666667






self.maneuver_requested left
RELEASE,0,9.46666666667,(-67.58296966552734, 3.075613260269165, 3.173292398452759),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 9.46666666667
self.communication_details == 0
sending RELEASE,0,9.46666666667,(-67.58296966552734, 3.075613260269165, 3.173292398452759),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
xxx before update is x: -67.5829696655
y: 3.07561326027
thoing to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -3.18021559715
y: -93.8366928101
theta: 4.80663299561
speed: 13.6754226685
id: 1
t: 209
xxx after update is x: -3.26872229576
y: -94.6525192261
theta: 4.72919893265
speed: 13.9428796768
id: 1
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:211


xxx before update is x: -3.26872229576
y: -94.6525192261
theta: 4.72919893265
speed: 13.9428796768
id: 1
t: 210
xxx after update is x: -3.3797249794
y: -95.2415466309
theta: 4.76696968079
speed: 14.0034627914
id: 1
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:212


xxx before update is x: -3.3797249794
y: -95.2415466309
theta: 4.76696968079
speed: 14.0034627914
id: 1
t: 211
xxx after update is x: -3.34871530533
y: -96.282081604
theta: 4.7516283989
speed: 13.6966238022
id: 1
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.505599999999998]
222 self.state_dicts[msg.id][msg.t] is (-66.26707458496094, 3.2258193492889404, 3.0742735862731934, 13.673590660095215)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -3.34871530533
y: -96.282081604
theta: 4.7516283989
speed: 13.6966238022
id: 1
t: 212
xxx after update is x: -3.31400775909
y: -97.0727386475
theta: 4.62220048904
speed: 13.9628601074
id: 1
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.46666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:214


xxx before update is x: -3.31400775909
y: -97.0727386475
theta: 4.62220048904
speed: 13.9628601074
id: 1
t: 213
xxx after update is x: -2.4246840477
y: -97.2526550293
theta: 4.72332859039
speed: 14.2422800064
id: 1
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 9.51111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 9.51111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '9.46666666667', 'Position': ['(-67.58296966552734', ' 3.075613260269165', ' 3.173292398452759)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,9.46666666667,(-67.58296966552734, 3.075613260269165, 3.173292398452759),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.4246840477
y: -97.2526550293
theta: 4.72332859039
speed: 14.2422800064
id: 1
t: 214
xxx after update is x: -3.28823137283
y: -97.6866149902
theta: 4.8261218071
speed: 14.0730609894
id: 1
t: 215
maneuver_negoeta: 3.17329239845
speed: 13.9588737488
id: 0
t: 213
xxx after update is x: -67.6113052368
y: 3.39137673378
theta: 3.1385846138
speed: 13.5687456131
id: 0
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:215


xxx before update is x: -67.6113052368
y: 3.39137673378
theta: 3.1385846138
speed: 13.5687456131
id: 0
t: 214
xxx after update is x: -68.3578033447
y: 3.42075490952
theta: 3.15823316574
speed: 14.0352859497
id: 0
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:216


xxx before update is x: -68.3578033447
y: 3.42075490952
theta: 3.15823316574
speed: 14.0352859497
id: 0
t: 215
xxx after update is x: -68.792388916
y: 3.42558956146
theta: 3.05960679054
speed: 13.9706134796
id: 0
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:217


xxx before update is x: -68.792388916
y: 3.42558956146
theta: 3.05960679054
speed: 13.9706134796
id: 0
t: 216
xxx after update is x: -69.1211090088
y: 3.7202501297
theta: 3.25050163269
speed: 13.7263374329
id: 0
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:218


xxx before update is x: -69.1211090088
y: 3.7202501297
theta: 3.25050163269
speed: 13.7263374329
id: 0
t: 217
xxx after update is x: -70.0538711548
y: 3.16765570641
theta: 3.20885705948
speed: 13.5653085709
id: 0
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4376068115234375, -99.56394958496094, 4.683418273925781, 13.740896224975586)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -70.0538711548
y: 3.16765570641
theta: 3.20885705948
speed: 13.5653085709
id: 0
t: 218
xxx after update is x: -70.4663391113
y: 3.23305368423
theta: 3.04129719734
speed: 13.6088733673
id: 0
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:220


xxx before update is x: -70.4663391113
y: 3.23305368423
theta: 3.04129719734
speed: 13.6088733673
id: 0
t: 219
xxx after update is x: -71.872795105
y: 3.44555306435
theta: 3.33420300484
speed: 13.7841558456
id: 0
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -71.872795105
y: 3.44555306435
theta: 3.33420300484
speed: 13.7841558456
id: 0
t: 220
xxx after update is x: -72.0617294312
y: 3.06347870827
theta: 3.24717664719
speed: 13.997710228
id: 0
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.82222222222






self.maneuver_tiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:215




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:216


xxx before update is x: -3.28823137283
y: -97.6866149902
theta: 4.8261218071
speed: 14.0730609894
id: 1
t: 215
xxx after update is x: -3.53839731216
y: -97.9430541992
theta: 4.52163124084
speed: 14.3874092102
id: 1
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:217


xxx before update is x: -3.53839731216
y: -97.9430541992
theta: 4.52163124084
speed: 14.3874092102
id: 1
t: 216
xxx after update is x: -3.29090452194
y: -98.9143371582
theta: 4.92735815048
speed: 13.6946744919
id: 1
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.502399999999998]
222 self.state_dicts[msg.id][msg.t] is (-69.12110900878906, 3.720250129699707, 3.2505016326904297, 13.726337432861328)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:218


xxx before update is x: -3.29090452194
y: -98.9143371582
theta: 4.92735815048
speed: 13.6946744919
id: 1
t: 217
xxx after update is x: -3.43760681152
y: -99.563949585
theta: 4.68341827393
speed: 13.740896225
id: 1
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -3.43760681152
y: -99.563949585
theta: 4.68341827393
speed: 13.740896225
id: 1
t: 218
xxx after update is x: -3.61235976219
y: -100.365699768
theta: 4.77913665771
speed: 14.097574234
id: 1
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:220


xxx before update is x: -3.61235976219
y: -100.365699768
theta: 4.77913665771
speed: 14.097574234
id: 1
t: 219
xxx after update is x: -3.23765587807
y: -101.111373901
theta: 4.58864355087
speed: 13.6729240417
id: 1
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -3.23765587807
y: -101.111373901
theta: 4.58864355087
speed: 13.6729240417
id: 1
t: 220
xxx after update is x: -3.10967040062
y: -101.257789612
theta: 4.6545176506
speed: 13.9330587387
id: 1
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.82222222222






self.maneuver_requested None
aaaaaa
aaaaaabbbbb
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (-72.06172943115234, 3.063478708267212, 3.2471766471862793, 13.997710227966309)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
current clock is 9.82222222222




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 9.82222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '9.82222222222', 'Position': ['(-72.06172943115234', ' 3.063478708267212', ' 3.2471766471862793)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,9.82222222222,(-72.06172943115234, 3.063478708267212, 3.2471766471862793),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:222


xxx before update is x: -3.10967040062
y: -101.257789612
theta: 4.6545176506
speed: 13.9330587387
id: 1
t: 221
xxx after update is x: -3.4177672863
y: -101.79839325
theta: 4.689265728
speed: 13.7278842926
id: 1
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -3.4177672863
y: -101.79839325
theta: 4.689265728
speed: 13.7278842926
id: 1
t: 222
xxx after update is x: -3.30035185814
y: -102.487716675
theta: 4.91950082779
speed: 13.6289081573
id: 1
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.30035185814
y: -102.487716675
theta: 4.91950082779
speed: 13.6289081573
id: 1
t: 223
xxx after update is x: -3.3436524868
y: -103.586120605
theta: 4.70304107666
speed: 13.6191415787
id: 1
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:224


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:225


xxx before update is x: -3.3436524868
y: -103.586120605
theta: 4.70304107666
speed: 13.6191415787
id: 1
t: 224
xxx after update is x: -3.35116267204
y: -103.953689575
theta: 4.81829500198
speed: 13.6830844879
id: 1
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48639999999999795]
222 self.state_dicts[msg.id][msg.t] is (-74.9661865234375, 2.945812463760376, 3.168159008026123, 13.921435356140137)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:226


xxx before update is x: -3.35116267204
y: -103.953689575
theta: 4.81829500198
speed: 13.6830844879
id: 1
t: 225
xxx after update is x: -3.03544664383
y: -104.288162231
theta: 4.71824550629
speed: 13.7781171799
id: 1
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -3.03544664383
y: -104.288162231
theta: 4.71824550629
speed: 13.7781171799
id: 1
t: 226
xxx after update is x: -3.68582034111
y: -105.091331482
theta: 4.76279020309
speed: 14.0290613174
id: 1
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:228


requested left
RELEASE,0,9.82222222222,(-72.06172943115234, 3.063478708267212, 3.2471766471862793),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 9.82222222222
self.communication_details == 0
sending RELEASE,0,9.82222222222,(-72.06172943115234, 3.063478708267212, 3.2471766471862793),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:222


xxx before update is x: -72.0617294312
y: 3.06347870827
theta: 3.24717664719
speed: 13.997710228
id: 0
t: 221
xxx after update is x: -73.245552063
y: 3.18094682693
theta: 3.12837982178
speed: 13.7230825424
id: 0
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -73.245552063
y: 3.18094682693
theta: 3.12837982178
speed: 13.7230825424
id: 0
t: 222
xxx after update is x: -73.2071075439
y: 3.12957715988
theta: 2.8497364521
speed: 13.7146663666
id: 0
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.300351858139038, -102.48771667480469, 4.919500827789307, 13.628908157348633)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:224


xxx before update is x: -73.2071075439
y: 3.12957715988
theta: 2.8497364521
speed: 13.7146663666
id: 0
t: 223
xxx after update is x: -74.025894165
y: 2.40970563889
theta: 3.06365990639
speed: 13.9512462616
id: 0
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:225


xxx before update is x: -74.025894165
y: 2.40970563889
theta: 3.06365990639
speed: 13.9512462616
id: 0
t: 224
xxx after update is x: -74.9661865234
y: 2.94581246376
theta: 3.16815900803
speed: 13.9214353561
id: 0
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:226


xxx before update is x: -74.9661865234
y: 2.94581246376
theta: 3.16815900803
speed: 13.9214353561
id: 0
t: 225
xxx after update is x: -74.999130249
y: 2.91405582428
theta: 2.90632581711
speed: 13.8708019257
id: 0
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -74.999130249
y: 2.91405582428
theta: 2.90632581711
speed: 13.8708019257
id: 0
t: 226
xxx after update is x: -75.6984405518
y: 3.08645248413
theta: 3.00645542145
speed: 14.1646108627
id: 0
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -75.6984405518
y: 3.08645248413
theta: 3.00645542145
speed: 14.1646108627
id: 0
t: 227
xxx after update is x: -76.8003387451
y: 2.96971178055
theta: 3.15384817123
speed: 13.9880218506
id: 0
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion
lexxx before update is x: -3.68582034111
y: -105.091331482
theta: 4.76279020309
speed: 14.0290613174
id: 1
t: 227
xxx after update is x: -3.09476017952
y: -105.81703186
theta: 4.65427398682
speed: 13.9688310623
id: 1
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.1333333333






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -3.09476017952
y: -105.81703186
theta: 4.65427398682
speed: 13.9688310623
id: 1
t: 228
xxx after update is x: -3.02039194107
y: -107.073135376
theta: 4.55121231079
speed: 14.0150260925
id: 1
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4607999999999981]
Received -->>: 
current clock is 10.1777777778




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 10.1777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '10.1777777778', 'Position': ['(-76.92080688476562', ' 3.4072465896606445', ' 3.2127268314361572)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,10.1777777778,(-76.92080688476562, 3.4072465896606445, 3.2127268314361572),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




222 self.state_dicts[msg.id][msg.t] is (-76.92080688476562, 3.4072465896606445, 3.2127268314361572, 13.86678409576416)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.02039194107
y: -107.073135376
theta: 4.55121231079
speed: 14.0150260925
id: 1
t: 229
xxx after update is x: -3.08632969856
y: -107.145675659
theta: 4.83080863953
speed: 13.9737949371
id: 1
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:230




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:231


xxx before update is x: -3.08632969856
y: -107.145675659
theta: 4.83080863953
speed: 13.9737949371
id: 1
t: 230
xxx after update is x: -2.90077447891
y: -107.805213928
theta: 4.84076595306
speed: 13.7559099197
id: 1
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:232


xxx before update is x: -2.90077447891
y: -107.805213928
theta: 4.84076595306
speed: 13.7559099197
id: 1
t: 231
xxx after update is x: -3.1798722744
y: -108.336616516
theta: 4.86495685577
speed: 13.7988147736
id: 1
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -3.1798722744
y: -108.336616516
theta: 4.86495685577
speed: 13.7988147736
id: 1
t: 232
xxx after update is x: -3.18079733849
y: -108.422599792
theta: 4.70408010483
speed: 14.1032619476
id: 1
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
ave the update function 
in spin function, finish the n times spin:228




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -76.8003387451
y: 2.96971178055
theta: 3.15384817123
speed: 13.9880218506
id: 0
t: 228
xxx after update is x: -76.9208068848
y: 3.40724658966
theta: 3.21272683144
speed: 13.8667840958
id: 0
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0203919410705566, -107.07313537597656, 4.551212310791016, 14.015026092529297)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.1777777778






self.maneuver_requested left
RELEASE,0,10.1777777778,(-76.92080688476562, 3.4072465896606445, 3.2127268314361572),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 10.1777777778
self.communication_details == 0
sending RELEASE,0,10.1777777778,(-76.92080688476562, 3.4072465896606445, 3.2127268314361572),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -76.9208068848
y: 3.40724658966
theta: 3.21272683144
speed: 13.8667840958
id: 0
t: 229
xxx after update is x: -77.1516952515
y: 2.93292713165
theta: 3.05894780159
speed: 13.5055456161
id: 0
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:231


xxx before update is x: -77.1516952515
y: 2.93292713165
theta: 3.05894780159
speed: 13.5055456161
id: 0
t: 230
xxx after update is x: -77.9908981323
y: 3.72775316238
theta: 3.05796670914
speed: 13.6826915741
id: 0
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:232


xxx before update is x: -77.9908981323
y: 3.72775316238
theta: 3.05796670914
speed: 13.6826915741
id: 0
t: 231
xxx after update is x: -79.1706542969
y: 3.00357651711
theta: 2.93715238571
speed: 14.0671510696
id: 0
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -79.1706542969
y: 3.00357651711
theta: 2.93715238571
speed: 14.0671510696
id: 0
t: 232
xxx after update is x: -79.5552215576
y: 3.04363155365
theta: 3.11614608765
speed: 13.6854448318
id: 0
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1807973384857178, -108.42259979248047, 4.704080104827881, 14.103261947631836)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -79.5552215576
y: 3.04363155365
theta: 3.11614608765
speed: 13.6854448318
id: 0
t: 233
xxx after update is x: -79.7416381836
y: 3.52782392502
theta: 3.07108592987
speed: 13.8769512177
id: 0
t: 2aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5167999999999984]
222 self.state_dicts[msg.id][msg.t] is (-79.55522155761719, 3.0436315536499023, 3.1161460876464844, 13.685444831848145)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -3.18079733849
y: -108.422599792
theta: 4.70408010483
speed: 14.1032619476
id: 1
t: 233
xxx after update is x: -2.86647391319
y: -109.063400269
theta: 4.59474039078
speed: 13.5347394943
id: 1
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -2.86647391319
y: -109.063400269
theta: 4.59474039078
speed: 13.5347394943
id: 1
t: 234
xxx after update is x: -3.66294670105
y: -109.954963684
theta: 4.63735103607
speed: 13.9599227905
id: 1
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:236


xxx before update is x: -3.66294670105
y: -109.954963684
theta: 4.63735103607
speed: 13.9599227905
id: 1
t: 235
xxx after update is x: -3.28351831436
y: -110.656394958
theta: 4.55836486816
speed: 13.8169136047
id: 1
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.4888888889






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -3.28351831436
y: -110.656394958
theta: 4.55836486816
speed: 13.8169136047
id: 1
t: 236
xxx after update is x: -3.24788355827
y: -111.004989624
theta: 4.55400896072
speed: 13.8631715775
id: 1
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 10.5333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 10.5333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '10.5333333333', 'Position': ['(-82.22688293457031', ' 2.8776464462280273', ' 3.043057441711426)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,10.5333333333,(-82.22688293457031, 2.8776464462280273, 3.043057441711426),14,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -3.24788355827
y: -111.004989624
theta: 4.55400896072
speed: 13.8631715775
id: 1
t: 237
xxx after update is x: -3.46213054657
y: -112.274360657
theta: 4.69843149185
speed: 14.0432653427
id: 1
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4927999999999979]
222 self.state_dicts[msg.id][msg.t] is (-82.60778045654297, 3.6216158866882324, 3.0627145767211914, 14.069870948791504)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
si34
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -79.7416381836
y: 3.52782392502
theta: 3.07108592987
speed: 13.8769512177
id: 0
t: 234
xxx after update is x: -80.9266815186
y: 3.24887681007
theta: 3.18496704102
speed: 13.8689908981
id: 0
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:236


xxx before update is x: -80.9266815186
y: 3.24887681007
theta: 3.18496704102
speed: 13.8689908981
id: 0
t: 235
xxx after update is x: -81.5142059326
y: 3.32296442986
theta: 3.15124869347
speed: 13.7041568756
id: 0
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -81.5142059326
y: 3.32296442986
theta: 3.15124869347
speed: 13.7041568756
id: 0
t: 236
xxx after update is x: -82.2268829346
y: 2.87764644623
theta: 3.04305744171
speed: 14.019821167
id: 0
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.5333333333






self.maneuver_requested left
RELEASE,0,10.5333333333,(-82.22688293457031, 2.8776464462280273, 3.043057441711426),14,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 10.5333333333
self.communication_details == 0
sending RELEASE,0,10.5333333333,(-82.22688293457031, 2.8776464462280273, 3.043057441711426),14,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -82.2268829346
y: 2.87764644623
theta: 3.04305744171
speed: 14.019821167
id: 0
t: 237
xxx after update is x: -82.6077804565
y: 3.62161588669
theta: 3.06271457672
speed: 14.0698709488
id: 0
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.462130546569824, -112.27436065673828, 4.698431491851807, 14.043265342712402)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:239


xxx before update is x: -82.6077804565
y: 3.62161588669
theta: 3.06271457672
speed: 14.0698709488
id: 0
t: 238
xxx after update is x: -83.3598098755
y: 3.32626628876
theta: 3.1788725853
speed: 13.7435817719
id: 0
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:240


xxx before update is x: -83.3598098755
y: 3.32626628876
theta: 3.1788725853
speed: 13.7435817719
id: 0
t: 239
xxx after update is x: -83.1796646118
y: 3.01201415062
theta: 3.19076728821
speed: 13.6148605347
id: 0
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:241


xxx before update is m.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.46213054657
y: -112.274360657
theta: 4.69843149185
speed: 14.0432653427
id: 1
t: 238
xxx after update is x: -3.44871497154
y: -112.512695312
theta: 4.60640001297
speed: 13.9410114288
id: 1
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:239




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:240


xxx before update is x: -3.44871497154
y: -112.512695312
theta: 4.60640001297
speed: 13.9410114288
id: 1
t: 239
xxx after update is x: -3.59134554863
y: -113.373603821
theta: 4.75647068024
speed: 13.9364061356
id: 1
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:241


xxx before update is x: -3.59134554863
y: -113.373603821
theta: 4.75647068024
speed: 13.9364061356
id: 1
t: 240
xxx after update is x: -3.15713834763
y: -114.081565857
theta: 4.71771097183
speed: 13.8536052704
id: 1
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -3.15713834763
y: -114.081565857
theta: 4.71771097183
speed: 13.8536052704
id: 1
t: 241
xxx after update is x: -3.52585840225
y: -114.512504578
theta: 4.70686674118
speed: 13.7106742859
id: 1
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:243


xxx before update is x: -3.52585840225
y: -114.512504578
theta: 4.70686674118
speed: 13.7106742859
id: 1
t: 242
xxx after update is x: -3.42479419708
y: -115.27747345
theta: 4.67609071732
speed: 13.9747753143
id: 1
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 0.5439999999999992]
222 self.state_dicts[msg.id][msg.t] is (-86.04228210449219, 3.087001323699951, 3.190061569213867, 13.745401382446289)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:244


xxx before update is x: -3.42479419708
y: -115.27747345
theta: 4.67609071732
speed: 13.9747753143
id: 1
t: 243
xxx after update is x: -3.47804093361
y: -116.048377991
theta: 4.71006441116
speed: 13.8933134079
id: 1
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.8444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:245


xxx before update is x: -3.47804093361
y: -116.048377991
theta: 4.71006441116
speed: 13.8933134079
id: 1
t: 244
xxx after update is x: -3.27778673172
y: -116.861076355
theta: 4.63562250137
speed: 13.9965200424
id: 1
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 10.8888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 10.88888888x: -83.1796646118
y: 3.01201415062
theta: 3.19076728821
speed: 13.6148605347
id: 0
t: 240
xxx after update is x: -84.1294555664
y: 3.74011254311
theta: 3.0615465641
speed: 13.865436554
id: 0
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -84.1294555664
y: 3.74011254311
theta: 3.0615465641
speed: 13.865436554
id: 0
t: 241
xxx after update is x: -84.9281845093
y: 3.8074491024
theta: 3.0251660347
speed: 13.6962213516
id: 0
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:243


xxx before update is x: -84.9281845093
y: 3.8074491024
theta: 3.0251660347
speed: 13.6962213516
id: 0
t: 242
xxx after update is x: -86.0422821045
y: 3.0870013237
theta: 3.19006156921
speed: 13.7454013824
id: 0
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:244


xxx before update is x: -86.0422821045
y: 3.0870013237
theta: 3.19006156921
speed: 13.7454013824
id: 0
t: 243
xxx after update is x: -86.1555709839
y: 2.98029208183
theta: 3.06012558937
speed: 13.9103755951
id: 0
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.478040933609009, -116.04837799072266, 4.71006441116333, 13.89331340789795)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:245


xxx before update is x: -86.1555709839
y: 2.98029208183
theta: 3.06012558937
speed: 13.9103755951
id: 0
t: 244
xxx after update is x: -87.0362701416
y: 3.6921646595
theta: 3.23030996323
speed: 13.7859325409
id: 0
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.8888888889






self.maneuver_requested left
RELEASE,0,10.8888888889,(-87.03627014160156, 3.692164659500122, 3.2303099632263184),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 10.8888888889
self.communication_details == 0
sending RELEASE,0,10.8888888889,(-87.03627014160156, 3.692164659500122, 3.2303099632263184),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:246


xxx before update is x: -87.0362701416
y: 3.6921646595
theta: 3.23030996323
speed: 13.7859325409
id: 0
t: 245
xxx after update is x: -87.5544662476
y: 3.31764006615
theta: 3.07522273064
speed: 14.0500001907
id: 0
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -87.5544662476
y: 3.31764006615
theta: 3.07522273064
speed: 14.0500001907
id: 0
t: 246
xxx after update is x: -87.7203369141
y: 3.20224332809
theta: 3.09746098518
speed: 13.6878395081
id: 0
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update functio89
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '10.8888888889', 'Position': ['(-87.03627014160156', ' 3.692164659500122', ' 3.2303099632263184)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,10.8888888889,(-87.03627014160156, 3.692164659500122, 3.2303099632263184),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.27778673172
y: -116.861076355
theta: 4.63562250137
speed: 13.9965200424
id: 1
t: 245
xxx after update is x: -2.97297692299
y: -116.892051697
theta: 4.56319570541
speed: 13.4926738739
id: 1
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:246




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -2.97297692299
y: -116.892051697
theta: 4.56319570541
speed: 13.4926738739
id: 1
t: 246
xxx after update is x: -3.42834115028
y: -117.276390076
theta: 4.81469297409
speed: 13.7736816406
id: 1
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.481599999999998]
222 self.state_dicts[msg.id][msg.t] is (-87.7203369140625, 3.2022433280944824, 3.097460985183716, 13.68783950805664)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -3.42834115028
y: -117.276390076
theta: 4.81469297409
speed: 13.7736816406
id: 1
t: 247
xxx after update is x: -3.32370400429
y: -118.167984009
theta: 4.68114423752
speed: 13.8572416306
id: 1
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -3.32370400429
y: -118.167984009
theta: 4.68114423752
speed: 13.8572416306
id: 1
t: 248
xxx after update is x: -2.83017468452
y: -118.586204529
theta: 4.72517156601
speed: 13.6805267334
id: 1
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.0666666667






self.maneuver_requested None
Received -->>: 
current clock is 11.0666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 11.0666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '11.1111111111', 'Position': ['(-89.94515228271484', ' 3.49432635307312', ' 3.1951396465301514)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,11.1111111111,(-89.94515228271484, 3.49432635307312, 3.1951396465301514),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5087999999999981]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the updn
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -87.7203369141
y: 3.20224332809
theta: 3.09746098518
speed: 13.6878395081
id: 0
t: 247
xxx after update is x: -88.7493362427
y: 3.68772602081
theta: 3.27168774605
speed: 13.8739919662
id: 0
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -88.7493362427
y: 3.68772602081
theta: 3.27168774605
speed: 13.8739919662
id: 0
t: 248
xxx after update is x: -88.737197876
y: 3.3815882206
theta: 3.05591344833
speed: 13.9790124893
id: 0
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:250


xxx before update is x: -88.737197876
y: 3.3815882206
theta: 3.05591344833
speed: 13.9790124893
id: 0
t: 249
xxx after update is x: -89.9451522827
y: 3.49432635307
theta: 3.19513964653
speed: 13.9371366501
id: 0
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.1111111111






self.maneuver_requested left
RELEASE,0,11.1111111111,(-89.94515228271484, 3.49432635307312, 3.1951396465301514),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 11.1111111111
self.communication_details == 0
sending RELEASE,0,11.1111111111,(-89.94515228271484, 3.49432635307312, 3.1951396465301514),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.1111111111






self.maneuver_requested left
RELEASE,0,11.1111111111,(-89.94515228271484, 3.49432635307312, 3.1951396465301514),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 11.1111111111
self.communication_details == 0
sending RELEASE,0,11.1111111111,(-89.94515228271484, 3.49432635307312, 3.1951396465301514),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:251


ate function 
in spin function, finish the n times spin:250


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.0666666667






self.maneuver_requested None
Received -->>: 
current clock is 11.0666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 11.0666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '11.1111111111', 'Position': ['(-89.94515228271484', ' 3.49432635307312', ' 3.1951396465301514)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,11.1111111111,(-89.94515228271484, 3.49432635307312, 3.1951396465301514),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




... logging to /home/lu/.ros/log/aba3b7a0-02ac-11e9-ae37-000c291801fc/roslaunch-ubuntu-32903.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch
[1mstarted roslaunch server http://ubuntu:39323/[0m

SUMMARY
========

PARAMETERS
 * /enable_negotiator: True
 * /file_prefix: 
 * /nr_cars: 2
 * /plot: False
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /save: False

NODES
  /
    car0 (virtual_blinker/sim.py)
    car1 (virtual_blinker/sim.py)
    cloud (virtual_blinker/cloud.py)
    rviz (rviz/rviz)
    visualization (virtual_blinker/visualization.py)

auto-starting new master
[1mprocess[master]: started with pid [32921][0m
[1mROS_MASTER_URI=http://localhost:11311[0m
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch http://localhost:11311
[1msetting /run_id to aba3b7a0-02ac-11e9-ae37-000c291801fc[0m
[1mprocess[rosout-1]: started with pid [32935][0m
started core service [/rosout]
[1mprocess[visualization-2]: started with pid [32943][0m
[1mprocess[rviz-3]: started with pid [32953][0m
[1mprocess[car0-4]: started with pid [32954][0m
[1mprocess[car1-5]: started with pid [32955][0m
[1mprocess[cloud-6]: started with pid [32956][0m
[cloud-6] killing on exit
[car1-5] killing on exit
[car0-4] killing on exit
[rviz-3] killing on exit
[visualization-2] killing on exit
[rosout-1] killing on exit
[master] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
[1mdone[0m
