sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 1
s is car_state0
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.635492086411


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:1


222 self.state_dicts[msg.id][msg.t] is (3.814424991607666, -34.59687042236328, 1.75159752368927, 14.099637985229492)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7f2d50481998>
self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f2d504a1d40>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:2


maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9001)
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (2.9122071266174316, -33.43864440917969, 1.4161416292190552, 13.745205879211426)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:3




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:4




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:5


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: -3.05250692368
y: 102.162979126
theta: 4.73173141479
speed: 13.8559589386
id: 1
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: -3.05250692368
y: 102.162979126
theta: 4.73173141479
speed: 13.8559589386
id: 1
t: 5
xxx after update is x: -3.01659584045
y: 101.247070312
theta: 4.78216934204
speed: 13.8673038483
id: 1
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:7


xxx before update is x: -3.01659584045
y: 101.247070312
theta: 4.78216934204
speed: 13.8673038483
id: 1
t: 6
xxx after update is x: -3.43044638634
y: 100.217437744
theta: 4.76967525482
speed: 13.7107830048
id: 1
t: 7
maneuver_negotiatir.py finish the update agent state from rsim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 0
s is car_state1
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.772964954376
222 self.state_dicts[msg.id][msg.t] is (-3.2192039489746094, 104.62306213378906, 4.708226203918457, 13.94941234588623)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:1




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:2


222 self.state_dicts[msg.id][msg.t] is (-3.504568338394165, 103.65328979492188, 4.708714962005615, 14.313165664672852)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:3


self.intersection <utils.Intersection.Intersection instance at 0x7fbbc68996c8>


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:4


self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7fbbc68b7518>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:5


maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (-3.052506923675537, 102.16297912597656, 4.731731414794922, 13.855958938598633)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9000)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:6




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:7


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: 3.84258627892
y: -30.7087154388
theta: 1.57468318939
speed: 13.9015836716
id: 0
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: 3.84258627892
y: -30.7087154388
theta: 1.57468318939
speed: 13.9015836716
id: 0
t: 7
xxx after update is x: 2.93017053604
y: -29.9882736206
theta: 1.53152966499
speed: 14.1743402481
id: 0
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speos funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: -3.43044638634
y: 100.217437744
theta: 4.76967525482
speed: 13.7107830048
id: 1
t: 7
xxx after update is x: -2.90162968636
y: 100.166015625
theta: 4.70892763138
speed: 13.8646011353
id: 1
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: -2.90162968636
y: 100.166015625
theta: 4.70892763138
speed: 13.8646011353
id: 1
t: 8
xxx after update is x: -3.17251873016
y: 99.4732666016
theta: 4.63917064667
speed: 13.9489870071
id: 1
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4329523961370586, 0]
222 self.state_dicts[msg.id][msg.t] is (3.42647385597229, -29.21970558166504, 1.6634432077407837, 13.608094215393066)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.4






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: -3.17251873016
y: 99.4732666016
theta: 4.63917064667
speed: 13.9489870071
id: 1
t: 9
xxx after update is x: -3.07797217369
y: 98.529335022
theta: 4.76382446289
speed: 13.7504014969
id: 1
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: -3.07797217369
y: 98.529335022
theta: 4.76382446289
speed: 13.7504014969
id: 1
t: 10
xxx after update is x: -2.96570277214
y: 98.0061798096
theta: 4.90578317642
speed: 14.2419509888
id: 1
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.45748381540545857, 0]
222 self.state_dicts[msg.id][msg.t] is (2.804988384246826, -27.615520477294922, 1.7012864351272583, 14.32500171661377)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: -2.96570277214
y: 98.0061798096
theta: 4.90578317642
speed: 14.2419509888
id: 1
t: 11
xxx after update is x: -3.34655332565
y: 97.4356994629
theta: 4.67987537384
speed: 14.212972641
id: 1
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: -3.34655332565
y: 97.4356994629
theta: 4.67987537384
speed: 14.212972641
id: 1
t: 12
xxx after update is x: -3.08226728439
y: 96.9174118042
theta: 4.82820749283
speed: 13.8282880783
id: 1
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.08226728439
y: 96.9174118042
theta: 4.82820749283
speed: 13.8282880783
id: 1
t: 13
xxx after update is x: -3.5474421978
y: 96.5223922729
theta: 4.55193710327
speed: 13.8388147354
id: 1
t: 14
maneuver_negotiatir.py finish the update agent state froed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: 2.93017053604
y: -29.9882736206
theta: 1.53152966499
speed: 14.1743402481
id: 0
t: 8
xxx after update is x: 3.42647385597
y: -29.2197055817
theta: 1.66344320774
speed: 13.6080942154
id: 0
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.46154083785459527, 0.4028356392077039]
222 self.state_dicts[msg.id][msg.t] is (-3.172518730163574, 99.4732666015625, 4.6391706466674805, 13.948987007141113)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: 3.42647385597
y: -29.2197055817
theta: 1.66344320774
speed: 13.6080942154
id: 0
t: 9
xxx after update is x: 3.35259842873
y: -28.5504360199
theta: 1.59569597244
speed: 14.0786361694
id: 0
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: 3.35259842873
y: -28.5504360199
theta: 1.59569597244
speed: 14.0786361694
id: 0
t: 10
xxx after update is x: 2.80498838425
y: -27.6155204773
theta: 1.70128643513
speed: 14.3250017166
id: 0
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: 2.80498838425
y: -27.6155204773
theta: 1.70128643513
speed: 14.3250017166
id: 0
t: 11
xxx after update is x: 2.9307949543
y: -27.4824256897
theta: 1.54045951366
speed: 13.9034805298
id: 0
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.533333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: 2.9307949543
y: -27.4824256897
theta: 1.54045951366
speed: 13.9034805298
id: 0
t: 12
xxx after update is x: 3.20435905457
y: -27.3728523254
theta: 1.53608381748
speed: 13.668299675
id: 0
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: 3.20435905457
y: -27.3728523254
theta: 1.53608381748
speed: 13.668299675
id: 0
t: 13
xxx after update is x: 2.94862651825
y: -26.373872757
theta: 1.48100721836
speed: 13.4878768921
id: 0
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.39491326539863675, 0.35926429898532014]
222 self.state_dicts[msg.id][msg.t] is (-3.5474421977996826, 96.52239227294922, 4.551937103271484, 13.838814735412598)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: 2.94862651825
y: -26.373872757
theta: 1.48100721836
speed: 13.4878768921
id: 0
t: 14
xxx after update is x: 3.08075714111
y: -25.987827301
theta: 1.62498390675
speed: 13.1357088089
id: 0
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin funcm ros funtion
leave the update function 
in spin function, finish the n times spin:14




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: -3.5474421978
y: 96.5223922729
theta: 4.55193710327
speed: 13.8388147354
id: 1
t: 14
xxx after update is x: -3.37296438217
y: 95.8589019775
theta: 4.601354599
speed: 13.9321136475
id: 1
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4072153904107947, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0807571411132812, -25.98782730102539, 1.6249839067459106, 13.135708808898926)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: -3.37296438217
y: 95.8589019775
theta: 4.601354599
speed: 13.9321136475
id: 1
t: 15
xxx after update is x: -3.1607978344
y: 95.2837905884
theta: 4.71881580353
speed: 13.8962621689
id: 1
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.711111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: -3.1607978344
y: 95.2837905884
theta: 4.71881580353
speed: 13.8962621689
id: 1
t: 16
xxx after update is x: -3.53382968903
y: 94.0449676514
theta: 4.7218914032
speed: 13.6106939316
id: 1
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: -3.53382968903
y: 94.0449676514
theta: 4.7218914032
speed: 13.6106939316
id: 1
t: 17
xxx after update is x: -3.0744509697
y: 93.9944534302
theta: 4.64365005493
speed: 13.7479133606
id: 1
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.0744509697
y: 93.9944534302
theta: 4.64365005493
speed: 13.7479133606
id: 1
t: 18
xxx after update is x: -3.87798404694
y: 93.4334793091
theta: 4.73017072678
speed: 13.9507732391
id: 1
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:19




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: -3.87798404694
y: 93.4334793091
theta: 4.73017072678
speed: 13.9507732391
id: 1
t: 19
xxx after update is x: -3.56929731369
y: 92.5621109009
theta: 4.70749187469
speed: 13.4974985123
id: 1
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: -3.56929731369
y: 92.5621109009
theta: 4.70749187469
speed: 13.4974985123
id: 1
t: 20
xxx after update is x: -3.21849489212
y: 92.0405502319
theta: 4.75793123245
speed: 13.8684215546
id: 1
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.44747972667174485, 0]
222 self.state_dicts[msg.id][msg.t] is (3.134037733078003, -22.149629592895tion, finish the n times spin:16

xxx before update is x: 3.08075714111
y: -25.987827301
theta: 1.62498390675
speed: 13.1357088089
id: 0
t: 15
xxx after update is x: 3.05020260811
y: -24.8481884003
theta: 1.67090189457
speed: 13.4433393478
id: 0
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: 3.05020260811
y: -24.8481884003
theta: 1.67090189457
speed: 13.4433393478
id: 0
t: 16
xxx after update is x: 3.1576602459
y: -24.4511318207
theta: 1.49484276772
speed: 13.2132825851
id: 0
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: 3.1576602459
y: -24.4511318207
theta: 1.49484276772
speed: 13.2132825851
id: 0
t: 17
xxx after update is x: 3.27245116234
y: -24.210723877
theta: 1.4221175909
speed: 13.005197525
id: 0
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: 3.27245116234
y: -24.210723877
theta: 1.4221175909
speed: 13.005197525
id: 0
t: 18
xxx after update is x: 3.22133588791
y: -23.5519771576
theta: 1.58624231815
speed: 12.3272886276
id: 0
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: 3.22133588791
y: -23.5519771576
theta: 1.58624231815
speed: 12.3272886276
id: 0
t: 19
xxx after update is x: 3.17476725578
y: -22.8368148804
theta: 1.77710163593
speed: 12.3396492004
id: 0
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.888888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: 3.17476725578
y: -22.8368148804
theta: 1.77710163593
speed: 12.3396492004
id: 0
t: 20
xxx after update is x: 3.13403773308
y: -22.1496295929
theta: 1.68404340744
speed: 12.1863336563
id: 0
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: 3.13403773308
y: -22.1496295929
theta: 1.68404340744
speed: 12.1863336563
id: 0
t: 21
xxx after update is x: 3.58725833893
y: -21.9548168182
theta: 1.60102045536
speed: 11.9583625793
id: 0
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: 3.58725833893
y: -21.9548168182
theta: 1.60102045536
speed: 11.9583625793
id: 0
t: 22
xxx after update is x: 2.68310189247
y: -21.4460639954
theta: 1.63612067699
speed: 11.998290062
id: 0
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.32870436564465083, 0.33658528083202854]
222 self.state_dicts[msg.id][msg.t] is (-3.256469249725342, 90.69579315185547, 4.7335710525512695, 13.937323570251465)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update 508, 1.6840434074401855, 12.186333656311035)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: -3.21849489212
y: 92.0405502319
theta: 4.75793123245
speed: 13.8684215546
id: 1
t: 21
xxx after update is x: -3.40194129944
y: 91.5945358276
theta: 4.61704874039
speed: 14.0890760422
id: 1
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: -3.40194129944
y: 91.5945358276
theta: 4.61704874039
speed: 14.0890760422
id: 1
t: 22
xxx after update is x: -3.25646924973
y: 90.6957931519
theta: 4.73357105255
speed: 13.9373235703
id: 1
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: -3.25646924973
y: 90.6957931519
theta: 4.73357105255
speed: 13.9373235703
id: 1
t: 23
xxx after update is x: -3.38230848312
y: 90.560256958
theta: 4.76848316193
speed: 13.5889158249
id: 1
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.06666666667






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:25


maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: -3.38230848312
y: 90.560256958
theta: 4.76848316193
speed: 13.5889158249
id: 1
t: 24
xxx after update is x: -3.23587799072
y: 89.1529998779
theta: 4.84828948975
speed: 14.1064405441
id: 1
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3096736547645162, 0]
222 self.state_dicts[msg.id][msg.t] is (3.534862518310547, -20.11163902282715, 1.668518304824829, 11.259029388427734)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: -3.23587799072
y: 89.1529998779
theta: 4.84828948975
speed: 14.1064405441
id: 1
t: 25
xxx after update is x: -3.18943238258
y: 89.0852508545
theta: 4.78329229355
speed: 14.0126266479
id: 1
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 1.15555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 1.15555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '1.11111111111', 'Sender': '0', 'Time': '1.11111111111', 'IntendedCourse': 'left', 'Position': ['3.534862518310547', ' -20.11163902282715', ' 1.668518304824829'], 'TagID': '0', 'Type': 'GET', 'Velocity': '11'}
car 1 received GET,0,1.11111111111,(3.534862518310547, -20.11163902282715, 1.668518304824829),11,1,1.11111111111,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.0493827160493
sender travel direction is:  north
sender earliest entering time is:  1.73985823978
sefunction 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: 2.68310189247
y: -21.4460639954
theta: 1.63612067699
speed: 11.998290062
id: 0
t: 23
xxx after update is x: 3.03603100777
y: -20.7212905884
theta: 1.62128055096
speed: 11.4422111511
id: 0
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: 3.03603100777
y: -20.7212905884
theta: 1.62128055096
speed: 11.4422111511
id: 0
t: 24
xxx after update is x: 3.53486251831
y: -20.1116390228
theta: 1.66851830482
speed: 11.2590293884
id: 0
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:
initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$


maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 1
current clock is 1.11111111111
!!!!after check statue the self.tag is [1.1111111111111112, 0, 'left']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 1.11111111111

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [1.1111111111111112, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,1.11111111111,(3.534862518310547, -20.11163902282715, 1.668518304824829),11,1,1.11111111111,0,left
!!!!change state to get
GET,0,1.11111111111,(3.534862518310547, -20.11163902282715, 1.668518304824829),11,1,1.11111111111,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 1.11111111111
self.communication_details == 0
sending GET,0,1.11111111111,(3.534862518310547, -20.11163902282715, 1.668518304824829),11,1,1.11111111111,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
 self.man_init:
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: 3.53486251831
y: -20.1116390228
theta: 1.66851830482
speed: 11.2590293884
id: 0
t: 25
xxx after update is x: 3.40471386909
y: -19.8452777863
theta: 1.62054157257
speed: 10.9107341766
id: 0
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
finish try maneuver
Received -->>: 
current clock is 1.15555555556




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 1.15555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GRANT, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '1.15555555556', 'Position': ['(-3.3823084831237793', ' 90.56025695800781', ' 4.7684831619262695)'], 'Type': 'GRANT'}
car 0 received GRANT,1,1.15555555556,(-3.3823084831237793, 90.56025695800781, 4.7684831619262695),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [1.1111111111111112, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [1.1111111111111112, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the updatender last entering time is:  2.14845936964
sender last leaving time is:  4.33759893163
my entering time is:  5.92352077757
my leaving time is:  12.8776588391
i have left the intersection:  False
not conflicted because I enter after sender leaves
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, not conlicted






maneuver_negotiatir.py message_processing,!!dd342 change status to GRANT







self.grantID is 0
watch sender is true
GRANT,1,1.15555555556,(-3.3823084831237793, 90.56025695800781, 4.7684831619262695),13,1,0,0
added car with id 0 to grantlist. current grantlist:  {0: [5.933333333333334, 'left']}
maneuver_negotiatir.py start the update_agent_message
current clock is 1.15555555556
self.communication_details == 0
sending GRANT,1,1.15555555556,(-3.3823084831237793, 90.56025695800781, 4.7684831619262695),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
current clock is 1.15555555556




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: -3.18943238258
y: 89.0852508545
theta: 4.78329229355
speed: 14.0126266479
id: 1
t: 26
xxx after update is x: -3.07234597206
y: 87.9090957642
theta: 4.75524044037
speed: 13.795592308
id: 1
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: -3.07234597206
y: 87.9090957642
theta: 4.75524044037
speed: 13.795592308
id: 1
t: 27
xxx after update is x: -3.52027368546
y: 87.6216201782
theta: 4.79190397263
speed: 13.9945411682
id: 1
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: -3.52027368546
y: 87.6216201782
theta: 4.79190397263
speed: 13.9945411682
id: 1
t: 28
xxx after update is x: -3.00343394279
y: 86.682472229
theta: 4.81244087219
speed: 13.8118343353
id: 1
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
watchingg
estimated time finish =  4.51738299178
upper bound =  7.14845936964
risk is [0.35557749990684434, 0]
222 self.state_dicts[msg.id][msg.t] is (3.346374273300171, -17.874332427978516, 1.490742802619934, 10.496479034423828)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: -3.00343394279
y: 86.682472229
theta: 4.81244087219
speed: 13.8118343353
id: 1
t: 29
xxx after update is x: -3.09805488586
y: 86.7885360718
theta: 4.78004789352
speed: 13.9938621521
id: 1
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: -3.09805488586
y: 86.7885360718
theta: 4.78004789352
speed: 13.9938621521
id: 1
t: 30
xxx after update is x: -3.48267006874
y: 85.8371200562
theta: 4.79260635376
speed: 13.7220363617
id: 1
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the  function xxx before update is x: 3.40471386909
y: -19.8452777863
theta: 1.62054157257
speed: 10.9107341766
id: 0
t: 26
xxx after update is x: 3.36253404617
y: -19.4008522034
theta: 1.53958618641
speed: 11.0969295502
id: 0
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:27


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.2






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [1.2, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 1.2
(RATE*SLOWDOWN) is 22.5
MR[0] is 1.2
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
deny not in message
maneuver_negotiatir.py in the domaneuver function - start


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: 3.36253404617
y: -19.4008522034
theta: 1.53958618641
speed: 11.0969295502
id: 0
t: 27
xxx after update is x: 3.44877386093
y: -18.0642681122
theta: 1.51734793186
speed: 10.1875123978
id: 0
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion
added car with id 0 to grantlist. current grantlist:  {0: [5.622222222222222, 'left']}
Doing maneuver
maneuver_negotiatir.py finish the do maneuver function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: 3.44877386093
y: -18.0642681122
theta: 1.51734793186
speed: 10.1875123978
id: 0
t: 28
xxx after update is x: 3.3463742733
y: -17.874332428
theta: 1.49074280262
speed: 10.4964790344
id: 0
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: 3.3463742733
y: -17.874332428
theta: 1.49074280262
speed: 10.4964790344
id: 0
t: 29
xxx after update is x: 2.97570443153
y: -17.7295360565
theta: 1.46783745289
speed: 9.74032783508
id: 0
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.5058728294566587, 0.2944699246156382]
222 self.state_dicts[msg.id][msg.t] is (-3.098054885864258, 86.78853607177734, 4.78004789352417, 13.99386215209961)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: 2.97570443153
y: -17.7295360565
theta: 1.46783745289
speed: 9.74032783508
id: 0
t: 30
xxx after update is x: 2.88305735588
y: -17.6225757599
theta: 1.70646858215
speed: 10.0217733383
id: 0
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: 2.88305735588
y: -17.6225757599
theta: 1.70646858215
speed: 10.0217733383
id: 0
t: 31
xxx after update is x: 2.75524187088
y: -16.8427257538
theta: 1.46152114868
speed: 9.72988033295
id: 0
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:33


xxx before update function xxx before update is x: -3.48267006874
y: 85.8371200562
theta: 4.79260635376
speed: 13.7220363617
id: 1
t: 31
xxx after update is x: -3.24490022659
y: 84.9688568115
theta: 4.66871356964
speed: 14.1704082489
id: 1
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:32


aaaaaa
aaaaaabbbbb
watchingg
estimated time finish =  4.48621902832
upper bound =  7.14845936964
risk is [0.22065271695438946, 0]
222 self.state_dicts[msg.id][msg.t] is (2.755241870880127, -16.84272575378418, 1.4615211486816406, 9.729880332946777)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.42222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: -3.24490022659
y: 84.9688568115
theta: 4.66871356964
speed: 14.1704082489
id: 1
t: 32
xxx after update is x: -3.35300827026
y: 84.7217102051
theta: 4.79433727264
speed: 14.2726821899
id: 1
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: -3.35300827026
y: 84.7217102051
theta: 4.79433727264
speed: 14.2726821899
id: 1
t: 33
xxx after update is x: -3.18333768845
y: 84.2272720337
theta: 4.78795194626
speed: 14.1702871323
id: 1
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: -3.18333768845
y: 84.2272720337
theta: 4.78795194626
speed: 14.1702871323
id: 1
t: 34
xxx after update is x: -3.00047397614
y: 83.4547042847
theta: 4.80775642395
speed: 14.0568399429
id: 1
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: -3.00047397614
y: 83.4547042847
theta: 4.80775642395
speed: 14.0568399429
id: 1
t: 35
xxx after update is x: -2.51607990265
y: 82.312538147
theta: 4.63617277145
speed: 14.0831356049
id: 1
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
watchingg
estimated time finish =  4.51561855318
upper bound =  7.14845936964
risk is [0.18054239836756977, 0]
222 self.state_dicts[msg.id][msg.t] is (3.9648072719573975, -15.269309043884277, 1.4747103452682495, 8.505988121032715)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: -2.51607990265
y: 82.312538147
theta: 4.63617277145
speed: 14.0831356049
id: 1
t: 36
xxx after update is x: -3.50695633888
y: 82.0372238159
theta: 4.62084007263
speed: 14.2755975723
id: 1
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: -3.50695633888
y: 82.0372238159
theta: 4.62084007263
speupdate is x: 2.75524187088
y: -16.8427257538
theta: 1.46152114868
speed: 9.72988033295
id: 0
t: 32
xxx after update is x: 3.29069280624
y: -16.210811615
theta: 1.5405677557
speed: 9.29472541809
id: 0
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: 3.29069280624
y: -16.210811615
theta: 1.5405677557
speed: 9.29472541809
id: 0
t: 33
xxx after update is x: 3.08842682838
y: -16.0602741241
theta: 1.64517998695
speed: 9.20130062103
id: 0
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.8103659940002147, 0.2713912445642596]
222 self.state_dicts[msg.id][msg.t] is (-3.183337688446045, 84.2272720336914, 4.787951946258545, 14.170287132263184)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: 3.08842682838
y: -16.0602741241
theta: 1.64517998695
speed: 9.20130062103
id: 0
t: 34
xxx after update is x: 3.38276958466
y: -15.5377340317
theta: 1.4512834549
speed: 9.11631774902
id: 0
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.55555555556






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: 3.38276958466
y: -15.5377340317
theta: 1.4512834549
speed: 9.11631774902
id: 0
t: 35
xxx after update is x: 3.96480727196
y: -15.2693090439
theta: 1.47471034527
speed: 8.50598812103
id: 0
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: 3.96480727196
y: -15.2693090439
theta: 1.47471034527
speed: 8.50598812103
id: 0
t: 36
xxx after update is x: 3.17736244202
y: -15.1578674316
theta: 1.55698668957
speed: 9.03541469574
id: 0
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: 3.17736244202
y: -15.1578674316
theta: 1.55698668957
speed: 9.03541469574
id: 0
t: 37
xxx after update is x: 3.24160575867
y: -13.9488124847
theta: 1.44364738464
speed: 8.32396411896
id: 0
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: 3.24160575867
y: -13.9488124847
theta: 1.44364738464
speed: 8.32396411896
id: 0
t: 38
xxx after update is x: 3.67672896385
y: -13.7047529221
theta: 1.69688260555
speed: 8.04006767273
id: 0
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.6321029449889103, 0.2834201331640405]
222 self.state_dicts[msg.id][msg.t] is (-3.316429376602173, 80.35430145263672, 4.738795280456543, 13.961031913757324)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, fined: 14.2755975723
id: 1
t: 37
xxx after update is x: -3.4410469532
y: 80.9882736206
theta: 4.66342449188
speed: 14.5318145752
id: 1
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: -3.4410469532
y: 80.9882736206
theta: 4.66342449188
speed: 14.5318145752
id: 1
t: 38
xxx after update is x: -3.3164293766
y: 80.3543014526
theta: 4.73879528046
speed: 13.9610319138
id: 1
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
watchingg
estimated time finish =  4.52311448306
upper bound =  7.14845936964
risk is [0.41379019824179514, 0]
222 self.state_dicts[msg.id][msg.t] is (3.6767289638519287, -13.704752922058105, 1.6968826055526733, 8.040067672729492)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: -3.3164293766
y: 80.3543014526
theta: 4.73879528046
speed: 13.9610319138
id: 1
t: 39
xxx after update is x: -3.64999341965
y: 80.0006332397
theta: 4.78449201584
speed: 14.6005125046
id: 1
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.77777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.64999341965
y: 80.0006332397
theta: 4.78449201584
speed: 14.6005125046
id: 1
t: 40
xxx after update is x: -3.04025673866
y: 79.8427581787
theta: 4.68609380722
speed: 14.3237371445
id: 1
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:41




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: -3.04025673866
y: 79.8427581787
theta: 4.68609380722
speed: 14.3237371445
id: 1
t: 41
xxx after update is x: -3.27230787277
y: 78.3046112061
theta: 4.86110544205
speed: 15.0454273224
id: 1
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
watchingg
estimated time finish =  4.46897921558
upper bound =  7.14845936964
risk is [0.35864655237129206, 0]
222 self.state_dicts[msg.id][msg.t] is (2.843010425567627, -12.85965347290039, 1.5199642181396484, 7.396824836730957)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: -3.27230787277
y: 78.3046112061
theta: 4.86110544205
speed: 15.0454273224
id: 1
t: 42
xxx after update is x: -3.41173434258
y: 78.4199142456
theta: 4.61551523209
speed: 14.4668664932
id: 1
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.41173434258
y: 78.4199142456
theta: 4.61551523209
speed: 14.4668664932
id: 1
t: 43
xxx after update is x: -3.11541891098
y: 76.5964660645
theta: 4.84223175049
speed: 15.0440139771
id: 1
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the uish the n times spin:40

xxx before update is x: 3.67672896385
y: -13.7047529221
theta: 1.69688260555
speed: 8.04006767273
id: 0
t: 39
xxx after update is x: 3.18084096909
y: -13.4783782959
theta: 1.47569036484
speed: 7.70930337906
id: 0
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: 3.18084096909
y: -13.4783782959
theta: 1.47569036484
speed: 7.70930337906
id: 0
t: 40
xxx after update is x: 3.4770052433
y: -13.244301796
theta: 1.59878695011
speed: 7.55861282349
id: 0
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.4770052433
y: -13.244301796
theta: 1.59878695011
speed: 7.55861282349
id: 0
t: 41
xxx after update is x: 2.84301042557
y: -12.8596534729
theta: 1.51996421814
speed: 7.39682483673
id: 0
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:42




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: 2.84301042557
y: -12.8596534729
theta: 1.51996421814
speed: 7.39682483673
id: 0
t: 42
xxx after update is x: 3.07123279572
y: -13.0855007172
theta: 1.5594381094
speed: 7.11383104324
id: 0
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.91111111111






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:44




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.07123279572
y: -13.0855007172
theta: 1.5594381094
speed: 7.11383104324
id: 0
t: 43
xxx after update is x: 3.13095259666
y: -11.5596637726
theta: 1.45841407776
speed: 6.50354385376
id: 0
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.13095259666
y: -11.5596637726
theta: 1.45841407776
speed: 6.50354385376
id: 0
t: 44
xxx after update is x: 3.6004486084
y: -12.2257232666
theta: 1.55612885952
speed: 6.58671522141
id: 0
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:45




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: 3.6004486084
y: -12.2257232666
theta: 1.55612885952
speed: 6.58671522141
id: 0
t: 45
xxx after update is x: 3.61796236038
y: -11.116768837
theta: 1.45889127254
speed: 6.77483892441
id: 0
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.5422032073895263, 0.34263255614800514]
222 self.state_dicts[msg.id][msg.t] is (-3.069774627685547, 76.3880844116211, 4.822087287902832, 15.03472900390625)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: 3.61796236038
y: -11.116768837
theta: 1.45889127254
speed: 6.77483892441
id: 0
t: 46
xxx after update is x: 3.66787099838
y: -11.7156352997
theta: 1.5229998827
speed: 5.97555780411
id: 0
t: 47
maneuver_negotiatir.py finish thpdate function 
in spin function, finish the n times spin:44




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.11541891098
y: 76.5964660645
theta: 4.84223175049
speed: 15.0440139771
id: 1
t: 44
xxx after update is x: -3.13847398758
y: 76.1384048462
theta: 4.6585726738
speed: 14.8906555176
id: 1
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:45




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.13847398758
y: 76.1384048462
theta: 4.6585726738
speed: 14.8906555176
id: 1
t: 45
xxx after update is x: -3.06977462769
y: 76.3880844116
theta: 4.8220872879
speed: 15.0347290039
id: 1
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:46




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: -3.06977462769
y: 76.3880844116
theta: 4.8220872879
speed: 15.0347290039
id: 1
t: 46
xxx after update is x: -3.59633231163
y: 75.6853790283
theta: 4.73668575287
speed: 14.9474287033
id: 1
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.08888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: -3.59633231163
y: 75.6853790283
theta: 4.73668575287
speed: 14.9474287033
id: 1
t: 47
xxx after update is x: -3.19717001915
y: 74.9791259766
theta: 4.64106607437
speed: 15.0534381866
id: 1
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:49




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.19717001915
y: 74.9791259766
theta: 4.64106607437
speed: 15.0534381866
id: 1
t: 48
xxx after update is x: -2.85192394257
y: 73.6052017212
theta: 4.88108682632
speed: 15.022310257
id: 1
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:50




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: -2.85192394257
y: 73.6052017212
theta: 4.88108682632
speed: 15.022310257
id: 1
t: 49
xxx after update is x: -3.39452886581
y: 73.6143035889
theta: 4.7049036026
speed: 15.2536001205
id: 1
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.39452886581
y: 73.6143035889
theta: 4.7049036026
speed: 15.2536001205
id: 1
t: 50
xxx after update is x: -4.06372833252
y: 72.7255325317
theta: 4.60387229919
speed: 14.8388996124
id: 1
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -4.06372833252
y: 72.7255325317
theta: 4.60387229919
speed: 14.8388996124
id: 1
t: 51
xxx after update is x: -2.38956856728
y: 72.1943588257
theta: 4.71832609177
speed: 15.0583963394
id: 1
t: 52
maneue update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: 3.66787099838
y: -11.7156352997
theta: 1.5229998827
speed: 5.97555780411
id: 0
t: 47
xxx after update is x: 2.94968557358
y: -11.2007455826
theta: 1.51412284374
speed: 6.35326099396
id: 0
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.13333333333
targetspeed < self.speed:





self.maneuver_requested left

 self.man_init:
xxx before update is x: 2.94968557358
y: -11.2007455826
theta: 1.51412284374
speed: 6.35326099396
id: 0
t: 48
xxx after update is x: 3.16090011597
y: -10.0178050995
theta: 1.61605679989
speed: 5.44200325012
id: 0
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:49




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.16090011597
y: -10.0178050995
theta: 1.61605679989
speed: 5.44200325012
id: 0
t: 49
xxx after update is x: 3.11752748489
y: -10.0667057037
theta: 1.63583219051
speed: 5.46680164337
id: 0
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:50


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.11752748489
y: -10.0667057037
theta: 1.63583219051
speed: 5.46680164337
id: 0
t: 50
xxx after update is x: 2.66326880455
y: -9.29434299469
theta: 1.51609170437
speed: 5.204454422
id: 0
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:51




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.66326880455
y: -9.29434299469
theta: 1.51609170437
speed: 5.204454422
id: 0
t: 51
xxx after update is x: 3.19696450233
y: -9.60174465179
theta: 1.71566581726
speed: 5.40523338318
id: 0
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:52


aaaaaa
risk is [0.5316130193243566, 0.26752536100025553]
222 self.state_dicts[msg.id][msg.t] is (-2.389568567276001, 72.1943588256836, 4.718326091766357, 15.058396339416504)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:53


xxx before update is x: 3.19696450233
y: -9.60174465179
theta: 1.71566581726
speed: 5.40523338318
id: 0
t: 52
xxx after update is x: 3.45494604111
y: -9.63694095612
theta: 1.53382980824
speed: 5.29600524902
id: 0
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: 3.45494604111
y: -9.63694095612
theta: 1.53382980824
speed: 5.29600524902
id: 0
t: 53
xxx after update is x: 3.14304351807
y: -8.74171829224
theta: 1.71507024765
speed: 5.49321889877
id: 0
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spiver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:52




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.38956856728
y: 72.1943588257
theta: 4.71832609177
speed: 15.0583963394
id: 1
t: 52
xxx after update is x: -3.38790822029
y: 71.2799224854
theta: 4.67531394958
speed: 15.1876859665
id: 1
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:53


aaaaaa
aaaaaabbbbb
watchingg
estimated time finish =  4.49110055271
upper bound =  7.14845936964
risk is [0.20518597461026347, 0.0024640317608486083]


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.38790822029
y: 71.2799224854
theta: 4.67531394958
speed: 15.1876859665
id: 1
t: 53
xxx after update is x: -3.12978291512
y: 71.359664917
theta: 4.82361507416
speed: 15.0520057678
id: 1
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:54




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.12978291512
y: 71.359664917
theta: 4.82361507416
speed: 15.0520057678
id: 1
t: 54
xxx after update is x: -2.99297809601
y: 69.7571258545
theta: 4.65023517609
speed: 15.178812027
id: 1
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:55


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.44444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.99297809601
y: 69.7571258545
theta: 4.65023517609
speed: 15.178812027
id: 1
t: 55
xxx after update is x: -2.8011868
y: 69.6044006348
theta: 4.78695201874
speed: 15.0621442795
id: 1
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:56




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.8011868
y: 69.6044006348
theta: 4.78695201874
speed: 15.0621442795
id: 1
t: 56
xxx after update is x: -3.10074114799
y: 68.7344284058
theta: 4.67974948883
speed: 15.4008483887
id: 1
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:57




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.10074114799
y: 68.7344284058
theta: 4.67974948883
speed: 15.4008483887
id: 1
t: 57
xxx after update is x: -3.42893838882
y: 68.5443344116
theta: 4.76426029205
speed: 15.0336284637
id: 1
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:58




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.42893838882
y: 68.5443344116
theta: 4.76426029205
speed: 15.0336284637
id: 1
t: 58
xxx after update is x: -2.81455183029
y: 67.7528381348
theta: 4.92545986176
speed: 15.6379508972
id: 1
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:59




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxn:55

xxx before update is x: 3.14304351807
y: -8.74171829224
theta: 1.71507024765
speed: 5.49321889877
id: 0
t: 54
xxx after update is x: 3.63118743896
y: -8.56434726715
theta: 1.57833302021
speed: 5.53495121002
id: 0
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion

aaaaaa
risk is [0.26857597370946, 0.0014760723813718186]
222 self.state_dicts[msg.id][msg.t] is (-2.992978096008301, 69.75712585449219, 4.650235176086426, 15.178812026977539)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.63118743896
y: -8.56434726715
theta: 1.57833302021
speed: 5.53495121002
id: 0
t: 55
xxx after update is x: 3.56584572792
y: -8.33132076263
theta: 1.447701931
speed: 5.6144361496
id: 0
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:56




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.56584572792
y: -8.33132076263
theta: 1.447701931
speed: 5.6144361496
id: 0
t: 56
xxx after update is x: 3.80267953873
y: -7.98891496658
theta: 1.61699807644
speed: 5.09322595596
id: 0
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:57


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.53333333333






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [6.732987317688662e-05, 0.00014423301388362148]
222 self.state_dicts[msg.id][msg.t] is (-3.100741147994995, 68.73442840576172, 4.679749488830566, 15.400848388671875)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: 3.80267953873
y: -7.98891496658
theta: 1.61699807644
speed: 5.09322595596
id: 0
t: 57
xxx after update is x: 2.58386135101
y: -7.73539113998
theta: 1.56374907494
speed: 5.50354099274
id: 0
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.58386135101
y: -7.73539113998
theta: 1.56374907494
speed: 5.50354099274
id: 0
t: 58
xxx after update is x: 3.121342659
y: -7.76488113403
theta: 1.5790643692
speed: 5.75542926788
id: 0
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:59




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: 3.121342659
y: -7.76488113403
theta: 1.5790643692
speed: 5.75542926788
id: 0
t: 59
xxx after update is x: 3.58432650566
y: -7.70335626602
theta: 1.6369446516
speed: 5.7140827179
id: 0
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: 3.58432650566
y: -7.70335626602
theta: 1.6369446516
speed: 5.7140827179
id: 0
t: 60
xxx after update is x: 3.25478816032
y: -7.37500047684
theta: 1.60206472874
speed: 5.4527721405
id: 0
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.sx before update is x: -2.81455183029
y: 67.7528381348
theta: 4.92545986176
speed: 15.6379508972
id: 1
t: 59
xxx after update is x: -3.75739359856
y: 66.8124084473
theta: 4.84293937683
speed: 15.486661911
id: 1
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:60




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.75739359856
y: 66.8124084473
theta: 4.84293937683
speed: 15.486661911
id: 1
t: 60
xxx after update is x: -2.84547495842
y: 66.3295288086
theta: 4.76496887207
speed: 15.6444883347
id: 1
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:61




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.84547495842
y: 66.3295288086
theta: 4.76496887207
speed: 15.6444883347
id: 1
t: 61
xxx after update is x: -3.1685256958
y: 65.1668167114
theta: 4.6981010437
speed: 15.4650678635
id: 1
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:62




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.1685256958
y: 65.1668167114
theta: 4.6981010437
speed: 15.4650678635
id: 1
t: 62
xxx after update is x: -2.93386006355
y: 65.2570114136
theta: 4.79288625717
speed: 15.6170921326
id: 1
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:63


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.8






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.93386006355
y: 65.2570114136
theta: 4.79288625717
speed: 15.6170921326
id: 1
t: 63
xxx after update is x: -3.28731536865
y: 63.8079872131
theta: 4.7667889595
speed: 15.5108242035
id: 1
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:64




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: -3.28731536865
y: 63.8079872131
theta: 4.7667889595
speed: 15.5108242035
id: 1
t: 64
xxx after update is x: -3.23714447021
y: 63.4358978271
theta: 4.87749195099
speed: 15.5284223557
id: 1
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.23714447021
y: 63.4358978271
theta: 4.87749195099
speed: 15.5284223557
id: 1
t: 65
xxx after update is x: -3.45707201958
y: 62.3509941101
theta: 4.60714673996
speed: 15.6743717194
id: 1
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:66




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.45707201958
y: 62.3509941101
theta: 4.60714673996
speed: 15.6743717194
id: 1
t: 66
xxx after update is x: -2.90614533424
y: 61.9998168945
theta: 4.64700222015
speed: 15.4932947159
id: 1
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:67




going to the update function
sim.py in the sim.py update function 
mpeed:xxxxxxxxx
 self.man_init:
aaaaaa
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: 3.25478816032
y: -7.37500047684
theta: 1.60206472874
speed: 5.4527721405
id: 0
t: 61
xxx after update is x: 3.30338406563
y: -6.8407459259
theta: 1.70015025139
speed: 6.08104515076
id: 0
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0044471279117820105, 7.087963245880249e-06]
222 self.state_dicts[msg.id][msg.t] is (-3.1685256958007812, 65.16681671142578, 4.698101043701172, 15.465067863464355)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: 3.30338406563
y: -6.8407459259
theta: 1.70015025139
speed: 6.08104515076
id: 0
t: 62
xxx after update is x: 2.88278436661
y: -6.66447353363
theta: 1.43937218189
speed: 6.5849647522
id: 0
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.88278436661
y: -6.66447353363
theta: 1.43937218189
speed: 6.5849647522
id: 0
t: 63
xxx after update is x: 3.10941123962
y: -6.63596010208
theta: 1.65548622608
speed: 6.44607448578
id: 0
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:64




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:65


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.84444444444






self.maneuver_requested left
xxx before update is x: 3.10941123962
y: -6.63596010208
theta: 1.65548622608
speed: 6.44607448578
id: 0
t: 64
xxx after update is x: 3.41671991348
y: -6.18909549713
theta: 1.70689308643
speed: 6.69072389603
id: 0
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.41671991348
y: -6.18909549713
theta: 1.70689308643
speed: 6.69072389603
id: 0
t: 65
xxx after update is x: 3.1714720726
y: -5.12888431549
theta: 1.59873628616
speed: 6.69997215271
id: 0
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:66


aaaaaa
risk is [0.0063205153282789965, 1.969867520319097e-08]
222 self.state_dicts[msg.id][msg.t] is (-3.4570720195770264, 62.35099411010742, 4.607146739959717, 15.674371719360352)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.1714720726
y: -5.12888431549
theta: 1.59873628616
speed: 6.69997215271
id: 0
t: 66
xxx after update is x: 3.0745882988
y: -5.83049535751
theta: 1.5787166357
speed: 7.42513084412
id: 0
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:67


aaaaaa
risk is [3.810911616243184e-256, 0.0005944265611875857]
222 self.state_dicts[msg.id][msg.t] is (-2.9061453342437744, 61.99981689453125, 4.647002220153809, 15.493294715881348)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x:aximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.90614533424
y: 61.9998168945
theta: 4.64700222015
speed: 15.4932947159
id: 1
t: 67
xxx after update is x: -2.99850320816
y: 61.188835144
theta: 4.81441020966
speed: 15.866569519
id: 1
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:68




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.99850320816
y: 61.188835144
theta: 4.81441020966
speed: 15.866569519
id: 1
t: 68
xxx after update is x: -2.99476194382
y: 60.7472648621
theta: 4.80860900879
speed: 16.0445976257
id: 1
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:69




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.99476194382
y: 60.7472648621
theta: 4.80860900879
speed: 16.0445976257
id: 1
t: 69
xxx after update is x: -2.9231441021
y: 59.7077789307
theta: 4.60815620422
speed: 15.8755331039
id: 1
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:70


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.11111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.9231441021
y: 59.7077789307
theta: 4.60815620422
speed: 15.8755331039
id: 1
t: 70
xxx after update is x: -3.27507352829
y: 59.4761352539
theta: 4.72870254517
speed: 15.9125642776
id: 1
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:71




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.27507352829
y: 59.4761352539
theta: 4.72870254517
speed: 15.9125642776
id: 1
t: 71
xxx after update is x: -3.23940730095
y: 58.6686172485
theta: 4.71926736832
speed: 16.0235137939
id: 1
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:72




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.23940730095
y: 58.6686172485
theta: 4.71926736832
speed: 16.0235137939
id: 1
t: 72
xxx after update is x: -3.52893066406
y: 58.1697921753
theta: 4.58499670029
speed: 16.0483589172
id: 1
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:73




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: -3.52893066406
y: 58.1697921753
theta: 4.58499670029
speed: 16.0483589172
id: 1
t: 73
xxx after update is x: -2.60089159012
y: 56.8240394592
theta: 4.51155233383
speed: 15.948723793
id: 1
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.60089159012
y: 56.8240394592
theta: 4.51155233383
speed: 15.948723793
id: 1
t: 74
xxx after update is x: -3.29732322693
y: 56.3712844849
theta: 4.62393569946
speed: 16.0456409454
id: 1
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin 3.0745882988
y: -5.83049535751
theta: 1.5787166357
speed: 7.42513084412
id: 0
t: 67
xxx after update is x: 3.05133509636
y: -5.19750595093
theta: 1.65226912498
speed: 7.38241529465
id: 0
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:68




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: 3.05133509636
y: -5.19750595093
theta: 1.65226912498
speed: 7.38241529465
id: 0
t: 68
xxx after update is x: 2.65872240067
y: -4.39823675156
theta: 1.7705873251
speed: 7.47016191483
id: 0
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [2.0700160149583485e-304, 0.006479491176029728]
222 self.state_dicts[msg.id][msg.t] is (-2.9947619438171387, 60.74726486206055, 4.8086090087890625, 16.044597625732422)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: 2.65872240067
y: -4.39823675156
theta: 1.7705873251
speed: 7.47016191483
id: 0
t: 69
xxx after update is x: 3.41101765633
y: -4.38441848755
theta: 1.60508441925
speed: 8.08096122742
id: 0
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: 3.41101765633
y: -4.38441848755
theta: 1.60508441925
speed: 8.08096122742
id: 0
t: 70
xxx after update is x: 3.18022346497
y: -3.95389151573
theta: 1.85164248943
speed: 8.08170986176
id: 0
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.18022346497
y: -3.95389151573
theta: 1.85164248943
speed: 8.08170986176
id: 0
t: 71
xxx after update is x: 2.76157331467
y: -3.92603516579
theta: 1.98985397816
speed: 8.47160434723
id: 0
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:72


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.2






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.76157331467
y: -3.92603516579
theta: 1.98985397816
speed: 8.47160434723
id: 0
t: 72
xxx after update is x: 2.43816804886
y: -3.3532743454
theta: 2.18005228043
speed: 8.7155008316
id: 0
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:73


maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.0, 2.7985142535265104e-07]
222 self.state_dicts[msg.id][msg.t] is (-3.5289306640625, 58.16979217529297, 4.584996700286865, 16.048358917236328)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: 2.43816804886
y: -3.3532743454
theta: 2.18005228043
speed: 8.7155008316
id: 0
t: 73
xxx after update is x: 2.33914041519
y: -2.9425842762
theta: 2.02584886551
speed: 8.70203971863
id: 0
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update :75




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.29732322693
y: 56.3712844849
theta: 4.62393569946
speed: 16.0456409454
id: 1
t: 75
xxx after update is x: -3.55586147308
y: 55.4922027588
theta: 4.61677312851
speed: 16.2697410583
id: 1
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:76




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.55586147308
y: 55.4922027588
theta: 4.61677312851
speed: 16.2697410583
id: 1
t: 76
xxx after update is x: -3.49931669235
y: 54.58644104
theta: 4.74374675751
speed: 16.3661327362
id: 1
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:77




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.49931669235
y: 54.58644104
theta: 4.74374675751
speed: 16.3661327362
id: 1
t: 77
xxx after update is x: -3.66808342934
y: 54.06980896
theta: 4.91450214386
speed: 15.747795105
id: 1
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.46666666667






self.maneuver_requested None

in spin function, finish the n times spin:78


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.66808342934
y: 54.06980896
theta: 4.91450214386
speed: 15.747795105
id: 1
t: 78
xxx after update is x: -3.49941921234
y: 53.8794136047
theta: 4.76096534729
speed: 16.3640232086
id: 1
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:79




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.49941921234
y: 53.8794136047
theta: 4.76096534729
speed: 16.3640232086
id: 1
t: 79
xxx after update is x: -3.547519207
y: 52.6241264343
theta: 4.77078914642
speed: 16.2765903473
id: 1
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:80




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.547519207
y: 52.6241264343
theta: 4.77078914642
speed: 16.2765903473
id: 1
t: 80
xxx after update is x: -3.36632156372
y: 51.8700485229
theta: 4.43449211121
speed: 16.2909908295
id: 1
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:81




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.36632156372
y: 51.8700485229
theta: 4.43449211121
speed: 16.2909908295
id: 1
t: 81
xxx after update is x: -3.37441158295
y: 51.1219596863
theta: 4.75879812241
speed: 16.6056442261
id: 1
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:82




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.37441158295
y: 51.1219596863
theta: 4.75879812241
speed: 16.6056442261
id: 1
t: 82
xxx after update is x: -3.27445244789
y: 50.208480835
theta: 4.77712678909
speed: 16.6394062042
id: 1
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtionfunction 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.33914041519
y: -2.9425842762
theta: 2.02584886551
speed: 8.70203971863
id: 0
t: 74
xxx after update is x: 2.08630490303
y: -2.11024188995
theta: 2.09744787216
speed: 8.89459896088
id: 0
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:75




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: 2.08630490303
y: -2.11024188995
theta: 2.09744787216
speed: 8.89459896088
id: 0
t: 75
xxx after update is x: 1.96479547024
y: -2.06517124176
theta: 2.19777131081
speed: 9.06816864014
id: 0
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 6.7090871708791524e-09]
222 self.state_dicts[msg.id][msg.t] is (-3.555861473083496, 55.49220275878906, 4.6167731285095215, 16.26974105834961)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: 1.96479547024
y: -2.06517124176
theta: 2.19777131081
speed: 9.06816864014
id: 0
t: 76
xxx after update is x: 1.72649669647
y: -1.83514034748
theta: 2.00805544853
speed: 9.49667644501
id: 0
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:78


xxx before update is x: 1.72649669647
y: -1.83514034748
theta: 2.00805544853
speed: 9.49667644501
id: 0
t: 77
xxx after update is x: 1.63645112514
y: -1.56775915623
theta: 2.04734778404
speed: 9.5723361969
id: 0
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 1.63645112514
y: -1.56775915623
theta: 2.04734778404
speed: 9.5723361969
id: 0
t: 78
xxx after update is x: 1.89003348351
y: -1.35766530037
theta: 2.25979089737
speed: 9.85837364197
id: 0
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:79




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:80


xxx before update is x: 1.89003348351
y: -1.35766530037
theta: 2.25979089737
speed: 9.85837364197
id: 0
t: 79
xxx after update is x: 1.15937805176
y: -0.956364870071
theta: 2.22042632103
speed: 10.3014240265
id: 0
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.55555555556






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: 1.15937805176
y: -0.956364870071
theta: 2.22042632103
speed: 10.3014240265
id: 0
t: 80
xxx after update is x: 1.57553863525
y: 0.276122748852
theta: 2.28533577919
speed: 10.1839313507
id: 0
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 1.57553863525
y: 0.276122748852
theta: 2.28533577919
speed: 10.1839313507
id: 0
t: 81
xxx after update is x: 0.399014592171
y: -0
leave the update function 
in spin function, finish the n times spin:83




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.27445244789
y: 50.208480835
theta: 4.77712678909
speed: 16.6394062042
id: 1
t: 83
xxx after update is x: -3.17145991325
y: 49.633266449
theta: 4.77384090424
speed: 16.7922210693
id: 1
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:84




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.17145991325
y: 49.633266449
theta: 4.77384090424
speed: 16.7922210693
id: 1
t: 84
xxx after update is x: -3.52806544304
y: 48.7922325134
theta: 4.66237211227
speed: 16.3425369263
id: 1
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:85


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.77777777778






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: -3.52806544304
y: 48.7922325134
theta: 4.66237211227
speed: 16.3425369263
id: 1
t: 85
xxx after update is x: -3.6803150177
y: 47.6231231689
theta: 4.61935663223
speed: 16.5883083344
id: 1
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:86




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.6803150177
y: 47.6231231689
theta: 4.61935663223
speed: 16.5883083344
id: 1
t: 86
xxx after update is x: -3.58373403549
y: 47.2172355652
theta: 4.8333530426
speed: 16.5013961792
id: 1
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:87




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.58373403549
y: 47.2172355652
theta: 4.8333530426
speed: 16.5013961792
id: 1
t: 87
xxx after update is x: -3.38501429558
y: 47.5136909485
theta: 4.62252473831
speed: 16.6922988892
id: 1
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:88




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.38501429558
y: 47.5136909485
theta: 4.62252473831
speed: 16.6922988892
id: 1
t: 88
xxx after update is x: -2.72618436813
y: 46.1572799683
theta: 4.73443555832
speed: 16.6599807739
id: 1
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:89




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.72618436813
y: 46.1572799683
theta: 4.73443555832
speed: 16.6599807739
id: 1
t: 89
xxx after update is x: -3.2289648056
y: 45.5697517395
theta: 4.85396099091
speed: 16.9829998016
id: 1
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:90




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.2289648056
y: 45.5697517395
theta: 4.85396099091
speed: 16.9829998016
id: 1
t: 90
xxx after update is x: -3.80678129196
y: 44.6272354126
theta: 4.659304142
speed: 16.9779968262
id: 1
t:.382185548544
theta: 2.33173394203
speed: 10.4588575363
id: 0
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:82




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 0.399014592171
y: -0.382185548544
theta: 2.33173394203
speed: 10.4588575363
id: 0
t: 82
xxx after update is x: -0.283116877079
y: 1.26065480709
theta: 2.39348626137
speed: 10.9419851303
id: 0
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.014891999890902497]
222 self.state_dicts[msg.id][msg.t] is (-3.2744524478912354, 50.20848083496094, 4.777126789093018, 16.639406204223633)
if we have all measurements for a certain time-stamp perform risk estimation
leave the update function 
in spin function, finish the n times spin:83


self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: -0.283116877079
y: 1.26065480709
theta: 2.39348626137
speed: 10.9419851303
id: 0
t: 83
xxx after update is x: 0.233189374208
y: 0.454928308725
theta: 2.38460946083
speed: 11.086482048
id: 0
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: 0.233189374208
y: 0.454928308725
theta: 2.38460946083
speed: 11.086482048
id: 0
t: 84
xxx after update is x: -0.612658262253
y: 0.851297438145
theta: 2.58953332901
speed: 11.3477134705
id: 0
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -0.612658262253
y: 0.851297438145
theta: 2.58953332901
speed: 11.3477134705
id: 0
t: 85
xxx after update is x: -0.67123156786
y: 0.869901537895
theta: 2.5282292366
speed: 11.4455814362
id: 0
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:86




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: -0.67123156786
y: 0.869901537895
theta: 2.5282292366
speed: 11.4455814362
id: 0
t: 86
xxx after update is x: -1.54598736763
y: 1.06802916527
theta: 2.75442647934
speed: 11.4654912949
id: 0
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: -1.54598736763
y: 1.06802916527
theta: 2.75442647934
speed: 11.4654912949
id: 0
t: 87
xxx after update is x: -1.6084407568
y: 1.6271572113
theta: 2.67825984955
speed: 12.0327682495
id: 0
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0001624374568276676]
222 self.state_dicts[msg.id][msg.t] is (-3.385014295578003, 47.51369094848633, 4.622524738311768, 16.692298889160156)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.91111111111






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: -1.6084407568
y: 1.6271572113
thet 91
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:91




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:92


xxx before update is x: -3.80678129196
y: 44.6272354126
theta: 4.659304142
speed: 16.9779968262
id: 1
t: 91
xxx after update is x: -2.52920985222
y: 43.9241752625
theta: 4.79481840134
speed: 16.6283435822
id: 1
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.52920985222
y: 43.9241752625
theta: 4.79481840134
speed: 16.6283435822
id: 1
t: 92
xxx after update is x: -2.72121977806
y: 42.851146698
theta: 4.75146627426
speed: 16.8448200226
id: 1
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:93




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.72121977806
y: 42.851146698
theta: 4.75146627426
speed: 16.8448200226
id: 1
t: 93
xxx after update is x: -2.96499609947
y: 42.2699432373
theta: 4.62915372849
speed: 16.9976158142
id: 1
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:94


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.17777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.96499609947
y: 42.2699432373
theta: 4.62915372849
speed: 16.9976158142
id: 1
t: 94
xxx after update is x: -2.97072196007
y: 41.7165260315
theta: 4.63645172119
speed: 16.6464271545
id: 1
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:95




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.97072196007
y: 41.7165260315
theta: 4.63645172119
speed: 16.6464271545
id: 1
t: 95
xxx after update is x: -2.84410858154
y: 40.7526702881
theta: 4.85849809647
speed: 16.7703590393
id: 1
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:96




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.84410858154
y: 40.7526702881
theta: 4.85849809647
speed: 16.7703590393
id: 1
t: 96
xxx after update is x: -3.47998642921
y: 40.1472816467
theta: 4.93670940399
speed: 17.0610980988
id: 1
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:97




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.47998642921
y: 40.1472816467
theta: 4.93670940399
speed: 17.0610980988
id: 1
t: 97
xxx after update is x: -3.31619787216
y: 39.5497817993
theta: 4.42129182816
speed: 16.8092441559
id: 1
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:98




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.31619787216
y: 39.5497817993
theta: 4.42129182816
speed: 16.8092441559
id: 1
t: 98
xxx after update is x: -3a: 2.67825984955
speed: 12.0327682495
id: 0
t: 88
xxx after update is x: -2.98197102547
y: 1.72737240791
theta: 2.68355846405
speed: 11.9820318222
id: 0
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.98197102547
y: 1.72737240791
theta: 2.68355846405
speed: 11.9820318222
id: 0
t: 89
xxx after update is x: -2.76426482201
y: 2.05880951881
theta: 2.87871980667
speed: 12.193810463
id: 0
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:90




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: -2.76426482201
y: 2.05880951881
theta: 2.87871980667
speed: 12.193810463
id: 0
t: 90
xxx after update is x: -2.96924591064
y: 2.3066341877
theta: 2.8662238121
speed: 12.4576931
id: 0
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:92


xxx before update is x: -2.96924591064
y: 2.3066341877
theta: 2.8662238121
speed: 12.4576931
id: 0
t: 91
xxx after update is x: -4.3027715683
y: 2.9750494957
theta: 2.66125249863
speed: 12.5326957703
id: 0
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: -4.3027715683
y: 2.9750494957
theta: 2.66125249863
speed: 12.5326957703
id: 0
t: 92
xxx after update is x: -4.30963468552
y: 2.54582977295
theta: 2.79675078392
speed: 13.4366903305
id: 0
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: -4.30963468552
y: 2.54582977295
theta: 2.79675078392
speed: 13.4366903305
id: 0
t: 93
xxx after update is x: -5.43360328674
y: 3.67774128914
theta: 3.00402379036
speed: 13.3200531006
id: 0
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.013875474870371156]
222 self.state_dicts[msg.id][msg.t] is (-2.964996099472046, 42.26994323730469, 4.629153728485107, 16.997615814208984)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -5.43360328674
y: 3.67774128914
theta: 3.00402379036
speed: 13.3200531006
id: 0
t: 94
xxx after update is x: -5.08392286301
y: 2.97118210793
theta: 3.22262763977
speed: 13.1646947861
id: 0
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:95


aaaaaa


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: -5.08392286301
y: 2.97118210793
theta: 3.22262763977
speed: 13.1646947861
id: 0
t: 95
xxx after update is x: -6.24220323563
y: 3.56162953377
theta: 2.9904499054
speed: 13.8190746307
id: 0
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 0.0003745000626811668]
222 self.state_dicts[msg.id][msg.t] is (-2.8441085815429688, 40.75267028808594, 4.85849809646.6763882637
y: 38.6982727051
theta: 4.63193845749
speed: 17.0702209473
id: 1
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:99




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.6763882637
y: 38.6982727051
theta: 4.63193845749
speed: 17.0702209473
id: 1
t: 99
xxx after update is x: -3.26343774796
y: 37.9368209839
theta: 4.64487409592
speed: 17.4973583221
id: 1
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:100


Received -->>: 
current clock is 4.44444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.44444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '4.26666666667', 'Position': ['(-6.242203235626221', ' 3.5616295337677', ' 2.990449905395508)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.26666666667,(-6.242203235626221, 3.5616295337677, 2.990449905395508),13,1,1.11111111111,0 from  car0
status: 4




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.26343774796
y: 37.9368209839
theta: 4.64487409592
speed: 17.4973583221
id: 1
t: 100
xxx after update is x: -2.93466114998
y: 36.5372200012
theta: 4.68684959412
speed: 16.9568843842
id: 1
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:101


removed car with id 0 from grantlist. currentgrantlist: {}
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.48888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.93466114998
y: 36.5372200012
theta: 4.68684959412
speed: 16.9568843842
id: 1
t: 101
xxx after update is x: -3.8010661602
y: 36.677696228
theta: 4.832862854
speed: 17.3388843536
id: 1
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:102




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.8010661602
y: 36.677696228
theta: 4.832862854
speed: 17.3388843536
id: 1
t: 102
xxx after update is x: -3.21370124817
y: 35.7499237061
theta: 4.69462823868
speed: 17.427526474
id: 1
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:103




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.21370124817
y: 35.7499237061
theta: 4.69462823868
speed: 17.427526474
id: 1
t: 103
xxx after update is x: -2.57258367538
y: 34.8895797729
theta: 4.71516036987
speed: 17.0402793884
id: 1
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:104




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.57258367538
y: 34.8895797729
theta: 4.71516036987
speed: 17.0402793884
id: 1
t: 104
xxx after update is x: -3.94490671158
y: 33.9816207886
theta: 4.66182756424
speed: 17.335319519
id: 1
t: 105
maneuver_negotiati60645, 16.77035903930664)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.26666666667






self.maneuver_requested left
RELEASE,0,4.26666666667,(-6.242203235626221, 3.5616295337677, 2.990449905395508),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 4.26666666667
self.communication_details == 0
sending RELEASE,0,4.26666666667,(-6.242203235626221, 3.5616295337677, 2.990449905395508),13,1,1.11111111111,0 to car 1 from car 0


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:97


xxx before update is x: -6.24220323563
y: 3.56162953377
theta: 2.9904499054
speed: 13.8190746307
id: 0
t: 96
xxx after update is x: -6.74613285065
y: 3.38883519173
theta: 3.01298379898
speed: 13.7066602707
id: 0
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: -6.74613285065
y: 3.38883519173
theta: 3.01298379898
speed: 13.7066602707
id: 0
t: 97
xxx after update is x: -7.24146366119
y: 3.52208590508
theta: 2.96038222313
speed: 13.8939800262
id: 0
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -7.24146366119
y: 3.52208590508
theta: 2.96038222313
speed: 13.8939800262
id: 0
t: 98
xxx after update is x: -7.34259605408
y: 3.41566634178
theta: 3.24261188507
speed: 13.5183401108
id: 0
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:99


aaaaaa
risk is [0.0, 1.689218521509245e-08]
222 self.state_dicts[msg.id][msg.t] is (-3.6763882637023926, 38.698272705078125, 4.631938457489014, 17.070220947265625)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: -7.34259605408
y: 3.41566634178
theta: 3.24261188507
speed: 13.5183401108
id: 0
t: 99
xxx after update is x: -8.43914985657
y: 3.15486741066
theta: 3.11795902252
speed: 13.7140655518
id: 0
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion
removed car with id 0 from grantlist. currentgrantlist: {}


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: -8.43914985657
y: 3.15486741066
theta: 3.11795902252
speed: 13.7140655518
id: 0
t: 100
xxx after update is x: -8.78112506866
y: 3.29211759567
theta: 2.88335990906
speed: 14.0391511917
id: 0
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 7.86308772702165e-13]
222 self.state_dicts[msg.id][msg.t] is (-2.9346611499786377, 36.5372200012207, 4.686849594116211, 16.956884384155273)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: -8.78112506866
y: 3.29211759567
theta: 2.88335990906
speed: 14.0391511917
id: 0
t: 101
xxx after update is x: -10.204536438
y: 3.74776482582
theta: 3.24887657166
speed: 14.0875082016
id: 0
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: -10.204536438
y: 3.74776482582
theta: 3.24887657166
speed: 14.0875082016
id: 0
t: 102
xxx after update is x: -9.86526107788
y: 3.60930943489
theta: 3.0956799984
speed: 13.7363138199
id: 0
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 1.9516797559040653e-10]
222 self.state_dicts[msg.id][msg.t] is (-3.2137012481689453, 35.74992370605469, 4.6946282386779785, 17.427526473999023)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: -9.86526107788
y: 3.60930943489
theta: 3.0956799984
speed: 13.7363138199
id: 0
t: 103
xxx after update is x: -10.1708450317
y: 3.81317877769
theta: 3.15232539177
speed: 13.6826810837
id: 0
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.62222222222






self.maneuver_requested left
RELEASE,0,4.62222222222,(-10.170845031738281, 3.813178777694702, 3.152325391769409),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 4.62222222222
self.communication_details == 0
sending RELEASE,0,4.62222222222,(-10.170845031738281, 3.813178777694702, 3.152325391769409),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:105


xxx before update is x: -10.1708450317
y: 3.81317877769
theta: 3.15232539177
speed: 13.6826810837
id: 0
t: 104
xxx after update is x: -11.3531570435
y: 3.09968090057
theta: 3.20073437691
speed: 13.9578790665
id: 0
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: -11.3531570435
y: 3.09968090057
theta: 3.20073437691
speed: 13.9578790665
id: 0
t: 105
xxx after update is x: -11.5124149323
y: 3.65318703651
theta: 3.1590526104
speed: 14.0163478851
id: 0
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 7.772887061643798e-06]
222 self.state_dicts[msg.id][msg.t] is (-3.1022369861602783, 33.77407455444336, 4.775023937225342, 17.523162841796875)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: -11.5124149323
y: 3.65318703651
theta: 3.1590526104
speed: 14.0163478851
id: 0
t: 106
xxx after update is x: -13.2351055145
y: 2.94912934303
theta: 3.16052150726
speed: 14.4821310043
id: 0
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: -13.2351055145
y: r.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:105




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.94490671158
y: 33.9816207886
theta: 4.66182756424
speed: 17.335319519
id: 1
t: 105
xxx after update is x: -3.10223698616
y: 33.7740745544
theta: 4.77502393723
speed: 17.5231628418
id: 1
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:106




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.10223698616
y: 33.7740745544
theta: 4.77502393723
speed: 17.5231628418
id: 1
t: 106
xxx after update is x: -3.18426990509
y: 32.5498771667
theta: 4.68024206161
speed: 17.5565910339
id: 1
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:107




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.18426990509
y: 32.5498771667
theta: 4.68024206161
speed: 17.5565910339
id: 1
t: 107
xxx after update is x: -3.31309914589
y: 31.6754608154
theta: 4.64536571503
speed: 17.430223465
id: 1
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:108


Received -->>: 
current clock is 4.8




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.8
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '4.62222222222', 'Position': ['(-10.170845031738281', ' 3.813178777694702', ' 3.152325391769409)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.62222222222,(-10.170845031738281, 3.813178777694702, 3.152325391769409),13,1,1.11111111111,0 from  car0
status: 4




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.31309914589
y: 31.6754608154
theta: 4.64536571503
speed: 17.430223465
id: 1
t: 108
xxx after update is x: -3.50544977188
y: 30.6639862061
theta: 4.72494840622
speed: 17.3580150604
id: 1
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:109


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.84444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.50544977188
y: 30.6639862061
theta: 4.72494840622
speed: 17.3580150604
id: 1
t: 109
xxx after update is x: -4.02582788467
y: 30.0625419617
theta: 4.7172164917
speed: 17.5111179352
id: 1
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:110




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -4.02582788467
y: 30.0625419617
theta: 4.7172164917
speed: 17.5111179352
id: 1
t: 110
xxx after update is x: -3.11039161682
y: 29.520029068
theta: 4.77670145035
speed: 17.6185092926
id: 1
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:111




going to the update function
sim.py i2.94912934303
theta: 3.16052150726
speed: 14.4821310043
id: 0
t: 107
xxx after update is x: -13.2064847946
y: 2.92488431931
theta: 3.31304574013
speed: 13.8593950272
id: 0
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 8.259166356079335e-07]
222 self.state_dicts[msg.id][msg.t] is (-3.3130991458892822, 31.675460815429688, 4.6453657150268555, 17.43022346496582)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: -13.2064847946
y: 2.92488431931
theta: 3.31304574013
speed: 13.8593950272
id: 0
t: 108
xxx after update is x: -14.1839332581
y: 3.32765245438
theta: 3.22993540764
speed: 13.9505558014
id: 0
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -14.1839332581
y: 3.32765245438
theta: 3.22993540764
speed: 13.9505558014
id: 0
t: 109
xxx after update is x: -14.6195964813
y: 3.50473165512
theta: 3.031863451
speed: 13.8416538239
id: 0
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:110


aaaaaa
risk is [0.0, 3.7539595523838814e-07]
222 self.state_dicts[msg.id][msg.t] is (-4.025827884674072, 30.062541961669922, 4.717216491699219, 17.511117935180664)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:111


xxx before update is x: -14.6195964813
y: 3.50473165512
theta: 3.031863451
speed: 13.8416538239
id: 0
t: 110
xxx after update is x: -15.2788448334
y: 3.37225723267
theta: 3.11982035637
speed: 13.6028165817
id: 0
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:112


xxx before update is x: -15.2788448334
y: 3.37225723267
theta: 3.11982035637
speed: 13.6028165817
id: 0
t: 111
xxx after update is x: -15.6953001022
y: 3.47471237183
theta: 3.06982779503
speed: 14.2098445892
id: 0
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.97777777778






self.maneuver_requested left
RELEASE,0,4.97777777778,(-15.695300102233887, 3.474712371826172, 3.0698277950286865),14,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 4.97777777778
self.communication_details == 0
sending RELEASE,0,4.97777777778,(-15.695300102233887, 3.474712371826172, 3.0698277950286865),14,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:113


xxx before update is x: -15.6953001022
y: 3.47471237183
theta: 3.06982779503
speed: 14.2098445892
id: 0
t: 112
xxx after update is x: -16.2403392792
y: 3.68753814697
theta: 3.1260099411
speed: 14.0326404572
id: 0
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 3.2516699774294126e-05]
222 self.state_dicts[msg.id][msg.t] is (-3.2141709327697754, 27.570253372192383, 4.741089344024658, 17.97413444519043)
if we have all measurements for a certain tin the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.11039161682
y: 29.520029068
theta: 4.77670145035
speed: 17.6185092926
id: 1
t: 111
xxx after update is x: -3.52809238434
y: 28.9694442749
theta: 4.66480970383
speed: 17.647813797
id: 1
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:112




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.52809238434
y: 28.9694442749
theta: 4.66480970383
speed: 17.647813797
id: 1
t: 112
xxx after update is x: -3.21417093277
y: 27.5702533722
theta: 4.74108934402
speed: 17.9741344452
id: 1
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:113




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.21417093277
y: 27.5702533722
theta: 4.74108934402
speed: 17.9741344452
id: 1
t: 113
xxx after update is x: -3.18706607819
y: 26.7868156433
theta: 4.76111888885
speed: 18.1464233398
id: 1
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:114


maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
!!! change status from grant to normal
current clock is 5.06666666667
!!!threading.Timer
tgarnt done


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.18706607819
y: 26.7868156433
theta: 4.76111888885
speed: 18.1464233398
id: 1
t: 114
xxx after update is x: -2.97888827324
y: 26.4794368744
theta: 4.75133228302
speed: 17.9323883057
id: 1
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:115


Received -->>: 
current clock is 5.11111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 5.11111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '4.97777777778', 'Position': ['(-15.695300102233887', ' 3.474712371826172', ' 3.0698277950286865)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.97777777778,(-15.695300102233887, 3.474712371826172, 3.0698277950286865),14,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.97888827324
y: 26.4794368744
theta: 4.75133228302
speed: 17.9323883057
id: 1
t: 115
xxx after update is x: -3.17166686058
y: 25.6548366547
theta: 4.33472251892
speed: 17.8160095215
id: 1
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:116


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.15555555556






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.17166686058
y: 25.6548366547
theta: 4.33472251892
speed: 17.8160095215
id: 1
t: 116
xxx after update is x: -3.07390880585
y: 24.8676834106
theta: 4.74472570419
speed: 17.7498989105
id: 1
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:117


maneuver_negotiatir.py in the try maneuver function update -. sme-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: -16.2403392792
y: 3.68753814697
theta: 3.1260099411
speed: 14.0326404572
id: 0
t: 113
xxx after update is x: -16.9130592346
y: 3.61413693428
theta: 3.2427842617
speed: 13.969042778
id: 0
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:115


xxx before update is x: -16.9130592346
y: 3.61413693428
theta: 3.2427842617
speed: 13.969042778
id: 0
t: 114
xxx after update is x: -17.7691364288
y: 3.98890757561
theta: 3.0646238327
speed: 13.9818525314
id: 0
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.08683576527344257]
222 self.state_dicts[msg.id][msg.t] is (-2.9788882732391357, 26.47943687438965, 4.7513322830200195, 17.932388305664062)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: -17.7691364288
y: 3.98890757561
theta: 3.0646238327
speed: 13.9818525314
id: 0
t: 115
xxx after update is x: -18.0965805054
y: 3.72085905075
theta: 3.2309923172
speed: 13.7178125381
id: 0
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: -18.0965805054
y: 3.72085905075
theta: 3.2309923172
speed: 13.7178125381
id: 0
t: 116
xxx after update is x: -18.4469337463
y: 3.34727787971
theta: 3.18459630013
speed: 14.0757751465
id: 0
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 1.8454057913591166e-10]
222 self.state_dicts[msg.id][msg.t] is (-3.073908805847168, 24.86768341064453, 4.744725704193115, 17.74989891052246)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: -18.4469337463
y: 3.34727787971
theta: 3.18459630013
speed: 14.0757751465
id: 0
t: 117
xxx after update is x: -19.4058761597
y: 3.2609038353
theta: 3.05607700348
speed: 13.6119318008
id: 0
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: -19.4058761597
y: 3.2609038353
theta: 3.05607700348
speed: 13.6119318008
id: 0
t: 118
xxx after update is x: -19.5080490112
y: 3.40152525902
theta: 3.13556647301
speed: 13.6328687668
id: 0
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0018267873493855577]
222 self.state_dicts[msg.id][msg.t] is (-3.373380422592163, 23.205320358276367, 4.918141841888428, 17.60153579711914)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.28888888889






self.maneuver_requested left
RELEASE,0,5.28888888889,(-19.50804901123047, 3.4015252590179443, 3.13556647finish


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.07390880585
y: 24.8676834106
theta: 4.74472570419
speed: 17.7498989105
id: 1
t: 117
xxx after update is x: -3.26733183861
y: 23.7980880737
theta: 4.67402791977
speed: 18.0947685242
id: 1
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:118




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.26733183861
y: 23.7980880737
theta: 4.67402791977
speed: 18.0947685242
id: 1
t: 118
xxx after update is x: -3.37338042259
y: 23.2053203583
theta: 4.91814184189
speed: 17.6015357971
id: 1
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:119




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.37338042259
y: 23.2053203583
theta: 4.91814184189
speed: 17.6015357971
id: 1
t: 119
xxx after update is x: -3.88781929016
y: 22.4270992279
theta: 4.70563364029
speed: 18.2242336273
id: 1
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:120




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.88781929016
y: 22.4270992279
theta: 4.70563364029
speed: 18.2242336273
id: 1
t: 120
xxx after update is x: -3.13326644897
y: 21.7223377228
theta: 4.73425531387
speed: 18.0027809143
id: 1
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:121




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.13326644897
y: 21.7223377228
theta: 4.73425531387
speed: 18.0027809143
id: 1
t: 121
xxx after update is x: -3.57858085632
y: 20.3919124603
theta: 4.78332138062
speed: 18.000951767
id: 1
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:122




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.57858085632
y: 20.3919124603
theta: 4.78332138062
speed: 18.000951767
id: 1
t: 122
xxx after update is x: -3.28887462616
y: 20.0381374359
theta: 4.8618183136
speed: 18.3519248962
id: 1
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:123


Received -->>: 
current clock is 5.46666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 5.46666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '5.28888888889', 'Position': ['(-19.50804901123047', ' 3.4015252590179443', ' 3.135566473007202)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,5.28888888889,(-19.50804901123047, 3.4015252590179443, 3.135566473007202),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.28887462616
y: 20.0381374359
theta: 4.8618183136
speed: 18.3519248962
id: 1
t: 123
xxx after update is x: -3.06032013893
y: 19.0625
theta: 4.49469947815
speed: 18.4135379791
id: 13007202),13,1,1.11111111111,0

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:120


xxx before update is x: -19.5080490112
y: 3.40152525902
theta: 3.13556647301
speed: 13.6328687668
id: 0
t: 119
xxx after update is x: -21.1636009216
y: 3.23797750473
theta: 3.21641016006
speed: 13.9501142502
id: 0
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion

maneuver_negotiatir.py start the update_agent_message
current clock is 5.33333333333
self.communication_details == 0
sending RELEASE,0,5.28888888889,(-19.50804901123047, 3.4015252590179443, 3.135566473007202),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:121




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: -21.1636009216
y: 3.23797750473
theta: 3.21641016006
speed: 13.9501142502
id: 0
t: 120
xxx after update is x: -21.859872818
y: 3.42360711098
theta: 3.31819605827
speed: 13.7088451385
id: 0
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -21.859872818
y: 3.42360711098
theta: 3.31819605827
speed: 13.7088451385
id: 0
t: 121
xxx after update is x: -21.972114563
y: 3.14057707787
theta: 3.14670801163
speed: 13.6269044876
id: 0
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -21.972114563
y: 3.14057707787
theta: 3.14670801163
speed: 13.6269044876
id: 0
t: 122
xxx after update is x: -22.5365524292
y: 2.9383020401
theta: 3.30358433723
speed: 13.9958133698
id: 0
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:123




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: -22.5365524292
y: 2.9383020401
theta: 3.30358433723
speed: 13.9958133698
id: 0
t: 123
xxx after update is x: -23.2567825317
y: 3.60822892189
theta: 3.16950798035
speed: 14.3451976776
id: 0
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:125


xxx before update is x: -23.2567825317
y: 3.60822892189
theta: 3.16950798035
speed: 14.3451976776
id: 0
t: 124
xxx after update is x: -23.821018219
y: 3.46226549149
theta: 3.05247282982
speed: 13.9408044815
id: 0
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 2.6322010646509275e-06]
222 self.state_dicts[msg.id][msg.t] is (-3.2253551483154297, 15.41888427734375, 4.65779972076416, 18.635761260986328)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: -23.821018219
y: 3.46226549149
theta: 3.05247282982
speed: 13.9408044815
id: 0
t: 125
xxx after update is x: -24.3059902191
y: 3.27181768417
theta: 3.07520604134
speed: 13.8282022476
id: 0
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
t: 124222 self.state_dicts[msg.id][msg.t] is (-23.25678253173828, 3.608228921890259, 3.1695079803466797, 14.345197677612305)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
leave the update function 
in spin function, finish the n times spin:124




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:125


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.51111111111






self.maneuver_requested None

maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.06032013893
y: 19.0625
theta: 4.49469947815
speed: 18.4135379791
id: 1
t: 124
xxx after update is x: -3.22535514832
y: 15.4188842773
theta: 4.65779972076
speed: 18.635761261
id: 1
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: -3.22535514832
y: 15.4188842773
theta: 4.65779972076
speed: 18.635761261
id: 1
t: 125
xxx after update is x: -2.96135425568
y: 14.1604166031
theta: 4.81302642822
speed: 18.7009601593
id: 1
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 5.6




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 5.6
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '5.64444444444', 'Position': ['(-24.97298240661621', ' 2.9074792861938477', ' 3.172823190689087)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,5.64444444444,(-24.97298240661621, 2.9074792861938477, 3.172823190689087),14,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: -2.96135425568
y: 14.1604166031
theta: 4.81302642822
speed: 18.7009601593
id: 1
t: 126
xxx after update is x: -3.35527729988
y: 13.6836576462
theta: 4.70501279831
speed: 18.7049198151
id: 1
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: -3.35527729988
y: 13.6836576462
theta: 4.70501279831
speed: 18.7049198151
id: 1
t: 127
xxx after update is x: -3.23207449913
y: 12.7296638489
theta: 4.81586694717
speed: 18.4642791748
id: 1
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.23207449913
y: 12.7296638489
theta: 4.81586694717
speed: 18.4642791748
id: 1
t: 128
xxx after update is x: -3.30247020721
y: 11.3983564377
theta: 4.73000431061
speed: 18.3923969269
id: 1
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:129




going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: -3.30247020721
y: 11.3983564


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: -24.3059902191
y: 3.27181768417
theta: 3.07520604134
speed: 13.8282022476
id: 0
t: 126
xxx after update is x: -24.9729824066
y: 2.90747928619
theta: 3.17282319069
speed: 14.3325052261
id: 0
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.64444444444






self.maneuver_requested left
RELEASE,0,5.64444444444,(-24.97298240661621, 2.9074792861938477, 3.172823190689087),14,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 5.64444444444
self.communication_details == 0
sending RELEASE,0,5.64444444444,(-24.97298240661621, 2.9074792861938477, 3.172823190689087),14,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: -24.9729824066
y: 2.90747928619
theta: 3.17282319069
speed: 14.3325052261
id: 0
t: 127
xxx after update is x: -25.4896602631
y: 2.94979381561
theta: 3.30411982536
speed: 14.226647377
id: 0
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:129


xxx before update is x: -25.4896602631
y: 2.94979381561
theta: 3.30411982536
speed: 14.226647377
id: 0
t: 128
xxx after update is x: -26.0416164398
y: 3.5634868145
theta: 3.2141866684
speed: 13.8523607254
id: 0
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: -26.0416164398
y: 3.5634868145
theta: 3.2141866684
speed: 13.8523607254
id: 0
t: 129
xxx after update is x: -27.0297756195
y: 2.87789130211
theta: 3.29716801643
speed: 14.3810186386
id: 0
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:131


xxx before update is x: -27.0297756195
y: 2.87789130211
theta: 3.29716801643
speed: 14.3810186386
id: 0
t: 130
xxx after update is x: -28.2144889832
y: 2.56060385704
theta: 3.13705515862
speed: 13.7903413773
id: 0
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: -28.2144889832
y: 2.56060385704
theta: 3.13705515862
speed: 13.7903413773
id: 0
t: 131
xxx after update is x: -27.9621696472
y: 2.92628598213
theta: 3.35288929939
speed: 13.7543182373
id: 0
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -27.9621696472
y: 2.92628598213
theta: 3.35288929939
speed: 13.7543182373
id: 0
t: 132
xxx after update is x: -28.9404640198
y: 3.28553724289
theta: 3.25104689598
speed: 14.1558570862
id: 0
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:133




going to the update function
sim.py in the sim.py update function 
targetspeed < se377
theta: 4.73000431061
speed: 18.3923969269
id: 1
t: 129
xxx after update is x: -2.80080676079
y: 10.4771146774
theta: 4.69914102554
speed: 18.6218719482
id: 1
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
maximum speed
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:131


xxx before update is x: -2.80080676079
y: 10.4771146774
theta: 4.69914102554
speed: 18.6218719482
id: 1
t: 130
xxx after update is x: -3.74136853218
y: 10.1653785706
theta: 4.78806638718
speed: 19.1540050507
id: 1
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
watchingg
left intersection!!
estimated time finish =  5.51111111111
upper bound =  7.14845936964
risk is [0.9999999999999994, 0]
Stops!
222 self.state_dicts[msg.id][msg.t] is (-28.214488983154297, 2.5606038570404053, 3.1370551586151123, 13.7903413772583)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
xxx before update is x: -3.74136853218
y: 10.1653785706
theta: 4.78806638718
speed: 19.1540050507
id: 1
t: 131
xxx after update is x: -3.60202217102
y: 9.24765491486
theta: 4.6444735527
speed: 18.349067688
id: 1
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:132


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.86666666667






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:133


xxx before update is x: -3.60202217102
y: 9.24765491486
theta: 4.6444735527
speed: 18.349067688
id: 1
t: 132
xxx after update is x: -3.35913348198
y: 8.38041114807
theta: 4.7648229599
speed: 17.7924728394
id: 1
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
risk is [0.0, 0.502399999999998]
222 self.state_dicts[msg.id][msg.t] is (-28.94046401977539, 3.2855372428894043, 3.251046895980835, 14.15585708618164)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: -3.35913348198
y: 8.38041114807
theta: 4.7648229599
speed: 17.7924728394
id: 1
t: 133
xxx after update is x: -3.27970314026
y: 7.88255643845
theta: 4.78541564941
speed: 17.4075737
id: 1
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 5.95555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 5.95555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '6.0', 'Position': ['(-29.673072814941406', ' 3.7058522701263428', ' 2.903648853302002)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,6.0,(-29.673072814941406, 3.7058522701263428, 2.903648853302002),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:135


xxx before update is x: -3.27970314026
y: 7.88255643845
theta: 4lf.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: -28.9404640198
y: 3.28553724289
theta: 3.25104689598
speed: 14.1558570862
id: 0
t: 133
xxx after update is x: -29.5457801819
y: 3.00276899338
theta: 3.17612195015
speed: 13.7410926819
id: 0
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 1.372234539400748e-09]
222 self.state_dicts[msg.id][msg.t] is (-3.279703140258789, 7.882556438446045, 4.7854156494140625, 17.407573699951172)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:135


xxx before update is x: -29.5457801819
y: 3.00276899338
theta: 3.17612195015
speed: 13.7410926819
id: 0
t: 134
xxx after update is x: -29.6730728149
y: 3.70585227013
theta: 2.9036488533
speed: 13.7799882889
id: 0
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.0






self.maneuver_requested left
RELEASE,0,6.0,(-29.673072814941406, 3.7058522701263428, 2.903648853302002),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 6.0
self.communication_details == 0
sending RELEASE,0,6.0,(-29.673072814941406, 3.7058522701263428, 2.903648853302002),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: -29.6730728149
y: 3.70585227013
theta: 2.9036488533
speed: 13.7799882889
id: 0
t: 135
xxx after update is x: -29.984331131
y: 2.9044084549
theta: 3.13361859322
speed: 14.1320438385
id: 0
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:137


xxx before update is x: -29.984331131
y: 2.9044084549
theta: 3.13361859322
speed: 14.1320438385
id: 0
t: 136
xxx after update is x: -31.1109905243
y: 3.45143198967
theta: 3.12390041351
speed: 13.8213510513
id: 0
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: -31.1109905243
y: 3.45143198967
theta: 3.12390041351
speed: 13.8213510513
id: 0
t: 137
xxx after update is x: -31.1571941376
y: 2.82478570938
theta: 3.33531880379
speed: 14.0125236511
id: 0
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 6.692360567804787e-21]
222 self.state_dicts[msg.id][msg.t] is (-3.3268067836761475, 4.687084674835205, 4.61522912979126, 15.86906909942627)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -31.1571941376
y: 2.82478570938
theta: 3.33531880379
speed: 14.0125236511
id: 0
t: 138
xxx after update is x: -32.7919960022
y: 3.41826725006
theta: 3.27154159546
speed: 13.9228162766
id: 0
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:139




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxx.78541564941
speed: 17.4075737
id: 1
t: 134
xxx after update is x: -3.22877502441
y: 6.20976018906
theta: 4.7544002533
speed: 17.0297412872
id: 1
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: -3.22877502441
y: 6.20976018906
theta: 4.7544002533
speed: 17.0297412872
id: 1
t: 135
xxx after update is x: -3.38365483284
y: 6.33819198608
theta: 4.8431558609
speed: 16.6895828247
id: 1
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:137


xxx before update is x: -3.38365483284
y: 6.33819198608
theta: 4.8431558609
speed: 16.6895828247
id: 1
t: 136
xxx after update is x: -3.55913472176
y: 5.1406788826
theta: 4.85917615891
speed: 15.9068460464
id: 1
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 1.0]
222 self.state_dicts[msg.id][msg.t] is (-31.110990524291992, 3.4514319896698, 3.1239004135131836, 13.821351051330566)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: -3.55913472176
y: 5.1406788826
theta: 4.85917615891
speed: 15.9068460464
id: 1
t: 137
xxx after update is x: -3.32680678368
y: 4.68708467484
theta: 4.61522912979
speed: 15.8690690994
id: 1
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
xxx before update is x: -3.32680678368
y: 4.68708467484
theta: 4.61522912979
speed: 15.8690690994
id: 1
t: 138
xxx after update is x: -3.33648872375
y: 4.15780162811
theta: 4.56815910339
speed: 15.9317207336
id: 1
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:139


maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
tgarnt done
aaaaaa
aaaaaabbbbb
risk is [0.0, 1.0]
222 self.state_dicts[msg.id][msg.t] is (-32.791996002197266, 3.418267250061035, 3.2715415954589844, 13.922816276550293)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: -3.33648872375
y: 4.15780162811
theta: 4.56815910339
speed: 15.9317207336
id: 1
t: 139
xxx after update is x: -2.60615086555
y: 3.27119922638
theta: 4.65000200272
speed: 14.9647302628
id: 1
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.22222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: -2.60615086555
y: 3.27119922638
theta: 4.65000200272
speed: 14.9647302628
id: 1
t: 140
xxx after update is x: -3.48396968842
y: 3.16070771217
theta: 4.77756881714
speed: 14.9676990509
id: 1
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeexx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: -32.7919960022
y: 3.41826725006
theta: 3.27154159546
speed: 13.9228162766
id: 0
t: 139
xxx after update is x: -32.8308944702
y: 3.45967531204
theta: 3.11280369759
speed: 13.5998191833
id: 0
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: -32.8308944702
y: 3.45967531204
theta: 3.11280369759
speed: 13.5998191833
id: 0
t: 140
xxx after update is x: -33.6346893311
y: 3.59264564514
theta: 3.05581212044
speed: 14.0797901154
id: 0
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: -33.6346893311
y: 3.59264564514
theta: 3.05581212044
speed: 14.0797901154
id: 0
t: 141
xxx after update is x: -34.0139656067
y: 2.8781440258
theta: 2.98803162575
speed: 13.8671760559
id: 0
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 1.8016358973359685e-08]
222 self.state_dicts[msg.id][msg.t] is (-3.3177103996276855, 1.8062442541122437, 4.694547176361084, 14.551995277404785)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: -34.0139656067
y: 2.8781440258
theta: 2.98803162575
speed: 13.8671760559
id: 0
t: 142
xxx after update is x: -34.9479179382
y: 3.14536380768
theta: 3.18139743805
speed: 13.8257484436
id: 0
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.35555555556






self.maneuver_requested left
RELEASE,0,6.35555555556,(-34.94791793823242, 3.1453638076782227, 3.1813974380493164),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 6.35555555556
self.communication_details == 0
sending RELEASE,0,6.35555555556,(-34.94791793823242, 3.1453638076782227, 3.1813974380493164),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: -34.9479179382
y: 3.14536380768
theta: 3.18139743805
speed: 13.8257484436
id: 0
t: 143
xxx after update is x: -35.2613563538
y: 3.17075681686
theta: 3.29764795303
speed: 14.1789560318
id: 0
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: -35.2613563538
y: 3.17075681686
theta: 3.29764795303
speed: 14.1789560318
id: 0
t: 144
xxx after update is x: -36.2280883789
y: 2.65130972862
theta: 3.21770858765
speed: 13.737490654
id: 0
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.194732904434204, -0.38805025815963745, 4.700310230255127, 13.904836654663086)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < seld < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: -3.48396968842
y: 3.16070771217
theta: 4.77756881714
speed: 14.9676990509
id: 1
t: 141
xxx after update is x: -3.31771039963
y: 1.80624425411
theta: 4.69454717636
speed: 14.5519952774
id: 1
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
Received -->>: 
current clock is 6.31111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 6.31111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '6.35555555556', 'Position': ['(-34.94791793823242', ' 3.1453638076782227', ' 3.1813974380493164)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,6.35555555556,(-34.94791793823242, 3.1453638076782227, 3.1813974380493164),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




222 self.state_dicts[msg.id][msg.t] is (-34.01396560668945, 2.8781440258026123, 2.9880316257476807, 13.867176055908203)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: -3.31771039963
y: 1.80624425411
theta: 4.69454717636
speed: 14.5519952774
id: 1
t: 142
xxx after update is x: -3.24664735794
y: 1.19947457314
theta: 4.70382547379
speed: 13.6084737778
id: 1
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: -3.24664735794
y: 1.19947457314
theta: 4.70382547379
speed: 13.6084737778
id: 1
t: 143
xxx after update is x: -2.85330295563
y: 0.107515178621
theta: 4.4815735817
speed: 13.8748140335
id: 1
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: -2.85330295563
y: 0.107515178621
theta: 4.4815735817
speed: 13.8748140335
id: 1
t: 144
xxx after update is x: -3.19473290443
y: -0.38805025816
theta: 4.70031023026
speed: 13.9048366547
id: 1
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:146


xxx before update is x: -3.19473290443
y: -0.38805025816
theta: 4.70031023026
speed: 13.9048366547
id: 1
t: 145
xxx after update is x: -2.98078727722
y: -0.130491554737
theta: 4.77303266525
speed: 14.0620203018
id: 1
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5167999999999984]
222 self.state_dicts[msg.id][msg.t] is (-36.85627746582031, 3.5206987857818604, 3.073770046234131, 13.818862915039062)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: -2.98078727722
y: -0.130491554737
theta: 4.77303266525
speed: 14.0620203018
id: 1
t: 146
xxx after update is x: -3.29585576057
y:f.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -36.2280883789
y: 2.65130972862
theta: 3.21770858765
speed: 13.737490654
id: 0
t: 145
xxx after update is x: -36.8562774658
y: 3.52069878578
theta: 3.07377004623
speed: 13.818862915
id: 0
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:146




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: -36.8562774658
y: 3.52069878578
theta: 3.07377004623
speed: 13.818862915
id: 0
t: 146
xxx after update is x: -37.1708526611
y: 3.44524025917
theta: 3.09942817688
speed: 13.7211494446
id: 0
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: -37.1708526611
y: 3.44524025917
theta: 3.09942817688
speed: 13.7211494446
id: 0
t: 147
xxx after update is x: -37.8537254333
y: 3.25133228302
theta: 3.20174717903
speed: 14.0130901337
id: 0
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: -37.8537254333
y: 3.25133228302
theta: 3.20174717903
speed: 14.0130901337
id: 0
t: 148
xxx after update is x: -38.3774414062
y: 3.01823830605
theta: 3.13550257683
speed: 14.2959737778
id: 0
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4034557342529297, -2.4079580307006836, 4.807471752166748, 14.016700744628906)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: -38.3774414062
y: 3.01823830605
theta: 3.13550257683
speed: 14.2959737778
id: 0
t: 149
xxx after update is x: -39.2148170471
y: 3.32546138763
theta: 2.9604344368
speed: 13.7359685898
id: 0
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.66666666667






self.maneuver_requested left
RELEASE,0,6.66666666667,(-39.21481704711914, 3.3254613876342773, 2.9604344367980957),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 6.66666666667
self.communication_details == 0
sending RELEASE,0,6.66666666667,(-39.21481704711914, 3.3254613876342773, 2.9604344367980957),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: -39.2148170471
y: 3.32546138763
theta: 2.9604344368
speed: 13.7359685898
id: 0
t: 150
xxx after update is x: -39.665802002
y: 3.26750850677
theta: 3.15702271461
speed: 13.8274888992
id: 0
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:151




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:152


xxx before update is x: -39.665802002
y: 3.26750850677
theta: 3.15702271461
speed: 13.8274888992
id: 0
t: 151
xxx after update is x: -40.5122413635
y: 3.38813591003
theta: 3.05375 -1.43300223351
theta: 4.74656963348
speed: 14.17897892
id: 1
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: -3.29585576057
y: -1.43300223351
theta: 4.74656963348
speed: 14.17897892
id: 1
t: 147
xxx after update is x: -3.69579720497
y: -1.66471755505
theta: 4.74296236038
speed: 14.0077514648
id: 1
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.57777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: -3.69579720497
y: -1.66471755505
theta: 4.74296236038
speed: 14.0077514648
id: 1
t: 148
xxx after update is x: -3.40345573425
y: -2.4079580307
theta: 4.80747175217
speed: 14.0167007446
id: 1
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: -3.40345573425
y: -2.4079580307
theta: 4.80747175217
speed: 14.0167007446
id: 1
t: 149
xxx after update is x: -3.25273871422
y: -2.84342360497
theta: 4.77073335648
speed: 14.1865930557
id: 1
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 6.66666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 6.66666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '6.66666666667', 'Position': ['(-39.21481704711914', ' 3.3254613876342773', ' 2.9604344367980957)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,6.66666666667,(-39.21481704711914, 3.3254613876342773, 2.9604344367980957),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (-39.21481704711914, 3.3254613876342773, 2.9604344367980957, 13.735968589782715)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: -3.25273871422
y: -2.84342360497
theta: 4.77073335648
speed: 14.1865930557
id: 1
t: 150
xxx after update is x: -3.03012752533
y: -4.25027179718
theta: 4.86215734482
speed: 13.9442234039
id: 1
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:152


xxx before update is x: -3.03012752533
y: -4.25027179718
theta: 4.86215734482
speed: 13.9442234039
id: 1
t: 151
xxx after update is x: -3.15594220161
y: -4.34736824036
theta: 4.48185825348
speed: 14.1451539993
id: 1
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:153


xxx befor07534
speed: 13.8112239838
id: 0
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.15594220161438, -4.347368240356445, 4.481858253479004, 14.145153999328613)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:153


xxx before update is x: -40.5122413635
y: 3.38813591003
theta: 3.0537507534
speed: 13.8112239838
id: 0
t: 152
xxx after update is x: -40.6316223145
y: 3.61238718033
theta: 2.87449765205
speed: 13.755862236
id: 0
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -40.6316223145
y: 3.61238718033
theta: 2.87449765205
speed: 13.755862236
id: 0
t: 153
xxx after update is x: -41.7137794495
y: 3.4996638298
theta: 3.09351539612
speed: 13.9498195648
id: 0
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:154




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -41.7137794495
y: 3.4996638298
theta: 3.09351539612
speed: 13.9498195648
id: 0
t: 154
xxx after update is x: -42.273021698
y: 3.27097797394
theta: 3.25252771378
speed: 13.7728052139
id: 0
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:155




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -42.273021698
y: 3.27097797394
theta: 3.25252771378
speed: 13.7728052139
id: 0
t: 155
xxx after update is x: -43.4058494568
y: 3.03723144531
theta: 3.14829230309
speed: 13.8694868088
id: 0
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:156




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: -43.4058494568
y: 3.03723144531
theta: 3.14829230309
speed: 13.8694868088
id: 0
t: 156
xxx after update is x: -43.7792053223
y: 3.2155277729
theta: 3.23287296295
speed: 13.9465808868
id: 0
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: -43.7792053223
y: 3.2155277729
theta: 3.23287296295
speed: 13.9465808868
id: 0
t: 157
xxx after update is x: -44.4677886963
y: 2.9686191082
theta: 2.92605638504
speed: 14.171090126
id: 0
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.02222222222






self.maneuver_requested left
RELEASE,0,7.02222222222,(-44.46778869628906, 2.9686191082000732, 2.926056385040283),14,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.02222222222
self.communication_details == 0
sending RELEASE,0,7.02222222222,(-44.46778869628906, 2.9686191082000732, 2.926056385040283),14,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.208888292312622, -8.149264335632324, 4.755298614501953, 14.181221008300781)
if we have all measurements for a certain te update is x: -3.15594220161
y: -4.34736824036
theta: 4.48185825348
speed: 14.1451539993
id: 1
t: 152
xxx after update is x: -3.62297487259
y: -5.13099336624
theta: 4.65572881699
speed: 13.615688324
id: 1
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.62297487259
y: -5.13099336624
theta: 4.65572881699
speed: 13.615688324
id: 1
t: 153
xxx after update is x: -2.94231796265
y: -5.6207857132
theta: 4.80323171616
speed: 13.780544281
id: 1
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:154




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.94231796265
y: -5.6207857132
theta: 4.80323171616
speed: 13.780544281
id: 1
t: 154
xxx after update is x: -3.4101703167
y: -5.76244544983
theta: 4.84716653824
speed: 14.1234178543
id: 1
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:155


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.88888888889






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: -3.4101703167
y: -5.76244544983
theta: 4.84716653824
speed: 14.1234178543
id: 1
t: 155
xxx after update is x: -2.89824032784
y: -7.22900247574
theta: 4.84530735016
speed: 14.166179657
id: 1
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: -2.89824032784
y: -7.22900247574
theta: 4.84530735016
speed: 14.166179657
id: 1
t: 156
xxx after update is x: -3.59307360649
y: -7.81286287308
theta: 4.69378519058
speed: 13.9278650284
id: 1
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48479999999999795]
222 self.state_dicts[msg.id][msg.t] is (-43.779205322265625, 3.2155277729034424, 3.23287296295166, 13.94658088684082)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:158


Received -->>: 
current clock is 6.97777777778




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 6.97777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '7.02222222222', 'Position': ['(-44.46778869628906', ' 2.9686191082000732', ' 2.926056385040283)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,7.02222222222,(-44.46778869628906, 2.9686191082000732, 2.926056385040283),14,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




xxx before update is x: -3.59307360649
y: -7.81286287308
theta: 4.69378519058
speed: 13.9278650284
id: 1
t: 157
xxx after update is x: -3.20888829231
y: -8.14926433563
theta: 4.7552986145
speed: 14.1812210083
id: 1
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
ime-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:159


xxx before update is x: -44.4677886963
y: 2.9686191082
theta: 2.92605638504
speed: 14.171090126
id: 0
t: 158
xxx after update is x: -44.465839386
y: 3.52029633522
theta: 3.16436505318
speed: 13.7622928619
id: 0
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:160


xxx before update is x: -44.465839386
y: 3.52029633522
theta: 3.16436505318
speed: 13.7622928619
id: 0
t: 159
xxx after update is x: -45.0455513
y: 3.36534237862
theta: 3.05707478523
speed: 14.4024076462
id: 0
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -45.0455513
y: 3.36534237862
theta: 3.05707478523
speed: 14.4024076462
id: 0
t: 160
xxx after update is x: -46.2875366211
y: 3.26877093315
theta: 3.29494094849
speed: 13.808382988
id: 0
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:161




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: -46.2875366211
y: 3.26877093315
theta: 3.29494094849
speed: 13.808382988
id: 0
t: 161
xxx after update is x: -46.9110298157
y: 3.23843026161
theta: 3.09476447105
speed: 13.9352073669
id: 0
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -46.9110298157
y: 3.23843026161
theta: 3.09476447105
speed: 13.9352073669
id: 0
t: 162
xxx after update is x: -47.1481971741
y: 2.89281344414
theta: 3.32056546211
speed: 13.5782032013
id: 0
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:163




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: -47.1481971741
y: 2.89281344414
theta: 3.32056546211
speed: 13.5782032013
id: 0
t: 163
xxx after update is x: -48.0914001465
y: 3.35850596428
theta: 3.13135838509
speed: 14.0533390045
id: 0
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.205918073654175, -11.413118362426758, 4.605408191680908, 13.831719398498535)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:165


xxx before update is x: -48.0914001465
y: 3.35850596428
theta: 3.13135838509
speed: 14.0533390045
id: 0
t: 164
xxx after update is x: -48.2938652039
y: 3.59603285789
theta: 3.12068128586
speed: 14.0587272644
id: 0
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -48.2938652039
y: 3.59603285789
theta: 3.12068128586
speed: 14.0587272644
id: 0
t: 165
xxx after update is x: -48.6792831421
y: 3.04511332512
theta: 2.99969553947
speed: 13.9413766861
id: 0targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:159


xxx before update is x: -3.20888829231
y: -8.14926433563
theta: 4.7552986145
speed: 14.1812210083
id: 1
t: 158
xxx after update is x: -3.43723583221
y: -8.18809318542
theta: 4.7648024559
speed: 13.8621959686
id: 1
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:160


xxx before update is x: -3.43723583221
y: -8.18809318542
theta: 4.7648024559
speed: 13.8621959686
id: 1
t: 159
xxx after update is x: -3.07640433311
y: -9.35515499115
theta: 4.81175088882
speed: 14.0979394913
id: 1
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: -3.07640433311
y: -9.35515499115
theta: 4.81175088882
speed: 14.0979394913
id: 1
t: 160
xxx after update is x: -3.40747690201
y: -9.62013435364
theta: 4.93975734711
speed: 13.8135623932
id: 1
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.479999999999998]
222 self.state_dicts[msg.id][msg.t] is (-46.28753662109375, 3.268770933151245, 3.294940948486328, 13.808382987976074)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: -3.40747690201
y: -9.62013435364
theta: 4.93975734711
speed: 13.8135623932
id: 1
t: 161
xxx after update is x: -3.43308615685
y: -9.99333000183
theta: 4.73568248749
speed: 13.7876605988
id: 1
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.43308615685
y: -9.99333000183
theta: 4.73568248749
speed: 13.7876605988
id: 1
t: 162
xxx after update is x: -2.90349268913
y: -10.7941217422
theta: 4.62544775009
speed: 14.0681886673
id: 1
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:163




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.90349268913
y: -10.7941217422
theta: 4.62544775009
speed: 14.0681886673
id: 1
t: 163
xxx after update is x: -3.20591807365
y: -11.4131183624
theta: 4.60540819168
speed: 13.8317193985
id: 1
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:164


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.28888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:165


xxx before update is x: -3.20591807365
y: -11.4131183624
theta: 4.60540819168
speed: 13.8317193985
id: 1
t: 164
xxx after update is x: -3.01403021812
y: -11.9037685394
theta: 4.58648061752
speed: 14.0548534393
id: 1
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 7.33333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 7.33333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '7.37777777778', 'Position': ['(-48.679283142089844', ' 3.0451133251190186', ' 2.9996955394744873)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,7.37777777778,(-48.679283142089844, 3.0451133251190186, 2.9996955394744873),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:166


xxx before update is x: -3.01403021812
y: -11.9037685394
theta: 4.58648061752
speed: 14.0548534393
id: 1
t: 165
xxx after update is x: -3.38794207573
y: -12.8637685776
theta: 4.58396673203
speed: 14.1003541946
id: 1
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: -3.38794207573
y: -12.8637685776
theta: 4.58396673203
speed: 14.1003541946
id: 1
t: 166
xxx after update is x: -3.62745451927
y: -14.1151103973
theta: 4.7405257225
speed: 14.0436563492
id: 1
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (-49.869598388671875, 2.676114559173584, 2.9897634983062744, 14.146000862121582)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: -3.62745451927
y: -14.1151103973
theta: 4.7405257225
speed: 14.0436563492
id: 1
t: 167
xxx after update is x: -3.1156847477
y: -13.8948316574
theta: 4.96507787704
speed: 13.9698057175
id: 1
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: -3.1156847477
y: -13.8948316574
theta: 4.96507787704
speed: 13.9698057175
id: 1
t: 168
xxx after update is x: -3.5176680088
y: -14.5075092316
theta: 4.57210874557
speed: 14.0599269867
id: 1
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: -3.5176680088
y: -14.5075092316
theta: 4.57210874557
speed: 14.0599269867
id: 1
t: 169
xxx after update is x: -3.4378631115
y: -15.5794401169
theta: 4.70787620544
speed: 13.3936252594
id: 1
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:171


xxx before update is x: -3.4378631115
y: -15.5794401169
theta: 4.70787620544
speed: 13.3936252594
id: 1
t: 170
xxx after update is x: -2.53438401222
y: -16.2611579895
theta: 4.61167240143
speed: 13.8766965866
id: 1
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-51.78657913208008, 3.1098556518554688, 3.003373384475708, 14.190597534179688)
if we have all measurements fo
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:166


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.37777777778






self.maneuver_requested left
RELEASE,0,7.37777777778,(-48.679283142089844, 3.0451133251190186, 2.9996955394744873),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.37777777778
self.communication_details == 0
sending RELEASE,0,7.37777777778,(-48.679283142089844, 3.0451133251190186, 2.9996955394744873),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -48.6792831421
y: 3.04511332512
theta: 2.99969553947
speed: 13.9413766861
id: 0
t: 166
xxx after update is x: -49.8695983887
y: 2.67611455917
theta: 2.98976349831
speed: 14.1460008621
id: 0
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:167




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: -49.8695983887
y: 2.67611455917
theta: 2.98976349831
speed: 14.1460008621
id: 0
t: 167
xxx after update is x: -50.0853385925
y: 2.71941018105
theta: 3.08958053589
speed: 13.913520813
id: 0
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: -50.0853385925
y: 2.71941018105
theta: 3.08958053589
speed: 13.913520813
id: 0
t: 168
xxx after update is x: -50.9081459045
y: 3.11740636826
theta: 3.03197336197
speed: 13.9610652924
id: 0
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5176680088043213, -14.507509231567383, 4.572108745574951, 14.059926986694336)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -50.9081459045
y: 3.11740636826
theta: 3.03197336197
speed: 13.9610652924
id: 0
t: 169
xxx after update is x: -51.4249725342
y: 3.3845603466
theta: 3.28344917297
speed: 13.9476966858
id: 0
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:170




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:171


xxx before update is x: -51.4249725342
y: 3.3845603466
theta: 3.28344917297
speed: 13.9476966858
id: 0
t: 170
xxx after update is x: -51.7865791321
y: 3.10985565186
theta: 3.00337338448
speed: 14.1905975342
id: 0
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: -51.7865791321
y: 3.10985565186
theta: 3.00337338448
speed: 14.1905975342
id: 0
t: 171
xxx after update is x: -52.3546257019
y: 2.85766887665
theta: 2.94158411026
speed: 14.0260543823
id: 0
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the ur a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:172


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.6






self.maneuver_requested None
xxx before update is x: -2.53438401222
y: -16.2611579895
theta: 4.61167240143
speed: 13.8766965866
id: 1
t: 171
xxx after update is x: -3.26160788536
y: -17.1610946655
theta: 4.67607831955
speed: 13.5925979614
id: 1
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:173


xxx before update is x: -3.26160788536
y: -17.1610946655
theta: 4.67607831955
speed: 13.5925979614
id: 1
t: 172
xxx after update is x: -3.660115242
y: -17.3318214417
theta: 4.85503435135
speed: 14.0007419586
id: 1
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 7.68888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 7.68888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '7.68888888889', 'Position': ['(-53.325157165527344', ' 3.627575159072876', ' 2.992607355117798)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,7.68888888889,(-53.325157165527344, 3.627575159072876, 2.992607355117798),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: -3.660115242
y: -17.3318214417
theta: 4.85503435135
speed: 14.0007419586
id: 1
t: 173
xxx after update is x: -3.01608181
y: -18.0582637787
theta: 4.57211971283
speed: 13.6898002625
id: 1
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: -3.01608181
y: -18.0582637787
theta: 4.57211971283
speed: 13.6898002625
id: 1
t: 174
xxx after update is x: -3.35164761543
y: -18.4664974213
theta: 4.8386554718
speed: 13.7717638016
id: 1
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: -3.35164761543
y: -18.4664974213
theta: 4.8386554718
speed: 13.7717638016
id: 1
t: 175
xxx after update is x: -3.57655072212
y: -19.1330280304
theta: 4.8192782402
speed: 13.8392915726
id: 1
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:177


xxx before update is x: -3.57655072212
y: -19.1330280304
theta: 4.8192782402
speed: 13.8392915726
id: 1
t: 176
xxx after update is x: -3.77544927597
y: -19.0831890106
theta: 4.62742900848
speed: 13.8591527939
id: 1
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function xxx before update is x: -52.3546257019
y: 2.85766887665
theta: 2.94158411026
speed: 14.0260543823
id: 0
t: 172
xxx after update is x: -53.3251571655
y: 3.62757515907
theta: 2.99260735512
speed: 13.3884410858
id: 0
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:173


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.68888888889






self.maneuver_requested left
RELEASE,0,7.68888888889,(-53.325157165527344, 3.627575159072876, 2.992607355117798),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.68888888889
self.communication_details == 0
sending RELEASE,0,7.68888888889,(-53.325157165527344, 3.627575159072876, 2.992607355117798),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: -53.3251571655
y: 3.62757515907
theta: 2.99260735512
speed: 13.3884410858
id: 0
t: 173
xxx after update is x: -54.1534156799
y: 3.24936199188
theta: 3.14650726318
speed: 13.9550666809
id: 0
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -54.1534156799
y: 3.24936199188
theta: 3.14650726318
speed: 13.9550666809
id: 0
t: 174
xxx after update is x: -54.567905426
y: 3.02536439896
theta: 3.04702758789
speed: 13.8343353271
id: 0
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:175




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: -54.567905426
y: 3.02536439896
theta: 3.04702758789
speed: 13.8343353271
id: 0
t: 175
xxx after update is x: -55.5536880493
y: 3.20125460625
theta: 3.21567678452
speed: 13.8871822357
id: 0
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:177


xxx before update is x: -55.5536880493
y: 3.20125460625
theta: 3.21567678452
speed: 13.8871822357
id: 0
t: 176
xxx after update is x: -55.6874351501
y: 3.11959457397
theta: 3.09965157509
speed: 13.4128847122
id: 0
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: -55.6874351501
y: 3.11959457397
theta: 3.09965157509
speed: 13.4128847122
id: 0
t: 177
xxx after update is x: -56.2143669128
y: 3.86560630798
theta: 3.21764707565
speed: 13.8824234009
id: 0
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4665331840515137, -20.241933822631836, 4.6962504386901855, 13.833439826965332)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: -56.2143669128
y: 3.86560630798
theta: 3.21764707565
speed: 13.8824234009
id: 0
t: 178
xxx after update is x: -57.3228149414
y: 3.04029417038
theta: 3.07176876068
speed: 13.8640394211
id: 0
t: 179
pdate function xxx before update is x: -3.77544927597
y: -19.0831890106
theta: 4.62742900848
speed: 13.8591527939
id: 1
t: 177
xxx after update is x: -3.46653318405
y: -20.2419338226
theta: 4.69625043869
speed: 13.833439827
id: 1
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:178


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: -3.46653318405
y: -20.2419338226
theta: 4.69625043869
speed: 13.833439827
id: 1
t: 178
xxx after update is x: -3.60850262642
y: -21.0628013611
theta: 4.64521503448
speed: 13.9300642014
id: 1
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (-57.32281494140625, 3.0402941703796387, 3.0717687606811523, 13.864039421081543)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.95555555556






self.maneuver_requested None
xxx before update is x: -3.60850262642
y: -21.0628013611
theta: 4.64521503448
speed: 13.9300642014
id: 1
t: 179
xxx after update is x: -3.65248537064
y: -21.8518600464
theta: 4.71967744827
speed: 13.8090057373
id: 1
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:180


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:181


xxx before update is x: -3.65248537064
y: -21.8518600464
theta: 4.71967744827
speed: 13.8090057373
id: 1
t: 180
xxx after update is x: -3.47392225266
y: -22.3997802734
theta: 4.68367195129
speed: 13.9867372513
id: 1
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:182


xxx before update is x: -3.47392225266
y: -22.3997802734
theta: 4.68367195129
speed: 13.9867372513
id: 1
t: 181
xxx after update is x: -2.85057640076
y: -22.4580936432
theta: 4.64835453033
speed: 13.9603586197
id: 1
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:183


xxx before update is x: -2.85057640076
y: -22.4580936432
theta: 4.64835453033
speed: 13.9603586197
id: 1
t: 182
xxx after update is x: -3.40321493149
y: -23.0548477173
theta: 4.73232889175
speed: 13.5956611633
id: 1
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 8.13333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 8.13333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '8.08888888889', 'Position': ['(-58.68540954589844', ' 3.343491315841675', ' 3.201192855834961)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,8.08888888889,(-58.68540954589844, 3.343491315841675, 3.201192855834961),14,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:180


xxx before update is x: -57.3228149414
y: 3.04029417038
theta: 3.07176876068
speed: 13.8640394211
id: 0
t: 179
xxx after update is x: -57.6577949524
y: 3.06569004059
theta: 3.11442494392
speed: 14.060136795
id: 0
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -57.6577949524
y: 3.06569004059
theta: 3.11442494392
speed: 14.060136795
id: 0
t: 180
xxx after update is x: -58.3869094849
y: 3.21840143204
theta: 3.17813372612
speed: 14.1146869659
id: 0
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:181




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -58.3869094849
y: 3.21840143204
theta: 3.17813372612
speed: 14.1146869659
id: 0
t: 181
xxx after update is x: -58.6854095459
y: 3.34349131584
theta: 3.20119285583
speed: 14.0981397629
id: 0
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:182


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.08888888889






self.maneuver_requested left
RELEASE,0,8.08888888889,(-58.68540954589844, 3.343491315841675, 3.201192855834961),14,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 8.08888888889
self.communication_details == 0


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -58.6854095459
y: 3.34349131584
theta: 3.20119285583
speed: 14.0981397629
id: 0
t: 182
xxx after update is x: -60.5180206299
y: 3.30621862411
theta: 3.2263174057
speed: 13.7756528854
id: 0
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:183




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -60.5180206299
y: 3.30621862411
theta: 3.2263174057
speed: 13.7756528854
id: 0
t: 183
xxx after update is x: -60.6944198608
y: 3.59715771675
theta: 3.08541917801
speed: 14.2892246246
id: 0
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:184


sending RELEASE,0,8.08888888889,(-58.68540954589844, 3.343491315841675, 3.201192855834961),14,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:185


xxx before update is x: -60.6944198608
y: 3.59715771675
theta: 3.08541917801
speed: 14.2892246246
id: 0
t: 184
xxx after update is x: -60.8586006165
y: 3.04482126236
theta: 3.32390666008
speed: 13.9166555405
id: 0
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: -60.8586006165
y: 3.04482126236
theta: 3.32390666008
speed: 13.9166555405
id: 0
t: 185
xxx after update is x: -61.5967445374
y: 2.57991957664
theta: 3.07034897804
speed: 14.036444664
id: 0
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the upfinish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: -3.40321493149
y: -23.0548477173
theta: 4.73232889175
speed: 13.5956611633
id: 1
t: 183
xxx after update is x: -2.97896432877
y: -24.0534553528
theta: 4.68484687805
speed: 13.6330604553
id: 1
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:185


xxx before update is x: -2.97896432877
y: -24.0534553528
theta: 4.68484687805
speed: 13.6330604553
id: 1
t: 184
xxx after update is x: -3.00462269783
y: -24.452495575
theta: 4.59613847733
speed: 13.9793329239
id: 1
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4927999999999979]
222 self.state_dicts[msg.id][msg.t] is (-60.85860061645508, 3.044821262359619, 3.323906660079956, 13.916655540466309)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: -3.00462269783
y: -24.452495575
theta: 4.59613847733
speed: 13.9793329239
id: 1
t: 185
xxx after update is x: -2.99138307571
y: -24.9678039551
theta: 4.52492904663
speed: 13.8527374268
id: 1
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: -2.99138307571
y: -24.9678039551
theta: 4.52492904663
speed: 13.8527374268
id: 1
t: 186
xxx after update is x: -3.5553894043
y: -26.0093765259
theta: 4.58916664124
speed: 13.9957990646
id: 1
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.31111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:188


xxx before update is x: -3.5553894043
y: -26.0093765259
theta: 4.58916664124
speed: 13.9957990646
id: 1
t: 187
xxx after update is x: -2.57809972763
y: -26.3610439301
theta: 4.62943172455
speed: 14.1164894104
id: 1
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: -2.57809972763
y: -26.3610439301
theta: 4.62943172455
speed: 14.1164894104
id: 1
t: 188
xxx after update is x: -3.06898021698
y: -26.902677536
theta: 4.5704407692
speed: 13.8337469101
id: 1
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5103999999999982]
222 self.state_dicts[msg.id][msg.t] is (-63.11000061035156, 3.1521544456481934, 3.1595652103424072, 13.849101066589355)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: -3.06898021698
y: -26.9date function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: -61.5967445374
y: 2.57991957664
theta: 3.07034897804
speed: 14.036444664
id: 0
t: 186
xxx after update is x: -62.3226776123
y: 2.95294618607
theta: 3.29150009155
speed: 13.691151619
id: 0
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.555389404296875, -26.009376525878906, 4.589166641235352, 13.99579906463623)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:188


xxx before update is x: -62.3226776123
y: 2.95294618607
theta: 3.29150009155
speed: 13.691151619
id: 0
t: 187
xxx after update is x: -62.4458236694
y: 3.27838015556
theta: 3.12663936615
speed: 13.861530304
id: 0
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: -62.4458236694
y: 3.27838015556
theta: 3.12663936615
speed: 13.861530304
id: 0
t: 188
xxx after update is x: -63.1100006104
y: 3.15215444565
theta: 3.15956521034
speed: 13.8491010666
id: 0
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: -63.1100006104
y: 3.15215444565
theta: 3.15956521034
speed: 13.8491010666
id: 0
t: 189
xxx after update is x: -63.8881149292
y: 2.77336406708
theta: 3.09380912781
speed: 13.7602682114
id: 0
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -63.8881149292
y: 2.77336406708
theta: 3.09380912781
speed: 13.7602682114
id: 0
t: 190
xxx after update is x: -63.8672714233
y: 3.6361579895
theta: 3.18468594551
speed: 13.8419103622
id: 0
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:192


xxx before update is x: -63.8672714233
y: 3.6361579895
theta: 3.18468594551
speed: 13.8419103622
id: 0
t: 191
xxx after update is x: -65.4853210449
y: 2.87664842606
theta: 3.2684776783
speed: 13.7650718689
id: 0
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.53333333333






self.maneuver_requested left
RELEASE,0,8.53333333333,(-65.48532104492188, 2.876648426055908, 3.26847767829895),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 8.53333333333
self.communication_details == 0
sending RELEASE,0,8.53333333333,(-65.48532104492188, 2.876648426055908, 3.26847767829895),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-3.057966709136963, -28.701797485351562, 4.736810207366943, 14.035600662231445)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim02677536
theta: 4.5704407692
speed: 13.8337469101
id: 1
t: 189
xxx after update is x: -3.29700183868
y: -27.6113777161
theta: 4.61361694336
speed: 14.1460790634
id: 1
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -3.29700183868
y: -27.6113777161
theta: 4.61361694336
speed: 14.1460790634
id: 1
t: 190
xxx after update is x: -3.10128998756
y: -28.2828617096
theta: 4.64088726044
speed: 14.0590829849
id: 1
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 8.48888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 8.48888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '8.53333333333', 'Position': ['(-65.48532104492188', ' 2.876648426055908', ' 3.26847767829895)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,8.53333333333,(-65.48532104492188, 2.876648426055908, 3.26847767829895),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:192


xxx before update is x: -3.10128998756
y: -28.2828617096
theta: 4.64088726044
speed: 14.0590829849
id: 1
t: 191
xxx after update is x: -3.05796670914
y: -28.7017974854
theta: 4.73681020737
speed: 14.0356006622
id: 1
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.46719999999999806]
222 self.state_dicts[msg.id][msg.t] is (-65.48532104492188, 2.876648426055908, 3.26847767829895, 13.765071868896484)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:193


xxx before update is x: -3.05796670914
y: -28.7017974854
theta: 4.73681020737
speed: 14.0356006622
id: 1
t: 192
xxx after update is x: -3.65778040886
y: -29.4381370544
theta: 4.63468647003
speed: 14.0751361847
id: 1
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:194


xxx before update is x: -3.65778040886
y: -29.4381370544
theta: 4.63468647003
speed: 14.0751361847
id: 1
t: 193
xxx after update is x: -3.41690087318
y: -31.0044574738
theta: 4.60315942764
speed: 14.1631097794
id: 1
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:195


xxx before update is x: -3.41690087318
y: -31.0044574738
theta: 4.60315942764
speed: 14.1631097794
id: 1
t: 194
xxx after update is x: -3.18882489204
y: -30.4744720459
theta: 4.72416591644
speed: 13.9552621841
id: 1
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.66666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:193


xxx before update is x: -65.4853210449
y: 2.87664842606
theta: 3.2684776783
speed: 13.7650718689
id: 0
t: 192
xxx after update is x: -65.7498626709
y: 4.03558540344
theta: 3.09922909737
speed: 13.7329454422
id: 0
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -65.7498626709
y: 4.03558540344
theta: 3.09922909737
speed: 13.7329454422
id: 0
t: 193
xxx after update is x: -66.4244384766
y: 3.28916764259
theta: 2.98730945587
speed: 13.5995845795
id: 0
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:194




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -66.4244384766
y: 3.28916764259
theta: 2.98730945587
speed: 13.5995845795
id: 0
t: 194
xxx after update is x: -66.9999237061
y: 3.4857981205
theta: 3.13532495499
speed: 13.5870075226
id: 0
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:195




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:196


xxx before update is x: -66.9999237061
y: 3.4857981205
theta: 3.13532495499
speed: 13.5870075226
id: 0
t: 195
xxx after update is x: -67.3306427002
y: 3.04293870926
theta: 3.07460451126
speed: 13.8219203949
id: 0
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -67.3306427002
y: 3.04293870926
theta: 3.07460451126
speed: 13.8219203949
id: 0
t: 196
xxx after update is x: -68.4591140747
y: 2.72821927071
theta: 3.11702442169
speed: 13.9204111099
id: 0
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1161048412323, -32.29399871826172, 4.623774528503418, 13.816964149475098)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:198


xxx before update is x: -68.4591140747
y: 2.72821927071
theta: 3.11702442169
speed: 13.9204111099
id: 0
t: 197
xxx after update is x: -68.8486557007
y: 3.26601719856
theta: 3.07744860649
speed: 13.734416008
id: 0
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:199


xxx before update is x: -68.8486557007
y: 3.26601719856
theta: 3.07744860649
speed: 13.734416008
id: 0
t: 198
xxx after update is x: -69.5506057739
y: 2.55623435974
theta: 3.35736274719
speed: 13.8999099731
id: 0
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.84444444444






self.maneuver_requested left
RELEASE,0,8.84444444444,(-69.55060577392578, 2.556234359741211, 3.357362747192383),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 8.84444444444
self.communication_details == 0
sending RELEASE,0,8.84444444444,(-69.55060577392578, 2.556234359741211, 3.357362747192383),13,1,1.11
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:196


xxx before update is x: -3.18882489204
y: -30.4744720459
theta: 4.72416591644
speed: 13.9552621841
id: 1
t: 195
xxx after update is x: -2.87057161331
y: -30.9548053741
theta: 4.8502202034
speed: 13.8985309601
id: 1
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -2.87057161331
y: -30.9548053741
theta: 4.8502202034
speed: 13.8985309601
id: 1
t: 196
xxx after update is x: -3.11610484123
y: -32.2939987183
theta: 4.6237745285
speed: 13.8169641495
id: 1
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (-68.45911407470703, 2.7282192707061768, 3.1170244216918945, 13.920411109924316)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:198


xxx before update is x: -3.11610484123
y: -32.2939987183
theta: 4.6237745285
speed: 13.8169641495
id: 1
t: 197
xxx after update is x: -3.46918416023
y: -32.814239502
theta: 4.80172967911
speed: 13.6777973175
id: 1
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
Received -->>: 
current clock is 8.8




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 8.8
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '8.84444444444', 'Position': ['(-69.55060577392578', ' 2.556234359741211', ' 3.357362747192383)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,8.84444444444,(-69.55060577392578, 2.556234359741211, 3.357362747192383),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




xxx before update is x: -3.46918416023
y: -32.814239502
theta: 4.80172967911
speed: 13.6777973175
id: 1
t: 198
xxx after update is x: -3.12203550339
y: -33.3378944397
theta: 4.7134513855
speed: 13.8035955429
id: 1
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:199




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.12203550339
y: -33.3378944397
theta: 4.7134513855
speed: 13.8035955429
id: 1
t: 199
xxx after update is x: -3.12809371948
y: -33.6279716492
theta: 4.60774755478
speed: 14.0334692001
id: 1
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:200




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -3.12809371948
y: -33.6279716492
theta: 4.60774755478
speed: 14.0334692001
id: 1
t: 200
xxx after update is x: -3.14416885376
y: -34.9199485779
theta: 4.77378559113
speed: 14.0746746063
id: 1
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.479999999999998]
222 self.state_dicts[msg.id][msg.t] is (-70.39400482177734, 3.049952983856201, 3.183721111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:200


maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: -69.5506057739
y: 2.55623435974
theta: 3.35736274719
speed: 13.8999099731
id: 0
t: 199
xxx after update is x: -69.736289978
y: 3.38424706459
theta: 3.17428350449
speed: 13.4502620697
id: 0
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -69.736289978
y: 3.38424706459
theta: 3.17428350449
speed: 13.4502620697
id: 0
t: 200
xxx after update is x: -70.3940048218
y: 3.04995298386
theta: 3.18372154236
speed: 13.8901662827
id: 0
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -70.3940048218
y: 3.04995298386
theta: 3.18372154236
speed: 13.8901662827
id: 0
t: 201
xxx after update is x: -71.4821929932
y: 3.53588557243
theta: 3.29762983322
speed: 13.7615642548
id: 0
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:202


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.8487298488616943, -34.6850471496582, 4.946225166320801, 14.155550956726074)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:203


xxx before update is x: -71.4821929932
y: 3.53588557243
theta: 3.29762983322
speed: 13.7615642548
id: 0
t: 202
xxx after update is x: -72.2914962769
y: 3.04145383835
theta: 3.01792907715
speed: 13.8328933716
id: 0
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:204


xxx before update is x: -72.2914962769
y: 3.04145383835
theta: 3.01792907715
speed: 13.8328933716
id: 0
t: 203
xxx after update is x: -72.3593521118
y: 3.27020335197
theta: 2.98138046265
speed: 14.0102491379
id: 0
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -72.3593521118
y: 3.27020335197
theta: 2.98138046265
speed: 14.0102491379
id: 0
t: 204
xxx after update is x: -73.1065216064
y: 4.00163793564
theta: 3.14180898666
speed: 13.8790826797
id: 0
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:205




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -73.1065216064
y: 4.00163793564
theta: 3.14180898666
speed: 13.8790826797
id: 0
t: 205
xxx after update is x: -74.0483398438
y: 3.63527536392
theta: 3.10835671425
speed: 14.0215072632
id: 0
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:206




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:207


xxx before update is x: -74.0483398438
y: 3.63527536392
theta: 35423583984, 13.890166282653809)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:202


xxx before update is x: -3.14416885376
y: -34.9199485779
theta: 4.77378559113
speed: 14.0746746063
id: 1
t: 201
xxx after update is x: -2.84872984886
y: -34.6850471497
theta: 4.94622516632
speed: 14.1555509567
id: 1
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:203


xxx before update is x: -2.84872984886
y: -34.6850471497
theta: 4.94622516632
speed: 14.1555509567
id: 1
t: 202
xxx after update is x: -3.4343650341
y: -35.2109947205
theta: 4.64050769806
speed: 13.8179607391
id: 1
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.02222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:204


xxx before update is x: -3.4343650341
y: -35.2109947205
theta: 4.64050769806
speed: 13.8179607391
id: 1
t: 203
xxx after update is x: -2.78587698936
y: -35.7198410034
theta: 4.79687690735
speed: 13.7719583511
id: 1
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.78587698936
y: -35.7198410034
theta: 4.79687690735
speed: 13.7719583511
id: 1
t: 204
xxx after update is x: -3.53703188896
y: -36.3993644714
theta: 4.71599769592
speed: 13.8153877258
id: 1
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:205


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5183999999999984]
222 self.state_dicts[msg.id][msg.t] is (-73.10652160644531, 4.001637935638428, 3.1418089866638184, 13.879082679748535)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:206


xxx before update is x: -3.53703188896
y: -36.3993644714
theta: 4.71599769592
speed: 13.8153877258
id: 1
t: 205
xxx after update is x: -3.35399603844
y: -37.8916397095
theta: 4.71722364426
speed: 13.6532392502
id: 1
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 9.15555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 9.15555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '9.2', 'Position': ['(-73.92446899414062', ' 2.9030685424804688', ' 3.2338755130767822)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,9.2,(-73.92446899414062, 2.9030685424804688, 3.2338755130767822),14,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:207


.10835671425
speed: 14.0215072632
id: 0
t: 206
xxx after update is x: -73.9244689941
y: 2.90306854248
theta: 3.23387551308
speed: 14.0595340729
id: 0
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.2






self.maneuver_requested left
RELEASE,0,9.2,(-73.92446899414062, 2.9030685424804688, 3.2338755130767822),14,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 9.2
self.communication_details == 0
sending RELEASE,0,9.2,(-73.92446899414062, 2.9030685424804688, 3.2338755130767822),14,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-2.7459495067596436, -38.155029296875, 4.752476692199707, 13.968947410583496)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -73.9244689941
y: 2.90306854248
theta: 3.23387551308
speed: 14.0595340729
id: 0
t: 207
xxx after update is x: -75.3790969849
y: 3.01146864891
theta: 3.08090353012
speed: 14.0205516815
id: 0
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:208




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -75.3790969849
y: 3.01146864891
theta: 3.08090353012
speed: 14.0205516815
id: 0
t: 208
xxx after update is x: -75.185256958
y: 3.25057339668
theta: 3.07808017731
speed: 13.6579246521
id: 0
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -75.185256958
y: 3.25057339668
theta: 3.07808017731
speed: 13.6579246521
id: 0
t: 209
xxx after update is x: -75.4801101685
y: 3.36294555664
theta: 3.23839402199
speed: 13.7724714279
id: 0
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:211


xxx before update is x: -75.4801101685
y: 3.36294555664
theta: 3.23839402199
speed: 13.7724714279
id: 0
t: 210
xxx after update is x: -76.7886581421
y: 3.44284391403
theta: 3.10964632034
speed: 13.9928598404
id: 0
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:212


xxx before update is x: -76.7886581421
y: 3.44284391403
theta: 3.10964632034
speed: 13.9928598404
id: 0
t: 211
xxx after update is x: -77.4903717041
y: 3.51622891426
theta: 3.05133676529
speed: 13.9131965637
id: 0
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1639018058776855, -40.84901809692383, 4.6766815185546875, 14.059791564941406)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -77.4903717041
y: 3.51622891426
theta: 3.05133676529
speed: 13.9131965637
id: 0
t: 21xxx before update is x: -3.35399603844
y: -37.8916397095
theta: 4.71722364426
speed: 13.6532392502
id: 1
t: 206
xxx after update is x: -2.74594950676
y: -38.1550292969
theta: 4.7524766922
speed: 13.9689474106
id: 1
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:208


xxx before update is x: -2.74594950676
y: -38.1550292969
theta: 4.7524766922
speed: 13.9689474106
id: 1
t: 207
xxx after update is x: -3.32122802734
y: -38.5259094238
theta: 4.54866361618
speed: 13.7755346298
id: 1
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -3.32122802734
y: -38.5259094238
theta: 4.54866361618
speed: 13.7755346298
id: 1
t: 208
xxx after update is x: -3.14207696915
y: -39.8940238953
theta: 4.75086784363
speed: 13.802690506
id: 1
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -3.14207696915
y: -39.8940238953
theta: 4.75086784363
speed: 13.802690506
id: 1
t: 209
xxx after update is x: -2.56001138687
y: -39.7845039368
theta: 4.6097278595
speed: 14.1464118958
id: 1
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:211


xxx before update is x: -2.56001138687
y: -39.7845039368
theta: 4.6097278595
speed: 14.1464118958
id: 1
t: 210
xxx after update is x: -3.27532935143
y: -40.508731842
theta: 4.80637693405
speed: 13.8614301682
id: 1
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.49919999999999787]
222 self.state_dicts[msg.id][msg.t] is (-76.78865814208984, 3.4428439140319824, 3.1096463203430176, 13.992859840393066)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.37777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:212


xxx before update is x: -3.27532935143
y: -40.508731842
theta: 4.80637693405
speed: 13.8614301682
id: 1
t: 211
xxx after update is x: -3.16390180588
y: -40.8490180969
theta: 4.67668151855
speed: 14.0597915649
id: 1
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -3.16390180588
y: -40.8490180969
theta: 4.67668151855
speed: 14.0597915649
id: 1
t: 212
xxx after update is x: -3.02531456947
y: -41.8099899292
theta: 4.6911854744
speed: 14.1629419327
id: 1
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:214


xxx before update is x: -3.02531456947
y: -41.8099899292
theta: 4.6911854744
speed: 14.1629419327
id: 1
t: 213
xxx after upda2
xxx after update is x: -78.0189208984
y: 3.26062679291
theta: 3.09600234032
speed: 13.8613977432
id: 0
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -78.0189208984
y: 3.26062679291
theta: 3.09600234032
speed: 13.8613977432
id: 0
t: 213
xxx after update is x: -78.6367416382
y: 3.48356413841
theta: 3.13920116425
speed: 14.0421772003
id: 0
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:214




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:215


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.51111111111






self.maneuver_requested left
xxx before update is x: -78.6367416382
y: 3.48356413841
theta: 3.13920116425
speed: 14.0421772003
id: 0
t: 214
xxx after update is x: -79.1764526367
y: 3.00236463547
theta: 3.20043945312
speed: 14.1283473969
id: 0
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion
RELEASE,0,9.51111111111,(-78.6367416381836, 3.4835641384124756, 3.1392011642456055),14,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 9.55555555556
self.communication_details == 0
sending RELEASE,0,9.51111111111,(-78.6367416381836, 3.4835641384124756, 3.1392011642456055),14,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -79.1764526367
y: 3.00236463547
theta: 3.20043945312
speed: 14.1283473969
id: 0
t: 215
xxx after update is x: -80.046295166
y: 3.02312779427
theta: 3.074852705
speed: 13.6191320419
id: 0
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:216




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -80.046295166
y: 3.02312779427
theta: 3.074852705
speed: 13.6191320419
id: 0
t: 216
xxx after update is x: -81.1420974731
y: 3.47416424751
theta: 3.15928411484
speed: 13.506269455
id: 0
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:217




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -81.1420974731
y: 3.47416424751
theta: 3.15928411484
speed: 13.506269455
id: 0
t: 217
xxx after update is x: -81.2575759888
y: 3.4947373867
theta: 3.21926403046
speed: 13.7430095673
id: 0
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:218




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -81.2575759888
y: 3.4947373867
theta: 3.21926403046
speed: 13.7430095673
id: 0
t: 218
xxx after update is x: -81.8872299194
y: 3.15838718414
theta: 3.01567006111
speed: 13.7545585632
id: 0
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -81.8872299194
y: 3.15838718414
theta: 3.01567006111
speed: 13.7545585632
id: 0
t: 219
xxx after update is x: -82.7298660278
y: 3.44874644279
theta: 3.17728352547
speed: 13.5407876968
id: 0
t: 220
maneuver_negotiatir.py finish the update agent state te is x: -3.17139005661
y: -42.684223175
theta: 4.62821578979
speed: 14.0348882675
id: 1
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 9.51111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 9.51111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '9.51111111111', 'Position': ['(-78.6367416381836', ' 3.4835641384124756', ' 3.1392011642456055)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,9.51111111111,(-78.6367416381836, 3.4835641384124756, 3.1392011642456055),14,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.17139005661
y: -42.684223175
theta: 4.62821578979
speed: 14.0348882675
id: 1
t: 214
xxx after update is x: -2.57410025597
y: -43.2322158813
theta: 4.69653511047
speed: 13.8726119995
id: 1
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:215




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:216


xxx before update is x: -2.57410025597
y: -43.2322158813
theta: 4.69653511047
speed: 13.8726119995
id: 1
t: 215
xxx after update is x: -3.58438873291
y: -43.5934867859
theta: 4.5532002449
speed: 13.7675886154
id: 1
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.58438873291
y: -43.5934867859
theta: 4.5532002449
speed: 13.7675886154
id: 1
t: 216
xxx after update is x: -2.9061498642
y: -44.698348999
theta: 4.80362701416
speed: 13.7757339478
id: 1
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:217




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:218


xxx before update is x: -2.9061498642
y: -44.698348999
theta: 4.80362701416
speed: 13.7757339478
id: 1
t: 217
xxx after update is x: -3.02347803116
y: -45.4097061157
theta: 4.71143579483
speed: 14.2977209091
id: 1
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.02347803116
y: -45.4097061157
theta: 4.71143579483
speed: 14.2977209091
id: 1
t: 218
xxx after update is x: -3.13212704659
y: -46.0038223267
theta: 4.71557092667
speed: 14.1140422821
id: 1
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.73333333333






self.maneuver_requested None
leave the update function 
in spin function, finish the n times spin:219


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4927999999999979]
222 self.state_dicts[msg.id][msg.t] is (-81.8872299194336, 3.1583871841430664, 3.01567006111145, 13.754558563232422)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times sfrom ros funtion
leave the update function 
in spin function, finish the n times spin:220




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -82.7298660278
y: 3.44874644279
theta: 3.17728352547
speed: 13.5407876968
id: 0
t: 220
xxx after update is x: -82.7081680298
y: 3.41033363342
theta: 3.05457735062
speed: 13.6793861389
id: 0
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:222


xxx before update is x: -82.7081680298
y: 3.41033363342
theta: 3.05457735062
speed: 13.6793861389
id: 0
t: 221
xxx after update is x: -83.8129425049
y: 2.86086940765
theta: 3.24613642693
speed: 13.9558744431
id: 0
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.86666666667






self.maneuver_requested left
RELEASE,0,9.86666666667,(-83.81294250488281, 2.8608694076538086, 3.246136426925659),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 9.86666666667
self.communication_details == 0
sending RELEASE,0,9.86666666667,(-83.81294250488281, 2.8608694076538086, 3.246136426925659),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
xxx before update is x: -83.8129425049
y: 2.86086940765
theta: 3.24613642693
speed: 13.9558744431
id: 0
t: 222
xxx after update is x: -84.3859558105
y: 3.37317824364
theta: 3.20262217522
speed: 13.9471940994
id: 0
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:223


aaaaaa
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1942801475524902, -47.64876174926758, 4.685173511505127, 13.784324645996094)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -84.3859558105
y: 3.37317824364
theta: 3.20262217522
speed: 13.9471940994
id: 0
t: 223
xxx after update is x: -85.2773513794
y: 3.30909490585
theta: 3.13345217705
speed: 13.7479496002
id: 0
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:224




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:225


xxx before update is x: -85.2773513794
y: 3.30909490585
theta: 3.13345217705
speed: 13.7479496002
id: 0
t: 224
xxx after update is x: -85.6591720581
y: 3.45477628708
theta: 3.01629924774
speed: 14.1236181259
id: 0
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -85.6591720581
y: 3.45477628708
theta: 3.01629924774
speed: 14.1236181259
id: 0
t: 225
xxx after update is x: -85.9286499023
y: 2.79608821869
theta: 3.15372633934
speed: 13.951333046
id: 0
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:226




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -85.9286499023
y: 2.79608821869
theta: 3.153726339pin:220

xxx before update is x: -3.13212704659
y: -46.0038223267
theta: 4.71557092667
speed: 14.1140422821
id: 1
t: 219
xxx after update is x: -4.29476213455
y: -46.5182876587
theta: 4.66437625885
speed: 14.0941991806
id: 1
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -4.29476213455
y: -46.5182876587
theta: 4.66437625885
speed: 14.0941991806
id: 1
t: 220
xxx after update is x: -3.24481487274
y: -46.8281288147
theta: 4.62041425705
speed: 13.5783872604
id: 1
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:222


xxx before update is x: -3.24481487274
y: -46.8281288147
theta: 4.62041425705
speed: 13.5783872604
id: 1
t: 221
xxx after update is x: -3.30481314659
y: -47.0521430969
theta: 4.86708259583
speed: 13.8001861572
id: 1
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 9.86666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 9.86666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '9.86666666667', 'Position': ['(-83.81294250488281', ' 2.8608694076538086', ' 3.246136426925659)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,9.86666666667,(-83.81294250488281, 2.8608694076538086, 3.246136426925659),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -3.30481314659
y: -47.0521430969
theta: 4.86708259583
speed: 13.8001861572
id: 1
t: 222
xxx after update is x: -3.19428014755
y: -47.6487617493
theta: 4.68517351151
speed: 13.784324646
id: 1
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:224


xxx before update is x: -3.19428014755
y: -47.6487617493
theta: 4.68517351151
speed: 13.784324646
id: 1
t: 223
xxx after update is x: -3.43002581596
y: -48.4958572388
theta: 4.52831315994
speed: 13.6668348312
id: 1
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:225


xxx before update is x: -3.43002581596
y: -48.4958572388
theta: 4.52831315994
speed: 13.6668348312
id: 1
t: 224
xxx after update is x: -2.61641764641
y: -49.1037750244
theta: 4.70819091797
speed: 13.9505195618
id: 1
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.61641764641
y: -49.1037750244
theta: 4.70819091797
speed: 13.9505195618
id: 1
t: 225
xxx after update is x: -2.82368564606
y: -50.1927185059
theta: 4.72125244141
speed: 13.8444643021
id: 1
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:226


************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.0444444444






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -2.82368564606
y: -50.1927185059
theta: 4.72125244141
speed: 13.8444643021
id: 1
t: 226
xxx after update is x: -3.14613628387
y: -50.3977508545
theta: 4.71802711487
speed: 14.2614431381
id: 1
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.49919999999999787]
222 self.state_dicts[msg.id][msg.t] is (-86.89693450927734, 2.694121837615967, 3.166537284851074, 13.858656883239746)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:228


xxx before update is x: -3.14613628387
y: -50.3977508545
theta: 4.71802711487
speed: 14.2614431381
id: 1
t: 227
xxx after update is x: -2.85162830353
y: -51.0688781738
theta: 4.79685688019
speed: 14.0011644363
id: 1
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -2.85162830353
y: -51.0688781738
theta: 4.79685688019
speed: 14.0011644363
id: 1
t: 228
xxx after update is x: -3.59095478058
y: -51.9007720947
theta: 4.7587146759
speed: 13.8349161148
id: 1
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -3.59095478058
y: -51.9007720947
theta: 4.7587146759
speed: 13.8349161148
id: 1
t: 229
xxx after update is x: -2.96785950661
y: -52.5269432068
theta: 4.95938205719
speed: 13.9742860794
id: 1
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 10.2222222222




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 10.2222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '10.2222222222', 'Position': ['(-88.64665222167969', ' 2.5075161457061768', ' 3.0961968898773193)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,10.2222222222,(-88.64665222167969, 2.5075161457061768, 3.0961968898773193),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:231


xxx before update is x: -2.96785950661
y: -52.5269432068
theta: 4.95938205719
speed: 13.9742860794
id: 1
t: 230
xxx after update is x: -3.29825091362
y: -53.432510376
theta: 4.72789573669
speed: 14.0009479523
id: 1
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.29825091362
y: -53.432510376
theta: 4.72789573669
speed: 14.0009479523
id: 1
t: 231
xxx after update is x: -3.7272310257
y: -53.7132797241
theta: 4.80833435059
speed: 13.8988637924
id: 1
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, fi34
speed: 13.951333046
id: 0
t: 226
xxx after update is x: -86.8969345093
y: 2.69412183762
theta: 3.16653728485
speed: 13.8586568832
id: 0
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:227




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -86.8969345093
y: 2.69412183762
theta: 3.16653728485
speed: 13.8586568832
id: 0
t: 227
xxx after update is x: -87.327003479
y: 3.22868895531
theta: 3.14194083214
speed: 14.0016231537
id: 0
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:228




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -87.327003479
y: 3.22868895531
theta: 3.14194083214
speed: 14.0016231537
id: 0
t: 228
xxx after update is x: -87.9017410278
y: 2.96473360062
theta: 3.12870502472
speed: 13.8838567734
id: 0
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -87.9017410278
y: 2.96473360062
theta: 3.12870502472
speed: 13.8838567734
id: 0
t: 229
xxx after update is x: -88.6466522217
y: 2.50751614571
theta: 3.09619688988
speed: 13.802063942
id: 0
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.2222222222






self.maneuver_requested left
RELEASE,0,10.2222222222,(-88.64665222167969, 2.5075161457061768, 3.0961968898773193),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 10.2222222222
self.communication_details == 0
sending RELEASE,0,10.2222222222,(-88.64665222167969, 2.5075161457061768, 3.0961968898773193),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:231


xxx before update is x: -88.6466522217
y: 2.50751614571
theta: 3.09619688988
speed: 13.802063942
id: 0
t: 230
xxx after update is x: -89.0722198486
y: 3.01980352402
theta: 3.19505524635
speed: 14.2618923187
id: 0
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:232


xxx before update is x: -89.0722198486
y: 3.01980352402
theta: 3.19505524635
speed: 14.2618923187
id: 0
t: 231
xxx after update is x: -89.5339202881
y: 2.98386645317
theta: 2.96377396584
speed: 14.169593811
id: 0
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -89.5339202881
y: 2.98386645317
theta: 2.96377396584
speed: 14.169593811
id: 0
t: 232
xxx after update is x: -90.0252532959
y: 3.01338577271
theta: 3.16908597946
speed: 13.855931282
id: 0
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.6072139739990234, -54.786521911621094, 4.674457550048828, 14.016558647155762)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state functionish the n times spin:232


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.45599999999999813]
222 self.state_dicts[msg.id][msg.t] is (-89.53392028808594, 2.9838664531707764, 2.9637739658355713, 14.169593811035156)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -3.7272310257
y: -53.7132797241
theta: 4.80833435059
speed: 13.8988637924
id: 1
t: 232
xxx after update is x: -3.607213974
y: -54.7865219116
theta: 4.67445755005
speed: 14.0165586472
id: 1
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -3.607213974
y: -54.7865219116
theta: 4.67445755005
speed: 14.0165586472
id: 1
t: 233
xxx after update is x: -3.17884683609
y: -55.2727546692
theta: 4.79477500916
speed: 14.3950557709
id: 1
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.4






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: -3.17884683609
y: -55.2727546692
theta: 4.79477500916
speed: 14.3950557709
id: 1
t: 234
xxx after update is x: -2.81726813316
y: -55.4470710754
theta: 4.65852165222
speed: 13.9797878265
id: 1
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:235




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.81726813316
y: -55.4470710754
theta: 4.65852165222
speed: 13.9797878265
id: 1
t: 235
xxx after update is x: -2.90378594398
y: -56.7868766785
theta: 4.59668302536
speed: 14.1682510376
id: 1
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:236




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -2.90378594398
y: -56.7868766785
theta: 4.59668302536
speed: 14.1682510376
id: 1
t: 236
xxx after update is x: -3.15352010727
y: -57.1436767578
theta: 4.80980300903
speed: 13.5614347458
id: 1
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -3.15352010727
y: -57.1436767578
theta: 4.80980300903
speed: 13.5614347458
id: 1
t: 237
xxx after update is x: -3.133872509
y: -57.3621177673
theta: 4.74789381027
speed: 14.1242322922
id: 1
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 10.5777777778




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 10.5777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '10.5777777778', 'Position': ['(-93.44426727294922', ' 2.8196446895599365', ' 3.020516872406006)'], 'Type': 'RELEASE'}
car 1 received RELEASE,n


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -90.0252532959
y: 3.01338577271
theta: 3.16908597946
speed: 13.855931282
id: 0
t: 233
xxx after update is x: -90.8839645386
y: 3.70467329025
theta: 3.12181091309
speed: 13.8827981949
id: 0
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -90.8839645386
y: 3.70467329025
theta: 3.12181091309
speed: 13.8827981949
id: 0
t: 234
xxx after update is x: -91.6158752441
y: 3.31477403641
theta: 3.2088663578
speed: 13.5945749283
id: 0
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:236


xxx before update is x: -91.6158752441
y: 3.31477403641
theta: 3.2088663578
speed: 13.5945749283
id: 0
t: 235
xxx after update is x: -92.6214904785
y: 3.34423065186
theta: 3.28698086739
speed: 13.8254156113
id: 0
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -92.6214904785
y: 3.34423065186
theta: 3.28698086739
speed: 13.8254156113
id: 0
t: 236
xxx after update is x: -93.2772598267
y: 2.96215081215
theta: 3.07956695557
speed: 13.9641618729
id: 0
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:237




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -93.2772598267
y: 2.96215081215
theta: 3.07956695557
speed: 13.9641618729
id: 0
t: 237
xxx after update is x: -93.4442672729
y: 2.81964468956
theta: 3.02051687241
speed: 14.2041292191
id: 0
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.5777777778






self.maneuver_requested left
RELEASE,0,10.5777777778,(-93.44426727294922, 2.8196446895599365, 3.020516872406006),14,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 10.5777777778
self.communication_details == 0
sending RELEASE,0,10.5777777778,(-93.44426727294922, 2.8196446895599365, 3.020516872406006),14,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:239


xxx before update is x: -93.4442672729
y: 2.81964468956
theta: 3.02051687241
speed: 14.2041292191
id: 0
t: 238
xxx after update is x: -93.7616195679
y: 3.15504264832
theta: 3.12964391708
speed: 14.0229101181
id: 0
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3751680850982666, -58.05801010131836, 4.90855598449707, 13.531042098999023)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:240


xxx before update is x: -93.7616195679
y: 3.15504264832
theta: 3.12964391708
speed: 14.022910,10.5777777778,(-93.44426727294922, 2.8196446895599365, 3.020516872406006),14,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5199999999999985]
222 self.state_dicts[msg.id][msg.t] is (-93.44426727294922, 2.8196446895599365, 3.020516872406006, 14.204129219055176)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.133872509
y: -57.3621177673
theta: 4.74789381027
speed: 14.1242322922
id: 1
t: 238
xxx after update is x: -3.3751680851
y: -58.0580101013
theta: 4.9085559845
speed: 13.531042099
id: 1
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:239




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:240


xxx before update is x: -3.3751680851
y: -58.0580101013
theta: 4.9085559845
speed: 13.531042099
id: 1
t: 239
xxx after update is x: -3.07386469841
y: -58.1702346802
theta: 4.68287706375
speed: 13.8031101227
id: 1
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.07386469841
y: -58.1702346802
theta: 4.68287706375
speed: 13.8031101227
id: 1
t: 240
xxx after update is x: -3.59923672676
y: -59.4912910461
theta: 4.83478212357
speed: 13.6462659836
id: 1
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:241




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -3.59923672676
y: -59.4912910461
theta: 4.83478212357
speed: 13.6462659836
id: 1
t: 241
xxx after update is x: -3.1626663208
y: -59.7665672302
theta: 4.79742050171
speed: 13.8437681198
id: 1
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.7555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:243


xxx before update is x: -3.1626663208
y: -59.7665672302
theta: 4.79742050171
speed: 13.8437681198
id: 1
t: 242
xxx after update is x: -3.39122438431
y: -61.1403198242
theta: 4.72949361801
speed: 13.8002309799
id: 1
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.39122438431
y: -61.1403198242
theta: 4.72949361801
speed: 13.8002309799
id: 1
t: 243
xxx after update is x: -3.62306690216
y: -61.257358551
theta: 4.67218780518
speed: 14.1890153885
id: 1
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:244


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-97.22663879394531, 3.600846290588379, 2.9371368885040283, 13.800642967224121)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxx01181
id: 0
t: 239
xxx after update is x: -94.4491577148
y: 2.79997229576
theta: 3.11039471626
speed: 14.0039072037
id: 0
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:241


xxx before update is x: -94.4491577148
y: 2.79997229576
theta: 3.11039471626
speed: 14.0039072037
id: 0
t: 240
xxx after update is x: -95.7262573242
y: 3.21707963943
theta: 3.30984115601
speed: 13.7403783798
id: 0
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -95.7262573242
y: 3.21707963943
theta: 3.30984115601
speed: 13.7403783798
id: 0
t: 241
xxx after update is x: -95.9522018433
y: 3.31836366653
theta: 3.12802124023
speed: 13.7483577728
id: 0
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:243


xxx before update is x: -95.9522018433
y: 3.31836366653
theta: 3.12802124023
speed: 13.7483577728
id: 0
t: 242
xxx after update is x: -96.7640991211
y: 3.29813766479
theta: 3.18108654022
speed: 14.1288204193
id: 0
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:244


xxx before update is x: -96.7640991211
y: 3.29813766479
theta: 3.18108654022
speed: 14.1288204193
id: 0
t: 243
xxx after update is x: -97.2266387939
y: 3.60084629059
theta: 2.9371368885
speed: 13.8006429672
id: 0
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.6230669021606445, -61.25735855102539, 4.672187805175781, 14.18901538848877)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:245


xxx before update is x: -97.2266387939
y: 3.60084629059
theta: 2.9371368885
speed: 13.8006429672
id: 0
t: 244
xxx after update is x: -97.9599227905
y: 2.94465756416
theta: 3.11195492744
speed: 14.115694046
id: 0
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:246


xxx before update is x: -97.9599227905
y: 2.94465756416
theta: 3.11195492744
speed: 14.115694046
id: 0
t: 245
xxx after update is x: -98.6723327637
y: 3.37005853653
theta: 3.25450110435
speed: 13.8533029556
id: 0
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.9333333333






self.maneuver_requested left
RELEASE,0,10.9333333333,(-98.67233276367188, 3.370058536529541, 3.2545011043548584),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 10.9333333333
self.communication_details == 0
sending RELEASE,0,10.9333333333,(-98.67233276367188, 3.370058536529541, 3.2545011043548584),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.spexxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:245


xxx before update is x: -3.62306690216
y: -61.257358551
theta: 4.67218780518
speed: 14.1890153885
id: 1
t: 244
xxx after update is x: -3.39450573921
y: -61.2389984131
theta: 4.65956401825
speed: 14.0420179367
id: 1
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 10.8888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 10.8888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '10.9333333333', 'Position': ['(-98.67233276367188', ' 3.370058536529541', ' 3.2545011043548584)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,10.9333333333,(-98.67233276367188, 3.370058536529541, 3.2545011043548584),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:246


xxx before update is x: -3.39450573921
y: -61.2389984131
theta: 4.65956401825
speed: 14.0420179367
id: 1
t: 245
xxx after update is x: -2.94362831116
y: -62.5176200867
theta: 4.77464294434
speed: 13.9326725006
id: 1
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -2.94362831116
y: -62.5176200867
theta: 4.77464294434
speed: 13.9326725006
id: 1
t: 246
xxx after update is x: -3.10842108727
y: -63.2755508423
theta: 4.81799316406
speed: 13.8623666763
id: 1
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-98.88850402832031, 3.4635891914367676, 2.9833338260650635, 13.813319206237793)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.10842108727
y: -63.2755508423
theta: 4.81799316406
speed: 13.8623666763
id: 1
t: 247
xxx after update is x: -3.56323266029
y: -63.7422943115
theta: 4.70349311829
speed: 13.8704605103
id: 1
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:248




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -3.56323266029
y: -63.7422943115
theta: 4.70349311829
speed: 13.8704605103
id: 1
t: 248
xxx after update is x: -4.32795190811
y: -64.6290740967
theta: 4.76307678223
speed: 13.8343219757
id: 1
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:250


xxx before update is x: -4.32795190811
y: -64.6290740967
theta: 4.76307678223
speed: 13.8343219757
id: 1
t: 249
xxx after update is x: -2.73766708374
y: -65.0981903076
theta: 4.70335865021
speed: 13.9833517075
id: 1
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.1111111111






self.maneuver_requested None
maneuver_negotiatir.py ed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -98.6723327637
y: 3.37005853653
theta: 3.25450110435
speed: 13.8533029556
id: 0
t: 246
xxx after update is x: -98.8885040283
y: 3.46358919144
theta: 2.98333382607
speed: 13.8133192062
id: 0
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -98.8885040283
y: 3.46358919144
theta: 2.98333382607
speed: 13.8133192062
id: 0
t: 247
xxx after update is x: -99.1811599731
y: 3.26638770103
theta: 2.95397996902
speed: 13.9810943604
id: 0
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.563232660293579, -63.74229431152344, 4.703493118286133, 13.870460510253906)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -99.1811599731
y: 3.26638770103
theta: 2.95397996902
speed: 13.9810943604
id: 0
t: 248
xxx after update is x: -100.554367065
y: 3.16601920128
theta: 3.20856237411
speed: 13.7639131546
id: 0
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:250


xxx before update is x: -100.554367065
y: 3.16601920128
theta: 3.20856237411
speed: 13.7639131546
id: 0
t: 249
xxx after update is x: -101.359939575
y: 3.73404765129
theta: 2.95724248886
speed: 13.9737567902
id: 0
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:251


xxx before update is x: -101.359939575
y: 3.73404765129
theta: 2.95724248886
speed: 13.9737567902
id: 0
t: 250
xxx after update is x: -101.627937317
y: 3.69047117233
theta: 3.05423092842
speed: 13.9357614517
id: 0
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:252


xxx before update is x: -101.627937317
y: 3.69047117233
theta: 3.05423092842
speed: 13.9357614517
id: 0
t: 251
xxx after update is x: -101.472373962
y: 3.03580284119
theta: 3.05769181252
speed: 13.9801015854
id: 0
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:253


xxx before update is x: -101.472373962
y: 3.03580284119
theta: 3.05769181252
speed: 13.9801015854
id: 0
t: 252
xxx after update is x: -102.749885559
y: 3.18652391434
theta: 2.98661327362
speed: 13.7459688187
id: 0
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:254


xxx before update is x: -102.749885559
y: 3.18652391434
theta: 2.98661327362
speed: 13.7459688187
id: 0
t: 253
xxx after update is x: -103.454620361
y: 3.21914029121
theta: 3.11886382103
speed: 13.5516138077
id: 0
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatirin the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:251


xxx before update is x: -2.73766708374
y: -65.0981903076
theta: 4.70335865021
speed: 13.9833517075
id: 1
t: 250
xxx after update is x: -3.01675486565
y: -65.0259857178
theta: 4.67197847366
speed: 13.8290996552
id: 1
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:252


xxx before update is x: -3.01675486565
y: -65.0259857178
theta: 4.67197847366
speed: 13.8290996552
id: 1
t: 251
xxx after update is x: -3.22469782829
y: -66.2823181152
theta: 4.84546041489
speed: 14.1747999191
id: 1
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5311999999999988]
222 self.state_dicts[msg.id][msg.t] is (-101.47237396240234, 3.0358028411865234, 3.057691812515259, 13.980101585388184)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:253


xxx before update is x: -3.22469782829
y: -66.2823181152
theta: 4.84546041489
speed: 14.1747999191
id: 1
t: 252
xxx after update is x: -3.06703805923
y: -66.7267608643
theta: 4.58980226517
speed: 13.8766870499
id: 1
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 11.2444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 11.2444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '11.2888888889', 'Position': ['(-103.45462036132812', ' 3.2191402912139893', ' 3.118863821029663)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,11.2888888889,(-103.45462036132812, 3.2191402912139893, 3.118863821029663),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:254


xxx before update is x: -3.06703805923
y: -66.7267608643
theta: 4.58980226517
speed: 13.8766870499
id: 1
t: 253
xxx after update is x: -3.2828001976
y: -67.003616333
theta: 4.64106178284
speed: 14.3558340073
id: 1
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:255


xxx before update is x: -3.2828001976
y: -67.003616333
theta: 4.64106178284
speed: 14.3558340073
id: 1
t: 254
xxx after update is x: -3.35024237633
y: -67.557975769
theta: 4.63378190994
speed: 13.8808736801
id: 1
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:256


xxx before update is x: -3.35024237633
y: -67.557975769
theta: 4.63378190994
speed: 13.8808736801
id: 1
t: 255
xxx after update is x: -3.03991055489
y: -68.4714050293
theta: 4.60107755661
speed: 13.6582508087
id: 1
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion
************no.py in the try maneuver function update -. strat
current clock is 11.2888888889






self.maneuver_requested left
RELEASE,0,11.2888888889,(-103.45462036132812, 3.2191402912139893, 3.118863821029663),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 11.2888888889
self.communication_details == 0
sending RELEASE,0,11.2888888889,(-103.45462036132812, 3.2191402912139893, 3.118863821029663),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2828001976013184, -67.00361633300781, 4.641061782836914, 14.355834007263184)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:255


xxx before update is x: -103.454620361
y: 3.21914029121
theta: 3.11886382103
speed: 13.5516138077
id: 0
t: 254
xxx after update is x: -103.961029053
y: 3.12913489342
theta: 3.17761278152
speed: 14.2141866684
id: 0
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:256


xxx before update is x: -103.961029053
y: 3.12913489342
theta: 3.17761278152
speed: 14.2141866684
id: 0
t: 255
xxx after update is x: -104.785209656
y: 3.06259846687
theta: 3.12833189964
speed: 13.8502588272
id: 0
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:257


xxx before update is x: -104.785209656
y: 3.06259846687
theta: 3.12833189964
speed: 13.8502588272
id: 0
t: 256
xxx after update is x: -105.80267334
y: 3.19611358643
theta: 3.08413958549
speed: 14.21824646
id: 0
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:258


xxx before update is x: -105.80267334
y: 3.19611358643
theta: 3.08413958549
speed: 14.21824646
id: 0
t: 257
xxx after update is x: -105.844223022
y: 3.61540198326
theta: 3.18200397491
speed: 14.2026357651
id: 0
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -105.844223022
y: 3.61540198326
theta: 3.18200397491
speed: 14.2026357651
id: 0
t: 258
xxx after update is x: -112.367630005
y: 3.60139894485
theta: 3.05176639557
speed: 14.1667194366
id: 0
t: 259
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.5111111111






self.maneuver_requested left
RELEASE,0,11.5111111111,(-112.36763000488281, 3.6013989448547363, 3.0517663955688477),14,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 11.5111111111
self.communication_details == 0
sending RELEASE,0,11.5111111111,(-112.36763000488281, 3.6013989448547363, 3.0517663955688477),14,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
leave the update function 
in spin function, finish the n times spin:259




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -112.367630005
y: 3.60139894485
theta: 3.05176639557
speed: 14.1667194366
id: 0
t: 259
xxx after update is x: -111.544174194
y: 3.41810536385
theta: 3.19943714142
speed: 13.9456577301
id: 0
t: 260
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:260


maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.0, 0.0]
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.5555555556






self.maneuver_requested left
RELEASE,0,11.5555555556,(-111.54417419433594, 3.418105363845825, 3.199437141418457),13,1,1.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 11.5555555556
self.communication_details == 0
sending RELEASE,0,11.5555555556,(-111.54417419433594, 3.418105363845825, 3.199437141418457),13,1,1.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:261


rmalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:257


xxx before update is x: -3.03991055489
y: -68.4714050293
theta: 4.60107755661
speed: 13.6582508087
id: 1
t: 256
xxx after update is x: -3.77674269676
y: -69.0661849976
theta: 4.63797521591
speed: 13.4590930939
id: 1
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-105.80267333984375, 3.1961135864257812, 3.084139585494995, 14.218246459960938)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:258


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.4222222222






self.maneuver_requested None
xxx before update is x: -3.77674269676
y: -69.0661849976
theta: 4.63797521591
speed: 13.4590930939
id: 1
t: 257
xxx after update is x: -3.26376819611
y: -69.7018585205
theta: 4.70476102829
speed: 13.7943515778
id: 1
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 11.4666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 11.4666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '11.5111111111', 'Position': ['(-112.36763000488281', ' 3.6013989448547363', ' 3.0517663955688477)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,11.5111111111,(-112.36763000488281, 3.6013989448547363, 3.0517663955688477),14,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48319999999999796]
Received -->>: 
current clock is 11.4666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 11.4666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '11.5555555556', 'Position': ['(-111.54417419433594', ' 3.418105363845825', ' 3.199437141418457)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,11.5555555556,(-111.54417419433594, 3.418105363845825, 3.199437141418457),13,1,1.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.4666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:259


... logging to /home/lu/.ros/log/581e40be-02bb-11e9-ae37-000c291801fc/roslaunch-ubuntu-34233.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch
[1mstarted roslaunch server http://ubuntu:38499/[0m

SUMMARY
========

PARAMETERS
 * /enable_negotiator: True
 * /file_prefix: 
 * /nr_cars: 2
 * /plot: False
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /save: False

NODES
  /
    car0 (virtual_blinker/sim.py)
    car1 (virtual_blinker/sim.py)
    cloud (virtual_blinker/cloud.py)
    rviz (rviz/rviz)
    visualization (virtual_blinker/visualization.py)

auto-starting new master
[1mprocess[master]: started with pid [34253][0m
[1mROS_MASTER_URI=http://localhost:11311[0m
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch http://localhost:11311
[1msetting /run_id to 581e40be-02bb-11e9-ae37-000c291801fc[0m
[1mprocess[rosout-1]: started with pid [34267][0m
started core service [/rosout]
[1mprocess[visualization-2]: started with pid [34270][0m
[1mprocess[rviz-3]: started with pid [34282][0m
[1mprocess[car0-4]: started with pid [34286][0m
[1mprocess[car1-5]: started with pid [34287][0m
[1mprocess[cloud-6]: started with pid [34288][0m
[cloud-6] killing on exit
[car1-5] killing on exit
[car0-4] killing on exit
[rviz-3] killing on exit
[visualization-2] killing on exit
[rosout-1] killing on exit
[master] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
[1mdone[0m
