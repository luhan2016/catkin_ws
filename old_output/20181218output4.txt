sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 0
s is car_state1
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.239603996277


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:1


222 self.state_dicts[msg.id][msg.t] is (-3.1400177478790283, 34.25431442260742, 4.693619251251221, 13.78116226196289)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7fe1e07a7cf8>
self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7fe1e07d08c0>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:2


maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:3


maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9000)
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (-3.8305516242980957, 33.35790252685547, 4.4758992195129395, 14.304723739624023)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:4




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:5


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: 3.2009305954
y: -102.397293091
theta: 1.64584863186
speed: 14.0592260361
id: 0
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: 3.2009305954
y: -102.397293091
theta: 1.64584863186
speed: 14.0592260361
id: 0
t: 5
xxx after update is x: 3.27703356743
y: -101.639625549
theta: 1.5981938839
speed: 13.7097406387
id: 0
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:7


xxx before update is x: 3.27703356743
y: -101.639625549
theta: 1.5981938839
speed: 13.7097406387
id: 0
t: 6
xxx after update is x: 3.67809963226
y: -100.636154175
theta: 1.55083918571
speed: 14.0878868103
id: 0
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 1
s is car_state0
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.295167922974
222 self.state_dicts[msg.id][msg.t] is (2.9741170406341553, -104.3520278930664, 1.411171793937683, 14.081869125366211)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:1




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:2


222 self.state_dicts[msg.id][msg.t] is (3.560023307800293, -103.57667541503906, 1.5524258613586426, 13.87783432006836)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7f39ac29b320>


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:3




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:4


self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f39ac2b8560>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:5


maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:6


maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9001)
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (3.277033567428589, -101.6396255493164, 1.598193883895874, 13.70974063873291)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:7




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: -4.08339595795
y: 29.7597579956
theta: 4.52729463577
speed: 13.6175498962
id: 1
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: -4.08339595795
y: 29.7597579956
thexxx before update is x: 3.67809963226
y: -100.636154175
theta: 1.55083918571
speed: 14.0878868103
id: 0
t: 7
xxx after update is x: 3.34051299095
y: -99.8889160156
theta: 1.4814735651
speed: 13.8036308289
id: 0
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:8




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.34051299095
y: -99.8889160156
theta: 1.4814735651
speed: 13.8036308289
id: 0
t: 8
xxx after update is x: 3.45780587196
y: -99.2579956055
theta: 1.5311306715
speed: 13.9817314148
id: 0
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:9




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: 3.45780587196
y: -99.2579956055
theta: 1.5311306715
speed: 13.9817314148
id: 0
t: 9
xxx after update is x: 3.59088134766
y: -98.6381378174
theta: 1.81343436241
speed: 13.8427762985
id: 0
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.444444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: 3.59088134766
y: -98.6381378174
theta: 1.81343436241
speed: 13.8427762985
id: 0
t: 10
xxx after update is x: 3.25626778603
y: -98.2439117432
theta: 1.62109470367
speed: 13.9350585938
id: 0
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: 3.25626778603
y: -98.2439117432
theta: 1.62109470367
speed: 13.9350585938
id: 0
t: 11
xxx after update is x: 3.28030014038
y: -97.5029373169
theta: 1.52201187611
speed: 13.6995868683
id: 0
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: 3.28030014038
y: -97.5029373169
theta: 1.52201187611
speed: 13.6995868683
id: 0
t: 12
xxx after update is x: 2.97833037376
y: -97.1347427368
theta: 1.78426277637
speed: 13.8815155029
id: 0
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: 2.97833037376
y: -97.1347427368
theta: 1.78426277637
speed: 13.8815155029
id: 0
t: 13
xxx after update is x: 3.40270185471
y: -95.8041229248
theta: 1.58474934101
speed: 14.0382099152
id: 0
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: 3.40270185471
y: -95.8041229248
theta: 1.58474934101
speed: 14.0382099152
id: 0
t: 14
xxx after update is x: 3.66889166832
y: -94.8266372681
theta: 1.6126999855
speed: 13.8557300568
id: 0
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.66889166832
y: -94.8266372681
theta: 1.6126999855
speed: 13.8557300568
id: 0
t: 15
xxx after update is x: 2.67533040047
y: -94.6954193115
theta: 4.52729463577
speed: 13.6175498962
id: 1
t: 8
xxx after update is x: -3.22355437279
y: 29.6061058044
theta: 4.74637508392
speed: 14.3173742294
id: 1
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.22355437279
y: 29.6061058044
theta: 4.74637508392
speed: 14.3173742294
id: 1
t: 9
xxx after update is x: -3.54114222527
y: 28.7481689453
theta: 4.7023358345
speed: 13.7525396347
id: 1
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:10




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: -3.54114222527
y: 28.7481689453
theta: 4.7023358345
speed: 13.7525396347
id: 1
t: 10
xxx after update is x: -2.893835783
y: 27.6748065948
theta: 4.62985754013
speed: 14.0217657089
id: 1
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: -2.893835783
y: 27.6748065948
theta: 4.62985754013
speed: 14.0217657089
id: 1
t: 11
xxx after update is x: -3.50936818123
y: 27.7979202271
theta: 4.64826631546
speed: 13.508562088
id: 1
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.533333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: -3.50936818123
y: 27.7979202271
theta: 4.64826631546
speed: 13.508562088
id: 1
t: 12
xxx after update is x: -3.52962088585
y: 27.0716056824
theta: 4.65666437149
speed: 13.8660078049
id: 1
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: -3.52962088585
y: 27.0716056824
theta: 4.65666437149
speed: 13.8660078049
id: 1
t: 13
xxx after update is x: -3.24145507812
y: 26.2801208496
theta: 4.86649990082
speed: 13.8365182877
id: 1
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: -3.24145507812
y: 26.2801208496
theta: 4.86649990082
speed: 13.8365182877
id: 1
t: 14
xxx after update is x: -2.90288352966
y: 25.3624191284
theta: 4.75143527985
speed: 14.1814193726
id: 1
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.90288352966
y: 25.3624191284
theta: 4.75143527985
speed: 14.1814193726
id: 1
t: 15
xxx after update is x: -3.44056344032
y: 24.7288131714
theta: 4.77850198746
speed: 13.9869022369
id: 1
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:16




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: -3.44056344032
y: 24.7288131714
theta: 4.77850198746
speed: 13.9869022369ta: 1.63182199001
speed: 13.9545326233
id: 0
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:16




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: 2.67533040047
y: -94.6954193115
theta: 1.63182199001
speed: 13.9545326233
id: 0
t: 16
xxx after update is x: 3.50269055367
y: -94.2143554688
theta: 1.3116953373
speed: 13.981880188
id: 0
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.755555555556






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: 3.50269055367
y: -94.2143554688
theta: 1.3116953373
speed: 13.981880188
id: 0
t: 17
xxx after update is x: 2.96087193489
y: -94.116394043
theta: 1.49958968163
speed: 13.956114769
id: 0
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: 2.96087193489
y: -94.116394043
theta: 1.49958968163
speed: 13.956114769
id: 0
t: 18
xxx after update is x: 3.19291782379
y: -93.3573532104
theta: 1.67283403873
speed: 13.8881626129
id: 0
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: 3.19291782379
y: -93.3573532104
theta: 1.67283403873
speed: 13.8881626129
id: 0
t: 19
xxx after update is x: 3.6751396656
y: -92.1903686523
theta: 1.4369571209
speed: 14.0285806656
id: 0
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.4883530065838092, 0.24674334260827127]
222 self.state_dicts[msg.id][msg.t] is (-2.962921619415283, 22.06706428527832, 4.632143497467041, 13.922988891601562)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.6751396656
y: -92.1903686523
theta: 1.4369571209
speed: 14.0285806656
id: 0
t: 20
xxx after update is x: 2.91308784485
y: -92.1191482544
theta: 1.47188830376
speed: 13.9969882965
id: 0
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:21




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: 2.91308784485
y: -92.1191482544
theta: 1.47188830376
speed: 13.9969882965
id: 0
t: 21
xxx after update is x: 3.09992623329
y: -91.3655395508
theta: 1.72489786148
speed: 13.7840127945
id: 0
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: 3.09992623329
y: -91.3655395508
theta: 1.72489786148
speed: 13.7840127945
id: 0
t: 22
xxx after update is x: 3.5576376915
y: -90.6276397705
theta: 1.71385800838
speed: 13.9554224014
id: 0
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
id: 1
t: 16
xxx after update is x: -2.79498553276
y: 24.5500659943
theta: 4.81963920593
speed: 13.7737293243
id: 1
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: -2.79498553276
y: 24.5500659943
theta: 4.81963920593
speed: 13.7737293243
id: 1
t: 17
xxx after update is x: -3.4839527607
y: 23.3814067841
theta: 4.8569278717
speed: 13.6194000244
id: 1
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: -3.4839527607
y: 23.3814067841
theta: 4.8569278717
speed: 13.6194000244
id: 1
t: 18
xxx after update is x: -3.4876101017
y: 23.2439308167
theta: 4.74460268021
speed: 14.3741731644
id: 1
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: -3.4876101017
y: 23.2439308167
theta: 4.74460268021
speed: 14.3741731644
id: 1
t: 19
xxx after update is x: -2.96292161942
y: 22.0670642853
theta: 4.63214349747
speed: 13.9229888916
id: 1
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.888888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: -2.96292161942
y: 22.0670642853
theta: 4.63214349747
speed: 13.9229888916
id: 1
t: 20
xxx after update is x: -2.88560628891
y: 22.2754039764
theta: 4.67542886734
speed: 13.5395412445
id: 1
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.35779281664084644, 0.31812840978342166]
222 self.state_dicts[msg.id][msg.t] is (2.913087844848633, -92.11914825439453, 1.4718883037567139, 13.996988296508789)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: -2.88560628891
y: 22.2754039764
theta: 4.67542886734
speed: 13.5395412445
id: 1
t: 21
xxx after update is x: -3.37031054497
y: 21.3438720703
theta: 4.62085008621
speed: 13.525147438
id: 1
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: -3.37031054497
y: 21.3438720703
theta: 4.62085008621
speed: 13.525147438
id: 1
t: 22
xxx after update is x: -3.13920712471
y: 20.8529777527
theta: 4.8119096756
speed: 13.655544281
id: 1
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: -3.13920712471
y: 20.8529777527
theta: 4.8119096756
speed: 13.655544281
id: 1
t: 23
xxx after update is x: -2.96126484871
y: 20.2248210907
theta: 4.71702957153
speed: 13.8249673843
id: 1
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim
in spin function, finish the n times spin:24


 xxx before update is x: 3.5576376915
y: -90.6276397705
theta: 1.71385800838
speed: 13.9554224014
id: 0
t: 23
xxx after update is x: 2.82142400742
y: -89.8408966064
theta: 1.54750680923
speed: 13.714512825
id: 0
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: 2.82142400742
y: -89.8408966064
theta: 1.54750680923
speed: 13.714512825
id: 0
t: 24
xxx after update is x: 3.02095937729
y: -89.4804916382
theta: 1.53516924381
speed: 14.0435400009
id: 0
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:26


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.11111111111






self.maneuver_requested None
xxx before update is x: 3.02095937729
y: -89.4804916382
theta: 1.53516924381
speed: 14.0435400009
id: 0
t: 25
xxx after update is x: 3.75913715363
y: -88.8002624512
theta: 1.54973471165
speed: 13.6112804413
id: 0
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.75913715363
y: -88.8002624512
theta: 1.54973471165
speed: 13.6112804413
id: 0
t: 26
xxx after update is x: 2.74622058868
y: -88.3811187744
theta: 1.50597679615
speed: 14.0124540329
id: 0
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:27




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.74622058868
y: -88.3811187744
theta: 1.50597679615
speed: 14.0124540329
id: 0
t: 27
xxx after update is x: 3.71652436256
y: -87.8657608032
theta: 1.57848644257
speed: 13.9505271912
id: 0
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:28




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.71652436256
y: -87.8657608032
theta: 1.57848644257
speed: 13.9505271912
id: 0
t: 28
xxx after update is x: 3.31979250908
y: -87.2736740112
theta: 1.63452517986
speed: 14.1385221481
id: 0
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:29




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: 3.31979250908
y: -87.2736740112
theta: 1.63452517986
speed: 14.1385221481
id: 0
t: 29
xxx after update is x: 3.07257127762
y: -86.5725250244
theta: 1.47673368454
speed: 13.6007852554
id: 0
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.07257127762
y: -86.5725250244
theta: 1.47673368454
speed: 13.6007852554
id: 0
t: 30
xxx after update is x: 2.99516177177
y: -85.9792098999
theta: 1.5991897583
speed: 13.9185218811
id: 0
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:31


aaaaaa
risk is [0.4272974082085523, 0.09396909276831165]
222 self.state_dicts[msg.id][msg.t] is (-3.313109874725342, 16.19980239868164, 4.810622215270996, 13.595392227172852)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call u.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: -2.96126484871
y: 20.2248210907
theta: 4.71702957153
speed: 13.8249673843
id: 1
t: 24
xxx after update is x: -3.2441008091
y: 19.7015151978
theta: 4.67720746994
speed: 13.7373399734
id: 1
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: -3.2441008091
y: 19.7015151978
theta: 4.67720746994
speed: 13.7373399734
id: 1
t: 25
xxx after update is x: -3.43205833435
y: 18.8909053802
theta: 4.54557418823
speed: 13.9986877441
id: 1
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: -3.43205833435
y: 18.8909053802
theta: 4.54557418823
speed: 13.9986877441
id: 1
t: 26
xxx after update is x: -3.65595936775
y: 18.2920265198
theta: 4.65295410156
speed: 13.7363605499
id: 1
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.65595936775
y: 18.2920265198
theta: 4.65295410156
speed: 13.7363605499
id: 1
t: 27
xxx after update is x: -3.23724651337
y: 17.6021728516
theta: 4.79656410217
speed: 14.2251758575
id: 1
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.24444444444






self.maneuver_requested None
leave the update function 
in spin function, finish the n times spin:28


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: -3.23724651337
y: 17.6021728516
theta: 4.79656410217
speed: 14.2251758575
id: 1
t: 28
xxx after update is x: -3.03577947617
y: 17.0016651154
theta: 4.76697254181
speed: 13.7160081863
id: 1
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: -3.03577947617
y: 17.0016651154
theta: 4.76697254181
speed: 13.7160081863
id: 1
t: 29
xxx after update is x: -3.58887600899
y: 16.2491436005
theta: 4.70145702362
speed: 13.6786432266
id: 1
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: -3.58887600899
y: 16.2491436005
theta: 4.70145702362
speed: 13.6786432266
id: 1
t: 30
xxx after update is x: -3.31310987473
y: 16.1998023987
theta: 4.81062221527
speed: 13.5953922272
id: 1
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.39237123838104904, 0]
222 self.state_dicts[msg.id][msg.t] is (2.995161771774292, -85.97920989990234, 1.5991897583007812, 13.918521881103516)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.31310987473
y: 16.1998023987
theta: 4.81062221527
speed: 13.5953922272
id: 1
t: 31
xxx after update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.99516177177
y: -85.9792098999
theta: 1.5991897583
speed: 13.9185218811
id: 0
t: 31
xxx after update is x: 3.50345659256
y: -85.1678848267
theta: 1.41943216324
speed: 14.0360851288
id: 0
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:32




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: 3.50345659256
y: -85.1678848267
theta: 1.41943216324
speed: 14.0360851288
id: 0
t: 32
xxx after update is x: 3.114351511
y: -84.1493759155
theta: 1.56115198135
speed: 13.739484787
id: 0
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: 3.114351511
y: -84.1493759155
theta: 1.56115198135
speed: 13.739484787
id: 0
t: 33
xxx after update is x: 3.33757758141
y: -83.9076309204
theta: 1.73745954037
speed: 13.7415084839
id: 0
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.51111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: 3.33757758141
y: -83.9076309204
theta: 1.73745954037
speed: 13.7415084839
id: 0
t: 34
xxx after update is x: 3.42676210403
y: -83.5913085938
theta: 1.6323479414
speed: 13.8305053711
id: 0
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: 3.42676210403
y: -83.5913085938
theta: 1.6323479414
speed: 13.8305053711
id: 0
t: 35
xxx after update is x: 3.42645144463
y: -82.9594039917
theta: 1.53487634659
speed: 13.9934568405
id: 0
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: 3.42645144463
y: -82.9594039917
theta: 1.53487634659
speed: 13.9934568405
id: 0
t: 36
xxx after update is x: 3.34202980995
y: -82.2403717041
theta: 1.54392588139
speed: 13.6033153534
id: 0
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: 3.34202980995
y: -82.2403717041
theta: 1.54392588139
speed: 13.6033153534
id: 0
t: 37
xxx after update is x: 3.58068656921
y: -82.1754455566
theta: 1.59611284733
speed: 14.0773363113
id: 0
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.58068656921
y: -82.1754455566
theta: 1.59611284733
speed: 14.0773363113
id: 0
t: 38
xxx after update is x: 3.04818868637
y: -80.9756088257
theta: 1.51391530037
speed: 14.0201253891
id: 0
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:39




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin functpdate is x: -3.39988327026
y: 15.2134113312
theta: 4.7595448494
speed: 13.980173111
id: 1
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:32




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.39988327026
y: 15.2134113312
theta: 4.7595448494
speed: 13.980173111
id: 1
t: 32
xxx after update is x: -3.55812811852
y: 14.0489940643
theta: 4.76703357697
speed: 13.9381809235
id: 1
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:33




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: -3.55812811852
y: 14.0489940643
theta: 4.76703357697
speed: 13.9381809235
id: 1
t: 33
xxx after update is x: -3.09232640266
y: 13.6387033463
theta: 4.47039651871
speed: 13.7127552032
id: 1
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.09232640266
y: 13.6387033463
theta: 4.47039651871
speed: 13.7127552032
id: 1
t: 34
xxx after update is x: -3.22990870476
y: 13.5113162994
theta: 4.62544536591
speed: 13.8925085068
id: 1
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:35




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.22990870476
y: 13.5113162994
theta: 4.62544536591
speed: 13.8925085068
id: 1
t: 35
xxx after update is x: -2.94046998024
y: 12.2524909973
theta: 4.74840068817
speed: 13.9127073288
id: 1
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.6






self.maneuver_requested None
leave the update function 
in spin function, finish the n times spin:36


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: -2.94046998024
y: 12.2524909973
theta: 4.74840068817
speed: 13.9127073288
id: 1
t: 36
xxx after update is x: -3.16545534134
y: 12.8572034836
theta: 4.73993778229
speed: 13.9595947266
id: 1
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: -3.16545534134
y: 12.8572034836
theta: 4.73993778229
speed: 13.9595947266
id: 1
t: 37
xxx after update is x: -3.38547968864
y: 11.36079216
theta: 4.77178859711
speed: 13.8528490067
id: 1
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: -3.38547968864
y: 11.36079216
theta: 4.77178859711
speed: 13.8528490067
id: 1
t: 38
xxx after update is x: -3.69916248322
y: 10.731426239
theta: 4.63248538971
speed: 14.0207395554
id: 1
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: -3.69916248322
y: 10.731426239
theta: 4.63248538971
speed: 14.02073955ion, finish the n times spin:40

xxx before update is x: 3.04818868637
y: -80.9756088257
theta: 1.51391530037
speed: 14.0201253891
id: 0
t: 39
xxx after update is x: 3.10146665573
y: -79.7452468872
theta: 1.45795333385
speed: 13.8870000839
id: 0
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion

aaaaaa
risk is [0.3531166011101898, 0.009730097852066561]
222 self.state_dicts[msg.id][msg.t] is (-3.1766133308410645, 9.891521453857422, 4.771237373352051, 13.81452465057373)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: 3.10146665573
y: -79.7452468872
theta: 1.45795333385
speed: 13.8870000839
id: 0
t: 40
xxx after update is x: 3.09658050537
y: -79.6360015869
theta: 1.57768940926
speed: 14.2440853119
id: 0
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.82222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: 3.09658050537
y: -79.6360015869
theta: 1.57768940926
speed: 14.2440853119
id: 0
t: 41
xxx after update is x: 3.11257791519
y: -79.3360900879
theta: 1.39219796658
speed: 13.7955989838
id: 0
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: 3.11257791519
y: -79.3360900879
theta: 1.39219796658
speed: 13.7955989838
id: 0
t: 42
xxx after update is x: 3.31370186806
y: -78.1520309448
theta: 1.69712138176
speed: 13.984875679
id: 0
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: 3.31370186806
y: -78.1520309448
theta: 1.69712138176
speed: 13.984875679
id: 0
t: 43
xxx after update is x: 3.15152335167
y: -77.7974319458
theta: 1.61867547035
speed: 13.8623952866
id: 0
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: 3.15152335167
y: -77.7974319458
theta: 1.61867547035
speed: 13.8623952866
id: 0
t: 44
xxx after update is x: 3.34325933456
y: -77.9226150513
theta: 1.54309499264
speed: 13.7778310776
id: 0
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.34325933456
y: -77.9226150513
theta: 1.54309499264
speed: 13.7778310776
id: 0
t: 45
xxx after update is x: 3.54072260857
y: -76.165222168
theta: 1.66136562824
speed: 14.0293827057
id: 0
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:46




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: 3.54072260857
y: -76.165222168
theta: 1.66136562824
speed: 14.0293827057
id: 0
t: 46
xxx after update is x: 3.44643807411
y: -75.7757797241
theta: 1.73122322559
speed: 13.9971227646
id: 0
t: 47
maneuver_negotiatir.py finish the update agent state from ros f54
id: 1
t: 39
xxx after update is x: -3.17661333084
y: 9.89152145386
theta: 4.77123737335
speed: 13.8145246506
id: 1
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.254870934217077, 0]
222 self.state_dicts[msg.id][msg.t] is (3.101466655731201, -79.74524688720703, 1.4579533338546753, 13.88700008392334)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.17661333084
y: 9.89152145386
theta: 4.77123737335
speed: 13.8145246506
id: 1
t: 40
xxx after update is x: -2.92562365532
y: 9.65540409088
theta: 4.67905855179
speed: 13.6275444031
id: 1
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:41




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.92562365532
y: 9.65540409088
theta: 4.67905855179
speed: 13.6275444031
id: 1
t: 41
xxx after update is x: -3.65240263939
y: 8.76391887665
theta: 4.88969039917
speed: 13.9478683472
id: 1
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:42




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: -3.65240263939
y: 8.76391887665
theta: 4.88969039917
speed: 13.9478683472
id: 1
t: 42
xxx after update is x: -3.36394786835
y: 8.46782398224
theta: 4.73135757446
speed: 13.7638435364
id: 1
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.91111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: -3.36394786835
y: 8.46782398224
theta: 4.73135757446
speed: 13.7638435364
id: 1
t: 43
xxx after update is x: -3.05832242966
y: 7.65303850174
theta: 4.63523817062
speed: 13.8372325897
id: 1
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.05832242966
y: 7.65303850174
theta: 4.63523817062
speed: 13.8372325897
id: 1
t: 44
xxx after update is x: -3.49903392792
y: 6.6465511322
theta: 4.71217393875
speed: 13.7112026215
id: 1
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:45




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: -3.49903392792
y: 6.6465511322
theta: 4.71217393875
speed: 13.7112026215
id: 1
t: 45
xxx after update is x: -2.9075024128
y: 6.36106920242
theta: 4.73108148575
speed: 14.1171274185
id: 1
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.9075024128
y: 6.36106920242
theta: 4.73108148575
speed: 14.1171274185
id: 1
t: 46
xxx after update is x: -3.28470301628
y: 5.73782300949
theta: 4.67091178894
speed: 13.846821785
id: 1
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:47




going to the updauntion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.44643807411
y: -75.7757797241
theta: 1.73122322559
speed: 13.9971227646
id: 0
t: 47
xxx after update is x: 3.64111042023
y: -75.6464614868
theta: 1.58675050735
speed: 14.0223407745
id: 0
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:48




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: 3.64111042023
y: -75.6464614868
theta: 1.58675050735
speed: 14.0223407745
id: 0
t: 48
xxx after update is x: 3.33632731438
y: -74.4591217041
theta: 1.58760166168
speed: 13.9469499588
id: 0
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.17777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: 3.33632731438
y: -74.4591217041
theta: 1.58760166168
speed: 13.9469499588
id: 0
t: 49
xxx after update is x: 3.74150466919
y: -73.8958892822
theta: 1.60383450985
speed: 14.0136241913
id: 0
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: 3.74150466919
y: -73.8958892822
theta: 1.60383450985
speed: 14.0136241913
id: 0
t: 50
xxx after update is x: 3.16247987747
y: -73.4604568481
theta: 1.56623136997
speed: 13.8708982468
id: 0
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.16247987747
y: -73.4604568481
theta: 1.56623136997
speed: 13.8708982468
id: 0
t: 51
xxx after update is x: 3.66558933258
y: -72.6157455444
theta: 1.57841050625
speed: 13.9120473862
id: 0
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:52


aaaaaa
risk is [0.35215944847323555, 4.643606990914199e-05]
222 self.state_dicts[msg.id][msg.t] is (-3.258610248565674, 3.1739444732666016, 4.724649906158447, 13.700552940368652)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.66558933258
y: -72.6157455444
theta: 1.57841050625
speed: 13.9120473862
id: 0
t: 52
xxx after update is x: 3.56175231934
y: -71.9535675049
theta: 1.49543046951
speed: 13.4395914078
id: 0
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:53




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.56175231934
y: -71.9535675049
theta: 1.49543046951
speed: 13.4395914078
id: 0
t: 53
xxx after update is x: 3.4529800415
y: -71.6193237305
theta: 1.68718647957
speed: 13.9362792969
id: 0
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:54




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: 3.4529800415
y: -71.6193237305
theta: 1.68718647957
speed: 13.9362792969
id: 0
t: 54
xxx after updatete function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: -3.28470301628
y: 5.73782300949
theta: 4.67091178894
speed: 13.846821785
id: 1
t: 47
xxx after update is x: -3.32208180428
y: 5.25042057037
theta: 4.66357755661
speed: 13.9398527145
id: 1
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: -3.32208180428
y: 5.25042057037
theta: 4.66357755661
speed: 13.9398527145
id: 1
t: 48
xxx after update is x: -2.94092226028
y: 4.60876274109
theta: 4.66797542572
speed: 14.042842865
id: 1
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: -2.94092226028
y: 4.60876274109
theta: 4.66797542572
speed: 14.042842865
id: 1
t: 49
xxx after update is x: -2.84511065483
y: 4.38299751282
theta: 4.78780794144
speed: 13.9218664169
id: 1
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: -2.84511065483
y: 4.38299751282
theta: 4.78780794144
speed: 13.9218664169
id: 1
t: 50
xxx after update is x: -3.2292702198
y: 3.59495735168
theta: 4.75094032288
speed: 13.6691293716
id: 1
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.26666666667






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.2292702198
y: 3.59495735168
theta: 4.75094032288
speed: 13.6691293716
id: 1
t: 51
xxx after update is x: -3.25861024857
y: 3.17394447327
theta: 4.72464990616
speed: 13.7005529404
id: 1
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:52


maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.327498191615091, 0]
222 self.state_dicts[msg.id][msg.t] is (3.6655893325805664, -72.6157455444336, 1.5784105062484741, 13.912047386169434)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:53


xxx before update is x: -3.25861024857
y: 3.17394447327
theta: 4.72464990616
speed: 13.7005529404
id: 1
t: 52
xxx after update is x: -3.18759775162
y: 2.02950072289
theta: 4.69544410706
speed: 13.9208364487
id: 1
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.18759775162
y: 2.02950072289
theta: 4.69544410706
speed: 13.9208364487
id: 1
t: 53
xxx after update is x: -3.16462492943
y: 1.91085326672
theta: 4.60339212418
speed: 13.9096660614
id: 1
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:54




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.16462492943
y: 1.91085326672
theta: 4.60339212418
speed: 13.9096660614
id: 1
t: 54
xxx after update is x: -3.38107275963
y: 1.08782756329
theta: 4.50550985336
speed: 14.0506458282
id: 1
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:55




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: -3.38107275963
y: 1.08782756329
theta: 4.50550985336
speed: 14.0506458282
id: 1
t: 55
xxx after update is x: -2.98069429398
y: 0.612260222435
theta: 4.604388237
speed: 13.6480522156
id: 1
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.98069429398
y: 0.612260222435
theta: 4.604388237
speed: 13.6480522156
id: 1
t: 56
xxx after update is x: -2.80956864357
y: -0.34023052454
theta: 4.65982484818
speed: 14.1141271591
id: 1
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:57




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: -2.80956864357
y: -0.34023052454
theta: 4.65982484818
speed: 14.1141271591
id: 1
t: 57
xxx after update is x: -3.49146986008
y: -0.863256752491
theta: 4.65763664246
speed: 13.5511465073
id: 1
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.49146986008
y: -0.863256752491
theta: 4.65763664246
speed: 13.5511465073
id: 1
t: 58
xxx after update is x: -3.09555363655
y: -1.09891545773
theta: 4.94151830673
speed: 13.8928766251
id: 1
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:59


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.62222222222






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: -3.09555363655
y: -1.09891545773
theta: 4.94151830673
speed: 13.8928766251
id: 1
t: 59
xxx after update is x: -3.13410758972
y: -2.31053876877
theta: 4.78805112839
speed: 13.5907316208
id: 1
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.2992540735520225, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2374796867370605, -67.60131072998047, 1.7349220514297485, 13.847232818603516)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: -3.13410758972
y: -2.31053876877
theta: 4.78805112839
speed: 13.5907316208
id: 1
t: 60
xxx after update is x: -3.4768140316
y: -2.7961332798
theta: 4.80221891403
speed: 14.0202350616
id: 1
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.4768140316
y: -2.7961332798
theta: 4.80221891403
speed: 14.0202350616
id: 1
t: 61
xxx after update is x: -3.40089225769
y: -3.07783842087
theta: 4.64501571655
speed: 13.7920389175
id: 1
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update fun is x: 3.50436043739
y: -71.06980896
theta: 1.44595181942
speed: 14.1726570129
id: 0
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: 3.50436043739
y: -71.06980896
theta: 1.44595181942
speed: 14.1726570129
id: 0
t: 55
xxx after update is x: 3.41115546227
y: -70.7214202881
theta: 1.81625127792
speed: 13.9511556625
id: 0
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.41115546227
y: -70.7214202881
theta: 1.81625127792
speed: 13.9511556625
id: 0
t: 56
xxx after update is x: 3.46962690353
y: -69.3820495605
theta: 1.54428339005
speed: 13.7801589966
id: 0
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:57


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.53333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: 3.46962690353
y: -69.3820495605
theta: 1.54428339005
speed: 13.7801589966
id: 0
t: 57
xxx after update is x: 3.50428342819
y: -68.9440078735
theta: 1.41510248184
speed: 13.3035860062
id: 0
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.50428342819
y: -68.9440078735
theta: 1.41510248184
speed: 13.3035860062
id: 0
t: 58
xxx after update is x: 3.12492227554
y: -67.87109375
theta: 1.57705771923
speed: 13.8567895889
id: 0
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:59




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: 3.12492227554
y: -67.87109375
theta: 1.57705771923
speed: 13.8567895889
id: 0
t: 59
xxx after update is x: 3.23747968674
y: -67.60131073
theta: 1.73492205143
speed: 13.8472328186
id: 0
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: 3.23747968674
y: -67.60131073
theta: 1.73492205143
speed: 13.8472328186
id: 0
t: 60
xxx after update is x: 3.40249443054
y: -67.3893203735
theta: 1.50663781166
speed: 14.0639781952
id: 0
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: 3.40249443054
y: -67.3893203735
theta: 1.50663781166
speed: 14.0639781952
id: 0
t: 61
xxx after update is x: 3.70191955566
y: -66.8084487915
theta: 1.49964237213
speed: 13.9208021164
id: 0
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.70191955566
y: -66.8084487915
theta: 1.49964237213
speed: 13.9208021164
id: 0
t: 62
xxx after update is x: 3.03861165047
y: -65.5308151245
theta: 1.63396692276
speed: 13.7819881439
id: 0
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:63


aaaaaction 
in spin function, finish the n times spin:62




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.40089225769
y: -3.07783842087
theta: 4.64501571655
speed: 13.7920389175
id: 1
t: 62
xxx after update is x: -3.32801318169
y: -3.64353656769
theta: 4.61270856857
speed: 13.882267952
id: 1
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:63




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: -3.32801318169
y: -3.64353656769
theta: 4.61270856857
speed: 13.882267952
id: 1
t: 63
xxx after update is x: -3.14794993401
y: -4.63437366486
theta: 4.6186876297
speed: 14.1833524704
id: 1
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: -3.14794993401
y: -4.63437366486
theta: 4.6186876297
speed: 14.1833524704
id: 1
t: 64
xxx after update is x: -2.99160957336
y: -5.30279874802
theta: 4.61539077759
speed: 14.0362405777
id: 1
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.99160957336
y: -5.30279874802
theta: 4.61539077759
speed: 14.0362405777
id: 1
t: 65
xxx after update is x: -3.34211993217
y: -5.36350679398
theta: 4.64802646637
speed: 13.6230554581
id: 1
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:66




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: -3.34211993217
y: -5.36350679398
theta: 4.64802646637
speed: 13.6230554581
id: 1
t: 66
xxx after update is x: -3.08338403702
y: -6.27145433426
theta: 4.8605055809
speed: 13.6969566345
id: 1
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.97777777778






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: -3.08338403702
y: -6.27145433426
theta: 4.8605055809
speed: 13.6969566345
id: 1
t: 67
xxx after update is x: -3.43555378914
y: -6.82099533081
theta: 4.81298160553
speed: 13.6731863022
id: 1
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.43555378914
y: -6.82099533081
theta: 4.81298160553
speed: 13.6731863022
id: 1
t: 68
xxx after update is x: -3.33720302582
y: -7.73917150497
theta: 4.82080316544
speed: 13.9970836639
id: 1
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:69




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.33720302582
y: -7.73917150497
theta: 4.82080316544
speed: 13.9970836639
id: 1
t: 69
xxx after update is x: -2.91312026978
y: -7.81749153137
theta: 4.55334663391
speed: 13.8335065842
id: 1
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin funa
risk is [0.2859710429031615, 4.372355459663207e-124]
222 self.state_dicts[msg.id][msg.t] is (-3.3280131816864014, -3.6435365676879883, 4.612708568572998, 13.882267951965332)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: 3.03861165047
y: -65.5308151245
theta: 1.63396692276
speed: 13.7819881439
id: 0
t: 63
xxx after update is x: 3.42321777344
y: -65.5433425903
theta: 1.63367080688
speed: 14.2022123337
id: 0
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.84444444444






self.maneuver_requested None
xxx before update is x: 3.42321777344
y: -65.5433425903
theta: 1.63367080688
speed: 14.2022123337
id: 0
t: 64
xxx after update is x: 4.0384721756
y: -64.9782714844
theta: 1.37787270546
speed: 13.9573478699
id: 0
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:65


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 4.0384721756
y: -64.9782714844
theta: 1.37787270546
speed: 13.9573478699
id: 0
t: 65
xxx after update is x: 3.06213116646
y: -64.4709320068
theta: 1.68582701683
speed: 13.8597164154
id: 0
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:66




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: 3.06213116646
y: -64.4709320068
theta: 1.68582701683
speed: 13.8597164154
id: 0
t: 66
xxx after update is x: 3.17188024521
y: -63.6180763245
theta: 1.56023061275
speed: 14.0466012955
id: 0
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: 3.17188024521
y: -63.6180763245
theta: 1.56023061275
speed: 14.0466012955
id: 0
t: 67
xxx after update is x: 3.00507211685
y: -62.8889350891
theta: 1.53205764294
speed: 13.949306488
id: 0
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: 3.00507211685
y: -62.8889350891
theta: 1.53205764294
speed: 13.949306488
id: 0
t: 68
xxx after update is x: 3.15574502945
y: -62.2875823975
theta: 1.62955594063
speed: 14.0588665009
id: 0
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.15574502945
y: -62.2875823975
theta: 1.62955594063
speed: 14.0588665009
id: 0
t: 69
xxx after update is x: 3.56142687798
y: -62.1441612244
theta: 1.72069966793
speed: 13.4644298553
id: 0
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:70




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: 3.56142687798
y: -62.1441612244
theta: 1.72069966793
speed: 13.4644298553
id: 0
t: 70
xxx after update is x: 3.248ction, finish the n times spin:70


aaaaaa
aaaaaabbbbb
risk is [0.33620756697971416, 0]
222 self.state_dicts[msg.id][msg.t] is (3.561426877975464, -62.144161224365234, 1.720699667930603, 13.46442985534668)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: -2.91312026978
y: -7.81749153137
theta: 4.55334663391
speed: 13.8335065842
id: 1
t: 70
xxx after update is x: -3.33612751961
y: -8.78129959106
theta: 4.80279636383
speed: 13.9625301361
id: 1
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.33612751961
y: -8.78129959106
theta: 4.80279636383
speed: 13.9625301361
id: 1
t: 71
xxx after update is x: -3.65536499023
y: -9.23543643951
theta: 4.81453990936
speed: 14.0311145782
id: 1
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:72




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.65536499023
y: -9.23543643951
theta: 4.81453990936
speed: 14.0311145782
id: 1
t: 72
xxx after update is x: -3.87127614021
y: -10.0402784348
theta: 4.6648311615
speed: 13.8913803101
id: 1
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:73




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.87127614021
y: -10.0402784348
theta: 4.6648311615
speed: 13.8913803101
id: 1
t: 73
xxx after update is x: -3.33082318306
y: -10.9867191315
theta: 4.7600235939
speed: 14.0718889236
id: 1
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:74




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: -3.33082318306
y: -10.9867191315
theta: 4.7600235939
speed: 14.0718889236
id: 1
t: 74
xxx after update is x: -2.44062924385
y: -11.4150047302
theta: 4.65596675873
speed: 13.713760376
id: 1
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.33333333333






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.44062924385
y: -11.4150047302
theta: 4.65596675873
speed: 13.713760376
id: 1
t: 75
xxx after update is x: -3.37274622917
y: -11.8364782333
theta: 4.72457551956
speed: 14.038942337
id: 1
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:76


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: -3.37274622917
y: -11.8364782333
theta: 4.72457551956
speed: 14.038942337
id: 1
t: 76
xxx after update is x: -2.9011952877
y: -12.413567543
theta: 4.7461400032
speed: 14.0110044479
id: 1
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, fi59786034
y: -61.2953834534
theta: 1.54704618454
speed: 13.771071434
id: 0
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.24859786034
y: -61.2953834534
theta: 1.54704618454
speed: 13.771071434
id: 0
t: 71
xxx after update is x: 2.83307814598
y: -60.3012237549
theta: 1.58188259602
speed: 13.7160749435
id: 0
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:72


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.2






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.83307814598
y: -60.3012237549
theta: 1.58188259602
speed: 13.7160749435
id: 0
t: 72
xxx after update is x: 3.37850117683
y: -59.826965332
theta: 1.51218736172
speed: 13.8791904449
id: 0
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:73


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.37850117683
y: -59.826965332
theta: 1.51218736172
speed: 13.8791904449
id: 0
t: 73
xxx after update is x: 2.91053342819
y: -59.0317230225
theta: 1.56603074074
speed: 13.8520679474
id: 0
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:74




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.91053342819
y: -59.0317230225
theta: 1.56603074074
speed: 13.8520679474
id: 0
t: 74
xxx after update is x: 3.27173089981
y: -58.9420394897
theta: 1.52378427982
speed: 13.7354049683
id: 0
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:75




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.27173089981
y: -58.9420394897
theta: 1.52378427982
speed: 13.7354049683
id: 0
t: 75leave the update function 
in spin function, finish the n times spin:76



xxx after update is x: 3.45044589043
y: -57.9506797791
theta: 1.52528631687
speed: 13.7662067413
id: 0
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.45044589043
y: -57.9506797791
theta: 1.52528631687
speed: 13.7662067413
id: 0
t: 76
xxx after update is x: 2.76503038406
y: -57.5389404297
theta: 1.41834509373
speed: 13.8000297546
id: 0
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:77


risk is [0.31246905978202266, 1.5178030207999112e-98]
222 self.state_dicts[msg.id][msg.t] is (-2.9011952877044678, -12.413567543029785, 4.746140003204346, 14.011004447937012)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.76503038406
y: -57.5389404297
theta: 1.41834509373
speed: 13.8000297546
id: 0
t: 77
xxx after update is x: 3.88828063011
y: -56.8860092163
theta: 1.72203266621
speed: 13.8681907654
id: 0
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:78




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times snish the n times spin:78

xxx before update is x: -2.9011952877
y: -12.413567543
theta: 4.7461400032
speed: 14.0110044479
id: 1
t: 77
xxx after update is x: -3.10982275009
y: -12.954293251
theta: 4.8255944252
speed: 13.990524292
id: 1
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: -3.10982275009
y: -12.954293251
theta: 4.8255944252
speed: 13.990524292
id: 1
t: 78
xxx after update is x: -3.53793120384
y: -13.809381485
theta: 4.62879610062
speed: 13.6054601669
id: 1
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.53793120384
y: -13.809381485
theta: 4.62879610062
speed: 13.6054601669
id: 1
t: 79
xxx after update is x: -3.28393149376
y: -14.5242929459
theta: 4.51278066635
speed: 13.9335069656
id: 1
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:80




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: -3.28393149376
y: -14.5242929459
theta: 4.51278066635
speed: 13.9335069656
id: 1
t: 80
xxx after update is x: -3.14960217476
y: -14.7420244217
theta: 4.62590408325
speed: 13.9035072327
id: 1
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.43177521884340714, 0]
222 self.state_dicts[msg.id][msg.t] is (3.477161407470703, -54.828086853027344, 1.5426732301712036, 13.71247673034668)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: -3.14960217476
y: -14.7420244217
theta: 4.62590408325
speed: 13.9035072327
id: 1
t: 81
xxx after update is x: -3.35304713249
y: -15.3646965027
theta: 4.79448223114
speed: 13.6624479294
id: 1
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:83


xxx before update is x: -3.35304713249
y: -15.3646965027
theta: 4.79448223114
speed: 13.6624479294
id: 1
t: 82
xxx after update is x: -2.89096641541
y: -15.9645261765
theta: 4.62583589554
speed: 13.6636629105
id: 1
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: -2.89096641541
y: -15.9645261765
theta: 4.62583589554
speed: 13.6636629105
id: 1
t: 83
xxx after update is x: -2.78823828697
y: -16.9640464783
theta: 4.82542610168
speed: 13.8915605545
id: 1
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.73333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.78823828697
y: -16.9640464783
theta: 4.82542610168
speed: 13.8915605545
id: 1
t: 84
xxx after update is x: -2.98486399651
y: -17.9085826874
theta: 4.92401218414
speed: 14.1613702774
id: 1
t: 85
maneuver_negotiatir.py finispin:79

xxx before update is x: 3.88828063011
y: -56.8860092163
theta: 1.72203266621
speed: 13.8681907654
id: 0
t: 78
xxx after update is x: 3.41946315765
y: -55.9769744873
theta: 1.62954759598
speed: 14.2957639694
id: 0
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.41946315765
y: -55.9769744873
theta: 1.62954759598
speed: 14.2957639694
id: 0
t: 79
xxx after update is x: 3.04735326767
y: -55.369102478
theta: 1.54564082623
speed: 13.7823591232
id: 0
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:80


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.55555555556






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.04735326767
y: -55.369102478
theta: 1.54564082623
speed: 13.7823591232
id: 0
t: 80
xxx after update is x: 3.47716140747
y: -54.828086853
theta: 1.54267323017
speed: 13.7124767303
id: 0
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:81


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: 3.47716140747
y: -54.828086853
theta: 1.54267323017
speed: 13.7124767303
id: 0
t: 81
xxx after update is x: 3.21884441376
y: -54.4196128845
theta: 1.54074370861
speed: 14.0060329437
id: 0
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:83


xxx before update is x: 3.21884441376
y: -54.4196128845
theta: 1.54074370861
speed: 14.0060329437
id: 0
t: 82
xxx after update is x: 3.12640404701
y: -54.3453865051
theta: 1.63669538498
speed: 13.6709003448
id: 0
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.12640404701
y: -54.3453865051
theta: 1.63669538498
speed: 13.6709003448
id: 0
t: 83
xxx after update is x: 3.01113462448
y: -53.7201805115
theta: 1.84433758259
speed: 13.8669614792
id: 0
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:84




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: 3.01113462448
y: -53.7201805115
theta: 1.84433758259
speed: 13.8669614792
id: 0
t: 84
xxx after update is x: 3.02348947525
y: -52.7703742981
theta: 1.55400323868
speed: 13.8903646469
id: 0
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: 3.02348947525
y: -52.7703742981
theta: 1.55400323868
speed: 13.8903646469
id: 0
t: 85
xxx after update is x: 3.03239870071
y: -51.8647842407
theta: 1.57351124287
speed: 14.25730896
id: 0
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: 3.03239870071
y: -51.8647842407
theta: 1.57351124287
speed: 14.25730896
id: 0
t: 86
xxx after update is x: 3.59564971924
y: -51.5h the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:85




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.98486399651
y: -17.9085826874
theta: 4.92401218414
speed: 14.1613702774
id: 1
t: 85
xxx after update is x: -3.42907428741
y: -18.3399448395
theta: 4.89272594452
speed: 14.0779561996
id: 1
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:86




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: -3.42907428741
y: -18.3399448395
theta: 4.89272594452
speed: 14.0779561996
id: 1
t: 86
xxx after update is x: -3.120470047
y: -19.0108909607
theta: 4.84993696213
speed: 14.0338726044
id: 1
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: -3.120470047
y: -19.0108909607
theta: 4.84993696213
speed: 14.0338726044
id: 1
t: 87
xxx after update is x: -3.33289074898
y: -19.1212692261
theta: 4.7338385582
speed: 13.776591301
id: 1
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: -3.33289074898
y: -19.1212692261
theta: 4.7338385582
speed: 13.776591301
id: 1
t: 88
xxx after update is x: -3.01609611511
y: -19.683057785
theta: 4.6492524147
speed: 13.7135448456
id: 1
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.01609611511
y: -19.683057785
theta: 4.6492524147
speed: 13.7135448456
id: 1
t: 89
xxx after update is x: -3.36609148979
y: -20.0867023468
theta: 4.62608766556
speed: 13.8796195984
id: 1
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:90


aaaaaa
aaaaaabbbbb
risk is [0.3488412791512991, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2707273960113525, -49.44578552246094, 1.6000977754592896, 13.990078926086426)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: -3.36609148979
y: -20.0867023468
theta: 4.62608766556
speed: 13.8796195984
id: 1
t: 90
xxx after update is x: -3.43215727806
y: -21.0387916565
theta: 4.61039018631
speed: 13.9591703415
id: 1
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.04444444444






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.43215727806
y: -21.0387916565
theta: 4.61039018631
speed: 13.9591703415
id: 1
t: 91
xxx after update is x: -3.0098631382
y: -21.5316772461
theta: 4.75252866745
speed: 13.6026077271
id: 1
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:92


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.340805054
theta: 1.66467010975
speed: 13.7152261734
id: 0
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: 3.59564971924
y: -51.5340805054
theta: 1.66467010975
speed: 13.7152261734
id: 0
t: 87
xxx after update is x: 3.40858960152
y: -50.8250236511
theta: 1.51551890373
speed: 13.5893335342
id: 0
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: 3.40858960152
y: -50.8250236511
theta: 1.51551890373
speed: 13.5893335342
id: 0
t: 88
xxx after update is x: 3.19252729416
y: -49.9007835388
theta: 1.55230605602
speed: 13.7271747589
id: 0
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.95555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.19252729416
y: -49.9007835388
theta: 1.55230605602
speed: 13.7271747589
id: 0
t: 89
xxx after update is x: 3.27072739601
y: -49.4457855225
theta: 1.60009777546
speed: 13.9900789261
id: 0
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:90




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.27072739601
y: -49.4457855225
theta: 1.60009777546
speed: 13.9900789261
id: 0
t: 90
xxx after update is x: 3.62128901482
y: -48.6730384827
theta: 1.58366751671
speed: 13.8068637848
id: 0
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:91


aaaaaa
risk is [0.3217067247322816, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.432157278060913, -21.03879165649414, 4.6103901863098145, 13.9591703414917)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:92


xxx before update is x: 3.62128901482
y: -48.6730384827
theta: 1.58366751671
speed: 13.8068637848
id: 0
t: 91
xxx after update is x: 3.17136073112
y: -47.3834991455
theta: 1.76237726212
speed: 13.8542079926
id: 0
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: 3.17136073112
y: -47.3834991455
theta: 1.76237726212
speed: 13.8542079926
id: 0
t: 92
xxx after update is x: 3.10929846764
y: -47.6031761169
theta: 1.66078853607
speed: 14.254026413
id: 0
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: 3.10929846764
y: -47.6031761169
theta: 1.66078853607
speed: 14.254026413
id: 0
t: 93
xxx after update is x: 2.71879577637
y: -46.7298622131
theta: 1.69967269897
speed: 13.8149929047
id: 0
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.71879577637
y: -46.7298622131
theta: 1.69967269897
speed: 13.814992speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: -3.0098631382
y: -21.5316772461
theta: 4.75252866745
speed: 13.6026077271
id: 1
t: 92
xxx after update is x: -2.85048794746
y: -22.0145397186
theta: 4.82562303543
speed: 13.4348344803
id: 1
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: -2.85048794746
y: -22.0145397186
theta: 4.82562303543
speed: 13.4348344803
id: 1
t: 93
xxx after update is x: -3.36744332314
y: -22.7737617493
theta: 4.72611761093
speed: 13.8226003647
id: 1
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.36744332314
y: -22.7737617493
theta: 4.72611761093
speed: 13.8226003647
id: 1
t: 94
xxx after update is x: -3.51069974899
y: -23.4435272217
theta: 4.68970537186
speed: 13.4272985458
id: 1
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:95




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.51069974899
y: -23.4435272217
theta: 4.68970537186
speed: 13.4272985458
id: 1
t: 95
xxx after update is x: -3.17285370827
y: -24.6760883331
theta: 4.84205245972
speed: 13.7262382507
id: 1
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:96




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:97


xxx before update is x: -3.17285370827
y: -24.6760883331
theta: 4.84205245972
speed: 13.7262382507
id: 1
t: 96
xxx after update is x: -3.34776496887
y: -25.2712001801
theta: 4.56361484528
speed: 13.5300588608
id: 1
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.34776496887
y: -25.2712001801
theta: 4.56361484528
speed: 13.5300588608
id: 1
t: 97
xxx after update is x: -2.9852938652
y: -25.7423973083
theta: 4.73419094086
speed: 14.1189279556
id: 1
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:98




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: -2.9852938652
y: -25.7423973083
theta: 4.73419094086
speed: 14.1189279556
id: 1
t: 98
xxx after update is x: -2.78218197823
y: -26.0347690582
theta: 4.72726964951
speed: 14.2184553146
id: 1
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.4






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: -2.78218197823
y: -26.0347690582
theta: 4.72726964951
speed: 14.2184553146
id: 1
t: 99
xxx after update is x: -2.71874523163
y: -26.7731819153
theta: 4.79148578644
speed: 13.8852787018
id: 1
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.i9047
id: 0
t: 94
xxx after update is x: 3.53867936134
y: -46.0098648071
theta: 1.52062892914
speed: 13.9922323227
id: 0
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:95




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: 3.53867936134
y: -46.0098648071
theta: 1.52062892914
speed: 13.9922323227
id: 0
t: 95
xxx after update is x: 3.67162561417
y: -45.719039917
theta: 1.52744853497
speed: 13.879160881
id: 0
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.26666666667






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:97


xxx before update is x: 3.67162561417
y: -45.719039917
theta: 1.52744853497
speed: 13.879160881
id: 0
t: 96
xxx after update is x: 3.28979563713
y: -44.3636512756
theta: 1.41065347195
speed: 14.1500844955
id: 0
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: 3.28979563713
y: -44.3636512756
theta: 1.41065347195
speed: 14.1500844955
id: 0
t: 97
xxx after update is x: 3.60024333
y: -44.2784881592
theta: 1.4350014925
speed: 14.095085144
id: 0
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: 3.60024333
y: -44.2784881592
theta: 1.4350014925
speed: 14.095085144
id: 0
t: 98
xxx after update is x: 3.18723964691
y: -43.7285232544
theta: 1.56691765785
speed: 13.8554496765
id: 0
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.18723964691
y: -43.7285232544
theta: 1.56691765785
speed: 13.8554496765
id: 0
t: 99
xxx after update is x: 3.07318687439
y: -43.2456626892
theta: 1.55398726463
speed: 13.9750118256
id: 0
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:100




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.07318687439
y: -43.2456626892
theta: 1.55398726463
speed: 13.9750118256
id: 0
t: 100
xxx after update is x: 2.81121611595
y: -42.7571754456
theta: 1.40199029446
speed: 13.6462039948
id: 0
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:101




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.81121611595
y: -42.7571754456
theta: 1.40199029446
speed: 13.6462039948
id: 0
t: 101
xxx after update is x: 2.99198269844
y: -42.4629249573
theta: 1.48551547527
speed: 13.8637781143
id: 0
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:102


aaaaaa
risk is [0.3582609790190834, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5604825019836426, -27.803482055664062, 4.674062252044678, 14.055719375610352)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update fund == 1):
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: -2.71874523163
y: -26.7731819153
theta: 4.79148578644
speed: 13.8852787018
id: 1
t: 100
xxx after update is x: -3.39523410797
y: -27.0513782501
theta: 4.712454319
speed: 13.955862999
id: 1
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: -3.39523410797
y: -27.0513782501
theta: 4.712454319
speed: 13.955862999
id: 1
t: 101
xxx after update is x: -3.56048250198
y: -27.8034820557
theta: 4.67406225204
speed: 14.0557193756
id: 1
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3423446092962118, 0]
222 self.state_dicts[msg.id][msg.t] is (2.9919826984405518, -42.46292495727539, 1.4855154752731323, 13.863778114318848)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.56048250198
y: -27.8034820557
theta: 4.67406225204
speed: 14.0557193756
id: 1
t: 102
xxx after update is x: -2.73137807846
y: -28.6360588074
theta: 4.67785024643
speed: 13.7080917358
id: 1
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:103




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: -2.73137807846
y: -28.6360588074
theta: 4.67785024643
speed: 13.7080917358
id: 1
t: 103
xxx after update is x: -2.76619648933
y: -29.6725521088
theta: 4.76071596146
speed: 13.6594190598
id: 1
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.76619648933
y: -29.6725521088
theta: 4.76071596146
speed: 13.6594190598
id: 1
t: 104
xxx after update is x: -3.09283995628
y: -29.960105896
theta: 4.73112344742
speed: 13.5574493408
id: 1
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:105




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.09283995628
y: -29.960105896
theta: 4.73112344742
speed: 13.5574493408
id: 1
t: 105
xxx after update is x: -3.12536978722
y: -30.3520832062
theta: 4.72629785538
speed: 13.684431076
id: 1
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:106




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.12536978722
y: -30.3520832062
theta: 4.72629785538
speed: 13.684431076
id: 1
t: 106
xxx after update is x: -3.43776607513
y: -31.3419818878
theta: 4.67927026749
speed: 13.7883625031
id: 1
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:107


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.75555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: -3.43776607513
y: -31.3419818878
theta: 4.67927026749
speed: 13.78836250ction 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: 2.99198269844
y: -42.4629249573
theta: 1.48551547527
speed: 13.8637781143
id: 0
t: 102
xxx after update is x: 2.8587372303
y: -41.5304527283
theta: 1.7185832262
speed: 13.8891897202
id: 0
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.8587372303
y: -41.5304527283
theta: 1.7185832262
speed: 13.8891897202
id: 0
t: 103
xxx after update is x: 3.06244778633
y: -40.8821601868
theta: 1.49690198898
speed: 14.1335096359
id: 0
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:104


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.62222222222






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:105


xxx before update is x: 3.06244778633
y: -40.8821601868
theta: 1.49690198898
speed: 14.1335096359
id: 0
t: 104
xxx after update is x: 3.05493092537
y: -40.4016189575
theta: 1.51279091835
speed: 13.6783905029
id: 0
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.05493092537
y: -40.4016189575
theta: 1.51279091835
speed: 13.6783905029
id: 0
t: 105
xxx after update is x: 2.98718380928
y: -39.229549408
theta: 1.47722733021
speed: 13.7900943756
id: 0
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:106




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: 2.98718380928
y: -39.229549408
theta: 1.47722733021
speed: 13.7900943756
id: 0
t: 106
xxx after update is x: 2.87104678154
y: -38.5295295715
theta: 1.38142001629
speed: 13.8268432617
id: 0
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: 2.87104678154
y: -38.5295295715
theta: 1.38142001629
speed: 13.8268432617
id: 0
t: 107
xxx after update is x: 2.78469800949
y: -38.2746276855
theta: 1.60292947292
speed: 14.1109008789
id: 0
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: 2.78469800949
y: -38.2746276855
theta: 1.60292947292
speed: 14.1109008789
id: 0
t: 108
xxx after update is x: 3.43233990669
y: -37.0912437439
theta: 1.54295575619
speed: 14.2710456848
id: 0
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.43233990669
y: -37.0912437439
theta: 1.54295575619
speed: 14.2710456848
id: 0
t: 109
xxx after update is x: 2.9096288681
y: -36.9514198303
theta: 1.5165797472
speed: 13.7604312897
id: 0
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:110




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:111


xxx before update is x:31
id: 1
t: 107
xxx after update is x: -3.18612027168
y: -32.1299972534
theta: 4.71902751923
speed: 14.2382974625
id: 1
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: -3.18612027168
y: -32.1299972534
theta: 4.71902751923
speed: 14.2382974625
id: 1
t: 108
xxx after update is x: -3.31102252007
y: -32.3722190857
theta: 4.68111038208
speed: 14.2754259109
id: 1
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:110


xxx before update is x: -3.31102252007
y: -32.3722190857
theta: 4.68111038208
speed: 14.2754259109
id: 1
t: 109
xxx after update is x: -3.29353499413
y: -33.3314094543
theta: 4.63957834244
speed: 13.8292121887
id: 1
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.29353499413
y: -33.3314094543
theta: 4.63957834244
speed: 13.8292121887
id: 1
t: 110
xxx after update is x: -3.60947918892
y: -33.5180625916
theta: 4.71497344971
speed: 14.042131424
id: 1
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:111




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.60947918892
y: -33.5180625916
theta: 4.71497344971
speed: 14.042131424
id: 1
t: 111
xxx after update is x: -2.87635922432
y: -33.7663955688
theta: 4.666410923
speed: 13.7855796814
id: 1
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:112




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.87635922432
y: -33.7663955688
theta: 4.666410923
speed: 13.7855796814
id: 1
t: 112
xxx after update is x: -3.74036121368
y: -34.8366889954
theta: 4.6182346344
speed: 13.8200588226
id: 1
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:113




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.74036121368
y: -34.8366889954
theta: 4.6182346344
speed: 13.8200588226
id: 1
t: 113
xxx after update is x: -3.10110998154
y: -34.9223213196
theta: 4.95908594131
speed: 13.7813234329
id: 1
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:114


aaaaaa
aaaaaabbbbb
risk is [0.3252606253479529, 0]
222 self.state_dicts[msg.id][msg.t] is (3.188426971435547, -34.803550720214844, 1.6482716798782349, 13.605127334594727)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:115


xxx before update is x: -3.10110998154
y: -34.9223213196
theta: 4.95908594131
speed: 13.7813234329
id: 1
t: 114
xxx after update is x: -3.07359743118
y: -36.5891265869
theta: 4.73515033722
speed: 13.8260469437
id: 1
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.11111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function 2.9096288681
y: -36.9514198303
theta: 1.5165797472
speed: 13.7604312897
id: 0
t: 110
xxx after update is x: 3.19800639153
y: -36.0449333191
theta: 1.55626249313
speed: 13.8568210602
id: 0
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.19800639153
y: -36.0449333191
theta: 1.55626249313
speed: 13.8568210602
id: 0
t: 111
xxx after update is x: 3.20592403412
y: -35.7773399353
theta: 1.70228111744
speed: 14.085269928
id: 0
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:112




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.97777777778






self.maneuver_requested None
xxx before update is x: 3.20592403412
y: -35.7773399353
theta: 1.70228111744
speed: 14.085269928
id: 0
t: 112
xxx after update is x: 2.76173257828
y: -35.2369499207
theta: 1.60283458233
speed: 13.9190044403
id: 0
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:113


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: 2.76173257828
y: -35.2369499207
theta: 1.60283458233
speed: 13.9190044403
id: 0
t: 113
xxx after update is x: 3.18842697144
y: -34.8035507202
theta: 1.64827167988
speed: 13.6051273346
id: 0
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.18842697144
y: -34.8035507202
theta: 1.64827167988
speed: 13.6051273346
id: 0
t: 114
xxx after update is x: 3.33119034767
y: -34.2906265259
theta: 1.73568844795
speed: 13.7172260284
id: 0
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:115




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: 3.33119034767
y: -34.2906265259
theta: 1.73568844795
speed: 13.7172260284
id: 0
t: 115
xxx after update is x: 3.532143116
y: -33.3430938721
theta: 1.56477427483
speed: 14.247092247
id: 0
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3990074715625694, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3284034729003906, -36.91428756713867, 4.7819037437438965, 13.671957969665527)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: 3.532143116
y: -33.3430938721
theta: 1.56477427483
speed: 14.247092247
id: 0
t: 116
xxx after update is x: 3.19616222382
y: -32.9018211365
theta: 1.65949237347
speed: 13.8141736984
id: 0
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: 3.19616222382
y: -32.9018211365
theta: 1.65949237347
speed: 13.8141736984
id: 0
t: 117
xxx after update is x: 3.02999687195
y: -31.6457462311
theta: 1.57225728035
speed: 13.7653427124
id: 0
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the si update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: -3.07359743118
y: -36.5891265869
theta: 4.73515033722
speed: 13.8260469437
id: 1
t: 115
xxx after update is x: -3.3284034729
y: -36.9142875671
theta: 4.78190374374
speed: 13.6719579697
id: 1
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: -3.3284034729
y: -36.9142875671
theta: 4.78190374374
speed: 13.6719579697
id: 1
t: 116
xxx after update is x: -3.00115680695
y: -37.027431488
theta: 4.71402597427
speed: 13.8452939987
id: 1
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: -3.00115680695
y: -37.027431488
theta: 4.71402597427
speed: 13.8452939987
id: 1
t: 117
xxx after update is x: -2.94355797768
y: -37.6305770874
theta: 4.90844678879
speed: 13.9833726883
id: 1
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: -2.94355797768
y: -37.6305770874
theta: 4.90844678879
speed: 13.9833726883
id: 1
t: 118
xxx after update is x: -3.22063183784
y: -38.8214836121
theta: 4.64665603638
speed: 13.8089294434
id: 1
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.22063183784
y: -38.8214836121
theta: 4.64665603638
speed: 13.8089294434
id: 1
t: 119
xxx after update is x: -3.38071775436
y: -39.3205566406
theta: 4.62155580521
speed: 13.6925449371
id: 1
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:120




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:121


xxx before update is x: -3.38071775436
y: -39.3205566406
theta: 4.62155580521
speed: 13.6925449371
id: 1
t: 120
xxx after update is x: -2.92250418663
y: -40.0132255554
theta: 4.87501144409
speed: 13.6332969666
id: 1
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: -2.92250418663
y: -40.0132255554
theta: 4.87501144409
speed: 13.6332969666
id: 1
t: 121
xxx after update is x: -2.45878553391
y: -40.6504096985
theta: 4.86142635345
speed: 13.8176860809
id: 1
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: -2.45878553391
y: -40.6504096985
theta: 4.86142635345
speed: 13.8176860809
id: 1
t: 122
xxx after update is x: -2.4844686985
y: -40.8360557556
theta: 4.75411748886
speed: 13.9023828506
id: 1
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.46666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver fm.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: 3.02999687195
y: -31.6457462311
theta: 1.57225728035
speed: 13.7653427124
id: 0
t: 118
xxx after update is x: 3.65722727776
y: -31.4412975311
theta: 1.56177222729
speed: 13.7952604294
id: 0
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:120


xxx before update is x: 3.65722727776
y: -31.4412975311
theta: 1.56177222729
speed: 13.7952604294
id: 0
t: 119
xxx after update is x: 3.38485074043
y: -30.939863205
theta: 1.57360303402
speed: 13.7002267838
id: 0
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.33333333333






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:121


xxx before update is x: 3.38485074043
y: -30.939863205
theta: 1.57360303402
speed: 13.7002267838
id: 0
t: 120
xxx after update is x: 3.32258629799
y: -30.482717514
theta: 1.62102425098
speed: 13.8579454422
id: 0
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: 3.32258629799
y: -30.482717514
theta: 1.62102425098
speed: 13.8579454422
id: 0
t: 121
xxx after update is x: 2.60883712769
y: -29.8909702301
theta: 1.48512387276
speed: 13.8801021576
id: 0
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: 2.60883712769
y: -29.8909702301
theta: 1.48512387276
speed: 13.8801021576
id: 0
t: 122
xxx after update is x: 3.39141774178
y: -28.8178596497
theta: 1.50882542133
speed: 13.8512992859
id: 0
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.39141774178
y: -28.8178596497
theta: 1.50882542133
speed: 13.8512992859
id: 0
t: 123
xxx after update is x: 2.84177136421
y: -28.3359966278
theta: 1.59525096416
speed: 13.8320598602
id: 0
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:124




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.84177136421
y: -28.3359966278
theta: 1.59525096416
speed: 13.8320598602
id: 0
t: 124
xxx after update is x: 4.05534982681
y: -27.447769165
theta: 1.63136529922
speed: 13.4913883209
id: 0
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:125




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 4.05534982681
y: -27.447769165
theta: 1.63136529922
speed: 13.4913883209
id: 0
t: 125
xxx after update is x: 3.4312543869
y: -26.9143047333
theta: 1.57859885693
speed: 13.542547226
id: 0
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:126




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:127


xxx before updateunction update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: -2.4844686985
y: -40.8360557556
theta: 4.75411748886
speed: 13.9023828506
id: 1
t: 123
xxx after update is x: -2.94752240181
y: -41.6641769409
theta: 4.76193284988
speed: 13.6097373962
id: 1
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:125


xxx before update is x: -2.94752240181
y: -41.6641769409
theta: 4.76193284988
speed: 13.6097373962
id: 1
t: 124
xxx after update is x: -3.65678453445
y: -41.8642997742
theta: 4.72725534439
speed: 13.9644479752
id: 1
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: -3.65678453445
y: -41.8642997742
theta: 4.72725534439
speed: 13.9644479752
id: 1
t: 125
xxx after update is x: -2.76317405701
y: -42.1485939026
theta: 4.73391771317
speed: 13.6146125793
id: 1
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: -2.76317405701
y: -42.1485939026
theta: 4.73391771317
speed: 13.6146125793
id: 1
t: 126
xxx after update is x: -3.50149917603
y: -43.6495742798
theta: 4.74480390549
speed: 13.6952943802
id: 1
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.34342959844839177, 0]
222 self.state_dicts[msg.id][msg.t] is (3.710679054260254, -26.14548110961914, 1.716739296913147, 14.203950881958008)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: -3.50149917603
y: -43.6495742798
theta: 4.74480390549
speed: 13.6952943802
id: 1
t: 127
xxx after update is x: -3.13479328156
y: -43.9152450562
theta: 4.63528347015
speed: 14.1830701828
id: 1
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.13479328156
y: -43.9152450562
theta: 4.63528347015
speed: 14.1830701828
id: 1
t: 128
xxx after update is x: -3.46963262558
y: -45.1054000854
theta: 4.84621572495
speed: 13.8126955032
id: 1
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:129




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.46963262558
y: -45.1054000854
theta: 4.84621572495
speed: 13.8126955032
id: 1
t: 129
xxx after update is x: -3.20045804977
y: -45.2192955017
theta: 4.73419523239
speed: 14.1237573624
id: 1
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:130




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:131


xxx before update is x: -3.20045804977
y: -45.2192955017
theta: 4.73419523239
speed: 14.1237573624
id: 1
t: 130
xxx after update is x: -3.02487897873
y: -4 is x: 3.4312543869
y: -26.9143047333
theta: 1.57859885693
speed: 13.542547226
id: 0
t: 126
xxx after update is x: 3.71067905426
y: -26.1454811096
theta: 1.71673929691
speed: 14.203950882
id: 0
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: 3.71067905426
y: -26.1454811096
theta: 1.71673929691
speed: 14.203950882
id: 0
t: 127
xxx after update is x: 2.90834736824
y: -26.3619995117
theta: 1.51935517788
speed: 13.6202106476
id: 0
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.68888888889






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:129


xxx before update is x: 2.90834736824
y: -26.3619995117
theta: 1.51935517788
speed: 13.6202106476
id: 0
t: 128
xxx after update is x: 3.13668131828
y: -24.9518051147
theta: 1.42031657696
speed: 13.3670969009
id: 0
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: 3.13668131828
y: -24.9518051147
theta: 1.42031657696
speed: 13.3670969009
id: 0
t: 129
xxx after update is x: 3.07475423813
y: -24.656124115
theta: 1.65884971619
speed: 12.8356199265
id: 0
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:131


xxx before update is x: 3.07475423813
y: -24.656124115
theta: 1.65884971619
speed: 12.8356199265
id: 0
t: 130
xxx after update is x: 3.20955920219
y: -23.8376255035
theta: 1.55939304829
speed: 12.548286438
id: 0
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: 3.20955920219
y: -23.8376255035
theta: 1.55939304829
speed: 12.548286438
id: 0
t: 131
xxx after update is x: 3.02715158463
y: -23.679561615
theta: 1.6049195528
speed: 12.707069397
id: 0
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.29062948482537315, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3275959491729736, -46.62626647949219, 4.771966457366943, 14.023595809936523)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:133


xxx before update is x: 3.02715158463
y: -23.679561615
theta: 1.6049195528
speed: 12.707069397
id: 0
t: 132
xxx after update is x: 3.56992292404
y: -22.6526317596
theta: 1.43523895741
speed: 12.2464933395
id: 0
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: 3.56992292404
y: -22.6526317596
theta: 1.43523895741
speed: 12.2464933395
id: 0
t: 133
xxx after update is x: 3.7033662796
y: -22.7642250061
theta: 1.49133098125
speed: 12.3567237854
id: 0
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the upda5.7880783081
theta: 4.64875221252
speed: 13.6115036011
id: 1
t: 131maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.82222222222






self.maneuver_requested None

maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: -3.02487897873
y: -45.7880783081
theta: 4.64875221252
speed: 13.6115036011
id: 1
t: 131
xxx after update is x: -3.32759594917
y: -46.6262664795
theta: 4.77196645737
speed: 14.0235958099
id: 1
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:133


xxx before update is x: -3.32759594917
y: -46.6262664795
theta: 4.77196645737
speed: 14.0235958099
id: 1
t: 132
xxx after update is x: -3.02098226547
y: -46.9324111938
theta: 4.91865301132
speed: 13.9254589081
id: 1
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: -3.02098226547
y: -46.9324111938
theta: 4.91865301132
speed: 13.9254589081
id: 1
t: 133
xxx after update is x: -2.98394775391
y: -47.657371521
theta: 4.57480096817
speed: 13.8331594467
id: 1
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.98394775391
y: -47.657371521
theta: 4.57480096817
speed: 13.8331594467
id: 1
t: 134
xxx after update is x: -3.3594288826
y: -48.5693588257
theta: 4.63695812225
speed: 13.5645084381
id: 1
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:135




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: -3.3594288826
y: -48.5693588257
theta: 4.63695812225
speed: 13.5645084381
id: 1
t: 135
xxx after update is x: -3.243475914
y: -48.8316192627
theta: 4.68043661118
speed: 13.8303232193
id: 1
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:137


xxx before update is x: -3.243475914
y: -48.8316192627
theta: 4.68043661118
speed: 13.8303232193
id: 1
t: 136
xxx after update is x: -3.57917332649
y: -49.6105804443
theta: 4.63208055496
speed: 13.763133049
id: 1
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.46088562373990893, 0]
222 self.state_dicts[msg.id][msg.t] is (2.709794044494629, -20.638050079345703, 1.5677478313446045, 11.380911827087402)
if we have all measurements for a certain time-stamp perform risk estimation


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: -3.57917332649
y: -49.6105804443
theta: 4.63208055496
speed: 13.763133049
id: 1
t: 137
xxx after update is x: -3.1262512207
y: -50.0340766907
theta: 4.80094480515
speed: 13.7633857727
id: 1
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in tte function xxx before update is x: 3.7033662796
y: -22.7642250061
theta: 1.49133098125
speed: 12.3567237854
id: 0
t: 134
xxx after update is x: 3.50348615646
y: -22.1718959808
theta: 1.48925328255
speed: 11.7800016403
id: 0
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:135




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: 3.50348615646
y: -22.1718959808
theta: 1.48925328255
speed: 11.7800016403
id: 0
t: 135
xxx after update is x: 3.31371498108
y: -20.7862548828
theta: 1.50552237034
speed: 11.7528886795
id: 0
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:137


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.04444444444






self.maneuver_requested None
xxx before update is x: 3.31371498108
y: -20.7862548828
theta: 1.50552237034
speed: 11.7528886795
id: 0
t: 136
xxx after update is x: 2.70979404449
y: -20.6380500793
theta: 1.56774783134
speed: 11.3809118271
id: 0
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: 2.70979404449
y: -20.6380500793
theta: 1.56774783134
speed: 11.3809118271
id: 0
t: 137
xxx after update is x: 3.10396289825
y: -20.1422042847
theta: 1.81787884235
speed: 11.1297597885
id: 0
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:
initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$


 self.man_init:
leave the update function 
in spin function, finish the n times spin:139


xxx before update is x: 3.10396289825
y: -20.1422042847
theta: 1.81787884235
speed: 11.1297597885
id: 0
t: 138
xxx after update is x: 3.53542876244
y: -19.7971916199
theta: 1.51779985428
speed: 11.0447769165
id: 0
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 1
current clock is 6.17777777778
!!!!after check statue the self.tag is [6.177777777777778, 0, 'left']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 6.17777777778

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [6.133333333333334, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
Empty
self.agents_to_ask is []
message is :GET,0,6.17777777778,(3.535428762435913, -19.797191619873047, 1.5177998542785645),11,1,6.17777777778,0,left
!!!!change state to get
finish try maneuver


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: 3.53542876244
y: -19.7971916199
theta: 1.51779985428
speed: 11.0447769165
id: 0
t: 139
xxx after update is x: 3.42767477036
y: -19.4192752838
theta: 1.5886156559
speed: 10.6629590988
id: 0
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.42767477036
y: -19.4192752838
theta: 1.5886156559
speed: 10.6629590988
id: 0
t: 140
xxx after update is xhe sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:139


xxx before update is x: -3.1262512207
y: -50.0340766907
theta: 4.80094480515
speed: 13.7633857727
id: 1
t: 138
xxx after update is x: -3.54348635674
y: -51.2712593079
theta: 4.82250499725
speed: 13.7493782043
id: 1
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.17777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: -3.54348635674
y: -51.2712593079
theta: 4.82250499725
speed: 13.7493782043
id: 1
t: 139
xxx after update is x: -3.35933041573
y: -51.3540687561
theta: 4.77226018906
speed: 14.0580301285
id: 1
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: -3.35933041573
y: -51.3540687561
theta: 4.77226018906
speed: 14.0580301285
id: 1
t: 140
xxx after update is x: -3.35006546974
y: -52.1699523926
theta: 4.60633850098
speed: 13.8914890289
id: 1
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: -3.35006546974
y: -52.1699523926
theta: 4.60633850098
speed: 13.8914890289
id: 1
t: 141
xxx after update is x: -2.78751778603
y: -52.6539115906
theta: 4.6589679718
speed: 14.1099882126
id: 1
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.78751778603
y: -52.6539115906
theta: 4.6589679718
speed: 14.1099882126
id: 1
t: 142
xxx after update is x: -3.38178348541
y: -53.3202781677
theta: 4.61547517776
speed: 13.9031829834
id: 1
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:143




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: -3.38178348541
y: -53.3202781677
theta: 4.61547517776
speed: 13.9031829834
id: 1
t: 143
xxx after update is x: -3.25331807137
y: -53.831363678
theta: 4.60959815979
speed: 13.6265392303
id: 1
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: -3.25331807137
y: -53.831363678
theta: 4.60959815979
speed: 13.6265392303
id: 1
t: 144
xxx after update is x: -3.12749147415
y: -54.4786911011
theta: 4.85632705688
speed: 14.4747943878
id: 1
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.12749147415
y: -54.4786911011
theta: 4.85632705688
speed: 14.4747943878
id: 1
t: 145
xxx after update is x: -3.71229124069
y: -55.2730522156
theta: 4.60280132294
speed: 14.0298938751
id: 1
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:146




going to the update function
sim.: 3.31631851196
y: -18.7027931213
theta: 1.62119758129
speed: 10.5780067444
id: 0
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:141




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: 3.31631851196
y: -18.7027931213
theta: 1.62119758129
speed: 10.5780067444
id: 0
t: 141
xxx after update is x: 3.12149453163
y: -18.602935791
theta: 1.61468052864
speed: 10.2694225311
id: 0
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: 3.12149453163
y: -18.602935791
theta: 1.61468052864
speed: 10.2694225311
id: 0
t: 142
xxx after update is x: 2.89349031448
y: -17.7728118896
theta: 1.59135460854
speed: 10.4615955353
id: 0
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.26426712721857026, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3817834854125977, -53.32027816772461, 4.615475177764893, 13.903182983398438)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: 2.89349031448
y: -17.7728118896
theta: 1.59135460854
speed: 10.4615955353
id: 0
t: 143
xxx after update is x: 3.26857304573
y: -17.1035194397
theta: 1.43899786472
speed: 9.79024791718
id: 0
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: 3.26857304573
y: -17.1035194397
theta: 1.43899786472
speed: 9.79024791718
id: 0
t: 144
xxx after update is x: 3.17264080048
y: -16.8301906586
theta: 1.5144149065
speed: 9.48437309265
id: 0
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.44444444444






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [6.4, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 6.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 6.4
self.TMan is 5
Empty
self.agents_to_ask is []
stopped retry timer
deny not in message
maneuver_negotiatir.py in the domaneuver function - start
added car with id 0 to grantlist. current grantlist:  {0: [10.866666666666667, 'left']}
Doing maneuver
maneuver_negotiatir.py finish the do maneuver function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:146


xxx before update is x: 3.17264080048
y: -16.8301906586
theta: 1.5144149065
speed: 9.48437309265
id: 0
t: 145
xxx after update is x: 3.25601768494
y: -17.0677776337
theta: 1.53463256359
speed: 9.71214294434
id: 0
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: 3.25601768494
y: -17.0677776337
theta: 1.53463256359
speed: 9.71214294434py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: -3.71229124069
y: -55.2730522156
theta: 4.60280132294
speed: 14.0298938751
id: 1
t: 146
xxx after update is x: -3.36644530296
y: -55.0451431274
theta: 4.66895437241
speed: 13.882437706
id: 1
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.53333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.7737490572200149, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3293890953063965, -16.760862350463867, 1.5125739574432373, 9.56816577911377)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: -3.36644530296
y: -55.0451431274
theta: 4.66895437241
speed: 13.882437706
id: 1
t: 147
xxx after update is x: -3.1119685173
y: -55.9770507812
theta: 4.7428393364
speed: 13.8412084579
id: 1
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: -3.1119685173
y: -55.9770507812
theta: 4.7428393364
speed: 13.8412084579
id: 1
t: 148
xxx after update is x: -3.70771050453
y: -57.14585495
theta: 4.81184196472
speed: 13.8825998306
id: 1
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: -3.70771050453
y: -57.14585495
theta: 4.81184196472
speed: 13.8825998306
id: 1
t: 149
xxx after update is x: -3.3944144249
y: -57.9054450989
theta: 4.71737337112
speed: 14.323723793
id: 1
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: -3.3944144249
y: -57.9054450989
theta: 4.71737337112
speed: 14.323723793
id: 1
t: 150
xxx after update is x: -3.39369773865
y: -58.1605529785
theta: 4.91999578476
speed: 13.8598632812
id: 1
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.39369773865
y: -58.1605529785
theta: 4.91999578476
speed: 13.8598632812
id: 1
t: 151
xxx after update is x: -3.28071475029
y: -59.2636566162
theta: 4.59197664261
speed: 13.7250938416
id: 1
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:152




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:153


xxx before update is x: -3.28071475029
y: -59.2636566162
theta: 4.59197664261
speed: 13.7250938416
id: 1
t: 152
xxx after update is x: -3.69473147392
y: -59.4304847717
theta: 4.68317174911
speed: 13.8235063553
id: 1
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.69473147392
y: -59.4304847717
theta: 4.68317174911
speed: 13.8235063553
i
id: 0
t: 146
xxx after update is x: 3.32938909531
y: -16.7608623505
theta: 1.51257395744
speed: 9.56816577911
id: 0
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: 3.32938909531
y: -16.7608623505
theta: 1.51257395744
speed: 9.56816577911
id: 0
t: 147
xxx after update is x: 3.06444168091
y: -15.4447956085
theta: 1.74994111061
speed: 8.89793872833
id: 0
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: 3.06444168091
y: -15.4447956085
theta: 1.74994111061
speed: 8.89793872833
id: 0
t: 148
xxx after update is x: 3.8534924984
y: -15.1567802429
theta: 1.69417285919
speed: 9.34357738495
id: 0
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.8534924984
y: -15.1567802429
theta: 1.69417285919
speed: 9.34357738495
id: 0
t: 149
xxx after update is x: 3.4882349968
y: -15.4161911011
theta: 1.73168969154
speed: 8.70432281494
id: 0
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:150




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: 3.4882349968
y: -15.4161911011
theta: 1.73168969154
speed: 8.70432281494
id: 0
t: 150
xxx after update is x: 3.4094851017
y: -14.9977378845
theta: 1.5183826685
speed: 8.12564373016
id: 0
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:152


xxx before update is x: 3.4094851017
y: -14.9977378845
theta: 1.5183826685
speed: 8.12564373016
id: 0
t: 151
xxx after update is x: 3.62451672554
y: -13.8206186295
theta: 1.54449641705
speed: 8.27749252319
id: 0
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.6421411246834431, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.280714750289917, -59.26365661621094, 4.591976642608643, 13.725093841552734)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.75555555556






self.maneuver_requested left
xxx before update is x: 3.62451672554
y: -13.8206186295
theta: 1.54449641705
speed: 8.27749252319
id: 0
t: 152
xxx after update is x: 3.22688555717
y: -13.6302633286
theta: 1.67380714417
speed: 8.15819358826
id: 0
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:153


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.22688555717
y: -13.6302633286
theta: 1.67380714417
speed: 8.15819358826
id: 0
t: 153
xxx after update is x: 3.59759521484
y: -13.6903276443
theta: 1.52612233162
speed: 7.51417827606
id: 0
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:154




going to the update function
sim.py in the sim.py update function 
tard: 1
t: 153
xxx after update is x: -2.61007881165
y: -60.0741882324
theta: 4.67172288895
speed: 13.8931007385
id: 1
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:154


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.84444444444






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:155


xxx before update is x: -2.61007881165
y: -60.0741882324
theta: 4.67172288895
speed: 13.8931007385
id: 1
t: 154
xxx after update is x: -3.12374305725
y: -61.1051177979
theta: 4.8354139328
speed: 14.00710392
id: 1
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.31296070950681054, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3640410900115967, -12.780525207519531, 1.5315757989883423, 7.911246299743652)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: -3.12374305725
y: -61.1051177979
theta: 4.8354139328
speed: 14.00710392
id: 1
t: 155
xxx after update is x: -3.15875291824
y: -61.8832626343
theta: 4.60726118088
speed: 13.9599523544
id: 1
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: -3.15875291824
y: -61.8832626343
theta: 4.60726118088
speed: 13.9599523544
id: 1
t: 156
xxx after update is x: -3.06303167343
y: -62.0828056335
theta: 4.73052358627
speed: 13.7897415161
id: 1
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: -3.06303167343
y: -62.0828056335
theta: 4.73052358627
speed: 13.7897415161
id: 1
t: 157
xxx after update is x: -3.28586292267
y: -62.6951637268
theta: 4.5497174263
speed: 14.0395259857
id: 1
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.28586292267
y: -62.6951637268
theta: 4.5497174263
speed: 14.0395259857
id: 1
t: 158
xxx after update is x: -3.63804268837
y: -62.5918464661
theta: 4.66639471054
speed: 14.1459608078
id: 1
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:159




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:160


xxx before update is x: -3.63804268837
y: -62.5918464661
theta: 4.66639471054
speed: 14.1459608078
id: 1
t: 159
xxx after update is x: -2.76426815987
y: -63.7449569702
theta: 4.77203607559
speed: 14.1181097031
id: 1
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: -2.76426815987
y: -63.7449569702
theta: 4.77203607559
speed: 14.1181097031
id: 1
t: 160
xxx after update is x: -2.63428640366
y: -64.0838088989
theta: 4.81161642075
speed: 13.730getspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:155


xxx before update is x: 3.59759521484
y: -13.6903276443
theta: 1.52612233162
speed: 7.51417827606
id: 0
t: 154
xxx after update is x: 3.36404109001
y: -12.7805252075
theta: 1.53157579899
speed: 7.91124629974
id: 0
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.36404109001
y: -12.7805252075
theta: 1.53157579899
speed: 7.91124629974
id: 0
t: 155
xxx after update is x: 3.07782483101
y: -12.5839586258
theta: 1.73217737675
speed: 7.30337047577
id: 0
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:156




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: 3.07782483101
y: -12.5839586258
theta: 1.73217737675
speed: 7.30337047577
id: 0
t: 156
xxx after update is x: 3.36696648598
y: -12.2287759781
theta: 1.6309646368
speed: 7.00863981247
id: 0
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: 3.36696648598
y: -12.2287759781
theta: 1.6309646368
speed: 7.00863981247
id: 0
t: 157
xxx after update is x: 2.58127522469
y: -11.6813087463
theta: 1.7197290659
speed: 6.46701192856
id: 0
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.58127522469
y: -11.6813087463
theta: 1.7197290659
speed: 6.46701192856
id: 0
t: 158
xxx after update is x: 2.92044115067
y: -12.6223125458
theta: 1.43944132328
speed: 6.69057369232
id: 0
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:159




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:160


xxx before update is x: 2.92044115067
y: -12.6223125458
theta: 1.43944132328
speed: 6.69057369232
id: 0
t: 159
xxx after update is x: 3.24538731575
y: -11.8189821243
theta: 1.54310584068
speed: 6.19023227692
id: 0
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: 3.24538731575
y: -11.8189821243
theta: 1.54310584068
speed: 6.19023227692
id: 0
t: 160
xxx after update is x: 3.17366290092
y: -11.3029966354
theta: 1.52509582043
speed: 5.81247425079
id: 0
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.15555555556






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:162


maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: 3.17366290092
y: -11.3029966354
theta: 1.52509582043
speed: 5.81247425079
id: 0
t: 161
xxx after update is x: 2.24653601646
y: -11.200838089
theta: 1.70175325871
speed: 5.88063573837
id: 0
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.6750388858594034, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.7470293045043945, -65.01344299316406, 4.745489120483398, 13.8988304134077148
id: 1
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.63428640366
y: -64.0838088989
theta: 4.81161642075
speed: 13.7304077148
id: 1
t: 161
xxx after update is x: -3.7470293045
y: -65.0134429932
theta: 4.74548912048
speed: 13.8988304138
id: 1
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:162


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.2






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.7470293045
y: -65.0134429932
theta: 4.74548912048
speed: 13.8988304138
id: 1
t: 162
xxx after update is x: -3.39016914368
y: -66.1978302002
theta: 4.6780333519
speed: 13.7319974899
id: 1
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:163


maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.387924561161575, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3745782375335693, -10.760221481323242, 1.5687612295150757, 5.859762668609619)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: -3.39016914368
y: -66.1978302002
theta: 4.6780333519
speed: 13.7319974899
id: 1
t: 163
xxx after update is x: -3.14056611061
y: -66.2967147827
theta: 4.60014200211
speed: 13.9958934784
id: 1
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:165


xxx before update is x: -3.14056611061
y: -66.2967147827
theta: 4.60014200211
speed: 13.9958934784
id: 1
t: 164
xxx after update is x: -3.0132188797
y: -67.2406539917
theta: 4.85672903061
speed: 13.9919128418
id: 1
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:166


xxx before update is x: -3.0132188797
y: -67.2406539917
theta: 4.85672903061
speed: 13.9919128418
id: 1
t: 165
xxx after update is x: -2.63454532623
y: -67.6392974854
theta: 4.72030210495
speed: 13.9645624161
id: 1
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: -2.63454532623
y: -67.6392974854
theta: 4.72030210495
speed: 13.9645624161
id: 1
t: 166
xxx after update is x: -3.08462619781
y: -68.1899337769
theta: 4.6209564209
speed: 13.7209014893
id: 1
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: -3.08462619781
y: -68.1899337769
theta: 4.6209564209
speed: 13.7209014893
id: 1
t: 167
xxx after update is x: -3.10359501839
y: -69.1902923584
theta: 4.52328205109
speed: 14.1762285233
id: 1
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxx81836)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:163


xxx before update is x: 2.24653601646
y: -11.200838089
theta: 1.70175325871
speed: 5.88063573837
id: 0
t: 162
xxx after update is x: 3.37457823753
y: -10.7602214813
theta: 1.56876122952
speed: 5.85976266861
id: 0
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.37457823753
y: -10.7602214813
theta: 1.56876122952
speed: 5.85976266861
id: 0
t: 163
xxx after update is x: 3.36460638046
y: -10.8862791061
theta: 1.66381597519
speed: 5.74649000168
id: 0
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:164




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.36460638046
y: -10.8862791061
theta: 1.66381597519
speed: 5.74649000168
id: 0
t: 164
xxx after update is x: 3.24251008034
y: -10.5743150711
theta: 1.38957929611
speed: 5.49661302567
id: 0
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:165




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.24251008034
y: -10.5743150711
theta: 1.38957929611
speed: 5.49661302567
id: 0
t: 165
xxx after update is x: 3.52746534348
y: -9.98705673218
theta: 1.57980382442
speed: 5.23756122589
id: 0
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:166




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: 3.52746534348
y: -9.98705673218
theta: 1.57980382442
speed: 5.23756122589
id: 0
t: 166
xxx after update is x: 3.01352119446
y: -9.79598426819
theta: 1.64489924908
speed: 5.62570714951
id: 0
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.01352119446
y: -9.79598426819
theta: 1.64489924908
speed: 5.62570714951
id: 0
t: 167
xxx after update is x: 3.07027745247
y: -9.65068626404
theta: 1.62352609634
speed: 5.61125946045
id: 0
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:168




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: 3.07027745247
y: -9.65068626404
theta: 1.62352609634
speed: 5.61125946045
id: 0
t: 168
xxx after update is x: 2.72440838814
y: -9.53737258911
theta: 1.75684869289
speed: 5.57580375671
id: 0
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.51111111111






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: 2.72440838814
y: -9.53737258911
theta: 1.75684869289
speed: 5.57580375671
id: 0
t: 169
xxx after update is x: 3.55172395706
y: -9.13975524902
theta:xxxxx
(self.id == 1):
xxx before update is x: -3.10359501839
y: -69.1902923584
theta: 4.52328205109
speed: 14.1762285233
id: 1
t: 168
xxx after update is x: -3.46791362762
y: -69.5439910889
theta: 4.66645526886
speed: 13.8116073608
id: 1
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:169




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: -3.46791362762
y: -69.5439910889
theta: 4.66645526886
speed: 13.8116073608
id: 1
t: 169
xxx after update is x: -3.23164486885
y: -70.3290634155
theta: 4.76007604599
speed: 14.1266889572
id: 1
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.55555555556






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.23164486885
y: -70.3290634155
theta: 4.76007604599
speed: 14.1266889572
id: 1
t: 170
xxx after update is x: -3.35011124611
y: -70.5647659302
theta: 4.93681621552
speed: 14.1729354858
id: 1
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:171


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: -3.35011124611
y: -70.5647659302
theta: 4.93681621552
speed: 14.1729354858
id: 1
t: 171
xxx after update is x: -2.99250054359
y: -70.9090194702
theta: 4.965321064
speed: 14.129989624
id: 1
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.41165653598940904, 0]
222 self.state_dicts[msg.id][msg.t] is (3.068026304244995, -8.60601806640625, 1.329966425895691, 5.500352382659912)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.99250054359
y: -70.9090194702
theta: 4.965321064
speed: 14.129989624
id: 1
t: 172
xxx after update is x: -3.58478665352
y: -71.8370437622
theta: 4.46210813522
speed: 13.885017395
id: 1
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:173




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.58478665352
y: -71.8370437622
theta: 4.46210813522
speed: 13.885017395
id: 1
t: 173
xxx after update is x: -3.0753929615
y: -72.5214004517
theta: 4.82281923294
speed: 13.7441968918
id: 1
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:174




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.0753929615
y: -72.5214004517
theta: 4.82281923294
speed: 13.7441968918
id: 1
t: 174
xxx after update is x: -2.67336583138
y: -73.1718597412
theta: 4.72355127335
speed: 13.9807405472
id: 1
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:175




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.67336583138
y: -73.1718597412
theta: 4.72355127335
speed: 13.9807405472
id: 1
t: 175
xxx after update is x: -3.61834144592
y: -73.8437 1.470261693
speed: 5.59364748001
id: 0
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.55172395706
y: -9.13975524902
theta: 1.470261693
speed: 5.59364748001
id: 0
t: 170
xxx after update is x: 2.86368274689
y: -9.03994560242
theta: 1.46998786926
speed: 5.49871015549
id: 0
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:171




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.86368274689
y: -9.03994560242
theta: 1.46998786926
speed: 5.49871015549
id: 0
t: 171
xxx after update is x: 3.06802630424
y: -8.60601806641
theta: 1.3299664259
speed: 5.50035238266
id: 0
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:172




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:173


xxx before update is x: 3.06802630424
y: -8.60601806641
theta: 1.3299664259
speed: 5.50035238266
id: 0
t: 172
xxx after update is x: 3.31690526009
y: -8.3041009903
theta: 1.77983486652
speed: 5.53502082825
id: 0
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.31690526009
y: -8.3041009903
theta: 1.77983486652
speed: 5.53502082825
id: 0
t: 173
xxx after update is x: 3.11829018593
y: -8.22448348999
theta: 1.38235902786
speed: 5.3095703125
id: 0
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:174


aaaaaa
risk is [0.42046659954142107, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.075392961502075, -72.52140045166016, 4.822819232940674, 13.744196891784668)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: 3.11829018593
y: -8.22448348999
theta: 1.38235902786
speed: 5.3095703125
id: 0
t: 174
xxx after update is x: 3.77703905106
y: -7.78331899643
theta: 1.70400893688
speed: 5.44354009628
id: 0
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.77703905106
y: -7.78331899643
theta: 1.70400893688
speed: 5.44354009628
id: 0
t: 175
xxx after update is x: 3.27189159393
y: -7.32508563995
theta: 1.53280329704
speed: 5.74091720581
id: 0
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:176




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:177


xxx before update is x: 3.27189159393
y: -7.32508563995
theta: 1.53280329704
speed: 5.74091720581
id: 0
t: 176
xxx after update is x: 3.2693901062
y: -7.74911928177
theta: 1.65375912189
speed: 5.54927968979
id: 0
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.86666666667






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < sel957764
theta: 4.72001743317
speed: 13.9467096329
id: 1
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:176




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:177


xxx before update is x: -3.61834144592
y: -73.8437957764
theta: 4.72001743317
speed: 13.9467096329
id: 1
t: 176
xxx after update is x: -3.55920815468
y: -73.8187484741
theta: 4.75548744202
speed: 13.3447532654
id: 1
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: -3.55920815468
y: -73.8187484741
theta: 4.75548744202
speed: 13.3447532654
id: 1
t: 177
xxx after update is x: -3.25031042099
y: -75.1054077148
theta: 4.60472011566
speed: 13.9141931534
id: 1
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.91111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: -3.25031042099
y: -75.1054077148
theta: 4.60472011566
speed: 13.9141931534
id: 1
t: 178
xxx after update is x: -2.87918686867
y: -75.6706085205
theta: 4.84575271606
speed: 13.9686136246
id: 1
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:180


xxx before update is x: -2.87918686867
y: -75.6706085205
theta: 4.84575271606
speed: 13.9686136246
id: 1
t: 179
xxx after update is x: -3.35134243965
y: -76.1561203003
theta: 4.80675888062
speed: 14.054690361
id: 1
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.35134243965
y: -76.1561203003
theta: 4.80675888062
speed: 14.054690361
id: 1
t: 180
xxx after update is x: -3.02764105797
y: -77.0795211792
theta: 4.72300338745
speed: 14.177523613
id: 1
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:181


aaaaaa
aaaaaabbbbb
risk is [0.06968736662303365, 0]
222 self.state_dicts[msg.id][msg.t] is (2.861208200454712, -5.9715986251831055, 1.6749989986419678, 6.830281734466553)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.02764105797
y: -77.0795211792
theta: 4.72300338745
speed: 14.177523613
id: 1
t: 181
xxx after update is x: -3.27646040916
y: -77.4496459961
theta: 4.74736309052
speed: 13.9849767685
id: 1
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:182




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:183


xxx before update is x: -3.27646040916
y: -77.4496459961
theta: 4.74736309052
speed: 13.9849767685
id: 1
t: 182
xxx after update is x: -3.23138475418
y: -78.0226898193
theta: 4.4738407135
speed: 13.9397926331
id: 1
t: 183
maneuver_negotiatir.py finish the updaf.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: 3.2693901062
y: -7.74911928177
theta: 1.65375912189
speed: 5.54927968979
id: 0
t: 177
xxx after update is x: 3.59870910645
y: -6.80140399933
theta: 1.63826024532
speed: 5.98370313644
id: 0
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: 3.59870910645
y: -6.80140399933
theta: 1.63826024532
speed: 5.98370313644
id: 0
t: 178
xxx after update is x: 3.09556126595
y: -7.34888458252
theta: 1.73609232903
speed: 6.06094503403
id: 0
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.09556126595
y: -7.34888458252
theta: 1.73609232903
speed: 6.06094503403
id: 0
t: 179
xxx after update is x: 2.77216649055
y: -6.52416419983
theta: 1.59523117542
speed: 6.51260471344
id: 0
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:180




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:181


xxx before update is x: 2.77216649055
y: -6.52416419983
theta: 1.59523117542
speed: 6.51260471344
id: 0
t: 180
xxx after update is x: 2.86120820045
y: -5.97159862518
theta: 1.67499899864
speed: 6.83028173447
id: 0
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.86120820045
y: -5.97159862518
theta: 1.67499899864
speed: 6.83028173447
id: 0
t: 181
xxx after update is x: 3.47263073921
y: -6.01053285599
theta: 1.6186016798
speed: 6.83559465408
id: 0
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:182




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.47263073921
y: -6.01053285599
theta: 1.6186016798
speed: 6.83559465408
id: 0
t: 182
xxx after update is x: 3.10208749771
y: -5.53946065903
theta: 1.82982254028
speed: 7.12799978256
id: 0
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:183


aaaaaa


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: 3.10208749771
y: -5.53946065903
theta: 1.82982254028
speed: 7.12799978256
id: 0
t: 183
xxx after update is x: 2.76674175262
y: -5.37611436844
theta: 1.80219960213
speed: 7.05868625641
id: 0
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.042863314454284984, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3431694507598877, -78.83966064453125, 4.601040363311768, 13.9176664352417)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.76674175262
y: -5.37611436844
theta: 1.80219960213
speed: 7.05868625641
id: 0
t: 184
xxx after update is x: 3.21304726601
y: -4.39824914932
theta: 1.79367125034
speed: 7.40569543839
id: 0
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:185


mte agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: -3.23138475418
y: -78.0226898193
theta: 4.4738407135
speed: 13.9397926331
id: 1
t: 183
xxx after update is x: -3.34316945076
y: -78.8396606445
theta: 4.60104036331
speed: 13.9176664352
id: 1
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.34316945076
y: -78.8396606445
theta: 4.60104036331
speed: 13.9176664352
id: 1
t: 184
xxx after update is x: -2.92338323593
y: -79.2262268066
theta: 4.80507850647
speed: 13.9947280884
id: 1
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:185




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.92338323593
y: -79.2262268066
theta: 4.80507850647
speed: 13.9947280884
id: 1
t: 185
xxx after update is x: -3.1100795269
y: -79.8407058716
theta: 4.62647485733
speed: 13.9242544174
id: 1
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:186


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.26666666667






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: -3.1100795269
y: -79.8407058716
theta: 4.62647485733
speed: 13.9242544174
id: 1
t: 186
xxx after update is x: -3.0632109642
y: -80.1474227905
theta: 4.70326662064
speed: 14.0807132721
id: 1
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.0632109642
y: -80.1474227905
theta: 4.70326662064
speed: 14.0807132721
id: 1
t: 187
xxx after update is x: -2.89761018753
y: -81.0040359497
theta: 4.69385433197
speed: 14.0549106598
id: 1
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:188




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.89761018753
y: -81.0040359497
theta: 4.69385433197
speed: 14.0549106598
id: 1
t: 188
xxx after update is x: -3.27018809319
y: -81.2181015015
theta: 4.61173725128
speed: 14.1647424698
id: 1
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:189


aaaaaa
aaaaaabbbbb
risk is [2.1183764565435214e-69, 0]
222 self.state_dicts[msg.id][msg.t] is (2.9570794105529785, -3.28849196434021, 1.8113933801651, 8.356775283813477)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: -3.27018809319
y: -81.2181015015
theta: 4.61173725128
speed: 14.1647424698
id: 1
t: 189
xxx after update is x: -3.12464404106
y: -82.1203079224
theta: 4.79313516617
speed: 13.9219341278
id: 1
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: aneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.22222222222






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: 3.21304726601
y: -4.39824914932
theta: 1.79367125034
speed: 7.40569543839
id: 0
t: 185
xxx after update is x: 3.18757796288
y: -4.84055662155
theta: 1.85173845291
speed: 7.61058616638
id: 0
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: 3.18757796288
y: -4.84055662155
theta: 1.85173845291
speed: 7.61058616638
id: 0
t: 186
xxx after update is x: 2.86216378212
y: -4.60399341583
theta: 1.79230797291
speed: 7.71162605286
id: 0
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.86216378212
y: -4.60399341583
theta: 1.79230797291
speed: 7.71162605286
id: 0
t: 187
xxx after update is x: 2.62519145012
y: -3.62483358383
theta: 1.82132899761
speed: 8.0645532608
id: 0
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:188




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.62519145012
y: -3.62483358383
theta: 1.82132899761
speed: 8.0645532608
id: 0
t: 188
xxx after update is x: 2.95707941055
y: -3.28849196434
theta: 1.81139338017
speed: 8.35677528381
id: 0
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:189




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: 2.95707941055
y: -3.28849196434
theta: 1.81139338017
speed: 8.35677528381
id: 0
t: 189
xxx after update is x: 2.61393475533
y: -3.21581292152
theta: 1.94882392883
speed: 8.70940589905
id: 0
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: 2.61393475533
y: -3.21581292152
theta: 1.94882392883
speed: 8.70940589905
id: 0
t: 190
xxx after update is x: 2.57359218597
y: -3.08346700668
theta: 2.13557672501
speed: 8.38443851471
id: 0
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.57359218597
y: -3.08346700668
theta: 2.13557672501
speed: 8.38443851471
id: 0
t: 191
xxx after update is x: 2.38551831245
y: -1.95499193668
theta: 1.8999068737
speed: 9.08875656128
id: 0
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:192




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:193


xxx before update is x: 2.38551831245
y: -1.95499193668
theta: 1.8999068737
speed: 9.08875656128
id: 0
t: 192
xxx after update is x: 2.10125660896
y: -1.88843822479
theta: 2.13439869881
speed: 9.09714412689
id: 0
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
ri-3.12464404106
y: -82.1203079224
theta: 4.79313516617
speed: 13.9219341278
id: 1
t: 190
xxx after update is x: -3.25317716599
y: -82.52784729
theta: 4.78929853439
speed: 13.6090335846
id: 1
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:191




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:192


xxx before update is x: -3.25317716599
y: -82.52784729
theta: 4.78929853439
speed: 13.6090335846
id: 1
t: 191
xxx after update is x: -3.61574625969
y: -84.0053634644
theta: 4.65674781799
speed: 14.2983121872
id: 1
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.61574625969
y: -84.0053634644
theta: 4.65674781799
speed: 14.2983121872
id: 1
t: 192
xxx after update is x: -2.95242166519
y: -84.2835083008
theta: 4.67527580261
speed: 14.2164974213
id: 1
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:193




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:194


xxx before update is x: -2.95242166519
y: -84.2835083008
theta: 4.67527580261
speed: 14.2164974213
id: 1
t: 193
xxx after update is x: -3.15993881226
y: -85.114402771
theta: 4.7390704155
speed: 13.5295686722
id: 1
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.62222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:195


xxx before update is x: -3.15993881226
y: -85.114402771
theta: 4.7390704155
speed: 13.5295686722
id: 1
t: 194
xxx after update is x: -3.22283768654
y: -85.4107131958
theta: 4.55072879791
speed: 14.0853424072
id: 1
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:196


xxx before update is x: -3.22283768654
y: -85.4107131958
theta: 4.55072879791
speed: 14.0853424072
id: 1
t: 195
xxx after update is x: -2.59562373161
y: -86.0982513428
theta: 4.91818189621
speed: 13.9110088348
id: 1
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0]
222 self.state_dicts[msg.id][msg.t] is (1.358059048652649, -1.09621000289917, 2.08357834815979, 9.868916511535645)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -2.59562373161
y: -86.0982513428
theta: 4.91818189621
speed: 13.9110088348
id: 1
t: 196
xxx after update is x: -3.34630274773
y: -87.2562789917
theta: 4.55438089371
speed: 13.8102693558
id: 1
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:198


xxx before update is x: -3.34630274773
y: -87.2562789917
theta: 4.55438089371
speed: 13.8102693558
id: 1
t: 197
xxx after update is x: -3.489480257sk is [1.4853075787874743e-18, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.9524216651916504, -84.28350830078125, 4.675275802612305, 14.216497421264648)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.57777777778






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:194


xxx before update is x: 2.10125660896
y: -1.88843822479
theta: 2.13439869881
speed: 9.09714412689
id: 0
t: 193
xxx after update is x: 1.47980284691
y: -1.89961910248
theta: 2.1629679203
speed: 9.30049324036
id: 0
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:195


xxx before update is x: 1.47980284691
y: -1.89961910248
theta: 2.1629679203
speed: 9.30049324036
id: 0
t: 194
xxx after update is x: 1.52417254448
y: -0.44460695982
theta: 2.3239865303
speed: 9.92511463165
id: 0
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:196


xxx before update is x: 1.52417254448
y: -0.44460695982
theta: 2.3239865303
speed: 9.92511463165
id: 0
t: 195
xxx after update is x: 1.35805904865
y: -1.0962100029
theta: 2.08357834816
speed: 9.86891651154
id: 0
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 1.35805904865
y: -1.0962100029
theta: 2.08357834816
speed: 9.86891651154
id: 0
t: 196
xxx after update is x: 1.3325458765
y: -1.07592213154
theta: 2.30935764313
speed: 10.3955316544
id: 0
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:197




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:198


xxx before update is x: 1.3325458765
y: -1.07592213154
theta: 2.30935764313
speed: 10.3955316544
id: 0
t: 197
xxx after update is x: 0.993491232395
y: -0.439309090376
theta: 2.42855668068
speed: 10.5650291443
id: 0
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:199


xxx before update is x: 0.993491232395
y: -0.439309090376
theta: 2.42855668068
speed: 10.5650291443
id: 0
t: 198
xxx after update is x: 0.112945303321
y: -0.502427101135
theta: 2.21123838425
speed: 10.59745121
id: 0
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: 0.112945303321
y: -0.502427101135
theta: 2.21123838425
speed: 10.59745121
id: 0
t: 199
xxx after update is x: 0.0300500877202
y: -0.0297159142792
theta: 2.47860765457
speed: 10.8314685822
id: 0
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 0.0300500877202
y: -0.0297159142792
theta: 2.478607654503
y: -87.1061706543
theta: 4.74585437775
speed: 13.9630098343
id: 1
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:199


xxx before update is x: -3.48948025703
y: -87.1061706543
theta: 4.74585437775
speed: 13.9630098343
id: 1
t: 198
xxx after update is x: -3.22067403793
y: -87.5396347046
theta: 4.72795820236
speed: 13.8503437042
id: 1
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: -3.22067403793
y: -87.5396347046
theta: 4.72795820236
speed: 13.8503437042
id: 1
t: 199
xxx after update is x: -3.34193992615
y: -88.5718231201
theta: 4.7358751297
speed: 14.0048789978
id: 1
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -3.34193992615
y: -88.5718231201
theta: 4.7358751297
speed: 14.0048789978
id: 1
t: 200
xxx after update is x: -3.12461090088
y: -88.9536056519
theta: 4.70967245102
speed: 13.7791652679
id: 1
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0]
222 self.state_dicts[msg.id][msg.t] is (0.007630821783095598, 0.6027417182922363, 2.3716115951538086, 10.817980766296387)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.12461090088
y: -88.9536056519
theta: 4.70967245102
speed: 13.7791652679
id: 1
t: 201
xxx after update is x: -2.85187125206
y: -89.4274215698
theta: 4.60130167007
speed: 14.1230039597
id: 1
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:202


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.97777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.85187125206
y: -89.4274215698
theta: 4.60130167007
speed: 14.1230039597
id: 1
t: 202
xxx after update is x: -3.55539464951
y: -90.2839736938
theta: 4.61575889587
speed: 13.7700366974
id: 1
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:203




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.55539464951
y: -90.2839736938
theta: 4.61575889587
speed: 13.7700366974
id: 1
t: 203
xxx after update is x: -2.7348408699
y: -91.0163421631
theta: 4.68313741684
speed: 13.6588449478
id: 1
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:204




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:205


xxx before update is x: -2.7348408699
y: -91.0163421631
theta: 4.68313741684
speed: 13.6588449478
id: 1
t: 204
xxx after update is x: -3.09286546707
y: -91.5883636475
theta: 4.61345338821
speed: 14.1355495453
id: 1
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in 7
speed: 10.8314685822
id: 0
t: 200
xxx after update is x: 0.0076308217831
y: 0.602741718292
theta: 2.37161159515
speed: 10.8179807663
id: 0
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:201


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1246109008789062, -88.95360565185547, 4.709672451019287, 13.779165267944336)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.93333333333






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:202


xxx before update is x: 0.0076308217831
y: 0.602741718292
theta: 2.37161159515
speed: 10.8179807663
id: 0
t: 201
xxx after update is x: -0.642638683319
y: 0.325176745653
theta: 2.44126415253
speed: 11.1085662842
id: 0
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:203


xxx before update is x: -0.642638683319
y: 0.325176745653
theta: 2.44126415253
speed: 11.1085662842
id: 0
t: 202
xxx after update is x: -1.39944183826
y: 1.03430104256
theta: 2.60673737526
speed: 11.2738265991
id: 0
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:204


xxx before update is x: -1.39944183826
y: 1.03430104256
theta: 2.60673737526
speed: 11.2738265991
id: 0
t: 203
xxx after update is x: -1.17009961605
y: 1.18155431747
theta: 2.70028924942
speed: 11.751036644
id: 0
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -1.17009961605
y: 1.18155431747
theta: 2.70028924942
speed: 11.751036644
id: 0
t: 204
xxx after update is x: -2.00099897385
y: 1.36046075821
theta: 2.77615094185
speed: 11.5008516312
id: 0
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:205




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:206


xxx before update is x: -2.00099897385
y: 1.36046075821
theta: 2.77615094185
speed: 11.5008516312
id: 0
t: 205
xxx after update is x: -1.98065233231
y: 1.48777770996
theta: 2.59818649292
speed: 12.4365301132
id: 0
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -1.98065233231
y: 1.48777770996
theta: 2.59818649292
speed: 12.4365301132
id: 0
t: 206
xxx after update is x: -2.49500203133
y: 1.63072741032
theta: 2.80617666245
speed: 12.1764659882
id: 0
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:207




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:208


xxx before update is x: -2.49500203133
y: 1.63072741032
theta: 2.80617666245
speed: 12.1764659882
id: 0
t: 207
xxx after update is x: -2.93743467331
y: 1.99929535389
theta: 2.73018527031
speed: 12.427176the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.09286546707
y: -91.5883636475
theta: 4.61345338821
speed: 14.1355495453
id: 1
t: 205
xxx after update is x: -3.48446583748
y: -91.6144256592
theta: 4.76237249374
speed: 14.1184482574
id: 1
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:206


aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.48446583748
y: -91.6144256592
theta: 4.76237249374
speed: 14.1184482574
id: 1
t: 206
xxx after update is x: -2.97816467285
y: -92.876411438
theta: 4.60882997513
speed: 13.8269777298
id: 1
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:207


risk is [0.0, 0]
222 self.state_dicts[msg.id][msg.t] is (-2.495002031326294, 1.6307274103164673, 2.8061766624450684, 12.17646598815918)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:208


xxx before update is x: -2.97816467285
y: -92.876411438
theta: 4.60882997513
speed: 13.8269777298
id: 1
t: 207
xxx after update is x: -2.92025923729
y: -93.2669143677
theta: 4.90984153748
speed: 13.778128624
id: 1
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -2.92025923729
y: -93.2669143677
theta: 4.90984153748
speed: 13.778128624
id: 1
t: 208
xxx after update is x: -3.3307056427
y: -94.5058441162
theta: 4.88009405136
speed: 13.6684122086
id: 1
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.28888888889






self.maneuver_requested None
xxx before update is x: -3.3307056427
y: -94.5058441162
theta: 4.88009405136
speed: 13.6684122086
id: 1
t: 209
xxx after update is x: -3.11182546616
y: -94.4692001343
theta: 4.67410945892
speed: 13.8955068588
id: 1
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:210


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.11182546616
y: -94.4692001343
theta: 4.67410945892
speed: 13.8955068588
id: 1
t: 210
xxx after update is x: -3.20498752594
y: -95.3139953613
theta: 4.69527721405
speed: 14.1042261124
id: 1
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:211




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.20498752594
y: -95.3139953613
theta: 4.69527721405
speed: 14.1042261124
id: 1
t: 211
xxx after update is x: -3.2835919857
y: -95.7712554932
theta: 4.71326732635
speed: 13.9985866547
id: 1
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:212




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -3.2835919857
y4755
id: 0
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.9202592372894287, -93.26691436767578, 4.909841537475586, 13.778128623962402)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -2.93743467331
y: 1.99929535389
theta: 2.73018527031
speed: 12.4271764755
id: 0
t: 208
xxx after update is x: -3.57748937607
y: 2.28356742859
theta: 2.92607998848
speed: 12.9139595032
id: 0
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.28888888889






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -3.57748937607
y: 2.28356742859
theta: 2.92607998848
speed: 12.9139595032
id: 0
t: 209
xxx after update is x: -4.19241046906
y: 2.99542665482
theta: 2.7675447464
speed: 12.9131975174
id: 0
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -4.19241046906
y: 2.99542665482
theta: 2.7675447464
speed: 12.9131975174
id: 0
t: 210
xxx after update is x: -4.98460483551
y: 2.77803993225
theta: 3.03698897362
speed: 13.1044998169
id: 0
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:211




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -4.98460483551
y: 2.77803993225
theta: 3.03698897362
speed: 13.1044998169
id: 0
t: 211
xxx after update is x: -5.73049926758
y: 3.02300977707
theta: 2.9043135643
speed: 13.2799186707
id: 0
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:212




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -5.73049926758
y: 3.02300977707
theta: 2.9043135643
speed: 13.2799186707
id: 0
t: 212
xxx after update is x: -5.542283535
y: 3.57640552521
theta: 2.89986038208
speed: 13.7235078812
id: 0
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:213




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:214


xxx before update is x: -5.542283535
y: 3.57640552521
theta: 2.89986038208
speed: 13.7235078812
id: 0
t: 213
xxx after update is x: -6.56133556366
y: 3.14222621918
theta: 3.02885699272
speed: 14.1333694458
id: 0
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -6.56133556366
y: 3.14222621918
theta: 3.02885699272
speed: 14.1333694458
id: 0
t: 214
xxx after update is x: -7.37061738968
y: 3.32124614716
theta: 2.87802624702
speed: 13.8092222214
id: 0
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:215




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the: -95.7712554932
theta: 4.71326732635
speed: 13.9985866547
id: 1
t: 212
xxx after update is x: -3.0863301754
y: -97.083366394
theta: 4.66610813141
speed: 13.943810463
id: 1
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.0863301754
y: -97.083366394
theta: 4.66610813141
speed: 13.943810463
id: 1
t: 213
xxx after update is x: -3.27208805084
y: -97.2196807861
theta: 4.83251810074
speed: 13.7525682449
id: 1
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:214




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:215


xxx before update is x: -3.27208805084
y: -97.2196807861
theta: 4.83251810074
speed: 13.7525682449
id: 1
t: 214
xxx after update is x: -3.33158111572
y: -97.4834060669
theta: 4.87661314011
speed: 13.7306413651
id: 1
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0]
222 self.state_dicts[msg.id][msg.t] is (-7.370617389678955, 3.3212461471557617, 2.878026247024536, 13.809222221374512)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.33158111572
y: -97.4834060669
theta: 4.87661314011
speed: 13.7306413651
id: 1
t: 215
xxx after update is x: -3.9358921051
y: -98.5361938477
theta: 4.65468406677
speed: 13.6253137589
id: 1
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:216




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.9358921051
y: -98.5361938477
theta: 4.65468406677
speed: 13.6253137589
id: 1
t: 216
xxx after update is x: -3.02429652214
y: -98.5507278442
theta: 4.72769784927
speed: 13.6989612579
id: 1
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:217




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:218


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.64444444444






self.maneuver_requested None
xxx before update is x: -3.02429652214
y: -98.5507278442
theta: 4.72769784927
speed: 13.6989612579
id: 1
t: 217
xxx after update is x: -3.24027824402
y: -99.2170944214
theta: 4.89878225327
speed: 14.0515346527
id: 1
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -3.24027824402
y: -99.2170944214
theta: 4.89878225327
speed: 14.0515346527
id: 1
t: 218
xxx after update is x: -2.85768651962
y: -100.141593933
theta: 4.79843235016
speed: 13.7598638535
id: 1
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.85768651962
y: -100.141593933
theta: 4.79843235016
speed: 13.7598638535
id: 1
t: 219
xxx after update is x: -3.2431075573
y: -100.750167847
theta: 4.69429397583
speed: 13.8416404724
id: 1
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update  update function xxx before update is x: -7.37061738968
y: 3.32124614716
theta: 2.87802624702
speed: 13.8092222214
id: 0
t: 215
xxx after update is x: -7.85756015778
y: 2.96893882751
theta: 3.13372540474
speed: 13.9358701706
id: 0
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:216




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:217


xxx before update is x: -7.85756015778
y: 2.96893882751
theta: 3.13372540474
speed: 13.9358701706
id: 0
t: 216
xxx after update is x: -7.41542196274
y: 3.31741642952
theta: 2.99262714386
speed: 13.6854724884
id: 0
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.64444444444






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:218


xxx before update is x: -7.41542196274
y: 3.31741642952
theta: 2.99262714386
speed: 13.6854724884
id: 0
t: 217
xxx after update is x: -9.10451984406
y: 3.7087199688
theta: 3.00607681274
speed: 14.0726051331
id: 0
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -9.10451984406
y: 3.7087199688
theta: 3.00607681274
speed: 14.0726051331
id: 0
t: 218
xxx after update is x: -9.66898155212
y: 3.87045001984
theta: 3.23410773277
speed: 13.7052564621
id: 0
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:219




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -9.66898155212
y: 3.87045001984
theta: 3.23410773277
speed: 13.7052564621
id: 0
t: 219
xxx after update is x: -10.5491046906
y: 3.52311682701
theta: 3.13355278969
speed: 14.254781723
id: 0
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:220


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.243107557296753, -100.75016784667969, 4.694293975830078, 13.84164047241211)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
removed car with id 0 from grantlist. currentgrantlist: {}


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -10.5491046906
y: 3.52311682701
theta: 3.13355278969
speed: 14.254781723
id: 0
t: 220
xxx after update is x: -10.6228027344
y: 3.94387793541
theta: 3.24069190025
speed: 13.5319042206
id: 0
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:222


xxx before update is x: -10.6228027344
y: 3.94387793541
theta: 3.24069190025
speed: 13.5319042206
id: 0
t: 221
xxx after update is x: -11.4885463715
y: 3.41300201416
theta: 3.24236369133
speed: 13.9652481079
id: 0
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -11.4885463715
y: 3.41300201416
theta: 3.24236369133
speed: 13.9652481079
id: 0
t: 222
xxx after update is x: -12.1151275635
y: 3.7455143928function 
in spin function, finish the n times spin:220




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -3.2431075573
y: -100.750167847
theta: 4.69429397583
speed: 13.8416404724
id: 1
t: 220
xxx after update is x: -3.27133059502
y: -101.113395691
theta: 4.75302839279
speed: 13.8699712753
id: 1
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0]
222 self.state_dicts[msg.id][msg.t] is (-10.622802734375, 3.943877935409546, 3.240691900253296, 13.531904220581055)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.27133059502
y: -101.113395691
theta: 4.75302839279
speed: 13.8699712753
id: 1
t: 221
xxx after update is x: -3.68260622025
y: -102.496749878
theta: 4.70717525482
speed: 14.0431203842
id: 1
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:222




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.68260622025
y: -102.496749878
theta: 4.70717525482
speed: 14.0431203842
id: 1
t: 222
xxx after update is x: -3.83608222008
y: -102.527435303
theta: 4.90729856491
speed: 14.1118459702
id: 1
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:223




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.83608222008
y: -102.527435303
theta: 4.90729856491
speed: 14.1118459702
id: 1
t: 223
xxx after update is x: -3.28422474861
y: -103.198791504
theta: 4.69118642807
speed: 14.1691951752
id: 1
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:224




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.28422474861
y: -103.198791504
theta: 4.69118642807
speed: 14.1691951752
id: 1
t: 224
xxx after update is x: -3.15234017372
y: -104.080886841
theta: 4.68736743927
speed: 13.7182188034
id: 1
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:225




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:226


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.0






self.maneuver_requested None
xxx before update is x: -3.15234017372
y: -104.080886841
theta: 4.68736743927
speed: 13.7182188034
id: 1
t: 225
xxx after update is x: -3.4267077446
y: -104.141174316
theta: 4.77431869507
speed: 13.6767568588
id: 1
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -3.4267077446
y: -104.141174316
theta: 4.77431869507
speed: 13.6767568588
id: 1
t: 226
xxx after update is x: -2.49819278717
y: -104.927536011
theta: 4.47300815582
speed: 13.7460355759
id: 1
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update functi5
theta: 3.12653255463
speed: 13.6335277557
id: 0
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:223




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:224


xxx before update is x: -12.1151275635
y: 3.74551439285
theta: 3.12653255463
speed: 13.6335277557
id: 0
t: 223
xxx after update is x: -12.9921321869
y: 3.56847023964
theta: 3.16637659073
speed: 13.9557256699
id: 0
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:225


xxx before update is x: -12.9921321869
y: 3.56847023964
theta: 3.16637659073
speed: 13.9557256699
id: 0
t: 224
xxx after update is x: -13.3284034729
y: 2.95504045486
theta: 3.07529330254
speed: 13.927819252
id: 0
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.0






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:226


xxx before update is x: -13.3284034729
y: 2.95504045486
theta: 3.07529330254
speed: 13.927819252
id: 0
t: 225
xxx after update is x: -13.4317922592
y: 4.03374052048
theta: 3.21831941605
speed: 14.0412082672
id: 0
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -13.4317922592
y: 4.03374052048
theta: 3.21831941605
speed: 14.0412082672
id: 0
t: 226
xxx after update is x: -14.8827266693
y: 3.14552497864
theta: 3.12694597244
speed: 13.7659769058
id: 0
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:227




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -14.8827266693
y: 3.14552497864
theta: 3.12694597244
speed: 13.7659769058
id: 0
t: 227
xxx after update is x: -15.232831955
y: 3.20481300354
theta: 3.11588478088
speed: 14.1465978622
id: 0
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:228


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.268122434616089, -105.95598602294922, 4.746357440948486, 13.86127758026123)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -15.232831955
y: 3.20481300354
theta: 3.11588478088
speed: 14.1465978622
id: 0
t: 228
xxx after update is x: -16.0057888031
y: 2.94608902931
theta: 3.16841125488
speed: 14.0577869415
id: 0
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -16.0057888031
y: 2.94608902931
theta: 3.16841125488
speed: 14.0577869415
id: 0
t: 229
xxx after update is x: -16.7323513031
y: 3.56747317314
theta: 3.14188504219
speed: 13.7623786926
id: 0
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:230




going to the updateon xxx before update is x: -2.49819278717
y: -104.927536011
theta: 4.47300815582
speed: 13.7460355759
id: 1
t: 227
xxx after update is x: -3.26812243462
y: -105.955986023
theta: 4.74635744095
speed: 13.8612775803
id: 1
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:228


aaaaaa
aaaaaabbbbb
risk is [0.0, 0]
222 self.state_dicts[msg.id][msg.t] is (-15.232831954956055, 3.204813003540039, 3.115884780883789, 14.146597862243652)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.26812243462
y: -105.955986023
theta: 4.74635744095
speed: 13.8612775803
id: 1
t: 228
xxx after update is x: -2.95314860344
y: -106.25402832
theta: 4.73689937592
speed: 13.7367448807
id: 1
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:229




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.95314860344
y: -106.25402832
theta: 4.73689937592
speed: 13.7367448807
id: 1
t: 229
xxx after update is x: -3.25857067108
y: -106.605613708
theta: 4.86194419861
speed: 13.9301614761
id: 1
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:230




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.25857067108
y: -106.605613708
theta: 4.86194419861
speed: 13.9301614761
id: 1
t: 230
xxx after update is x: -3.39465928078
y: -107.375312805
theta: 4.66722679138
speed: 14.0591440201
id: 1
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:231




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.39465928078
y: -107.375312805
theta: 4.66722679138
speed: 14.0591440201
id: 1
t: 231
xxx after update is x: -3.53225135803
y: -108.850097656
theta: 4.62283945084
speed: 14.0029563904
id: 1
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:232




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -3.53225135803
y: -108.850097656
theta: 4.62283945084
speed: 14.0029563904
id: 1
t: 232
xxx after update is x: -3.47287893295
y: -109.540023804
theta: 4.76467657089
speed: 13.572432518
id: 1
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.3555555556






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -3.47287893295
y: -109.540023804
theta: 4.76467657089
speed: 13.572432518
id: 1
t: 233
xxx after update is x: -3.35042619705
y: -109.522140503
theta: 4.88721466064
speed: 13.9047079086
id: 1
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -3.35042619705
y: -109.522140503
theta: 4.88721466064
speed: 13.9047079086
id: 1
t: 234
xxx after update is x: -2. function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -16.7323513031
y: 3.56747317314
theta: 3.14188504219
speed: 13.7623786926
id: 0
t: 230
xxx after update is x: -16.8756465912
y: 3.97612071037
theta: 2.99614405632
speed: 14.1829118729
id: 0
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:231




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:232


xxx before update is x: -16.8756465912
y: 3.97612071037
theta: 2.99614405632
speed: 14.1829118729
id: 0
t: 231
xxx after update is x: -17.7446327209
y: 3.26970863342
theta: 3.20025038719
speed: 14.0238180161
id: 0
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.3111111111






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -17.7446327209
y: 3.26970863342
theta: 3.20025038719
speed: 14.0238180161
id: 0
t: 232
xxx after update is x: -17.924829483
y: 3.04893636703
theta: 3.13868808746
speed: 14.0384635925
id: 0
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -17.924829483
y: 3.04893636703
theta: 3.13868808746
speed: 14.0384635925
id: 0
t: 233
xxx after update is x: -19.2245311737
y: 3.60034060478
theta: 3.19138121605
speed: 13.9583530426
id: 0
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -19.2245311737
y: 3.60034060478
theta: 3.19138121605
speed: 13.9583530426
id: 0
t: 234
xxx after update is x: -19.4664325714
y: 3.0650537014
theta: 3.05533576012
speed: 13.7262630463
id: 0
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:236


xxx before update is x: -19.4664325714
y: 3.0650537014
theta: 3.05533576012
speed: 13.7262630463
id: 0
t: 235
xxx after update is x: -20.3100757599
y: 3.27030324936
theta: 3.23178362846
speed: 13.735827446
id: 0
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.428720474243164, -110.92875671386719, 4.785436153411865, 13.75307846069336)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -20.3100757599
y: 3.27030324936
theta: 3.23178362846
speed: 13.735827446
id: 0
t: 236
xxx after update is x: -20.965883255
y: 3.42446208
theta: 3.19213938713
speed: 13.8493185043
id: 0
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -20.965883255
y: 3.42479283976555
y: -109.94480896
theta: 4.71991014481
speed: 14.0963277817
id: 1
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0]
222 self.state_dicts[msg.id][msg.t] is (-19.466432571411133, 3.065053701400757, 3.055335760116577, 13.726263046264648)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:236


xxx before update is x: -2.79283976555
y: -109.94480896
theta: 4.71991014481
speed: 14.0963277817
id: 1
t: 235
xxx after update is x: -3.42872047424
y: -110.928756714
theta: 4.78543615341
speed: 13.7530784607
id: 1
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -3.42872047424
y: -110.928756714
theta: 4.78543615341
speed: 13.7530784607
id: 1
t: 236
xxx after update is x: -3.28897190094
y: -111.311698914
theta: 4.70230770111
speed: 13.7472009659
id: 1
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -3.28897190094
y: -111.311698914
theta: 4.70230770111
speed: 13.7472009659
id: 1
t: 237
xxx after update is x: -3.05064439774
y: -112.106933594
theta: 4.63275623322
speed: 13.9139099121
id: 1
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.05064439774
y: -112.106933594
theta: 4.63275623322
speed: 13.9139099121
id: 1
t: 238
xxx after update is x: -3.39662766457
y: -111.934707642
theta: 4.78672885895
speed: 14.1096744537
id: 1
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:239




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:240


xxx before update is x: -3.39662766457
y: -111.934707642
theta: 4.78672885895
speed: 14.1096744537
id: 1
t: 239
xxx after update is x: -3.21635246277
y: -112.906593323
theta: 4.57419300079
speed: 13.5381402969
id: 1
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:241


xxx before update is x: -3.21635246277
y: -112.906593323
theta: 4.57419300079
speed: 13.5381402969
id: 1
t: 240
xxx after update is x: -3.8199236393
y: -113.589630127
theta: 4.75412368774
speed: 13.8934497833
id: 1
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.7111111111






self.maneuver_requested None
xxx before update is x: -3.8199236393
y: -113.589630127
theta: 4.75412368774
speed: 13.8934497833
id: 1
t: 241
xxx after update is x: -3.67086291313
y: -114.421798706
theta: 4.70734596252
speed: 14.1651573181
id: 1
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:242


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.46208
theta: 3.19213938713
speed: 13.8493185043
id: 0
t: 237
xxx after update is x: -20.8702392578
y: 2.64036488533
theta: 3.08101797104
speed: 14.0913915634
id: 0
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -20.8702392578
y: 2.64036488533
theta: 3.08101797104
speed: 14.0913915634
id: 0
t: 238
xxx after update is x: -22.0069789886
y: 3.76001214981
theta: 3.16101861
speed: 13.6409740448
id: 0
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:239




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:240


xxx before update is x: -22.0069789886
y: 3.76001214981
theta: 3.16101861
speed: 13.6409740448
id: 0
t: 239
xxx after update is x: -22.8848762512
y: 2.90373206139
theta: 3.17361283302
speed: 13.7553377151
id: 0
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.6666666667






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -22.8848762512
y: 2.90373206139
theta: 3.17361283302
speed: 13.7553377151
id: 0
t: 240
xxx after update is x: -22.6925182343
y: 3.10242772102
theta: 3.04025244713
speed: 13.4484624863
id: 0
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:241


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -22.6925182343
y: 3.10242772102
theta: 3.04025244713
speed: 13.4484624863
id: 0
t: 241
xxx after update is x: -23.3912811279
y: 3.21140766144
theta: 3.22081112862
speed: 13.6474018097
id: 0
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -23.3912811279
y: 3.21140766144
theta: 3.22081112862
speed: 13.6474018097
id: 0
t: 242
xxx after update is x: -24.3463802338
y: 3.56337499619
theta: 3.31544542313
speed: 14.1405248642
id: 0
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:243




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:244


xxx before update is x: -24.3463802338
y: 3.56337499619
theta: 3.31544542313
speed: 14.1405248642
id: 0
t: 243
xxx after update is x: -24.8230266571
y: 3.00126218796
theta: 3.09663486481
speed: 14.2029724121
id: 0
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:245


xxx before update is x: -24.8230266571
y: 3.00126218796
theta: 3.09663486481
speed: 14.2029724121
id: 0
t: 244
xxx after update is x: -25.8312416077
y: 2.56903839111
theta: 3.19109654427
speed: 13.836643219
id: 0
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -25.8312416077
y: 2.56903839111
theta: 3.19109654427
speed: 13.836643219
id: 0
t: 245
xxx after update is x: -26py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:243


xxx before update is x: -3.67086291313
y: -114.421798706
theta: 4.70734596252
speed: 14.1651573181
id: 1
t: 242
xxx after update is x: -3.46256685257
y: -114.679748535
theta: 4.86746311188
speed: 13.7505817413
id: 1
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.46256685257
y: -114.679748535
theta: 4.86746311188
speed: 13.7505817413
id: 1
t: 243
xxx after update is x: -2.81954646111
y: -115.432342529
theta: 4.63586425781
speed: 13.8160943985
id: 1
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:244




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:245


xxx before update is x: -2.81954646111
y: -115.432342529
theta: 4.63586425781
speed: 13.8160943985
id: 1
t: 244
xxx after update is x: -3.39332771301
y: -116.305587769
theta: 4.78454065323
speed: 13.8915214539
id: 1
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0]
222 self.state_dicts[msg.id][msg.t] is (-25.831241607666016, 2.5690383911132812, 3.191096544265747, 13.83664321899414)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:246


xxx before update is x: -3.39332771301
y: -116.305587769
theta: 4.78454065323
speed: 13.8915214539
id: 1
t: 245
xxx after update is x: -3.59324240685
y: -116.792221069
theta: 4.59646034241
speed: 13.7509937286
id: 1
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.59324240685
y: -116.792221069
theta: 4.59646034241
speed: 13.7509937286
id: 1
t: 246
xxx after update is x: -3.48610782623
y: -117.692382812
theta: 4.85481834412
speed: 13.8143358231
id: 1
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:247




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -3.48610782623
y: -117.692382812
theta: 4.85481834412
speed: 13.8143358231
id: 1
t: 247
xxx after update is x: -3.33502340317
y: -118.378967285
theta: 4.6362361908
speed: 14.1433477402
id: 1
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.33502340317
y: -118.378967285
theta: 4.6362361908
speed: 14.1433477402
id: 1
t: 248
xxx after update is x: -3.41242671013
y: -118.731765747
theta: 4.67073774338
speed: 13.9928646088
id: 1
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:249




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:250


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.0666666667






self.maneuver_requested None
xxx before update is x: -3.41242671013
y: -118.731765747
theta: 4.67073774338
speed: 13.9928646088.3802032471
y: 3.30100178719
theta: 3.14092874527
speed: 13.9100570679
id: 0
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:246




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -26.3802032471
y: 3.30100178719
theta: 3.14092874527
speed: 13.9100570679
id: 0
t: 246
xxx after update is x: -26.9507980347
y: 3.29695487022
theta: 3.14367318153
speed: 13.7605838776
id: 0
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -26.9507980347
y: 3.29695487022
theta: 3.14367318153
speed: 13.7605838776
id: 0
t: 247
xxx after update is x: -27.0713119507
y: 2.96313595772
theta: 3.08543109894
speed: 13.8195409775
id: 0
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3350234031677246, -118.37896728515625, 4.636236190795898, 14.14334774017334)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.0222222222






self.maneuver_requested left
xxx before update is x: -27.0713119507
y: 2.96313595772
theta: 3.08543109894
speed: 13.8195409775
id: 0
t: 248
xxx after update is x: -28.5799427032
y: 3.41696858406
theta: 3.10235738754
speed: 13.6054258347
id: 0
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:249


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:250


xxx before update is x: -28.5799427032
y: 3.41696858406
theta: 3.10235738754
speed: 13.6054258347
id: 0
t: 249
xxx after update is x: -29.2142620087
y: 3.26995897293
theta: 3.12302780151
speed: 14.2307519913
id: 0
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:251


xxx before update is x: -29.2142620087
y: 3.26995897293
theta: 3.12302780151
speed: 14.2307519913
id: 0
t: 250
xxx after update is x: -29.1779155731
y: 3.47964453697
theta: 3.12394881248
speed: 14.0202531815
id: 0
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -29.1779155731
y: 3.47964453697
theta: 3.12394881248
speed: 14.0202531815
id: 0
t: 251
xxx after update is x: -30.1271591187
y: 3.4025747776
theta: 3.19903039932
speed: 14.178943634
id: 0
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:252




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:253


xxx before update is x: -30.1271591187
y: 3.4025747776
theta: 3.19903039932
speed: 14.178943634
id: 0
t: 252
xxx after update is x: -30.9752464294
y: 2.69184923172
theta: 2.98785161972
speed: 14.0731544495
id: 0
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:254


xxx before update is x: -30.9752464294
y: 2.69184923172
theta: 2.98785161972
speed: 14.0731544495
id: 0
t: 253
xxx after update is x: -31.3873958588
y: 3.31477284431
theta: 3.22390031815
speed: 13.9565658569
id: 0
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:255


xxx before update is x: -31.3873958588
y: 3.31477284431
theta: 3.22390031815
speed: 13.9565658569
id: 0
t: 254
xxx after update is x: -31.671995163
y: 3.06020569801
theta: 3.07658982277
speed: 13.9021291733
id: 0
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -31.671995163
y: 3.06020569801
theta: 3.07658982277
speed: 13.9021291733
id: 0
t: 255
xxx after update is x: -32.3672332764
y: 2.9690117836
theta: 3.16709709167
speed: 13.6154661179
id: 0
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:256


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.3777777778






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -32.3672332764
y: 2.9690117836
theta: 3.16709709167
speed: 13.6154661179
id: 0
t: 256
xxx after update is x: -32.7084960938
y: 3.25031495094
theta: 2.92045140266
speed: 13.7041282654
id: 0
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:257




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -32.7084960938
y: 3.25031495094
theta: 2.92045140266
speed: 13.7041282654
id: 0
t: 257
xxx after update is x: -33.4586906433
y: 3.03045701981
theta: 3.25877714157
speed: 13.8974056244
id: 0
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:258




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -33.4586906433
y: 3.03045701981
theta: 3.25877714157
speed: 13.8974056244
id: 0
t: 258
xxx after update is x: -34.2555618286
y: 3.5783624649
theta: 3.13868451118
speed: 14.2245540619
id: 0
t: 259
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:259




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -34.2555618286
y: 3.5783624649
theta: 3.13868451118
speed: 14.2245540619
id: 0
t: 259
xxx after update is x: -34.9104003906
y: 2.98951172829
theta: 3.07025885582
speed: 13.8275222778
id: 0
t: 260
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:260




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -34.9104003906
y: 2.98951172829
theta: 3.07025885582
speed: 13.8275222778
id: 0
t: 260
xxx after update is x: -35.3236846924
y: 3.80212783813
theta: 3.0155479908
speed: 13.9018449783
id: 0
t: 261
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function,
id: 1
t: 249
xxx after update is x: -3.7182366848
y: -118.774497986
theta: 4.72144317627
speed: 13.8920040131
id: 1
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:251


xxx before update is x: -3.7182366848
y: -118.774497986
theta: 4.72144317627
speed: 13.8920040131
id: 1
t: 250
xxx after update is x: -3.12347102165
y: -120.501739502
theta: 4.89273023605
speed: 13.8420438766
id: 1
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:252


aaaaaa
aaaaaabbbbb
risk is [0.0, 0]
222 self.state_dicts[msg.id][msg.t] is (-30.127159118652344, 3.4025747776031494, 3.1990303993225098, 14.178943634033203)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:253


222 self.state_dicts[msg.id][msg.t] is (-30.97524642944336, 2.6918492317199707, 2.987851619720459, 14.07315444946289)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:254


222 self.state_dicts[msg.id][msg.t] is (-31.38739585876465, 3.314772844314575, 3.223900318145752, 13.956565856933594)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:255


222 self.state_dicts[msg.id][msg.t] is (-31.671995162963867, 3.0602056980133057, 3.076589822769165, 13.902129173278809)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:256


222 self.state_dicts[msg.id][msg.t] is (-32.36723327636719, 2.9690117835998535, 3.1670970916748047, 13.615466117858887)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:257


222 self.state_dicts[msg.id][msg.t] is (-32.70849609375, 3.250314950942993, 2.9204514026641846, 13.70412826538086)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.1555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:258


222 self.state_dicts[msg.id][msg.t] is (-33.45869064331055, 3.030457019805908, 3.258777141571045, 13.897405624389648)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:259


222 self.state_dicts[msg.id][msg.t] is (-34.25556182861328, 3.578362464904785, 3.1386845111846924, 14.224554061889648)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:260


222 self.state_dicts[msg.id][msg.t] is (-34.910400390625, 2.989511728286743, 3.070258855819702, 13.827522277832031)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:261


222 self.state_dicts[msg.id][msg.t] is (-35.32368469238281, 3.8021278381347656, 3.01554799079895, 13.90184497833252)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:262


222 self.state_dicts[msg.id][msg.t] is (-36.49593734741211, 3.167492628097534, 3.1860921382904053, 13.845888137817383)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:263


222 self.state_dicts[msg.id][msg.t] is (-36.745731353759766, 3.5039889812469 finish the n times spin:261




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -35.3236846924
y: 3.80212783813
theta: 3.0155479908
speed: 13.9018449783
id: 0
t: 261
xxx after update is x: -36.4959373474
y: 3.1674926281
theta: 3.18609213829
speed: 13.8458881378
id: 0
t: 262
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:262




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -36.4959373474
y: 3.1674926281
theta: 3.18609213829
speed: 13.8458881378
id: 0
t: 262
xxx after update is x: -36.7457313538
y: 3.50398898125
theta: 3.2027118206
speed: 14.1014661789
id: 0
t: 263
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:263




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -36.7457313538
y: 3.50398898125
theta: 3.2027118206
speed: 14.1014661789
id: 0
t: 263
xxx after update is x: -37.5498161316
y: 3.16804265976
theta: 3.16198372841
speed: 14.0091314316
id: 0
t: 264
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:264


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.7333333333






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -37.5498161316
y: 3.16804265976
theta: 3.16198372841
speed: 14.0091314316
id: 0
t: 264
xxx after update is x: -37.5326690674
y: 3.35974812508
theta: 3.03435707092
speed: 13.3333559036
id: 0
t: 265
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:265




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -37.5326690674
y: 3.35974812508
theta: 3.03435707092
speed: 13.3333559036
id: 0
t: 265
xxx after update is x: -38.8988952637
y: 3.78863668442
theta: 2.91466856003
speed: 13.3356647491
id: 0
t: 266
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:266




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -38.8988952637
y: 3.78863668442
theta: 2.91466856003
speed: 13.3356647491
id: 0
t: 266
xxx after update is x: -38.9219093323
y: 3.75476169586
theta: 3.15382957458
speed: 12.5591077805
id: 0
t: 267
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:267




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -38.9219093323
y: 3.75476169586
theta: 3.15382957458
speed: 12.5591077805
id: 0
t: 267
xxx after update is x: -39.3677864075
y: 3.21233510971
theta: 3.26302218437
speed: 12.4462432861
id: 0
t: 268
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:268




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -39.3677864075
y: 3.21233510971
theta: 3.26302218437
speed: 12.4462432861
id: 0
t: 268
xxx after update is x: -40.5752868652
y: 3.18212652206
theta: 3.19081473351
speed: 12.2966880798
id: 0
t: 269
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:269




going to the update function
s482, 3.202711820602417, 14.101466178894043)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:264


222 self.state_dicts[msg.id][msg.t] is (-37.5498161315918, 3.1680426597595215, 3.1619837284088135, 14.00913143157959)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:265


222 self.state_dicts[msg.id][msg.t] is (-37.53266906738281, 3.359748125076294, 3.0343570709228516, 13.333355903625488)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.1555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:266


222 self.state_dicts[msg.id][msg.t] is (-38.898895263671875, 3.7886366844177246, 2.914668560028076, 13.335664749145508)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:267


222 self.state_dicts[msg.id][msg.t] is (-38.92190933227539, 3.7547616958618164, 3.153829574584961, 12.559107780456543)
222 self.state_dicts[msg.id][msg.t] is (-39.3677864074707, 3.2123351097106934, 3.2630221843719482, 12.446243286132812)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:268




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:269


222 self.state_dicts[msg.id][msg.t] is (-40.575286865234375, 3.182126522064209, 3.190814733505249, 12.296688079833984)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:270


222 self.state_dicts[msg.id][msg.t] is (-40.859066009521484, 3.98826003074646, 2.9524872303009033, 12.042824745178223)
222 self.state_dicts[msg.id][msg.t] is (-41.18868637084961, 3.8872640132904053, 3.196638345718384, 11.44096565246582)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:271




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:272


222 self.state_dicts[msg.id][msg.t] is (-41.938316345214844, 2.8677005767822266, 3.1178536415100098, 11.279799461364746)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.1555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-42.03654861450195, 3.0943362712860107, 3.2628679275512695, 11.270780563354492)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:273




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:274


222 self.state_dicts[msg.id][msg.t] is (-42.44189453125, 3.3844399452209473, 3.145944833755493, 10.81479549407959)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:275


222 self.state_dicts[msg.id][msg.t] is (-43.44163131713867, 3.13860821723938, 3.0951504707336426, 10.675299644470215)
222 self.state_dicts[msg.id][msg.t] is (-43.79058837890625, 3.4237680435180664, 3.1051862239837646, 10.433485984802246)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:276




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:277


222 self.state_dicts[msg.id][msg.t] is (-44.33418273925781, 3.771315574645996, 3.21im.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -40.5752868652
y: 3.18212652206
theta: 3.19081473351
speed: 12.2966880798
id: 0
t: 269
xxx after update is x: -40.8590660095
y: 3.98826003075
theta: 2.9524872303
speed: 12.0428247452
id: 0
t: 270
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:270




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -40.8590660095
y: 3.98826003075
theta: 2.9524872303
speed: 12.0428247452
id: 0
t: 270
xxx after update is x: -41.1886863708
y: 3.88726401329
theta: 3.19663834572
speed: 11.4409656525
id: 0
t: 271
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:271


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.0444444444






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -41.1886863708
y: 3.88726401329
theta: 3.19663834572
speed: 11.4409656525
id: 0
t: 271
xxx after update is x: -41.9383163452
y: 2.86770057678
theta: 3.11785364151
speed: 11.2797994614
id: 0
t: 272
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:272




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -41.9383163452
y: 2.86770057678
theta: 3.11785364151
speed: 11.2797994614
id: 0
t: 272
xxx after update is x: -42.0365486145
y: 3.09433627129
theta: 3.26286792755
speed: 11.2707805634
id: 0
t: 273
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:273




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -42.0365486145
y: 3.09433627129
theta: 3.26286792755
speed: 11.2707805634
id: 0
t: 273
xxx after update is x: -42.4418945312
y: 3.38443994522
theta: 3.14594483376
speed: 10.8147954941
id: 0
t: 274
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:274




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -42.4418945312
y: 3.38443994522
theta: 3.14594483376
speed: 10.8147954941
id: 0
t: 274
xxx after update is x: -43.4416313171
y: 3.13860821724
theta: 3.09515047073
speed: 10.6752996445
id: 0
t: 275
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:275




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -43.4416313171
y: 3.13860821724
theta: 3.09515047073
speed: 10.6752996445
id: 0
t: 275
xxx after update is x: -43.7905883789
y: 3.42376804352
theta: 3.10518622398
speed: 10.4334859848
id: 0
t: 276
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:276




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -43.7905883789
y: 3.42376804352
theta: 3.10518622398
speed: 10.4334859848
id: 0
t: 276
xxx after update is x: -44.3341827393
y: 3.77131557465
theta: 3.21157431602
speed: 10.2466411591
id: 0
t: 277
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:277




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:15743160247803, 10.246641159057617)
222 self.state_dicts[msg.id][msg.t] is (-44.84537124633789, 2.664029598236084, 3.0377371311187744, 9.670105934143066)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:278


222 self.state_dicts[msg.id][msg.t] is (-44.914520263671875, 2.9030611515045166, 3.130800724029541, 9.167261123657227)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:279


222 self.state_dicts[msg.id][msg.t] is (-45.35469055175781, 3.266190767288208, 2.9537112712860107, 8.969465255737305)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:280


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.1555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:281


222 self.state_dicts[msg.id][msg.t] is (-46.52898406982422, 3.4896528720855713, 3.1500611305236816, 9.017126083374023)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:282


222 self.state_dicts[msg.id][msg.t] is (-46.27993392944336, 3.3300137519836426, 3.2185418605804443, 8.816235542297363)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:283


222 self.state_dicts[msg.id][msg.t] is (-46.39820861816406, 3.2027840614318848, 3.2059614658355713, 8.594427108764648)
222 self.state_dicts[msg.id][msg.t] is (-47.58760452270508, 3.265354633331299, 3.236372232437134, 8.34990119934082)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.1555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:284



xxx before update is x: -44.3341827393
y: 3.77131557465
theta: 3.21157431602
speed: 10.2466411591
id: 0
t: 277
xxx after update is x: -44.8453712463
y: 2.66402959824
theta: 3.03773713112
speed: 9.67010593414
id: 0
t: 278
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:278




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -44.8453712463
y: 2.66402959824
theta: 3.03773713112
speed: 9.67010593414
id: 0
t: 278
xxx after update is x: -44.9145202637
y: 2.9030611515
theta: 3.13080072403
speed: 9.16726112366
id: 0
t: 279
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:279


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.4






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -44.9145202637
y: 2.9030611515
theta: 3.13080072403
speed: 9.16726112366
id: 0
t: 279
xxx after update is x: -45.3546905518
y: 3.26619076729
theta: 2.95371127129
speed: 8.96946525574
id: 0
t: 280
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:280




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -45.3546905518
y: 3.26619076729
theta: 2.95371127129
speed: 8.96946525574
id: 0
t: 280
xxx after update is x: -46.5289840698
y: 3.48965287209
theta: 3.15006113052
speed: 9.01712608337
id: 0
t: 281
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:281




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -46.5289840698
y: 3.48965287209
theta: 3.15006113052
speed: 9.01712608337
id: 0
t: 281
xxx after update is x: -46.2799339294
y: 3.33001375198
theta: 3.21854186058
speed: 8.8162355423
id: 0
t: 282
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:282




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -46.2799339294
y: 3.33001375198
theta: 3.21854186058
speed: 8.8162355423
id: 0
t: 282
xxx after update is x: -46.3982086182
y: 3.20278406143
theta: 3.20596146584
speed: 8.59442710876
id: 0
t: 283
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:283




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -46.3982086182
y: 3.20278406143
theta: 3.20596146584
speed: 8.59442710876
id: 0
t: 283
xxx after update is x: -47.5876045227
y: 3.26535463333
theta: 3.23637223244
speed: 8.34990119934
id: 0
t: 284
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:284


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.6222222222






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:285


... logging to /home/lu/.ros/log/ab935248-02bb-11e9-ae37-000c291801fc/roslaunch-ubuntu-34956.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch
[1mstarted roslaunch server http://ubuntu:33797/[0m

SUMMARY
========

PARAMETERS
 * /enable_negotiator: True
 * /file_prefix: 
 * /nr_cars: 2
 * /plot: False
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /save: False

NODES
  /
    car0 (virtual_blinker/sim.py)
    car1 (virtual_blinker/sim.py)
    cloud (virtual_blinker/cloud.py)
    rviz (rviz/rviz)
    visualization (virtual_blinker/visualization.py)

auto-starting new master
[1mprocess[master]: started with pid [34966][0m
[1mROS_MASTER_URI=http://localhost:11311[0m
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch http://localhost:11311
[1msetting /run_id to ab935248-02bb-11e9-ae37-000c291801fc[0m
[1mprocess[rosout-1]: started with pid [34988][0m
started core service [/rosout]
[1mprocess[visualization-2]: started with pid [34996][0m
[1mprocess[rviz-3]: started with pid [35006][0m
[1mprocess[car0-4]: started with pid [35007][0m
[1mprocess[car1-5]: started with pid [35008][0m
[1mprocess[cloud-6]: started with pid [35009][0m
[cloud-6] killing on exit
[car1-5] killing on exit
[car0-4] killing on exit
[rviz-3] killing on exit
[visualization-2] killing on exit
[rosout-1] killing on exit
[master] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
[1mdone[0m
