sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 1
s is car_state0
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.171355962753


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:1


222 self.state_dicts[msg.id][msg.t] is (2.8680365085601807, -64.34195709228516, 1.6718528270721436, 13.709943771362305)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7f5a5a7ca2d8>


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:2


self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f5a5a7e9488>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9001)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:3




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:4


222 self.state_dicts[msg.id][msg.t] is (3.6109817028045654, -62.71308135986328, 1.6329210996627808, 13.86686897277832)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:5


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: -2.94340109825
y: 72.0258407593
theta: 4.92438983917
speed: 13.7746572495
id: 1
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: -2.94340109825
y: 72.0258407593
theta: 4.92438983917
speed: 13.7746572495
id: 1
t: 5
xxx after update is x: -3.18632984161
y: 71.6932296753
theta: 4.73048782349
speed: 14.3360404968
id: 1
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:7


xxx before update is x: -3.18632984161
y: 71.6932296753
theta: 4.73048782349
speed: 14.3360404968
id: 1
t: 6
xxx after update is x: -2.84285664558
y: 70.7658309937
theta: 4.89696550369
speed: 13.7564115524
id: 1
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.41595154303517246, 0.6933803593642214]
222 self.state_dicts[msg.id][msg.t] is (3.1852688sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 0
s is car_state1
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.170591115952


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:1


222 self.state_dicts[msg.id][msg.t] is (-2.8205063343048096, 74.26177215576172, 4.789620876312256, 13.787830352783203)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7f385c7b9e18>


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:2




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:3




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:4


self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f385c7e0a70>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (-3.0079336166381836, 71.82562255859375, 4.758086681365967, 13.839509010314941)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9000)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:5




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: 3.44782757759
y: -61.7170028687
theta: 1.69163763523
speed: 13.8902044296
id: 0
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:7


xxx before update is x: 3.44782757759
y: -61.7170028687
theta: 1.69163763523
speed: 13.8902044296
id: 0
t: 6
xxx after update is x: 3.18526887894
y: -60.1028747559
theta: 1.51297843456
speed: 13.9262113571
id: 0
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3595449637751215, 0.4029509475832313]
222 self.state_dicts[msg.id][msg.t] is (-2.8428566455841064, 70.76583099365234, 4.896965503692627, 13.7564115524292)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < sel789367676, -60.102874755859375, 1.512978434562683, 13.9262113571167)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: -2.84285664558
y: 70.7658309937
theta: 4.89696550369
speed: 13.7564115524
id: 1
t: 7
xxx after update is x: -2.92305254936
y: 69.6935577393
theta: 4.69727754593
speed: 14.102057457
id: 1
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3793652347136297, 0.9999999999999984]
222 self.state_dicts[msg.id][msg.t] is (3.2951858043670654, -60.06144332885742, 1.6121008396148682, 13.9408597946167)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: -2.92305254936
y: 69.6935577393
theta: 4.69727754593
speed: 14.102057457
id: 1
t: 8
xxx after update is x: -3.14007091522
y: 69.1883392334
theta: 4.7596950531
speed: 13.8974170685
id: 1
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: -3.14007091522
y: 69.1883392334
theta: 4.7596950531
speed: 13.8974170685
id: 1
t: 9
xxx after update is x: -3.23337650299
y: 69.0188980103
theta: 4.68354654312
speed: 13.9631958008
id: 1
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.444444444444






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:11




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: -3.23337650299
y: 69.0188980103
theta: 4.68354654312
speed: 13.9631958008
id: 1
t: 10
xxx after update is x: -3.5577018261
y: 65.9104919434
theta: 4.82322597504
speed: 14.0256719589
id: 1
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.5577018261
y: 65.9104919434
theta: 4.82322597504
speed: 14.0256719589
id: 1
t: 11
xxx after update is x: -3.4163672924
y: 66.1747512817
theta: 4.68153429031
speed: 14.0809965134
id: 1
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.34699973596125727, 0]
222 self.state_dicts[msg.id][msg.t] is (3.002723217010498, -57.7534065246582, 1.6732580661773682, 13.831316947937012)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: -3.4163672924
y: 66.1747512817
theta: 4.68153429031
speed: 14.0809965134
id: 1
t: 12
xxx after update is x: -3.6489803791
y: 65.1715087891
theta: 4.61842489243
speed: 13.6744918823
id: 1
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3651781445470813, 0]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: -3.6489803791
y: 65.17f.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: 3.18526887894
y: -60.1028747559
theta: 1.51297843456
speed: 13.9262113571
id: 0
t: 7
xxx after update is x: 3.29518580437
y: -60.0614433289
theta: 1.61210083961
speed: 13.9408597946
id: 0
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: 3.29518580437
y: -60.0614433289
theta: 1.61210083961
speed: 13.9408597946
id: 0
t: 8
xxx after update is x: 3.06703901291
y: -59.2593765259
theta: 1.56401801109
speed: 13.8729448318
id: 0
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: 3.06703901291
y: -59.2593765259
theta: 1.56401801109
speed: 13.8729448318
id: 0
t: 9
xxx after update is x: 3.11953306198
y: -59.0912628174
theta: 1.67055380344
speed: 13.7824888229
id: 0
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.4151165234959395, 0.3651813051286987]
222 self.state_dicts[msg.id][msg.t] is (-3.2333765029907227, 69.0188980102539, 4.683546543121338, 13.96319580078125)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: 3.11953306198
y: -59.0912628174
theta: 1.67055380344
speed: 13.7824888229
id: 0
t: 10
xxx after update is x: 3.14021086693
y: -58.3160743713
theta: 1.68348741531
speed: 13.8048496246
id: 0
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.33836927469707145, 0.4679961106884763]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: 3.14021086693
y: -58.3160743713
theta: 1.68348741531
speed: 13.8048496246
id: 0
t: 11
xxx after update is x: 3.00272321701
y: -57.7534065247
theta: 1.67325806618
speed: 13.8313169479
id: 0
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.533333333333






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:13




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: 3.00272321701
y: -57.7534065247
theta: 1.67325806618
speed: 13.8313169479
id: 0
t: 12
xxx after update is x: 3.67234158516
y: -53.9968070984
theta: 1.59198355675
speed: 13.9283895493
id: 0
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.67234158516
y: -53.9968070984
theta: 1.59198355675
speed: 13.9283895493
id: 0
t: 13
xxx after update is x: 3.1917257309
y: -53.8236198425
theta: 1.66827511787
speed: 13.8419361115
id: 0
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (-2.8591301441192627, 64.3874282836914, 4.611425876617432, 13.514541625976562)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
l15087891
theta: 4.61842489243
speed: 13.6744918823
id: 1
t: 13
xxx after update is x: -2.85913014412
y: 64.3874282837
theta: 4.61142587662
speed: 13.514541626
id: 1
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.191725730895996, -53.8236198425293, 1.6682751178741455, 13.841936111450195)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: -2.85913014412
y: 64.3874282837
theta: 4.61142587662
speed: 13.514541626
id: 1
t: 14
xxx after update is x: -3.32144713402
y: 63.8699874878
theta: 4.61982965469
speed: 14.2842206955
id: 1
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: -3.32144713402
y: 63.8699874878
theta: 4.61982965469
speed: 14.2842206955
id: 1
t: 15
xxx after update is x: -3.35485887527
y: 63.4731369019
theta: 4.58408212662
speed: 13.8608751297
id: 1
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.7717750577388579, 0]
222 self.state_dicts[msg.id][msg.t] is (2.860044240951538, -52.725948333740234, 1.4721182584762573, 14.03751277923584)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: -3.35485887527
y: 63.4731369019
theta: 4.58408212662
speed: 13.8608751297
id: 1
t: 16
xxx after update is x: -3.31734442711
y: 62.6104011536
theta: 4.68015384674
speed: 13.8709383011
id: 1
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3630293711098874, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1925108432769775, -52.16449737548828, 1.6334354877471924, 13.490274429321289)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: -3.31734442711
y: 62.6104011536
theta: 4.68015384674
speed: 13.8709383011
id: 1
t: 17
xxx after update is x: -3.58872175217
y: 61.8299446106
theta: 4.55237960815
speed: 13.8854045868
id: 1
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.2059734191429751, 0]
222 self.state_dicts[msg.id][msg.t] is (2.9408936500549316, -51.45968246459961, 1.7348825931549072, 14.080028533935547)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: -3.58872175217
y: 61.8299446106
theta: 4.55237960815
speed: 13.8854045868
id: 1
t: 18
xxx after update is x: -2.65726709366
y: 61.9107933044
theta: 4.81031847
speed: 13.9529399872
id: 1
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.844444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, eave the update function xxx before update is x: 3.1917257309
y: -53.8236198425
theta: 1.66827511787
speed: 13.8419361115
id: 0
t: 14
xxx after update is x: 3.23616290092
y: -53.9853286743
theta: 1.57530546188
speed: 13.8368349075
id: 0
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:15


aaaaaa
risk is [0.9878888637792781, 0.8935665679477042]
222 self.state_dicts[msg.id][msg.t] is (-3.3214471340179443, 63.86998748779297, 4.6198296546936035, 14.284220695495605)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: 3.23616290092
y: -53.9853286743
theta: 1.57530546188
speed: 13.8368349075
id: 0
t: 15
xxx after update is x: 2.86004424095
y: -52.7259483337
theta: 1.47211825848
speed: 14.0375127792
id: 0
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.37890555124407255, 0.5176048409891096]
222 self.state_dicts[msg.id][msg.t] is (-3.354858875274658, 63.47313690185547, 4.584082126617432, 13.860875129699707)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: 2.86004424095
y: -52.7259483337
theta: 1.47211825848
speed: 14.0375127792
id: 0
t: 16
xxx after update is x: 3.19251084328
y: -52.1644973755
theta: 1.63343548775
speed: 13.4902744293
id: 0
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: 3.19251084328
y: -52.1644973755
theta: 1.63343548775
speed: 13.4902744293
id: 0
t: 17
xxx after update is x: 2.94089365005
y: -51.4596824646
theta: 1.73488259315
speed: 14.0800285339
id: 0
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.4503891222718151, 0.34020614154568046]
222 self.state_dicts[msg.id][msg.t] is (-3.588721752166748, 61.8299446105957, 4.552379608154297, 13.885404586791992)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: 2.94089365005
y: -51.4596824646
theta: 1.73488259315
speed: 14.0800285339
id: 0
t: 18
xxx after update is x: 2.97833228111
y: -50.6974029541
theta: 1.60768342018
speed: 13.8024282455
id: 0
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.23616639131426131, 0.4329743276029572]
222 self.state_dicts[msg.id][msg.t] is (-2.6572670936584473, 61.91079330444336, 4.810318470001221, 13.952939987182617)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: 2.97833228111
y: -50.6974029541
theta: 1.60768342018
speed: 13.8024282455
id: 0
t: 19
xxx after update is x: 3.57841229439
y: -50.7100410461
theta: 1.53134262562
speed: 13.4967479706
id: 0
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish thefinish the n times spin:20

xxx before update is x: -2.65726709366
y: 61.9107933044
theta: 4.81031847
speed: 13.9529399872
id: 1
t: 19
xxx after update is x: -3.00505948067
y: 60.9426689148
theta: 4.64992713928
speed: 13.65620327
id: 1
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion

aaaaaa
aaaaaabbbbb
risk is [0.2727978632573957, 0]
222 self.state_dicts[msg.id][msg.t] is (3.5784122943878174, -50.71004104614258, 1.531342625617981, 13.496747970581055)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: -3.00505948067
y: 60.9426689148
theta: 4.64992713928
speed: 13.65620327
id: 1
t: 20
xxx after update is x: -3.26841855049
y: 60.3431739807
theta: 4.59966135025
speed: 13.9016723633
id: 1
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: -3.26841855049
y: 60.3431739807
theta: 4.59966135025
speed: 13.9016723633
id: 1
t: 21
xxx after update is x: -3.32738018036
y: 59.7454681396
theta: 4.69397830963
speed: 13.883140564
id: 1
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3413222933371077, 0]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: -3.32738018036
y: 59.7454681396
theta: 4.69397830963
speed: 13.883140564
id: 1
t: 22
xxx after update is x: -2.90174031258
y: 59.1152229309
theta: 4.89243412018
speed: 13.8981695175
id: 1
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.109262466430664, -48.8538703918457, 1.6603413820266724, 14.081655502319336)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: -2.90174031258
y: 59.1152229309
theta: 4.89243412018
speed: 13.8981695175
id: 1
t: 23
xxx after update is x: -2.94083929062
y: 58.6759262085
theta: 4.63976764679
speed: 14.1218919754
id: 1
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: -2.94083929062
y: 58.6759262085
theta: 4.63976764679
speed: 14.1218919754
id: 1
t: 24
xxx after update is x: -3.61590027809
y: 58.1818466187
theta: 4.68409252167
speed: 14.1125097275
id: 1
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3695140996161709, 0]
222 self.state_dicts[msg.id][msg.t] is (3.158944845199585, -47.19224166870117, 1.430208444595337, 13.917139053344727)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: -3.61590027809
y: 58.1818466187
theta: 4.68409252167
speed: 14.1125097275
id: 1
t: 25
xxx after update is x: -3.31743884087
y: 57.5488777161
theta: 4.67535877228
speed: 13.7347373962
id: 1
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
tar n times spin:21

xxx before update is x: 3.57841229439
y: -50.7100410461
theta: 1.53134262562
speed: 13.4967479706
id: 0
t: 20
xxx after update is x: 3.83810305595
y: -49.4115066528
theta: 1.61635768414
speed: 13.7213439941
id: 0
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion

maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.933333333333






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: 3.83810305595
y: -49.4115066528
theta: 1.61635768414
speed: 13.7213439941
id: 0
t: 21
xxx after update is x: 3.50787162781
y: -48.7366447449
theta: 1.42275822163
speed: 13.2784767151
id: 0
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.30368336086062714, 0.3314041074977315]
222 self.state_dicts[msg.id][msg.t] is (-3.3273801803588867, 59.74546813964844, 4.693978309631348, 13.883140563964844)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: 3.50787162781
y: -48.7366447449
theta: 1.42275822163
speed: 13.2784767151
id: 0
t: 22
xxx after update is x: 3.10926246643
y: -48.8538703918
theta: 1.66034138203
speed: 14.0816555023
id: 0
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: 3.10926246643
y: -48.8538703918
theta: 1.66034138203
speed: 14.0816555023
id: 0
t: 23
xxx after update is x: 3.00358605385
y: -47.7392959595
theta: 1.53476953506
speed: 13.7941913605
id: 0
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.41182448948474826, 0.35122761587217805]
222 self.state_dicts[msg.id][msg.t] is (-2.9408392906188965, 58.675926208496094, 4.639767646789551, 14.121891975402832)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: 3.00358605385
y: -47.7392959595
theta: 1.53476953506
speed: 13.7941913605
id: 0
t: 24
xxx after update is x: 3.1589448452
y: -47.1922416687
theta: 1.4302084446
speed: 13.9171390533
id: 0
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: 3.1589448452
y: -47.1922416687
theta: 1.4302084446
speed: 13.9171390533
id: 0
t: 25
xxx after update is x: 3.41705679893
y: -47.3910751343
theta: 1.55775570869
speed: 13.9903354645
id: 0
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3463692483737877, 0.2907351592132658]
222 self.state_dicts[msg.id][msg.t] is (-3.317438840866089, 57.54887771606445, 4.675358772277832, 13.734737396240234)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: 3.41705679893
y: -47.3910751343
theta: 1.55775570869
speed: 13.9903354645
id: 0
t: 26
xxx after update is x: 2.71120548248
y: -46.05175781getspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: -3.31743884087
y: 57.5488777161
theta: 4.67535877228
speed: 13.7347373962
id: 1
t: 26
xxx after update is x: -3.25794649124
y: 56.1458053589
theta: 4.63674211502
speed: 13.8568983078
id: 1
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.2






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: -3.25794649124
y: 56.1458053589
theta: 4.63674211502
speed: 13.8568983078
id: 1
t: 27
xxx after update is x: -3.14284014702
y: 56.4889221191
theta: 4.62944364548
speed: 14.1934528351
id: 1
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.3410716231003271, 0]
222 self.state_dicts[msg.id][msg.t] is (3.367537498474121, -45.634056091308594, 1.477300763130188, 13.619430541992188)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: -3.14284014702
y: 56.4889221191
theta: 4.62944364548
speed: 14.1934528351
id: 1
t: 28
xxx after update is x: -3.62956523895
y: 55.2407112122
theta: 4.58275222778
speed: 13.9221134186
id: 1
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: -3.62956523895
y: 55.2407112122
theta: 4.58275222778
speed: 13.9221134186
id: 1
t: 29
xxx after update is x: -3.29515647888
y: 55.0983695984
theta: 4.70623970032
speed: 13.7648706436
id: 1
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: -3.29515647888
y: 55.0983695984
theta: 4.70623970032
speed: 13.7648706436
id: 1
t: 30
xxx after update is x: -3.1076862812
y: 54.5020484924
theta: 4.73467302322
speed: 13.8165044785
id: 1
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: -3.1076862812
y: 54.5020484924
theta: 4.73467302322
speed: 13.8165044785
id: 1
t: 31
xxx after update is x: -3.00179195404
y: 53.4713249207
theta: 4.78893327713
speed: 14.0706920624
id: 1
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.42396823564766395, 0]
222 self.state_dicts[msg.id][msg.t] is (3.080420970916748, -42.63991165161133, 1.5445847511291504, 14.106172561645508)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: -3.00179195404
y: 53.4713249207
theta: 4.78893327713
speed: 14.0706920624
id: 1
t: 32
xxx after update is x: -3.3839404583
y: 53.048992157
theta: 4.66436433792
speed: 14.0865020752
id: 1
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxx25
theta: 1.60315299034
speed: 14.0027093887
id: 0
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.40675031860687577, 0.37590350616616836]
222 self.state_dicts[msg.id][msg.t] is (-3.257946491241455, 56.14580535888672, 4.636742115020752, 13.856898307800293)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: 2.71120548248
y: -46.0517578125
theta: 1.60315299034
speed: 14.0027093887
id: 0
t: 27
xxx after update is x: 3.36753749847
y: -45.6340560913
theta: 1.47730076313
speed: 13.619430542
id: 0
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: 3.36753749847
y: -45.6340560913
theta: 1.47730076313
speed: 13.619430542
id: 0
t: 28
xxx after update is x: 3.06822299957
y: -44.8693008423
theta: 1.61530435085
speed: 13.7032194138
id: 0
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.28888888889






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: 3.06822299957
y: -44.8693008423
theta: 1.61530435085
speed: 13.7032194138
id: 0
t: 29
xxx after update is x: 2.89833641052
y: -44.045425415
theta: 1.72311365604
speed: 13.8611793518
id: 0
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: 2.89833641052
y: -44.045425415
theta: 1.72311365604
speed: 13.8611793518
id: 0
t: 30
xxx after update is x: 3.64929533005
y: -43.2004585266
theta: 1.56653439999
speed: 14.2771654129
id: 0
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: 3.64929533005
y: -43.2004585266
theta: 1.56653439999
speed: 14.2771654129
id: 0
t: 31
xxx after update is x: 3.08042097092
y: -42.6399116516
theta: 1.54458475113
speed: 14.1061725616
id: 0
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3941968726222041, 0.47891538373808357]
222 self.state_dicts[msg.id][msg.t] is (-3.0017919540405273, 53.4713249206543, 4.788933277130127, 14.07069206237793)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: 3.08042097092
y: -42.6399116516
theta: 1.54458475113
speed: 14.1061725616
id: 0
t: 32
xxx after update is x: 3.30839323997
y: -42.2558860779
theta: 1.61227691174
speed: 14.2408084869
id: 0
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: 3.30839323997
y: -42.2558860779
theta: 1.61227691174
speed: 14.2408084869
id: 0
t: 33
xxx after update is x: 3.59276747704
y: -41.6426086426
thetxxxxx
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: -3.3839404583
y: 53.048992157
theta: 4.66436433792
speed: 14.0865020752
id: 1
t: 33
xxx after update is x: -3.54892468452
y: 52.2702064514
theta: 4.74611616135
speed: 13.76994133
id: 1
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: -3.54892468452
y: 52.2702064514
theta: 4.74611616135
speed: 13.76994133
id: 1
t: 34
xxx after update is x: -3.37479686737
y: 52.3646469116
theta: 4.71361303329
speed: 13.6776199341
id: 1
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.357000820963154, 0]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: -3.37479686737
y: 52.3646469116
theta: 4.71361303329
speed: 13.6776199341
id: 1
t: 35
xxx after update is x: -3.12722110748
y: 51.1177864075
theta: 4.66673374176
speed: 13.789563179
id: 1
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.6






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (3.334496259689331, -40.2397346496582, 1.6549264192581177, 13.82277774810791)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: -3.12722110748
y: 51.1177864075
theta: 4.66673374176
speed: 13.789563179
id: 1
t: 36
xxx after update is x: -2.90716362
y: 50.5541992188
theta: 4.67371702194
speed: 13.6805210114
id: 1
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: -2.90716362
y: 50.5541992188
theta: 4.67371702194
speed: 13.6805210114
id: 1
t: 37
xxx after update is x: -3.20267128944
y: 50.1013031006
theta: 4.77993631363
speed: 13.9858856201
id: 1
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.43735240798876374, 0]
222 self.state_dicts[msg.id][msg.t] is (2.6585562229156494, -39.0168342590332, 1.4856102466583252, 14.054237365722656)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: -3.20267128944
y: 50.1013031006
theta: 4.77993631363
speed: 13.9858856201
id: 1
t: 38
xxx after update is x: -3.15306615829
y: 49.333732605
theta: 4.66357326508
speed: 14.0206346512
id: 1
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: -3.15306615829
y: 49.333732605
theta: 4.66357326508
speed: 14.0206346512
id: 1
t: 39
xxx after update is x: -3.00310468674
y: 48.8620491028
theta: 4.96770048141
speed: 14.2319526672
id: 1
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.36776157649794067, 0]
222 self.state_dicts[msg.id][msg.t] is (2.9090683460235596, -38.113460540771484, 1.4848a: 1.47507190704
speed: 14.0770978928
id: 0
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3562391688388854, 0.31007099390560283]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: 3.59276747704
y: -41.6426086426
theta: 1.47507190704
speed: 14.0770978928
id: 0
t: 34
xxx after update is x: 3.07440686226
y: -40.7526283264
theta: 1.60418272018
speed: 14.0190629959
id: 0
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (-3.3747968673706055, 52.364646911621094, 4.713613033294678, 13.677619934082031)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: 3.07440686226
y: -40.7526283264
theta: 1.60418272018
speed: 14.0190629959
id: 0
t: 35
xxx after update is x: 3.33449625969
y: -40.2397346497
theta: 1.65492641926
speed: 13.8227777481
id: 0
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.36226664146811305, 0.33871513857164803]
222 self.state_dicts[msg.id][msg.t] is (-3.12722110748291, 51.1177864074707, 4.666733741760254, 13.789563179016113)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: 3.33449625969
y: -40.2397346497
theta: 1.65492641926
speed: 13.8227777481
id: 0
t: 36
xxx after update is x: 2.98585724831
y: -40.3669662476
theta: 1.67603623867
speed: 13.8550605774
id: 0
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.64444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: 2.98585724831
y: -40.3669662476
theta: 1.67603623867
speed: 13.8550605774
id: 0
t: 37
xxx after update is x: 2.65855622292
y: -39.016834259
theta: 1.48561024666
speed: 14.0542373657
id: 0
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.315746266970035, 0.34279710272773195]
222 self.state_dicts[msg.id][msg.t] is (-3.2026712894439697, 50.10130310058594, 4.77993631362915, 13.985885620117188)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: 2.65855622292
y: -39.016834259
theta: 1.48561024666
speed: 14.0542373657
id: 0
t: 38
xxx after update is x: 3.11339759827
y: -38.1888465881
theta: 1.56400465965
speed: 13.7550153732
id: 0
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: 3.11339759827
y: -38.1888465881
theta: 1.56400465965
speed: 13.7550153732
id: 0
t: 39
xxx after update is x: 2.90906834602
y: -38.1134605408
theta: 1.48481893539
speed: 14.1188793182
id: 0
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in t18935394287, 14.118879318237305)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: -3.00310468674
y: 48.8620491028
theta: 4.96770048141
speed: 14.2319526672
id: 1
t: 40
xxx after update is x: -3.3996989727
y: 47.8180923462
theta: 4.65194320679
speed: 13.6262178421
id: 1
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: -3.3996989727
y: 47.8180923462
theta: 4.65194320679
speed: 13.6262178421
id: 1
t: 41
xxx after update is x: -3.24995493889
y: 47.2326126099
theta: 4.80102109909
speed: 13.9033269882
id: 1
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3250712798268104, 0]
222 self.state_dicts[msg.id][msg.t] is (2.8546142578125, -36.66691589355469, 1.572963833808899, 13.935781478881836)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: -3.24995493889
y: 47.2326126099
theta: 4.80102109909
speed: 13.9033269882
id: 1
t: 42
xxx after update is x: -3.33818674088
y: 46.9112319946
theta: 4.66417551041
speed: 13.9290714264
id: 1
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.91111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: -3.33818674088
y: 46.9112319946
theta: 4.66417551041
speed: 13.9290714264
id: 1
t: 43
xxx after update is x: -3.38398623466
y: 45.8311042786
theta: 4.93963813782
speed: 13.779384613
id: 1
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3471118917540595, 0]
222 self.state_dicts[msg.id][msg.t] is (2.931504249572754, -35.590213775634766, 1.5558151006698608, 13.495052337646484)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: -3.38398623466
y: 45.8311042786
theta: 4.93963813782
speed: 13.779384613
id: 1
t: 44
xxx after update is x: -3.37708282471
y: 45.724281311
theta: 4.82037353516
speed: 13.7226305008
id: 1
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: -3.37708282471
y: 45.724281311
theta: 4.82037353516
speed: 13.7226305008
id: 1
t: 45
xxx after update is x: -2.44336843491
y: 44.3378791809
theta: 4.61422872543
speed: 13.9562911987
id: 1
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: -2.44336843491
y: 44.3378791809
theta: 4.61422872543
speed: 13.9562911987
id: 1
t: 46
xxx after update is x: -3.406605he sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: 2.90906834602
y: -38.1134605408
theta: 1.48481893539
speed: 14.1188793182
id: 0
t: 40
xxx after update is x: 3.55657601357
y: -37.3063583374
theta: 1.44833290577
speed: 13.5330572128
id: 0
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3017254746088478, 0.3762485116140651]
222 self.state_dicts[msg.id][msg.t] is (-3.3996989727020264, 47.818092346191406, 4.651943206787109, 13.62621784210205)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: 3.55657601357
y: -37.3063583374
theta: 1.44833290577
speed: 13.5330572128
id: 0
t: 41
xxx after update is x: 2.85461425781
y: -36.6669158936
theta: 1.57296383381
speed: 13.9357814789
id: 0
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: 2.85461425781
y: -36.6669158936
theta: 1.57296383381
speed: 13.9357814789
id: 0
t: 42
xxx after update is x: 3.90891671181
y: -36.0087547302
theta: 1.59343719482
speed: 13.4579658508
id: 0
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.41369865647885745, 0.3453264438626903]
222 self.state_dicts[msg.id][msg.t] is (-3.338186740875244, 46.911231994628906, 4.664175510406494, 13.929071426391602)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: 3.90891671181
y: -36.0087547302
theta: 1.59343719482
speed: 13.4579658508
id: 0
t: 43
xxx after update is x: 2.93150424957
y: -35.5902137756
theta: 1.55581510067
speed: 13.4950523376
id: 0
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: 2.93150424957
y: -35.5902137756
theta: 1.55581510067
speed: 13.4950523376
id: 0
t: 44
xxx after update is x: 3.36795139313
y: -35.2453308105
theta: 1.65366411209
speed: 14.0398626328
id: 0
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.0






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.3992773145184484, 0.32301615781475496]
222 self.state_dicts[msg.id][msg.t] is (-3.3770828247070312, 45.724281311035156, 4.82037353515625, 13.722630500793457)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: 3.36795139313
y: -35.2453308105
theta: 1.65366411209
speed: 14.0398626328
id: 0
t: 45
xxx after update is x: 3.34534549713
y: -34.3043441772
theta: 1.6504483223
speed: 13.7853651047
id: 0
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: 3.34534544821
y: 45.0474433899
theta: 4.71649742126
speed: 14.3057975769
id: 1
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3612191933696975, 0]
222 self.state_dicts[msg.id][msg.t] is (3.261080741882324, -33.125938415527344, 1.3840504884719849, 13.542099952697754)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: -3.4066054821
y: 45.0474433899
theta: 4.71649742126
speed: 14.3057975769
id: 1
t: 47
xxx after update is x: -3.41102910042
y: 43.3866348267
theta: 4.68149995804
speed: 14.0028657913
id: 1
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: -3.41102910042
y: 43.3866348267
theta: 4.68149995804
speed: 14.0028657913
id: 1
t: 48
xxx after update is x: -3.40487003326
y: 42.775062561
theta: 4.55564689636
speed: 13.7444515228
id: 1
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.40487003326
y: 42.775062561
theta: 4.55564689636
speed: 13.7444515228
id: 1
t: 49
xxx after update is x: -3.13185310364
y: 42.5392112732
theta: 4.65647983551
speed: 14.0584335327
id: 1
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:50




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: -3.13185310364
y: 42.5392112732
theta: 4.65647983551
speed: 14.0584335327
id: 1
t: 50
xxx after update is x: -3.10899448395
y: 41.662147522
theta: 4.64716959
speed: 13.8106679916
id: 1
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.26666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.4949684291238987, 0]
222 self.state_dicts[msg.id][msg.t] is (3.341343879699707, -30.96364974975586, 1.2937242984771729, 14.07898998260498)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: -3.10899448395
y: 41.662147522
theta: 4.64716959
speed: 13.8106679916
id: 1
t: 51
xxx after update is x: -3.26222586632
y: 41.408115387
theta: 4.67804098129
speed: 13.4686231613
id: 1
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:53


xxx before update is x: -3.26222586632
y: 41.408115387
theta: 4.67804098129
speed: 13.4686231613
id: 1
t: 52
xxx after update is x: -2.8330783844
y: 40.4084472656
theta: 4.76089477539
speed: 13.7087182999
id: 1
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: -2.8330783844
y: 40.4084472656
theta: 4.76089477539
speed: 13.7087182999
id: 1
t: 53
xxx after update is x: -3.00379896164
y: 39.8281288147
theta:9713
y: -34.3043441772
theta: 1.6504483223
speed: 13.7853651047
id: 0
t: 46
xxx after update is x: 3.26108074188
y: -33.1259384155
theta: 1.38405048847
speed: 13.5420999527
id: 0
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3492949899350727, 0.4070371695624515]
222 self.state_dicts[msg.id][msg.t] is (-3.4066054821014404, 45.04744338989258, 4.716497421264648, 14.305797576904297)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: 3.26108074188
y: -33.1259384155
theta: 1.38405048847
speed: 13.5420999527
id: 0
t: 47
xxx after update is x: 3.51151776314
y: -33.4459075928
theta: 1.55892062187
speed: 14.2510137558
id: 0
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: 3.51151776314
y: -33.4459075928
theta: 1.55892062187
speed: 14.2510137558
id: 0
t: 48
xxx after update is x: 3.08099651337
y: -32.1304244995
theta: 1.58099389076
speed: 13.5362443924
id: 0
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: 3.08099651337
y: -32.1304244995
theta: 1.58099389076
speed: 13.5362443924
id: 0
t: 49
xxx after update is x: 3.45313668251
y: -31.7739620209
theta: 1.62463474274
speed: 14.204372406
id: 0
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: 3.45313668251
y: -31.7739620209
theta: 1.62463474274
speed: 14.204372406
id: 0
t: 50
xxx after update is x: 3.3413438797
y: -30.9636497498
theta: 1.29372429848
speed: 14.0789899826
id: 0
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: 3.3413438797
y: -30.9636497498
theta: 1.29372429848
speed: 14.0789899826
id: 0
t: 51
xxx after update is x: 3.25296854973
y: -30.6757106781
theta: 1.49819588661
speed: 13.6977100372
id: 0
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.31111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:53


xxx before update is x: 3.25296854973
y: -30.6757106781
theta: 1.49819588661
speed: 13.6977100372
id: 0
t: 52
xxx after update is x: 3.33684706688
y: -29.6920585632
theta: 1.66550076008
speed: 13.8610239029
id: 0
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: 3.33684706688
y: -29.6920585632
theta: 1.66550076008
speed: 13.8610239029
id: 0
t: 53
xxx after update is x: 3.50586056709
y: -29.3627185822
theta: 1.57410991192
speed: 13.8088617325
id: 0
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3426327019734666, 0.394601124888869]
222 sel 4.6804485321
speed: 13.9124155045
id: 1
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.428600951407191, 0]
222 self.state_dicts[msg.id][msg.t] is (3.5058605670928955, -29.36271858215332, 1.5741099119186401, 13.80886173248291)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: -3.00379896164
y: 39.8281288147
theta: 4.6804485321
speed: 13.9124155045
id: 1
t: 54
xxx after update is x: -3.53903532028
y: 39.2260627747
theta: 4.5985455513
speed: 13.8604373932
id: 1
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: -3.53903532028
y: 39.2260627747
theta: 4.5985455513
speed: 13.8604373932
id: 1
t: 55
xxx after update is x: -4.30528306961
y: 39.0340881348
theta: 4.76373052597
speed: 13.9513597488
id: 1
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: -4.30528306961
y: 39.0340881348
theta: 4.76373052597
speed: 13.9513597488
id: 1
t: 56
xxx after update is x: -3.19365048409
y: 38.0823097229
theta: 4.75854206085
speed: 13.5487232208
id: 1
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.36262084262218813, 0]
222 self.state_dicts[msg.id][msg.t] is (3.559727430343628, -27.26816177368164, 1.612245798110962, 13.872687339782715)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: -3.19365048409
y: 38.0823097229
theta: 4.75854206085
speed: 13.5487232208
id: 1
t: 57
xxx after update is x: -3.04920458794
y: 36.7085494995
theta: 4.80751371384
speed: 13.6916713715
id: 1
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.57777777778






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: -3.04920458794
y: 36.7085494995
theta: 4.80751371384
speed: 13.6916713715
id: 1
t: 58
xxx after update is x: -3.11588573456
y: 37.4295768738
theta: 4.78724718094
speed: 14.0559015274
id: 1
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: -3.11588573456
y: 37.4295768738
theta: 4.78724718094
speed: 14.0559015274
id: 1
t: 59
xxx after update is x: -3.48802733421
y: 36.4400177002
theta: 4.51411151886
speed: 14.0784740448
id: 1
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3818939355552383, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3056905269622803, -25.537689208984375, 1.5941027402877808, 13.109378814697266)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update ff.state_dicts[msg.id][msg.t] is (-3.0037989616394043, 39.828128814697266, 4.680448532104492, 13.912415504455566)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: 3.50586056709
y: -29.3627185822
theta: 1.57410991192
speed: 13.8088617325
id: 0
t: 54
xxx after update is x: 3.01094818115
y: -28.9891357422
theta: 1.60753178596
speed: 13.8054037094
id: 0
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: 3.01094818115
y: -28.9891357422
theta: 1.60753178596
speed: 13.8054037094
id: 0
t: 55
xxx after update is x: 3.21215605736
y: -28.3650379181
theta: 1.60383856297
speed: 14.1238470078
id: 0
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: 3.21215605736
y: -28.3650379181
theta: 1.60383856297
speed: 14.1238470078
id: 0
t: 56
xxx after update is x: 3.55972743034
y: -27.2681617737
theta: 1.61224579811
speed: 13.8726873398
id: 0
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.31341181555801234, 0.26415344665773155]
222 self.state_dicts[msg.id][msg.t] is (-3.193650484085083, 38.08230972290039, 4.758542060852051, 13.548723220825195)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: 3.55972743034
y: -27.2681617737
theta: 1.61224579811
speed: 13.8726873398
id: 0
t: 57
xxx after update is x: 3.42981338501
y: -27.150560379
theta: 1.65975272655
speed: 13.6765766144
id: 0
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: 3.42981338501
y: -27.150560379
theta: 1.65975272655
speed: 13.6765766144
id: 0
t: 58
xxx after update is x: 3.62398529053
y: -26.5419902802
theta: 1.56933450699
speed: 13.7155971527
id: 0
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: 3.62398529053
y: -26.5419902802
theta: 1.56933450699
speed: 13.7155971527
id: 0
t: 59
xxx after update is x: 3.30569052696
y: -25.537689209
theta: 1.59410274029
speed: 13.1093788147
id: 0
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.66666666667






self.maneuver_requested None
aaaaaa
risk is [0.31123837815606903, 0.44016903613958186]
222 self.state_dicts[msg.id][msg.t] is (-3.488027334213257, 36.44001770019531, 4.514111518859863, 14.078474044799805)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: 3.30569052696
y: -25.537689209
theta: 1.59410274unction 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: -3.48802733421
y: 36.4400177002
theta: 4.51411151886
speed: 14.0784740448
id: 1
t: 60
xxx after update is x: -3.60523152351
y: 35.1448020935
theta: 4.80389642715
speed: 13.737490654
id: 1
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: -3.60523152351
y: 35.1448020935
theta: 4.80389642715
speed: 13.737490654
id: 1
t: 61
xxx after update is x: -3.1768682003
y: 34.6712532043
theta: 4.67548942566
speed: 13.702955246
id: 1
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: -3.1768682003
y: 34.6712532043
theta: 4.67548942566
speed: 13.702955246
id: 1
t: 62
xxx after update is x: -3.2956597805
y: 34.1230506897
theta: 4.82134723663
speed: 13.7098178864
id: 1
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.2850148740533597, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2929322719573975, -23.6143856048584, 1.6678956747055054, 13.332573890686035)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: -3.2956597805
y: 34.1230506897
theta: 4.82134723663
speed: 13.7098178864
id: 1
t: 63
xxx after update is x: -3.55482578278
y: 33.8941307068
theta: 4.75884199142
speed: 13.8583402634
id: 1
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: -3.55482578278
y: 33.8941307068
theta: 4.75884199142
speed: 13.8583402634
id: 1
t: 64
xxx after update is x: -3.26184368134
y: 33.3504905701
theta: 4.60023212433
speed: 14.1368932724
id: 1
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.45196448261313527, 0]
222 self.state_dicts[msg.id][msg.t] is (2.974871873855591, -22.85089683532715, 1.3725699186325073, 12.362319946289062)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: -3.26184368134
y: 33.3504905701
theta: 4.60023212433
speed: 14.1368932724
id: 1
t: 65
xxx after update is x: -2.79971146584
y: 32.6506958008
theta: 4.95101690292
speed: 13.7610292435
id: 1
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.93333333333






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: -2.79971146584
y: 32.6506958008
theta: 4.95101690292
speed: 13.7610292435
id: 1
t: 66
xxx after update is x: -3.01616740227
y: 31.6153144836
theta: 4.77843236923
speed: 13.8375825882
id: 1
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed029
speed: 13.1093788147
id: 0
t: 60
xxx after update is x: 4.12262392044
y: -25.4871578217
theta: 1.69220280647
speed: 13.2517671585
id: 0
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: 4.12262392044
y: -25.4871578217
theta: 1.69220280647
speed: 13.2517671585
id: 0
t: 61
xxx after update is x: 2.89764046669
y: -24.1917133331
theta: 1.58323419094
speed: 12.8802175522
id: 0
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.34164969514881055, 0.3707804863398548]
222 self.state_dicts[msg.id][msg.t] is (-3.176868200302124, 34.6712532043457, 4.67548942565918, 13.70295524597168)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: 2.89764046669
y: -24.1917133331
theta: 1.58323419094
speed: 12.8802175522
id: 0
t: 62
xxx after update is x: 3.29293227196
y: -23.6143856049
theta: 1.66789567471
speed: 13.3325738907
id: 0
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: 3.29293227196
y: -23.6143856049
theta: 1.66789567471
speed: 13.3325738907
id: 0
t: 63
xxx after update is x: 3.14783096313
y: -23.4048938751
theta: 1.4895080328
speed: 12.6536035538
id: 0
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.2452405176711748, 0.35872327903259354]
222 self.state_dicts[msg.id][msg.t] is (-3.554825782775879, 33.89413070678711, 4.7588419914245605, 13.8583402633667)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: 3.14783096313
y: -23.4048938751
theta: 1.4895080328
speed: 12.6536035538
id: 0
t: 64
xxx after update is x: 2.97487187386
y: -22.8508968353
theta: 1.37256991863
speed: 12.3623199463
id: 0
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: 2.97487187386
y: -22.8508968353
theta: 1.37256991863
speed: 12.3623199463
id: 0
t: 65
xxx after update is x: 3.35673213005
y: -22.2168884277
theta: 1.72274816036
speed: 12.1263465881
id: 0
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.3877020827264761, 0.3453226330631898]
222 self.state_dicts[msg.id][msg.t] is (-2.7997114658355713, 32.65069580078125, 4.951016902923584, 13.761029243469238)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: 3.35673213005
y: -22.2168884277
theta: 1.72274816036
speed: 12.1263465881
id: 0
t: 66
xxx after update is x: 3.82628512383
y: -21.8427143097
theta: 1.55484867096
speed: 11.6512365341
id: 0
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: 3.8262851238 < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: -3.01616740227
y: 31.6153144836
theta: 4.77843236923
speed: 13.8375825882
id: 1
t: 67
xxx after update is x: -4.14313077927
y: 31.4200115204
theta: 4.68017244339
speed: 13.9864912033
id: 1
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: -4.14313077927
y: 31.4200115204
theta: 4.68017244339
speed: 13.9864912033
id: 1
t: 68
xxx after update is x: -2.82485151291
y: 30.8332805634
theta: 4.61779403687
speed: 13.6247167587
id: 1
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4551515442854818, 0]
222 self.state_dicts[msg.id][msg.t] is (3.314765214920044, -20.912574768066406, 1.693122386932373, 11.603836059570312)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: -2.82485151291
y: 30.8332805634
theta: 4.61779403687
speed: 13.6247167587
id: 1
t: 69
xxx after update is x: -3.04430055618
y: 30.4112873077
theta: 4.75290155411
speed: 14.2492265701
id: 1
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: -3.04430055618
y: 30.4112873077
theta: 4.75290155411
speed: 14.2492265701
id: 1
t: 70
xxx after update is x: -3.20721006393
y: 28.9420394897
theta: 4.55327558517
speed: 13.9833955765
id: 1
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: -3.20721006393
y: 28.9420394897
theta: 4.55327558517
speed: 13.9833955765
id: 1
t: 71
xxx after update is x: -3.19942450523
y: 28.8945293427
theta: 4.66310834885
speed: 13.9614105225
id: 1
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.2




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.2
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.11111111111', 'Sender': '0', 'Time': '3.11111111111', 'IntendedCourse': 'left', 'Position': ['3.6044373512268066', ' -19.936264038085938', ' 1.4998409748077393'], 'TagID': '0', 'Type': 'GET', 'Velocity': '10'}
car 1 received GET,0,3.11111111111,(3.6044373512268066, -19.936264038085938, 1.4998409748077393),10,1,3.11111111111,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.138271604938
sender travel direction is:  north
sender earliest entering time is:  1.81874563946
sender last entering time is:  2.23332066135
sender last leaving time is:  4.42909598347
my entering time is:  1.68223327316
my leaving time is:  4.30619494139
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.2
self.communication_details == 0
sending DENY,1,3.2,(-2.7997114658355713, 32.65069580078125, 4.951016902923584),13,1,0,0 to car 0 from car 1
maneuv3
y: -21.8427143097
theta: 1.55484867096
speed: 11.6512365341
id: 0
t: 67
xxx after update is x: 3.8438873291
y: -20.4393939972
theta: 1.34466016293
speed: 11.8365917206
id: 0
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.02222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: 3.8438873291
y: -20.4393939972
theta: 1.34466016293
speed: 11.8365917206
id: 0
t: 68
xxx after update is x: 3.31476521492
y: -20.9125747681
theta: 1.69312238693
speed: 11.6038360596
id: 0
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: 3.31476521492
y: -20.9125747681
theta: 1.69312238693
speed: 11.6038360596
id: 0
t: 69
xxx after update is x: 3.60443735123
y: -19.9362640381
theta: 1.49984097481
speed: 10.9718618393
id: 0
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.347784737630017, 0.3986046180045581]
222 self.state_dicts[msg.id][msg.t] is (-3.0443005561828613, 30.411287307739258, 4.752901554107666, 14.249226570129395)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:
initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$


maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 1
current clock is 3.11111111111
!!!!after check statue the self.tag is [3.111111111111111, 0, 'left']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.11111111111

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.1555555555555554, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.11111111111,(3.6044373512268066, -19.936264038085938, 1.4998409748077393),10,1,3.11111111111,0,left
!!!!change state to get
GET,0,3.11111111111,(3.6044373512268066, -19.936264038085938, 1.4998409748077393),10,1,3.11111111111,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.11111111111
self.communication_details == 0
sending GET,0,3.11111111111,(3.6044373512268066, -19.936264038085938, 1.4998409748077393),10,1,3.11111111111,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
 self.man_init:
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: 3.60443735123
y: -19.9362640381
theta: 1.49984097481
speed: 10.9718618393
id: 0
t: 70
xxx after update is x: 3.07066607475
y: -19.8057022095
theta: 1.55891692638
speed: 11.0601530075
id: 0
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.15555555556




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.15555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '3.2', 'Position': ['(-2.7997114658355713', ' 32.65069580078125', ' 4.951016902923584)'], 'Type': 'DENY'}
car 0 received DENY,1,3.2,(-2.7997114658355713, 32.65069580078125, 4.951016902923584),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.1555555555555554, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.1555555555555554, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




finish try maneuver


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: 3.07066607475
y: -19.8057022095
theta: 1.55891692638
speed: 11.0601530075
id: 0
t: 71
xxx after update is x: 3.68053555489
y: -19.0971984863
theta: 1.39112019539
speed: 10.704076767
id: 0
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: 3.68053555489
y: -19.0971984863
theta: 1.39112019539
speed: 10.704076767
id: 0
t: 72
xxx after update is x: 3.43390989304
y: -18.2105865479
theta: 1.60522437096
speed: 10.7039556503
id: 0
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: 3.43390989304
y: -18.2105865479
theta: 1.60522437096
speed: 10.7039556503
id: 0
t: 73
xxx after update is x: 3.34109401703
y: -17.9065628052
theta: 1.46117663383
speed: 10.7085962296
id: 0
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: 3.34109401703
y: -17.9065628052
theta: 1.46117663383
speed: 10.7085962296
id: 0
t: 74
xxx after update is x: 3.37204217911
y: -17.8916091919
theta: 1.60471558571
speed: 9.86839580536
id: 0
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: 3.37204217911
y: -17.8916091919
theta: 1.60471558571
speed: 9.86839580536
id: 0
t: 75
xxx after update is x: 3.43537020683
y: -17.164522171
theta: 1.54742872715
speed: 9.97645759583
id: 0
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.37777777778






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.3777777777777778, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 3.37777777778
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.37777777778
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,3.37777777778,(3.4353702068328857, -17.164522171020508, 1.5474287271499634),9,1,3.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 3.37777777778
self.communication_details == 0
sending RELEASE,0,3.37777777778,(3.4353702068328857, -17.164522171020508, 1.5474287271499634),9,1,3.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the updater_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: -3.19942450523
y: 28.8945293427
theta: 4.66310834885
speed: 13.9614105225
id: 1
t: 72
xxx after update is x: -3.9418296814
y: 27.5247077942
theta: 4.79641485214
speed: 14.1945495605
id: 1
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.45084775275663197, 0]
222 self.state_dicts[msg.id][msg.t] is (3.4339098930358887, -18.210586547851562, 1.605224370956421, 10.70395565032959)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: -3.9418296814
y: 27.5247077942
theta: 4.79641485214
speed: 14.1945495605
id: 1
t: 73
xxx after update is x: -3.00576996803
y: 27.265953064
theta: 4.79744052887
speed: 14.1217689514
id: 1
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: -3.00576996803
y: 27.265953064
theta: 4.79744052887
speed: 14.1217689514
id: 1
t: 74
xxx after update is x: -2.87607836723
y: 26.9865016937
theta: 4.70127058029
speed: 13.829003334
id: 1
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.33333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: -2.87607836723
y: 26.9865016937
theta: 4.70127058029
speed: 13.829003334
id: 1
t: 75
xxx after update is x: -2.97406077385
y: 26.695772171
theta: 4.77460670471
speed: 14.3485450745
id: 1
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -2.97406077385
y: 26.695772171
theta: 4.77460670471
speed: 14.3485450745
id: 1
t: 76
xxx after update is x: -3.21232056618
y: 22.9765872955
theta: 4.67422866821
speed: 13.7941007614
id: 1
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.42222222222




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.42222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '9', 'Sender': '0', 'TagID': '1', 'Time': '3.37777777778', 'Position': ['(3.4353702068328857', ' -17.164522171020508', ' 1.5474287271499634)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,3.37777777778,(3.4353702068328857, -17.164522171020508, 1.5474287271499634),9,1,3.11111111111,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




leave the update function 
in spin function, finish the n times spin:77




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.21232056618
y: 22.9765872955
theta: 4.67422866821
speed: 13.7941007614
id: 1
t: 77
xxx after update is x: -2.96763253212
y: 23.5993766785
theta: 4.88822126389
speed: 13.7800836563
id: 1
t: 78
maneuver_negotiatir.py finish the updatee_agent_message

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:77




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:78


xxx before update is x: 3.43537020683
y: -17.164522171
theta: 1.54742872715
speed: 9.97645759583
id: 0
t: 76
xxx after update is x: 3.43388962746
y: -15.7486715317
theta: 1.50264310837
speed: 9.03785037994
id: 0
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.43388962746
y: -15.7486715317
theta: 1.50264310837
speed: 9.03785037994
id: 0
t: 77
xxx after update is x: 4.11203241348
y: -15.997171402
theta: 1.58282411098
speed: 9.06902313232
id: 0
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion

maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: 4.11203241348
y: -15.997171402
theta: 1.58282411098
speed: 9.06902313232
id: 0
t: 78
xxx after update is x: 2.94132852554
y: -15.0085029602
theta: 1.58139944077
speed: 8.75560665131
id: 0
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:80




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:81


aaaaaazzzzz
risk is [0.1625732765895317, 0.41166429981849956]
xxx before update is x: 2.94132852554
y: -15.0085029602
theta: 1.58139944077
speed: 8.75560665131
id: 0
t: 79
xxx after update is x: 3.13760638237
y: -13.2324285507
theta: 1.68820226192
speed: 7.50316762924
id: 0
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.13760638237
y: -13.2324285507
theta: 1.68820226192
speed: 7.50316762924
id: 0
t: 80
xxx after update is x: 2.79315257072
y: -13.0389375687
theta: 1.69214737415
speed: 7.44390583038
id: 0
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: 2.79315257072
y: -13.0389375687
theta: 1.69214737415
speed: 7.44390583038
id: 0
t: 81
xxx after update is x: 3.24225473404
y: -12.8600654602
theta: 1.37513399124
speed: 7.21350049973
id: 0
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.64444444444

maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.64444444444
membership is [3.511111111111111, True, ['1']]





self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:83




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:84



maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[ agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:78




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: -2.96763253212
y: 23.5993766785
theta: 4.88822126389
speed: 13.7800836563
id: 1
t: 78
xxx after update is x: -3.20979261398
y: 23.0499763489
theta: 4.53880786896
speed: 14.0280914307
id: 1
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:
initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.51111111111






self.maneuver_requested None
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 1
current clock is 3.51111111111
!!!!after check statue the self.tag is [3.511111111111111, 1, 'straight']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.51111111111

maneuver_negotiatir.py get membership, in the get_MR function, start
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. sfinish
membership is [3.511111111111111, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
Empty
self.agents_to_ask is []
message is :GET,1,3.51111111111,(-3.2097926139831543, 23.049976348876953, 4.5388078689575195),14,1,3.51111111111,1,straight
!!!!change state to get
finish try maneuver
leave the update function 
in spin function, finish the n times spin:80




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: -3.20979261398
y: 23.0499763489
theta: 4.53880786896
speed: 14.0280914307
id: 1
t: 79
xxx after update is x: -2.99525427818
y: 19.339925766
theta: 4.79800081253
speed: 14.0142431259
id: 1
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.99525427818
y: 19.339925766
theta: 4.79800081253
speed: 14.0142431259
id: 1
t: 80
xxx after update is x: -2.95613646507
y: 18.5161647797
theta: 4.86674404144
speed: 13.4839744568
id: 1
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.5637787187708571, 0]
222 self.state_dicts[msg.id][msg.t] is (2.7931525707244873, -13.03893756866455, 1.6921473741531372, 7.443905830383301)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.6






self.maneuver_requested straight
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.511111111111111, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 3.6
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.51111111111
self.TMan is 5
Empty
self.agents_to_ask is []
stopped retry timer
deny not in message
maneuver_negotiatir.py in the domaneuver function - start
Received -->>: 
current clock is 3.6




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.6
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneu1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.64444444444,(3.2422547340393066, -12.860065460205078, 1.375133991241455),7,1,3.11111111111,0,left
!!!!change state to get
GET,0,3.64444444444,(3.2422547340393066, -12.860065460205078, 1.375133991241455),7,1,3.11111111111,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.64444444444
self.communication_details == 0
sending GET,0,3.64444444444,(3.2422547340393066, -12.860065460205078, 1.375133991241455),7,1,3.11111111111,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish
finish try maneuver
xxx before update is x: 3.24225473404
y: -12.8600654602
theta: 1.37513399124
speed: 7.21350049973
id: 0
t: 82
xxx after update is x: 3.48261284828
y: -10.2626791
theta: 1.57953238487
speed: 5.18785619736
id: 0
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.48261284828
y: -10.2626791
theta: 1.57953238487
speed: 5.18785619736
id: 0
t: 83
xxx after update is x: 3.57429742813
y: -10.2326021194
theta: 1.60124146938
speed: 4.96231985092
id: 0
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.73333333333




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.73333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '3.6', 'Position': ['(-2.956136465072632', ' 18.516164779663086', ' 4.866744041442871)'], 'Type': 'DENY'}
car 0 received DENY,1,3.6,(-2.956136465072632, 18.516164779663086, 4.866744041442871),13,1,3.51111111111,1 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.6, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.6, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.57429742813
y: -10.2326021194
theta: 1.60124146938
speed: 4.96231985092
id: 0
t: 84
xxx after update is x: 3.61435770988
y: -9.57050895691
theta: 1.64152884483
speed: 4.77659606934
id: 0
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:85




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:86




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:87




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:88


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.77777777778






self.maneuver_requested xxx before update is x: 3.61435770988
y: -9.57050895691
theta: 1.64152884483
speed: 4.77659606934
id: 0
t: 85
xxx after update is x: 3.79589629173
y: -8.9608001709
theta: 1.69507598877
speed: 4.0727314949
id: 0
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.79589629173
y: -8.9608001709
theta: 1.69507598877
speed: 4.0727314949
id: 0
t: 86
xxx after update is x: 3.45625352859
y: -9.25038909912
theta: 1.7524ver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.11111111111', 'Sender': '0', 'Time': '3.64444444444', 'IntendedCourse': 'left', 'Position': ['3.2422547340393066', ' -12.860065460205078', ' 1.375133991241455'], 'TagID': '0', 'Type': 'GET', 'Velocity': '7'}
car 1 received GET,0,3.64444444444,(3.2422547340393066, -12.860065460205078, 1.375133991241455),7,1,3.11111111111,0,left from  car0
status: 5
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.161975308642
sender travel direction is:  north
sender earliest entering time is:  1.07066911166
sender last entering time is:  2.16197530864
sender last leaving time is:  4.53527356507
my entering time is:  0.958694728333
my leaving time is:  2.83541414802
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.6
self.communication_details == 0
sending DENY,1,3.6,(-2.956136465072632, 18.516164779663086, 4.866744041442871),13,1,3.51111111111,1 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




added car with id 1 to grantlist. current grantlist:  {1: [8.244444444444444, 'straight']}
Doing maneuver
maneuver_negotiatir.py finish the do maneuver function
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:82




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:83


aaaaaa
aaaaaabbbbb
risk is [0.13552657224888212, 0]
222 self.state_dicts[msg.id][msg.t] is (3.4826128482818604, -10.262679100036621, 1.5795323848724365, 5.187856197357178)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
aaaaaa
aaaaaabbbbb
risk is [0.8391246049217336, 0]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.5742974281311035, -10.2326021194458, 1.6012414693832397, 4.962319850921631)
222 self.state_dicts[msg.id][msg.t] is (3.6143577098846436, -9.57050895690918, 1.641528844833374, 4.7765960693359375)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.6






self.maneuver_requested straight


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:84




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: -2.95613646507
y: 18.5161647797
theta: 4.86674404144
speed: 13.4839744568
id: 1
t: 81
xxx after update is x: -3.22774219513
y: 14.3310184479
theta: 4.78436040878
speed: 13.9831390381
id: 1
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.22774219513
y: 14.3310184479
theta: 4.78436040878
speed: 13.9831390381
id: 1
t: 82
xxx after update is x: -3.11965250969
y: 9.82580852509
theta: 4.66651964188
speed: 11.2892513275
id: 1
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.795896291732788, -8.960800170898438, 1.6950759887695312, 4.0727314949035645)
222 self.state_dicts[msg.id][msg.t] is (3.4562535285949707, -9.250389099121094, 1.7524219751358032, 3.5897064208984375)
222 self.state_dicts[msg.id][msg.t] is (3.2179980278015137, -8.829367637634277, 1.4843336343765259, 3.2297143936157227)
maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: -3.11965250969
y: 9.82580852509
theta: 4.66651964188
speed: 11.289252197514
speed: 3.5897064209
id: 0
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.45625352859
y: -9.25038909912
theta: 1.75242197514
speed: 3.5897064209
id: 0
t: 87
xxx after update is x: 3.2179980278
y: -8.82936763763
theta: 1.48433363438
speed: 3.22971439362
id: 0
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.6, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 3.77777777778
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.6
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,3.77777777778,(3.6143577098846436, -9.57050895690918, 1.641528844833374),4,1,3.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 3.91111111111
self.communication_details == 0
sending RELEASE,0,3.77777777778,(3.6143577098846436, -9.57050895690918, 1.641528844833374),4,1,3.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
leave the update function 
in spin function, finish the n times spin:89




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:90


xxx before update is x: 3.2179980278
y: -8.82936763763
theta: 1.48433363438
speed: 3.22971439362
id: 0
t: 88
xxx after update is x: 2.96725440025
y: -7.64712095261
theta: 1.52725756168
speed: 2.461332798
id: 0
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 2.96725440025
y: -7.64712095261
theta: 1.52725756168
speed: 2.461332798
id: 0
t: 89
xxx after update is x: 3.54465937614
y: -7.93300247192
theta: 1.6298520565
speed: 2.16084361076
id: 0
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.54465937614
y: -7.93300247192
theta: 1.6298520565
speed: 2.16084361076
id: 0
t: 90
xxx after update is x: 3.93017220497
y: -7.65334320068
theta: 1.5922716856
speed: 2.18474841118
id: 0
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:91




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:92


xxx before update is x: 3.93017220497
y: -7.65334320068
theta: 1.5922716856
speed: 2.18474841118
id: 0
t: 91
xxx after update is x: 3.56364297867
y: -8.0687084198
theta: 1.53868770599
speed: 1.77745985985
id: 0
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:93




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:94




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:95




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:96




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man13275
id: 1
t: 83Received -->>: 
current clock is 3.68888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.68888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '4', 'Sender': '0', 'TagID': '1', 'Time': '3.77777777778', 'Position': ['(3.6143577098846436', ' -9.57050895690918', ' 1.641528844833374)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,3.77777777778,(3.6143577098846436, -9.57050895690918, 1.641528844833374),4,1,3.11111111111,0 from  car0
status: 5




maneuver_negotiatir.py in the message processing function, it's a long code, finish1





xxx after update is x: -2.7744383812
y: 7.60390424728
theta: 4.67643451691
speed: 9.12422370911
id: 1
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.7744383812
y: 7.60390424728
theta: 4.67643451691
speed: 9.12422370911
id: 1
t: 84
xxx after update is x: -3.55772328377
y: 8.38907909393
theta: 4.71388292313
speed: 9.39633750916
id: 1
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (2.967254400253296, -7.647120952606201, 1.5272575616836548, 2.4613327980041504)
222 self.state_dicts[msg.id][msg.t] is (3.544659376144409, -7.933002471923828, 1.629852056503296, 2.16084361076355)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: -3.55772328377
y: 8.38907909393
theta: 4.71388292313
speed: 9.39633750916
id: 1
t: 85
xxx after update is x: -3.34604740143
y: 7.2580537796
theta: 4.65177297592
speed: 9.50819396973
id: 1
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.9301722049713135, -7.653343200683594, 1.5922716856002808, 2.184748411178589)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: -3.34604740143
y: 7.2580537796
theta: 4.65177297592
speed: 9.50819396973
id: 1
t: 86
xxx after update is x: -3.00794744492
y: 6.5481877327
theta: 4.63690376282
speed: 9.76595020294
id: 1
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.563642978668213, -8.068708419799805, 1.5386877059936523, 1.7774598598480225)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:88




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:89




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:90




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:91




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:92


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.86666666667
xxx before update is x: -3.00794744492
y: 6.5481877327
theta: 4.63690376282
speed: 9.76595020294
id: 1
t: 87
xxx after update is x: -2.6872549057
y: 5.31064319611
theta: 4.74220323563
speed: 11.4377946854
id: 1
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.6872549057
y: 5.31064319611
theta: 4.74220323_init:
leave the update function 
in spin function, finish the n times spin:97


maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 4.08888888889

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.8222222222222224, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.08888888889,(3.563642978668213, -8.068708419799805, 1.5386877059936523),1,1,3.11111111111,0,left
!!!!change state to get
GET,0,4.08888888889,(3.563642978668213, -8.068708419799805, 1.5386877059936523),1,1,3.11111111111,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 4.08888888889
self.communication_details == 0
sending GET,0,4.08888888889,(3.563642978668213, -8.068708419799805, 1.5386877059936523),1,1,3.11111111111,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
xxx before update is x: 3.56364297867
y: -8.0687084198
theta: 1.53868770599
speed: 1.77745985985
id: 0
t: 92
xxx after update is x: 3.04546546936
y: -7.26955127716
theta: 1.67024850845
speed: 1.17871677876
id: 0
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.04546546936
y: -7.26955127716
theta: 1.67024850845
speed: 1.17871677876
id: 0
t: 93
xxx after update is x: 3.20010256767
y: -8.00396251678
theta: 1.59727823734
speed: 1.06460809708
id: 0
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.20010256767
y: -8.00396251678
theta: 1.59727823734
speed: 1.06460809708
id: 0
t: 94
xxx after update is x: 2.95977187157
y: -7.11501407623
theta: 1.5917263031
speed: 0.979230761528
id: 0
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 2.95977187157
y: -7.11501407623
theta: 1.5917263031
speed: 0.979230761528
id: 0
t: 95
xxx after update is x: 3.41359496117
y: -8.16372394562
theta: 1.57031977177
speed: 0.588179171085
id: 0
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.41359496117
y: -8.16372394562
theta: 1.57031977177
speed: 0.588179171085
id: 0
t: 96
xxx after update is x: 3.16465997696
y: -8.20863437653
theta: 1.56108105183
speed: 0.245412796736
id: 0
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.31111111111






self.maneuver_requested Received -->>: 
current clock is 4.31111111111




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 4.31111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '9', 'Sender': '1', 'TagID': '1', 'Time': '4.08888888889', 'Position': ['(-3.0079474449157715', ' 6.548187732696533', ' 4.636903762817383)'], 'Type': 'DENY'}
car 0 received DENY,1,4.08888888889,(-3.0079474449157715, 6.548187732696533, 4.636903762817383),9,1,3.51111111111,1 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
leftmembership is [3.8222222222222224, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.8222222222222224, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it'563
speed: 11.4377946854
id: 1
t: 88
xxx after update is x: -3.2998714447
y: 4.85067415237
theta: 4.68939971924
speed: 11.1134338379
id: 1
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.2998714447
y: 4.85067415237
theta: 4.68939971924
speed: 11.1134338379
id: 1
t: 89
xxx after update is x: -2.94140338898
y: 5.47124195099
theta: 4.71418094635
speed: 11.0480928421
id: 1
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.94140338898
y: 5.47124195099
theta: 4.71418094635
speed: 11.0480928421
id: 1
t: 90
xxx after update is x: -3.18113279343
y: 5.45103931427
theta: 4.77250051498
speed: 11.0650720596
id: 1
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.18113279343
y: 5.45103931427
theta: 4.77250051498
speed: 11.0650720596
id: 1
t: 91
xxx after update is x: -2.77210760117
y: 4.50407505035
theta: 4.74895095825
speed: 11.6706209183
id: 1
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.08888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.08888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.11111111111', 'Sender': '0', 'Time': '4.08888888889', 'IntendedCourse': 'left', 'Position': ['3.563642978668213', ' -8.068708419799805', ' 1.5386877059936523'], 'TagID': '0', 'Type': 'GET', 'Velocity': '1'}
car 1 received GET,0,4.08888888889,(3.563642978668213, -8.068708419799805, 1.5386877059936523),1,1,3.11111111111,0,left from  car0
status: 5
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.181728395062
sender travel direction is:  north
sender earliest entering time is:  0.481266888217
sender last entering time is:  2.18172839506
sender last leaving time is:  4.55502665149
my entering time is:  0.181728395062
my leaving time is:  1.08357735424
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 4.08888888889
self.communication_details == 0
sending DENY,1,4.08888888889,(-3.0079474449157715, 6.548187732696533, 4.636903762817383),9,1,3.51111111111,1 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




222 self.state_dicts[msg.id][msg.t] is (3.0454654693603516, -7.2695512771606445, 1.6702485084533691, 1.178716778755188)
222 self.state_dicts[msg.id][msg.t] is (3.2001025676727295, -8.003962516784668, 1.5972782373428345, 1.064608097076416)
222 self.state_dicts[msg.id][msg.t] is (2.9597718715667725, -7.11501407623291, 1.591726303100586, 0.9792307615280151)
222 self.state_dicts[msg.id][msg.t] is (3.413594961166382, -8.163723945617676, 1.5703197717666626, 0.5881791710853577)
222 self.state_dicts[msg.id][msg.t] is (3.1646599769592285, -8.208634376525879, 1.561081051826477, 0.24541279673576355)






self.maneuver_requested straight


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:93


maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: -2.77210760117
y: 4.50407505035
theta: 4.74895095825
speed: 11.6706209183
id: 1
t: 92
xxx after update is x: -2.96193742752
y: 4.14216327667
theta: 4.69081306458
speed: 12.6127347946
id: 1
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxs a long code, finish0





maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.8222222222222224, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.31111111111
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.82222222222
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,4.31111111111,(3.1646599769592285, -8.208634376525879, 1.561081051826477),0,1,3.11111111111,0
maneuver_negotiatir.py start the update_agent_message
current clock is 4.31111111111
self.communication_details == 0
sending RELEASE,0,4.31111111111,(3.1646599769592285, -8.208634376525879, 1.561081051826477),0,1,3.11111111111,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
finish try maneuver
xxx before update is x: 3.16465997696
y: -8.20863437653
theta: 1.56108105183
speed: 0.245412796736
id: 0
t: 97
xxx after update is x: 3.22008657455
y: -7.12428474426
theta: 1.49574506283
speed: -0.142284467816
id: 0
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:98


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.22008657455
y: -7.12428474426
theta: 1.49574506283
speed: -0.142284467816
id: 0
t: 98
xxx after update is x: 3.48299741745
y: -7.6607003212
theta: 1.45563459396
speed: -0.252024114132
id: 0
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:99




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:100




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: 3.48299741745
y: -7.6607003212
theta: 1.45563459396
speed: -0.252024114132
id: 0
t: 99
xxx after update is x: 3.05094265938
y: -7.44665718079
theta: 1.59632480145
speed: -0.352993488312
id: 0
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.05094265938
y: -7.44665718079
theta: 1.59632480145
speed: -0.352993488312
id: 0
t: 100
xxx after update is x: 3.77432274818
y: -7.32203912735
theta: 1.51376974583
speed: -0.164822205901
id: 0
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 4.48888888889

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.177777777777778, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.48888888889,(3.774322748184204, -7.3220391273498535, 1.5137697458267212),0,1,3.11111111111,0,left
!!!!change state to get
GET,0,4.48888888889,(3.774322748184204, -7.3220391273498535, 1.5137697458267212),0,1,3.11111111111,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 4.48888888889
self.communication_details == 0
sending GET,0,4.48888888889,(3.774322748184204, -7.3220391273498535, 1.5137697458267212),0,1,3.11111111111,0,left to car 1 from cax
 self.man_init:
leave the update function 
in spin function, finish the n times spin:94


Received -->>: 
current clock is 4.13333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.13333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '4.31111111111', 'Position': ['(3.1646599769592285', ' -8.208634376525879', ' 1.561081051826477)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.31111111111,(3.1646599769592285, -8.208634376525879, 1.561081051826477),0,1,3.11111111111,0 from  car0
status: 5




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




xxx before update is x: -2.96193742752
y: 4.14216327667
theta: 4.69081306458
speed: 12.6127347946
id: 1
t: 93
xxx after update is x: -3.64269113541
y: 3.41933608055
theta: 4.63367176056
speed: 12.7776432037
id: 1
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.2200865745544434, -7.124284744262695, 1.495745062828064, -0.14228446781635284)
222 self.state_dicts[msg.id][msg.t] is (3.482997417449951, -7.66070032119751, 1.455634593963623, -0.2520241141319275)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:95




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: -3.64269113541
y: 3.41933608055
theta: 4.63367176056
speed: 12.7776432037
id: 1
t: 94
xxx after update is x: -3.3329398632
y: 2.17614722252
theta: 4.55246591568
speed: 11.2332525253
id: 1
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.3329398632
y: 2.17614722252
theta: 4.55246591568
speed: 11.2332525253
id: 1
t: 95
xxx after update is x: -2.94904637337
y: 2.16473984718
theta: 4.59730529785
speed: 11.3706111908
id: 1
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.0509426593780518, -7.446657180786133, 1.5963248014450073, -0.3529934883117676)
222 self.state_dicts[msg.id][msg.t] is (3.774322748184204, -7.3220391273498535, 1.5137697458267212, -0.16482220590114594)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.26666666667






self.maneuver_requested straight


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:97




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:98


Received -->>: 
current clock is 4.26666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.26666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.11111111111', 'Sender': '0', 'Time': '4.48888888889', 'IntendedCourse': 'left', 'Position': ['3.774322748184204', ' -7.3220391273498535', ' 1.5137697458267212'], 'TagID': '0', 'Type': 'GET', 'Velocity': '0'}
car 1 received GET,0,4.48888888889,(3.774322748184204, -7.3220391273498535, 1.5137697458267212),0,1,3.11111111111,0,left from  car0
status: 5
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.19950617284
maneuver_negotiatir.py sender travel direction is r 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.48888888889






self.maneuver_requested Received -->>: 
current clock is 4.48888888889




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 4.48888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '11', 'Sender': '1', 'TagID': '1', 'Time': '4.26666666667', 'Position': ['(-2.9490463733673096', ' 2.1647398471832275', ' 4.5973052978515625)'], 'Type': 'DENY'}
car 0 received DENY,1,4.26666666667,(-2.9490463733673096, 2.1647398471832275, 4.5973052978515625),11,1,3.51111111111,1 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
leftmembership is [4.266666666666667, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [4.266666666666667, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




222 self.state_dicts[msg.id][msg.t] is (-2.636449098587036, -8.716272354125977, 4.698138236999512, 1.0436086654663086)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
finish try maneuver

maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.488888888888889, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.48888888889
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.48888888889
self.TMan is 5
Empty
self.agents_to_ask is []
stopped retry timer
!!!!change state to TRYGET
xxx before update is x: 3.77432274818
y: -7.32203912735
theta: 1.51376974583
speed: -0.164822205901
id: 0
t: 101
xxx after update is x: 3.50082683563
y: -7.08842372894
theta: 1.43018746376
speed: -0.121757365763
id: 0
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:102




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.50082683563
y: -7.08842372894
theta: 1.43018746376
speed: -0.121757365763
id: 0
t: 102
xxx after update is x: 3.4144077301
y: -7.46140813828
theta: 1.55350267887
speed: 0.0328702256083
id: 0
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:103


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: 3.4144077301
y: -7.46140813828
theta: 1.55350267887
speed: 0.0328702256083
id: 0
t: 103
xxx after update is x: 3.16379213333
y: -7.99520111084
theta: 1.45532596111
speed: 0.0473137572408
id: 0
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:105


xxx before update is x: 3.16379213333
y: -7.99520111084
theta: 1.45532596111
speed: 0.0473137572408
id: 0
t: none
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 4.26666666667
self.communication_details == 0
sending DENY,1,4.26666666667,(-2.9490463733673096, 2.1647398471832275, 4.5973052978515625),11,1,3.51111111111,1 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




xxx before update is x: -2.94904637337
y: 2.16473984718
theta: 4.59730529785
speed: 11.3706111908
id: 1
t: 96
xxx after update is x: -3.85365247726
y: -7.84616565704
theta: 4.6014919281
speed: 3.68184494972
id: 1
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.85365247726
y: -7.84616565704
theta: 4.6014919281
speed: 3.68184494972
id: 1
t: 97
xxx after update is x: -2.72575616837
y: -7.65189504623
theta: 4.895362854
speed: 3.04150867462
id: 1
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:99




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: -2.72575616837
y: -7.65189504623
theta: 4.895362854
speed: 3.04150867462
id: 1
t: 98
xxx after update is x: -3.08189153671
y: -9.16556739807
theta: 4.61831760406
speed: 1.82088553905
id: 1
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.08189153671
y: -9.16556739807
theta: 4.61831760406
speed: 1.82088553905
id: 1
t: 99
xxx after update is x: -2.42208409309
y: -8.40746879578
theta: 4.56390523911
speed: 1.76807069778
id: 1
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: -2.42208409309
y: -8.40746879578
theta: 4.56390523911
speed: 1.76807069778
id: 1
t: 100
xxx after update is x: -2.63644909859
y: -8.71627235413
theta: 4.698138237
speed: 1.04360866547
id: 1
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.500826835632324, -7.088423728942871, 1.430187463760376, -0.12175736576318741)
222 self.state_dicts[msg.id][msg.t] is (3.414407730102539, -7.4614081382751465, 1.5535026788711548, 0.032870225608348846)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -2.63644909859
y: -8.71627235413
theta: 4.698138237
speed: 1.04360866547
id: 1
t: 101
xxx after update is x: -2.82011651993
y: -9.03311347961
theta: 4.86396551132
speed: 0.669025719166
id: 1
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:102


222 self.state_dicts[msg.id][msg.t] is (3.163792133331299, -7.995201110839844, 1.455325961112976, 0.04731375724077225)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -2.82011651993
y: -9.03311347961
theta: 4.86396551132
speed: 0.669025719166
id: 1
t: 102
xxx after update is x: -3.37138652802
y: -8.96625423431
theta: 4.6221075058
speed: 0.0785922706127
id: 1
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:103


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.57777777778






self.maneuver_requested straight
222 self.state_dicts[msg.id][msg.t] is (3.4055233001708984, -7.66206693649292, 1.6067962646484375, 0.27409034967422485)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: -3.37138652802
y: -8.96625423431
theta: 4.6221075058
speed: 0.0785922706127
id: 1
t: 103
xxx after update is x: -2.61388134956
y: -8.8087387085
theta: 4.82041501999
speed: 0.0128044309095
id: 1
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:104


222 self.state_dicts[msg.id][msg.t] is (3.0872607231140137, -7.653695106506348, 1.4850066900253296, -0.17805658280849457)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.61388134956
y: -8.8087387085
theta: 4.82041501999
speed: 0.0128044309095
id: 1
t: 104
xxx after update is x: -3.09653687477
y: -8.893866539
theta: 4.63965702057
speed: -0.0102527355775
id: 1
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:105


222 self.state_dicts[msg.id][msg.t] is (3.452819347381592, -7.331405162811279, 1.6698421239852905, 0.12371639907360077)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: -3.09653687477
y: -8.893866539
theta: 4.63965702057
speed: -0.0102527355775
id: 1
t: 105
xxx after update is x: -3.24089717865
y: -8.83276939392
theta: 4.72098636627
speed: 0.147994235158
id: 1
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.6675658226013184, -7.531764507293701, 1.519292950630188, -0.001812380040064454)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.24089717865
y: -8.83276939392
theta: 4.72098636627
speed: 0.147994235158
id: 1
t: 106
xxx after update is x: -2.95064496994
y: -8.82646560669
theta: 4.62129020691
speed: -0.175976157188
id: 1
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:107


222 self.state_dicts[msg.id][msg.t] is (2.8650355339050293, -7.175197601318359, 1.6087230443954468, 0.18954207003116608)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.95064496994
y: -8.82646560669
theta: 4.62129020691
speed: -0.175976157188
id: 1
t: 107
xxx after update is x: -2.71931004524
y: -9.2720413208
theta: 4.58998346329
speed: -0.155241161585
id: 1
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:108




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.71931004524
y: -9.2720413208
theta: 4.58998346329
speed: -0.155241161585
id: 1
t: 108
xxx after update is x: -3.7049677372
y: -8.7523021698
theta: 4.58481550217
speed: 0.064229272306
id: 1
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:109




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.7049677372
y: -8.7523021698
theta: 4.58481550217
speed: 0.064229272306
id: 1
t: 109
xxx after update is x: -3.55021333694
y: -8.92272472382
theta: 4.72351121902
speed: 0.0863314568996
id: 1
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:110




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man104
xxx after update is x: 3.40552330017
y: -7.66206693649
theta: 1.60679626465
speed: 0.274090349674
id: 0
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: 3.40552330017
y: -7.66206693649
theta: 1.60679626465
speed: 0.274090349674
id: 0
t: 105
xxx after update is x: 3.08726072311
y: -7.65369510651
theta: 1.48500669003
speed: -0.178056582808
id: 0
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: 3.08726072311
y: -7.65369510651
theta: 1.48500669003
speed: -0.178056582808
id: 0
t: 106
xxx after update is x: 3.45281934738
y: -7.33140516281
theta: 1.66984212399
speed: 0.123716399074
id: 0
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: 3.45281934738
y: -7.33140516281
theta: 1.66984212399
speed: 0.123716399074
id: 0
t: 107
xxx after update is x: 3.6675658226
y: -7.53176450729
theta: 1.51929295063
speed: -0.00181238004006
id: 0
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: 3.6675658226
y: -7.53176450729
theta: 1.51929295063
speed: -0.00181238004006
id: 0
t: 108
xxx after update is x: 2.86503553391
y: -7.17519760132
theta: 1.6087230444
speed: 0.189542070031
id: 0
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaazzzzz


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:110




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:111




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:112


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.84444444444
risk is [1.2738278386260416e-41, 0.4895999999999979]





self.maneuver_requested left
xxx before update is x: 2.86503553391
y: -7.17519760132
theta: 1.6087230444
speed: 0.189542070031
id: 0
t: 109
xxx after update is x: 2.81508803368
y: -6.98820209503
theta: 1.52132952213
speed: -0.0226765684783
id: 0
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 2.81508803368
y: -6.98820209503
theta: 1.52132952213
speed: -0.0226765684783
id: 0
t: 110
xxx after update is x: 3.35810041428
y: -7.29803514481
theta: 1.53558146954
speed: 0.259005755186
id: 0
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.35810041428
y: -7.29803514481
theta: 1.53558146954
speed: 0.259005755186
id: 0
t: 111
xxx after update is x: 3.00245857239
y: -7.28604793549
theta: 1.56445503235
speed: 0.17159640789
id: 0
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:113


xxx before update is x: 3.00245857239
y: -7._init:
xxx before update is x: -3.55021333694
y: -8.92272472382
theta: 4.72351121902
speed: 0.0863314568996
id: 1
t: 110
xxx after update is x: -3.80392098427
y: -8.32267379761
theta: 4.5635933876
speed: -0.0797468572855
id: 1
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:111


222 self.state_dicts[msg.id][msg.t] is (3.358100414276123, -7.298035144805908, 1.5355814695358276, 0.25900575518608093)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.93333333333






self.maneuver_requested straight


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
leave the update function 
in spin function, finish the n times spin:112




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:113




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: -3.80392098427
y: -8.32267379761
theta: 4.5635933876
speed: -0.0797468572855
id: 1
t: 111
xxx after update is x: -2.52573013306
y: -8.87302112579
theta: 4.64807653427
speed: 0.272325098515
id: 1
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.52573013306
y: -8.87302112579
theta: 4.64807653427
speed: 0.272325098515
id: 1
t: 112
xxx after update is x: -3.82150697708
y: -8.69144535065
theta: 4.67533302307
speed: 1.33259987831
id: 1
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.82150697708
y: -8.69144535065
theta: 4.67533302307
speed: 1.33259987831
id: 1
t: 113
xxx after update is x: -3.1954805851
y: -8.61096763611
theta: 4.68532848358
speed: 1.25269877911
id: 1
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [7.733207017314534e-14, 0.473599999999998]
222 self.state_dicts[msg.id][msg.t] is (3.3098080158233643, -7.606685161590576, 1.6264392137527466, 0.1872999668121338)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:115




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: -3.1954805851
y: -8.61096763611
theta: 4.68532848358
speed: 1.25269877911
id: 1
t: 114
xxx after update is x: -3.01698493958
y: -9.17289638519
theta: 4.55485725403
speed: 1.54535245895
id: 1
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.01698493958
y: -9.17289638519
theta: 4.55485725403
speed: 1.54535245895
id: 1
t: 115
xxx after update is x: -2.88315582275
y: -9.00588989258
theta: 4.85492801666
speed: 2.36484503746
id: 1
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: -2.88315582275
y: -9.00588989258
theta: 4.85492801666
speed: 2.36484503746
id: 1
t: 116
xxx after update is x: -2.90011668205
y: -8.89367485046
theta: 4.67476415634
speed: 2.19263315201
id: 1
t: 117
maneuver_negotiati28604793549
theta: 1.56445503235
speed: 0.17159640789
id: 0
t: 112
xxx after update is x: 3.63242650032
y: -7.44026708603
theta: 1.61706280708
speed: -0.187106058002
id: 0
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion

maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: 3.63242650032
y: -7.44026708603
theta: 1.61706280708
speed: -0.187106058002
id: 0
t: 113
xxx after update is x: 3.30980801582
y: -7.60668516159
theta: 1.62643921375
speed: 0.187299966812
id: 0
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:115


xxx before update is x: 3.30980801582
y: -7.60668516159
theta: 1.62643921375
speed: 0.187299966812
id: 0
t: 114
xxx after update is x: 3.32062578201
y: -7.16002845764
theta: 1.62476229668
speed: -0.332773655653
id: 0
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.32062578201
y: -7.16002845764
theta: 1.62476229668
speed: -0.332773655653
id: 0
t: 115
xxx after update is x: 3.28315782547
y: -7.10946083069
theta: 1.66299545765
speed: -0.229737892747
id: 0
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:116




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.28315782547
y: -7.10946083069
theta: 1.66299545765
speed: -0.229737892747
id: 0
t: 116
xxx after update is x: 2.89159250259
y: -7.39791917801
theta: 1.54597330093
speed: 0.159092828631
id: 0
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:117




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.89159250259
y: -7.39791917801
theta: 1.54597330093
speed: 0.159092828631
id: 0
t: 117
xxx after update is x: 3.17256808281
y: -8.08438014984
theta: 1.61576926708
speed: 0.2437967062
id: 0
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:118




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.17256808281
y: -8.08438014984
theta: 1.61576926708
speed: 0.2437967062
id: 0
t: 118
xxx after update is x: 3.26210045815
y: -7.8325715065
theta: 1.56591713428
speed: 0.103051424026
id: 0
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:119




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.26210045815
y: -7.8325715065
theta: 1.56591713428
speed: 0.103051424026
id: 0
t: 119
xxx after update is x: 2.82068705559
y: -6.86017608643
theta: 1.64112317562
speed: -0.224279999733
id: 0
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:120


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.33333333333






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.82068705559
y: -6.86017608643
theta: 1.64112317562
speed: -0.224279999733
id: 0
t: 120
xxx after update is x: 3.16198587418
y: -7.31427192688
theta: 1.66869950294
speed: -0.103358864784
id: 0
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:121




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.16198587418
y: -7.31427192688
theta: 1.66869950294
speed: -0.103358864784
id: 0
t: 121
xxx after update is x: 3.55023312569
y: -7.13987159729
theta: 1.65739703178
speed: 0.372047305107
id: 0
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:122




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.55023312569
y: -7.13987159729
theta: 1.65739703178
speed: 0.372047305107
id: 0
t: 122
xxx after update is x: 3.69429016113
y: -7.48874378204
theta: 1.39028823376
speed: -0.0447029881179
id: 0
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:123




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.69429016113
y: -7.48874378204
theta: 1.39028823376
speed: -0.0447029881179
id: 0
t: 123
xxx after update is x: 3.03763318062
y: -7.31609630585
theta: 1.53385484219
speed: -0.275928795338
id: 0
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:124




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.03763318062
y: -7.31609630585
theta: 1.53385484219
speed: -0.275928795338
id: 0
t: 124
xxx after update is x: 3.42296290398
y: -7.59860086441
theta: 1.71025800705
speed: 0.05978724733
id: 0
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:125




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.42296290398
y: -7.59860086441
theta: 1.71025800705
speed: 0.05978724733
id: 0
t: 125
xxx after update is x: 3.37846589088
y: -7.05220603943
theta: 1.65603578091
speed: -0.0542579740286
id: 0
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:126




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.37846589088
y: -7.05220603943
theta: 1.65603578091
speed: -0.0542579740286
id: 0
t: 126
xxx after update is x: 3.55273604393
y: -7.19316005707
theta: 1.79576385021
speed: 0.0193439107388
id: 0
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:127




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.55273604393
y: -7.19316005707
theta: 1.79576385021
speed: 0.0193439107388
id: 0
t: 127
xxx after update is x: 3.49379968643
y: -7.93697690964
theta: 1.46627402306
speed: -0.308380693197
id: 0
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:128


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.68888888889






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx beforer.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.5031067876031476, 0]
222 self.state_dicts[msg.id][msg.t] is (2.891592502593994, -7.397919178009033, 1.545973300933838, 0.15909282863140106)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.2






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:118




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: -2.90011668205
y: -8.89367485046
theta: 4.67476415634
speed: 2.19263315201
id: 1
t: 117
xxx after update is x: -2.70241427422
y: -8.69917869568
theta: 4.58345746994
speed: 2.57311367989
id: 1
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.70241427422
y: -8.69917869568
theta: 4.58345746994
speed: 2.57311367989
id: 1
t: 118
xxx after update is x: -3.66227173805
y: -9.38354587555
theta: 4.82234859467
speed: 4.12267351151
id: 1
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.8128881396251926, 0]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.2621004581451416, -7.832571506500244, 1.5659171342849731, 0.10305142402648926)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
************normalize weight**********************
leave the update function 
in spin function, finish the n times spin:120




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:121


xxx before update is x: -3.66227173805
y: -9.38354587555
theta: 4.82234859467
speed: 4.12267351151
id: 1
t: 119
xxx after update is x: -3.51118445396
y: -9.78176116943
theta: 4.52438640594
speed: 3.32139515877
id: 1
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.51118445396
y: -9.78176116943
theta: 4.52438640594
speed: 3.32139515877
id: 1
t: 120
xxx after update is x: -3.398198843
y: -9.75111198425
theta: 4.72959899902
speed: 4.19551467896
id: 1
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.398198843
y: -9.75111198425
theta: 4.72959899902
speed: 4.19551467896
id: 1
t: 121
xxx after update is x: -3.09714269638
y: -10.5529699326
theta: 4.6481013298
speed: 4.20994663239
id: 1
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:122


aaaaaa
aaaaaabbbbb
risk is [0.8519539027872665, 0.5071999999999981]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.5502331256866455, -7.139871597290039, 1.6573970317840576, 0.3720473051071167)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.42222222222






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
leave the update function 
in spin function, finish the n times spin:123

xxx before update is x: -3.09714269638
y: -10.5529699326
theta: 4.6481013298
speed: 4.20994663239
id: 1
t: 122
xxx after update is x: -3.14994239807
y: -10.4003190994
theta: 4.50782489777
speed: 4.09898471832
id: 1
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.14994239807
y: -10.4003190994
theta: 4.50782489777
speed: 4.09898471832
id: 1
t: 123
xxx after update is x: -3.07297134399
y: -10.7238759995
theta: 4.71957111359
speed: 4.78487539291
id: 1
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:124




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.07297134399
y: -10.7238759995
theta: 4.71957111359
speed: 4.78487539291
id: 1
t: 124
xxx after update is x: -2.5772767067
y: -10.5540103912
theta: 4.7225394249
speed: 4.80112695694
id: 1
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:125


aaaaaa
aaaaaabbbbb
risk is [0.36327455626989735, 0.502399999999998]
222 self.state_dicts[msg.id][msg.t] is (3.4229629039764404, -7.5986008644104, 1.7102580070495605, 0.05978724732995033)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
removed car with id 1 from grantlist. currentgrantlist: {}


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:126




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: -2.5772767067
y: -10.5540103912
theta: 4.7225394249
speed: 4.80112695694
id: 1
t: 125
xxx after update is x: -3.07641553879
y: -10.4327096939
theta: 4.79278039932
speed: 4.61798715591
id: 1
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.07641553879
y: -10.4327096939
theta: 4.79278039932
speed: 4.61798715591
id: 1
t: 126
xxx after update is x: -3.21682310104
y: -11.2198982239
theta: 4.86361646652
speed: 6.00829362869
id: 1
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.69431767511969, 0.3357785690420887]
222 self.state_dicts[msg.id][msg.t] is (3.5527360439300537, -7.193160057067871, 1.7957638502120972, 0.019343910738825798)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:128




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:129


xxx before update is x: -3.21682310104
y: -11.2198982239
theta: 4.86361646652
speed: 6.00829362869
id: 1
t: 127
xxx after update is x: -3.04901528358
y: -11.8496980667
theta: 4.73633384705
speed: 6.07993173599
id: 1
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.04901528358
y: -11.8496980667
theta: 4.73633384705
speed: 6.07993173599
id: 1
t: 128
xxx after update is x: -3.17160701752
y: -12.4171600342
theta: 4.89239025116
speed: 6.89120578766
id: 1
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.789651469897088, 0]
222 self.state_dicts[msg.id][msg.t] is (3.052140235900879, -7.541797637939453, 1.6220974922180176, 0. update is x: 3.49379968643
y: -7.93697690964
theta: 1.46627402306
speed: -0.308380693197
id: 0
t: 128
xxx after update is x: 3.0521402359
y: -7.54179763794
theta: 1.62209749222
speed: 0.251143693924
id: 0
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:129




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: 3.0521402359
y: -7.54179763794
theta: 1.62209749222
speed: 0.251143693924
id: 0
t: 129
xxx after update is x: 3.22273492813
y: -8.06883907318
theta: 1.72400009632
speed: 0.174330636859
id: 0
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.22273492813
y: -8.06883907318
theta: 1.72400009632
speed: 0.174330636859
id: 0
t: 130
xxx after update is x: 2.68316030502
y: -7.2210521698
theta: 1.54968512058
speed: -0.0326443761587
id: 0
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:131




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.68316030502
y: -7.2210521698
theta: 1.54968512058
speed: -0.0326443761587
id: 0
t: 131
xxx after update is x: 3.08889222145
y: -7.56644439697
theta: 1.59256362915
speed: -0.108740955591
id: 0
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:132




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.08889222145
y: -7.56644439697
theta: 1.59256362915
speed: -0.108740955591
id: 0
t: 132
xxx after update is x: 3.54838514328
y: -7.68295907974
theta: 1.58512747288
speed: -0.0356760025024
id: 0
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:133




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.54838514328
y: -7.68295907974
theta: 1.58512747288
speed: -0.0356760025024
id: 0
t: 133
xxx after update is x: 3.39945435524
y: -7.29358720779
theta: 1.6239593029
speed: -0.213342756033
id: 0
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:134




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.39945435524
y: -7.29358720779
theta: 1.6239593029
speed: -0.213342756033
id: 0
t: 134
xxx after update is x: 3.32246375084
y: -7.37282276154
theta: 1.4937517643
speed: 0.0347751639783
id: 0
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:135


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.0






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.32246375084
y: -7.37282276154
theta: 1.4937517643
speed: 0.0347751639783
id: 0
t: 135
xxx after update is x: 3.68324255943
y: -7.23321866989
theta: 1.75808703899
speed: 0.256827652454
id: 0
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:136




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
x2511436939239502)

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: -3.17160701752
y: -12.4171600342
theta: 4.89239025116
speed: 6.89120578766
id: 1
t: 129
xxx after update is x: -3.46699118614
y: -12.5822620392
theta: 4.66193437576
speed: 6.6537771225
id: 1
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion

if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.77777777778






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:131




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: -3.46699118614
y: -12.5822620392
theta: 4.66193437576
speed: 6.6537771225
id: 1
t: 130
xxx after update is x: -2.98014855385
y: -12.4723157883
theta: 4.71877622604
speed: 7.14856243134
id: 1
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.98014855385
y: -12.4723157883
theta: 4.71877622604
speed: 7.14856243134
id: 1
t: 131
xxx after update is x: -3.08227014542
y: -12.660867691
theta: 4.60906028748
speed: 7.60879468918
id: 1
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.6881763600565846, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0888922214508057, -7.566444396972656, 1.5925636291503906, -0.10874095559120178)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:133




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:134




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:135


xxx before update is x: -3.08227014542
y: -12.660867691
theta: 4.60906028748
speed: 7.60879468918
id: 1
t: 132
xxx after update is x: -3.40859079361
y: -13.6674432755
theta: 4.47419548035
speed: 7.98249721527
id: 1
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.40859079361
y: -13.6674432755
theta: 4.47419548035
speed: 7.98249721527
id: 1
t: 133
xxx after update is x: -3.86556816101
y: -13.8739490509
theta: 4.47909641266
speed: 8.90310764313
id: 1
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.86556816101
y: -13.8739490509
theta: 4.47909641266
speed: 8.90310764313
id: 1
t: 134
xxx after update is x: -3.48671388626
y: -13.9955892563
theta: 4.77336025238
speed: 8.77190113068
id: 1
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.8559110802281985, 0]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.3224637508392334, -7.3728227615356445, 1.4937517642974854, 0.03477516397833824)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current cxx before update is x: 3.68324255943
y: -7.23321866989
theta: 1.75808703899
speed: 0.256827652454
id: 0
t: 136
xxx after update is x: 2.96489834785
y: -7.37852716446
theta: 1.37597894669
speed: -0.226534828544
id: 0
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:137




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.96489834785
y: -7.37852716446
theta: 1.37597894669
speed: -0.226534828544
id: 0
t: 137
xxx after update is x: 2.94059157372
y: -7.81938266754
theta: 1.76944983006
speed: -0.0956240072846
id: 0
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:138




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.94059157372
y: -7.81938266754
theta: 1.76944983006
speed: -0.0956240072846
id: 0
t: 138
xxx after update is x: 2.95703983307
y: -7.30041456223
theta: 1.38091623783
speed: 0.371062576771
id: 0
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:139




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.95703983307
y: -7.30041456223
theta: 1.38091623783
speed: 0.371062576771
id: 0
t: 139
xxx after update is x: 3.0231654644
y: -7.04503297806
theta: 1.4968059063
speed: 0.520237445831
id: 0
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:140




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.0231654644
y: -7.04503297806
theta: 1.4968059063
speed: 0.520237445831
id: 0
t: 140
xxx after update is x: 3.36993479729
y: -7.8157582283
theta: 1.40041041374
speed: 0.235322162509
id: 0
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:141




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.36993479729
y: -7.8157582283
theta: 1.40041041374
speed: 0.235322162509
id: 0
t: 141
xxx after update is x: 2.93280792236
y: -7.59331464767
theta: 1.58190178871
speed: -0.0898564755917
id: 0
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:142




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.93280792236
y: -7.59331464767
theta: 1.58190178871
speed: -0.0898564755917
id: 0
t: 142
xxx after update is x: 3.76238369942
y: -7.73989725113
theta: 1.60546684265
speed: -0.380519241095
id: 0
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:143


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.35555555556






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.76238369942
y: -7.73989725113
theta: 1.60546684265
speed: -0.380519241095
id: 0
t: 143
xxx after update is x: 3.20865225792
y: -7.59695768356
theta: 1.58387100697
speed: 0.0338173396885
id: 0
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:144




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.20865225792
y: -7.59695768356
theta: 1.58387100697
speed: 0.0338173396885
id: 0
t: 144
xxx after update is x: 3.68116569519
y: -7.40931844711
theta: 1.46032130718
speed: -0.0639385581017
id: 0
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:145




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.68116569519
y: -7.40931844711
theta: 1.46032130718
speed: -0.0639385581017
id: 0
t: 145
xxx after update is x: 3.19997429848
y: -7.42976617813
theta: 1.65775573254
speed: -0.281581073999
id: 0
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:146




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.19997429848
y: -7.42976617813
theta: 1.65775573254
speed: -0.281581073999
id: 0
t: 146
xxx after update is x: 3.0318031311
y: -7.26007413864
theta: 1.46401453018
speed: 0.241586431861
id: 0
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:147




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: 3.0318031311
y: -7.26007413864
theta: 1.46401453018
speed: 0.241586431861
id: 0
t: 147
xxx after update is x: 2.93097496033
y: -7.47141742706
theta: 1.50866496563
speed: -0.0627870261669
id: 0
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.93097496033
y: -7.47141742706
theta: 1.50866496563
speed: -0.0627870261669
id: 0
t: 148
xxx after update is x: 3.28329396248
y: -7.6513094902
theta: 1.53746342659
speed: -0.0595311112702
id: 0
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:149




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.28329396248
y: -7.6513094902
theta: 1.53746342659
speed: -0.0595311112702
id: 0
t: 149
xxx after update is x: 3.29743814468
y: -7.39867019653
theta: 1.58849024773
speed: -0.488619655371
id: 0
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.66666666667






self.maneuver_requested left
leave the update function 
in spin function, finish the n times spin:150




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: 3.29743814468
y: -7.39867019653
theta: 1.58849024773
speed: -0.488619655371
id: 0
t: 150
xxx after update is x: 3.31148600578
y: -7.95632362366
theta: 1.73162174225
speed: 0.05687584728
id: 0
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:151




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.31148600578
y: -7.95632362366
theta: 1.73162174225
speed: 0.05687584728
id: 0
t: 151
xxx after update is x: 2.96249270439
y: -7.20795583725
theta: 1.50403487682
speed: 0.0743426308036
id: 0
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:152




going to the update function
sim.py in the sim.py update function 
targetspelock is 6.0






self.maneuver_requested straight
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:136




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:137




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: -3.48671388626
y: -13.9955892563
theta: 4.77336025238
speed: 8.77190113068
id: 1
t: 135
xxx after update is x: -3.25704407692
y: -13.8166656494
theta: 4.79017353058
speed: 8.40519809723
id: 1
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.25704407692
y: -13.8166656494
theta: 4.79017353058
speed: 8.40519809723
id: 1
t: 136
xxx after update is x: -2.93204045296
y: -14.9477033615
theta: 4.76050901413
speed: 9.65008544922
id: 1
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.93204045296
y: -14.9477033615
theta: 4.76050901413
speed: 9.65008544922
id: 1
t: 137
xxx after update is x: -4.08033132553
y: -15.4712762833
theta: 4.732899189
speed: 9.78407764435
id: 1
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.8745530131239992, 0.48319999999999796]
Stops!
222 self.state_dicts[msg.id][msg.t] is (2.94059157371521, -7.819382667541504, 1.7694498300552368, -0.09562400728464127)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
************normalize weight**********************
leave the update function 
in spin function, finish the n times spin:139




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -4.08033132553
y: -15.4712762833
theta: 4.732899189
speed: 9.78407764435
id: 1
t: 138
xxx after update is x: -2.76451778412
y: -15.2596406937
theta: 4.72583675385
speed: 9.66744041443
id: 1
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.76451778412
y: -15.2596406937
theta: 4.72583675385
speed: 9.66744041443
id: 1
t: 139
xxx after update is x: -3.09247279167
y: -16.5249099731
theta: 4.77722644806
speed: 10.4816102982
id: 1
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:140




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.09247279167
y: -16.5249099731
theta: 4.77722644806
speed: 10.4816102982
id: 1
t: 140
xxx after update is x: -2.57013440132
y: -16.4058837891
theta: 4.72663640976
speed: 10.662563324
id: 1
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:141


aaaaaa
aaaaaabbbbb
risk is [0.717101251562044, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (3.3699347972869873, -7.815758228302002, 1.4004104137420654, 0.23532216250896454)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.26666666667






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.2666666666ed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.96249270439
y: -7.20795583725
theta: 1.50403487682
speed: 0.0743426308036
id: 0
t: 152
xxx after update is x: 3.4006049633
y: -7.30147504807
theta: 1.68450546265
speed: -0.0223084855825
id: 0
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:153


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.8






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
maneuver_negotiatir.py in the try maneuver function update -. sfinish
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.4006049633
y: -7.30147504807
theta: 1.68450546265
speed: -0.0223084855825
id: 0
t: 153
xxx after update is x: 3.07737421989
y: -7.62505531311
theta: 1.64552426338
speed: -0.0946826189756
id: 0
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:154




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.07737421989
y: -7.62505531311
theta: 1.64552426338
speed: -0.0946826189756
id: 0
t: 154
xxx after update is x: 3.38183546066
y: -7.1165766716
theta: 1.60796833038
speed: 0.283234089613
id: 0
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:155




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.38183546066
y: -7.1165766716
theta: 1.60796833038
speed: 0.283234089613
id: 0
t: 155
xxx after update is x: 2.99116826057
y: -7.35791826248
theta: 1.60658419132
speed: 0.0874683409929
id: 0
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:156




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.99116826057
y: -7.35791826248
theta: 1.60658419132
speed: 0.0874683409929
id: 0
t: 156
xxx after update is x: 3.54152441025
y: -7.65506839752
theta: 1.44811666012
speed: -0.156517475843
id: 0
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:157




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.54152441025
y: -7.65506839752
theta: 1.44811666012
speed: -0.156517475843
id: 0
t: 157
xxx after update is x: 3.60856819153
y: -6.99380731583
theta: 1.67659020424
speed: 0.243296012282
id: 0
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:158




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.60856819153
y: -6.99380731583
theta: 1.67659020424
speed: 0.243296012282
id: 0
t: 158
xxx after update is x: 3.61350679398
y: -7.15191841125
theta: 1.5211404562
speed: 0.113977439702
id: 0
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:159




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.61350679398
y: -7.15191841125
theta: 1.5211404562
speed: 0.113977439702
id: 0
t: 159
xxx after update is x: 3.52884244919
y: -7.72818899155
theta: 1.52938938141
speed: -0.323769539595
id: 0
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:160




going to the update function
sim.py in the sim.py update function 7






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:142




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: -2.57013440132
y: -16.4058837891
theta: 4.72663640976
speed: 10.662563324
id: 1
t: 141
xxx after update is x: -3.40404748917
y: -16.739736557
theta: 4.60012865067
speed: 10.454627037
id: 1
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.40404748917
y: -16.739736557
theta: 4.60012865067
speed: 10.454627037
id: 1
t: 142
xxx after update is x: -3.41120696068
y: -27.7553539276
theta: 4.70152807236
speed: 1.41990041733
id: 1
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:144




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: -3.41120696068
y: -27.7553539276
theta: 4.70152807236
speed: 1.41990041733
id: 1
t: 143
xxx after update is x: -3.05425310135
y: -27.6502113342
theta: 4.68621635437
speed: 0.0377021357417
id: 1
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.05425310135
y: -27.6502113342
theta: 4.68621635437
speed: 0.0377021357417
id: 1
t: 144
xxx after update is x: -3.41924381256
y: -27.662727356
theta: 4.61373138428
speed: 0.153867602348
id: 1
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.41924381256
y: -27.662727356
theta: 4.61373138428
speed: 0.153867602348
id: 1
t: 145
xxx after update is x: -3.83105063438
y: -28.1843528748
theta: 4.76450634003
speed: -0.00766126671806
id: 1
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:146


aaaaaa
aaaaaabbbbb
risk is [0.5902326367334109, 0.24719780069501998]
222 self.state_dicts[msg.id][msg.t] is (3.199974298477173, -7.4297661781311035, 1.657755732536316, -0.2815810739994049)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.48888888889






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
leave the update function 
in spin function, finish the n times spin:147




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: -3.83105063438
y: -28.1843528748
theta: 4.76450634003
speed: -0.00766126671806
id: 1
t: 146
xxx after update is x: -3.23571944237
y: -28.1054077148
theta: 4.64611244202
speed: 0.640656769276
id: 1
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.23571944237
y: -28.1054077148
theta: 4.64611244202
speed: 0.640656769276
id: 1
t: 147
xxx after update is x: -2.99137544632
y: -27.3196105957
theta: 4.59865808487
speed: 1.9266667366
id: 1
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.8585215119303146, 0.5151999999999983]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.077374219894409, 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.52884244919
y: -7.72818899155
theta: 1.52938938141
speed: -0.323769539595
id: 0
t: 160
xxx after update is x: 3.35437464714
y: -6.79479885101
theta: 1.62332439423
speed: -0.0917807742953
id: 0
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:161




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.35437464714
y: -6.79479885101
theta: 1.62332439423
speed: -0.0917807742953
id: 0
t: 161
xxx after update is x: 3.45921206474
y: -7.70578384399
theta: 1.50451993942
speed: -0.204812705517
id: 0
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:162


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.2






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.45921206474
y: -7.70578384399
theta: 1.50451993942
speed: -0.204812705517
id: 0
t: 162
xxx after update is x: 3.21218442917
y: -7.60847997665
theta: 1.58883357048
speed: 0.183844447136
id: 0
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:163




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.21218442917
y: -7.60847997665
theta: 1.58883357048
speed: 0.183844447136
id: 0
t: 163
xxx after update is x: 2.85897541046
y: -7.18464279175
theta: 1.53455412388
speed: 0.107008293271
id: 0
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:164




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.85897541046
y: -7.18464279175
theta: 1.53455412388
speed: 0.107008293271
id: 0
t: 164
xxx after update is x: 3.25618767738
y: -7.64351272583
theta: 1.5635689497
speed: -0.132719218731
id: 0
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:165




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.25618767738
y: -7.64351272583
theta: 1.5635689497
speed: -0.132719218731
id: 0
t: 165
xxx after update is x: 2.49290418625
y: -7.47646856308
theta: 1.5929889679
speed: -0.219332769513
id: 0
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:166




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.49290418625
y: -7.47646856308
theta: 1.5929889679
speed: -0.219332769513
id: 0
t: 166
xxx after update is x: 3.45981025696
y: -7.24229383469
theta: 1.49844825268
speed: -0.0616671442986
id: 0
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:167


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.42222222222






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:168




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function -7.625055313110352, 1.645524263381958, -0.09468261897563934)
222 self.state_dicts[msg.id][msg.t] is (3.381835460662842, -7.116576671600342, 1.6079683303833008, 0.2832340896129608)
222 self.state_dicts[msg.id][msg.t] is (2.991168260574341, -7.3579182624816895, 1.6065841913223267, 0.08746834099292755)
222 self.state_dicts[msg.id][msg.t] is (3.5415244102478027, -7.655068397521973, 1.448116660118103, -0.15651747584342957)
222 self.state_dicts[msg.id][msg.t] is (3.6085681915283203, -6.993807315826416, 1.6765902042388916, 0.24329601228237152)
222 self.state_dicts[msg.id][msg.t] is (3.61350679397583, -7.151918411254883, 1.521140456199646, 0.11397743970155716)
222 self.state_dicts[msg.id][msg.t] is (3.5288424491882324, -7.728188991546631, 1.5293893814086914, -0.32376953959465027)
222 self.state_dicts[msg.id][msg.t] is (3.354374647140503, -6.794798851013184, 1.6233243942260742, -0.09178077429533005)
222 self.state_dicts[msg.id][msg.t] is (3.459212064743042, -7.705783843994141, 1.5045199394226074, -0.20481270551681519)
222 self.state_dicts[msg.id][msg.t] is (3.212184429168701, -7.608479976654053, 1.5888335704803467, 0.1838444471359253)
222 self.state_dicts[msg.id][msg.t] is (2.858975410461426, -7.184642791748047, 1.534554123878479, 0.10700829327106476)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: -2.99137544632
y: -27.3196105957
theta: 4.59865808487
speed: 1.9266667366
id: 1
t: 148
xxx after update is x: -3.47130584717
y: -27.6613845825
theta: 4.77514886856
speed: 1.93664073944
id: 1
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.256187677383423, -7.643512725830078, 1.5635689496994019, -0.1327192187309265)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: -3.47130584717
y: -27.6613845825
theta: 4.77514886856
speed: 1.93664073944
id: 1
t: 149
xxx after update is x: -3.25081396103
y: -28.1509094238
theta: 4.85622930527
speed: 1.58065974712
id: 1
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (2.4929041862487793, -7.476468563079834, 1.5929889678955078, -0.2193327695131302)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: -3.25081396103
y: -28.1509094238
theta: 4.85622930527
speed: 1.58065974712
id: 1
t: 150
xxx after update is x: -3.28446722031
y: -28.3091068268
theta: 4.57597446442
speed: 2.29465484619
id: 1
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.459810256958008, -7.242293834686279, 1.4984482526779175, -0.06166714429855347)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.71111111111






self.maneuver_requested straight


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:152




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:153




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:154




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:155


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: -3.28446722031
y: -28.3091068268
theta: 4.57597446442
speed: 2.29465484619
id: 1
t: 151
xxx after update is x: -3.145414114
y: -29.9368610382
theta: 4.97998046875
speed: 0.270059764385
id: 1
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.145414114
y: -29.9368610382
theta: 4.97998046875
speed: 0.270059764385
id: 1
t: 152
xxx after update is x: -3.17836165428
y: -29.8621425629
theta: 4.58844470978
speed: -0.255514860153
id: 1
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.17836165428
y: -29.8621425629
theta: 4.58844470978
speed: -0.255514860153
id: 1
t: 153
xxx after update is x: -3.15190339088
y: -29.8202724457
theta: 4.64426326752
speed: 0.177331477404
id: 1
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.15190339088
y: -29.8202724457
theta: 4.64426326752
speed: 0.177331477404
id: 1
t: 154
xxx after update is x: -3.47516989708
y: -29.8767471313
theta: 4.61018848419
speed: -0.153475537896
id: 1
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.47516989708
y: -29.8767471313
theta: 4.61018848419
speed: -0.153475537896
id: 1
t: 155
xxx after update is x: -3.73074936867
y: -29.9180850983
theta: 4.67071676254
speed: -0.117991171777
id: 1
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.2586669921875, -8.047499656677246, 1.535749077796936, 0.1083507090806961)
222 self.state_dicts[msg.id][msg.t] is (3.105764627456665, -7.167531490325928, 1.6221259832382202, -0.04319723695516586)
222 self.state_dicts[msg.id][msg.t] is (2.912513256072998, -7.456751823425293, 1.5965474843978882, -0.37470388412475586)
222 self.state_dicts[msg.id][msg.t] is (3.0973496437072754, -7.954339504241943, 1.5368765592575073, -0.19389788806438446)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.73074936867
y: -29.9180850983
theta: 4.67071676254
speed: -0.117991171777
id: 1
t: 156
xxx after update is x: -3.67587447166
y: -29.4998207092
theta: 4.79677629471
speed: -0.290416389704
id: 1
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:157




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.67587447166
y: -29.4998207092
theta: 4.79677629471
speed: -0.290416389704
id: 1
t: 157
xxx after update is x: -3.91377806664
y: -29.6506729126
theta: 4.77445316315
speed: 0.0225027278066
id: 1
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.096592426300049, -8.109830856323242, 1.3754281997680664, 0.24265389144420624)
leave the update function 
in spin function, finish the n times spin:158




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:159




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:160


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.02222222222
xxx before update is x: -3.91377806664
y: -29.6506729126
theta: 4.77445316315
speed: 0.0225027278066
id: 1
t: 158
xxx after update is x: -2.73605465889
y: -29.7226428986
theta: 4.74686574936
speed: -0.0973260998726
id: 1
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.73605465889
y: -29.7226428986
theta: 4.74686574936
speed: -0.09732
in spin function, finish the n times spin:169




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:170




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:171


xxx before update is x: 3.45981025696
y: -7.24229383469
theta: 1.49844825268
speed: -0.0616671442986
id: 0
t: 167
xxx after update is x: 3.25866699219
y: -8.04749965668
theta: 1.5357490778
speed: 0.108350709081
id: 0
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.25866699219
y: -8.04749965668
theta: 1.5357490778
speed: 0.108350709081
id: 0
t: 168
xxx after update is x: 3.10576462746
y: -7.16753149033
theta: 1.62212598324
speed: -0.0431972369552
id: 0
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.10576462746
y: -7.16753149033
theta: 1.62212598324
speed: -0.0431972369552
id: 0
t: 169
xxx after update is x: 2.91251325607
y: -7.45675182343
theta: 1.5965474844
speed: -0.374703884125
id: 0
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 2.91251325607
y: -7.45675182343
theta: 1.5965474844
speed: -0.374703884125
id: 0
t: 170
xxx after update is x: 3.09734964371
y: -7.95433950424
theta: 1.53687655926
speed: -0.193897888064
id: 0
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.09734964371
y: -7.95433950424
theta: 1.53687655926
speed: -0.193897888064
id: 0
t: 171
xxx after update is x: 3.0965924263
y: -8.10983085632
theta: 1.37542819977
speed: 0.242653891444
id: 0
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:172




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:173


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.64444444444






self.maneuver_requested left
xxx before update is x: 3.0965924263
y: -8.10983085632
theta: 1.37542819977
speed: 0.242653891444
id: 0
t: 172
xxx after update is x: 3.02771830559
y: -7.0686674118
theta: 1.62043654919
speed: -0.219826519489
id: 0
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:174




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.02771830559
y: -7.0686674118
theta: 1.62043654919
speed: -0.219826519489
id: 0
t: 173
xxx after update is x: 2.8061003685
y: -7.32890319824
theta: 1.6294567585
speed: 0.071905836463
id: 0
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 2.8061003685
y: -7.32890319824
theta: 1.6294567585
speed: 0.071905836463
id: 0
t: 174
xxx after update is x: 3.08634591103
y: -7.36573934555
theta: 1.61502385139
speed: -0.217836663127
id: 0
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:175




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.08634591103
y: -7.36573934555
theta: 1.61502385139
speed: -0.217836663127
id: 0
t: 175
xxx after update is x: 2.79227137566
y: -7.79392719269
theta: 1.60344088078
speed: -0.21625144760998726
id: 1
t: 159
xxx after update is x: -3.35191106796
y: -29.7667999268
theta: 4.74382686615
speed: -0.062171690166
id: 1
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.0277183055877686, -7.068667411804199, 1.6204365491867065, -0.21982651948928833)






self.maneuver_requested straight


going to the update function
sim.py in the sim.py update function 
maneuver_negotiatir.py in the try maneuver function update -. sfinish
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.35191106796
y: -29.7667999268
theta: 4.74382686615
speed: -0.062171690166
id: 1
t: 160
xxx after update is x: -3.18878149986
y: -29.3184928894
theta: 4.57979011536
speed: 0.152538329363
id: 1
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (2.806100368499756, -7.3289031982421875, 1.6294567584991455, 0.07190583646297455)
222 self.state_dicts[msg.id][msg.t] is (3.086345911026001, -7.365739345550537, 1.6150238513946533, -0.2178366631269455)
leave the update function 
in spin function, finish the n times spin:161




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.18878149986
y: -29.3184928894
theta: 4.57979011536
speed: 0.152538329363
id: 1
t: 161
xxx after update is x: -3.29418563843
y: -29.5400543213
theta: 4.67012071609
speed: 0.0758386030793
id: 1
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:162


222 self.state_dicts[msg.id][msg.t] is (2.792271375656128, -7.793927192687988, 1.6034408807754517, -0.2162514477968216)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.29418563843
y: -29.5400543213
theta: 4.67012071609
speed: 0.0758386030793
id: 1
t: 162
xxx after update is x: -3.24965977669
y: -30.1513767242
theta: 4.76318693161
speed: 0.137452363968
id: 1
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:163


222 self.state_dicts[msg.id][msg.t] is (3.7758026123046875, -7.660252571105957, 1.6346298456192017, -0.09132209420204163)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: -3.24965977669
y: -30.1513767242
theta: 4.76318693161
speed: 0.137452363968
id: 1
t: 163
xxx after update is x: -3.74023771286
y: -30.3133049011
theta: 4.68904972076
speed: -0.0998674109578
id: 1
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.0859878063201904, -7.529349327087402, 1.385185956954956, -0.22137801349163055)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.74023771286
y: -30.3133049011
theta: 4.68904972076
speed: -0.0998674109578
id: 1
t: 164
xxx after update is x: -3.1351082325
y: -29.9752941132
theta: 4.68900299072
speed: -0.314153820276
id: 1
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (2.669459819793701, -7.203381538391113, 1.7894766330718994, 0.1729935109615326)
leave the update function 
in spin function, finish the n times spin:165




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.1351082325
y: -29.9752941132
theta: 4.68900299072
speed: -0.314153820276
id: 1
t: 165
xxx after update is x: -3.27879858017
y: -29.2402000427
theta: 4.60167360306
speed: -0.161127388477
id: 1
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times 797
id: 0
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:176




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:177


xxx before update is x: 2.79227137566
y: -7.79392719269
theta: 1.60344088078
speed: -0.216251447797
id: 0
t: 176
xxx after update is x: 3.7758026123
y: -7.66025257111
theta: 1.63462984562
speed: -0.091322094202
id: 0
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.7758026123
y: -7.66025257111
theta: 1.63462984562
speed: -0.091322094202
id: 0
t: 177
xxx after update is x: 3.08598780632
y: -7.52934932709
theta: 1.38518595695
speed: -0.221378013492
id: 0
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:178




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.08598780632
y: -7.52934932709
theta: 1.38518595695
speed: -0.221378013492
id: 0
t: 178
xxx after update is x: 2.66945981979
y: -7.20338153839
theta: 1.78947663307
speed: 0.172993510962
id: 0
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:179




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.66945981979
y: -7.20338153839
theta: 1.78947663307
speed: 0.172993510962
id: 0
t: 179
xxx after update is x: 3.94904208183
y: -7.56778383255
theta: 1.93421816826
speed: -0.0655528530478
id: 0
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:180




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.94904208183
y: -7.56778383255
theta: 1.93421816826
speed: -0.0655528530478
id: 0
t: 180
xxx after update is x: 2.72497391701
y: -7.79819536209
theta: 1.53006994724
speed: 0.291339188814
id: 0
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:181




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.72497391701
y: -7.79819536209
theta: 1.53006994724
speed: 0.291339188814
id: 0
t: 181
xxx after update is x: 3.28164362907
y: -7.68535995483
theta: 1.45601403713
speed: -0.0367975831032
id: 0
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:182


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.08888888889






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.28164362907
y: -7.68535995483
theta: 1.45601403713
speed: -0.0367975831032
id: 0
t: 182
xxx after update is x: 3.25024151802
y: -7.44431352615
theta: 1.46970140934
speed: -0.13626408577
id: 0
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:183




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: 3.25024151802
y: -7.44431352615
theta: 1.46970140934
speed: -0.13626408577
id: 0
t: spin:166


222 self.state_dicts[msg.id][msg.t] is (3.9490420818328857, -7.567783832550049, 1.934218168258667, -0.06555285304784775)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.27879858017
y: -29.2402000427
theta: 4.60167360306
speed: -0.161127388477
id: 1
t: 166
xxx after update is x: -3.21304035187
y: -29.8265857697
theta: 4.794090271
speed: 0.184907928109
id: 1
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:167


222 self.state_dicts[msg.id][msg.t] is (2.7249739170074463, -7.7981953620910645, 1.5300699472427368, 0.2913391888141632)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.21304035187
y: -29.8265857697
theta: 4.794090271
speed: 0.184907928109
id: 1
t: 167
xxx after update is x: -3.71795129776
y: -30.4585514069
theta: 4.53828430176
speed: 0.121535599232
id: 1
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:168


222 self.state_dicts[msg.id][msg.t] is (3.2816436290740967, -7.685359954833984, 1.4560140371322632, -0.03679758310317993)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.46666666667






self.maneuver_requested straight
xxx before update is x: -3.71795129776
y: -30.4585514069
theta: 4.53828430176
speed: 0.121535599232
id: 1
t: 168
xxx after update is x: -3.55447292328
y: -29.7227516174
theta: 4.78890991211
speed: 0.0817596539855
id: 1
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:169


maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (3.25024151802063, -7.4443135261535645, 1.4697014093399048, -0.13626408576965332)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: -3.55447292328
y: -29.7227516174
theta: 4.78890991211
speed: 0.0817596539855
id: 1
t: 169
xxx after update is x: -3.39097452164
y: -30.0827255249
theta: 4.71236944199
speed: -0.154329821467
id: 1
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.068138360977173, -7.699042797088623, 1.4696004390716553, 0.01796933449804783)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.39097452164
y: -30.0827255249
theta: 4.71236944199
speed: -0.154329821467
id: 1
t: 170
xxx after update is x: -4.03531885147
y: -29.5576553345
theta: 4.7813615799
speed: -0.379197269678
id: 1
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:171


222 self.state_dicts[msg.id][msg.t] is (3.398261547088623, -7.979920864105225, 1.6427029371261597, -0.3838861584663391)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -4.03531885147
y: -29.5576553345
theta: 4.7813615799
speed: -0.379197269678
id: 1
t: 171
xxx after update is x: -3.35089492798
y: -30.2602157593
theta: 4.56261396408
speed: 0.092734105885
id: 1
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:172


222 self.state_dicts[msg.id][msg.t] is (3.4171717166900635, -7.717653751373291, 1.5308884382247925, 0.05377691239118576)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.sp183
xxx after update is x: 3.06813836098
y: -7.69904279709
theta: 1.46960043907
speed: 0.017969334498
id: 0
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.06813836098
y: -7.69904279709
theta: 1.46960043907
speed: 0.017969334498
id: 0
t: 184
xxx after update is x: 3.39826154709
y: -7.97992086411
theta: 1.64270293713
speed: -0.383886158466
id: 0
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:185




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.39826154709
y: -7.97992086411
theta: 1.64270293713
speed: -0.383886158466
id: 0
t: 185
xxx after update is x: 3.41717171669
y: -7.71765375137
theta: 1.53088843822
speed: 0.0537769123912
id: 0
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:186




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.41717171669
y: -7.71765375137
theta: 1.53088843822
speed: 0.0537769123912
id: 0
t: 186
xxx after update is x: 3.28434514999
y: -7.54632377625
theta: 1.44071578979
speed: -0.0503313988447
id: 0
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:187




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.28434514999
y: -7.54632377625
theta: 1.44071578979
speed: -0.0503313988447
id: 0
t: 187
xxx after update is x: 3.1706840992
y: -7.56743764877
theta: 1.42200922966
speed: 0.211609661579
id: 0
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:188




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.1706840992
y: -7.56743764877
theta: 1.42200922966
speed: 0.211609661579
id: 0
t: 188
xxx after update is x: 3.58202600479
y: -7.72545146942
theta: 1.70115101337
speed: 0.25315785408
id: 0
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:189




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.58202600479
y: -7.72545146942
theta: 1.70115101337
speed: 0.25315785408
id: 0
t: 189
xxx after update is x: 2.97333717346
y: -8.21127891541
theta: 1.41275644302
speed: -0.146400228143
id: 0
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:190


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.44444444444






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.97333717346
y: -8.21127891541
theta: 1.41275644302
speed: -0.146400228143
id: 0
t: 190
xxx after update is x: 3.4200117588
y: -7.20133829117
theta: 1.5550327301
speed: 0.150760143995
id: 0
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:191




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.4200117588
y: -7.20133829117
theta: 1.5550327301
speed: 0.150760143995
id: 0
t: 191
xxx after update is x: 2.83560609818
y: -7.89187288284
theed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.35089492798
y: -30.2602157593
theta: 4.56261396408
speed: 0.092734105885
id: 1
t: 172
xxx after update is x: -3.41405081749
y: -29.7044830322
theta: 4.71471261978
speed: 0.0722377896309
id: 1
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:173


222 self.state_dicts[msg.id][msg.t] is (3.2843451499938965, -7.546323776245117, 1.4407157897949219, -0.05033139884471893)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.41405081749
y: -29.7044830322
theta: 4.71471261978
speed: 0.0722377896309
id: 1
t: 173
xxx after update is x: -3.34172606468
y: -30.0645046234
theta: 4.63072681427
speed: -0.14229169488
id: 1
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:174


222 self.state_dicts[msg.id][msg.t] is (3.1706840991973877, -7.567437648773193, 1.4220092296600342, 0.21160966157913208)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.34172606468
y: -30.0645046234
theta: 4.63072681427
speed: -0.14229169488
id: 1
t: 174
xxx after update is x: -3.12689065933
y: -29.9045467377
theta: 4.73199939728
speed: 0.289067596197
id: 1
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:175


222 self.state_dicts[msg.id][msg.t] is (3.5820260047912598, -7.725451469421387, 1.7011510133743286, 0.2531578540802002)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.12689065933
y: -29.9045467377
theta: 4.73199939728
speed: 0.289067596197
id: 1
t: 175
xxx after update is x: -3.51602363586
y: -29.7782154083
theta: 4.59332895279
speed: 0.259659916162
id: 1
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:176


222 self.state_dicts[msg.id][msg.t] is (2.973337173461914, -8.211278915405273, 1.4127564430236816, -0.14640022814273834)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.82222222222






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.51602363586
y: -29.7782154083
theta: 4.59332895279
speed: 0.259659916162
id: 1
t: 176
xxx after update is x: -3.72139692307
y: -29.6653862
theta: 4.59747934341
speed: -0.0761074572802
id: 1
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:177


222 self.state_dicts[msg.id][msg.t] is (3.4200117588043213, -7.201338291168213, 1.555032730102539, 0.15076014399528503)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: -3.72139692307
y: -29.6653862
theta: 4.59747934341
speed: -0.0761074572802
id: 1
t: 177
xxx after update is x: -3.67882823944
y: -29.2230987549
theta: 4.71992015839
speed: 0.0253704637289
id: 1
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (2.835606098175049, -7.891872882843018, 1.8034071922302246, 0.0327703058719635)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.67882823944
y: -29.2230987549
theta: 4.71992015839
speed: 0.0253704637289
id: 1
t: 178
xxx after update is x: -3.29882240295
y: -29.6652793884
theta: 4.53120660782
speed: 0.035714559257
id: 1
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:179


222 self.state_dicts[msg.id][msg.t] is (3.1224112510681152, -7.844912052154541, 1.5296621322631836, 0.035136621445417404)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.29882240295
y: -29.6652793884
theta: 4.53120660782
speed: 0.035714559257
id: 1
t: 179
xxx after update is x: -3.12213563919
y: -30.0967674255
theta: 4.73682641983
speed: -0.00707374699414
id: 1
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:180


222 self.state_dicts[msg.id][msg.t] is (3.505101203918457, -7.129598617553711, 1.7564996480941772, 0.06327471882104874)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.12213563919
y: -30.0967674255
theta: 4.73682641983
speed: -0.00707374699414
id: 1
t: 180
xxx after update is x: -3.80323529243
y: -29.64985466
theta: 4.87046432495
speed: -0.127901419997
id: 1
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:181


222 self.state_dicts[msg.id][msg.t] is (3.1071295738220215, -7.0253071784973145, 1.6822491884231567, -0.4446817934513092)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.80323529243
y: -29.64985466
theta: 4.87046432495
speed: -0.127901419997
id: 1
t: 181
xxx after update is x: -3.31512975693
y: -29.9254703522
theta: 4.72152423859
speed: 0.0178750604391
id: 1
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:182


222 self.state_dicts[msg.id][msg.t] is (3.6204004287719727, -7.673595905303955, 1.5276858806610107, -0.003497060853987932)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.31512975693
y: -29.9254703522
theta: 4.72152423859
speed: 0.0178750604391
id: 1
t: 182
xxx after update is x: -2.58470201492
y: -30.1562404633
theta: 4.72161006927
speed: -0.467970401049
id: 1
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:183


222 self.state_dicts[msg.id][msg.t] is (3.25663685798645, -7.746678352355957, 1.4369630813598633, 0.07813137769699097)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.58470201492
y: -30.1562404633
theta: 4.72161006927
speed: -0.467970401049
id: 1
t: 183
xxx after update is x: -3.18549847603
y: -29.8176460266
theta: 4.62045860291
speed: -0.132435485721
id: 1
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:184


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.17777777778






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (3.4010531902313232, -7.730907917022705, 1.5367611646652222, 0.4848209023475647)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:185


xxx before update is x: -3.18549847603
y: -29.8176460266
theta: 4.62045860291
speed: -0.132435485721
id: 1
t: 184
xxx after update is x: -3.49288892746
y: -29.9129371643
theta: 4.6980381012
speed: 0.252923160791
id: 1
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] eta: 1.80340719223
speed: 0.032770305872
id: 0
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:192




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.83560609818
y: -7.89187288284
theta: 1.80340719223
speed: 0.032770305872
id: 0
t: 192
xxx after update is x: 3.12241125107
y: -7.84491205215
theta: 1.52966213226
speed: 0.0351366214454
id: 0
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:193




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.12241125107
y: -7.84491205215
theta: 1.52966213226
speed: 0.0351366214454
id: 0
t: 193
xxx after update is x: 3.50510120392
y: -7.12959861755
theta: 1.75649964809
speed: 0.063274718821
id: 0
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:194




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.50510120392
y: -7.12959861755
theta: 1.75649964809
speed: 0.063274718821
id: 0
t: 194
xxx after update is x: 3.10712957382
y: -7.0253071785
theta: 1.68224918842
speed: -0.444681793451
id: 0
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:195




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.10712957382
y: -7.0253071785
theta: 1.68224918842
speed: -0.444681793451
id: 0
t: 195
xxx after update is x: 3.62040042877
y: -7.6735959053
theta: 1.52768588066
speed: -0.00349706085399
id: 0
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:196




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.62040042877
y: -7.6735959053
theta: 1.52768588066
speed: -0.00349706085399
id: 0
t: 196
xxx after update is x: 3.25663685799
y: -7.74667835236
theta: 1.43696308136
speed: 0.078131377697
id: 0
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:197


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.75555555556






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.25663685799
y: -7.74667835236
theta: 1.43696308136
speed: 0.078131377697
id: 0
t: 197
xxx after update is x: 3.40105319023
y: -7.73090791702
theta: 1.53676116467
speed: 0.484820902348
id: 0
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:198




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.40105319023
y: -7.73090791702
theta: 1.53676116467
speed: 0.484820902348
id: 0
t: 198
xxx after update is x: 3.12560129166
y: -7.38548755646
theta: 1.78707301617
speed: -0.302281409502
id: 0
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:199




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: 3.12560129166
y: -7.38548755646
theta: 1.7870730161is (3.125601291656494, -7.3854875564575195, 1.787073016166687, -0.3022814095020294)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: -3.49288892746
y: -29.9129371643
theta: 4.6980381012
speed: 0.252923160791
id: 1
t: 185
xxx after update is x: -3.75858521461
y: -29.8502178192
theta: 4.61159944534
speed: 0.0434240214527
id: 1
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.1052043437957764, -7.661496162414551, 1.5050561428070068, -0.3885945975780487)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: -3.75858521461
y: -29.8502178192
theta: 4.61159944534
speed: 0.0434240214527
id: 1
t: 186
xxx after update is x: -3.44536209106
y: -29.5368213654
theta: 4.67405128479
speed: -0.66265052557
id: 1
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.260483980178833, -7.532511234283447, 1.458550214767456, 0.3848588466644287)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.44536209106
y: -29.5368213654
theta: 4.67405128479
speed: -0.66265052557
id: 1
t: 187
xxx after update is x: -3.08817005157
y: -29.9632759094
theta: 4.7373251915
speed: 0.217346295714
id: 1
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:188


222 self.state_dicts[msg.id][msg.t] is (2.91540789604187, -7.507430553436279, 1.7223293781280518, -0.2788521349430084)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.08817005157
y: -29.9632759094
theta: 4.7373251915
speed: 0.217346295714
id: 1
t: 188
xxx after update is x: -3.19801855087
y: -29.6983032227
theta: 4.60642194748
speed: -0.50012165308
id: 1
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:189


222 self.state_dicts[msg.id][msg.t] is (3.553701400756836, -7.714815616607666, 1.5588815212249756, -0.034424856305122375)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: -3.19801855087
y: -29.6983032227
theta: 4.60642194748
speed: -0.50012165308
id: 1
t: 189
xxx after update is x: -2.4782269001
y: -29.6999645233
theta: 4.81288909912
speed: 0.687147021294
id: 1
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.4639532566070557, -7.695537090301514, 1.4402676820755005, 0.07676223665475845)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.4782269001
y: -29.6999645233
theta: 4.81288909912
speed: 0.687147021294
id: 1
t: 190
xxx after update is x: -3.58947944641
y: -30.1413497925
theta: 4.63141393661
speed: 0.303792476654
id: 1
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:191


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.48888888889






self.maneuver_requested222 self.state_dicts[msg.id][msg.t] is (3.6197853088378906, -7.515289783477783, 1.4354500770568848, -0.07532846927642822)
 straight


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: 7
speed: -0.302281409502
id: 0
t: 199
xxx after update is x: 3.1052043438
y: -7.66149616241
theta: 1.50505614281
speed: -0.388594597578
id: 0
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.1052043438
y: -7.66149616241
theta: 1.50505614281
speed: -0.388594597578
id: 0
t: 200
xxx after update is x: 3.26048398018
y: -7.53251123428
theta: 1.45855021477
speed: 0.384858846664
id: 0
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:201




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.26048398018
y: -7.53251123428
theta: 1.45855021477
speed: 0.384858846664
id: 0
t: 201
xxx after update is x: 2.91540789604
y: -7.50743055344
theta: 1.72232937813
speed: -0.278852134943
id: 0
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:202




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.91540789604
y: -7.50743055344
theta: 1.72232937813
speed: -0.278852134943
id: 0
t: 202
xxx after update is x: 3.55370140076
y: -7.71481561661
theta: 1.55888152122
speed: -0.0344248563051
id: 0
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:203




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.55370140076
y: -7.71481561661
theta: 1.55888152122
speed: -0.0344248563051
id: 0
t: 203
xxx after update is x: 3.46395325661
y: -7.6955370903
theta: 1.44026768208
speed: 0.0767622366548
id: 0
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:204


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.06666666667






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: 3.46395325661
y: -7.6955370903
theta: 1.44026768208
speed: 0.0767622366548
id: 0
t: 204
xxx after update is x: 3.61978530884
y: -7.51528978348
theta: 1.43545007706
speed: -0.0753284692764
id: 0
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:205




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.61978530884
y: -7.51528978348
theta: 1.43545007706
speed: -0.0753284692764
id: 0
t: 205
xxx after update is x: 2.71963691711
y: -7.40310049057
theta: 1.59713804722
speed: 0.52633690834
id: 0
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:206




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.71963691711
y: -7.40310049057
theta: 1.59713804722
speed: 0.52633690834
id: 0
t: 206
xxx after update is x: 3.20374059677
y: -7.70758342743
theta: 1.70490479469
speed: 0.0839500725269
id: 0
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:207




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.20374059677
y: -7.70758342743
theta: 1.70490479469
speed: 0.0839500725269
id: 0
t: 207
xxx after updat-3.58947944641
y: -30.1413497925
theta: 4.63141393661
speed: 0.303792476654
id: 1
t: 191
xxx after update is x: -4.11715698242
y: -30.4582462311
theta: 4.55395793915
speed: -0.465794861317
id: 1
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (2.719636917114258, -7.403100490570068, 1.5971380472183228, 0.5263369083404541)
leave the update function 
in spin function, finish the n times spin:192




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -4.11715698242
y: -30.4582462311
theta: 4.55395793915
speed: -0.465794861317
id: 1
t: 192
xxx after update is x: -3.09675550461
y: -29.5651779175
theta: 4.52453422546
speed: 0.0388088971376
id: 1
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:193




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (3.2037405967712402, -7.707583427429199, 1.7049047946929932, 0.08395007252693176)
xxx before update is x: -3.09675550461
y: -29.5651779175
theta: 4.52453422546
speed: 0.0388088971376
id: 1
t: 193
xxx after update is x: -3.11734366417
y: -29.7864723206
theta: 4.8759970665
speed: 0.242294996977
id: 1
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:194


222 self.state_dicts[msg.id][msg.t] is (3.6369094848632812, -7.991101264953613, 1.5911301374435425, 0.10958215594291687)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.11734366417
y: -29.7864723206
theta: 4.8759970665
speed: 0.242294996977
id: 1
t: 194
xxx after update is x: -3.69154238701
y: -29.4450759888
theta: 4.75754594803
speed: -0.0543168634176
id: 1
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:195


222 self.state_dicts[msg.id][msg.t] is (3.1891443729400635, -8.017528533935547, 1.496766448020935, -0.2049832046031952)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (3.6191964149475098, -7.236328125, 1.5642411708831787, 0.06128990650177002)
xxx before update is x: -3.69154238701
y: -29.4450759888
theta: 4.75754594803
speed: -0.0543168634176
id: 1
t: 195
xxx after update is x: -2.49834489822
y: -30.3582344055
theta: 4.55367660522
speed: 0.00606267759576
id: 1
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:196




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.49834489822
y: -30.3582344055
theta: 4.55367660522
speed: 0.00606267759576
id: 1
t: 196
xxx after update is x: -3.40930604935
y: -29.3667945862
theta: 4.81282806396
speed: -0.0794812291861
id: 1
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:197


222 self.state_dicts[msg.id][msg.t] is (3.102827548980713, -7.620560169219971, 1.5809009075164795, 0.08759000152349472)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.40930604935
y: -29.3667945862
theta: 4.81282806396
speed: -0.0794812291861
id: 1
t: 197
xxx after update is x: -2.93389725685
y: -29.7669448853
theta: 4.71006774902
speed: 0.194779321551
id: 1
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:198


222 self.state_dicts[msg.id][msg.t] is (2.9507458209991455, -7.381659984588623, e is x: 3.63690948486
y: -7.99110126495
theta: 1.59113013744
speed: 0.109582155943
id: 0
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:208




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.63690948486
y: -7.99110126495
theta: 1.59113013744
speed: 0.109582155943
id: 0
t: 208
xxx after update is x: 3.18914437294
y: -8.01752853394
theta: 1.49676644802
speed: -0.204983204603
id: 0
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:209




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: 3.18914437294
y: -8.01752853394
theta: 1.49676644802
speed: -0.204983204603
id: 0
t: 209
xxx after update is x: 3.61919641495
y: -7.236328125
theta: 1.56424117088
speed: 0.0612899065018
id: 0
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.61919641495
y: -7.236328125
theta: 1.56424117088
speed: 0.0612899065018
id: 0
t: 210
xxx after update is x: 3.10282754898
y: -7.62056016922
theta: 1.58090090752
speed: 0.0875900015235
id: 0
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:211




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:212


xxx before update is x: 3.10282754898
y: -7.62056016922
theta: 1.58090090752
speed: 0.0875900015235
id: 0
t: 211
xxx after update is x: 2.950745821
y: -7.38165998459
theta: 1.57223725319
speed: 0.0701859891415
id: 0
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: 2.950745821
y: -7.38165998459
theta: 1.57223725319
speed: 0.0701859891415
id: 0
t: 212
xxx after update is x: 3.51933598518
y: -7.4104681015
theta: 1.63069248199
speed: -0.206916511059
id: 0
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.51933598518
y: -7.4104681015
theta: 1.63069248199
speed: -0.206916511059
id: 0
t: 213
xxx after update is x: 3.33409309387
y: -6.84778833389
theta: 1.58343183994
speed: 0.172436952591
id: 0
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:214


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.51111111111






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: 3.33409309387
y: -6.84778833389
theta: 1.58343183994
speed: 0.172436952591
id: 0
t: 214
xxx after update is x: 3.34825277328
y: -7.70218706131
theta: 1.39730525017
speed: -0.0108430376276
id: 0
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:215


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.55555555556






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:216


1.572237253189087, 0.07018598914146423)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.93389725685
y: -29.7669448853
theta: 4.71006774902
speed: 0.194779321551
id: 1
t: 198
xxx after update is x: -3.36678528786
y: -29.3423347473
theta: 4.66073513031
speed: -0.0331683456898
id: 1
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.519335985183716, -7.410468101501465, 1.630692481994629, -0.20691651105880737)
leave the update function 
in spin function, finish the n times spin:199




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.36678528786
y: -29.3423347473
theta: 4.66073513031
speed: -0.0331683456898
id: 1
t: 199
xxx after update is x: -3.66984629631
y: -30.0307350159
theta: 4.71218585968
speed: 0.0430383533239
id: 1
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:200


222 self.state_dicts[msg.id][msg.t] is (3.3340930938720703, -6.847788333892822, 1.5834318399429321, 0.17243695259094238)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.66984629631
y: -30.0307350159
theta: 4.71218585968
speed: 0.0430383533239
id: 1
t: 200
xxx after update is x: -3.44552135468
y: -29.7000160217
theta: 4.65528345108
speed: 0.092732436955
id: 1
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:201


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.93333333333






self.maneuver_requested straight
222 self.state_dicts[msg.id][msg.t] is (3.348252773284912, -7.7021870613098145, 1.3973052501678467, -0.010843037627637386)
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.44552135468
y: -29.7000160217
theta: 4.65528345108
speed: 0.092732436955
id: 1
t: 201
xxx after update is x: -3.55155301094
y: -30.0746593475
theta: 4.67708826065
speed: -0.214456856251
id: 1
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:202


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.97777777778






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:203


... logging to /home/lu/.ros/log/5bb5b864-ffab-11e8-9ca8-000c291801fc/roslaunch-ubuntu-80197.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch
[1mstarted roslaunch server http://ubuntu:46783/[0m

SUMMARY
========

PARAMETERS
 * /enable_negotiator: True
 * /file_prefix: 
 * /nr_cars: 2
 * /plot: False
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /save: False

NODES
  /
    car0 (virtual_blinker/sim.py)
    car1 (virtual_blinker/sim.py)
    cloud (virtual_blinker/cloud.py)
    rviz (rviz/rviz)
    visualization (virtual_blinker/visualization.py)

auto-starting new master
[1mprocess[master]: started with pid [80208][0m
[1mROS_MASTER_URI=http://localhost:11311[0m
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch http://localhost:11311
[1msetting /run_id to 5bb5b864-ffab-11e8-9ca8-000c291801fc[0m
[1mprocess[rosout-1]: started with pid [80222][0m
started core service [/rosout]
[1mprocess[visualization-2]: started with pid [80225][0m
[1mprocess[rviz-3]: started with pid [80226][0m
[1mprocess[car0-4]: started with pid [80227][0m
[1mprocess[car1-5]: started with pid [80228][0m
[1mprocess[cloud-6]: started with pid [80229][0m
[cloud-6] killing on exit
[car1-5] killing on exit
[car0-4] killing on exit
[visualization-2] killing on exit
[rviz-3] killing on exit
[rosout-1] killing on exit
[master] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
[1mdone[0m
sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 0
s is car_state1
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.966839075089


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:1




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:2


222 self.state_dicts[msg.id][msg.t] is (-2.901474714279175, 73.38558197021484, 4.851410865783691, 14.112841606140137)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:3


self.intersection <utils.Intersection.Intersection instance at 0x7fd1947df878>


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:4


self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7fd1947fc6c8>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:5


maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9000)
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (-3.457002878189087, 71.48393249511719, 4.6425604820251465, 13.884474754333496)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:6




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:7




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: 2.68323159218
y: -60.1247596741
theta: 1.4849036932
speed: 13.5980682373
id: 0
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: 2.68323159218
y: -60.1247596741
theta: 1.4849036932
speed: 13.5980682373
id: 0
t: 8
xxx after update is x: 3.03729605675
y: -59.6573829651
theta: 1.56109309196
speed: 13.571062088
id: 0
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.pysim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 1
s is car_state0
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.96635389328


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:1




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:2


222 self.state_dicts[msg.id][msg.t] is (2.927396774291992, -63.47365188598633, 1.4654115438461304, 13.29678726196289)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:3


self.intersection <utils.Intersection.Intersection instance at 0x7f04401ab830>


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:4


self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f04401c6ab8>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:5


maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (3.4825026988983154, -62.20570755004883, 1.5583128929138184, 14.158233642578125)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:6


maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9001)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:7




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: -3.36786651611
y: 69.6552047729
theta: 4.54756546021
speed: 14.001493454
id: 1
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: -3.36786651611
y: 69.6552047729
theta: 4.54756546021
speed: 14.001493454
id: 1
t: 8
xxx after update is x: -2.78952884674
y: 69.2436752319
theta: 4.63421440125
speed: 14.0106830597
id: 1
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: -2.78952884674
y: 69.2436752319
theta: 4.63421440125
speed: 14.0106830597
id: 1
t: 9
xxx after update is x: -3.21414875984
y: 68.7682876587
theta: 4.60897731781
speed: 13.6265707016
id: 1
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.32201636825664104, 0.7353875911102403]
222 self.state_dicts[msg.id][msg.t] is (3.261136770248413, -58.760459899902344, 1.5682549476623535, 13.692646026611328)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: -3.21414875984
y: 68.7682876587
theta: 4.60897731781
speed: 13.6265707016
id: 1
t: 10
xxx after update is x: -3.23951363564
y: 68.703125
theta: 4.67203187943
speed: 13.7011575699
id: 1
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: -3.23951363564
y: 68.703125
theta: 4.67203187943
speed: 13.7011575699
id: 1
t: 11
xxx after update is x: -3.96675443649
y: 67.6081924438
theta: 4.65014886856
speed: 13.8930215836
id: 1
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: -3.96675443649
y: 67.6081924438
theta: 4.65014886856
speed: 13.8930215836
id: 1
t: 12
xxx after update is x: -3.52971529961
y: 67.3651580811
theta: 4.66104364395
speed: 14.295085907
id: 1
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.577777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.3974238271229157, 1.0]
222 self.state_dicts[msg.id][msg.t] is (2.5851659774780273, -57.38152313232422, 1.6153275966644287, 13.825234413146973)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: -3.52971529961
y: 67.3651580811
theta: 4.66104364395
speed: 14.295085907
id: 1
t: 13
xxx after update is x: -3.46862030029
y: 66.2962112427
theta: 4.86276435852
speed: 13.8881855011
id: 1
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: -3.46862030029
y: 66.2962112427
theta: 4.86276435852
speed: 13.8881855011
id: 1
t: 14
xxx after update is x: -3.28701853752
y: 65.476776123
theta: 4.59748458862
speed: 13.432510376
id: 1
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: -3.28701853752
y: 65.476776123
theta: 4.59748458862
speed: 13.432510376
id: 1
t: 15
xxx after update is x: -3.04228639603
y: 65.2677459717
theta: 4.71717071533
speed: 13.5647344589
id: 1
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4081700621309021, 0]
222 self. in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: 3.03729605675
y: -59.6573829651
theta: 1.56109309196
speed: 13.571062088
id: 0
t: 9
xxx after update is x: 3.26113677025
y: -58.7604598999
theta: 1.56825494766
speed: 13.6926460266
id: 0
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: 3.26113677025
y: -58.7604598999
theta: 1.56825494766
speed: 13.6926460266
id: 0
t: 10
xxx after update is x: 3.58718085289
y: -57.8434104919
theta: 1.56125843525
speed: 14.0881242752
id: 0
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.25777787704590793, 0.32918465481393794]
222 self.state_dicts[msg.id][msg.t] is (-3.239513635635376, 68.703125, 4.672031879425049, 13.701157569885254)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: 3.58718085289
y: -57.8434104919
theta: 1.56125843525
speed: 14.0881242752
id: 0
t: 11
xxx after update is x: 3.39802932739
y: -57.8384017944
theta: 1.6962749958
speed: 14.1646032333
id: 0
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.533333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: 3.39802932739
y: -57.8384017944
theta: 1.6962749958
speed: 14.1646032333
id: 0
t: 12
xxx after update is x: 2.58516597748
y: -57.3815231323
theta: 1.61532759666
speed: 13.8252344131
id: 0
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: 2.58516597748
y: -57.3815231323
theta: 1.61532759666
speed: 13.8252344131
id: 0
t: 13
xxx after update is x: 2.73689007759
y: -55.9570274353
theta: 1.78146183491
speed: 13.9208641052
id: 0
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: 2.73689007759
y: -55.9570274353
theta: 1.78146183491
speed: 13.9208641052
id: 0
t: 14
xxx after update is x: 3.67301511765
y: -55.7453079224
theta: 1.37032067776
speed: 13.687497139
id: 0
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3658905471978768, 0.29685899916329617]
222 self.state_dicts[msg.id][msg.t] is (-3.2870185375213623, 65.47677612304688, 4.597484588623047, 13.432510375976562)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: 3.67301511765
y: -55.7453079224
theta: 1.37032067776
speed: 13.687497139
id: 0
t: 15
xxx after update is x: 3.31353354454
y: -55.4098472595
theta: 1.52074325085
speed: 13.8197422028
id: 0
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update functistate_dicts[msg.id][msg.t] is (3.3135335445404053, -55.409847259521484, 1.5207432508468628, 13.819742202758789)

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: -3.04228639603
y: 65.2677459717
theta: 4.71717071533
speed: 13.5647344589
id: 1
t: 16
xxx after update is x: -3.6934659481
y: 64.0032119751
theta: 4.78143644333
speed: 13.5545730591
id: 1
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion

if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: -3.6934659481
y: 64.0032119751
theta: 4.78143644333
speed: 13.5545730591
id: 1
t: 17
xxx after update is x: -3.34801912308
y: 64.2717514038
theta: 4.55308675766
speed: 13.7053585052
id: 1
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: -3.34801912308
y: 64.2717514038
theta: 4.55308675766
speed: 13.7053585052
id: 1
t: 18
xxx after update is x: -3.22217798233
y: 63.294002533
theta: 4.76466035843
speed: 14.1355981827
id: 1
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4354308710220717, 0]
222 self.state_dicts[msg.id][msg.t] is (3.434685468673706, -52.98316192626953, 1.6004830598831177, 13.75671100616455)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: -3.22217798233
y: 63.294002533
theta: 4.76466035843
speed: 14.1355981827
id: 1
t: 19
xxx after update is x: -3.44466972351
y: 62.9180831909
theta: 4.60262441635
speed: 13.8107452393
id: 1
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.888888888889






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: -3.44466972351
y: 62.9180831909
theta: 4.60262441635
speed: 13.8107452393
id: 1
t: 20
xxx after update is x: -2.65150904655
y: 61.5370559692
theta: 4.7574672699
speed: 13.9871835709
id: 1
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: -2.65150904655
y: 61.5370559692
theta: 4.7574672699
speed: 13.9871835709
id: 1
t: 21
xxx after update is x: -2.97925925255
y: 61.3935813904
theta: 4.51543712616
speed: 13.6032457352
id: 1
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.42660421374119684, 0]
222 self.state_dicts[msg.id][msg.t] is (3.4013047218322754, -51.28642654418945, 1.5315760374069214, 13.841560363769531)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: -2.97925925255
y: 61.3935813904
theon 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: 3.31353354454
y: -55.4098472595
theta: 1.52074325085
speed: 13.8197422028
id: 0
t: 16
xxx after update is x: 3.19024014473
y: -54.6159210205
theta: 1.80159974098
speed: 13.8585014343
id: 0
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: 3.19024014473
y: -54.6159210205
theta: 1.80159974098
speed: 13.8585014343
id: 0
t: 17
xxx after update is x: 3.07304120064
y: -53.9780883789
theta: 1.69782185555
speed: 13.8710098267
id: 0
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.30632512074916957, 0.3464250840031115]
222 self.state_dicts[msg.id][msg.t] is (-3.3480191230773926, 64.2717514038086, 4.553086757659912, 13.705358505249023)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: 3.07304120064
y: -53.9780883789
theta: 1.69782185555
speed: 13.8710098267
id: 0
t: 18
xxx after update is x: 3.43468546867
y: -52.9831619263
theta: 1.60048305988
speed: 13.7567110062
id: 0
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.844444444444






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: 3.43468546867
y: -52.9831619263
theta: 1.60048305988
speed: 13.7567110062
id: 0
t: 19
xxx after update is x: 3.54695916176
y: -52.4204101562
theta: 1.672701478
speed: 14.0855522156
id: 0
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: 3.54695916176
y: -52.4204101562
theta: 1.672701478
speed: 14.0855522156
id: 0
t: 20
xxx after update is x: 3.0645635128
y: -52.1697654724
theta: 1.39297616482
speed: 13.8375062943
id: 0
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: 3.0645635128
y: -52.1697654724
theta: 1.39297616482
speed: 13.8375062943
id: 0
t: 21
xxx after update is x: 3.40130472183
y: -51.2864265442
theta: 1.53157603741
speed: 13.8415603638
id: 0
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.35287671238688345, 0.2921138106513053]
222 self.state_dicts[msg.id][msg.t] is (-2.9792592525482178, 61.39358139038086, 4.515437126159668, 13.603245735168457)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: 3.40130472183
y: -51.2864265442
theta: 1.53157603741
speed: 13.8415603638
id: 0
t: 22
xxx after update is x: 3.08421397209
y: -50.9452514648
theta: 1.56939792633
speed: 14.1407632828
id: 0
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
tarta: 4.51543712616
speed: 13.6032457352
id: 1
t: 22
xxx after update is x: -3.59230995178
y: 60.3879470825
theta: 4.6958770752
speed: 13.4698381424
id: 1
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: -3.59230995178
y: 60.3879470825
theta: 4.6958770752
speed: 13.4698381424
id: 1
t: 23
xxx after update is x: -2.70424008369
y: 59.9529762268
theta: 4.72911119461
speed: 14.0678119659
id: 1
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3517525870525194, 0]
222 self.state_dicts[msg.id][msg.t] is (3.372370719909668, -50.46908187866211, 1.4796780347824097, 13.873342514038086)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: -2.70424008369
y: 59.9529762268
theta: 4.72911119461
speed: 14.0678119659
id: 1
t: 24
xxx after update is x: -3.23088788986
y: 59.6970367432
theta: 4.72464561462
speed: 13.8593111038
id: 1
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: -3.23088788986
y: 59.6970367432
theta: 4.72464561462
speed: 13.8593111038
id: 1
t: 25
xxx after update is x: -3.19377398491
y: 58.5715293884
theta: 4.72039699554
speed: 13.8122987747
id: 1
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.15555555556






self.maneuver_requested None
xxx before update is x: -3.19377398491
y: 58.5715293884
theta: 4.72039699554
speed: 13.8122987747
id: 1
t: 26
xxx after update is x: -3.15796661377
y: 54.2516441345
theta: 4.53877592087
speed: 13.9004077911
id: 1
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:27




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.15796661377
y: 54.2516441345
theta: 4.53877592087
speed: 13.9004077911
id: 1
t: 27
xxx after update is x: -3.25749635696
y: 54.2422981262
theta: 4.57824325562
speed: 13.7783336639
id: 1
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:28


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: -3.25749635696
y: 54.2422981262
theta: 4.57824325562
speed: 13.7783336639
id: 1
t: 28
xxx after update is x: -3.74719595909
y: 53.8049812317
theta: 4.72664642334
speed: 14.1962203979
id: 1
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3729714405719637, 0]
222 self.state_dicts[msg.id][msg.t] is (2.7100443840026855, -43.880035400390625, 1.5156517028808594, 13.915655136108398)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: -3.74719595909
y: 53.8049812317
theta: 4.7266464getspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: 3.08421397209
y: -50.9452514648
theta: 1.56939792633
speed: 14.1407632828
id: 0
t: 23
xxx after update is x: 3.37237071991
y: -50.4690818787
theta: 1.47967803478
speed: 13.873342514
id: 0
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: 3.37237071991
y: -50.4690818787
theta: 1.47967803478
speed: 13.873342514
id: 0
t: 24
xxx after update is x: 2.9081401825
y: -49.1962623596
theta: 1.54936790466
speed: 14.0682678223
id: 0
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3473284568728201, 0.30807058629299017]
222 self.state_dicts[msg.id][msg.t] is (-3.2308878898620605, 59.69703674316406, 4.724645614624023, 13.8593111038208)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: 2.9081401825
y: -49.1962623596
theta: 1.54936790466
speed: 14.0682678223
id: 0
t: 25
xxx after update is x: 3.70090341568
y: -48.5781898499
theta: 1.58232212067
speed: 13.9360513687
id: 0
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:27




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: 3.70090341568
y: -48.5781898499
theta: 1.58232212067
speed: 13.9360513687
id: 0
t: 26
xxx after update is x: 3.29463410378
y: -44.6606674194
theta: 1.62424778938
speed: 13.8118343353
id: 0
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.29463410378
y: -44.6606674194
theta: 1.62424778938
speed: 13.8118343353
id: 0
t: 27
xxx after update is x: 3.38148832321
y: -44.7342681885
theta: 1.70260679722
speed: 13.6778507233
id: 0
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.24444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: 3.38148832321
y: -44.7342681885
theta: 1.70260679722
speed: 13.6778507233
id: 0
t: 28
xxx after update is x: 2.710044384
y: -43.8800354004
theta: 1.51565170288
speed: 13.9156551361
id: 0
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.710044384
y: -43.8800354004
theta: 1.51565170288
speed: 13.9156551361
id: 0
t: 29
xxx after update is x: 3.48388624191
y: -42.9136543274
theta: 1.38772213459
speed: 13.9940042496
id: 0
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:30




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: 3.48388624191
y: -42.9136543274
theta: 1.38772213459
speed: 13.9940042496
id: 0
t: 30
xxx after update is x: 2.88588571548
y: -42.311340332
theta: 1.58517169952
speed: 13.7908182144
id: 0
t: 32334
speed: 14.1962203979
id: 1
t: 29
xxx after update is x: -3.27800035477
y: 53.1842308044
theta: 4.83889055252
speed: 13.915304184
id: 1
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: -3.27800035477
y: 53.1842308044
theta: 4.83889055252
speed: 13.915304184
id: 1
t: 30
xxx after update is x: -3.67804574966
y: 52.2117500305
theta: 4.64679193497
speed: 13.8466482162
id: 1
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: -3.67804574966
y: 52.2117500305
theta: 4.64679193497
speed: 13.8466482162
id: 1
t: 31
xxx after update is x: -3.3007979393
y: 51.8297424316
theta: 4.76717472076
speed: 13.5675401688
id: 1
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.11489386632231303, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1157310009002686, -42.0948486328125, 1.5672324895858765, 13.96605110168457)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: -3.3007979393
y: 51.8297424316
theta: 4.76717472076
speed: 13.5675401688
id: 1
t: 32
xxx after update is x: -3.18214130402
y: 51.2328300476
theta: 4.73295211792
speed: 13.634850502
id: 1
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: -3.18214130402
y: 51.2328300476
theta: 4.73295211792
speed: 13.634850502
id: 1
t: 33
xxx after update is x: -2.71939325333
y: 50.3612251282
theta: 4.6777677536
speed: 13.846373558
id: 1
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.058941202464203264, 0]
222 self.state_dicts[msg.id][msg.t] is (2.540203094482422, -40.438148498535156, 1.5536872148513794, 14.057339668273926)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: -2.71939325333
y: 50.3612251282
theta: 4.6777677536
speed: 13.846373558
id: 1
t: 34
xxx after update is x: -3.09800410271
y: 49.6687202454
theta: 4.69619941711
speed: 14.2784967422
id: 1
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.55555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: -3.09800410271
y: 49.6687202454
theta: 4.69619941711
speed: 14.2784967422
id: 1
t: 35
xxx after update is x: -3.03826141357
y: 49.2542648315
theta: 4.60749101639
speed: 14.0176134109
id: 1
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.28563689101288786, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1429200172424316, -39.76289749145508, 1.535187840461731, 13.89123821258545)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm 1
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.2786327795672542, 0.35797002975122927]
222 self.state_dicts[msg.id][msg.t] is (-3.6780457496643066, 52.21175003051758, 4.646791934967041, 13.846648216247559)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: 2.88588571548
y: -42.311340332
theta: 1.58517169952
speed: 13.7908182144
id: 0
t: 31
xxx after update is x: 3.1157310009
y: -42.0948486328
theta: 1.56723248959
speed: 13.9660511017
id: 0
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: 3.1157310009
y: -42.0948486328
theta: 1.56723248959
speed: 13.9660511017
id: 0
t: 32
xxx after update is x: 3.648427248
y: -41.1268196106
theta: 1.66956269741
speed: 14.2206859589
id: 0
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: 3.648427248
y: -41.1268196106
theta: 1.66956269741
speed: 14.2206859589
id: 0
t: 33
xxx after update is x: 2.54020309448
y: -40.4381484985
theta: 1.55368721485
speed: 14.0573396683
id: 0
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.54020309448
y: -40.4381484985
theta: 1.55368721485
speed: 14.0573396683
id: 0
t: 34
xxx after update is x: 3.17829442024
y: -39.8018569946
theta: 1.43447363377
speed: 13.7560815811
id: 0
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:35




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: 3.17829442024
y: -39.8018569946
theta: 1.43447363377
speed: 13.7560815811
id: 0
t: 35
xxx after update is x: 3.14292001724
y: -39.7628974915
theta: 1.53518784046
speed: 13.8912382126
id: 0
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.6






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: 3.14292001724
y: -39.7628974915
theta: 1.53518784046
speed: 13.8912382126
id: 0
t: 36
xxx after update is x: 3.27548718452
y: -39.0802230835
theta: 1.62949156761
speed: 13.8858041763
id: 0
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0228618955930485, 0.012956616375888795]
222 self.state_dicts[msg.id][msg.t] is (-3.307584762573242, 48.54201126098633, 4.661864757537842, 13.689905166625977)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: 3.27548718452
y: -39.0802230835
theta: 1.62949156761
speed: 13.8858041763
id: 0
t: 37
xxx after update is x: 3.35572981834
y: -37.794506073
theta: 1.58859670162
speed: 14.1004209518
id: 0
t: 38
maneuver_negotiat= False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: -3.03826141357
y: 49.2542648315
theta: 4.60749101639
speed: 14.0176134109
id: 1
t: 36
xxx after update is x: -3.30758476257
y: 48.542011261
theta: 4.66186475754
speed: 13.6899051666
id: 1
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.23481360574301044, 0]
222 self.state_dicts[msg.id][msg.t] is (3.275487184524536, -39.080223083496094, 1.6294915676116943, 13.885804176330566)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: -3.30758476257
y: 48.542011261
theta: 4.66186475754
speed: 13.6899051666
id: 1
t: 37
xxx after update is x: -3.47874689102
y: 48.2669334412
theta: 4.66045427322
speed: 13.7115745544
id: 1
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: -3.47874689102
y: 48.2669334412
theta: 4.66045427322
speed: 13.7115745544
id: 1
t: 38
xxx after update is x: -3.60829138756
y: 47.5114784241
theta: 4.79942750931
speed: 14.2226991653
id: 1
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.28930019682378466, 0]
222 self.state_dicts[msg.id][msg.t] is (3.5346734523773193, -37.31051254272461, 1.5088412761688232, 13.843585968017578)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: -3.60829138756
y: 47.5114784241
theta: 4.79942750931
speed: 14.2226991653
id: 1
t: 39
xxx after update is x: -3.5111041069
y: 46.1967697144
theta: 4.78189516068
speed: 14.1586380005
id: 1
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: -3.5111041069
y: 46.1967697144
theta: 4.78189516068
speed: 14.1586380005
id: 1
t: 40
xxx after update is x: -3.62509894371
y: 45.654209137
theta: 4.75749158859
speed: 13.4003543854
id: 1
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.2537524082633181, 0]
222 self.state_dicts[msg.id][msg.t] is (3.4805634021759033, -36.10481262207031, 1.4995189905166626, 13.777132034301758)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: -3.62509894371
y: 45.654209137
theta: 4.75749158859
speed: 13.4003543854
id: 1
t: 41
xxx after update is x: -3.40408563614
y: 45.5354957581
theta: 4.71559333801
speed: 13.7245559692
id: 1
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: -3.40408563614
y: 45.5354957581
theta: 4.71559333801
speed: 13.7245559692
id: 1
t: 42
xxx after update is x: -3.30885267258
y: 45.1133613586
thir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: 3.35572981834
y: -37.794506073
theta: 1.58859670162
speed: 14.1004209518
id: 0
t: 38
xxx after update is x: 3.53467345238
y: -37.3105125427
theta: 1.50884127617
speed: 13.843585968
id: 0
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.21592795464168124, 0.607445576494591]
222 self.state_dicts[msg.id][msg.t] is (-3.6082913875579834, 47.511478424072266, 4.799427509307861, 14.222699165344238)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: 3.53467345238
y: -37.3105125427
theta: 1.50884127617
speed: 13.843585968
id: 0
t: 39
xxx after update is x: 3.36104559898
y: -37.2602043152
theta: 1.56741058826
speed: 13.7749042511
id: 0
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.6898529814542687, 0.29061043744994913]
222 self.state_dicts[msg.id][msg.t] is (-3.511104106903076, 46.19676971435547, 4.781895160675049, 14.158638000488281)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: 3.36104559898
y: -37.2602043152
theta: 1.56741058826
speed: 13.7749042511
id: 0
t: 40
xxx after update is x: 3.48056340218
y: -36.1048126221
theta: 1.49951899052
speed: 13.7771320343
id: 0
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: 3.48056340218
y: -36.1048126221
theta: 1.49951899052
speed: 13.7771320343
id: 0
t: 41
xxx after update is x: 3.22173070908
y: -35.3865623474
theta: 1.61533546448
speed: 13.9818468094
id: 0
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.35043108400950307, 0.07464414552460999]
222 self.state_dicts[msg.id][msg.t] is (-3.404085636138916, 45.53549575805664, 4.715593338012695, 13.724555969238281)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: 3.22173070908
y: -35.3865623474
theta: 1.61533546448
speed: 13.9818468094
id: 0
t: 42
xxx after update is x: 3.60051751137
y: -35.279083252
theta: 1.63198280334
speed: 14.1403999329
id: 0
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.91111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: 3.60051751137
y: -35.279083252
theta: 1.63198280334
speed: 14.1403999329
id: 0
t: 43
xxx after update is x: 3.21612429619
y: -34.547039032
theta: 1.35036695004
speed: 13.5499839783
id: 0
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
ieta: 4.9160323143
speed: 14.0208530426
id: 1
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.45905337182282435, 0]
222 self.state_dicts[msg.id][msg.t] is (3.600517511367798, -35.279083251953125, 1.6319828033447266, 14.140399932861328)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.91111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: -3.30885267258
y: 45.1133613586
theta: 4.9160323143
speed: 14.0208530426
id: 1
t: 43
xxx after update is x: -3.43078112602
y: 44.4412994385
theta: 4.88826227188
speed: 13.8150186539
id: 1
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: -3.43078112602
y: 44.4412994385
theta: 4.88826227188
speed: 13.8150186539
id: 1
t: 44
xxx after update is x: -3.52989292145
y: 43.732460022
theta: 4.70539093018
speed: 13.9532527924
id: 1
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: -3.52989292145
y: 43.732460022
theta: 4.70539093018
speed: 13.9532527924
id: 1
t: 45
xxx after update is x: -3.10338592529
y: 42.8601722717
theta: 4.67938137054
speed: 14.1448793411
id: 1
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: -3.10338592529
y: 42.8601722717
theta: 4.67938137054
speed: 14.1448793411
id: 1
t: 46
xxx after update is x: -3.51486754417
y: 42.8216094971
theta: 4.61859369278
speed: 13.7996082306
id: 1
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: -3.51486754417
y: 42.8216094971
theta: 4.61859369278
speed: 13.7996082306
id: 1
t: 47
xxx after update is x: -3.32860183716
y: 41.3620986938
theta: 4.82339048386
speed: 13.9394617081
id: 1
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: -3.32860183716
y: 41.3620986938
theta: 4.82339048386
speed: 13.9394617081
id: 1
t: 48
xxx after update is x: -3.16393184662
y: 40.3916931152
theta: 4.58672237396
speed: 13.7713460922
id: 1
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3241155243796093, 0]
222 self.state_dicts[msg.id][msg.t] is (3.045243978500366, -31.619619369506836, 1.6291533708572388, 13.768640518188477)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: -3.16393184662
y: 40.3916931152
theta: 4.58672237396
speed: 13.7713460922
id: 1
t: 49
xxx after update is x: -3.90368103981
y: 40.1778182983
theta: 4.6013655n spin function, finish the n times spin:45

xxx before update is x: 3.21612429619
y: -34.547039032
theta: 1.35036695004
speed: 13.5499839783
id: 0
t: 44
xxx after update is x: 4.02761220932
y: -33.9775428772
theta: 1.64328157902
speed: 13.9311771393
id: 0
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: 4.02761220932
y: -33.9775428772
theta: 1.64328157902
speed: 13.9311771393
id: 0
t: 45
xxx after update is x: 3.03307247162
y: -32.7093963623
theta: 1.46154022217
speed: 14.0020217896
id: 0
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: 3.03307247162
y: -32.7093963623
theta: 1.46154022217
speed: 14.0020217896
id: 0
t: 46
xxx after update is x: 3.68025612831
y: -32.8543052673
theta: 1.51872456074
speed: 14.0059156418
id: 0
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: 3.68025612831
y: -32.8543052673
theta: 1.51872456074
speed: 14.0059156418
id: 0
t: 47
xxx after update is x: 3.15437626839
y: -31.906879425
theta: 1.5414031744
speed: 13.9826974869
id: 0
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.474744306463259, 0.3039690050065089]
222 self.state_dicts[msg.id][msg.t] is (-3.328601837158203, 41.362098693847656, 4.823390483856201, 13.939461708068848)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: 3.15437626839
y: -31.906879425
theta: 1.5414031744
speed: 13.9826974869
id: 0
t: 48
xxx after update is x: 3.0452439785
y: -31.6196193695
theta: 1.62915337086
speed: 13.7686405182
id: 0
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: 3.0452439785
y: -31.6196193695
theta: 1.62915337086
speed: 13.7686405182
id: 0
t: 49
xxx after update is x: 2.95600128174
y: -30.6543312073
theta: 1.51520383358
speed: 14.0200462341
id: 0
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.95600128174
y: -30.6543312073
theta: 1.51520383358
speed: 14.0200462341
id: 0
t: 50
xxx after update is x: 2.94562506676
y: -29.7851638794
theta: 1.66395139694
speed: 14.1805009842
id: 0
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:51




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.94562506676
y: -29.7851638794
theta: 1.66395139694
speed: 14.1805009842
id: 0
t: 51
xxx after update is x: 3.21367526054
y: -30.0439300537
theta: 1.6798517704
speed: 13.8253698349
id: 0
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:52


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.31111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:53




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: 3.21367526054
y: -30.0439300537
theta: 1.6798517704
speed: 13.8253698349
id: 0
t: 52
xxx after update is x: 2.91709184647
y: -28.1801872253
theta: 1.60651504993
speed: 13.7646083832
id: 0
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:55




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:56




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: 2.91709184647
y: -28.1801872253
theta: 1.60651504993
speed: 13.7646083832
id: 0
t: 53
xxx after update is x: 3.39213991165
y: -28.2937221527
theta: 1.38749790192
speed: 13.7065944672
id: 0
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.39213991165
y: -28.2937221527
theta: 1.38749790192
speed: 13.7065944672
id: 0
t: 54
xxx after update is x: 3.57625174522
y: -27.4826984406
theta: 1.54099082947
speed: 13.8006010056
id: 0
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.57625174522
y: -27.4826984406
theta: 1.54099082947
speed: 13.8006010056
id: 0
t: 55
xxx after update is x: 3.53492164612
y: -25.523519516
theta: 1.65205514431
speed: 13.1542739868
id: 0
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.53492164612
y: -25.523519516
theta: 1.65205514431
speed: 13.1542739868
id: 0
t: 56
xxx after update is x: 3.18191623688
y: -25.4025287628
theta: 1.5463103056
speed: 13.5335674286
id: 0
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.53333333333






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: 3.18191623688
y: -25.4025287628
theta: 1.5463103056
speed: 13.5335674286
id: 0
t: 57
xxx after update is x: 3.92649078369
y: -24.4670772552
theta: 1.59605038166
speed: 13.1942043304
id: 0
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.25241539156267556, 0.0695030360544991]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: 3.92649078369
y: -24.4670772552
theta: 1.59605038166
speed: 13.1942043304
id: 0
t: 58
xxx after update is x: 3.22584986687
y: -23.5491828918
theta: 1.69031155109
speed: 12.6944236755
id: 0
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 3.22584986687
y: -23.5491828918
theta: 1.69031155109
speed: 12.6944236755
id: 0
t: 59
xxx after update is x: 3.81247186661
y: -23.874256134
theta: 1.4952814579
speed: 12.7142696381
id: 0
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:60




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 3.81247186661
y: -23.874256134
th6625
speed: 13.8293676376
id: 1
t: 50maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.22222222222






self.maneuver_requested None

maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.90368103981
y: 40.1778182983
theta: 4.60136556625
speed: 13.8293676376
id: 1
t: 50
xxx after update is x: -3.71005010605
y: 39.7713546753
theta: 4.60342693329
speed: 13.7169523239
id: 1
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:51


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:52


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.26666666667






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:53




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: -3.71005010605
y: 39.7713546753
theta: 4.60342693329
speed: 13.7169523239
id: 1
t: 51
xxx after update is x: -3.56549787521
y: 39.3456535339
theta: 4.66174173355
speed: 13.8268022537
id: 1
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.56549787521
y: 39.3456535339
theta: 4.66174173355
speed: 13.8268022537
id: 1
t: 52
xxx after update is x: -3.58921504021
y: 32.6618499756
theta: 4.74273061752
speed: 13.6695318222
id: 1
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.58921504021
y: 32.6618499756
theta: 4.74273061752
speed: 13.6695318222
id: 1
t: 53
xxx after update is x: -3.14695572853
y: 33.1521263123
theta: 4.81432294846
speed: 14.268204689
id: 1
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.14695572853
y: 33.1521263123
theta: 4.81432294846
speed: 14.268204689
id: 1
t: 54
xxx after update is x: -3.47670578957
y: 31.8599853516
theta: 4.78598403931
speed: 14.2132892609
id: 1
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:55




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.47670578957
y: 31.8599853516
theta: 4.78598403931
speed: 14.2132892609
id: 1
t: 55
xxx after update is x: -2.8891146183
y: 31.2229804993
theta: 4.81158542633
speed: 13.3318796158
id: 1
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:56




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:57




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: -2.8891146183
y: 31.2229804993
theta: 4.81158542633
speed: 13.3318796158
id: 1
t: 56
xxx after update is x: -3.67324113846
y: 30.4814167023
theta: 4.67693090439
speed: 14.075720787
id: 1
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.67324113846
y: 30.4814167023
theta: 4.67693090439
speed: 14.075720787
id: 1
t: 57
xxx after update is x: -2.766eta: 1.4952814579
speed: 12.7142696381
id: 0
t: 60
xxx after update is x: 3.57544875145
y: -23.0711841583
theta: 1.48990762234
speed: 12.6874856949
id: 0
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:61




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 3.57544875145
y: -23.0711841583
theta: 1.48990762234
speed: 12.6874856949
id: 0
t: 61
xxx after update is x: 2.92018866539
y: -22.218788147
theta: 1.42041015625
speed: 12.1518287659
id: 0
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:62




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 2.92018866539
y: -22.218788147
theta: 1.42041015625
speed: 12.1518287659
id: 0
t: 62
xxx after update is x: 2.84659647942
y: -21.9831886292
theta: 1.66247296333
speed: 12.2115917206
id: 0
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:63




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 2.84659647942
y: -21.9831886292
theta: 1.66247296333
speed: 12.2115917206
id: 0
t: 63
xxx after update is x: 2.9707262516
y: -20.6534461975
theta: 1.66048634052
speed: 11.2989263535
id: 0
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:64




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 2.9707262516
y: -20.6534461975
theta: 1.66048634052
speed: 11.2989263535
id: 0
t: 64
xxx after update is x: 2.91519141197
y: -20.9784107208
theta: 1.59720134735
speed: 11.6780538559
id: 0
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:65


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.88888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 2.91519141197
y: -20.9784107208
theta: 1.59720134735
speed: 11.6780538559
id: 0
t: 65
xxx after update is x: 3.01121473312
y: -20.877904892
theta: 1.51645970345
speed: 11.1980104446
id: 0
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:66




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:
initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$


maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 1
current clock is 2.93333333333
!!!!after check statue the self.tag is [2.933333333333333, 0, 'left']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 2.93333333333

maneuver_negotiatir.py get membership, in the get_MR function, start
 self.man_init:
xxx before update is x: 3.01121473312
y: -20.877904892
theta: 1.51645970345
speed: 11.1980104446
id: 0
t: 66
xxx after update is x: 2.9377052784
y: -19.8080730438
theta: 1.84907484055
speed: 11.3732004166
id: 0
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:67


membership is [2.6222222222222222, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,2.933333333373817635
y: 30.7263317108
theta: 4.85627365112
speed: 13.6584825516
id: 1
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: -2.76673817635
y: 30.7263317108
theta: 4.85627365112
speed: 13.6584825516
id: 1
t: 58
xxx after update is x: -3.37755179405
y: 29.934463501
theta: 4.62871551514
speed: 14.0698595047
id: 1
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4714666315250588, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2258498668670654, -23.549182891845703, 1.6903115510940552, 12.69442367553711)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: -3.37755179405
y: 29.934463501
theta: 4.62871551514
speed: 14.0698595047
id: 1
t: 59
xxx after update is x: -2.41450762749
y: 28.1880493164
theta: 4.6308889389
speed: 13.9817075729
id: 1
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 2.66666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 2.66666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '2.93333333333', 'Sender': '0', 'Time': '2.93333333333', 'IntendedCourse': 'left', 'Position': ['3.0112147331237793', ' -20.877904891967773', ' 1.5164597034454346'], 'TagID': '0', 'Type': 'GET', 'Velocity': '11'}
car 1 received GET,0,2.93333333333,(3.0112147331237793, -20.877904891967773, 1.5164597034454346),11,1,2.93333333333,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.13037037037
sender travel direction is:  north
sender earliest entering time is:  1.88936142573
sender last entering time is:  2.25703821127
sender last leaving time is:  4.40286075884
my entering time is:  1.62346547671
my leaving time is:  4.19656058304
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 2.66666666667
self.communication_details == 0
sending DENY,1,2.66666666667,(-3.710050106048584, 39.77135467529297, 4.603426933288574),13,1,0,0 to car 0 from car 1


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




xxx before update is x: -2.41450762749
y: 28.1880493164
theta: 4.6308889389
speed: 13.9817075729
id: 1
t: 60
xxx after update is x: -2.73929595947
y: 28.3377513885
theta: 4.7211894989
speed: 13.6496229172
id: 1
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:61


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.71111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: -2.73929595947
y: 28.3377513885
theta: 4.7211894989
speed: 13.6496229172
id: 1
t: 61
xxx after update is x: -3.098456621173,(3.0112147331237793, -20.877904891967773, 1.5164597034454346),11,1,2.93333333333,0,left
!!!!change state to get
GET,0,2.93333333333,(3.0112147331237793, -20.877904891967773, 1.5164597034454346),11,1,2.93333333333,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 2.97777777778
self.communication_details == 0
sending GET,0,2.93333333333,(3.0112147331237793, -20.877904891967773, 1.5164597034454346),11,1,2.93333333333,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
Received -->>: 
current clock is 2.97777777778




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 2.97777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '2.66666666667', 'Position': ['(-3.710050106048584', ' 39.77135467529297', ' 4.603426933288574)'], 'Type': 'DENY'}
car 0 received DENY,1,2.66666666667,(-3.710050106048584, 39.77135467529297, 4.603426933288574),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [2.6222222222222222, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [2.6222222222222222, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: 2.9377052784
y: -19.8080730438
theta: 1.84907484055
speed: 11.3732004166
id: 0
t: 67
xxx after update is x: 2.77656364441
y: -19.2688465118
theta: 1.52165663242
speed: 10.5587081909
id: 0
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.77656364441
y: -19.2688465118
theta: 1.52165663242
speed: 10.5587081909
id: 0
t: 68
xxx after update is x: 3.40918374062
y: -19.0214004517
theta: 1.71214091778
speed: 10.3805160522
id: 0
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:69




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.40918374062
y: -19.0214004517
theta: 1.71214091778
speed: 10.3805160522
id: 0
t: 69
xxx after update is x: 3.52065682411
y: -18.4126663208
theta: 1.4925506115
speed: 9.95271015167
id: 0
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:70




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: 3.52065682411
y: -18.4126663208
theta: 1.4925506115
speed: 9.95271015167
id: 0
t: 70
xxx after update is x: 3.31577992439
y: -17.6681442261
theta: 1.47754919529
speed: 10.0359268188
id: 0
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: 3.31577992439
y: -17.6681442261
theta: 1.47754919529
speed: 10.0359268188
id: 0
t: 71
xxx after update is x: 3.1482129097
y: -17.2177143097
theta: 1.62834811211
speed: 9.85401535034
id:
y: 27.5303325653
theta: 4.72852373123
speed: 13.7094917297
id: 1
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: -3.09845662117
y: 27.5303325653
theta: 4.72852373123
speed: 13.7094917297
id: 1
t: 62
xxx after update is x: -3.37899374962
y: 26.643901825
theta: 4.73051643372
speed: 13.7905454636
id: 1
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: -3.37899374962
y: 26.643901825
theta: 4.73051643372
speed: 13.7905454636
id: 1
t: 63
xxx after update is x: -3.428191185
y: 26.582195282
theta: 4.78578948975
speed: 14.1589727402
id: 1
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: -3.428191185
y: 26.582195282
theta: 4.78578948975
speed: 14.1589727402
id: 1
t: 64
xxx after update is x: -3.13886547089
y: 26.0239868164
theta: 4.70702362061
speed: 13.9858751297
id: 1
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.9019312658400767, 0]
Stops!
222 self.state_dicts[msg.id][msg.t] is (2.915191411972046, -20.978410720825195, 1.5972013473510742, 11.678053855895996)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: -3.13886547089
y: 26.0239868164
theta: 4.70702362061
speed: 13.9858751297
id: 1
t: 65
xxx after update is x: -3.42690944672
y: 25.8886795044
theta: 4.56340408325
speed: 13.9122266769
id: 1
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.42690944672
y: 25.8886795044
theta: 4.56340408325
speed: 13.9122266769
id: 1
t: 66
xxx after update is x: -3.37562799454
y: 24.044757843
theta: 4.61361169815
speed: 13.4015169144
id: 1
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:67




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.37562799454
y: 24.044757843
theta: 4.61361169815
speed: 13.4015169144
id: 1
t: 67
xxx after update is x: -2.96837091446
y: 23.6531505585
theta: 4.69590711594
speed: 14.5726766586
id: 1
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:68




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.02222222222






self.maneuver_requested None
xxx before update is x: -2.96837091446
y: 23.6531505585
theta: 4.69590711594
speed: 14.5726766586
id: 1
t: 68
xxx after update is x: -3.68449854851
y: 23.2445411682
theta: 4.58306694031
speed: 13.9637737274
id: 1
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:69


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: -3.68449854851
y: 23.2445411682
theta: 4.58306694031
speed: 13.9637737274
id: 1
t: 69

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:71




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:72




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:73



xxx after update is x: -3.35594987869
y: 22.8013687134
theta: 4.7631187439
speed: 13.5031204224
id: 1
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.35594987869
y: 22.8013687134
theta: 4.7631187439
speed: 13.5031204224
id: 1
t: 70
xxx after update is x: -2.72445225716
y: 21.3009204865
theta: 4.68869543076
speed: 12.7126016617
id: 1
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.72445225716
y: 21.3009204865
theta: 4.68869543076
speed: 12.7126016617
id: 1
t: 71
xxx after update is x: -3.60443997383
y: 20.9883384705
theta: 4.70549631119
speed: 12.4638004303
id: 1
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.60443997383
y: 20.9883384705
theta: 4.70549631119
speed: 12.4638004303
id: 1
t: 72
xxx after update is x: -3.51393866539
y: 20.9155292511
theta: 4.60068225861
speed: 12.8884820938
id: 1
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.24444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.24444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '9', 'Sender': '0', 'TagID': '1', 'Time': '3.2', 'Position': ['(3.1482129096984863', ' -17.217714309692383', ' 1.6283481121063232)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,3.2,(3.1482129096984863, -17.217714309692383, 1.6283481121063232),9,1,2.93333333333,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: -3.51393866539
y: 20.9155292511
theta: 4.60068225861
speed: 12.8884820938
id: 1
t: 73
xxx after update is x: -3.21377444267
y: 20.6796245575
theta: 4.73068809509
speed: 12.2126836777
id: 1
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.09787477994638621, 0.9999999999999999]
222 self.state_dicts[msg.id][msg.t] is (3.37412428855896, -13.477319717407227, 1.5443592071533203, 8.103946685791016)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:
initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$


 self.man_init:
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 1
current clock is 3.28888888889
!!!!after check statue the self.tag is [3.2888888888888888, 1, 'straight']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.28888888889

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.2888888888888888, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
Empty
self.agents_to_ask is []
message is :G 0
t: 72maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.2






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.111111111111111, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 3.2
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.11111111111
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,3.2,(3.1482129096984863, -17.217714309692383, 1.6283481121063232),9,1,2.93333333333,0
maneuver_negotiatir.py start the update_agent_message
current clock is 3.2
self.communication_details == 0
sending RELEASE,0,3.2,(3.1482129096984863, -17.217714309692383, 1.6283481121063232),9,1,2.93333333333,0 to car 1 from car 0


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (-3.5139386653900146, 20.915529251098633, 4.600682258605957, 12.888482093811035)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py finish the update_agent_message
leave the update function 
in spin function, finish the n times spin:73




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:74



maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.1482129097
y: -17.2177143097
theta: 1.62834811211
speed: 9.85401535034
id: 0
t: 72
xxx after update is x: 3.40649747849
y: -13.4838209152
theta: 1.55858123302
speed: 7.7712635994
id: 0
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.40649747849
y: -13.4838209152
theta: 1.55858123302
speed: 7.7712635994
id: 0
t: 73
xxx after update is x: 3.37412428856
y: -13.4773197174
theta: 1.54435920715
speed: 8.10394668579
id: 0
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.37412428856
y: -13.4773197174
theta: 1.54435920715
speed: 8.10394668579
id: 0
t: 74
xxx after update is x: 3.47093009949
y: -13.0868577957
theta: 1.52010321617
speed: 7.18006849289
id: 0
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:75




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: 3.47093009949
y: -13.0868577957
theta: 1.52010321617
speed: 7.18006849289
id: 0
t: 75
xxx after update is x: 2.62524437904
y: -13.5836200714
theta: 1.53781557083
speed: 6.90843105316
id: 0
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: 2.62524437904
y: -13.5836200714
theta: 1.53781557083
speed: 6.90843105316
id: 0
t: 76
xxx after update is x: 3.3268866539
y: -12.4930305481
theta: 1.39264774323
speed: 6.81559944153
id: 0
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.3268866539
y: -12.4930305481
theta: 1.39264774323
speed: 6.81559944153
id: 0
t: 77
xxx after update is x: 2.65122103691
y: -12.1427173615
theta: 1.59201037884
speed: 6.56499528885
iET,1,3.28888888889,(-3.2137744426727295, 20.679624557495117, 4.730688095092773),12,1,3.28888888889,1,straight
!!!!change state to get
finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.28888888889






self.maneuver_requested straight
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.2888888888888888, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 3.28888888889
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.28888888889
self.TMan is 5
Empty
self.agents_to_ask is []
stopped retry timer
deny not in message
maneuver_negotiatir.py in the domaneuver function - start
added car with id 1 to grantlist. current grantlist:  {1: [7.888888888888889, 'straight']}
Doing maneuver
maneuver_negotiatir.py finish the do maneuver function
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:75




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: -3.21377444267
y: 20.6796245575
theta: 4.73068809509
speed: 12.2126836777
id: 1
t: 74
xxx after update is x: -3.64014720917
y: 19.4976482391
theta: 4.62100839615
speed: 13.1218118668
id: 1
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.64014720917
y: 19.4976482391
theta: 4.62100839615
speed: 13.1218118668
id: 1
t: 75
xxx after update is x: -3.32146787643
y: 17.8704986572
theta: 4.7267165184
speed: 11.1384820938
id: 1
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [9.825029993067787e-08, 0]
222 self.state_dicts[msg.id][msg.t] is (2.625244379043579, -13.583620071411133, 1.5378155708312988, 6.908431053161621)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
aaaaaa
aaaaaabbbbb
risk is [0.3919857726946104, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3268866539001465, -12.493030548095703, 1.3926477432250977, 6.81559944152832)
222 self.state_dicts[msg.id][msg.t] is (2.6512210369110107, -12.142717361450195, 1.5920103788375854, 6.564995288848877)
222 self.state_dicts[msg.id][msg.t] is (3.308293342590332, -11.574767112731934, 1.4454883337020874, 6.711514472961426)
222 self.state_dicts[msg.id][msg.t] is (2.985881805419922, -11.649189949035645, 1.6111193895339966, 6.483860969543457)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: -3.32146787643
y: 17.8704986572
theta: 4.7267165184
speed: 11.1384820938
id: 1
t: 76
xxx after update is x: -3.3271920681
y: 16.9763832092
theta: 4.72013950348
speed: 11.2999315262
id: 1
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (2.9179439544677734, -11.536699295043945, 1.46797776222229, 6.3390631675720215)
Received -->>: 
current clock is 3.42222222222




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.42222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '2.93333333333', 'Sender': '0', 'Time': '3.6', 'IntendedCourse': 'left', 'Position': ['2.9179439544677734', ' -11.536699295043945', ' 1.46797776222229'], 'TagID': '0', 'Type': 'GET', 'Velocity': '6'}
car 1 received GET,0,3.6,(2.9179439544677734, -11.536699295043945, 1.46797776222229),6,1,2.93333333333,0,left from  car0
status: 5
d: 0
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:78




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: 2.65122103691
y: -12.1427173615
theta: 1.59201037884
speed: 6.56499528885
id: 0
t: 78
xxx after update is x: 3.30829334259
y: -11.5747671127
theta: 1.4454883337
speed: 6.71151447296
id: 0
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:80


xxx before update is x: 3.30829334259
y: -11.5747671127
theta: 1.4454883337
speed: 6.71151447296
id: 0
t: 79
xxx after update is x: 2.98588180542
y: -11.649189949
theta: 1.61111938953
speed: 6.48386096954
id: 0
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.9293025996885717, 0.022343122367236345]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.98588180542
y: -11.649189949
theta: 1.61111938953
speed: 6.48386096954
id: 0
t: 80
xxx after update is x: 2.91794395447
y: -11.536699295
theta: 1.46797776222
speed: 6.33906316757
id: 0
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:81


maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.6

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.422222222222222, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.6,(2.9179439544677734, -11.536699295043945, 1.46797776222229),6,1,2.93333333333,0,left
!!!!change state to get
GET,0,3.6,(2.9179439544677734, -11.536699295043945, 1.46797776222229),6,1,2.93333333333,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.6
self.communication_details == 0
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.6
sending GET,0,3.6,(2.9179439544677734, -11.536699295043945, 1.46797776222229),6,1,2.93333333333,0,left to car 1 from car 0





self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0

Received -->>: 
current clock is 3.6




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.6
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '12', 'Sender': '1', 'TagID': '1', 'Time': '3.42222222222', 'Position': ['(-3.2137744426727295', ' 20.679624557495117', ' 4.730688095092773)'], 'Type': 'DENY'}
car 0 received DENY,1,3.42222222222,(-3.2137744426727295, 20.679624557495117, 4.730688095092773),12,1,3.28888888889,1 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.422222222222222, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.422222222222222, True, '1']
maneuver_negotiatir.py message_processing,in request maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:78


xxx before update is x: -3.3271920681
y: 16.9763832092
theta: 4.72013950348
speed: 11.2999315262
id: 1
t: 77
xxx after update is x: -3.12370944023
y: 16.4135627747
theta: 4.77705812454
speed: 11.8738613129
id: 1
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion

maneuver_negotiatir.py in no conflict funtion , start
current time is  0.16
sender travel direction is:  north
sender earliest entering time is:  0.87514492765
sender last entering time is:  2.16
sender last leaving time is:  4.53329825642
my entering time is:  0.839332075331
my leaving time is:  2.59866415066
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.46666666667
self.communication_details == 0
sending DENY,1,3.42222222222,(-3.2137744426727295, 20.679624557495117, 4.730688095092773),12,1,3.28888888889,1 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




222 self.state_dicts[msg.id][msg.t] is (3.310300827026367, -10.848133087158203, 1.6498210430145264, 5.994268417358398)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.46666666667






self.maneuver_requested straight


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:79




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:80


xxx before update is x: -3.12370944023
y: 16.4135627747
theta: 4.77705812454
speed: 11.8738613129
id: 1
t: 78
xxx after update is x: -3.08059859276
y: 13.6263465881
theta: 4.89512825012
speed: 13.8712778091
id: 1
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.08059859276
y: 13.6263465881
theta: 4.89512825012
speed: 13.8712778091
id: 1
t: 79
xxx after update is x: -3.656727314
y: 13.4160547256
theta: 4.6859998703
speed: 13.9634828568
id: 1
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (2.8878190517425537, -9.958905220031738, 1.4975059032440186, 4.850035190582275)
222 self.state_dicts[msg.id][msg.t] is (3.717022180557251, -9.890772819519043, 1.5861308574676514, 4.869474411010742)
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.656727314
y: 13.4160547256
theta: 4.6859998703
speed: 13.9634828568
id: 1
t: 80
xxx after update is x: -3.71508669853
y: 9.73146343231
theta: 4.70134592056
speed: 13.8441095352
id: 1
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:81




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.71508669853
y: 9.73146343231
theta: 4.70134592056
speed: 13.8441095352
id: 1
t: 81
xxx after update is x: -3.2271938324
y: 9.91025352478
theta: 4.68848752975
speed: 13.9331703186
id: 1
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:82


Received -->>: 
current clock is 3.64444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.64444444444
maneuver_negotiatiprocessing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish
finish try maneuver


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.91794395447
y: -11.536699295
theta: 1.46797776222
speed: 6.33906316757
id: 0
t: 81
xxx after update is x: 3.31030082703
y: -10.8481330872
theta: 1.64982104301
speed: 5.99426841736
id: 0
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:82




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.31030082703
y: -10.8481330872
theta: 1.64982104301
speed: 5.99426841736
id: 0
t: 82
xxx after update is x: 2.88781905174
y: -9.95890522003
theta: 1.49750590324
speed: 4.85003519058
id: 0
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:83




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.88781905174
y: -9.95890522003
theta: 1.49750590324
speed: 4.85003519058
id: 0
t: 83
xxx after update is x: 3.71702218056
y: -9.89077281952
theta: 1.58613085747
speed: 4.86947441101
id: 0
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:84


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.73333333333






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
membership is [3.5555555555555554, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 3.73333333333
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.55555555556
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,3.73333333333,(3.717022180557251, -9.890772819519043, 1.5861308574676514),4,1,2.93333333333,0
maneuver_negotiatir.py start the update_agent_message
current clock is 3.73333333333
self.communication_details == 0
sending RELEASE,0,3.73333333333,(3.717022180557251, -9.890772819519043, 1.5861308574676514),4,1,2.93333333333,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
xxx before update is x: 3.71702218056
y: -9.89077281952
theta: 1.58613085747
speed: 4.86947441101
id: 0
t: 84
xxx after update is x: 3.59809231758
y: -7.82785463333
theta: 1.64440560341
speed: 2.95403528214
id: 0
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:85




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: 3.59809231758
y: -7.82785463333
theta: 1.64440560341
speed: 2.95403528214
id: 0
t: 85
xxx after update is x: 3.37500023842
y: -8.51077651978
theta: 1.45575284958
speed: 2.90326070786
id: 0
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:86




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.37500023842
y: -8.51077651978
theta: 1.45575284958
speed: 2.90326070786
id: 0
t: 86
xxx after update is x: 2.74813723564
y: -7.82484483719
theta: 1.51866185665
speed: 2.447691679
id: 0
t: 87
maneur.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '4', 'Sender': '0', 'TagID': '1', 'Time': '3.73333333333', 'Position': ['(3.717022180557251', ' -9.890772819519043', ' 1.5861308574676514)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,3.73333333333,(3.717022180557251, -9.890772819519043, 1.5861308574676514),4,1,2.93333333333,0 from  car0
status: 5




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




222 self.state_dicts[msg.id][msg.t] is (3.5980923175811768, -7.827854633331299, 1.6444056034088135, 2.9540352821350098)
222 self.state_dicts[msg.id][msg.t] is (3.375000238418579, -8.51077651977539, 1.4557528495788574, 2.9032607078552246)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.2271938324
y: 9.91025352478
theta: 4.68848752975
speed: 13.9331703186
id: 1
t: 82
xxx after update is x: -2.8614385128
y: 9.2362909317
theta: 4.65960073471
speed: 13.7810325623
id: 1
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:83


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.68888888889






self.maneuver_requested straight
222 self.state_dicts[msg.id][msg.t] is (2.7481372356414795, -7.824844837188721, 1.5186618566513062, 2.4476916790008545)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -2.8614385128
y: 9.2362909317
theta: 4.65960073471
speed: 13.7810325623
id: 1
t: 83
xxx after update is x: -3.25108265877
y: 8.4043340683
theta: 4.63313055038
speed: 13.2567825317
id: 1
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:84


222 self.state_dicts[msg.id][msg.t] is (3.669567108154297, -8.104960441589355, 1.4573224782943726, 2.6162781715393066)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.25108265877
y: 8.4043340683
theta: 4.63313055038
speed: 13.2567825317
id: 1
t: 84
xxx after update is x: -3.05297803879
y: 7.38614416122
theta: 4.66935586929
speed: 12.9751930237
id: 1
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:85




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:86




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.05297803879
y: 7.38614416122
theta: 4.66935586929
speed: 12.9751930237
id: 1
t: 85
xxx after update is x: -3.24365878105
y: 5.71572065353
theta: 4.61467075348
speed: 11.9056806564
id: 1
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (2.8860061168670654, -7.440860748291016, 1.7629326581954956, 1.8979222774505615)
222 self.state_dicts[msg.id][msg.t] is (3.821854591369629, -7.70306396484375, 1.4461793899536133, 1.338354468345642)
xxx before update is x: -3.24365878105
y: 5.71572065353
theta: 4.61467075348
speed: 11.9056806564
id: 1
t: 86
xxx after update is x: -3.59630131721
y: 5.70647478104
theta: 4.7646021843
speed: 12.0667514801
id: 1
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:87


222 self.state_dicts[msg.id][msg.t] is (2.6324098110198975, -8.27098274230957, 1.6994762420654297, 1.3860836029052734)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_initver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:87




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: 2.74813723564
y: -7.82484483719
theta: 1.51866185665
speed: 2.447691679
id: 0
t: 87
xxx after update is x: 3.66956710815
y: -8.10496044159
theta: 1.45732247829
speed: 2.61627817154
id: 0
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:89




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.66956710815
y: -8.10496044159
theta: 1.45732247829
speed: 2.61627817154
id: 0
t: 88
xxx after update is x: 2.88600611687
y: -7.44086074829
theta: 1.7629326582
speed: 1.89792227745
id: 0
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 2.88600611687
y: -7.44086074829
theta: 1.7629326582
speed: 1.89792227745
id: 0
t: 89
xxx after update is x: 3.82185459137
y: -7.70306396484
theta: 1.44617938995
speed: 1.33835446835
id: 0
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:90




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.82185459137
y: -7.70306396484
theta: 1.44617938995
speed: 1.33835446835
id: 0
t: 90
xxx after update is x: 2.63240981102
y: -8.27098274231
theta: 1.69947624207
speed: 1.38608360291
id: 0
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:91




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.63240981102
y: -8.27098274231
theta: 1.69947624207
speed: 1.38608360291
id: 0
t: 91
xxx after update is x: 3.14045548439
y: -7.50297880173
theta: 1.48506999016
speed: 1.33765923977
id: 0
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:92


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.08888888889






self.maneuver_requested left
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 4.08888888889

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.911111111111111, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.08888888889,(3.140455484390259, -7.502978801727295, 1.485069990158081),1,1,2.93333333333,0,left
!!!!change state to get
GET,0,4.08888888889,(3.140455484390259, -7.502978801727295, 1.485069990158081),1,1,2.93333333333,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 4.08888888889
self.communication_details == 0
sending GET,0,4.08888888889,(3.140455484390259, -7.502978801727295, 1.485069990158081),1,1,2.93333333333,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
Received -->>: 
current clock is 4.08888888889




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 4.08888888889
ma:
xxx before update is x: -3.59630131721
y: 5.70647478104
theta: 4.7646021843
speed: 12.0667514801
id: 1
t: 87
xxx after update is x: -3.1047065258
y: 6.62868976593
theta: 4.76661348343
speed: 11.8898019791
id: 1
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:88


222 self.state_dicts[msg.id][msg.t] is (3.140455484390259, -7.502978801727295, 1.485069990158081, 1.337659239768982)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.1047065258
y: 6.62868976593
theta: 4.76661348343
speed: 11.8898019791
id: 1
t: 88
xxx after update is x: -2.92758131027
y: 5.2764787674
theta: 4.61771535873
speed: 11.4387769699
id: 1
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:89


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.95555555556






self.maneuver_requested straight


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
Received -->>: 
current clock is 3.95555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.95555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '2.93333333333', 'Sender': '0', 'Time': '4.08888888889', 'IntendedCourse': 'left', 'Position': ['3.140455484390259', ' -7.502978801727295', ' 1.485069990158081'], 'TagID': '0', 'Type': 'GET', 'Velocity': '1'}
car 1 received GET,0,4.08888888889,(3.140455484390259, -7.502978801727295, 1.485069990158081),1,1,2.93333333333,0,left from  car0
status: 5
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.181728395062
sender travel direction is:  north
sender earliest entering time is:  0.186728395062
sender last entering time is:  2.18172839506
sender last leaving time is:  4.54915976401
my entering time is:  0.181728395062
my leaving time is:  1.13919042187
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.95555555556
self.communication_details == 0
sending DENY,1,3.95555555556,(-2.927581310272217, 5.2764787673950195, 4.617715358734131),11,1,3.28888888889,1 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (3.8305513858795166, -7.4123311042785645, 1.307422399520874, 0.053214143961668015)
xxx before update is x: -2.92758131027
y: 5.2764787674
theta: 4.61771535873
speed: 11.4387769699
id: 1
t: 89
xxx after update is x: -2.70220422745
y: 3.67075610161
theta: 4.82328939438
speed: 10.2304391861
id: 1
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:90




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (3.5694894790649414, -7.999299049377441, 1.6052274703979492, 0.4622540771961212)
xxx before update is x: -2.70220422745
y: 3.67075610161
theta: 4.82328939438
speed: 10.2304391861
id: 1
t: 90
xxx after update is x: -3.80657553673
y: 3.42678952217
theta: 4.85715436935
speed: 9.98100662231
id: 1
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:91




going to the update fneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '11', 'Sender': '1', 'TagID': '1', 'Time': '3.95555555556', 'Position': ['(-2.927581310272217', ' 5.2764787673950195', ' 4.617715358734131)'], 'Type': 'DENY'}
car 0 received DENY,1,3.95555555556,(-2.927581310272217, 5.2764787673950195, 4.617715358734131),11,1,3.28888888889,1 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.9555555555555557, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.9555555555555557, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




maneuver_negotiatir.py in the try maneuver function update -. sfinish
finish try maneuver
xxx before update is x: 3.14045548439
y: -7.50297880173
theta: 1.48506999016
speed: 1.33765923977
id: 0
t: 92
xxx after update is x: 3.83055138588
y: -7.41233110428
theta: 1.30742239952
speed: 0.0532141439617
id: 0
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:93




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.83055138588
y: -7.41233110428
theta: 1.30742239952
speed: 0.0532141439617
id: 0
t: 93
xxx after update is x: 3.56948947906
y: -7.99929904938
theta: 1.6052274704
speed: 0.462254077196
id: 0
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:94




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.56948947906
y: -7.99929904938
theta: 1.6052274704
speed: 0.462254077196
id: 0
t: 94
xxx after update is x: 3.60498547554
y: -7.18928384781
theta: 1.47678089142
speed: -0.453581780195
id: 0
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:95


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.22222222222






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.088888888888889, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.22222222222
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.08888888889
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,4.22222222222,(3.604985475540161, -7.189283847808838, 1.476780891418457),0,1,2.93333333333,0
maneuver_negotiatir.py start the update_agent_message
current clock is 4.22222222222
self.communication_details == 0
sending RELEASE,0,4.22222222222,(3.604985475540161, -7.189283847808838, 1.476780891418457),0,1,2.93333333333,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.60498547554
y: -7.18928384781
theta: 1.47678089142
speed: -0.453581780195
id: 0
t: 95
xxx after update is x: 3.19031453133
y: -7.42531871796
theta: 1.82555258274
speed: 0.093606479466
id: 0
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin functiunction
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (3.604985475540161, -7.189283847808838, 1.476780891418457, -0.4535817801952362)
xxx before update is x: -3.80657553673
y: 3.42678952217
theta: 4.85715436935
speed: 9.98100662231
id: 1
t: 91
xxx after update is x: -3.49532842636
y: 2.87879490852
theta: 4.65051746368
speed: 9.28482627869
id: 1
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:92


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.08888888889






self.maneuver_requested straight


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: -3.49532842636
y: 2.87879490852
theta: 4.65051746368
speed: 9.28482627869
id: 1
t: 92
xxx after update is x: -2.865452528
y: 0.419558882713
theta: 4.68931484222
speed: 6.0616145134
id: 1
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.13333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.13333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '4.22222222222', 'Position': ['(3.604985475540161', ' -7.189283847808838', ' 1.476780891418457)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.22222222222,(3.604985475540161, -7.189283847808838, 1.476780891418457),0,1,2.93333333333,0 from  car0
status: 5




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




leave the update function 
in spin function, finish the n times spin:93




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (3.190314531326294, -7.425318717956543, 1.8255525827407837, 0.09360647946596146)
xxx before update is x: -2.865452528
y: 0.419558882713
theta: 4.68931484222
speed: 6.0616145134
id: 1
t: 93
xxx after update is x: -3.82393884659
y: -0.495443403721
theta: 4.80194377899
speed: 5.85032176971
id: 1
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:94


222 self.state_dicts[msg.id][msg.t] is (2.958709478378296, -7.215862274169922, 1.6104196310043335, -0.14570794999599457)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: -3.82393884659
y: -0.495443403721
theta: 4.80194377899
speed: 5.85032176971
id: 1
t: 94
xxx after update is x: -3.53795409203
y: -0.917684733868
theta: 4.50815963745
speed: 6.06781578064
id: 1
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.880077362060547, -7.392503261566162, 1.4544743299484253, 0.20042940974235535)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: -3.53795409203
y: -0.917684733868
theta: 4.50815963745
speed: 6.06781578064
id: 1
t: 95
xxx after update is x: -3.4567759037
y: -1.33684659004
theta: 4.63928699493
speed: 5.2123875618
id: 1
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.25520658493042, -7.373433589935303, 1.4958988428115845, 0.04713296890258789)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.26666666667






self.maneuver_requested straight


going to the update function
sim.py in the sim.py uon, finish the n times spin:96




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.19031453133
y: -7.42531871796
theta: 1.82555258274
speed: 0.093606479466
id: 0
t: 96
xxx after update is x: 2.95870947838
y: -7.21586227417
theta: 1.610419631
speed: -0.145707949996
id: 0
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:97




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.95870947838
y: -7.21586227417
theta: 1.610419631
speed: -0.145707949996
id: 0
t: 97
xxx after update is x: 3.88007736206
y: -7.39250326157
theta: 1.45447432995
speed: 0.200429409742
id: 0
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:98




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.88007736206
y: -7.39250326157
theta: 1.45447432995
speed: 0.200429409742
id: 0
t: 98
xxx after update is x: 3.25520658493
y: -7.37343358994
theta: 1.49589884281
speed: 0.0471329689026
id: 0
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:99


maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 4.4

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.266666666666667, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
Empty
self.agents_to_ask is []
message is :GET,0,4.4,(3.25520658493042, -7.373433589935303, 1.4958988428115845),0,1,2.93333333333,0,left
!!!!change state to get
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.4






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.266666666666667, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.4
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.26666666667
self.TMan is 5
Empty
self.agents_to_ask is []
stopped retry timer
deny not in message
maneuver_negotiatir.py in the domaneuver function - start


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
finish try maneuver
added car with id 0 to grantlist. current grantlist:  {0: [8.244444444444444, 'left']}
Doing maneuver
maneuver_negotiatir.py finish the do maneuver function
xxx before update is x: 3.25520658493
y: -7.37343358994
theta: 1.49589884281
speed: 0.0471329689026
id: 0
t: 99
xxx after update is x: 3.54370474815
y: -7.26149272919
theta: 1.58003675938
speed: 0.0608802698553
id: 0
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:100




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.54370474815
y: -7.26149272919
theta: 1.58003675938
speed: 0.0608802698553
id: 0
t: 100
xxx after update is x: 3.6925163269
y: -7.43526649475
theta: 1.44974708557
speed: 0.335578322411
id: 0
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update functiopdate function 
targetspeed < self.speed:
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: -3.4567759037
y: -1.33684659004
theta: 4.63928699493
speed: 5.2123875618
id: 1
t: 96
xxx after update is x: -3.43405151367
y: -2.93599104881
theta: 4.61895608902
speed: 2.63333511353
id: 1
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:97




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.43405151367
y: -2.93599104881
theta: 4.61895608902
speed: 2.63333511353
id: 1
t: 97
xxx after update is x: -2.61548399925
y: -2.79077720642
theta: 4.76198625565
speed: 2.97239136696
id: 1
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:98


222 self.state_dicts[msg.id][msg.t] is (3.5437047481536865, -7.261492729187012, 1.5800367593765259, 0.06088026985526085)
222 self.state_dicts[msg.id][msg.t] is (3.692516326904297, -7.435266494750977, 1.449747085571289, 0.3355783224105835)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.35555555556






self.maneuver_requested straight


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -2.61548399925
y: -2.79077720642
theta: 4.76198625565
speed: 2.97239136696
id: 1
t: 98
xxx after update is x: -3.72317862511
y: -4.95086526871
theta: 4.85181999207
speed: -0.115246757865
id: 1
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:99




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (3.592773675918579, -7.72316312789917, 1.4666329622268677, 0.14660890400409698)
xxx before update is x: -3.72317862511
y: -4.95086526871
theta: 4.85181999207
speed: -0.115246757865
id: 1
t: 99
xxx after update is x: -2.7360367775
y: -5.15695476532
theta: 4.61461877823
speed: -0.0520016402006
id: 1
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:100


222 self.state_dicts[msg.id][msg.t] is (4.0577826499938965, -7.279729843139648, 1.6266589164733887, 0.07488912343978882)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:101




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: -2.7360367775
y: -5.15695476532
theta: 4.61461877823
speed: -0.0520016402006
id: 1
t: 100
xxx after update is x: -3.14328217506
y: -5.1960310936
theta: 4.71352338791
speed: -0.101136185229
id: 1
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.14328217506
y: -5.1960310936
theta: 4.71352338791
speed: -0.101136185229
id: 1
t: 101
xxx after update is x: -3.14758729935
y: -4.83917284012
theta: 4.62567663193
speed: 0.344545006752
id: 1
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.182152032852173, -7.035238265991211, 1.6043411493301392, 0.2546098828315735)
222 self.state_dicts[msg.id][msg.t] is (3.4220340251922607, -6.929898738861084, 1.5324018001556396, 0.10230783373117447)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:103


222 self.state_dicts[msg.id][msg.t] is (3.700889348983764n 
in spin function, finish the n times spin:101


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.48888888889






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.6925163269
y: -7.43526649475
theta: 1.44974708557
speed: 0.335578322411
id: 0
t: 101
xxx after update is x: 3.59277367592
y: -7.7231631279
theta: 1.46663296223
speed: 0.146608904004
id: 0
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:102




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.59277367592
y: -7.7231631279
theta: 1.46663296223
speed: 0.146608904004
id: 0
t: 102
xxx after update is x: 4.05778264999
y: -7.27972984314
theta: 1.62665891647
speed: 0.0748891234398
id: 0
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:103




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:104




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:105


xxx before update is x: 4.05778264999
y: -7.27972984314
theta: 1.62665891647
speed: 0.0748891234398
id: 0
t: 103
xxx after update is x: 3.18215203285
y: -7.03523826599
theta: 1.60434114933
speed: 0.254609882832
id: 0
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.18215203285
y: -7.03523826599
theta: 1.60434114933
speed: 0.254609882832
id: 0
t: 104
xxx after update is x: 3.42203402519
y: -6.92989873886
theta: 1.53240180016
speed: 0.102307833731
id: 0
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: 3.42203402519
y: -6.92989873886
theta: 1.53240180016
speed: 0.102307833731
id: 0
t: 105
xxx after update is x: 3.70088934898
y: -7.2797703743
theta: 1.48905277252
speed: -0.183155491948
id: 0
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.71111111111






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:107




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:108


maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: 3.70088934898
y: -7.2797703743
theta: 1.48905277252
speed: -0.183155491948
id: 0
t: 106
xxx after update is x: 3.21141004562
y: -7.46462440491
theta: 1.55628681183
speed: -0.1755245924
id: 0
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.21141004562
y: -7.46462440491
theta: 1.55628681183
speed: -0.1755245924
id: 0
t: 107
xxx after update is x: 3.49968600273
y: -6.80953454971
theta: 1.61029684544
speed: 0.12408682704
id: 0
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.8






self.maneu6, -7.279770374298096, 1.4890527725219727, -0.18315549194812775)
xxx before update is x: -3.14758729935
y: -4.83917284012
theta: 4.62567663193
speed: 0.344545006752
id: 1
t: 102
xxx after update is x: -3.08565354347
y: -4.8728966713
theta: 4.74427747726
speed: -0.0332821197808
id: 1
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
removed car with id 1 from grantlist. currentgrantlist: {}
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.57777777778






self.maneuver_requested straight


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:104




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:105


maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (3.2114100456237793, -7.464624404907227, 1.5562868118286133, -0.17552459239959717)
222 self.state_dicts[msg.id][msg.t] is (3.4996860027313232, -6.809534549713135, 1.6102968454360962, 0.12408682703971863)
xxx before update is x: -3.08565354347
y: -4.8728966713
theta: 4.74427747726
speed: -0.0332821197808
id: 1
t: 103
xxx after update is x: -3.4026248455
y: -5.34147548676
theta: 4.69402122498
speed: -0.144824147224
id: 1
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.4026248455
y: -5.34147548676
theta: 4.69402122498
speed: -0.144824147224
id: 1
t: 104
xxx after update is x: -3.40778231621
y: -5.25332307816
theta: 4.87485694885
speed: -0.295789182186
id: 1
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.66666666667






self.maneuver_requested222 self.state_dicts[msg.id][msg.t] is (3.1826817989349365, -7.533895969390869, 1.5575861930847168, -0.11510949581861496)
 straight
leave the update function 
in spin function, finish the n times spin:106




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: -3.40778231621
y: -5.25332307816
theta: 4.87485694885
speed: -0.295789182186
id: 1
t: 105
xxx after update is x: -3.01711773872
y: -4.68464803696
theta: 4.66480827332
speed: 0.247812092304
id: 1
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.01711773872
y: -4.68464803696
theta: 4.66480827332
speed: 0.247812092304
id: 1
t: 106
xxx after update is x: -3.46904587746
y: -4.78127527237
theta: 4.5414056778
speed: -0.127677604556
id: 1
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (4.069122314453125, -7.6357741355896, 1.65181565284729, -0.09467010200023651)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.46904587746
y: -4.78127527237
theta: 4.5414056778
speed: -0.127677604556
id: 1
t: 107
xxx after update is x: -3.26028513908
y: -5.64884471893
theta: 4.60906457901
speed: -0.248698368669
id: 1
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:108


222 self.state_dicts[msg.id][msg.t] is (3.0841124057769775, -7.184825897216797, 1.6437876224517822, 0.07945908606052399)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.26028513908
y: -5.64884471893
theta: 4.60906457901
speedver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:109




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:110


xxx before update is x: 3.49968600273
y: -6.80953454971
theta: 1.61029684544
speed: 0.12408682704
id: 0
t: 108
xxx after update is x: 3.18268179893
y: -7.53389596939
theta: 1.55758619308
speed: -0.115109495819
id: 0
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.18268179893
y: -7.53389596939
theta: 1.55758619308
speed: -0.115109495819
id: 0
t: 109
xxx after update is x: 4.06912231445
y: -7.63577413559
theta: 1.65181565285
speed: -0.0946701020002
id: 0
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 4.06912231445
y: -7.63577413559
theta: 1.65181565285
speed: -0.0946701020002
id: 0
t: 110
xxx after update is x: 3.08411240578
y: -7.18482589722
theta: 1.64378762245
speed: 0.0794590860605
id: 0
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:111




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.08411240578
y: -7.18482589722
theta: 1.64378762245
speed: 0.0794590860605
id: 0
t: 111
xxx after update is x: 3.19376301765
y: -8.36964988708
theta: 1.57955443859
speed: 0.452647715807
id: 0
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:112




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.19376301765
y: -8.36964988708
theta: 1.57955443859
speed: 0.452647715807
id: 0
t: 112
xxx after update is x: 3.21984529495
y: -7.18808698654
theta: 1.72039031982
speed: 0.0829971060157
id: 0
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:113




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.21984529495
y: -7.18808698654
theta: 1.72039031982
speed: 0.0829971060157
id: 0
t: 113
xxx after update is x: 2.41960310936
y: -7.32975816727
theta: 1.63428235054
speed: -0.0992615371943
id: 0
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:114




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.41960310936
y: -7.32975816727
theta: 1.63428235054
speed: -0.0992615371943
id: 0
t: 114
xxx after update is x: 3.31871128082
y: -7.85867261887
theta: 1.44740140438
speed: 0.657360613346
id: 0
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:115




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.31871128082
y: -7.85867261887
theta: 1.44740140438
speed: 0.657360613346
id: 0
t: 115
xxx after update is x: 3.32915997505
y: -7.29697561264
theta: 1.37316334248
speed: 0.199414253235
id: 0
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:116




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.32915997505
y: -7.29697561264
theta: 1.37316334248
speed: 0.1994: -0.248698368669
id: 1
t: 108
xxx after update is x: -3.30621743202
y: -5.12124490738
theta: 4.62602376938
speed: -0.00556616531685
id: 1
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.193763017654419, -8.369649887084961, 1.5795544385910034, 0.45264771580696106)
leave the update function 
in spin function, finish the n times spin:109




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.30621743202
y: -5.12124490738
theta: 4.62602376938
speed: -0.00556616531685
id: 1
t: 109
xxx after update is x: -3.43813848495
y: -5.06088256836
theta: 4.62524175644
speed: 0.256848216057
id: 1
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.2198452949523926, -7.188086986541748, 1.7203903198242188, 0.08299710601568222)
leave the update function 
in spin function, finish the n times spin:110




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.43813848495
y: -5.06088256836
theta: 4.62524175644
speed: 0.256848216057
id: 1
t: 110
xxx after update is x: -3.42969083786
y: -4.60798168182
theta: 4.76443386078
speed: -0.0728921815753
id: 1
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (2.419603109359741, -7.329758167266846, 1.6342823505401611, -0.09926153719425201)
leave the update function 
in spin function, finish the n times spin:111




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.42969083786
y: -4.60798168182
theta: 4.76443386078
speed: -0.0728921815753
id: 1
t: 111
xxx after update is x: -3.10912966728
y: -5.00138282776
theta: 4.65168476105
speed: 0.268180221319
id: 1
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:112


222 self.state_dicts[msg.id][msg.t] is (3.318711280822754, -7.858672618865967, 1.4474014043807983, 0.6573606133460999)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.10912966728
y: -5.00138282776
theta: 4.65168476105
speed: 0.268180221319
id: 1
t: 112
xxx after update is x: -2.9649336338
y: -4.8327627182
theta: 4.8337597847
speed: -0.245783731341
id: 1
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:113


222 self.state_dicts[msg.id][msg.t] is (3.32915997505188, -7.296975612640381, 1.3731633424758911, 0.19941425323486328)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.9649336338
y: -4.8327627182
theta: 4.8337597847
speed: -0.245783731341
id: 1
t: 113
xxx after update is x: -3.25116610527
y: -5.18857479095
theta: 4.70334672928
speed: -0.0818796753883
id: 1
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:114


222 self.state_dicts[msg.id][msg.t] is (3.730700969696045, -7.1734538078308105, 1.5979728698730469, -0.06813301891088486)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.06666666667






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.25116610527
y: -5.18857479095
theta: 4.70334672928
speed: -0.0818796753883
id: 1
t: 114
xxx after update is x: -3.0854985714
y: -5.36373138428
theta: 4.64780807495
speed: 0.176527395844
id: 1
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:115


222 self.state_dicts[msg.id][msg.t] is (3.318655490875244, -7.718210220336914, 1.6349974870681763, -0.6357101798057556)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.0854985714
y: -5.36373138428
theta: 4.64780807495
speed: 0.176527395844
id: 1
t: 115
xxx after update is x: -2.55972957611
y: -5.20424461365
theta: 4.68430233002
speed: 0.225952714682
id: 1
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:116


222 self.state_dicts[msg.id][msg.t] is (2.9228017330169678, -7.4634904861450195, 1.5534754991531372, -0.323819637298584)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.55972957611
y: -5.20424461365
theta: 4.68430233002
speed: 0.225952714682
id: 1
t: 116
xxx after update is x: -3.38833332062
y: -5.22303581238
theta: 4.64124107361
speed: -0.192313268781
id: 1
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:117


222 self.state_dicts[msg.id][msg.t] is (3.275510787963867, -7.314845085144043, 1.569200038909912, 0.06779030710458755)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (2.646540880203247, -7.218324661254883, 1.3750839233398438, -0.23337534070014954)
xxx before update is x: -3.38833332062
y: -5.22303581238
theta: 4.64124107361
speed: -0.192313268781
id: 1
t: 117
xxx after update is x: -3.38563871384
y: -5.39570045471
theta: 4.64812040329
speed: -0.0568317584693
id: 1
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:118




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.38563871384
y: -5.39570045471
theta: 4.64812040329
speed: -0.0568317584693
id: 1
t: 118
xxx after update is x: -3.12867641449
y: -5.38820981979
theta: 4.67607450485
speed: 0.105904713273
id: 1
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.243452787399292, -6.846973419189453, 1.5260268449783325, -0.2964591383934021)
leave the update function 
in spin function, finish the n times spin:119




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.12867641449
y: -5.38820981979
theta: 4.67607450485
speed: 0.105904713273
id: 1
t: 119
xxx after update is x: -2.94070482254
y: -4.63604831696
theta: 4.64919042587
speed: 0.213481485844
id: 1
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:120


222 self.state_dicts[msg.id][msg.t] is (3.6138362884521484, -7.5776543617248535, 1.6075674295425415, 0.09002489596605301)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.94070482254
y: -4.63604831696
theta: 4.64919042587
speed: 0.213481485844
id: 1
t: 120
xxx after update is x: -3.06657671928
y: -4.76532936096
theta: 4.61658859253
speed: -0.280582249165
id: 1
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:121


222 self.state_dicts[msg.id][msg.t] is (3.6024017333984375, -7.371713161468506, 1.579087495803833, 0.04243798553943634)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.06657671928
y: -4.76532936096
theta: 4.61658859253
speed: -0.280582249165
id: 1
t: 121
xx14253235
id: 0
t: 116
xxx after update is x: 3.7307009697
y: -7.17345380783
theta: 1.59797286987
speed: -0.0681330189109
id: 0
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:117


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.2






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: 3.7307009697
y: -7.17345380783
theta: 1.59797286987
speed: -0.0681330189109
id: 0
t: 117
xxx after update is x: 3.31865549088
y: -7.71821022034
theta: 1.63499748707
speed: -0.635710179806
id: 0
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: 3.31865549088
y: -7.71821022034
theta: 1.63499748707
speed: -0.635710179806
id: 0
t: 118
xxx after update is x: 2.92280173302
y: -7.46349048615
theta: 1.55347549915
speed: -0.323819637299
id: 0
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:120


xxx before update is x: 2.92280173302
y: -7.46349048615
theta: 1.55347549915
speed: -0.323819637299
id: 0
t: 119
xxx after update is x: 3.27551078796
y: -7.31484508514
theta: 1.56920003891
speed: 0.0677903071046
id: 0
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.27551078796
y: -7.31484508514
theta: 1.56920003891
speed: 0.0677903071046
id: 0
t: 120
xxx after update is x: 2.6465408802
y: -7.21832466125
theta: 1.37508392334
speed: -0.2333753407
id: 0
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:121




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.6465408802
y: -7.21832466125
theta: 1.37508392334
speed: -0.2333753407
id: 0
t: 121
xxx after update is x: 3.2434527874
y: -6.84697341919
theta: 1.52602684498
speed: -0.296459138393
id: 0
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:122




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.2434527874
y: -6.84697341919
theta: 1.52602684498
speed: -0.296459138393
id: 0
t: 122
xxx after update is x: 3.61383628845
y: -7.57765436172
theta: 1.60756742954
speed: 0.0900248959661
id: 0
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:123




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.61383628845
y: -7.57765436172
theta: 1.60756742954
speed: 0.0900248959661
id: 0
t: 123
xxx after update is x: 3.6024017334
y: -7.37171316147
theta: 1.5790874958
speed: 0.0424379855394
id: 0
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:124




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.6024017334
y: -7.37171316147
theta: 1.5790874958
speed: 0x after update is x: -3.55718016624
y: -4.89554071426
theta: 4.6797041893
speed: 0.217766627669
id: 1
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:122


222 self.state_dicts[msg.id][msg.t] is (3.2217156887054443, -7.211166858673096, 1.4985367059707642, -0.030162721872329712)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.42222222222






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.55718016624
y: -4.89554071426
theta: 4.6797041893
speed: 0.217766627669
id: 1
t: 122
xxx after update is x: -3.28172039986
y: -4.55823278427
theta: 4.56381607056
speed: -0.431266129017
id: 1
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:123


222 self.state_dicts[msg.id][msg.t] is (3.618832588195801, -7.387265205383301, 1.5785921812057495, 0.23461097478866577)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.28172039986
y: -4.55823278427
theta: 4.56381607056
speed: -0.431266129017
id: 1
t: 123
xxx after update is x: -3.0838136673
y: -4.58559274673
theta: 4.74791908264
speed: 0.0272754952312
id: 1
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.4152801036834717, -6.92822790145874, 1.4445500373840332, -0.19520604610443115)
leave the update function 
in spin function, finish the n times spin:124




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (2.7510337829589844, -7.764347076416016, 1.4872227907180786, 0.15226243436336517)
xxx before update is x: -3.0838136673
y: -4.58559274673
theta: 4.74791908264
speed: 0.0272754952312
id: 1
t: 124
xxx after update is x: -2.94548225403
y: -4.66551542282
theta: 4.70711088181
speed: -0.119637385011
id: 1
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:125




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.94548225403
y: -4.66551542282
theta: 4.70711088181
speed: -0.119637385011
id: 1
t: 125
xxx after update is x: -2.80874872208
y: -4.89586114883
theta: 4.83162975311
speed: 0.160425797105
id: 1
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:126


222 self.state_dicts[msg.id][msg.t] is (3.605883836746216, -7.147716045379639, 1.6664397716522217, 0.07678952068090439)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.80874872208
y: -4.89586114883
theta: 4.83162975311
speed: 0.160425797105
id: 1
t: 126
xxx after update is x: -3.05866241455
y: -4.43705463409
theta: 4.6635928154
speed: -0.102992653847
id: 1
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:127


222 self.state_dicts[msg.id][msg.t] is (3.532071352005005, -7.5812883377075195, 1.4789717197418213, -0.1641038954257965)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.05866241455
y: -4.43705463409
theta: 4.6635928154
speed: -0.102992653847
id: 1
t: 127
xxx after update is x: -3.59901428223
y: -4.78784704208
theta: 4.69061851501
speed: 0.293288826942
id: 1
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin funct.0424379855394
id: 0
t: 124
xxx after update is x: 3.22171568871
y: -7.21116685867
theta: 1.49853670597
speed: -0.0301627218723
id: 0
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:125


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.55555555556






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.22171568871
y: -7.21116685867
theta: 1.49853670597
speed: -0.0301627218723
id: 0
t: 125
xxx after update is x: 3.6188325882
y: -7.38726520538
theta: 1.57859218121
speed: 0.234610974789
id: 0
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:126




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.6188325882
y: -7.38726520538
theta: 1.57859218121
speed: 0.234610974789
id: 0
t: 126
xxx after update is x: 3.41528010368
y: -6.92822790146
theta: 1.44455003738
speed: -0.195206046104
id: 0
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:127




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.41528010368
y: -6.92822790146
theta: 1.44455003738
speed: -0.195206046104
id: 0
t: 127
xxx after update is x: 2.75103378296
y: -7.76434707642
theta: 1.48722279072
speed: 0.152262434363
id: 0
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:128




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.75103378296
y: -7.76434707642
theta: 1.48722279072
speed: 0.152262434363
id: 0
t: 128
xxx after update is x: 3.60588383675
y: -7.14771604538
theta: 1.66643977165
speed: 0.0767895206809
id: 0
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:129




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.60588383675
y: -7.14771604538
theta: 1.66643977165
speed: 0.0767895206809
id: 0
t: 129
xxx after update is x: 3.53207135201
y: -7.58128833771
theta: 1.47897171974
speed: -0.164103895426
id: 0
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:130




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.53207135201
y: -7.58128833771
theta: 1.47897171974
speed: -0.164103895426
id: 0
t: 130
xxx after update is x: 2.37046957016
y: -7.78527498245
theta: 1.43227219582
speed: 0.168043211102
id: 0
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:131




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.37046957016
y: -7.78527498245
theta: 1.43227219582
speed: 0.168043211102
id: 0
t: 131
xxx after update is x: 3.55360746384
y: -7.27139425278
theta: 1.67140090466
speed: -0.0406298078597
id: 0
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:132


removed car with id 0 from grantlist. currentgrantlist: {}
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.86666666667






self.maneuver_requion, finish the n times spin:128


222 self.state_dicts[msg.id][msg.t] is (2.370469570159912, -7.785274982452393, 1.43227219581604, 0.16804321110248566)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.59901428223
y: -4.78784704208
theta: 4.69061851501
speed: 0.293288826942
id: 1
t: 128
xxx after update is x: -3.2554602623
y: -5.06067419052
theta: 4.71420812607
speed: -0.171151131392
id: 1
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:129


222 self.state_dicts[msg.id][msg.t] is (3.55360746383667, -7.2713942527771, 1.6714009046554565, -0.040629807859659195)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.73333333333






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.2554602623
y: -5.06067419052
theta: 4.71420812607
speed: -0.171151131392
id: 1
t: 129
xxx after update is x: -2.98038864136
y: -5.06292629242
theta: 4.62229919434
speed: 0.0708444043994
id: 1
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:130


222 self.state_dicts[msg.id][msg.t] is (2.971801280975342, -7.630029201507568, 1.5854988098144531, -0.30128905177116394)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (3.02618408203125, -7.2303266525268555, 1.5659860372543335, 0.06443622708320618)
xxx before update is x: -2.98038864136
y: -5.06292629242
theta: 4.62229919434
speed: 0.0708444043994
id: 1
t: 130
xxx after update is x: -3.52604031563
y: -5.28262662888
theta: 4.75513839722
speed: -0.193433895707
id: 1
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:131




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.52604031563
y: -5.28262662888
theta: 4.75513839722
speed: -0.193433895707
id: 1
t: 131
xxx after update is x: -3.31628131866
y: -5.58949041367
theta: 4.90072488785
speed: -0.240566849709
id: 1
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.0231893062591553, -7.259762287139893, 1.6965025663375854, -0.0835079699754715)
leave the update function 
in spin function, finish the n times spin:132




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (2.90592360496521, -7.737096786499023, 1.5981347560882568, -0.5814691185951233)
xxx before update is x: -3.31628131866
y: -5.58949041367
theta: 4.90072488785
speed: -0.240566849709
id: 1
t: 132
xxx after update is x: -3.44412851334
y: -5.4752573967
theta: 4.75943231583
speed: 0.361653894186
id: 1
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:133




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.44412851334
y: -5.4752573967
theta: 4.75943231583
speed: 0.361653894186
id: 1
t: 133
xxx after update is x: -2.8772854805
y: -5.12300395966
theta: 4.73022270203
speed: 0.0973536372185
id: 1
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:134


222 self.state_dicts[msg.id][msg.t] is (3.6324706077575684, -8.339348793029785, 1.4682626724243164, 0.18467260897159576)


going to the update function
sim.py in the sim.py update function 
tested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.55360746384
y: -7.27139425278
theta: 1.67140090466
speed: -0.0406298078597
id: 0
t: 132
xxx after update is x: 2.97180128098
y: -7.63002920151
theta: 1.58549880981
speed: -0.301289051771
id: 0
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:133




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.97180128098
y: -7.63002920151
theta: 1.58549880981
speed: -0.301289051771
id: 0
t: 133
xxx after update is x: 3.02618408203
y: -7.23032665253
theta: 1.56598603725
speed: 0.0644362270832
id: 0
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:134




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.02618408203
y: -7.23032665253
theta: 1.56598603725
speed: 0.0644362270832
id: 0
t: 134
xxx after update is x: 3.02318930626
y: -7.25976228714
theta: 1.69650256634
speed: -0.0835079699755
id: 0
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:135




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.02318930626
y: -7.25976228714
theta: 1.69650256634
speed: -0.0835079699755
id: 0
t: 135
xxx after update is x: 2.90592360497
y: -7.7370967865
theta: 1.59813475609
speed: -0.581469118595
id: 0
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:136




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.90592360497
y: -7.7370967865
theta: 1.59813475609
speed: -0.581469118595
id: 0
t: 136
xxx after update is x: 3.63247060776
y: -8.33934879303
theta: 1.46826267242
speed: 0.184672608972
id: 0
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:137




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.63247060776
y: -8.33934879303
theta: 1.46826267242
speed: 0.184672608972
id: 0
t: 137
xxx after update is x: 3.47903895378
y: -7.23425531387
theta: 1.51948130131
speed: 0.194436609745
id: 0
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:138




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.47903895378
y: -7.23425531387
theta: 1.51948130131
speed: 0.194436609745
id: 0
t: 138
xxx after update is x: 3.35406184196
y: -7.35556316376
theta: 1.6833564043
speed: 0.0103113930672
id: 0
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:139




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.35406184196
y: -7.35556316376
theta: 1.6833564043
speed: 0.0103113930672
id: 0
t: 139
xxx after update is x: 3.34783148766
y: -7.40081834793
theta: 1.51379024982
speed: 0.100300721824
id: 0
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:140


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.22222222222


argetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.8772854805
y: -5.12300395966
theta: 4.73022270203
speed: 0.0973536372185
id: 1
t: 134
xxx after update is x: -2.96785640717
y: -5.08681631088
theta: 4.73359489441
speed: -0.09042493999
id: 1
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:135


222 self.state_dicts[msg.id][msg.t] is (3.479038953781128, -7.234255313873291, 1.5194813013076782, 0.19443660974502563)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (3.3540618419647217, -7.355563163757324, 1.6833564043045044, 0.010311393067240715)
xxx before update is x: -2.96785640717
y: -5.08681631088
theta: 4.73359489441
speed: -0.09042493999
id: 1
t: 135
xxx after update is x: -3.23497748375
y: -5.31157588959
theta: 4.83919620514
speed: -0.142332911491
id: 1
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:136




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.23497748375
y: -5.31157588959
theta: 4.83919620514
speed: -0.142332911491
id: 1
t: 136
xxx after update is x: -3.47383379936
y: -5.22722196579
theta: 4.57592153549
speed: -0.111545950174
id: 1
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:137


222 self.state_dicts[msg.id][msg.t] is (3.3478314876556396, -7.400818347930908, 1.513790249824524, 0.10030072182416916)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.08888888889






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.47383379936
y: -5.22722196579
theta: 4.57592153549
speed: -0.111545950174
id: 1
t: 137
xxx after update is x: -3.17210483551
y: -5.13684368134
theta: 4.80051183701
speed: 0.350087374449
id: 1
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:138


222 self.state_dicts[msg.id][msg.t] is (3.227060079574585, -7.215063095092773, 1.6497913599014282, 0.2786565124988556)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.17210483551
y: -5.13684368134
theta: 4.80051183701
speed: 0.350087374449
id: 1
t: 138
xxx after update is x: -2.35167741776
y: -4.71784114838
theta: 4.70714664459
speed: 0.033812854439
id: 1
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:139


222 self.state_dicts[msg.id][msg.t] is (3.1935017108917236, -7.812606334686279, 1.4966922998428345, 0.016810119152069092)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.35167741776
y: -4.71784114838
theta: 4.70714664459
speed: 0.033812854439
id: 1
t: 139
xxx after update is x: -3.09362268448
y: -5.21890592575
theta: 4.72658252716
speed: 0.04643028602
id: 1
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:140


222 self.state_dicts[msg.id][msg.t] is (3.2623491287231445, -7.448901653289795, 1.53852379322052, 0.29672062397003174)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.09362268448
y: -5.21890592575
theta: 4.72658252716
speed: 0.04643028602
id: 1
t: 140
xxx after update is x: -3.1233894825
y: -5.1223859787
theta: 



self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.34783148766
y: -7.40081834793
theta: 1.51379024982
speed: 0.100300721824
id: 0
t: 140
xxx after update is x: 3.22706007957
y: -7.21506309509
theta: 1.6497913599
speed: 0.278656512499
id: 0
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:141




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.22706007957
y: -7.21506309509
theta: 1.6497913599
speed: 0.278656512499
id: 0
t: 141
xxx after update is x: 3.19350171089
y: -7.81260633469
theta: 1.49669229984
speed: 0.0168101191521
id: 0
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:142




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.19350171089
y: -7.81260633469
theta: 1.49669229984
speed: 0.0168101191521
id: 0
t: 142
xxx after update is x: 3.26234912872
y: -7.44890165329
theta: 1.53852379322
speed: 0.29672062397
id: 0
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:143




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.26234912872
y: -7.44890165329
theta: 1.53852379322
speed: 0.29672062397
id: 0
t: 143
xxx after update is x: 3.1281940937
y: -7.25485706329
theta: 1.46125972271
speed: -0.0755643025041
id: 0
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:144




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.1281940937
y: -7.25485706329
theta: 1.46125972271
speed: -0.0755643025041
id: 0
t: 144
xxx after update is x: 3.54744911194
y: -7.82799625397
theta: 1.64015972614
speed: -0.546032547951
id: 0
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:145




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.54744911194
y: -7.82799625397
theta: 1.64015972614
speed: -0.546032547951
id: 0
t: 145
xxx after update is x: 3.19045233727
y: -7.92375326157
theta: 1.56478214264
speed: 0.213186606765
id: 0
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:146




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.19045233727
y: -7.92375326157
theta: 1.56478214264
speed: 0.213186606765
id: 0
t: 146
xxx after update is x: 3.53226995468
y: -7.65860176086
theta: 1.58560729027
speed: 0.00434288522229
id: 0
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:147


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.53333333333






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.53226995468
y: -7.65860176086
theta: 1.58560729027
speed: 0.00434288522229
id: 0
t: 147
xxx after update is x: 3.41392040253
y: -7.29163599014
theta: 1.47190773487
speed: 0.0850589498878
id: 0
t: 148
maneuver_negotiatir.py 4.76874828339
speed: 0.0628463700414
id: 1
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.1281940937042236, -7.254857063293457, 1.4612597227096558, -0.07556430250406265)
leave the update function 
in spin function, finish the n times spin:141




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.1233894825
y: -5.1223859787
theta: 4.76874828339
speed: 0.0628463700414
id: 1
t: 141
xxx after update is x: -3.24376010895
y: -5.68635892868
theta: 4.68255519867
speed: -0.168071851134
id: 1
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.5474491119384766, -7.827996253967285, 1.6401597261428833, -0.5460325479507446)
leave the update function 
in spin function, finish the n times spin:142




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.24376010895
y: -5.68635892868
theta: 4.68255519867
speed: -0.168071851134
id: 1
t: 142
xxx after update is x: -3.37740731239
y: -5.30410480499
theta: 4.65824365616
speed: 0.0764371529222
id: 1
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:143


222 self.state_dicts[msg.id][msg.t] is (3.1904523372650146, -7.923753261566162, 1.5647821426391602, 0.2131866067647934)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.37740731239
y: -5.30410480499
theta: 4.65824365616
speed: 0.0764371529222
id: 1
t: 143
xxx after update is x: -3.30625748634
y: -5.01971197128
theta: 4.66963720322
speed: -0.161531552672
id: 1
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:144


222 self.state_dicts[msg.id][msg.t] is (3.5322699546813965, -7.658601760864258, 1.5856072902679443, 0.004342885222285986)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.4






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.30625748634
y: -5.01971197128
theta: 4.66963720322
speed: -0.161531552672
id: 1
t: 144
xxx after update is x: -3.24519729614
y: -4.59184074402
theta: 4.66769075394
speed: 0.00998613145202
id: 1
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:145


222 self.state_dicts[msg.id][msg.t] is (3.4139204025268555, -7.291635990142822, 1.4719077348709106, 0.08505894988775253)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.24519729614
y: -4.59184074402
theta: 4.66769075394
speed: 0.00998613145202
id: 1
t: 145
xxx after update is x: -3.83740329742
y: -5.1759352684
theta: 4.65712594986
speed: 0.249361798167
id: 1
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:146


222 self.state_dicts[msg.id][msg.t] is (3.3795623779296875, -7.490930557250977, 1.501320719718933, 0.07285094261169434)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.83740329742
y: -5.1759352684
theta: 4.65712594986
speed: 0.249361798167
id: 1
t: 146
xxx after update is x: -3.81194543839
y: -5.08520698547
theta: 4.91271257401
speed: 0.0358957983553
id: 1
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:147


222 self.state_dicts[msg.id][finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:148




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.41392040253
y: -7.29163599014
theta: 1.47190773487
speed: 0.0850589498878
id: 0
t: 148
xxx after update is x: 3.37956237793
y: -7.49093055725
theta: 1.50132071972
speed: 0.0728509426117
id: 0
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:149




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.37956237793
y: -7.49093055725
theta: 1.50132071972
speed: 0.0728509426117
id: 0
t: 149
xxx after update is x: 3.03956699371
y: -7.34227991104
theta: 1.62963342667
speed: -0.25145804882
id: 0
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:150




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.03956699371
y: -7.34227991104
theta: 1.62963342667
speed: -0.25145804882
id: 0
t: 150
xxx after update is x: 3.73674201965
y: -7.12169313431
theta: 1.47591781616
speed: 0.0199385937303
id: 0
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:151




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.73674201965
y: -7.12169313431
theta: 1.47591781616
speed: 0.0199385937303
id: 0
t: 151
xxx after update is x: 3.61046719551
y: -6.9439907074
theta: 1.51966357231
speed: -0.205719053745
id: 0
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:152




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.61046719551
y: -6.9439907074
theta: 1.51966357231
speed: -0.205719053745
id: 0
t: 152
xxx after update is x: 2.89929485321
y: -7.03910923004
theta: 1.50614893436
speed: 0.038291297853
id: 0
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:153




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.89929485321
y: -7.03910923004
theta: 1.50614893436
speed: 0.038291297853
id: 0
t: 153
xxx after update is x: 2.91092085838
y: -7.65910816193
theta: 1.54740869999
speed: -0.0153184346855
id: 0
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:154




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.91092085838
y: -7.65910816193
theta: 1.54740869999
speed: -0.0153184346855
id: 0
t: 154
xxx after update is x: 3.6096637249
y: -7.20359230042
theta: 1.45034384727
speed: 0.0973001420498
id: 0
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:155


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.88888888889






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.6096637249
y: -7.20359230042
theta: 1.45034384727
speed: 0.0973001420498
id: 0
t: 155
xxx after update is x: 3.68415880203
y: -7.366294384
theta: 1.62246179581
speed: 0.219127938151
id: 0
t: 156
manemsg.t] is (3.039566993713379, -7.34227991104126, 1.6296334266662598, -0.2514580488204956)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (3.7367420196533203, -7.121693134307861, 1.4759178161621094, 0.019938593730330467)
xxx before update is x: -3.81194543839
y: -5.08520698547
theta: 4.91271257401
speed: 0.0358957983553
id: 1
t: 147
xxx after update is x: -3.39550900459
y: -4.90374231339
theta: 4.67419862747
speed: -0.017487725243
id: 1
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:148




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (3.6104671955108643, -6.943990707397461, 1.5196635723114014, -0.20571905374526978)
xxx before update is x: -3.39550900459
y: -4.90374231339
theta: 4.67419862747
speed: -0.017487725243
id: 1
t: 148
xxx after update is x: -3.65078043938
y: -5.353910923
theta: 4.74140691757
speed: 0.18948148191
id: 1
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:149




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.65078043938
y: -5.353910923
theta: 4.74140691757
speed: 0.18948148191
id: 1
t: 149
xxx after update is x: -3.55547332764
y: -5.208548069
theta: 4.76045274734
speed: -0.178313821554
id: 1
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:150


222 self.state_dicts[msg.id][msg.t] is (2.899294853210449, -7.039109230041504, 1.5061489343643188, 0.03829129785299301)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.55547332764
y: -5.208548069
theta: 4.76045274734
speed: -0.178313821554
id: 1
t: 150
xxx after update is x: -3.48899054527
y: -5.17576932907
theta: 4.780418396
speed: 0.139322578907
id: 1
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:151


222 self.state_dicts[msg.id][msg.t] is (2.9109208583831787, -7.6591081619262695, 1.5474086999893188, -0.015318434685468674)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.48899054527
y: -5.17576932907
theta: 4.780418396
speed: 0.139322578907
id: 1
t: 151
xxx after update is x: -3.12772130966
y: -5.16056537628
theta: 4.64601612091
speed: -0.100979611278
id: 1
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:152


222 self.state_dicts[msg.id][msg.t] is (3.609663724899292, -7.203592300415039, 1.4503438472747803, 0.09730014204978943)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.75555555556






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.12772130966
y: -5.16056537628
theta: 4.64601612091
speed: -0.100979611278
id: 1
t: 152
xxx after update is x: -3.25489783287
y: -5.43901157379
theta: 4.60425662994
speed: 0.201226532459
id: 1
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:153


222 self.state_dicts[msg.id][msg.t] is (3.6841588020324707, -7.3662943840026855, 1.6224617958068848, 0.21912793815135956)
222 self.state_dicts[msg.id][msg.t] is (3.5711605548858643, -7.451519966125488, 1.4647629261016846, -0.14973008632659912)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.25489783287
y: -5.43901157379
theta: 4.60425662994
speed: 0.201226532459
id: 1
t: 153
xxx after update is x: -3.3888862133
y: -5.26709747314
theta: 4.57473707199
speed: 0.14592307806
id: 1
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:154




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.3888862133
y: -5.26709747314
theta: 4.57473707199
speed: 0.14592307806
id: 1
t: 154
xxx after update is x: -3.188352108
y: -5.06665849686
theta: 4.71800708771
speed: -0.251565486193
id: 1
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:155


222 self.state_dicts[msg.id][msg.t] is (3.370776414871216, -7.734730243682861, 1.879340648651123, 0.020388834178447723)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (3.286400318145752, -7.291989803314209, 1.760350227355957, -0.27641022205352783)
xxx before update is x: -3.188352108
y: -5.06665849686
theta: 4.71800708771
speed: -0.251565486193
id: 1
t: 155
xxx after update is x: -2.98232603073
y: -5.14195632935
theta: 4.70867586136
speed: 0.123913295567
id: 1
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:156




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.98232603073
y: -5.14195632935
theta: 4.70867586136
speed: 0.123913295567
id: 1
t: 156
xxx after update is x: -3.40330314636
y: -4.878947258
theta: 4.73927164078
speed: -0.00424525653943
id: 1
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:157


222 self.state_dicts[msg.id][msg.t] is (2.8698060512542725, -7.135396480560303, 1.6667053699493408, 0.0008214000263251364)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.40330314636
y: -4.878947258
theta: 4.73927164078
speed: -0.00424525653943
id: 1
t: 157
xxx after update is x: -3.1160993576
y: -4.64429950714
theta: 4.69223308563
speed: -0.163020715117
id: 1
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:158


222 self.state_dicts[msg.id][msg.t] is (3.9693500995635986, -7.438581466674805, 1.693214774131775, -0.14664436876773834)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.1160993576
y: -4.64429950714
theta: 4.69223308563
speed: -0.163020715117
id: 1
t: 158
xxx after update is x: -3.62289333344
y: -5.28343153
theta: 4.76881313324
speed: 0.0930362790823
id: 1
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:159


222 self.state_dicts[msg.id][msg.t] is (3.1984927654266357, -7.122860431671143, 1.660164475440979, -0.0484132245182991)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.06666666667






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.62289333344
y: -5.28343153
theta: 4.76881313324
speed: 0.0930362790823
id: 1
t: 159
xxx after update is x: -3.23260712624
y: -5.19903039932
theta: 4.82436466217
speed: -0.217830315232
id: 1
t: 160
maneuver_negotiatiruver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:156




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.68415880203
y: -7.366294384
theta: 1.62246179581
speed: 0.219127938151
id: 0
t: 156
xxx after update is x: 3.57116055489
y: -7.45151996613
theta: 1.4647629261
speed: -0.149730086327
id: 0
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:157




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.57116055489
y: -7.45151996613
theta: 1.4647629261
speed: -0.149730086327
id: 0
t: 157
xxx after update is x: 3.37077641487
y: -7.73473024368
theta: 1.87934064865
speed: 0.0203888341784
id: 0
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:158




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.37077641487
y: -7.73473024368
theta: 1.87934064865
speed: 0.0203888341784
id: 0
t: 158
xxx after update is x: 3.28640031815
y: -7.29198980331
theta: 1.76035022736
speed: -0.276410222054
id: 0
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:159




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.28640031815
y: -7.29198980331
theta: 1.76035022736
speed: -0.276410222054
id: 0
t: 159
xxx after update is x: 2.86980605125
y: -7.13539648056
theta: 1.66670536995
speed: 0.000821400026325
id: 0
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:160




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.86980605125
y: -7.13539648056
theta: 1.66670536995
speed: 0.000821400026325
id: 0
t: 160
xxx after update is x: 3.96935009956
y: -7.43858146667
theta: 1.69321477413
speed: -0.146644368768
id: 0
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:161




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.96935009956
y: -7.43858146667
theta: 1.69321477413
speed: -0.146644368768
id: 0
t: 161
xxx after update is x: 3.19849276543
y: -7.12286043167
theta: 1.66016447544
speed: -0.0484132245183
id: 0
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:162


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.2






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.19849276543
y: -7.12286043167
theta: 1.66016447544
speed: -0.0484132245183
id: 0
t: 162
xxx after update is x: 3.04384231567
y: -7.1322889328
theta: 1.56997156143
speed: -0.173933789134
id: 0
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:163




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.04384231567
y: -7.1322889328
theta: 1.56997156143
speed: -0.173933789134
id: 0
t: 163
xxx after update is x: 3.35424685478
y: -7.54080677032
theta: 1.53429067135
speed: 0.255788505077
i.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.043842315673828, -7.132288932800293, 1.5699715614318848, -0.17393378913402557)
leave the update function 
in spin function, finish the n times spin:160




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.23260712624
y: -5.19903039932
theta: 4.82436466217
speed: -0.217830315232
id: 1
t: 160
xxx after update is x: -2.98038053513
y: -5.03683900833
theta: 4.46222162247
speed: 0.00356082106009
id: 1
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:161


222 self.state_dicts[msg.id][msg.t] is (3.3542468547821045, -7.540806770324707, 1.5342906713485718, 0.25578850507736206)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.98038053513
y: -5.03683900833
theta: 4.46222162247
speed: 0.00356082106009
id: 1
t: 161
xxx after update is x: -3.80434799194
y: -4.95420885086
theta: 4.50869464874
speed: 0.075855858624
id: 1
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:162


222 self.state_dicts[msg.id][msg.t] is (3.11399245262146, -6.975306510925293, 1.8014860153198242, -0.14301586151123047)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.80434799194
y: -4.95420885086
theta: 4.50869464874
speed: 0.075855858624
id: 1
t: 162
xxx after update is x: -4.22604751587
y: -5.07315254211
theta: 4.71883440018
speed: 0.0678157359362
id: 1
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:163


222 self.state_dicts[msg.id][msg.t] is (3.2275381088256836, -7.390148162841797, 1.4042781591415405, 0.02752712368965149)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -4.22604751587
y: -5.07315254211
theta: 4.71883440018
speed: 0.0678157359362
id: 1
t: 163
xxx after update is x: -2.91225552559
y: -5.23309850693
theta: 4.68642807007
speed: 0.270823657513
id: 1
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:164


222 self.state_dicts[msg.id][msg.t] is (3.5911219120025635, -7.981189250946045, 1.5991817712783813, -0.41649994254112244)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.91225552559
y: -5.23309850693
theta: 4.68642807007
speed: 0.270823657513
id: 1
t: 164
xxx after update is x: -3.44063997269
y: -5.17653465271
theta: 4.67249536514
speed: -0.192695945501
id: 1
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:165


222 self.state_dicts[msg.id][msg.t] is (2.7803759574890137, -7.419898509979248, 1.5544145107269287, 0.020715629681944847)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (3.336172103881836, -7.225672721862793, 1.4309310913085938, 0.36382919549942017)
xxx before update is x: -3.44063997269
y: -5.17653465271
theta: 4.67249536514
speed: -0.192695945501
id: 1
t: 165
xxx after update is x: -3.46828436852
y: -5.23357629776
theta: 4.64789009094
speed: 0.337570935488
id: 1
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:166




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.46828436852
y: -5.233576297d: 0
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:164




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.35424685478
y: -7.54080677032
theta: 1.53429067135
speed: 0.255788505077
id: 0
t: 164
xxx after update is x: 3.11399245262
y: -6.97530651093
theta: 1.80148601532
speed: -0.143015861511
id: 0
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:165




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.11399245262
y: -6.97530651093
theta: 1.80148601532
speed: -0.143015861511
id: 0
t: 165
xxx after update is x: 3.22753810883
y: -7.39014816284
theta: 1.40427815914
speed: 0.0275271236897
id: 0
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:166




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.22753810883
y: -7.39014816284
theta: 1.40427815914
speed: 0.0275271236897
id: 0
t: 166
xxx after update is x: 3.591121912
y: -7.98118925095
theta: 1.59918177128
speed: -0.416499942541
id: 0
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:167




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.591121912
y: -7.98118925095
theta: 1.59918177128
speed: -0.416499942541
id: 0
t: 167
xxx after update is x: 2.78037595749
y: -7.41989850998
theta: 1.55441451073
speed: 0.0207156296819
id: 0
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:168




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.78037595749
y: -7.41989850998
theta: 1.55441451073
speed: 0.0207156296819
id: 0
t: 168
xxx after update is x: 3.33617210388
y: -7.22567272186
theta: 1.43093109131
speed: 0.363829195499
id: 0
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:169




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.33617210388
y: -7.22567272186
theta: 1.43093109131
speed: 0.363829195499
id: 0
t: 169
xxx after update is x: 3.77446317673
y: -7.25338125229
theta: 1.59847104549
speed: 0.233846321702
id: 0
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:170


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.55555555556






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.77446317673
y: -7.25338125229
theta: 1.59847104549
speed: 0.233846321702
id: 0
t: 170
xxx after update is x: 3.13881468773
y: -7.4860906601
theta: 1.69849443436
speed: 0.210071206093
id: 0
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:171




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.13881468773
y: -7.4860906601
theta: 1.69849443436
speed: 0.210071206093
id: 0
t: 171
xxx after update is x: 3.22185301781
y: -7.08070755005
theta: 1.34988319874
speed: 0.76
theta: 4.64789009094
speed: 0.337570935488
id: 1
t: 166222 self.state_dicts[msg.id][msg.t] is (3.774463176727295, -7.253381252288818, 1.5984710454940796, 0.23384632170200348)

xxx after update is x: -3.08346176147
y: -4.95724821091
theta: 4.66445302963
speed: -0.0689887702465
id: 1
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:167


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.42222222222






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (3.138814687728882, -7.486090660095215, 1.6984944343566895, 0.21007120609283447)
xxx before update is x: -3.08346176147
y: -4.95724821091
theta: 4.66445302963
speed: -0.0689887702465
id: 1
t: 167
xxx after update is x: -3.02507805824
y: -5.14896631241
theta: 4.62355089188
speed: -0.104346439242
id: 1
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:168




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.02507805824
y: -5.14896631241
theta: 4.62355089188
speed: -0.104346439242
id: 1
t: 168
xxx after update is x: -3.53208136559
y: -5.16817331314
theta: 4.53920650482
speed: 0.113203898072
id: 1
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:169


222 self.state_dicts[msg.id][msg.t] is (3.221853017807007, -7.080707550048828, 1.3498831987380981, 0.06012215465307236)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.53208136559
y: -5.16817331314
theta: 4.53920650482
speed: 0.113203898072
id: 1
t: 169
xxx after update is x: -3.82381415367
y: -5.18180131912
theta: 4.69614267349
speed: 0.0934941619635
id: 1
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:170


222 self.state_dicts[msg.id][msg.t] is (3.3586361408233643, -6.950684547424316, 1.4408432245254517, -0.04275700822472572)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.82381415367
y: -5.18180131912
theta: 4.69614267349
speed: 0.0934941619635
id: 1
t: 170
xxx after update is x: -3.34454894066
y: -5.18030405045
theta: 4.75091838837
speed: 0.137996926904
id: 1
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:171


222 self.state_dicts[msg.id][msg.t] is (2.6860318183898926, -7.743553161621094, 1.7271610498428345, -0.09631643444299698)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.34454894066
y: -5.18030405045
theta: 4.75091838837
speed: 0.137996926904
id: 1
t: 171
xxx after update is x: -2.76873612404
y: -5.18838405609
theta: 4.77333021164
speed: 0.350430130959
id: 1
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:172


222 self.state_dicts[msg.id][msg.t] is (3.450979709625244, -7.229833602905273, 1.4183958768844604, 0.11031532287597656)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.76873612404
y: -5.18838405609
theta: 4.77333021164
speed: 0.350430130959
id: 1
t: 172
xxx after update is x: -3.18825149536
y: -5.72479724884
theta: 4.76086044312
speed: -0.223323583603
id: 1
t: 173
maneuver_negotiatir.py finish the update age0601221546531
id: 0
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:172




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.22185301781
y: -7.08070755005
theta: 1.34988319874
speed: 0.0601221546531
id: 0
t: 172
xxx after update is x: 3.35863614082
y: -6.95068454742
theta: 1.44084322453
speed: -0.0427570082247
id: 0
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:173




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.35863614082
y: -6.95068454742
theta: 1.44084322453
speed: -0.0427570082247
id: 0
t: 173
xxx after update is x: 2.68603181839
y: -7.74355316162
theta: 1.72716104984
speed: -0.096316434443
id: 0
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:174




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.68603181839
y: -7.74355316162
theta: 1.72716104984
speed: -0.096316434443
id: 0
t: 174
xxx after update is x: 3.45097970963
y: -7.22983360291
theta: 1.41839587688
speed: 0.110315322876
id: 0
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:175




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.45097970963
y: -7.22983360291
theta: 1.41839587688
speed: 0.110315322876
id: 0
t: 175
xxx after update is x: 2.7650179863
y: -7.072453022
theta: 1.4201374054
speed: -0.0979506224394
id: 0
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:176




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.7650179863
y: -7.072453022
theta: 1.4201374054
speed: -0.0979506224394
id: 0
t: 176
xxx after update is x: 3.13168787956
y: -7.49748420715
theta: 1.57492423058
speed: 0.276158154011
id: 0
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:177


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.86666666667






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: 3.13168787956
y: -7.49748420715
theta: 1.57492423058
speed: 0.276158154011
id: 0
t: 177
xxx after update is x: 3.4575676918
y: -7.33312177658
theta: 1.53290522099
speed: 0.0541063249111
id: 0
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: 3.4575676918
y: -7.33312177658
theta: 1.53290522099
speed: 0.0541063249111
id: 0
t: 178
xxx after update is x: 3.23516941071
y: -7.44221973419
theta: 1.52858412266
speed: 0.406845122576
id: 0
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.23516941071
y: -7.44221973419
theta: 1.52858412266
speed: 0.406845122576
id: 0
t: 179
xxx after update is x: 3.41632986069
y: -7.03204917908
theta: 1.60226nt state from ros funtion
leave the update function 
in spin function, finish the n times spin:173


222 self.state_dicts[msg.id][msg.t] is (2.7650179862976074, -7.072453022003174, 1.4201374053955078, -0.09795062243938446)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.18825149536
y: -5.72479724884
theta: 4.76086044312
speed: -0.223323583603
id: 1
t: 173
xxx after update is x: -3.28338575363
y: -4.93774700165
theta: 4.97309589386
speed: -0.149542018771
id: 1
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:174


222 self.state_dicts[msg.id][msg.t] is (3.131687879562378, -7.49748420715332, 1.5749242305755615, 0.2761581540107727)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.73333333333






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (3.4575676918029785, -7.3331217765808105, 1.5329052209854126, 0.054106324911117554)
xxx before update is x: -3.28338575363
y: -4.93774700165
theta: 4.97309589386
speed: -0.149542018771
id: 1
t: 174
xxx after update is x: -3.0015103817
y: -5.35010671616
theta: 4.63097906113
speed: -0.170029506087
id: 1
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:175




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.0015103817
y: -5.35010671616
theta: 4.63097906113
speed: -0.170029506087
id: 1
t: 175
xxx after update is x: -2.81230807304
y: -5.11108970642
theta: 4.59460353851
speed: 0.100074857473
id: 1
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:176


222 self.state_dicts[msg.id][msg.t] is (3.2351694107055664, -7.4422197341918945, 1.5285841226577759, 0.4068451225757599)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.81230807304
y: -5.11108970642
theta: 4.59460353851
speed: 0.100074857473
id: 1
t: 176
xxx after update is x: -3.32139396667
y: -5.3011841774
theta: 4.69371604919
speed: -0.0911693796515
id: 1
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:177


222 self.state_dicts[msg.id][msg.t] is (3.416329860687256, -7.032049179077148, 1.6022684574127197, -0.09772533178329468)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.32139396667
y: -5.3011841774
theta: 4.69371604919
speed: -0.0911693796515
id: 1
t: 177
xxx after update is x: -3.90611600876
y: -5.19778585434
theta: 4.7402639389
speed: 0.243352890015
id: 1
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:178


222 self.state_dicts[msg.id][msg.t] is (3.8005483150482178, -7.266768932342529, 1.5330108404159546, -0.3155873417854309)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.90611600876
y: -5.19778585434
theta: 4.7402639389
speed: 0.243352890015
id: 1
t: 178
xxx after update is x: -3.36383128166
y: -4.83091783524
theta: 4.84526729584
speed: 0.0745486319065
id: 1
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.353689193725586, -7.580117702484131, 1.583693027496338, -0.35433369874954224)
leave the update function 
in spin function, finish the n times spin:179845741
speed: -0.0977253317833
id: 0
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:180




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.41632986069
y: -7.03204917908
theta: 1.60226845741
speed: -0.0977253317833
id: 0
t: 180
xxx after update is x: 3.80054831505
y: -7.26676893234
theta: 1.53301084042
speed: -0.315587341785
id: 0
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:181




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.80054831505
y: -7.26676893234
theta: 1.53301084042
speed: -0.315587341785
id: 0
t: 181
xxx after update is x: 3.35368919373
y: -7.58011770248
theta: 1.5836930275
speed: -0.35433369875
id: 0
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:182




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.35368919373
y: -7.58011770248
theta: 1.5836930275
speed: -0.35433369875
id: 0
t: 182
xxx after update is x: 2.60334634781
y: -7.60498476028
theta: 1.55160546303
speed: 0.114163279533
id: 0
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:183




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.60334634781
y: -7.60498476028
theta: 1.55160546303
speed: 0.114163279533
id: 0
t: 183
xxx after update is x: 3.81219100952
y: -7.14134883881
theta: 1.58831858635
speed: -0.353218704462
id: 0
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:184




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.81219100952
y: -7.14134883881
theta: 1.58831858635
speed: -0.353218704462
id: 0
t: 184
xxx after update is x: 3.28498721123
y: -7.25865221024
theta: 1.63418602943
speed: -0.0536089465022
id: 0
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:185


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.22222222222






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.28498721123
y: -7.25865221024
theta: 1.63418602943
speed: -0.0536089465022
id: 0
t: 185
xxx after update is x: 3.10661196709
y: -7.52322387695
theta: 1.67500829697
speed: -0.0326685197651
id: 0
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:186




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.10661196709
y: -7.52322387695
theta: 1.67500829697
speed: -0.0326685197651
id: 0
t: 186
xxx after update is x: 3.85485291481
y: -8.42411422729
theta: 1.57405769825
speed: 0.16105337441
id: 0
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:187




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.85485291481
y: -8.42411422729
theta: 1.57405769825
speed: 0.16105337441
id: 0
t: 187
xxx after update is x: 2.96981930733
y: -7.21




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.36383128166
y: -4.83091783524
theta: 4.84526729584
speed: 0.0745486319065
id: 1
t: 179
xxx after update is x: -2.88566350937
y: -5.33006000519
theta: 4.64105653763
speed: -0.0890914648771
id: 1
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (2.603346347808838, -7.604984760284424, 1.551605463027954, 0.11416327953338623)
leave the update function 
in spin function, finish the n times spin:180




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.88566350937
y: -5.33006000519
theta: 4.64105653763
speed: -0.0890914648771
id: 1
t: 180
xxx after update is x: -3.30062246323
y: -4.34121465683
theta: 4.81209802628
speed: -0.154629305005
id: 1
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.8121910095214844, -7.141348838806152, 1.5883185863494873, -0.3532187044620514)
leave the update function 
in spin function, finish the n times spin:181




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.30062246323
y: -4.34121465683
theta: 4.81209802628
speed: -0.154629305005
id: 1
t: 181
xxx after update is x: -3.60749673843
y: -4.83574676514
theta: 4.82129621506
speed: -0.127158105373
id: 1
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:182


222 self.state_dicts[msg.id][msg.t] is (3.284987211227417, -7.258652210235596, 1.634186029434204, -0.05360894650220871)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.08888888889






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.60749673843
y: -4.83574676514
theta: 4.82129621506
speed: -0.127158105373
id: 1
t: 182
xxx after update is x: -3.71615386009
y: -4.84276914597
theta: 4.76749849319
speed: 0.327688366175
id: 1
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:183


222 self.state_dicts[msg.id][msg.t] is (3.106611967086792, -7.523223876953125, 1.6750082969665527, -0.032668519765138626)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.71615386009
y: -4.84276914597
theta: 4.76749849319
speed: 0.327688366175
id: 1
t: 183
xxx after update is x: -3.25342869759
y: -4.96533918381
theta: 4.68791675568
speed: 0.0877804607153
id: 1
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:184


222 self.state_dicts[msg.id][msg.t] is (3.8548529148101807, -8.424114227294922, 1.574057698249817, 0.1610533744096756)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.25342869759
y: -4.96533918381
theta: 4.68791675568
speed: 0.0877804607153
id: 1
t: 184
xxx after update is x: -3.27951145172
y: -4.98089742661
theta: 4.7097826004
speed: -0.116815187037
id: 1
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:185


222 self.state_dicts[msg.id][msg.t] is (2.9698193073272705, -7.21396541595459, 1.6285545825958252, -0.07330233603715897)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.27951145172
y: -4.98089742661
theta: 4.7097826004
speed: -0.116815187037
id: 1
t: 185
xxx after update is x: -3.39257121086
y: -5.00657367706
theta: 4.76177883148
speed: -0.0366849936545
id: 1
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:186


222 self.state_dicts[msg.id][msg.t] is (3.2030298709869385, -7.6446428298950195, 1.6876795291900635, 0.15912850201129913)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.39257121086
y: -5.00657367706
theta: 4.76177883148
speed: -0.0366849936545
id: 1
t: 186
xxx after update is x: -3.36922645569
y: -5.18706417084
theta: 4.76494216919
speed: 0.01370442193
id: 1
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:187


222 self.state_dicts[msg.id][msg.t] is (2.7249698638916016, -7.764213562011719, 1.5402038097381592, 0.11046798527240753)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.36922645569
y: -5.18706417084
theta: 4.76494216919
speed: 0.01370442193
id: 1
t: 187
xxx after update is x: -3.54720473289
y: -4.95372629166
theta: 4.64171075821
speed: -0.0254271682352
id: 1
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:188


222 self.state_dicts[msg.id][msg.t] is (2.758751153945923, -7.013739585876465, 1.6062252521514893, 0.18540936708450317)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.54720473289
y: -4.95372629166
theta: 4.64171075821
speed: -0.0254271682352
id: 1
t: 188
xxx after update is x: -3.38903284073
y: -4.7108168602
theta: 4.68441581726
speed: 0.11941075325
id: 1
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:189


222 self.state_dicts[msg.id][msg.t] is (3.1461105346679688, -7.588930130004883, 1.4965749979019165, 0.12706458568572998)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.4






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: -3.38903284073
y: -4.7108168602
theta: 4.68441581726
speed: 0.11941075325
id: 1
t: 189
xxx after update is x: -3.54617333412
y: -4.61949443817
theta: 4.75381708145
speed: -0.0492382608354
id: 1
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.3599693775177, -7.561490058898926, 1.4258431196212769, 0.0585632249712944)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -3.54617333412
y: -4.61949443817
theta: 4.75381708145
speed: -0.0492382608354
id: 1
t: 190
xxx after update is x: -3.49726200104
y: -5.11660289764
theta: 4.87842702866
speed: -0.197480663657
id: 1
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (2.919996500015259, -6.904752254486084, 1.5752922296524048, -0.14401087164878845)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:192


xxx before update is x: -3.49726200104
y: -5.11660289764
theta: 4.87842702866
speed: -0.197480663657
id: 1
t: 191
xxx after update is x: -3.44916677475
y: -5.15174055099
theta: 4.61010122299
speed: -0.162322983146
id: 1
t: 192
maneuver_negotiatir396541595
theta: 1.6285545826
speed: -0.0733023360372
id: 0
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:188




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.96981930733
y: -7.21396541595
theta: 1.6285545826
speed: -0.0733023360372
id: 0
t: 188
xxx after update is x: 3.20302987099
y: -7.6446428299
theta: 1.68767952919
speed: 0.159128502011
id: 0
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:189




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.20302987099
y: -7.6446428299
theta: 1.68767952919
speed: 0.159128502011
id: 0
t: 189
xxx after update is x: 2.72496986389
y: -7.76421356201
theta: 1.54020380974
speed: 0.110467985272
id: 0
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:190




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.72496986389
y: -7.76421356201
theta: 1.54020380974
speed: 0.110467985272
id: 0
t: 190
xxx after update is x: 2.75875115395
y: -7.01373958588
theta: 1.60622525215
speed: 0.185409367085
id: 0
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:191




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.75875115395
y: -7.01373958588
theta: 1.60622525215
speed: 0.185409367085
id: 0
t: 191
xxx after update is x: 3.14611053467
y: -7.58893013
theta: 1.4965749979
speed: 0.127064585686
id: 0
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:192


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.53333333333






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.14611053467
y: -7.58893013
theta: 1.4965749979
speed: 0.127064585686
id: 0
t: 192
xxx after update is x: 3.35996937752
y: -7.5614900589
theta: 1.42584311962
speed: 0.0585632249713
id: 0
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:193




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.35996937752
y: -7.5614900589
theta: 1.42584311962
speed: 0.0585632249713
id: 0
t: 193
xxx after update is x: 2.91999650002
y: -6.90475225449
theta: 1.57529222965
speed: -0.144010871649
id: 0
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:194




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.91999650002
y: -6.90475225449
theta: 1.57529222965
speed: -0.144010871649
id: 0
t: 194
xxx after update is x: 2.90161943436
y: -6.92702245712
theta: 1.47551906109
speed: -0.00736801000312
id: 0
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:195




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.90161943436
y: -6.92702245712
theta: 1.47551906109
speed: -0.00736801000312
id: 0
t: 195
xxx after update is x: 3.69867420.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (2.9016194343566895, -6.927022457122803, 1.475519061088562, -0.007368010003119707)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.44916677475
y: -5.15174055099
theta: 4.61010122299
speed: -0.162322983146
id: 1
t: 192
xxx after update is x: -3.38770437241
y: -5.2374253273
theta: 4.70079231262
speed: 0.275554299355
id: 1
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:193


222 self.state_dicts[msg.id][msg.t] is (3.698674201965332, -6.93497896194458, 1.6068413257598877, -0.18487635254859924)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.38770437241
y: -5.2374253273
theta: 4.70079231262
speed: 0.275554299355
id: 1
t: 193
xxx after update is x: -3.67790555954
y: -4.69094800949
theta: 4.74458360672
speed: 0.192783668637
id: 1
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:194


222 self.state_dicts[msg.id][msg.t] is (2.907081127166748, -7.461190223693848, 1.614519715309143, 0.016451116651296616)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.67790555954
y: -4.69094800949
theta: 4.74458360672
speed: 0.192783668637
id: 1
t: 194
xxx after update is x: -2.7585439682
y: -5.28460597992
theta: 4.79734516144
speed: 0.185893312097
id: 1
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:195


222 self.state_dicts[msg.id][msg.t] is (3.200955629348755, -7.800195693969727, 1.5602372884750366, -0.12326835095882416)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (3.2413501739501953, -7.443478107452393, 1.670729637145996, -0.2610819637775421)
xxx before update is x: -2.7585439682
y: -5.28460597992
theta: 4.79734516144
speed: 0.185893312097
id: 1
t: 195
xxx after update is x: -3.40780711174
y: -4.68854761124
theta: 4.72244262695
speed: 0.303349852562
id: 1
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:196




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (3.6656768321990967, -6.929817199707031, 1.8075214624404907, 0.27637597918510437)
xxx before update is x: -3.40780711174
y: -4.68854761124
theta: 4.72244262695
speed: 0.303349852562
id: 1
t: 196
xxx after update is x: -3.1277616024
y: -5.61557579041
theta: 4.5059056282
speed: -0.109395444393
id: 1
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:197


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.75555555556






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:198


197
y: -6.93497896194
theta: 1.60684132576
speed: -0.184876352549
id: 0
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:196




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.69867420197
y: -6.93497896194
theta: 1.60684132576
speed: -0.184876352549
id: 0
t: 196
xxx after update is x: 2.90708112717
y: -7.46119022369
theta: 1.61451971531
speed: 0.0164511166513
id: 0
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:197




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.90708112717
y: -7.46119022369
theta: 1.61451971531
speed: 0.0164511166513
id: 0
t: 197
xxx after update is x: 3.20095562935
y: -7.80019569397
theta: 1.56023728848
speed: -0.123268350959
id: 0
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:198




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.20095562935
y: -7.80019569397
theta: 1.56023728848
speed: -0.123268350959
id: 0
t: 198
xxx after update is x: 3.24135017395
y: -7.44347810745
theta: 1.67072963715
speed: -0.261081963778
id: 0
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:199




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.24135017395
y: -7.44347810745
theta: 1.67072963715
speed: -0.261081963778
id: 0
t: 199
xxx after update is x: 3.6656768322
y: -6.92981719971
theta: 1.80752146244
speed: 0.276375979185
id: 0
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:200


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.88888888889






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.88888888889






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:201


... logging to /home/lu/.ros/log/77663af2-ffab-11e8-9ca8-000c291801fc/roslaunch-ubuntu-80919.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch
[1mstarted roslaunch server http://ubuntu:43649/[0m

SUMMARY
========

PARAMETERS
 * /enable_negotiator: True
 * /file_prefix: 
 * /nr_cars: 2
 * /plot: False
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /save: False

NODES
  /
    car0 (virtual_blinker/sim.py)
    car1 (virtual_blinker/sim.py)
    cloud (virtual_blinker/cloud.py)
    rviz (rviz/rviz)
    visualization (virtual_blinker/visualization.py)

auto-starting new master
[1mprocess[master]: started with pid [80938][0m
[1mROS_MASTER_URI=http://localhost:11311[0m
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch http://localhost:11311
[1msetting /run_id to 77663af2-ffab-11e8-9ca8-000c291801fc[0m
[1mprocess[rosout-1]: started with pid [80951][0m
started core service [/rosout]
[1mprocess[visualization-2]: started with pid [80954][0m
[1mprocess[rviz-3]: started with pid [80969][0m
[1mprocess[car0-4]: started with pid [80970][0m
[1mprocess[car1-5]: started with pid [80971][0m
[1mprocess[cloud-6]: started with pid [80972][0m
[cloud-6] killing on exit
[car1-5] killing on exit
[car0-4] killing on exit
[rviz-3] killing on exit
[visualization-2] killing on exit
[rosout-1] killing on exit
[master] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
[1mdone[0m
