sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 0
s is car_state1
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 1.76970005035


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:1


222 self.state_dicts[msg.id][msg.t] is (-2.5986785888671875, 74.36602783203125, 4.826711654663086, 13.83197021484375)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7f006557a3b0>


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:2


self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f0065596f38>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:3


maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9000)
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (-3.061976194381714, 72.82192993164062, 4.7429327964782715, 13.898146629333496)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:4




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:5


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: 3.51164722443
y: -61.6967124939
theta: 1.67789530754
speed: 13.91127491
id: 0
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: 3.51164722443
y: -61.6967124939
theta: 1.67789530754
speed: 13.91127491
id: 0
t: 5
xxx after update is x: 2.94096660614
y: -61.7794456482
theta: 1.38075757027
speed: 13.9706716537
id: 0
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:7


xxx before update is x: 2.94096660614
y: -61.7794456482
theta: 1.38075757027
speed: 13.9706716537
id: 0
t: 6
xxx after update is x: 3.28504157066
y: -60.7815284729
theta: 1.66541612148
speed: 13.5643854141
id: 0
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
lesim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 1
s is car_state0
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 1.75747799873
222 self.state_dicts[msg.id][msg.t] is (3.066441535949707, -64.11571502685547, 1.5025099515914917, 14.000141143798828)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:1




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:2


222 self.state_dicts[msg.id][msg.t] is (3.6270720958709717, -63.55198669433594, 1.545336127281189, 13.917386054992676)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7f761edd6560>


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:3


self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f761edf27a0>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:4


maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9001)
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (3.9764397144317627, -62.67235565185547, 1.5163904428482056, 13.775591850280762)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:5




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: -3.35199856758
y: 71.2704391479
theta: 4.79654741287
speed: 13.792509079
id: 1
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.35199856758
y: 71.2704391479
theta: 4.79654741287
speed: 13.792509079
id: 1
t: 6
xxx after update is x: -3.42573547363
y: 70.5604400635
theta: 4.74512434006
speed: 14.0581674576
id: 1
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:7




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.42573547363ave the update function xxx before update is x: 3.28504157066
y: -60.7815284729
theta: 1.66541612148
speed: 13.5643854141
id: 0
t: 7
xxx after update is x: 3.28392767906
y: -60.1214675903
theta: 1.53934931755
speed: 13.6528806686
id: 0
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:8




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: 3.28392767906
y: -60.1214675903
theta: 1.53934931755
speed: 13.6528806686
id: 0
t: 8
xxx after update is x: 3.0469918251
y: -59.7180633545
theta: 1.6854070425
speed: 13.7916965485
id: 0
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: 3.0469918251
y: -59.7180633545
theta: 1.6854070425
speed: 13.7916965485
id: 0
t: 9
xxx after update is x: 3.64716434479
y: -58.7176132202
theta: 1.52524554729
speed: 13.7914581299
id: 0
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.444444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: 3.64716434479
y: -58.7176132202
theta: 1.52524554729
speed: 13.7914581299
id: 0
t: 10
xxx after update is x: 2.98091483116
y: -58.3466644287
theta: 1.62314450741
speed: 13.6049013138
id: 0
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: 2.98091483116
y: -58.3466644287
theta: 1.62314450741
speed: 13.6049013138
id: 0
t: 11
xxx after update is x: 2.59006738663
y: -57.4486961365
theta: 1.80754864216
speed: 13.7570323944
id: 0
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: 2.59006738663
y: -57.4486961365
theta: 1.80754864216
speed: 13.7570323944
id: 0
t: 12
xxx after update is x: 3.0024034977
y: -56.8766937256
theta: 1.58085465431
speed: 13.9911699295
id: 0
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: 3.0024034977
y: -56.8766937256
theta: 1.58085465431
speed: 13.9911699295
id: 0
t: 13
xxx after update is x: 3.11762833595
y: -56.4905929565
theta: 1.57070159912
speed: 13.9413261414
id: 0
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: 3.11762833595
y: -56.4905929565
theta: 1.57070159912
speed: 13.9413261414
id: 0
t: 14
xxx after update is x: 3.44211292267
y: -55.6849479675
theta: 1.67637860775
speed: 14.1288385391
id: 0
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: 3.44211292267
y: -55.6849479675
theta: 1.67637860775
speed: 14.128838539
y: 70.5604400635
theta: 4.74512434006
speed: 14.0581674576
id: 1
t: 7
xxx after update is x: -2.81194972992
y: 69.9187698364
theta: 4.6688747406
speed: 13.8440151215
id: 1
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:8




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.81194972992
y: 69.9187698364
theta: 4.6688747406
speed: 13.8440151215
id: 1
t: 8
xxx after update is x: -3.27321219444
y: 69.041847229
theta: 4.43892621994
speed: 14.1548643112
id: 1
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:9




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: -3.27321219444
y: 69.041847229
theta: 4.43892621994
speed: 14.1548643112
id: 1
t: 9
xxx after update is x: -2.84204411507
y: 68.7795333862
theta: 4.88915777206
speed: 13.695646286
id: 1
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: -2.84204411507
y: 68.7795333862
theta: 4.88915777206
speed: 13.695646286
id: 1
t: 10
xxx after update is x: -3.06581401825
y: 68.6102752686
theta: 4.69929409027
speed: 13.7095489502
id: 1
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.488888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.06581401825
y: 68.6102752686
theta: 4.69929409027
speed: 13.7095489502
id: 1
t: 11
xxx after update is x: -2.73089694977
y: 67.4015350342
theta: 4.58695030212
speed: 14.0384054184
id: 1
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:12




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: -2.73089694977
y: 67.4015350342
theta: 4.58695030212
speed: 14.0384054184
id: 1
t: 12
xxx after update is x: -2.73694086075
y: 66.9978027344
theta: 4.81240987778
speed: 13.8976211548
id: 1
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: -2.73694086075
y: 66.9978027344
theta: 4.81240987778
speed: 13.8976211548
id: 1
t: 13
xxx after update is x: -3.47460365295
y: 66.3030776978
theta: 4.73718547821
speed: 13.6624803543
id: 1
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: -3.47460365295
y: 66.3030776978
theta: 4.73718547821
speed: 13.6624803543
id: 1
t: 14
xxx after update is x: -3.25213122368
y: 65.6166152954
theta: 4.66309118271
speed: 13.8764686584
id: 1
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: -3.25213122368
y: 65.6166152954
theta: 4.66309118271
speed: 13.8764686584
id: 1
t: 15
xxx after update is x: -3.50262737274
y: 65.1382980347
theta: 4.63213634491
speed: 14.1884880066
id: 1
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: -3.50262737274
y: 65.1382980347
theta: 4.63213634491
speed: 14.1884880066
id: 1
t: 16
xxx after update is x: -3.4518597126
y: 64.4587478638
theta: 4.68742656708
speed: 13.7122583389
id: 1
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3990945574855187, 0.2714965474682919]
222 self.state_dicts[msg.id][msg.t] is (3.702005624771118, -54.49631881713867, 1.5047658681869507, 13.963521003723145)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.4518597126
y: 64.4587478638
theta: 4.68742656708
speed: 13.7122583389
id: 1
t: 17
xxx after update is x: -3.25514125824
y: 64.0744857788
theta: 4.64583396912
speed: 13.9882555008
id: 1
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:18




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: -3.25514125824
y: 64.0744857788
theta: 4.64583396912
speed: 13.9882555008
id: 1
t: 18
xxx after update is x: -3.1352853775
y: 63.5141181946
theta: 4.78741645813
speed: 13.8404321671
id: 1
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.844444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.1352853775
y: 63.5141181946
theta: 4.78741645813
speed: 13.8404321671
id: 1
t: 19
xxx after update is x: -3.32074928284
y: 62.8400840759
theta: 4.56449747086
speed: 14.2544546127
id: 1
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:20




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: -3.32074928284
y: 62.8400840759
theta: 4.56449747086
speed: 14.2544546127
id: 1
t: 20
xxx after update is x: -3.16168498993
y: 62.5576820374
theta: 4.79211473465
speed: 13.8039712906
id: 1
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: -3.16168498993
y: 62.5576820374
theta: 4.79211473465
speed: 13.8039712906
id: 1
t: 21
xxx after update is x: -3.58131337166
y: 61.3442649841
theta: 4.78048038483
speed: 13.7704029083
id: 1
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: -3.58131337166
y: 61.3442649841
theta: 4.78048038483
speed: 13.7704029083
id: 1
t: 22
xxx after update is x: -2.77170848846
y: 60.8710403442
theta: 4.6408829689
speed: 13.945766449
id: 1
t: 21
id: 0
t: 15
xxx after update is x: 3.00192022324
y: -55.1488113403
theta: 1.63543212414
speed: 14.0898532867
id: 0
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: 3.00192022324
y: -55.1488113403
theta: 1.63543212414
speed: 14.0898532867
id: 0
t: 16
xxx after update is x: 3.70200562477
y: -54.4963188171
theta: 1.50476586819
speed: 13.9635210037
id: 0
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3402336313659701, 0.33510377340190634]
222 self.state_dicts[msg.id][msg.t] is (-3.451859712600708, 64.45874786376953, 4.687426567077637, 13.712258338928223)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: 3.70200562477
y: -54.4963188171
theta: 1.50476586819
speed: 13.9635210037
id: 0
t: 17
xxx after update is x: 3.34770154953
y: -53.9415588379
theta: 1.57137954235
speed: 13.617436409
id: 0
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.8






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: 3.34770154953
y: -53.9415588379
theta: 1.57137954235
speed: 13.617436409
id: 0
t: 18
xxx after update is x: 3.30561995506
y: -52.834400177
theta: 1.21188271046
speed: 13.6989803314
id: 0
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: 3.30561995506
y: -52.834400177
theta: 1.21188271046
speed: 13.6989803314
id: 0
t: 19
xxx after update is x: 3.82210206985
y: -52.4004096985
theta: 1.69647872448
speed: 13.4593582153
id: 0
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: 3.82210206985
y: -52.4004096985
theta: 1.69647872448
speed: 13.4593582153
id: 0
t: 20
xxx after update is x: 2.79044508934
y: -52.1209831238
theta: 1.82124781609
speed: 13.6904983521
id: 0
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: 2.79044508934
y: -52.1209831238
theta: 1.82124781609
speed: 13.6904983521
id: 0
t: 21
xxx after update is x: 2.75069928169
y: -51.5474281311
theta: 1.69804048538
speed: 13.9199924469
id: 0
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: 2.75069928169
y: -51.5474281311
theta: 1.69804048538
speed: 13.9199924469
id: 0
t: 22
xxx after update is x: 3.0230922699
y: -50.9803352356
theta: 1.54377937317
speed: 13.8980379105
id: 0
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin fun3
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3337616468726311, 0]
222 self.state_dicts[msg.id][msg.t] is (3.023092269897461, -50.9803352355957, 1.5437793731689453, 13.898037910461426)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: -2.77170848846
y: 60.8710403442
theta: 4.6408829689
speed: 13.945766449
id: 1
t: 23
xxx after update is x: -3.11295461655
y: 59.7168045044
theta: 4.75675201416
speed: 14.3709144592
id: 1
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: -3.11295461655
y: 59.7168045044
theta: 4.75675201416
speed: 14.3709144592
id: 1
t: 24
xxx after update is x: -3.41888237
y: 59.3136291504
theta: 4.58807706833
speed: 14.2292423248
id: 1
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: -3.41888237
y: 59.3136291504
theta: 4.58807706833
speed: 14.2292423248
id: 1
t: 25
xxx after update is x: -4.0202960968
y: 58.9738502502
theta: 4.89385604858
speed: 13.9187679291
id: 1
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: -4.0202960968
y: 58.9738502502
theta: 4.89385604858
speed: 13.9187679291
id: 1
t: 26
xxx after update is x: -3.08386540413
y: 57.6955566406
theta: 4.82828092575
speed: 13.9583339691
id: 1
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.2






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: -3.08386540413
y: 57.6955566406
theta: 4.82828092575
speed: 13.9583339691
id: 1
t: 27
xxx after update is x: -2.99727201462
y: 57.4602355957
theta: 4.71754217148
speed: 13.973654747
id: 1
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: -2.99727201462
y: 57.4602355957
theta: 4.71754217148
speed: 13.973654747
id: 1
t: 28
xxx after update is x: -3.86871266365
y: 56.5530967712
theta: 4.78887081146
speed: 13.6754522324
id: 1
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.38575884357838697, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2076199054718018, -46.893680572509766, 1.6866014003753662, 14.006745338439941)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: -3.86871266365
y: 56.5530967712
theta: 4.78887081146
speed: 13.6754522324
id: 1
t: 29
xxx after update is x: -3.53ction, finish the n times spin:24

xxx before update is x: 3.0230922699
y: -50.9803352356
theta: 1.54377937317
speed: 13.8980379105
id: 0
t: 23
xxx after update is x: 3.11294746399
y: -50.0247993469
theta: 1.42416191101
speed: 13.5785684586
id: 0
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: 3.11294746399
y: -50.0247993469
theta: 1.42416191101
speed: 13.5785684586
id: 0
t: 24
xxx after update is x: 4.01347398758
y: -49.6571884155
theta: 1.45707988739
speed: 13.8525972366
id: 0
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: 4.01347398758
y: -49.6571884155
theta: 1.45707988739
speed: 13.8525972366
id: 0
t: 25
xxx after update is x: 3.17290496826
y: -49.1156845093
theta: 1.52059960365
speed: 13.5450696945
id: 0
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.15555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.3330329638721694, 0.35056016713558996]
222 self.state_dicts[msg.id][msg.t] is (-4.020296096801758, 58.97385025024414, 4.893856048583984, 13.918767929077148)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: 3.17290496826
y: -49.1156845093
theta: 1.52059960365
speed: 13.5450696945
id: 0
t: 26
xxx after update is x: 2.65004491806
y: -48.0380859375
theta: 1.653465271
speed: 14.2639951706
id: 0
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: 2.65004491806
y: -48.0380859375
theta: 1.653465271
speed: 14.2639951706
id: 0
t: 27
xxx after update is x: 2.96354341507
y: -47.6210479736
theta: 1.61426115036
speed: 13.379989624
id: 0
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: 2.96354341507
y: -47.6210479736
theta: 1.61426115036
speed: 13.379989624
id: 0
t: 28
xxx after update is x: 3.20761990547
y: -46.8936805725
theta: 1.68660140038
speed: 14.0067453384
id: 0
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: 3.20761990547
y: -46.8936805725
theta: 1.68660140038
speed: 14.0067453384
id: 0
t: 29
xxx after update is x: 3.63212609291
y: -46.6107444763
theta: 1.48507535458
speed: 14.0881252289
id: 0
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: 3.63212609291
y: -46.6107444763
theta: 1.48507535458
speed: 14.0881252289
id: 0
t: 30
xxx after update is x: 3.08748340607
y: -45.8146934509
theta: 1.68151009083
speed: 13.7997112274
id: 0
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


560185432
y: 56.6162147522
theta: 4.84173679352
speed: 13.9979925156
id: 1
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: -3.53560185432
y: 56.6162147522
theta: 4.84173679352
speed: 13.9979925156
id: 1
t: 30
xxx after update is x: -3.09418678284
y: 55.9733428955
theta: 4.69893074036
speed: 13.853272438
id: 1
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: -3.09418678284
y: 55.9733428955
theta: 4.69893074036
speed: 13.853272438
id: 1
t: 31
xxx after update is x: -3.14816761017
y: 55.022605896
theta: 4.88265800476
speed: 14.0855264664
id: 1
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: -3.14816761017
y: 55.022605896
theta: 4.88265800476
speed: 14.0855264664
id: 1
t: 32
xxx after update is x: -2.24135112762
y: 54.5868034363
theta: 4.75555324554
speed: 14.2466173172
id: 1
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: -2.24135112762
y: 54.5868034363
theta: 4.75555324554
speed: 14.2466173172
id: 1
t: 33
xxx after update is x: -2.91139793396
y: 54.2123565674
theta: 4.83986997604
speed: 13.3433589935
id: 1
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.40289924172088537, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1621603965759277, -44.17405319213867, 1.5007052421569824, 13.89541244506836)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: -2.91139793396
y: 54.2123565674
theta: 4.83986997604
speed: 13.3433589935
id: 1
t: 34
xxx after update is x: -3.24060773849
y: 53.4882545471
theta: 4.76336812973
speed: 13.8385772705
id: 1
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.55555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: -3.24060773849
y: 53.4882545471
theta: 4.76336812973
speed: 13.8385772705
id: 1
t: 35
xxx after update is x: -3.31729483604
y: 52.5219726562
theta: 4.73404693604
speed: 13.9606132507
id: 1
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: -3.31729483604
y: 52.5219726562
theta: 4.73404693604
speed: 13.9606132507
id: 1
t: 36
xxx after update is x: -3.26083421707
y: 51.7546463013
theta: 4.78741455078
speed: 13.8196372986
id: 1
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py updategoing to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: 3.08748340607
y: -45.8146934509
theta: 1.68151009083
speed: 13.7997112274
id: 0
t: 31
xxx after update is x: 2.7223379612
y: -44.8806343079
theta: 1.46958720684
speed: 13.8792724609
id: 0
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: 2.7223379612
y: -44.8806343079
theta: 1.46958720684
speed: 13.8792724609
id: 0
t: 32
xxx after update is x: 3.85170865059
y: -45.1195487976
theta: 1.48736941814
speed: 13.6349964142
id: 0
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.40186664099013836, 0.4034666304766004]
222 self.state_dicts[msg.id][msg.t] is (-2.2413511276245117, 54.5868034362793, 4.755553245544434, 14.246617317199707)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.46666666667






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: 3.85170865059
y: -45.1195487976
theta: 1.48736941814
speed: 13.6349964142
id: 0
t: 33
xxx after update is x: 3.16216039658
y: -44.1740531921
theta: 1.50070524216
speed: 13.8954124451
id: 0
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: 3.16216039658
y: -44.1740531921
theta: 1.50070524216
speed: 13.8954124451
id: 0
t: 34
xxx after update is x: 3.67537379265
y: -43.3798217773
theta: 1.47593748569
speed: 13.7703180313
id: 0
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: 3.67537379265
y: -43.3798217773
theta: 1.47593748569
speed: 13.7703180313
id: 0
t: 35
xxx after update is x: 2.96857118607
y: -42.8573226929
theta: 1.44538068771
speed: 13.8600797653
id: 0
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: 2.96857118607
y: -42.8573226929
theta: 1.44538068771
speed: 13.8600797653
id: 0
t: 36
xxx after update is x: 2.96937274933
y: -42.3864746094
theta: 1.47006928921
speed: 13.9997158051
id: 0
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: 2.96937274933
y: -42.3864746094
theta: 1.47006928921
speed: 13.9997158051
id: 0
t: 37
xxx after update is x: 3.60726809502
y: -40.9976081848
theta: 1.55106520653
speed: 13.756983757
id: 0
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: 3.60726809502
y: -40.9976081848
theta: 1.55106520653
speed: 13.756983757
id: 0
t: 38
xxx after update is x: 3.812619 function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: -3.26083421707
y: 51.7546463013
theta: 4.78741455078
speed: 13.8196372986
id: 1
t: 37
xxx after update is x: -3.14330077171
y: 50.819858551
theta: 4.6807384491
speed: 13.713136673
id: 1
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: -3.14330077171
y: 50.819858551
theta: 4.6807384491
speed: 13.713136673
id: 1
t: 38
xxx after update is x: -3.27136111259
y: 50.759147644
theta: 4.71439790726
speed: 14.0123586655
id: 1
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: -3.27136111259
y: 50.759147644
theta: 4.71439790726
speed: 14.0123586655
id: 1
t: 39
xxx after update is x: -2.78775668144
y: 51.0162353516
theta: 4.71751260757
speed: 13.6591520309
id: 1
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.38340657564624103, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3245606422424316, -40.76224136352539, 1.533174991607666, 13.892057418823242)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.78775668144
y: 51.0162353516
theta: 4.71751260757
speed: 13.6591520309
id: 1
t: 40
xxx after update is x: -3.27618670464
y: 49.3977584839
theta: 4.50882482529
speed: 13.6743001938
id: 1
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:41




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: -3.27618670464
y: 49.3977584839
theta: 4.50882482529
speed: 13.6743001938
id: 1
t: 41
xxx after update is x: -3.20180130005
y: 48.6602592468
theta: 4.61393785477
speed: 13.7845525742
id: 1
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.86666666667






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: -3.20180130005
y: 48.6602592468
theta: 4.61393785477
speed: 13.7845525742
id: 1
t: 42
xxx after update is x: -2.89091300964
y: 48.5700454712
theta: 4.64811086655
speed: 13.7625608444
id: 1
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: -2.89091300964
y: 48.5700454712
theta: 4.64811086655
speed: 13.7625608444
id: 1
t: 43
xxx after update is x: -3.47258424759
y: 47.6884078979
theta: 4.68291950226
speed: 13.5747861862
id: 1
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.47258424759
y: 47.6884078979
theta: 4.68291950226
speed: 13.5747861862
id: 1
t: 44
xxx after update is x: -3.07416129112
y: 68613
y: -41.1163291931
theta: 1.72383034229
speed: 13.8465528488
id: 0
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: 3.81261968613
y: -41.1163291931
theta: 1.72383034229
speed: 13.8465528488
id: 0
t: 39
xxx after update is x: 3.32456064224
y: -40.7622413635
theta: 1.53317499161
speed: 13.8920574188
id: 0
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.32456064224
y: -40.7622413635
theta: 1.53317499161
speed: 13.8920574188
id: 0
t: 40
xxx after update is x: 2.91468930244
y: -39.1180496216
theta: 1.56542170048
speed: 14.1052341461
id: 0
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:41


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.82222222222






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: 2.91468930244
y: -39.1180496216
theta: 1.56542170048
speed: 14.1052341461
id: 0
t: 41
xxx after update is x: 3.77342128754
y: -38.5951538086
theta: 1.34410345554
speed: 13.7246026993
id: 0
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.77342128754
y: -38.5951538086
theta: 1.34410345554
speed: 13.7246026993
id: 0
t: 42
xxx after update is x: 2.50954270363
y: -38.3083648682
theta: 1.4989233017
speed: 14.1881113052
id: 0
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:43




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: 2.50954270363
y: -38.3083648682
theta: 1.4989233017
speed: 14.1881113052
id: 0
t: 43
xxx after update is x: 2.85711550713
y: -37.6243095398
theta: 1.56628704071
speed: 13.9361543655
id: 0
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.298066868408734, 0.6015476156759584]
222 self.state_dicts[msg.id][msg.t] is (-3.4725842475891113, 47.68840789794922, 4.682919502258301, 13.574786186218262)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: 2.85711550713
y: -37.6243095398
theta: 1.56628704071
speed: 13.9361543655
id: 0
t: 44
xxx after update is x: 3.09182929993
y: -37.0901565552
theta: 1.72898602486
speed: 14.1250333786
id: 0
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: 3.09182929993
y: -37.0901565552
theta: 1.72898602486
speed: 14.1250333786
id: 0
t: 45
xxx after update is x: 2.58155846596
y: -36.9569854736
theta: 1.62052166462
speed: 13.5885715485
id: 0
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times 46.4890899658
theta: 4.78422355652
speed: 13.8972196579
id: 1
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:45




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: -3.07416129112
y: 46.4890899658
theta: 4.78422355652
speed: 13.8972196579
id: 1
t: 45
xxx after update is x: -3.50973963737
y: 46.8895111084
theta: 4.76300859451
speed: 13.5940494537
id: 1
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: -3.50973963737
y: 46.8895111084
theta: 4.76300859451
speed: 13.5940494537
id: 1
t: 46
xxx after update is x: -3.07333469391
y: 45.5021896362
theta: 4.79597949982
speed: 14.1314563751
id: 1
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: -3.07333469391
y: 45.5021896362
theta: 4.79597949982
speed: 14.1314563751
id: 1
t: 47
xxx after update is x: -3.02081108093
y: 44.9861907959
theta: 4.67384386063
speed: 13.892083168
id: 1
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: -3.02081108093
y: 44.9861907959
theta: 4.67384386063
speed: 13.892083168
id: 1
t: 48
xxx after update is x: -3.56754732132
y: 44.9983024597
theta: 4.58731460571
speed: 13.6484460831
id: 1
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: -3.56754732132
y: 44.9983024597
theta: 4.58731460571
speed: 13.6484460831
id: 1
t: 49
xxx after update is x: -3.41328263283
y: 43.9433441162
theta: 4.62385702133
speed: 14.0175666809
id: 1
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.22222222222






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: -3.41328263283
y: 43.9433441162
theta: 4.62385702133
speed: 14.0175666809
id: 1
t: 50
xxx after update is x: -3.3560731411
y: 43.288394928
theta: 4.75906944275
speed: 13.8832149506
id: 1
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: -3.3560731411
y: 43.288394928
theta: 4.75906944275
speed: 13.8832149506
id: 1
t: 51
xxx after update is x: -3.59253025055
y: 42.6748466492
theta: 4.77362775803
speed: 13.9179735184
id: 1
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:53


xxx before update is x: -3.59253025055
y: 42.6748466492
theta: 4.77362775803
speed: 13.9179735184
id: 1
t: 52
xspin:47

xxx before update is x: 2.58155846596
y: -36.9569854736
theta: 1.62052166462
speed: 13.5885715485
id: 0
t: 46
xxx after update is x: 3.20467495918
y: -36.3656997681
theta: 1.54512739182
speed: 13.3538103104
id: 0
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: 3.20467495918
y: -36.3656997681
theta: 1.54512739182
speed: 13.3538103104
id: 0
t: 47
xxx after update is x: 2.38707399368
y: -35.5134658813
theta: 1.54475367069
speed: 13.9121828079
id: 0
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: 2.38707399368
y: -35.5134658813
theta: 1.54475367069
speed: 13.9121828079
id: 0
t: 48
xxx after update is x: 3.55685687065
y: -35.0981903076
theta: 1.50927472115
speed: 14.1527357101
id: 0
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.17777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: 3.55685687065
y: -35.0981903076
theta: 1.50927472115
speed: 14.1527357101
id: 0
t: 49
xxx after update is x: 3.48993682861
y: -34.1360168457
theta: 1.76161420345
speed: 14.0899839401
id: 0
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: 3.48993682861
y: -34.1360168457
theta: 1.76161420345
speed: 14.0899839401
id: 0
t: 50
xxx after update is x: 2.86446237564
y: -33.6393127441
theta: 1.58163285255
speed: 13.961145401
id: 0
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: 2.86446237564
y: -33.6393127441
theta: 1.58163285255
speed: 13.961145401
id: 0
t: 51
xxx after update is x: 2.96643042564
y: -32.6152191162
theta: 1.66000664234
speed: 13.8400878906
id: 0
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:53


xxx before update is x: 2.96643042564
y: -32.6152191162
theta: 1.66000664234
speed: 13.8400878906
id: 0
t: 52
xxx after update is x: 3.15641760826
y: -32.124256134
theta: 1.55140340328
speed: 13.8266639709
id: 0
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: 3.15641760826
y: -32.124256134
theta: 1.55140340328
speed: 13.8266639709
id: 0
t: 53
xxx after update is x: 3.24196457863
y: -32.2988624573
theta: 1.57833445072
speed: 14.028591156
id: 0
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: 3.24196457863
y: -32.2988624573
theta: 1.57833445072
speed: 14.028591156
id: 0
t: 54
xxx after update is x: 3.21773386002
y: -3xx after update is x: -3.24773430824
y: 41.8725280762
theta: 4.50588321686
speed: 13.7313041687
id: 1
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: -3.24773430824
y: 41.8725280762
theta: 4.50588321686
speed: 13.7313041687
id: 1
t: 53
xxx after update is x: -3.19341301918
y: 41.4324417114
theta: 4.52272367477
speed: 13.6789875031
id: 1
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: -3.19341301918
y: 41.4324417114
theta: 4.52272367477
speed: 13.6789875031
id: 1
t: 54
xxx after update is x: -3.93625020981
y: 41.1610794067
theta: 4.79042673111
speed: 14.0330753326
id: 1
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: -3.93625020981
y: 41.1610794067
theta: 4.79042673111
speed: 14.0330753326
id: 1
t: 55
xxx after update is x: -3.83746552467
y: 40.7187042236
theta: 4.76099538803
speed: 13.6846494675
id: 1
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.83746552467
y: 40.7187042236
theta: 4.76099538803
speed: 13.6846494675
id: 1
t: 56
xxx after update is x: -3.68180656433
y: 39.9249610901
theta: 4.85845661163
speed: 13.7500190735
id: 1
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:57


aaaaaa
aaaaaabbbbb
risk is [0.4084536926412663, 0]
222 self.state_dicts[msg.id][msg.t] is (3.034268617630005, -30.134279251098633, 1.6343111991882324, 13.821495056152344)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: -3.68180656433
y: 39.9249610901
theta: 4.85845661163
speed: 13.7500190735
id: 1
t: 57
xxx after update is x: -3.47887277603
y: 38.4423332214
theta: 4.79076480865
speed: 14.2596063614
id: 1
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.57777777778






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: -3.47887277603
y: 38.4423332214
theta: 4.79076480865
speed: 14.2596063614
id: 1
t: 58
xxx after update is x: -3.13098788261
y: 38.7664299011
theta: 5.01041078568
speed: 13.8053779602
id: 1
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: -3.13098788261
y: 38.7664299011
theta: 5.01041078568
speed: 13.8053779602
id: 1
t: 59
xxx after update is x: -3.40164017677
y: 38.5135231018
theta: 4.69771623611
speed: 13.8116607666
id: 1
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update funct1.0598831177
theta: 1.52278995514
speed: 14.3562145233
id: 0
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: 3.21773386002
y: -31.0598831177
theta: 1.52278995514
speed: 14.3562145233
id: 0
t: 55
xxx after update is x: 3.46517205238
y: -30.7265701294
theta: 1.50256001949
speed: 13.9440603256
id: 0
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: 3.46517205238
y: -30.7265701294
theta: 1.50256001949
speed: 13.9440603256
id: 0
t: 56
xxx after update is x: 3.03426861763
y: -30.1342792511
theta: 1.63431119919
speed: 13.8214950562
id: 0
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.27929642619220235, 0.3106892188247653]
222 self.state_dicts[msg.id][msg.t] is (-3.6818065643310547, 39.92496109008789, 4.858456611633301, 13.750019073486328)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.53333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: 3.03426861763
y: -30.1342792511
theta: 1.63431119919
speed: 13.8214950562
id: 0
t: 57
xxx after update is x: 2.95307779312
y: -29.4374408722
theta: 1.65547418594
speed: 13.9837837219
id: 0
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: 2.95307779312
y: -29.4374408722
theta: 1.65547418594
speed: 13.9837837219
id: 0
t: 58
xxx after update is x: 3.1175031662
y: -28.6567573547
theta: 1.40289533138
speed: 14.1815404892
id: 0
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: 3.1175031662
y: -28.6567573547
theta: 1.40289533138
speed: 14.1815404892
id: 0
t: 59
xxx after update is x: 3.24451971054
y: -28.3741168976
theta: 1.57258200645
speed: 13.8916215897
id: 0
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: 3.24451971054
y: -28.3741168976
theta: 1.57258200645
speed: 13.8916215897
id: 0
t: 60
xxx after update is x: 3.38831377029
y: -27.7140808105
theta: 1.56255269051
speed: 13.4783716202
id: 0
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: 3.38831377029
y: -27.7140808105
theta: 1.56255269051
speed: 13.4783716202
id: 0
t: 61
xxx after update is x: 3.37872648239
y: -26.9780979156
theta: 1.72600746155
speed: 13.9071302414
id: 0
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:63


xxx before updateion
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: -3.40164017677
y: 38.5135231018
theta: 4.69771623611
speed: 13.8116607666
id: 1
t: 60
xxx after update is x: -3.27261734009
y: 37.6259422302
theta: 4.85964250565
speed: 13.9591913223
id: 1
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: -3.27261734009
y: 37.6259422302
theta: 4.85964250565
speed: 13.9591913223
id: 1
t: 61
xxx after update is x: -2.9106836319
y: 36.5552787781
theta: 4.63361310959
speed: 13.5451583862
id: 1
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: -2.9106836319
y: 36.5552787781
theta: 4.63361310959
speed: 13.5451583862
id: 1
t: 62
xxx after update is x: -3.229793787
y: 35.9746131897
theta: 4.74739027023
speed: 14.1255731583
id: 1
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: -3.229793787
y: 35.9746131897
theta: 4.74739027023
speed: 14.1255731583
id: 1
t: 63
xxx after update is x: -2.74647593498
y: 36.0701713562
theta: 4.72629022598
speed: 13.9899263382
id: 1
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.368715334796436, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0393149852752686, -25.222749710083008, 1.6292115449905396, 13.3616304397583)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: -2.74647593498
y: 36.0701713562
theta: 4.72629022598
speed: 13.9899263382
id: 1
t: 64
xxx after update is x: -3.56261587143
y: 35.0535697937
theta: 4.66584014893
speed: 14.4329090118
id: 1
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: -3.56261587143
y: 35.0535697937
theta: 4.66584014893
speed: 14.4329090118
id: 1
t: 65
xxx after update is x: -2.63452672958
y: 34.0015106201
theta: 4.80412435532
speed: 13.9169111252
id: 1
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.93333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: -2.63452672958
y: 34.0015106201
theta: 4.80412435532
speed: 13.9169111252
id: 1
t: 66
xxx after update is x: -3.20398163795
y: 33.5379600525
theta: 4.69855690002
speed: 14.0063371658
id: 1
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: -3.20398163795
y: 33.5 is x: 3.37872648239
y: -26.9780979156
theta: 1.72600746155
speed: 13.9071302414
id: 0
t: 62
xxx after update is x: 3.28294563293
y: -26.5197753906
theta: 1.72282648087
speed: 13.8376989365
id: 0
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: 3.28294563293
y: -26.5197753906
theta: 1.72282648087
speed: 13.8376989365
id: 0
t: 63
xxx after update is x: 3.03931498528
y: -25.2227497101
theta: 1.62921154499
speed: 13.3616304398
id: 0
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: 3.03931498528
y: -25.2227497101
theta: 1.62921154499
speed: 13.3616304398
id: 0
t: 64
xxx after update is x: 3.34825849533
y: -25.3302497864
theta: 1.5440363884
speed: 12.8101177216
id: 0
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.42352641878295755, 0.30778234313785585]
222 self.state_dicts[msg.id][msg.t] is (-3.5626158714294434, 35.05356979370117, 4.665840148925781, 14.43290901184082)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.88888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: 3.34825849533
y: -25.3302497864
theta: 1.5440363884
speed: 12.8101177216
id: 0
t: 65
xxx after update is x: 3.41662836075
y: -24.4623908997
theta: 1.59649276733
speed: 12.8011236191
id: 0
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: 3.41662836075
y: -24.4623908997
theta: 1.59649276733
speed: 12.8011236191
id: 0
t: 66
xxx after update is x: 3.64205145836
y: -24.261554718
theta: 1.58626329899
speed: 12.929017067
id: 0
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: 3.64205145836
y: -24.261554718
theta: 1.58626329899
speed: 12.929017067
id: 0
t: 67
xxx after update is x: 3.23795509338
y: -23.2700481415
theta: 1.60620045662
speed: 12.9313211441
id: 0
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: 3.23795509338
y: -23.2700481415
theta: 1.60620045662
speed: 12.9313211441
id: 0
t: 68
xxx after update is x: 3.16291165352
y: -22.4948329926
theta: 1.62201631069
speed: 12.3614873886
id: 0
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3225969668142786, 0.3017959759888284]
222 self.state_dicts[msg.id][msg.t] is (-3.2908525466918945, 32.64802551269531, 4.805988788604736, 13.991765022277832)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: 3.16291165352
y: -22.4948329926
theta: 1.62201631069
speed: 12.36148738379600525
theta: 4.69855690002
speed: 14.0063371658
id: 1
t: 67
xxx after update is x: -3.42649269104
y: 33.3391456604
theta: 4.85541677475
speed: 13.8389101028
id: 1
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.450217788112778, 0]
222 self.state_dicts[msg.id][msg.t] is (3.237955093383789, -23.270048141479492, 1.6062004566192627, 12.931321144104004)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: -3.42649269104
y: 33.3391456604
theta: 4.85541677475
speed: 13.8389101028
id: 1
t: 68
xxx after update is x: -3.29085254669
y: 32.6480255127
theta: 4.8059887886
speed: 13.9917650223
id: 1
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: -3.29085254669
y: 32.6480255127
theta: 4.8059887886
speed: 13.9917650223
id: 1
t: 69
xxx after update is x: -2.73211884499
y: 32.2141876221
theta: 4.77397727966
speed: 13.8594379425
id: 1
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: -2.73211884499
y: 32.2141876221
theta: 4.77397727966
speed: 13.8594379425
id: 1
t: 70
xxx after update is x: -3.784760952
y: 30.8902492523
theta: 4.82933425903
speed: 14.0150375366
id: 1
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.479566259943474, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3171374797821045, -21.46131706237793, 1.5758767127990723, 12.104667663574219)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: -3.784760952
y: 30.8902492523
theta: 4.82933425903
speed: 14.0150375366
id: 1
t: 71
xxx after update is x: -3.09711098671
y: 30.7816371918
theta: 4.70382356644
speed: 13.8927345276
id: 1
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: -3.09711098671
y: 30.7816371918
theta: 4.70382356644
speed: 13.8927345276
id: 1
t: 72
xxx after update is x: -3.27300000191
y: 30.2348365784
theta: 4.84671926498
speed: 13.9875764847
id: 1
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: -3.27300000191
y: 30.2348365784
theta: 4.84671926498
speed: 13.9875764847
id: 1
t: 73
xxx after update is x: -3.44906902313
y: 29.4940872192
theta: 4.70718002319
speed: 13.9418144226
id: 1
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.28888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.28888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,messag86
id: 0
t: 69
xxx after update is x: 3.29065823555
y: -22.133600235
theta: 1.60368001461
speed: 12.1921472549
id: 0
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: 3.29065823555
y: -22.133600235
theta: 1.60368001461
speed: 12.1921472549
id: 0
t: 70
xxx after update is x: 3.31713747978
y: -21.4613170624
theta: 1.5758767128
speed: 12.1046676636
id: 0
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: 3.31713747978
y: -21.4613170624
theta: 1.5758767128
speed: 12.1046676636
id: 0
t: 71
xxx after update is x: 3.38280701637
y: -20.8319454193
theta: 1.67031037807
speed: 11.6022577286
id: 0
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: 3.38280701637
y: -20.8319454193
theta: 1.67031037807
speed: 11.6022577286
id: 0
t: 72
xxx after update is x: 3.56962442398
y: -20.3105602264
theta: 1.70087778568
speed: 11.486451149
id: 0
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.24444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaazzzzz
risk is [0.29926840388677967, 0.37007077874026684]
222 self.state_dicts[msg.id][msg.t] is (-3.2730000019073486, 30.23483657836914, 4.846719264984131, 13.987576484680176)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:
























initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$


maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 1
current clock is 3.24444444444
!!!!after check statue the self.tag is [3.2444444444444445, 0, 'left']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.24444444444

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.2444444444444445, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.24444444444,(3.569624423980713, -20.31056022644043, 1.7008777856826782),11,1,3.24444444444,0,left






!!!!change state to get





GET,0,3.24444444444,(3.569624423980713, -20.31056022644043, 1.7008777856826782),11,1,3.24444444444,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.24444444444
self.communication_details == 0



sending GET,0,3.24444444444,(3.569624423980713, -20.31056022644043, 1.7008777856826782),11,1,3.24444444444,0,left to car 1 from car 0



maneuver_negotiatir.py finish the update_agent_message
 self.man_init:
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: 3.56962442398
y: -20.3105602264
theta: 1.70087778568
speed: 11.486451149
id: 0
t: 73
xxx after update is x: 2.8521399498
y: -20.1861476898
theta: 1.70871603489
speed: 11.2779846191
id: 0
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.28888888889




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.28888888889
maneuver_negotiatir.py messe type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.24444444444', 'Sender': '0', 'Time': '3.24444444444', 'IntendedCourse': 'left', 'Position': ['3.569624423980713', ' -20.31056022644043', ' 1.7008777856826782'], 'TagID': '0', 'Type': 'GET', 'Velocity': '11'}



car 1 received GET,0,3.24444444444,(3.569624423980713, -20.31056022644043, 1.7008777856826782),11,1,3.24444444444,0,left from  car0
status: 1



maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.144197530864
sender travel direction is:  north
sender earliest entering time is:  1.85231688363
sender last entering time is:  2.25037934996
sender last leaving time is:  4.42800245458
my entering time is:  1.7313273662
my leaving time is:  4.39845720155
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.28888888889
self.communication_details == 0



sending DENY,1,3.28888888889,(-2.6345267295837402, 34.00151062011719, 4.804124355316162),13,1,0,0 to car 0 from car 1




maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.28888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.5191152242120668, 0]
222 self.state_dicts[msg.id][msg.t] is (2.852139949798584, -20.186147689819336, 1.7087160348892212, 11.277984619140625)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: -3.44906902313
y: 29.4940872192
theta: 4.70718002319
speed: 13.9418144226
id: 1
t: 74
xxx after update is x: -2.68401670456
y: 28.8544597626
theta: 4.637114048
speed: 13.9621887207
id: 1
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: -2.68401670456
y: 28.8544597626
theta: 4.637114048
speed: 13.9621887207
id: 1
t: 75
xxx after update is x: -2.91514110565
y: 27.7162837982
theta: 4.60771512985
speed: 13.8917064667
id: 1
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: -2.91514110565
y: 27.7162837982
theta: 4.60771512985
speed: 13.8917064667
id: 1
t: 76
xxx after update is x: -2.9709379673
y: 27.1966075897
theta: 4.73789072037
speed: 14.1823577881
id: 1
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.2824119310142459, 0]
222 self.state_dicts[msg.id][msg.t] is (2.944720983505249, -18.27569580078125, 1.6432230472564697, 10.199638366699219)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:78


xxx before update is x: -2.9709379673
y: 27.1966075897
theta: 4.73789072037
speed: 14.1823577881
id: 1
t: 77
xxx after update is x: -3.26543879509
y: 27.3631267548
theta: 4.78292036057
speed: 14.0376386642
id: 1
t: 78
maneuver_negotiatir.py finish the update agent state from ros fage_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '3.28888888889', 'Position': ['(-2.6345267295837402', ' 34.00151062011719', ' 4.804124355316162)'], 'Type': 'DENY'}












car 0 received DENY,1,3.28888888889,(-2.6345267295837402, 34.00151062011719, 4.804124355316162),13,1,0,0 from  car1
status: 2









maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.2444444444444445, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.2444444444444445, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




finish try maneuver


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: 2.8521399498
y: -20.1861476898
theta: 1.70871603489
speed: 11.2779846191
id: 0
t: 74
xxx after update is x: 3.48436450958
y: -19.0165157318
theta: 1.65842962265
speed: 10.8781871796
id: 0
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: 3.48436450958
y: -19.0165157318
theta: 1.65842962265
speed: 10.8781871796
id: 0
t: 75
xxx after update is x: 3.00648188591
y: -18.6106948853
theta: 1.646910429
speed: 10.909734726
id: 0
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: 3.00648188591
y: -18.6106948853
theta: 1.646910429
speed: 10.909734726
id: 0
t: 76
xxx after update is x: 2.94472098351
y: -18.2756958008
theta: 1.64322304726
speed: 10.1996383667
id: 0
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:78


xxx before update is x: 2.94472098351
y: -18.2756958008
theta: 1.64322304726
speed: 10.1996383667
id: 0
t: 77
xxx after update is x: 3.62622475624
y: -18.4126796722
theta: 1.5944070816
speed: 9.90983295441
id: 0
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: 3.62622475624
y: -18.4126796722
theta: 1.5944070816
speed: 9.90983295441
id: 0
t: 78
xxx after update is x: 3.25364518166
y: -17.8336219788
theta: 1.65549337864
speed: 10.085735321
id: 0
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.4069039177756818, 0.3337735426591584]
222 self.state_dicts[msg.id][msg.t] is (-2.8393969535827637, 26.355525970458984, 4.639004707336426, 13.816766738891602)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.25364518166
y: -17.8336219788
theta: 1.65549337864
speed: 10.085735321
id: 0
t: 79
xxx after update is x: 3.30552840233
y: -17.1519126892
theta: 1.56668114662
speed: 9.7849407196
id: 0
tuntion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.26543879509
y: 27.3631267548
theta: 4.78292036057
speed: 14.0376386642
id: 1
t: 78
xxx after update is x: -2.83939695358
y: 26.3555259705
theta: 4.63900470734
speed: 13.8167667389
id: 1
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:79




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.83939695358
y: 26.3555259705
theta: 4.63900470734
speed: 13.8167667389
id: 1
t: 79
xxx after update is x: -3.45196700096
y: 25.8622322083
theta: 4.71459245682
speed: 13.8535404205
id: 1
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:80


Received -->>: 
current clock is 3.55555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.55555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '9', 'Sender': '0', 'TagID': '1', 'Time': '3.55555555556', 'Position': ['(3.305528402328491', ' -17.151912689208984', ' 1.566681146621704)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,3.55555555556,(3.305528402328491, -17.151912689208984, 1.566681146621704),9,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: -3.45196700096
y: 25.8622322083
theta: 4.71459245682
speed: 13.8535404205
id: 1
t: 80
xxx after update is x: -3.08008050919
y: 25.165145874
theta: 4.88230133057
speed: 14.1915483475
id: 1
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.6






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: -3.08008050919
y: 25.165145874
theta: 4.88230133057
speed: 14.1915483475
id: 1
t: 81
xxx after update is x: -2.99263072014
y: 24.1212825775
theta: 4.64321517944
speed: 14.1817054749
id: 1
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.14121042797093955, 0]
222 self.state_dicts[msg.id][msg.t] is (3.388211488723755, -16.616899490356445, 1.6294333934783936, 9.006397247314453)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:83


xxx before update is x: -2.99263072014
y: 24.1212825775
theta: 4.64321517944
speed: 14.1817054749
id: 1
t: 82
xxx after update is x: -3.53050279617
y: 23.4692764282
theta: 4.7679643631
speed: 14.0655117035
id: 1
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: -3.53050279617
y: 23.4692764282
theta: 4.7679643631
speed: 14.0655117035
id: 1
t: 83
xxx after update is x: -3.19440460205
y: 23.120054245
theta: 4.60783958435
speed: 13.7778358459
id: 1
t: 84
maneuver_negotia: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:80


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.55555555556






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.511111111111111, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 3.55555555556
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.51111111111
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer


!!!!change state to TRYGET


RELEASE,0,3.55555555556,(3.305528402328491, -17.151912689208984, 1.566681146621704),9,1,3.24444444444,0



maneuver_negotiatir.py start the update_agent_message
current clock is 3.55555555556
self.communication_details == 0





sending RELEASE,0,3.55555555556,(3.305528402328491, -17.151912689208984, 1.566681146621704),9,1,3.24444444444,0 to car 1 from car 0





maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: 3.30552840233
y: -17.1519126892
theta: 1.56668114662
speed: 9.7849407196
id: 0
t: 80
xxx after update is x: 3.6848180294
y: -16.8335170746
theta: 1.54987514019
speed: 9.69405841827
id: 0
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: 3.6848180294
y: -16.8335170746
theta: 1.54987514019
speed: 9.69405841827
id: 0
t: 81
xxx after update is x: 3.38821148872
y: -16.6168994904
theta: 1.62943339348
speed: 9.00639724731
id: 0
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:83


xxx before update is x: 3.38821148872
y: -16.6168994904
theta: 1.62943339348
speed: 9.00639724731
id: 0
t: 82
xxx after update is x: 3.12097811699
y: -15.8185081482
theta: 1.72804927826
speed: 9.27370357513
id: 0
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: 3.12097811699
y: -15.8185081482
theta: 1.72804927826
speed: 9.27370357513
id: 0
t: 83
xxx after update is x: 3.09546971321
y: -15.5411310196
theta: 1.64249587059
speed: 8.73102474213
id: 0
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: 3.09546971321
y: -15.5411310196
theta: 1.64249587059
speed: 8.73102474213
id: 0
t: 84
xxx after update is x: 2.8887193203
y: -15.2278232574
theta: 1.56987500191
speed: 8.75504589081
id: 0
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: 2.8887193203
y: -15.2278232574
theta: 1.56987500191
speed: 8.75504589081
id: 0
t: 85
xxx after update is x: 3.80027341843
y: -14.7015771866
theta: 1.48290491104
speed: 8.15135765076
id: 0
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: 3.80027341843
y: -14.7015771866
theta: 1.48290491104
speed: 8.15135765076
id: 0
t: 86
xxx after update is x: 3.31200671196
y: -14.4818105698
theta: 1.60061764717
speed: 7.98063707352
id: 0
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: 3.31200671196
y: -14.4818105698
theta: 1.60061764717
speed: 7.98063707352
id: 0
t: 87
xxx after update is x: 3.42718791962
y: -14.0656366348
theta: 1.53204476833
speed: 8.35045337677
id: 0
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6


change normal to tryget(for the case tryget, it doesn't need to chcnge)


current clock is 3.91111111111

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.8666666666666667, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.91111111111,(3.427187919616699, -14.06563663482666, 1.532044768333435),8,1,3.24444444444,0,left
!!!!change state to get


GET,0,3.91111111111,(3.427187919616699, -14.06563663482666, 1.532044768333435),8,1,3.24444444444,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.91111111111
self.communication_details == 0
sending GET,0,3.91111111111,(3.427187919616699, -14.06563663482666, 1.532044768333435),8,1,3.24444444444,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
Received -->>: 
current clock is 3.91111111111




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.91111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '14', 'Sender': '1', 'TagID': '1', 'Time': '3.91111111111', 'Position': ['(-3.080080509185791', ' 25.165145874023438', ' 4.882301330566406)'], 'Type': 'DENY'}
car 0 received DENY,1,3.91111111111,(-3.080080509185791, 25.165145874023438, 4.882301330566406),14,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.8666666666666667, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.8666666666666667, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.91111111111






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.8666666666666667, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 3.91111111111
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.86666666667
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,3.91111111111,(3.427187919tir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: -3.19440460205
y: 23.120054245
theta: 4.60783958435
speed: 13.7778358459
id: 1
t: 84
xxx after update is x: -3.11840367317
y: 22.0181903839
theta: 4.57329130173
speed: 13.8345041275
id: 1
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: -3.11840367317
y: 22.0181903839
theta: 4.57329130173
speed: 13.8345041275
id: 1
t: 85
xxx after update is x: -3.06103825569
y: 22.5677680969
theta: 4.73584651947
speed: 13.6332263947
id: 1
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.06103825569
y: 22.5677680969
theta: 4.73584651947
speed: 13.6332263947
id: 1
t: 86
xxx after update is x: -3.27312397957
y: 21.2075767517
theta: 4.53471231461
speed: 13.7471113205
id: 1
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:87




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: -3.27312397957
y: 21.2075767517
theta: 4.53471231461
speed: 13.7471113205
id: 1
t: 87
xxx after update is x: -3.6831305027
y: 20.5806980133
theta: 4.67094373703
speed: 13.8366613388
id: 1
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.91111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.91111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.24444444444', 'Sender': '0', 'Time': '3.91111111111', 'IntendedCourse': 'left', 'Position': ['3.427187919616699', ' -14.06563663482666', ' 1.532044768333435'], 'TagID': '0', 'Type': 'GET', 'Velocity': '8'}
car 1 received GET,0,3.91111111111,(3.427187919616699, -14.06563663482666, 1.532044768333435),8,1,3.24444444444,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.173827160494
sender travel direction is:  north
sender earliest entering time is:  1.23884392789
sender last entering time is:  2.17382716049
sender last leaving time is:  4.54712541692
my entering time is:  1.11919297301
my leaving time is:  3.14455878552
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.91111111111
self.communication_details == 0
sending DENY,1,3.91111111111,(-3.080080509185791, 25.165145874023438, 4.882301330566406),14,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




Received -->>: 
current clock is 3.91111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.91111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '8', 'Sender': '0', 'TagID': '1', 'Time': '3.91111111111', 'Position': ['(3.427187919616699', ' -14.06563663482666', ' 1.532044768333435)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,3.91111111111,(3.427187919616699, -14.06563663482666, 1.532044768333435),8,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: -3.6831305027
y: 20.5806980133
theta: 4.67094373703
speed: 13.8366613388
id: 1
t: 88
xxx after update is x: -3.46542072296
y: 19.9422721863
theta: 4.74544477463
speed: 14.1822443008
id: 1
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.95555555556






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:90




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: -3.46542072296
y: 19.9422721863
theta: 4.74544477463
speed: 14.1822443008
id: 1
t: 89
xxx after update is x: -3.37368440628
y: 18.4750709534
theta: 4.71877670288
speed: 13.60135746
id: 1
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.37368440628
y: 18.4750709534
theta: 4.71877670288
speed: 13.60135746
id: 1
t: 90
xxx after update is x: -3.40997886658
y: 18.2514743805
theta: 4.75906896591
speed: 13.7321157455
id: 1
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:92


xxx before update is x: -3.40997886658
y: 18.2514743805
theta: 4.75906896591
speed: 13.7321157455
id: 1
t: 91
xxx after update is x: -3.11400365829
y: 18.5507965088
theta: 4.62782764435
speed: 13.7440900803
id: 1
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: -3.11400365829
y: 18.5507965088
theta: 4.62782764435
speed: 13.7440900803
id: 1
t: 92
xxx after update is x: -3.12218022346
y: 17.4022789001
theta: 4.74757909775
speed: 13.8750619888
id: 1
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.03967070099739315, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0617053508758545, -12.115476608276367, 1.71945059299469, 6.786844253540039)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: -3.12218022346
y: 17.4022789001
theta: 4.74757909775
speed: 13.8750619888
id: 1
t: 93
xxx after update is x: -2.63658761978
y: 17.153547287
theta: 4.50669193268
speed: 13.4645681381
id: 1
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: -2.63658761978
y: 17.153547287
theta: 4.50669193268
speed: 13.4645681381
id: 1
t: 94
xxx after update is x: -3.19450950623
y: 16.11616699, -14.06563663482666, 1.532044768333435),8,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 3.91111111111
self.communication_details == 0
sending RELEASE,0,3.91111111111,(3.427187919616699, -14.06563663482666, 1.532044768333435),8,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.42718791962
y: -14.0656366348
theta: 1.53204476833
speed: 8.35045337677
id: 0
t: 88
xxx after update is x: 3.2583220005
y: -13.6413984299
theta: 1.46997892857
speed: 8.2646074295
id: 0
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:89


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.2583220005
y: -13.6413984299
theta: 1.46997892857
speed: 8.2646074295
id: 0
t: 89
xxx after update is x: 3.36320257187
y: -13.1723308563
theta: 1.52639114857
speed: 7.42619562149
id: 0
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:90




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: 3.36320257187
y: -13.1723308563
theta: 1.52639114857
speed: 7.42619562149
id: 0
t: 90
xxx after update is x: 2.99647951126
y: -12.6302509308
theta: 1.57759511471
speed: 7.58690261841
id: 0
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:92


xxx before update is x: 2.99647951126
y: -12.6302509308
theta: 1.57759511471
speed: 7.58690261841
id: 0
t: 91
xxx after update is x: 3.6056728363
y: -12.7086267471
theta: 1.64909780025
speed: 7.11080980301
id: 0
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.19678430774864392, 0.300891022498457]
222 self.state_dicts[msg.id][msg.t] is (-3.1140036582946777, 18.550796508789062, 4.6278276443481445, 13.74409008026123)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: 3.6056728363
y: -12.7086267471
theta: 1.64909780025
speed: 7.11080980301
id: 0
t: 92
xxx after update is x: 3.06170535088
y: -12.1154766083
theta: 1.71945059299
speed: 6.78684425354
id: 0
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: 3.06170535088
y: -12.1154766083
theta: 1.71945059299
speed: 6.78684425354
id: 0
t: 93
xxx after update is x: 2.96650600433
y: -11.8265161514
theta: 1.60335171223
speed: 6.6031794548
id: 0
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: 2.96650600433
y: -11.8265161514
theta: 1.60335171223
speed: 6.6031794548
id: 0
t: 94
xxx after update is x: 3.59197354317
y: -11.5117502213
theta: 1.61840367317
speed: 6.46208667755
id: 0
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: 3.59197354317
y: -11.5117502213
theta: 1.61840367317
speed: 6.46208667755
id: 0
t: 95
xxx after update is x: 3.63614463806
y: -11.7538299561
theta: 1.64929580688
speed: 6.07678604126
id: 0
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 4.26666666667

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.266666666666667, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.26666666667,(3.6361446380615234, -11.753829956054688, 1.6492958068847656),6,1,3.24444444444,0,left
!!!!change state to get
GET,0,4.26666666667,(3.6361446380615234, -11.753829956054688, 1.6492958068847656),6,1,3.24444444444,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 4.26666666667
self.communication_details == 0
sending GET,0,4.26666666667,(3.6361446380615234, -11.753829956054688, 1.6492958068847656),6,1,3.24444444444,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.26666666667






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0
Received -->>: 
current clock is 4.26666666667




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 4.26666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '14', 'Sender': '1', 'TagID': '1', 'Time': '4.26666666667', 'Position': ['(-3.465420722961426', ' 19.942272186279297', ' 4.7454447746276855)'], 'Type': 'DENY'}
car 0 received DENY,1,4.26666666667,(-3.465420722961426, 19.942272186279297, 4.7454447746276855),14,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.266666666666667, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [4.266666666666667, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:97


xxx before update is x: 3.63614463806
y: -11.7538299561
theta: 1.64929580688
speed: 6.07678604126
id: 0
t: 96
xxx after update is x: 3.01729416847
y: -11.2026100159
theta: 1.43905103207
speed: 6.03367376328
id: 0
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: 3.01729416847
y: -11.2026100159
theta: 1.43905103207
speed: 6.03367376328
id: 0
t: 97
xxx after update is x: 3.18388962746
y: -11.26286637878
theta: 4.67888593674
speed: 14.0055751801
id: 1
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.19450950623
y: 16.1186637878
theta: 4.67888593674
speed: 14.0055751801
id: 1
t: 95
xxx after update is x: -3.26857352257
y: 15.4977083206
theta: 4.68125486374
speed: 14.0410919189
id: 1
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:96


Received -->>: 
current clock is 4.26666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.26666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.24444444444', 'Sender': '0', 'Time': '4.26666666667', 'IntendedCourse': 'left', 'Position': ['3.6361446380615234', ' -11.753829956054688', ' 1.6492958068847656'], 'TagID': '0', 'Type': 'GET', 'Velocity': '6'}
car 1 received GET,0,4.26666666667,(3.6361446380615234, -11.753829956054688, 1.6492958068847656),6,1,3.24444444444,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.18962962963
sender travel direction is:  north
sender earliest entering time is:  0.938882514738
sender last entering time is:  2.18962962963
sender last leaving time is:  4.56292788605
my entering time is:  0.765464628714
my leaving time is:  2.4212996278
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 4.26666666667
self.communication_details == 0













sending DENY,1,4.26666666667,(-3.465420722961426, 19.942272186279297, 4.7454447746276855),14,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:97


xxx before update is x: -3.26857352257
y: 15.4977083206
theta: 4.68125486374
speed: 14.0410919189
id: 1
t: 96
xxx after update is x: -3.55973744392
y: 15.639415741
theta: 4.69780397415
speed: 14.2582778931
id: 1
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: -3.55973744392
y: 15.639415741
theta: 4.69780397415
speed: 14.2582778931
id: 1
t: 97
xxx after update is x: -3.13616371155
y: 14.2971715927
theta: 4.65410757065
speed: 13.6406021118
id: 1
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.35555555556






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: -3.13616371155
y: 14.2971715927
theta: 4.65410757065
speed: 13.6406021118
id: 1
t: 98
xxx after update is x: -3.2940568924
y: 14.0926074982
theta: 4.66017198563
speed: 14.0794830322
id: 1
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id 1564865
theta: 1.79186356068
speed: 5.68561458588
id: 0
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: 3.18388962746
y: -11.2621564865
theta: 1.79186356068
speed: 5.68561458588
id: 0
t: 98
xxx after update is x: 2.31422996521
y: -10.4175300598
theta: 1.714584589
speed: 5.98718214035
id: 0
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: 2.31422996521
y: -10.4175300598
theta: 1.714584589
speed: 5.98718214035
id: 0
t: 99
xxx after update is x: 2.97086453438
y: -10.3856229782
theta: 1.59967529774
speed: 5.32508659363
id: 0
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: 2.97086453438
y: -10.3856229782
theta: 1.59967529774
speed: 5.32508659363
id: 0
t: 100
xxx after update is x: 2.96472811699
y: -10.2555818558
theta: 1.69391357899
speed: 5.04817247391
id: 0
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: 2.96472811699
y: -10.2555818558
theta: 1.69391357899
speed: 5.04817247391
id: 0
t: 101
xxx after update is x: 2.93095636368
y: -10.0306282043
theta: 1.49204266071
speed: 4.50936412811
id: 0
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: 2.93095636368
y: -10.0306282043
theta: 1.49204266071
speed: 4.50936412811
id: 0
t: 102
xxx after update is x: 2.83668994904
y: -9.83499240875
theta: 1.57740461826
speed: 4.92035388947
id: 0
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.10439592763714288, 0.0559648618393599]
222 self.state_dicts[msg.id][msg.t] is (-2.804352045059204, 12.10438346862793, 4.667306900024414, 13.88649845123291)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: 2.83668994904
y: -9.83499240875
theta: 1.57740461826
speed: 4.92035388947
id: 0
t: 103
xxx after update is x: 2.82948541641
y: -9.85997867584
theta: 1.68082618713
speed: 4.33527469635
id: 0
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.62222222222






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.5777777777777775, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.62222222222
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.57777777778
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,4.62222222222,(2.8294854164123535, -9.859978675842285, 1.680826187133789),4,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent== 1):
xxx before update is x: -3.2940568924
y: 14.0926074982
theta: 4.66017198563
speed: 14.0794830322
id: 1
t: 99
xxx after update is x: -3.07196760178
y: 13.3593597412
theta: 4.79359769821
speed: 13.9604759216
id: 1
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:100




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: -3.07196760178
y: 13.3593597412
theta: 4.79359769821
speed: 13.9604759216
id: 1
t: 100
xxx after update is x: -3.54862332344
y: 12.3121299744
theta: 4.66359949112
speed: 13.684135437
id: 1
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: -3.54862332344
y: 12.3121299744
theta: 4.66359949112
speed: 13.684135437
id: 1
t: 101
xxx after update is x: -3.04813742638
y: 11.5246181488
theta: 4.68471765518
speed: 13.498585701
id: 1
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.08007446344761705, 0]
222 self.state_dicts[msg.id][msg.t] is (2.9309563636779785, -10.030628204345703, 1.4920426607131958, 4.509364128112793)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: -3.04813742638
y: 11.5246181488
theta: 4.68471765518
speed: 13.498585701
id: 1
t: 102
xxx after update is x: -2.80435204506
y: 12.1043834686
theta: 4.66730690002
speed: 13.8864984512
id: 1
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: -2.80435204506
y: 12.1043834686
theta: 4.66730690002
speed: 13.8864984512
id: 1
t: 103
xxx after update is x: -2.89690542221
y: 10.8099527359
theta: 4.54771852493
speed: 13.7473344803
id: 1
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.62222222222




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.62222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '4', 'Sender': '0', 'TagID': '1', 'Time': '4.62222222222', 'Position': ['(2.8294854164123535', ' -9.859978675842285', ' 1.680826187133789)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.62222222222,(2.8294854164123535, -9.859978675842285, 1.680826187133789),4,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:105


xxx before update is x: -2.89690542221
y: 10.8099527359
theta: 4.54771852493
speed: 13.7473344803
id: 1
t: 104
xxx after update is x: -3.72846770287
y: 10.121588707
theta: 4.66158628464
speed: 14.0128421783
id: 1
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: -3.72846770287
y: 10.121_message
current clock is 4.62222222222
self.communication_details == 0
sending RELEASE,0,4.62222222222,(2.8294854164123535, -9.859978675842285, 1.680826187133789),4,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:105


xxx before update is x: 2.82948541641
y: -9.85997867584
theta: 1.68082618713
speed: 4.33527469635
id: 0
t: 104
xxx after update is x: 3.45503044128
y: -9.16704845428
theta: 1.57294905186
speed: 4.03927278519
id: 0
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: 3.45503044128
y: -9.16704845428
theta: 1.57294905186
speed: 4.03927278519
id: 0
t: 105
xxx after update is x: 2.90043401718
y: -8.96220493317
theta: 1.60937011242
speed: 3.83192133904
id: 0
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: 2.90043401718
y: -8.96220493317
theta: 1.60937011242
speed: 3.83192133904
id: 0
t: 106
xxx after update is x: 3.16792631149
y: -8.69329547882
theta: 1.43303179741
speed: 3.76050257683
id: 0
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: 3.16792631149
y: -8.69329547882
theta: 1.43303179741
speed: 3.76050257683
id: 0
t: 107
xxx after update is x: 2.94343543053
y: -8.64153575897
theta: 1.48620343208
speed: 3.73224234581
id: 0
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.5396568878771189, 0.02678165277021311]
222 self.state_dicts[msg.id][msg.t] is (-2.9226324558258057, 8.785558700561523, 4.898136138916016, 13.899161338806152)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: 2.94343543053
y: -8.64153575897
theta: 1.48620343208
speed: 3.73224234581
id: 0
t: 108
xxx after update is x: 3.37774586678
y: -8.233045578
theta: 1.56610119343
speed: 3.16246962547
id: 0
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:110


xxx before update is x: 3.37774586678
y: -8.233045578
theta: 1.56610119343
speed: 3.16246962547
id: 0
t: 109
xxx after update is x: 3.54010343552
y: -8.59070110321
theta: 1.60738742352
speed: 2.79206609726
id: 0
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:111


xxx before update is x: 3.54010343552
y: -8.59070110321
theta: 1.60738742352
speed: 2.79206609726
id: 0
t: 110
xxx after update is x: 3.2565407753
y: -8.0769071579
theta: 1.43574202061
speed: 3.07901787758
id: 0
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update i588707
theta: 4.66158628464
speed: 14.0128421783
id: 1
t: 105
xxx after update is x: -3.36356306076
y: 9.41772079468
theta: 4.59996652603
speed: 13.7280359268
id: 1
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.71111111111






self.maneuver_requested None
aaaaaa
aaaaaabbbbb
risk is [0.8020620480557927, 0]
Stops!
222 self.state_dicts[msg.id][msg.t] is (2.9004340171813965, -8.962204933166504, 1.6093701124191284, 3.831921339035034)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:107


maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: -3.36356306076
y: 9.41772079468
theta: 4.59996652603
speed: 13.7280359268
id: 1
t: 106
xxx after update is x: -3.57066917419
y: 9.09443092346
theta: 4.80594539642
speed: 13.5637617111
id: 1
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: -3.57066917419
y: 9.09443092346
theta: 4.80594539642
speed: 13.5637617111
id: 1
t: 107
xxx after update is x: -2.92263245583
y: 8.78555870056
theta: 4.89813613892
speed: 13.8991613388
id: 1
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: -2.92263245583
y: 8.78555870056
theta: 4.89813613892
speed: 13.8991613388
id: 1
t: 108
xxx after update is x: -2.90209794044
y: 7.62989711761
theta: 4.71906614304
speed: 13.8107776642
id: 1
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.90209794044
y: 7.62989711761
theta: 4.71906614304
speed: 13.8107776642
id: 1
t: 109
xxx after update is x: -2.60072517395
y: 7.25216388702
theta: 4.71368598938
speed: 13.6970691681
id: 1
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:110




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.60072517395
y: 7.25216388702
theta: 4.71368598938
speed: 13.6970691681
id: 1
t: 110
xxx after update is x: -2.96293568611
y: 6.70867538452
theta: 4.80089473724
speed: 13.9519071579
id: 1
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:111


aaaaaa
aaaaaabbbbb
risk is [0.8071401878042903, 1.0000000000000002]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.2565407752990723, -8.07690715789795, 1.4357420206069946, 3.0790178775787354)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:112


xxx before update is x: -2.96293568611
y: 6.70867538452
theta: 4.80089473724
speed: 13.9519071579
id: 1
t: 111
xxx after update is x: -2.9959435463
y: 5.85584545135
theta: 4.75317001343
speed: 13.7423887253
id: 1
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.97777777778




maneuver_negotiatir.py message_processing, it's a long code, s x: 3.2565407753
y: -8.0769071579
theta: 1.43574202061
speed: 3.07901787758
id: 0
t: 111
xxx after update is x: 3.55905413628
y: -8.4535741806
theta: 1.52645587921
speed: 2.78652048111
id: 0
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:112


maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 4.97777777778

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.933333333333334, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.97777777778,(3.559054136276245, -8.453574180603027, 1.5264558792114258),2,1,3.24444444444,0,left
!!!!change state to get
GET,0,4.97777777778,(3.559054136276245, -8.453574180603027, 1.5264558792114258),2,1,3.24444444444,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 4.97777777778
self.communication_details == 0
sending GET,0,4.97777777778,(3.559054136276245, -8.453574180603027, 1.5264558792114258),2,1,3.24444444444,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
Received -->>: 
current clock is 4.97777777778




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 4.97777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '4.97777777778', 'Position': ['(-3.363563060760498', ' 9.417720794677734', ' 4.599966526031494)'], 'Type': 'DENY'}
car 0 received DENY,1,4.97777777778,(-3.363563060760498, 9.417720794677734, 4.599966526031494),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.933333333333334, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [4.933333333333334, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.97777777778






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.933333333333334, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.97777777778
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.93333333333
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,4.97777777778,(3.559054136276245, -8.453574180603027, 1.5264558792114258),2,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 4.97777777778
self.communication_details == 0
sending RELEASE,0,4.97777777778,(3.559054136276245, -8.453574180603027, 1.5264558792114258),2,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.55905413628
y: -8.4535741806
theta: 1.52645587921
speed: 2.78652048111
id: 0
t: 112
xxx after start...1




current clock is 4.97777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.24444444444', 'Sender': '0', 'Time': '4.97777777778', 'IntendedCourse': 'left', 'Position': ['3.559054136276245', ' -8.453574180603027', ' 1.5264558792114258'], 'TagID': '0', 'Type': 'GET', 'Velocity': '2'}
car 1 received GET,0,4.97777777778,(3.559054136276245, -8.453574180603027, 1.5264558792114258),2,1,3.24444444444,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.221234567901
sender travel direction is:  north
sender earliest entering time is:  0.542858615862
sender last entering time is:  2.2212345679
sender last leaving time is:  4.59453282433
my entering time is:  0.221234567901
my leaving time is:  1.18641099595
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 4.97777777778
self.communication_details == 0
sending DENY,1,4.97777777778,(-3.363563060760498, 9.417720794677734, 4.599966526031494),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




Received -->>: 
current clock is 4.97777777778




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.97777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '2', 'Sender': '0', 'TagID': '1', 'Time': '4.97777777778', 'Position': ['(3.559054136276245', ' -8.453574180603027', ' 1.5264558792114258)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.97777777778,(3.559054136276245, -8.453574180603027, 1.5264558792114258),2,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.9959435463
y: 5.85584545135
theta: 4.75317001343
speed: 13.7423887253
id: 1
t: 112
xxx after update is x: -3.14430546761
y: 5.3359413147
theta: 4.80463409424
speed: 13.9316186905
id: 1
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:113




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: -3.14430546761
y: 5.3359413147
theta: 4.80463409424
speed: 13.9316186905
id: 1
t: 113
xxx after update is x: -3.1286213398
y: 4.43103837967
theta: 4.76731586456
speed: 13.6756153107
id: 1
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.06666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:115


xxx before update is x: -3.1286213398
y: 4.43103837967
theta: 4.76731586456
speed: 13.6756153107
id: 1
t: 114
xxx after update is x: -3.86468291283
y: 4.47142982483
theta: 4.69500684738
speed: 13.7163906097
id: 1
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3496587637187439, 1.0]
222 self.state_dicts[msg.id][msg.t] update is x: 3.65434670448
y: -8.56667518616
theta: 1.58579850197
speed: 2.42409920692
id: 0
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:113


maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.5444803710167463, 0.0002472418699462551]
222 self.state_dicts[msg.id][msg.t] is (-3.144305467605591, 5.335941314697266, 4.804634094238281, 13.931618690490723)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: 3.65434670448
y: -8.56667518616
theta: 1.58579850197
speed: 2.42409920692
id: 0
t: 113
xxx after update is x: 3.51056027412
y: -8.2416343689
theta: 1.46496343613
speed: 2.20886349678
id: 0
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:115


xxx before update is x: 3.51056027412
y: -8.2416343689
theta: 1.46496343613
speed: 2.20886349678
id: 0
t: 114
xxx after update is x: 3.3866288662
y: -8.25794029236
theta: 1.56898033619
speed: 2.03777766228
id: 0
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: 3.3866288662
y: -8.25794029236
theta: 1.56898033619
speed: 2.03777766228
id: 0
t: 115
xxx after update is x: 3.62942290306
y: -8.01979923248
theta: 1.58905827999
speed: 1.50033199787
id: 0
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: 3.62942290306
y: -8.01979923248
theta: 1.58905827999
speed: 1.50033199787
id: 0
t: 116
xxx after update is x: 2.64541220665
y: -7.54129362106
theta: 1.40495562553
speed: 1.25165379047
id: 0
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: 2.64541220665
y: -7.54129362106
theta: 1.40495562553
speed: 1.25165379047
id: 0
t: 117
xxx after update is x: 3.24153614044
y: -7.63487100601
theta: 1.55567717552
speed: 0.926731526852
id: 0
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: 3.24153614044
y: -7.63487100601
theta: 1.55567717552
speed: 0.926731526852
id: 0
t: 118
xxx after update is x: 3.5190372467
y: -7.69937324524
theta: 1.53579878807
speed: 0.90599411726
id: 0
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:120


xxx before update is x: 3.5190372467
y: -7.69937324524
theta: 1.53579878807
speed: 0.90599411726
id: 0
t: 119
xxx after update is x: 3.16864919662
y: -7.45372390747
theta: 1.58568763733
speed: 0.906250953674
id: 0
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.5574941232059499, 0.01971367881355818]
222 self.state_dicts[msg.id][msg.t] is (-3.0315442085266113, 0.9089928269386292, 4.is (3.3866288661956787, -8.257940292358398, 1.56898033618927, 2.0377776622772217)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.86468291283
y: 4.47142982483
theta: 4.69500684738
speed: 13.7163906097
id: 1
t: 115
xxx after update is x: -3.13503146172
y: 2.88090515137
theta: 4.68783140182
speed: 13.8234395981
id: 1
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:116




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: -3.13503146172
y: 2.88090515137
theta: 4.68783140182
speed: 13.8234395981
id: 1
t: 116
xxx after update is x: -2.94432497025
y: 2.75256967545
theta: 4.75903463364
speed: 13.8913602829
id: 1
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: -2.94432497025
y: 2.75256967545
theta: 4.75903463364
speed: 13.8913602829
id: 1
t: 117
xxx after update is x: -3.62723040581
y: 1.75081169605
theta: 4.51942777634
speed: 13.9224128723
id: 1
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: -3.62723040581
y: 1.75081169605
theta: 4.51942777634
speed: 13.9224128723
id: 1
t: 118
xxx after update is x: -2.96944713593
y: 1.24172282219
theta: 4.73582601547
speed: 14.0175180435
id: 1
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.5444372335474215, 0.45119999999999816]
222 self.state_dicts[msg.id][msg.t] is (3.5190372467041016, -7.699373245239258, 1.5357987880706787, 0.9059941172599792)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.96944713593
y: 1.24172282219
theta: 4.73582601547
speed: 14.0175180435
id: 1
t: 119
xxx after update is x: -3.03154420853
y: 0.908992826939
theta: 4.67618608475
speed: 14.1919908524
id: 1
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:120


Received -->>: 
current clock is 5.33333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 5.33333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.24444444444', 'Sender': '0', 'Time': '5.33333333333', 'IntendedCourse': 'left', 'Position': ['3.168649196624756', ' -7.453723907470703', ' 1.5856876373291016'], 'TagID': '0', 'Type': 'GET', 'Velocity': '0'}
car 1 received GET,0,5.33333333333,(3.168649196624756, -7.453723907470703, 1.5856876373291016),0,1,3.24444444444,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.237037037037
maneuver_negotiatir.py sender travel direction is none
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, not conlicte6761860847473145, 14.191990852355957)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 5.33333333333

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.333333333333333, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,5.33333333333,(3.168649196624756, -7.453723907470703, 1.5856876373291016),0,1,3.24444444444,0,left
!!!!change state to get
GET,0,5.33333333333,(3.168649196624756, -7.453723907470703, 1.5856876373291016),0,1,3.24444444444,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 5.33333333333
self.communication_details == 0
sending GET,0,5.33333333333,(3.168649196624756, -7.453723907470703, 1.5856876373291016),0,1,3.24444444444,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.33333333333






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0
finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 5.33333333333




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 5.33333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GRANT, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '5.33333333333', 'Position': ['(-3.1286213397979736', ' 4.4310383796691895', ' 4.767315864562988)'], 'Type': 'GRANT'}
car 0 received GRANT,1,5.33333333333,(-3.1286213397979736, 4.4310383796691895, 4.767315864562988),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.333333333333333, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [5.333333333333333, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:121


xxx before update is x: 3.16864919662
y: -7.45372390747
theta: 1.58568763733
speed: 0.906250953674
id: 0
t: 120
xxx after update is x: 3.56682705879
y: -7.35459852219
theta: 1.52359294891
speed: 0.479154407978
id: 0
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.56682705879
y: -7.35459852219
theta: 1.52359294891
speed: 0.479154407978
id: 0
t: 121
xxx after update is x: 3.31905603409
y: -7.96135377884
theta: 1.47592318058
speed: -0.0615537427366
id: 0
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:122




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin funcd
maneuver_negotiatir.py message_processing,!!dd342 change status to GRANT
self.grantID is 0
GRANT,1,5.33333333333,(-3.1286213397979736, 4.4310383796691895, 4.767315864562988),13,1,0,0
added car with id 0 to grantlist. current grantlist:  {0: [10.11111111111111, 'left']}
maneuver_negotiatir.py start the update_agent_message
current clock is 5.33333333333
self.communication_details == 0
sending GRANT,1,5.33333333333,(-3.1286213397979736, 4.4310383796691895, 4.767315864562988),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
current clock is 5.33333333333




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:121


xxx before update is x: -3.03154420853
y: 0.908992826939
theta: 4.67618608475
speed: 14.1919908524
id: 1
t: 120
xxx after update is x: -3.63961839676
y: 0.666682183743
theta: 4.79049968719
speed: 14.0400800705
id: 1
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: -3.63961839676
y: 0.666682183743
theta: 4.79049968719
speed: 14.0400800705
id: 1
t: 121
xxx after update is x: -3.30500054359
y: -0.310923606157
theta: 4.63491392136
speed: 13.56894207
id: 1
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.42222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: -3.30500054359
y: -0.310923606157
theta: 4.63491392136
speed: 13.56894207
id: 1
t: 122
xxx after update is x: -3.03622150421
y: -0.997584342957
theta: 4.71282434464
speed: 13.8582115173
id: 1
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: -3.03622150421
y: -0.997584342957
theta: 4.71282434464
speed: 13.8582115173
id: 1
t: 123
xxx after update is x: -3.47767353058
y: -1.64577662945
theta: 4.83264255524
speed: 13.8757991791
id: 1
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:125


xxx before update is x: -3.47767353058
y: -1.64577662945
theta: 4.83264255524
speed: 13.8757991791
id: 1
t: 124
xxx after update is x: -2.88973641396
y: -2.48208403587
theta: 4.79330730438
speed: 13.6618108749
id: 1
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: -2.88973641396
y: -2.48208403587
theta: 4.79330730438
speed: 13.6618108749
id: 1
t: 125
xxx after update is x: -2.67035865784
y: -2.64249706268
theta: 4.86172103882
speed: 13.9653148651
id: 1
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.5974755256063969, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (2.7018134593963623, -7.565252780914307, 1.6215966939926147, -0.37639427185058594)
if we have all measurements for a ction, finish the n times spin:123

xxx before update is x: 3.31905603409
y: -7.96135377884
theta: 1.47592318058
speed: -0.0615537427366
id: 0
t: 122
xxx after update is x: 3.63232135773
y: -7.38075399399
theta: 1.71137464046
speed: -0.31765794754
id: 0
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: 3.63232135773
y: -7.38075399399
theta: 1.71137464046
speed: -0.31765794754
id: 0
t: 123
xxx after update is x: 3.53376960754
y: -7.31536960602
theta: 1.60680472851
speed: 0.0972388461232
id: 0
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:125


xxx before update is x: 3.53376960754
y: -7.31536960602
theta: 1.60680472851
speed: 0.0972388461232
id: 0
t: 124
xxx after update is x: 2.98276019096
y: -7.63711166382
theta: 1.39458203316
speed: 0.0275049358606
id: 0
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.98276019096
y: -7.63711166382
theta: 1.39458203316
speed: 0.0275049358606
id: 0
t: 125
xxx after update is x: 2.7018134594
y: -7.56525278091
theta: 1.62159669399
speed: -0.376394271851
id: 0
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:126




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: 2.7018134594
y: -7.56525278091
theta: 1.62159669399
speed: -0.376394271851
id: 0
t: 126
xxx after update is x: 3.41796469688
y: -7.39561510086
theta: 1.65251266956
speed: -0.0840117707849
id: 0
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.7663858062007264, 0.000426778668077449]
222 self.state_dicts[msg.id][msg.t] is (-3.2633252143859863, -3.0689938068389893, 4.593972682952881, 13.685345649719238)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: 3.41796469688
y: -7.39561510086
theta: 1.65251266956
speed: -0.0840117707849
id: 0
t: 127
xxx after update is x: 2.96374583244
y: -7.60464143753
theta: 1.44200980663
speed: 0.212067052722
id: 0
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.68888888889






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.644444444444445, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 5.68888888889
(RATE*SLOWDOWN) is 22.5
MR[0] is 5.64444444444
self.TMan is 5
Empty
self.agents_to_ask is []
stopped retry timer
deny not in message
maneuver_negotiatir.py in the domaneuver function - start
added car with id 0 to grantlist. current grantlist:  {0: [10.333333333333332, 'left']}
Doing maneuver
maneuver_negotiatir.py finish the do maneuver function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeertain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: -2.67035865784
y: -2.64249706268
theta: 4.86172103882
speed: 13.9653148651
id: 1
t: 126
xxx after update is x: -3.26332521439
y: -3.06899380684
theta: 4.59397268295
speed: 13.6853456497
id: 1
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: -3.26332521439
y: -3.06899380684
theta: 4.59397268295
speed: 13.6853456497
id: 1
t: 127
xxx after update is x: -3.02887630463
y: -4.36701536179
theta: 4.60811853409
speed: 14.119884491
id: 1
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.02887630463
y: -4.36701536179
theta: 4.60811853409
speed: 14.119884491
id: 1
t: 128
xxx after update is x: -3.63002848625
y: -4.83799028397
theta: 4.76881361008
speed: 13.9624185562
id: 1
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:129


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.73333333333






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: -3.63002848625
y: -4.83799028397
theta: 4.76881361008
speed: 13.9624185562
id: 1
t: 129
xxx after update is x: -2.70759177208
y: -4.96178340912
theta: 4.64957523346
speed: 14.1169261932
id: 1
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:131


xxx before update is x: -2.70759177208
y: -4.96178340912
theta: 4.64957523346
speed: 14.1169261932
id: 1
t: 130
xxx after update is x: -3.66078305244
y: -6.06017208099
theta: 4.68468856812
speed: 13.9741163254
id: 1
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: -3.66078305244
y: -6.06017208099
theta: 4.68468856812
speed: 13.9741163254
id: 1
t: 131
xxx after update is x: -3.23705816269
y: -6.63684082031
theta: 4.7792725563
speed: 13.750957489
id: 1
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.9889959877922655, 0.46879999999999805]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.0372791290283203, -7.2192511558532715, 1.5822103023529053, 0.898415744304657)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
xxx before update is x: -3.23705816269
y: -6.63684082031
theta: 4.7792725563
speed: 13.750957489
id: 1
t: 132
xxx after update is x: -3.23647618294
y: -7.1868929863
theta: 4.69637441635
speed: 13.6374759674
id: 1
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:133




going toed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.96374583244
y: -7.60464143753
theta: 1.44200980663
speed: 0.212067052722
id: 0
t: 128
xxx after update is x: 3.48056530952
y: -7.57410669327
theta: 1.58086061478
speed: 0.161931008101
id: 0
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:129




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: 3.48056530952
y: -7.57410669327
theta: 1.58086061478
speed: 0.161931008101
id: 0
t: 129
xxx after update is x: 3.25069880486
y: -7.65296268463
theta: 1.60360360146
speed: 0.182986348867
id: 0
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:131


xxx before update is x: 3.25069880486
y: -7.65296268463
theta: 1.60360360146
speed: 0.182986348867
id: 0
t: 130
xxx after update is x: 3.46269989014
y: -7.48205566406
theta: 1.52820003033
speed: 1.05871605873
id: 0
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: 3.46269989014
y: -7.48205566406
theta: 1.52820003033
speed: 1.05871605873
id: 0
t: 131
xxx after update is x: 3.03727912903
y: -7.21925115585
theta: 1.58221030235
speed: 0.898415744305
id: 0
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:133


xxx before update is x: 3.03727912903
y: -7.21925115585
theta: 1.58221030235
speed: 0.898415744305
id: 0
t: 132
xxx after update is x: 3.89207649231
y: -7.58291292191
theta: 1.84494233131
speed: 1.37260568142
id: 0
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.8870749316975317, 0.9993406670028847]
222 self.state_dicts[msg.id][msg.t] is (-3.236476182937622, -7.186892986297607, 4.696374416351318, 13.637475967407227)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: 3.89207649231
y: -7.58291292191
theta: 1.84494233131
speed: 1.37260568142
id: 0
t: 133
xxx after update is x: 3.19016432762
y: -8.02257347107
theta: 1.72617721558
speed: 1.46304225922
id: 0
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:135


xxx before update is x: 3.19016432762
y: -8.02257347107
theta: 1.72617721558
speed: 1.46304225922
id: 0
t: 134
xxx after update is x: 2.830275774
y: -7.6238656044
theta: 1.61565887928
speed: 1.67856943607
id: 0
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: 2.830275774
y: -7.6238656044
theta: 1.61565887928
speed: 1.67856943607
id: 0
t: 135
xxx after update is x: 2.8244934082
y: -6.86460065842
theta: 1.52826535702
speed: 1.75076329708
id: 0
t: 136
maneuver_negotiatir.py finish the update agent the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: -3.23647618294
y: -7.1868929863
theta: 4.69637441635
speed: 13.6374759674
id: 1
t: 133
xxx after update is x: -3.4310195446
y: -7.4161901474
theta: 4.82040166855
speed: 13.6923484802
id: 1
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:135


xxx before update is x: -3.4310195446
y: -7.4161901474
theta: 4.82040166855
speed: 13.6923484802
id: 1
t: 134
xxx after update is x: -3.42629218102
y: -8.01564788818
theta: 4.65534734726
speed: 13.4373445511
id: 1
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: -3.42629218102
y: -8.01564788818
theta: 4.65534734726
speed: 13.4373445511
id: 1
t: 135
xxx after update is x: -2.62559890747
y: -8.50647640228
theta: 4.68286132812
speed: 14.2230844498
id: 1
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:137


xxx before update is x: -2.62559890747
y: -8.50647640228
theta: 4.68286132812
speed: 14.2230844498
id: 1
t: 136
xxx after update is x: -3.52015972137
y: -9.91388511658
theta: 4.86210012436
speed: 14.1249580383
id: 1
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.08888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: -3.52015972137
y: -9.91388511658
theta: 4.86210012436
speed: 14.1249580383
id: 1
t: 137
xxx after update is x: -2.79975652695
y: -9.84471702576
theta: 4.70319461823
speed: 13.7786064148
id: 1
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.79975652695
y: -9.84471702576
theta: 4.70319461823
speed: 13.7786064148
id: 1
t: 138
xxx after update is x: -3.63488292694
y: -11.350230217
theta: 4.7062754631
speed: 14.1682529449
id: 1
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:139


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: -3.63488292694
y: -11.350230217
theta: 4.7062754631
speed: 14.1682529449
id: 1
t: 139
xxx after update is x: -3.57865524292
y: -10.9534950256
theta: 4.59635734558
speed: 14.043390274
id: 1
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.015546617334217814, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (2.803070306777954, -6.363319396972656, 1.6309605836868286, 2.703418731689453)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
le state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.04444444444






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.8244934082
y: -6.86460065842
theta: 1.52826535702
speed: 1.75076329708
id: 0
t: 136
xxx after update is x: 3.28453707695
y: -7.25597906113
theta: 1.50794112682
speed: 2.0667424202
id: 0
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:137




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.28453707695
y: -7.25597906113
theta: 1.50794112682
speed: 2.0667424202
id: 0
t: 137
xxx after update is x: 3.40721297264
y: -7.143491745
theta: 1.66124165058
speed: 2.42192482948
id: 0
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:138




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.40721297264
y: -7.143491745
theta: 1.66124165058
speed: 2.42192482948
id: 0
t: 138
xxx after update is x: 3.12414813042
y: -7.01699733734
theta: 1.61460673809
speed: 2.53449201584
id: 0
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:139




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: 3.12414813042
y: -7.01699733734
theta: 1.61460673809
speed: 2.53449201584
id: 0
t: 139
xxx after update is x: 2.80307030678
y: -6.36331939697
theta: 1.63096058369
speed: 2.70341873169
id: 0
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: 2.80307030678
y: -6.36331939697
theta: 1.63096058369
speed: 2.70341873169
id: 0
t: 140
xxx after update is x: 3.01196813583
y: -6.24894809723
theta: 1.52558004856
speed: 3.32719945908
id: 0
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [1.5257070059564747e-05, 1.0000000000000009]
222 self.state_dicts[msg.id][msg.t] is (-3.6276438236236572, -12.286547660827637, 4.5887932777404785, 13.734468460083008)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: 3.01196813583
y: -6.24894809723
theta: 1.52558004856
speed: 3.32719945908
id: 0
t: 141
xxx after update is x: 2.91589474678
y: -6.67092418671
theta: 1.5468878746
speed: 3.63457322121
id: 0
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: 2.91589474678
y: -6.67092418671
theta: 1.5468878746
speed: 3.63457322121
id: 0
t: 142
xxx after update is x: 3.05705142021
y: -6.8169426918
theta: 1.56560206413
speed: 3.63700389862
id: 0
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin funcave the update function xxx before update is x: -3.57865524292
y: -10.9534950256
theta: 4.59635734558
speed: 14.043390274
id: 1
t: 140
xxx after update is x: -3.62764382362
y: -12.2865476608
theta: 4.58879327774
speed: 13.7344684601
id: 1
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:141




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: -3.62764382362
y: -12.2865476608
theta: 4.58879327774
speed: 13.7344684601
id: 1
t: 141
xxx after update is x: -3.49355125427
y: -12.7595376968
theta: 4.6695971489
speed: 14.2199764252
id: 1
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: -3.49355125427
y: -12.7595376968
theta: 4.6695971489
speed: 14.2199764252
id: 1
t: 142
xxx after update is x: -3.16893982887
y: -13.1933784485
theta: 4.72130966187
speed: 14.068192482
id: 1
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [1.094398775828365e-42, 0.481599999999998]
222 self.state_dicts[msg.id][msg.t] is (3.057051420211792, -6.8169426918029785, 1.5656020641326904, 3.6370038986206055)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: -3.16893982887
y: -13.1933784485
theta: 4.72130966187
speed: 14.068192482
id: 1
t: 143
xxx after update is x: -3.23346400261
y: -13.7370357513
theta: 4.87258338928
speed: 13.6407566071
id: 1
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: -3.23346400261
y: -13.7370357513
theta: 4.87258338928
speed: 13.6407566071
id: 1
t: 144
xxx after update is x: -3.78317499161
y: -14.257481575
theta: 4.82680416107
speed: 13.73508358
id: 1
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.44444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
!!! change status from grant to normal
current clock is 6.44444444444


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:146


xxx before update is x: -3.78317499161
y: -14.257481575
theta: 4.82680416107
speed: 13.73508358
id: 1
t: 145
xxx after update is x: -3.66542720795
y: -15.1017045975
theta: 4.72538995743
speed: 13.9482688904
id: 1
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
!!!threading.Timer
tgarnt done


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.66542720795
y: -15.1017045975
theta: 4.72538995743
speed: 13.9482688904
id: 1
t: 146
xxx after update is x: -3.34924077988
y: -16.0088214874
theta: 4.65787410736
speed: 13.7845888138
id: 1
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:147




going to the update function
sim.py in the stion, finish the n times spin:144

xxx before update is x: 3.05705142021
y: -6.8169426918
theta: 1.56560206413
speed: 3.63700389862
id: 0
t: 143
xxx after update is x: 3.13926076889
y: -6.43660831451
theta: 1.64235913754
speed: 4.09295845032
id: 0
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion

maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.4






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.13926076889
y: -6.43660831451
theta: 1.64235913754
speed: 4.09295845032
id: 0
t: 144
xxx after update is x: 3.5461575985
y: -5.7297949791
theta: 1.62826144695
speed: 4.56829977036
id: 0
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:145


aaaaaa
risk is [2.7299374113387615e-44, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.783174991607666, -14.257481575012207, 4.826804161071777, 13.73508358001709)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:146


xxx before update is x: 3.5461575985
y: -5.7297949791
theta: 1.62826144695
speed: 4.56829977036
id: 0
t: 145
xxx after update is x: 2.78471326828
y: -5.50650405884
theta: 1.47915887833
speed: 5.12995433807
id: 0
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: 2.78471326828
y: -5.50650405884
theta: 1.47915887833
speed: 5.12995433807
id: 0
t: 146
xxx after update is x: 3.05030989647
y: -6.3100194931
theta: 1.57882320881
speed: 4.67754650116
id: 0
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.05030989647
y: -6.3100194931
theta: 1.57882320881
speed: 4.67754650116
id: 0
t: 147
xxx after update is x: 3.40796422958
y: -5.2917509079
theta: 1.62640857697
speed: 5.10366296768
id: 0
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:148




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: 3.40796422958
y: -5.2917509079
theta: 1.62640857697
speed: 5.10366296768
id: 0
t: 148
xxx after update is x: 3.82858300209
y: -5.35649681091
theta: 1.77807676792
speed: 5.17287158966
id: 0
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: 3.82858300209
y: -5.35649681091
theta: 1.77807676792
speed: 5.17287158966
id: 0
t: 149
xxx after update is x: 3.51468777657
y: -5.23031997681
theta: 1.68643546104
speed: 5.67191696167
id: 0
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [3.597865035827088e-120, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3011903762817383, -17.262948989868164, 4.8140130043029785, 13.892516136169434)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update functionim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: -3.34924077988
y: -16.0088214874
theta: 4.65787410736
speed: 13.7845888138
id: 1
t: 147
xxx after update is x: -2.80227780342
y: -16.7485027313
theta: 4.73900938034
speed: 13.9691753387
id: 1
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.80227780342
y: -16.7485027313
theta: 4.73900938034
speed: 13.9691753387
id: 1
t: 148
xxx after update is x: -3.44722628593
y: -16.3591461182
theta: 4.67618894577
speed: 13.7246274948
id: 1
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:149


aaaaaa
aaaaaabbbbb
risk is [5.104024872850719e-72, 0.479999999999998]
222 self.state_dicts[msg.id][msg.t] is (3.828583002090454, -5.356496810913086, 1.7780767679214478, 5.1728715896606445)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: -3.44722628593
y: -16.3591461182
theta: 4.67618894577
speed: 13.7246274948
id: 1
t: 149
xxx after update is x: -3.30119037628
y: -17.2629489899
theta: 4.8140130043
speed: 13.8925161362
id: 1
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: -3.30119037628
y: -17.2629489899
theta: 4.8140130043
speed: 13.8925161362
id: 1
t: 150
xxx after update is x: -3.59127902985
y: -17.8283348083
theta: 4.7442650795
speed: 13.8383207321
id: 1
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:152


xxx before update is x: -3.59127902985
y: -17.8283348083
theta: 4.7442650795
speed: 13.8383207321
id: 1
t: 151
xxx after update is x: -2.90080308914
y: -18.7237262726
theta: 4.67472171783
speed: 13.6067895889
id: 1
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.90080308914
y: -18.7237262726
theta: 4.67472171783
speed: 13.6067895889
id: 1
t: 152
xxx after update is x: -3.22001862526
y: -19.2414283752
theta: 4.74109745026
speed: 13.7359743118
id: 1
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:153


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.8






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [1.3344123174385375e-156, 0.5519999999999994]
222 self.state_dicts[msg.id][msg.t] is (2.580686569213867, -4.415555477142334, 1.6578739881515503, 5.900659561157227)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:154


xxx before update is x: -3.22001862526
y: -19.2414283752
theta: 4.74109745026 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: 3.51468777657
y: -5.23031997681
theta: 1.68643546104
speed: 5.67191696167
id: 0
t: 150
xxx after update is x: 2.89277172089
y: -4.99163007736
theta: 1.58464479446
speed: 6.18379402161
id: 0
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.71111111111






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:152


xxx before update is x: 2.89277172089
y: -4.99163007736
theta: 1.58464479446
speed: 6.18379402161
id: 0
t: 151
xxx after update is x: 3.31162834167
y: -4.72372102737
theta: 1.83911824226
speed: 6.0228509903
id: 0
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:153


xxx before update is x: 3.31162834167
y: -4.72372102737
theta: 1.83911824226
speed: 6.0228509903
id: 0
t: 152
xxx after update is x: 2.58068656921
y: -4.41555547714
theta: 1.65787398815
speed: 5.90065956116
id: 0
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:154


xxx before update is x: 2.58068656921
y: -4.41555547714
theta: 1.65787398815
speed: 5.90065956116
id: 0
t: 153
xxx after update is x: 2.98940348625
y: -4.23846340179
theta: 1.83101785183
speed: 6.94000339508
id: 0
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:155


xxx before update is x: 2.98940348625
y: -4.23846340179
theta: 1.83101785183
speed: 6.94000339508
id: 0
t: 154
xxx after update is x: 2.96128201485
y: -3.83753728867
theta: 1.92624247074
speed: 7.18516588211
id: 0
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [8.588383656296532e-186, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.641045570373535, -20.587879180908203, 4.646099090576172, 13.520193099975586)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: 2.96128201485
y: -3.83753728867
theta: 1.92624247074
speed: 7.18516588211
id: 0
t: 155
xxx after update is x: 3.05090141296
y: -3.69786500931
theta: 1.89816296101
speed: 7.05515050888
id: 0
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: 3.05090141296
y: -3.69786500931
theta: 1.89816296101
speed: 7.05515050888
id: 0
t: 156
xxx after update is x: 2.83202624321
y: -2.98957228661
theta: 1.95117366314
speed: 7.52582836151
id: 0
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: 2.83202624321
y: -2.98957228661
theta: 1
speed: 13.7359743118
id: 1
t: 153
xxx after update is x: -3.08477258682
y: -20.2929668427
theta: 4.76448345184
speed: 13.9697437286
id: 1
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
tgarnt done


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:155


xxx before update is x: -3.08477258682
y: -20.2929668427
theta: 4.76448345184
speed: 13.9697437286
id: 1
t: 154
xxx after update is x: -3.64104557037
y: -20.5878791809
theta: 4.64609909058
speed: 13.5201931
id: 1
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: -3.64104557037
y: -20.5878791809
theta: 4.64609909058
speed: 13.5201931
id: 1
t: 155
xxx after update is x: -3.60468506813
y: -20.9959964752
theta: 4.70972442627
speed: 14.0934963226
id: 1
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [5.287046260685898e-212, 0.5167999999999984]
222 self.state_dicts[msg.id][msg.t] is (3.050901412963867, -3.6978650093078613, 1.8981629610061646, 7.055150508880615)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.60468506813
y: -20.9959964752
theta: 4.70972442627
speed: 14.0934963226
id: 1
t: 156
xxx after update is x: -3.4212334156
y: -22.2567958832
theta: 4.66889619827
speed: 13.7312068939
id: 1
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:157




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: -3.4212334156
y: -22.2567958832
theta: 4.66889619827
speed: 13.7312068939
id: 1
t: 157
xxx after update is x: -3.0802526474
y: -22.7103481293
theta: 4.65733146667
speed: 13.8359203339
id: 1
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:159


xxx before update is x: -3.0802526474
y: -22.7103481293
theta: 4.65733146667
speed: 13.8359203339
id: 1
t: 158
xxx after update is x: -3.60478782654
y: -23.4089260101
theta: 4.88336658478
speed: 14.0818367004
id: 1
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:160


xxx before update is x: -3.60478782654
y: -23.4089260101
theta: 4.88336658478
speed: 14.0818367004
id: 1
t: 159
xxx after update is x: -3.27240419388
y: -23.4039554596
theta: 4.58312273026
speed: 13.7702035904
id: 1
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.11111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: -3.27240419388
y: -23.4039554596
theta: 4.58312273026
speed: 13.7702035904
id: 1
t:.95117366314
speed: 7.52582836151
id: 0
t: 157
xxx after update is x: 2.99558019638
y: -3.0176615715
theta: 2.12775945663
speed: 7.77043771744
id: 0
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.99558019638
y: -3.0176615715
theta: 2.12775945663
speed: 7.77043771744
id: 0
t: 158
xxx after update is x: 1.91957604885
y: -2.58406496048
theta: 2.10885381699
speed: 7.98009347916
id: 0
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:159


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.06666666667






self.maneuver_requested left
aaaaaa
risk is [4.600162422e-314, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.604787826538086, -23.408926010131836, 4.883366584777832, 14.081836700439453)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 1.91957604885
y: -2.58406496048
theta: 2.10885381699
speed: 7.98009347916
id: 0
t: 159
xxx after update is x: 2.2221159935
y: -1.84520554543
theta: 2.14225530624
speed: 8.00978660583
id: 0
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:160




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: 2.2221159935
y: -1.84520554543
theta: 2.14225530624
speed: 8.00978660583
id: 0
t: 160
xxx after update is x: 1.91017413139
y: -2.19639158249
theta: 2.04388856888
speed: 8.36532020569
id: 0
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: 1.91017413139
y: -2.19639158249
theta: 2.04388856888
speed: 8.36532020569
id: 0
t: 161
xxx after update is x: 1.76821053028
y: -1.35936570168
theta: 2.02886557579
speed: 9.02673721313
id: 0
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:163


xxx before update is x: 1.76821053028
y: -1.35936570168
theta: 2.02886557579
speed: 9.02673721313
id: 0
t: 162
xxx after update is x: 1.66609323025
y: -1.22670865059
theta: 2.29320526123
speed: 8.75480461121
id: 0
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: 1.66609323025
y: -1.22670865059
theta: 2.29320526123
speed: 8.75480461121
id: 0
t: 163
xxx after update is x: 1.69038081169
y: -0.790555238724
theta: 2.2610886097
speed: 9.36936664581
id: 0
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.206907033920288, -25.883752822875977, 4.748082637786865, 13.9838228225708)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n ti 160
xxx after update is x: -3.53332567215
y: -24.3243026733
theta: 4.59378528595
speed: 13.8913230896
id: 1
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [3.476612143619691e-306, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (1.9101741313934326, -2.1963915824890137, 2.043888568878174, 8.365320205688477)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.53332567215
y: -24.3243026733
theta: 4.59378528595
speed: 13.8913230896
id: 1
t: 161
xxx after update is x: -3.58427000046
y: -24.75573349
theta: 4.80819129944
speed: 13.7185087204
id: 1
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:162




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:163


xxx before update is x: -3.58427000046
y: -24.75573349
theta: 4.80819129944
speed: 13.7185087204
id: 1
t: 162
xxx after update is x: -3.25786924362
y: -26.0776023865
theta: 4.67853689194
speed: 13.7351112366
id: 1
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: -3.25786924362
y: -26.0776023865
theta: 4.67853689194
speed: 13.7351112366
id: 1
t: 163
xxx after update is x: -3.20690703392
y: -25.8837528229
theta: 4.74808263779
speed: 13.9838228226
id: 1
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:165


xxx before update is x: -3.20690703392
y: -25.8837528229
theta: 4.74808263779
speed: 13.9838228226
id: 1
t: 164
xxx after update is x: -3.37740588188
y: -26.5880317688
theta: 4.85253858566
speed: 13.6262674332
id: 1
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (1.5139976739883423, -0.4800333082675934, 2.1533854007720947, 9.783438682556152)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:166


xxx before update is x: -3.37740588188
y: -26.5880317688
theta: 4.85253858566
speed: 13.6262674332
id: 1
t: 165
xxx after update is x: -3.60997343063
y: -27.8898735046
theta: 4.72190380096
speed: 13.872797966
id: 1
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: -3.60997343063
y: -27.8898735046
theta: 4.72190380096
speed: 13.872797966
id: 1
t: 166
xxx after update is x: -3.64287519455
y: -27.8318977356
theta: 4.87971067429
speed: 13.8579835892
id: 1
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.64287519455
y: -27.8318977356
thetames spin:165

xxx before update is x: 1.69038081169
y: -0.790555238724
theta: 2.2610886097
speed: 9.36936664581
id: 0
t: 164
xxx after update is x: 1.51399767399
y: -0.480033308268
theta: 2.15338540077
speed: 9.78343868256
id: 0
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:166


xxx before update is x: 1.51399767399
y: -0.480033308268
theta: 2.15338540077
speed: 9.78343868256
id: 0
t: 165
xxx after update is x: 1.09645283222
y: -0.472238749266
theta: 2.4595720768
speed: 10.0533409119
id: 0
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: 1.09645283222
y: -0.472238749266
theta: 2.4595720768
speed: 10.0533409119
id: 0
t: 166
xxx after update is x: 0.545253038406
y: -0.129343599081
theta: 2.40690660477
speed: 10.0635700226
id: 0
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.42222222222






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: 0.545253038406
y: -0.129343599081
theta: 2.40690660477
speed: 10.0635700226
id: 0
t: 167
xxx after update is x: 0.100981429219
y: 0.573334097862
theta: 2.45763874054
speed: 10.3632297516
id: 0
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.212054967880249, -28.50819206237793, 4.827867031097412, 13.945180892944336)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: 0.100981429219
y: 0.573334097862
theta: 2.45763874054
speed: 10.3632297516
id: 0
t: 168
xxx after update is x: 0.11856944114
y: 0.997696340084
theta: 2.27451181412
speed: 10.6420564651
id: 0
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 0.11856944114
y: 0.997696340084
theta: 2.27451181412
speed: 10.6420564651
id: 0
t: 169
xxx after update is x: -0.387720018625
y: 0.723071634769
theta: 2.59264612198
speed: 10.9731235504
id: 0
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:170




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:171


xxx before update is x: -0.387720018625
y: 0.723071634769
theta: 2.59264612198
speed: 10.9731235504
id: 0
t: 170
xxx after update is x: -0.579385519028
y: 1.88841843605
theta: 2.48296570778
speed: 10.9528770447
id: 0
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: -0.579385519028
y: 1.88841843605
theta: 2.48296570778
speed: 10.9528770447
id: 0
t: 171
xxx after update is x: -1.55349063873
y: 1.29926586151
theta: 2.657180: 4.87971067429
speed: 13.8579835892
id: 1
t: 167
xxx after update is x: -3.21205496788
y: -28.5081920624
theta: 4.8278670311
speed: 13.9451808929
id: 1
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:168


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.476799999999998]
222 self.state_dicts[msg.id][msg.t] is (0.10098142921924591, 0.5733340978622437, 2.457638740539551, 10.363229751586914)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.46666666667






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:169


maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: -3.21205496788
y: -28.5081920624
theta: 4.8278670311
speed: 13.9451808929
id: 1
t: 168
xxx after update is x: -3.59354829788
y: -29.4522037506
theta: 4.91533994675
speed: 13.977396965
id: 1
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.59354829788
y: -29.4522037506
theta: 4.91533994675
speed: 13.977396965
id: 1
t: 169
xxx after update is x: -3.33964467049
y: -29.7075386047
theta: 4.5716342926
speed: 14.1410369873
id: 1
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:170




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:171


xxx before update is x: -3.33964467049
y: -29.7075386047
theta: 4.5716342926
speed: 14.1410369873
id: 1
t: 170
xxx after update is x: -3.03463959694
y: -30.5502891541
theta: 4.69070243835
speed: 13.9488954544
id: 1
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: -3.03463959694
y: -30.5502891541
theta: 4.69070243835
speed: 13.9488954544
id: 1
t: 171
xxx after update is x: -2.93132758141
y: -31.3925800323
theta: 4.82841062546
speed: 13.6018695831
id: 1
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.93132758141
y: -31.3925800323
theta: 4.82841062546
speed: 13.6018695831
id: 1
t: 172
xxx after update is x: -3.35108852386
y: -32.0757331848
theta: 4.50696706772
speed: 13.4491701126
id: 1
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:173


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5199999999999985]
222 self.state_dicts[msg.id][msg.t] is (-2.2462334632873535, 1.742508053779602, 2.7067031860351562, 11.360671997070312)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: -3.35108852386
y: -32.0757331848
theta: 4.50696706772
speed: 13.4491701126
id: 1
t: 173
xxx after update is x: -3.03798556328
y: -32.1998138428
theta: 4.77954053879
speed: 13.7972640991
id: 1
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtio07088
speed: 11.567656517
id: 0
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:173


xxx before update is x: -1.55349063873
y: 1.29926586151
theta: 2.65718007088
speed: 11.567656517
id: 0
t: 172
xxx after update is x: -2.24623346329
y: 1.74250805378
theta: 2.70670318604
speed: 11.3606719971
id: 0
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: -2.24623346329
y: 1.74250805378
theta: 2.70670318604
speed: 11.3606719971
id: 0
t: 173
xxx after update is x: -2.433198452
y: 1.82894361019
theta: 2.65825986862
speed: 12.0388689041
id: 0
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0379855632781982, -32.19981384277344, 4.779540538787842, 13.797264099121094)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: -2.433198452
y: 1.82894361019
theta: 2.65825986862
speed: 12.0388689041
id: 0
t: 174
xxx after update is x: -2.58784556389
y: 1.88575315475
theta: 2.72473478317
speed: 12.187417984
id: 0
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.77777777778






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: -2.58784556389
y: 1.88575315475
theta: 2.72473478317
speed: 12.187417984
id: 0
t: 175
xxx after update is x: -2.81020522118
y: 2.40254592896
theta: 3.0011806488
speed: 12.6630811691
id: 0
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:177


xxx before update is x: -2.81020522118
y: 2.40254592896
theta: 3.0011806488
speed: 12.6630811691
id: 0
t: 176
xxx after update is x: -3.52195429802
y: 2.82398176193
theta: 2.90650463104
speed: 12.8773422241
id: 0
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: -3.52195429802
y: 2.82398176193
theta: 2.90650463104
speed: 12.8773422241
id: 0
t: 177
xxx after update is x: -4.33734273911
y: 3.11716723442
theta: 2.91369390488
speed: 12.6320829391
id: 0
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.139657735824585, -34.79014205932617, 4.863008499145508, 14.116270065307617)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: -4.33734273911
y: 3.11716723442
theta: 2.91369390488
speed: 12.6320829391
id: 0
t: 178
xxx aftern


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: -3.03798556328
y: -32.1998138428
theta: 4.77954053879
speed: 13.7972640991
id: 1
t: 174
xxx after update is x: -3.54109811783
y: -32.7203369141
theta: 4.79388666153
speed: 13.8689632416
id: 1
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: -3.54109811783
y: -32.7203369141
theta: 4.79388666153
speed: 13.8689632416
id: 1
t: 175
xxx after update is x: -3.13125061989
y: -33.368270874
theta: 4.65957927704
speed: 14.0360765457
id: 1
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.82222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:177


xxx before update is x: -3.13125061989
y: -33.368270874
theta: 4.65957927704
speed: 14.0360765457
id: 1
t: 176
xxx after update is x: -3.48303127289
y: -34.1973800659
theta: 4.64907121658
speed: 14.0041971207
id: 1
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: -3.48303127289
y: -34.1973800659
theta: 4.64907121658
speed: 14.0041971207
id: 1
t: 177
xxx after update is x: -3.13965773582
y: -34.7901420593
theta: 4.86300849915
speed: 14.1162700653
id: 1
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5263999999999986]
222 self.state_dicts[msg.id][msg.t] is (-4.337342739105225, 3.1171672344207764, 2.913693904876709, 12.63208293914795)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: -3.13965773582
y: -34.7901420593
theta: 4.86300849915
speed: 14.1162700653
id: 1
t: 178
xxx after update is x: -3.1037774086
y: -35.4247665405
theta: 4.6792550087
speed: 13.9606428146
id: 1
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:180


xxx before update is x: -3.1037774086
y: -35.4247665405
theta: 4.6792550087
speed: 13.9606428146
id: 1
t: 179
xxx after update is x: -3.55150604248
y: -35.7466926575
theta: 4.73523569107
speed: 13.5885105133
id: 1
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:181


xxx before update is x: -3.55150604248
y: -35.7466926575
theta: 4.73523569107
speed: 13.5885105133
id: 1
t: 180
xxx after update is x: -3.85618853569
y: -36.9280891418
theta: 4.7968006134
speed: 13.8728113174
id: 1
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targ update is x: -5.00264120102
y: 2.50777816772
theta: 2.78805160522
speed: 13.3139429092
id: 0
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:180


xxx before update is x: -5.00264120102
y: 2.50777816772
theta: 2.78805160522
speed: 13.3139429092
id: 0
t: 179
xxx after update is x: -5.64520168304
y: 3.06468939781
theta: 2.97634267807
speed: 13.5528717041
id: 0
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:181


xxx before update is x: -5.64520168304
y: 3.06468939781
theta: 2.97634267807
speed: 13.5528717041
id: 0
t: 180
xxx after update is x: -6.34177684784
y: 3.54488921165
theta: 3.08690023422
speed: 13.5678625107
id: 0
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:182


xxx before update is x: -6.34177684784
y: 3.54488921165
theta: 3.08690023422
speed: 13.5678625107
id: 0
t: 181
xxx after update is x: -6.87777376175
y: 3.12537002563
theta: 3.11939311028
speed: 13.2179088593
id: 0
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.08888888889






self.maneuver_requested left
RELEASE,0,8.08888888889,(-6.877773761749268, 3.1253700256347656, 3.1193931102752686),13,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 8.08888888889
self.communication_details == 0
sending RELEASE,0,8.08888888889,(-6.877773761749268, 3.1253700256347656, 3.1193931102752686),13,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:183


xxx before update is x: -6.87777376175
y: 3.12537002563
theta: 3.11939311028
speed: 13.2179088593
id: 0
t: 182
xxx after update is x: -6.78581428528
y: 3.5301296711
theta: 3.1975851059
speed: 14.1525306702
id: 0
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.354545831680298, -37.626827239990234, 4.500778675079346, 13.395013809204102)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: -6.78581428528
y: 3.5301296711
theta: 3.1975851059
speed: 14.1525306702
id: 0
t: 183
xxx after update is x: -7.88261938095
y: 3.18270802498
theta: 3.2855052948
speed: 13.4540042877
id: 0
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -7.88261938095
y: 3.18270802498
theta: 3.2855052948
speed: 13.4540042877
id: 0
t: 184
xxx after update is x: -8.67129421234
y: 3.16363477707
theta: 3.00294995308
speed: 13.8954305649
id: 0
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:185




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave tetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.85618853569
y: -36.9280891418
theta: 4.7968006134
speed: 13.8728113174
id: 1
t: 181
xxx after update is x: -3.19823813438
y: -37.3527412415
theta: 4.71903038025
speed: 13.8562364578
id: 1
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:182


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5119999999999982]
222 self.state_dicts[msg.id][msg.t] is (-6.877773761749268, 3.1253700256347656, 3.1193931102752686, 13.21790885925293)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
current clock is 8.08888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 8.08888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '8.08888888889', 'Position': ['(-6.877773761749268', ' 3.1253700256347656', ' 3.1193931102752686)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,8.08888888889,(-6.877773761749268, 3.1253700256347656, 3.1193931102752686),13,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:183


xxx before update is x: -3.19823813438
y: -37.3527412415
theta: 4.71903038025
speed: 13.8562364578
id: 1
t: 182
xxx after update is x: -3.35454583168
y: -37.62682724
theta: 4.50077867508
speed: 13.3950138092
id: 1
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.35454583168
y: -37.62682724
theta: 4.50077867508
speed: 13.3950138092
id: 1
t: 183
xxx after update is x: -2.73831176758
y: -38.6284751892
theta: 4.58022785187
speed: 13.8458194733
id: 1
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:184


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.17777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:185


xxx before update is x: -2.73831176758
y: -38.6284751892
theta: 4.58022785187
speed: 13.8458194733
id: 1
t: 184
xxx after update is x: -3.3861451149
y: -39.2804450989
theta: 4.61953496933
speed: 13.9208803177
id: 1
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: -3.3861451149
y: -39.2804450989
theta: 4.61953496933
speed: 13.9208803177
id: 1
t: 185
xxx after update is x: -3.17669463158
y: -40.1005363464
theta: 4.60797691345
speed: 14.2493467331
id: 1
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.505599999999998]
222 self.state_dicts[msg.id][msg.t] is (-9.280696868896484, 4.185049057006836, 3.2701117992401123, 14.112214088439941)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id =he update function xxx before update is x: -8.67129421234
y: 3.16363477707
theta: 3.00294995308
speed: 13.8954305649
id: 0
t: 185
xxx after update is x: -9.2806968689
y: 4.18504905701
theta: 3.27011179924
speed: 14.1122140884
id: 0
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:186




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: -9.2806968689
y: 4.18504905701
theta: 3.27011179924
speed: 14.1122140884
id: 0
t: 186
xxx after update is x: -9.51328372955
y: 3.84057402611
theta: 3.08307409286
speed: 14.043132782
id: 0
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:188


xxx before update is x: -9.51328372955
y: 3.84057402611
theta: 3.08307409286
speed: 14.043132782
id: 0
t: 187
xxx after update is x: -10.0938987732
y: 3.2894282341
theta: 3.02998352051
speed: 13.7009725571
id: 0
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.776369571685791, -41.30652618408203, 4.649835586547852, 13.636947631835938)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: -10.0938987732
y: 3.2894282341
theta: 3.02998352051
speed: 13.7009725571
id: 0
t: 188
xxx after update is x: -10.7972011566
y: 3.70491719246
theta: 3.19885849953
speed: 14.3797311783
id: 0
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: -10.7972011566
y: 3.70491719246
theta: 3.19885849953
speed: 14.3797311783
id: 0
t: 189
xxx after update is x: -11.6024932861
y: 3.23252272606
theta: 3.20618581772
speed: 13.8921365738
id: 0
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.44444444444






self.maneuver_requested left
RELEASE,0,8.44444444444,(-11.602493286132812, 3.23252272605896, 3.206185817718506),13,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 8.44444444444
self.communication_details == 0
sending RELEASE,0,8.44444444444,(-11.602493286132812, 3.23252272605896, 3.206185817718506),13,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -11.6024932861
y: 3.23252272606
theta: 3.20618581772
speed: 13.8921365738
id: 0
t: 190
xxx after update is x: -12.3918056488
y: 3.50725746155
theta: 3.30574798584
speed: 14.0216321945
id: 0
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:192


xxx before update is x: -12.3918056488
y: 3.50725746155
theta: 3.30574798584
speed: 14.0216321945
id: 0
t: 191
xxx after update is x: -12.2758216858
y: 3.53554844856
theta: 3.04856014252
speed: 13.7056722641
id: 0
t: 192
maneu= 1):
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: -3.17669463158
y: -40.1005363464
theta: 4.60797691345
speed: 14.2493467331
id: 1
t: 186
xxx after update is x: -2.8591606617
y: -40.1596603394
theta: 4.58612775803
speed: 14.0480098724
id: 1
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:188




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: -2.8591606617
y: -40.1596603394
theta: 4.58612775803
speed: 14.0480098724
id: 1
t: 187
xxx after update is x: -2.77636957169
y: -41.3065261841
theta: 4.64983558655
speed: 13.6369476318
id: 1
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.77636957169
y: -41.3065261841
theta: 4.64983558655
speed: 13.6369476318
id: 1
t: 188
xxx after update is x: -2.99874305725
y: -42.0502891541
theta: 4.72777366638
speed: 13.9135398865
id: 1
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.99874305725
y: -42.0502891541
theta: 4.72777366638
speed: 13.9135398865
id: 1
t: 189
xxx after update is x: -3.11751246452
y: -42.654876709
theta: 4.63651752472
speed: 13.6698198318
id: 1
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:190


Received -->>: 
current clock is 8.44444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 8.44444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '8.44444444444', 'Position': ['(-11.602493286132812', ' 3.23252272605896', ' 3.206185817718506)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,8.44444444444,(-11.602493286132812, 3.23252272605896, 3.206185817718506),13,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -3.11751246452
y: -42.654876709
theta: 4.63651752472
speed: 13.6698198318
id: 1
t: 190
xxx after update is x: -3.0212726593
y: -43.5501556396
theta: 4.76046514511
speed: 13.8751134872
id: 1
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5247999999999986]
222 self.state_dicts[msg.id][msg.t] is (-12.391805648803711, 3.5072574615478516, 3.3057479858398438, 14.021632194519043)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:192


xxx before update is x: -3.0212726593
y: -43.5501556396
theta: 4.76046514511
speed: 13.8751134872
id: 1
t: 191
xxx after update is x: -2.9236767292
y: -43.2404899597
theta: 4.83792877197
speed: 14.0278959274
id: 1
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.53333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver fuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.9236767292022705, -43.2404899597168, 4.837928771972656, 14.0278959274292)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:193


xxx before update is x: -12.2758216858
y: 3.53554844856
theta: 3.04856014252
speed: 13.7056722641
id: 0
t: 192
xxx after update is x: -13.1751499176
y: 4.25117397308
theta: 3.10019540787
speed: 14.0142774582
id: 0
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:194


xxx before update is x: -13.1751499176
y: 4.25117397308
theta: 3.10019540787
speed: 14.0142774582
id: 0
t: 193
xxx after update is x: -13.9965162277
y: 3.746758461
theta: 3.23555064201
speed: 13.5338811874
id: 0
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:195


xxx before update is x: -13.9965162277
y: 3.746758461
theta: 3.23555064201
speed: 13.5338811874
id: 0
t: 194
xxx after update is x: -14.1880807877
y: 3.77259325981
theta: 3.19516396523
speed: 14.1445655823
id: 0
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:196


xxx before update is x: -14.1880807877
y: 3.77259325981
theta: 3.19516396523
speed: 14.1445655823
id: 0
t: 195
xxx after update is x: -15.1777572632
y: 3.47603273392
theta: 3.30412840843
speed: 13.9143466949
id: 0
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -15.1777572632
y: 3.47603273392
theta: 3.30412840843
speed: 13.9143466949
id: 0
t: 196
xxx after update is x: -15.3578262329
y: 3.49874687195
theta: 3.21074819565
speed: 14.0503129959
id: 0
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.380324363708496, -45.919647216796875, 4.610501289367676, 14.276328086853027)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -15.3578262329
y: 3.49874687195
theta: 3.21074819565
speed: 14.0503129959
id: 0
t: 197
xxx after update is x: -16.4039154053
y: 2.79954075813
theta: 3.21934461594
speed: 13.8272390366
id: 0
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.8






self.maneuver_requested left
RELEASE,0,8.8,(-16.403915405273438, 2.7995407581329346, 3.2193446159362793),13,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 8.8
self.communication_details == 0
sending RELEASE,0,8.8,(-16.403915405273438, 2.7995407581329346, 3.2193446159362793),13,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
leave the update function 
in spin function, finish the n times spin:198


maneuver_negotiatir.py in the try maneuver function nction update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:193


xxx before update is x: -2.9236767292
y: -43.2404899597
theta: 4.83792877197
speed: 14.0278959274
id: 1
t: 192
xxx after update is x: -2.99581480026
y: -44.1389541626
theta: 4.75164604187
speed: 13.998380661
id: 1
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.99581480026
y: -44.1389541626
theta: 4.75164604187
speed: 13.998380661
id: 1
t: 193
xxx after update is x: -3.22145533562
y: -44.7554283142
theta: 4.66512298584
speed: 14.1682701111
id: 1
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:194


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48639999999999795]
222 self.state_dicts[msg.id][msg.t] is (-13.996516227722168, 3.746758460998535, 3.23555064201355, 13.533881187438965)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:195


xxx before update is x: -3.22145533562
y: -44.7554283142
theta: 4.66512298584
speed: 14.1682701111
id: 1
t: 194
xxx after update is x: -3.15263009071
y: -45.2190895081
theta: 4.65151262283
speed: 13.9769973755
id: 1
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
removed car with id 0 from grantlist. currentgrantlist: {}


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:196


xxx before update is x: -3.15263009071
y: -45.2190895081
theta: 4.65151262283
speed: 13.9769973755
id: 1
t: 195
xxx after update is x: -3.53376603127
y: -45.8944587708
theta: 4.77104854584
speed: 13.8711013794
id: 1
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -3.53376603127
y: -45.8944587708
theta: 4.77104854584
speed: 13.8711013794
id: 1
t: 196
xxx after update is x: -3.38032436371
y: -45.9196472168
theta: 4.61050128937
speed: 14.2763280869
id: 1
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:198


xxx before update is x: -3.38032436371
y: -45.9196472168
theta: 4.61050128937
speed: 14.2763280869
id: 1
t: 197
xxx after update is x: -3.65109944344
y: -47.4118804932
theta: 4.66131544113
speed: 13.7819843292
id: 1
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 8.8




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 8.8
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '8.8', 'Position': ['(-16.403915405273438', ' 2.7995407581329346', ' 3.2193446159362793)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,8.8,(-16.403915405273438, 2.7995407581329346, 3.2193446159362793),13,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.65109944344
y: -47.4118804932
theta: 4.66131544113
speed: 13.7819843292
id: 1
t: 198
xxx after update is x: -3.02487230301
y: -47.5583076477
theta: 4.82954359055
speed: 13.7263746262
id: 1
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:199


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5087999999999981]
222 self.state_dicts[msg.id][msg.t] is (-16.70781135559082, 2.885054111480713, 3.103510618209839, 13.9192533493042)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.84444444444






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: -3.02487230301
y: -47.5583076477
theta: 4.82954359055
speed: 13.7263746262
id: 1
t: 199
xxx after update is x: -2.83576273918
y: -48.2950439453
theta: 4.6257610321
speed: 14.0572414398
id: 1
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -2.83576273918
y: -48.2950439453
theta: 4.6257610321
speed: 14.0572414398
id: 1
t: 200
xxx after update is x: -3.42969655991
y: -48.4908905029
theta: 4.80518102646
speed: 13.9772005081
id: 1
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:202


xxx before update is x: -3.42969655991
y: -48.4908905029
theta: 4.80518102646
speed: 13.9772005081
id: 1
t: 201
xxx after update is x: -3.43156433105
y: -49.3424301147
theta: 4.71827936172
speed: 14.0811748505
id: 1
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:203


xxx before update is x: -3.43156433105
y: -49.3424301147
theta: 4.71827936172
speed: 14.0811748505
id: 1
t: 202
xxx after update is x: -2.87352514267
y: -50.3530578613
theta: 4.60403490067
speed: 13.4794921875
id: 1
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.49919999999999787]
222 self.state_dicts[msg.id][msg.t] is (-18.933916091918945, 3.263174295425415, 3.1444666385650635, 13.935675621032715)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:204


xxx before update is x: -2.87352514267
y: -50.3530578613
theta: 4.60403490067
speed: 13.4794921875
id: 1
t: 203
xxx after update is x: -3.45479488373
y: -50.7491950989
theta: 4.81177949905
speed: 13.6760387421
id: 1
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:205


xxx before update is x: -3.45479488373
y: -50.7491950989
theta: 4.811update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:199


xxx before update is x: -16.4039154053
y: 2.79954075813
theta: 3.21934461594
speed: 13.8272390366
id: 0
t: 198
xxx after update is x: -16.7078113556
y: 2.88505411148
theta: 3.10351061821
speed: 13.9192533493
id: 0
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: -16.7078113556
y: 2.88505411148
theta: 3.10351061821
speed: 13.9192533493
id: 0
t: 199
xxx after update is x: -17.66847229
y: 3.5740711689
theta: 3.09894609451
speed: 13.6991138458
id: 0
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -17.66847229
y: 3.5740711689
theta: 3.09894609451
speed: 13.6991138458
id: 0
t: 200
xxx after update is x: -18.1742191315
y: 2.90555524826
theta: 3.18183708191
speed: 14.0871610641
id: 0
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:202


xxx before update is x: -18.1742191315
y: 2.90555524826
theta: 3.18183708191
speed: 14.0871610641
id: 0
t: 201
xxx after update is x: -19.1506614685
y: 3.37426614761
theta: 3.13221335411
speed: 13.6886606216
id: 0
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4315643310546875, -49.342430114746094, 4.7182793617248535, 14.081174850463867)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -19.1506614685
y: 3.37426614761
theta: 3.13221335411
speed: 13.6886606216
id: 0
t: 202
xxx after update is x: -18.9339160919
y: 3.26317429543
theta: 3.14446663857
speed: 13.935675621
id: 0
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:203


removed car with id 0 from grantlist. currentgrantlist: {}


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -18.9339160919
y: 3.26317429543
theta: 3.14446663857
speed: 13.935675621
id: 0
t: 203
xxx after update is x: -20.4268817902
y: 3.03797149658
theta: 3.21273493767
speed: 13.4415035248
id: 0
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:204




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:205


xxx before update is x: -20.4268817902
y: 3.03797149658
theta: 3.21273493767
speed: 13.4415035248
id: 0
t: 204
xxx after update is x: -21.0893650055
y: 3.42622923851
theta: 3.09166240692
speed: 14.1608476639
id: 0
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:206


xxx before update is x: -21.0893650055
y: 3.42622923851
theta: 3.09166240692
speed: 14.1608476639
id: 0
t: 205
xxx after update is x: -21.71541595477949905
speed: 13.6760387421
id: 1
t: 204
xxx after update is x: -3.48530030251
y: -51.7496070862
theta: 4.7724852562
speed: 13.8850383759
id: 1
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:206


xxx before update is x: -3.48530030251
y: -51.7496070862
theta: 4.7724852562
speed: 13.8850383759
id: 1
t: 205
xxx after update is x: -3.56402397156
y: -52.1635665894
theta: 4.48938941956
speed: 14.0482339859
id: 1
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 9.15555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 9.15555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '9.15555555556', 'Position': ['(-21.715415954589844', ' 3.5395255088806152', ' 3.072221040725708)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,9.15555555556,(-21.715415954589844, 3.5395255088806152, 3.072221040725708),13,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:207


xxx before update is x: -3.56402397156
y: -52.1635665894
theta: 4.48938941956
speed: 14.0482339859
id: 1
t: 206
xxx after update is x: -3.7235853672
y: -52.9419212341
theta: 4.68003559113
speed: 13.5807628632
id: 1
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4943999999999979]
222 self.state_dicts[msg.id][msg.t] is (-21.76777458190918, 3.454751968383789, 3.219165086746216, 13.777913093566895)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.2






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:208


xxx before update is x: -3.7235853672
y: -52.9419212341
theta: 4.68003559113
speed: 13.5807628632
id: 1
t: 207
xxx after update is x: -3.21359539032
y: -52.7992401123
theta: 4.78858089447
speed: 13.9267883301
id: 1
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -3.21359539032
y: -52.7992401123
theta: 4.78858089447
speed: 13.9267883301
id: 1
t: 208
xxx after update is x: -3.04084968567
y: -54.2253952026
theta: 4.73288440704
speed: 13.9307899475
id: 1
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.04084968567
y: -54.2253952026
theta: 4.73288440704
speed: 13.9307899475
id: 1
t: 209
xxx after update is x: -2.74499964714
y: -54.3437461853
theta: 4.58471679688
speed: 13.5749111176
id: 1
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:210


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed6
y: 3.53952550888
theta: 3.07222104073
speed: 13.8407325745
id: 0
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.15555555556






self.maneuver_requested left
RELEASE,0,9.15555555556,(-21.715415954589844, 3.5395255088806152, 3.072221040725708),13,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 9.15555555556
self.communication_details == 0
sending RELEASE,0,9.15555555556,(-21.715415954589844, 3.5395255088806152, 3.072221040725708),13,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:207


xxx before update is x: -21.7154159546
y: 3.53952550888
theta: 3.07222104073
speed: 13.8407325745
id: 0
t: 206
xxx after update is x: -21.7677745819
y: 3.45475196838
theta: 3.21916508675
speed: 13.7779130936
id: 0
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.723585367202759, -52.94192123413086, 4.680035591125488, 13.58076286315918)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -21.7677745819
y: 3.45475196838
theta: 3.21916508675
speed: 13.7779130936
id: 0
t: 207
xxx after update is x: -22.8309497833
y: 2.97830462456
theta: 3.24021816254
speed: 13.8825178146
id: 0
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:208




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -22.8309497833
y: 2.97830462456
theta: 3.24021816254
speed: 13.8825178146
id: 0
t: 208
xxx after update is x: -23.7104587555
y: 3.64176535606
theta: 3.27462887764
speed: 13.9911623001
id: 0
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -23.7104587555
y: 3.64176535606
theta: 3.27462887764
speed: 13.9911623001
id: 0
t: 209
xxx after update is x: -24.0221843719
y: 3.08949613571
theta: 3.16570687294
speed: 13.9936275482
id: 0
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:211


xxx before update is x: -24.0221843719
y: 3.08949613571
theta: 3.16570687294
speed: 13.9936275482
id: 0
t: 210
xxx after update is x: -24.0366172791
y: 3.45050835609
theta: 3.09127235413
speed: 14.1023683548
id: 0
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:212


xxx before update is x: -24.0366172791
y: 3.45050835609
theta: 3.09127235413
speed: 14.1023683548
id: 0
t: 211
xxx after update is x: -25.6131877899
y: 2.97885608673
theta: 3.06384372711
speed: 14.1081457138
id: 0
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.716125965118408, -55.97245407104492, 4.749606132507324, 14.1623487472534 < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:211


xxx before update is x: -2.74499964714
y: -54.3437461853
theta: 4.58471679688
speed: 13.5749111176
id: 1
t: 210
xxx after update is x: -3.2131524086
y: -55.0567932129
theta: 4.60799694061
speed: 14.1722955704
id: 1
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.46879999999999805]
222 self.state_dicts[msg.id][msg.t] is (-24.036617279052734, 3.4505083560943604, 3.0912723541259766, 14.102368354797363)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:212


xxx before update is x: -3.2131524086
y: -55.0567932129
theta: 4.60799694061
speed: 14.1722955704
id: 1
t: 211
xxx after update is x: -2.71612596512
y: -55.972454071
theta: 4.74960613251
speed: 14.1623487473
id: 1
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -2.71612596512
y: -55.972454071
theta: 4.74960613251
speed: 14.1623487473
id: 1
t: 212
xxx after update is x: -3.12145590782
y: -56.4809799194
theta: 4.75557422638
speed: 13.9874916077
id: 1
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 9.46666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 9.46666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '9.46666666667', 'Position': ['(-25.590030670166016', ' 3.1887104511260986', ' 3.1606760025024414)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,9.46666666667,(-25.590030670166016, 3.1887104511260986, 3.1606760025024414),13,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.12145590782
y: -56.4809799194
theta: 4.75557422638
speed: 13.9874916077
id: 1
t: 213
xxx after update is x: -3.3756275177
y: -57.0670585632
theta: 4.71723794937
speed: 13.7804765701
id: 1
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:214




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:215


xxx before update is x: -3.3756275177
y: -57.0670585632
theta: 4.71723794937
speed: 13.7804765701
id: 1
t: 214
xxx after update is x: -2.97627043724
y: -57.4471092224
theta: 4.58969116211
speed: 14.2036066055
id: 1
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.55555555556






self.maneuver_requested None
aaaaaa
aaaaaabbbbb
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.0, 0.46559999999999807]
222 self.state_dicts[msg.id][msg.t] is (-27.05630111694336, 3.174041748046875, 3.183678388595581, 13.80808162689209)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id ==18)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -25.6131877899
y: 2.97885608673
theta: 3.06384372711
speed: 14.1081457138
id: 0
t: 212
xxx after update is x: -25.5900306702
y: 3.18871045113
theta: 3.1606760025
speed: 13.9515123367
id: 0
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:213


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.46666666667






self.maneuver_requested left
RELEASE,0,9.46666666667,(-25.590030670166016, 3.1887104511260986, 3.1606760025024414),13,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 9.46666666667
self.communication_details == 0
sending RELEASE,0,9.46666666667,(-25.590030670166016, 3.1887104511260986, 3.1606760025024414),13,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:214


xxx before update is x: -25.5900306702
y: 3.18871045113
theta: 3.1606760025
speed: 13.9515123367
id: 0
t: 213
xxx after update is x: -26.1540489197
y: 3.54578709602
theta: 3.17164826393
speed: 14.1677951813
id: 0
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:215


xxx before update is x: -26.1540489197
y: 3.54578709602
theta: 3.17164826393
speed: 14.1677951813
id: 0
t: 214
xxx after update is x: -27.0563011169
y: 3.17404174805
theta: 3.1836783886
speed: 13.8080816269
id: 0
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:216


xxx before update is x: -27.0563011169
y: 3.17404174805
theta: 3.1836783886
speed: 13.8080816269
id: 0
t: 215
xxx after update is x: -27.8278484344
y: 3.40113449097
theta: 2.95873475075
speed: 13.6844921112
id: 0
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -27.8278484344
y: 3.40113449097
theta: 2.95873475075
speed: 13.6844921112
id: 0
t: 216
xxx after update is x: -27.64037323
y: 3.63760042191
theta: 3.01908254623
speed: 13.9799509048
id: 0
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:217


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.750462293624878, -58.58294677734375, 4.819949150085449, 13.879600524902344)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:218


xxx before update is x: -27.64037323
y: 3.63760042191
theta: 3.01908254623
speed: 13.9799509048
id: 0
t: 217
xxx after update is x: -28.8662929535
y: 3.60016036034
theta: 3.23357820511
speed: 13.9047336578
id: 0
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in s 1):
leave the update function 
in spin function, finish the n times spin:216


xxx before update is x: -2.97627043724
y: -57.4471092224
theta: 4.58969116211
speed: 14.2036066055
id: 1
t: 215
xxx after update is x: -3.16305613518
y: -58.1436920166
theta: 4.69775009155
speed: 13.6548423767
id: 1
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:217


xxx before update is x: -3.16305613518
y: -58.1436920166
theta: 4.69775009155
speed: 13.6548423767
id: 1
t: 216
xxx after update is x: -2.75046229362
y: -58.5829467773
theta: 4.81994915009
speed: 13.8796005249
id: 1
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:218


xxx before update is x: -2.75046229362
y: -58.5829467773
theta: 4.81994915009
speed: 13.8796005249
id: 1
t: 217
xxx after update is x: -3.33365392685
y: -59.7465362549
theta: 4.9317688942
speed: 13.9975795746
id: 1
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -3.33365392685
y: -59.7465362549
theta: 4.9317688942
speed: 13.9975795746
id: 1
t: 218
xxx after update is x: -3.30564856529
y: -59.9845695496
theta: 4.64249849319
speed: 14.0011491776
id: 1
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:220


xxx before update is x: -3.30564856529
y: -59.9845695496
theta: 4.64249849319
speed: 14.0011491776
id: 1
t: 219
xxx after update is x: -2.87169337273
y: -61.1825447083
theta: 4.8809056282
speed: 13.4736804962
id: 1
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 0.473599999999998]
222 self.state_dicts[msg.id][msg.t] is (-29.738962173461914, 4.009437084197998, 3.2568938732147217, 13.862853050231934)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -2.87169337273
y: -61.1825447083
theta: 4.8809056282
speed: 13.4736804962
id: 1
t: 220
xxx after update is x: -3.23056221008
y: -60.9922599792
theta: 4.73815107346
speed: 13.8941793442
id: 1
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 9.82222222222




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 9.82222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '9.82222222222', 'Position': ['(-30.98040199279785', ' 3.2446298599243164', ' 3.073428153991699)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,9.82222222222,(-30.98040199279785, 3.2446298599243164, 3.073428153991699),13,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the npin function, finish the n times spin:219

xxx before update is x: -28.8662929535
y: 3.60016036034
theta: 3.23357820511
speed: 13.9047336578
id: 0
t: 218
xxx after update is x: -29.2177944183
y: 3.69515252113
theta: 2.99521946907
speed: 13.9853096008
id: 0
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:220


xxx before update is x: -29.2177944183
y: 3.69515252113
theta: 2.99521946907
speed: 13.9853096008
id: 0
t: 219
xxx after update is x: -29.7389621735
y: 4.0094370842
theta: 3.25689387321
speed: 13.8628530502
id: 0
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -29.7389621735
y: 4.0094370842
theta: 3.25689387321
speed: 13.8628530502
id: 0
t: 220
xxx after update is x: -30.9804019928
y: 3.24462985992
theta: 3.07342815399
speed: 13.7643766403
id: 0
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.82222222222






self.maneuver_requested left
RELEASE,0,9.82222222222,(-30.98040199279785, 3.2446298599243164, 3.073428153991699),13,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 9.82222222222
self.communication_details == 0
sending RELEASE,0,9.82222222222,(-30.98040199279785, 3.2446298599243164, 3.073428153991699),13,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.230562210083008, -60.99225997924805, 4.7381510734558105, 13.894179344177246)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:222


xxx before update is x: -30.9804019928
y: 3.24462985992
theta: 3.07342815399
speed: 13.7643766403
id: 0
t: 221
xxx after update is x: -30.9155597687
y: 3.28440666199
theta: 3.1843380928
speed: 13.6196327209
id: 0
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -30.9155597687
y: 3.28440666199
theta: 3.1843380928
speed: 13.6196327209
id: 0
t: 222
xxx after update is x: -32.0322036743
y: 3.03319096565
theta: 3.26094126701
speed: 13.9395694733
id: 0
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:224


xxx before update is x: -32.0322036743
y: 3.03319096565
theta: 3.26094126701
speed: 13.9395694733
id: 0
t: 223
xxx after update is x: -32.4701080322
y: 3.05990004539
theta: 3.031291008
speed: 14.0754308701
id: 0
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:225


xxx before update is x: -32.4701080322
y: 3.05990004539
theta: 3.031291008
speed: 14.0754308701
id: 0
t: 224
xxx after update is x: -33.1826210022
y: 3.60152411461
theta: 2.99152517319
speed: 14.2656850815
id: 0
t: 225
maneuver_negotiatir.py finis times spin:222

xxx before update is x: -3.23056221008
y: -60.9922599792
theta: 4.73815107346
speed: 13.8941793442
id: 1
t: 221
xxx after update is x: -3.75918912888
y: -61.8339920044
theta: 4.78294897079
speed: 13.7795057297
id: 1
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -3.75918912888
y: -61.8339920044
theta: 4.78294897079
speed: 13.7795057297
id: 1
t: 222
xxx after update is x: -2.98210120201
y: -62.4223365784
theta: 4.85793638229
speed: 14.0234155655
id: 1
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.91111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:224


xxx before update is x: -2.98210120201
y: -62.4223365784
theta: 4.85793638229
speed: 14.0234155655
id: 1
t: 223
xxx after update is x: -3.42343258858
y: -64.0505065918
theta: 4.69221067429
speed: 13.7365818024
id: 1
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5183999999999984]
222 self.state_dicts[msg.id][msg.t] is (-32.47010803222656, 3.0599000453948975, 3.0312910079956055, 14.075430870056152)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:225


xxx before update is x: -3.42343258858
y: -64.0505065918
theta: 4.69221067429
speed: 13.7365818024
id: 1
t: 224
xxx after update is x: -3.78191494942
y: -63.6834869385
theta: 4.78089523315
speed: 13.4914283752
id: 1
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:226


xxx before update is x: -3.78191494942
y: -63.6834869385
theta: 4.78089523315
speed: 13.4914283752
id: 1
t: 225
xxx after update is x: -2.80747246742
y: -64.3763656616
theta: 4.58830404282
speed: 13.3971710205
id: 1
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -2.80747246742
y: -64.3763656616
theta: 4.58830404282
speed: 13.3971710205
id: 1
t: 226
xxx after update is x: -3.5302233696
y: -64.9058380127
theta: 4.71062755585
speed: 13.4723339081
id: 1
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:228


xxx before update is x: -3.5302233696
y: -64.9058380127
theta: 4.71062755585
speed: 13.4723339081
id: 1
t: 227
xxx after update is x: -3.46426033974
y: -65.9304885864
theta: 4.73257684708
speed: 13.8944664001
id: 1
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -3.46426033974
y: -65.9304885864
theta: 4.73257684708
speed: 13.8944664001
idh the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.7819149494171143, -63.68348693847656, 4.780895233154297, 13.49142837524414)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -33.1826210022
y: 3.60152411461
theta: 2.99152517319
speed: 14.2656850815
id: 0
t: 225
xxx after update is x: -33.7112693787
y: 3.97397732735
theta: 3.18884158134
speed: 14.0403842926
id: 0
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:226




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -33.7112693787
y: 3.97397732735
theta: 3.18884158134
speed: 14.0403842926
id: 0
t: 226
xxx after update is x: -34.6489067078
y: 3.54999947548
theta: 3.22182703018
speed: 13.6524820328
id: 0
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -34.6489067078
y: 3.54999947548
theta: 3.22182703018
speed: 13.6524820328
id: 0
t: 227
xxx after update is x: -35.0209083557
y: 3.15639781952
theta: 3.21273136139
speed: 13.6448087692
id: 0
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:228




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -35.0209083557
y: 3.15639781952
theta: 3.21273136139
speed: 13.6448087692
id: 0
t: 228
xxx after update is x: -35.2778129578
y: 3.49601697922
theta: 3.10171508789
speed: 13.9393281937
id: 0
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:229


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.1777777778






self.maneuver_requested left
RELEASE,0,10.1777777778,(-35.27781295776367, 3.4960169792175293, 3.101715087890625),13,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 10.1777777778
self.communication_details == 0
sending RELEASE,0,10.1777777778,(-35.27781295776367, 3.4960169792175293, 3.101715087890625),13,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -35.2778129578
y: 3.49601697922
theta: 3.10171508789
speed: 13.9393281937
id: 0
t: 229
xxx after update is x: -35.6295547485
y: 3.54750776291
theta: 3.06028413773
speed: 13.5571966171
id: 0
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -35.6295547485
y: 3.54750776291
theta: 3.06028413773
speed: 13.5571966171
id: 0
t: 230
xxx after update is x: -37.3931808472
y: 2.67101931572
theta: 2.92414903641
speed: 13.8934459686
id: 0
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:231




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:232


xxx before update is x: -37.3931808472
y: 2.67101: 1
t: 228
xxx after update is x: -3.53709673882
y: -65.9754104614
theta: 4.59221124649
speed: 13.8746137619
id: 1
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 10.1777777778




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 10.1777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '10.1777777778', 'Position': ['(-35.27781295776367', ' 3.4960169792175293', ' 3.101715087890625)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,10.1777777778,(-35.27781295776367, 3.4960169792175293, 3.101715087890625),13,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -3.53709673882
y: -65.9754104614
theta: 4.59221124649
speed: 13.8746137619
id: 1
t: 229
xxx after update is x: -3.00752973557
y: -66.8622817993
theta: 4.63944864273
speed: 13.6735448837
id: 1
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4927999999999979]
222 self.state_dicts[msg.id][msg.t] is (-35.629554748535156, 3.5475077629089355, 3.06028413772583, 13.557196617126465)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.2222222222






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:231


xxx before update is x: -3.00752973557
y: -66.8622817993
theta: 4.63944864273
speed: 13.6735448837
id: 1
t: 230
xxx after update is x: -3.33222031593
y: -67.8360366821
theta: 4.72640752792
speed: 14.1650295258
id: 1
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:232


xxx before update is x: -3.33222031593
y: -67.8360366821
theta: 4.72640752792
speed: 14.1650295258
id: 1
t: 231
xxx after update is x: -3.84284710884
y: -68.1512374878
theta: 4.70326471329
speed: 13.9018011093
id: 1
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -3.84284710884
y: -68.1512374878
theta: 4.70326471329
speed: 13.9018011093
id: 1
t: 232
xxx after update is x: -3.71164941788
y: -69.3148117065
theta: 4.83549594879
speed: 13.7555131912
id: 1
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -3.71164941788
y: -69.3148117065
theta: 4.83549594879
speed: 13.7555131912
id: 1
t: 233
xxx after update is x: -3.5773434639
y: -69.1843032837
theta: 4.66805267334
speed: 13.8290700912
id: 1
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxx931572
theta: 2.92414903641
speed: 13.8934459686
id: 0
t: 231
xxx after update is x: -37.5513458252
y: 3.30636930466
theta: 3.06766176224
speed: 13.8866386414
id: 0
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -37.5513458252
y: 3.30636930466
theta: 3.06766176224
speed: 13.8866386414
id: 0
t: 232
xxx after update is x: -37.9821205139
y: 3.1341714859
theta: 3.23826408386
speed: 14.1409797668
id: 0
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.7116494178771973, -69.31481170654297, 4.835495948791504, 13.755513191223145)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -37.9821205139
y: 3.1341714859
theta: 3.23826408386
speed: 14.1409797668
id: 0
t: 233
xxx after update is x: -38.998840332
y: 3.46885633469
theta: 3.17957615852
speed: 14.1448287964
id: 0
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:234




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -38.998840332
y: 3.46885633469
theta: 3.17957615852
speed: 14.1448287964
id: 0
t: 234
xxx after update is x: -39.1148147583
y: 3.26174974442
theta: 3.21737790108
speed: 13.7542171478
id: 0
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -39.1148147583
y: 3.26174974442
theta: 3.21737790108
speed: 13.7542171478
id: 0
t: 235
xxx after update is x: -39.763874054
y: 2.83019804955
theta: 3.11739969254
speed: 13.8970623016
id: 0
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:236




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -39.763874054
y: 2.83019804955
theta: 3.11739969254
speed: 13.8970623016
id: 0
t: 236
xxx after update is x: -40.2799034119
y: 3.59939432144
theta: 2.93960261345
speed: 14.0158643723
id: 0
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.5333333333






self.maneuver_requested left
RELEASE,0,10.5333333333,(-40.279903411865234, 3.5993943214416504, 2.9396026134490967),14,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 10.5333333333
self.communication_details == 0
sending RELEASE,0,10.5333333333,(-40.279903411865234, 3.5993943214416504, 2.9396026134490967),14,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -40.2799034119
y: 3.59939432144
theta: 2.93960261345
speed: 14.0158643723
id: 0
t: 237
xxx after update is x: -41.2233581543
y: 4.02169132233
theta: 3.07349705696
speed: 13.7537708282
id: 0
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]


going to the updaxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -3.5773434639
y: -69.1843032837
theta: 4.66805267334
speed: 13.8290700912
id: 1
t: 234
xxx after update is x: -3.40365815163
y: -70.7100372314
theta: 4.76732110977
speed: 13.7943058014
id: 1
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5359999999999989]
222 self.state_dicts[msg.id][msg.t] is (-39.11481475830078, 3.261749744415283, 3.2173779010772705, 13.754217147827148)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:236


xxx before update is x: -3.40365815163
y: -70.7100372314
theta: 4.76732110977
speed: 13.7943058014
id: 1
t: 235
xxx after update is x: -3.51969599724
y: -70.2758102417
theta: 4.80920124054
speed: 13.8206825256
id: 1
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -3.51969599724
y: -70.2758102417
theta: 4.80920124054
speed: 13.8206825256
id: 1
t: 236
xxx after update is x: -3.99735426903
y: -70.8916931152
theta: 4.68906974792
speed: 13.8574428558
id: 1
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 10.5333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 10.5333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '10.5333333333', 'Position': ['(-40.279903411865234', ' 3.5993943214416504', ' 2.9396026134490967)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,10.5333333333,(-40.279903411865234, 3.5993943214416504, 2.9396026134490967),14,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -3.99735426903
y: -70.8916931152
theta: 4.68906974792
speed: 13.8574428558
id: 1
t: 237
xxx after update is x: -3.46513605118
y: -72.1039581299
theta: 4.69817256927
speed: 14.0391149521
id: 1
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.5777777778






self.maneuver_requested None
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.46513605118
y: -72.1039581299
theta: 4.69817256927
speed: 14.0391149521
id: 1
t: 238
xxx after update is x: -3.54486513138
y: -72.782699585
theta: 4.82972621918
speed: 13.8295402527
id: 1
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:239


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.46559999999999807]
222 self.state_dicts[msg.id][msg.t] is (-41.87139892578125, 3.606825828552246, 3.265260934829712, 13.827324867248535)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the updte function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:239


xxx before update is x: -41.2233581543
y: 4.02169132233
theta: 3.07349705696
speed: 13.7537708282
id: 0
t: 238
xxx after update is x: -41.8713989258
y: 3.60682582855
theta: 3.26526093483
speed: 13.8273248672
id: 0
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (-3.544865131378174, -72.78269958496094, 4.829726219177246, 13.829540252685547)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:240


xxx before update is x: -41.8713989258
y: 3.60682582855
theta: 3.26526093483
speed: 13.8273248672
id: 0
t: 239
xxx after update is x: -42.5964202881
y: 3.28096723557
theta: 3.0633687973
speed: 13.7918052673
id: 0
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:241


xxx before update is x: -42.5964202881
y: 3.28096723557
theta: 3.0633687973
speed: 13.7918052673
id: 0
t: 240
xxx after update is x: -42.7094764709
y: 2.97187972069
theta: 3.05143260956
speed: 13.4980163574
id: 0
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -42.7094764709
y: 2.97187972069
theta: 3.05143260956
speed: 13.4980163574
id: 0
t: 241
xxx after update is x: -43.5394973755
y: 3.58021903038
theta: 3.12216663361
speed: 13.4039916992
id: 0
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:243


xxx before update is x: -43.5394973755
y: 3.58021903038
theta: 3.12216663361
speed: 13.4039916992
id: 0
t: 242
xxx after update is x: -43.7689476013
y: 3.01524329185
theta: 3.00622344017
speed: 14.1266689301
id: 0
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.6952643394470215, -74.50419616699219, 4.761381149291992, 13.698585510253906)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:244


xxx before update is x: -43.7689476013
y: 3.01524329185
theta: 3.00622344017
speed: 14.1266689301
id: 0
t: 243
xxx after update is x: -44.2223052979
y: 3.27585172653
theta: 3.07017350197
speed: 13.5127735138
id: 0
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.8444444444






self.maneuver_requested left
RELEASE,0,10.8444444444,(-44.22230529785156, 3.2758517265319824, 3.070173501968384),13,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 10.8444444444
self.communication_details == 0
sending RELEASE,0,10.8444444444,(-44.22230529785156, 3.2758517265319824, 3.070173501968384),13,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leate function xxx before update is x: -3.54486513138
y: -72.782699585
theta: 4.82972621918
speed: 13.8295402527
id: 1
t: 239
xxx after update is x: -2.98294329643
y: -73.7350997925
theta: 4.70867967606
speed: 13.6051492691
id: 1
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:240




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:241


xxx before update is x: -2.98294329643
y: -73.7350997925
theta: 4.70867967606
speed: 13.6051492691
id: 1
t: 240
xxx after update is x: -3.27346992493
y: -73.6239318848
theta: 4.55594396591
speed: 14.159576416
id: 1
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -3.27346992493
y: -73.6239318848
theta: 4.55594396591
speed: 14.159576416
id: 1
t: 241
xxx after update is x: -3.61148285866
y: -74.1287460327
theta: 4.74126291275
speed: 14.1944084167
id: 1
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:243


xxx before update is x: -3.61148285866
y: -74.1287460327
theta: 4.74126291275
speed: 14.1944084167
id: 1
t: 242
xxx after update is x: -3.69526433945
y: -74.504196167
theta: 4.76138114929
speed: 13.6985855103
id: 1
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4895999999999979]
222 self.state_dicts[msg.id][msg.t] is (-43.76894760131836, 3.0152432918548584, 3.006223440170288, 14.126668930053711)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:244


xxx before update is x: -3.69526433945
y: -74.504196167
theta: 4.76138114929
speed: 13.6985855103
id: 1
t: 243
xxx after update is x: -3.3040292263
y: -75.298789978
theta: 4.59374046326
speed: 13.9002599716
id: 1
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
Received -->>: 
current clock is 10.8444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 10.8444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '10.8444444444', 'Position': ['(-44.22230529785156', ' 3.2758517265319824', ' 3.070173501968384)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,10.8444444444,(-44.22230529785156, 3.2758517265319824, 3.070173501968384),13,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




xxx before update is x: -3.3040292263
y: -75.298789978
theta: 4.59374046326
speed: 13.9002599716
id: 1
t: 244
xxx after update is x: -3.55251646042
y: -75.9731369019
theta: 4.57223463058
speed: 13.834564209
id: 1
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:245




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:246


xxx before update is x: -3.55251646042
y: -75.9731369019
theta: 4.57223463058
speed: 13.834564209
id: 1
t: 245
xxx after update is x: -3.05896234512
y: -77.0143890381
theta: 4.72127103806
speed: 13.7667541504
id: 1
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.9333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.05896234512
y: -77.0143890381
theta: 4.72127103806
speed: 13.7667541504
id: 1
t: 246
xxx after update is x: -3.56297469139
y: -77.4851531982
theta: 4.83694696426
speed: 13.9798908234
id: 1
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:247




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -3.56297469139
y: -77.4851531982
theta: 4.83694696426
speed: 13.9798908234
id: 1
t: 247
xxx after update is x: -3.85689997673
y: -77.834487915
theta: 4.65170192719
speed: 14.0319757462
id: 1
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -3.85689997673
y: -77.834487915
theta: 4.65170192719
speed: 14.0319757462
id: 1
t: 248
xxx after update is x: -3.15557432175
y: -79.1537628174
theta: 4.62857246399
speed: 14.0849733353
id: 1
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:250


xxx before update is x: -3.15557432175
y: -79.1537628174
theta: 4.62857246399
speed: 14.0849733353
id: 1
t: 249
xxx after update is x: -3.28504133224
y: -79.5741500854
theta: 4.6245598793
speed: 13.8708763123
id: 1
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 0.48799999999999794]
222 self.state_dicts[msg.id][msg.t] is (-48.40835189819336, 3.145512580871582, 3.1655540466308594, 13.90500545501709)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:251


xxx before update is x: -3.28504133224
y: -79.5741500854
theta: 4.6245598793
speed: 13.8708763123
id: 1
t: 250
xxx after update is x: -3.54794836044
y: -79.4293365479
theta: 4.61336183548
speed: 13.7172746658
id: 1
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.54794836044
y: -79.4293365479
theta: 4.61336183548
speed: 13.7172746658
id: 1
t: 251
xxx after update is x: -2.75196123123
y: -80.2959518433
theta: 4.7362613678
speed: 14.0872526169
id: 1
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:252




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:253


xxx before update is x: -2.75196123123
y: -80.2959518433
theta: 4.7362613678
speed: 14.0872526169
id: 1
t: 252
xxx after update isave the update function xxx before update is x: -44.2223052979
y: 3.27585172653
theta: 3.07017350197
speed: 13.5127735138
id: 0
t: 244
xxx after update is x: -45.1190376282
y: 3.2716524601
theta: 3.29672861099
speed: 13.591550827
id: 0
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:245


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -45.1190376282
y: 3.2716524601
theta: 3.29672861099
speed: 13.591550827
id: 0
t: 245
xxx after update is x: -45.8750419617
y: 2.67937445641
theta: 3.06430506706
speed: 13.932559967
id: 0
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:246




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -45.8750419617
y: 2.67937445641
theta: 3.06430506706
speed: 13.932559967
id: 0
t: 246
xxx after update is x: -46.8432617188
y: 3.40543651581
theta: 3.20866513252
speed: 13.5711870193
id: 0
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -46.8432617188
y: 3.40543651581
theta: 3.20866513252
speed: 13.5711870193
id: 0
t: 247
xxx after update is x: -47.5241470337
y: 3.72249889374
theta: 3.1895942688
speed: 13.788980484
id: 0
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:248




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -47.5241470337
y: 3.72249889374
theta: 3.1895942688
speed: 13.788980484
id: 0
t: 248
xxx after update is x: -48.4770469666
y: 3.54190731049
theta: 3.1914525032
speed: 14.1515102386
id: 0
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:250


xxx before update is x: -48.4770469666
y: 3.54190731049
theta: 3.1914525032
speed: 14.1515102386
id: 0
t: 249
xxx after update is x: -48.4083518982
y: 3.14551258087
theta: 3.16555404663
speed: 13.905005455
id: 0
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.285041332244873, -79.57415008544922, 4.6245598793029785, 13.87087631225586)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:251


xxx before update is x: -48.4083518982
y: 3.14551258087
theta: 3.16555404663
speed: 13.905005455
id: 0
t: 250
xxx after update is x: -49.2215080261
y: 3.08291172981
theta: 3.25161743164
speed: 13.8391962051
id: 0
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:252




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:253


xxx before update is x: -49.2215080261
y: 3.08291172981
theta: 3.25161743164
speed: 13.839 x: -2.52626085281
y: -81.1564254761
theta: 4.78572130203
speed: 13.7836313248
id: 1
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 11.2444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 11.2444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '11.1555555556', 'Position': ['(-49.22150802612305', ' 3.082911729812622', ' 3.251617431640625)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,11.1555555556,(-49.22150802612305, 3.082911729812622, 3.251617431640625),13,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:254


xxx before update is x: -2.52626085281
y: -81.1564254761
theta: 4.78572130203
speed: 13.7836313248
id: 1
t: 253
xxx after update is x: -2.97702169418
y: -81.7832641602
theta: 4.71590185165
speed: 13.6234874725
id: 1
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5231999999999986]
222 self.state_dicts[msg.id][msg.t] is (-50.77509307861328, 2.738349676132202, 3.2152655124664307, 14.034306526184082)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.2888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.97702169418
y: -81.7832641602
theta: 4.71590185165
speed: 13.6234874725
id: 1
t: 254
xxx after update is x: -3.3182964325
y: -82.5050354004
theta: 4.62800359726
speed: 13.4818782806
id: 1
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:255




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:256


xxx before update is x: -3.3182964325
y: -82.5050354004
theta: 4.62800359726
speed: 13.4818782806
id: 1
t: 255
xxx after update is x: -3.41611909866
y: -82.8278961182
theta: 4.63260602951
speed: 13.8958702087
id: 1
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.41611909866
y: -82.8278961182
theta: 4.63260602951
speed: 13.8958702087
id: 1
t: 256
xxx after update is x: -3.73652505875
y: -83.5273132324
theta: 4.54172611237
speed: 14.1144590378
id: 1
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:257


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.73652505875
y: -83.5273132324
theta: 4.54172611237
speed: 14.1144590378
id: 1
t: 257
xxx after update is x: -3.00138497353
y: -83.7808990479
theta: 4.60820579529
speed: 13.6719503403
id: 1
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:258


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.505599999999998]
222 self.state_dicts[msg.id][msg.t] is (-53.22275161743164, 3.160409450531006, 3.1962051
id: 0
t: 251maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.1555555556






self.maneuver_requested left
RELEASE,0,11.1555555556,(-49.22150802612305, 3.082911729812622, 3.251617431640625),13,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 11.1555555556
self.communication_details == 0
sending RELEASE,0,11.1555555556,(-49.22150802612305, 3.082911729812622, 3.251617431640625),13,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

xxx after update is x: -50.7210578918
y: 3.17712712288
theta: 3.33983755112
speed: 13.9662361145
id: 0
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -50.7210578918
y: 3.17712712288
theta: 3.33983755112
speed: 13.9662361145
id: 0
t: 252
xxx after update is x: -50.5446968079
y: 3.40515494347
theta: 3.12254047394
speed: 13.963850975
id: 0
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -50.5446968079
y: 3.40515494347
theta: 3.12254047394
speed: 13.963850975
id: 0
t: 253
xxx after update is x: -50.7750930786
y: 2.73834967613
theta: 3.21526551247
speed: 14.0343065262
id: 0
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:254




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -50.7750930786
y: 2.73834967613
theta: 3.21526551247
speed: 14.0343065262
id: 0
t: 254
xxx after update is x: -51.8221130371
y: 3.32615113258
theta: 3.08964300156
speed: 13.6548271179
id: 0
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:255




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:256


xxx before update is x: -51.8221130371
y: 3.32615113258
theta: 3.08964300156
speed: 13.6548271179
id: 0
t: 255
xxx after update is x: -52.2437553406
y: 3.73569631577
theta: 3.25923109055
speed: 13.5566205978
id: 0
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.41611909866333, -82.82789611816406, 4.632606029510498, 13.895870208740234)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:257


xxx before update is x: -52.2437553406
y: 3.73569631577
theta: 3.25923109055
speed: 13.5566205978
id: 0
t: 256
xxx after update is x: -52.790927887
y: 3.14477610588
theta: 3.0554831028
speed: 14.1453924179
id: 0
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -52.790927887
y: 3.14477610588
theta: 3.0554831028
speed: 14.1453924179
id: 0
t: 257
xxx after update is x: -53.2227516174
y: 3.16040945053
theta: 3.33982825279
speed: 13.7690029144
id: 0
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:258




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:259


xxx before update is x: -53.2227516174
y: 3.16040945053
theta: 3.33982825279
speed: 13.76900293398282527923584, 13.769002914428711)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:259


xxx before update is x: -3.00138497353
y: -83.7808990479
theta: 4.60820579529
speed: 13.6719503403
id: 1
t: 258
xxx after update is x: -3.35315346718
y: -84.6916275024
theta: 4.69164037704
speed: 14.2743644714
id: 1
t: 259
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.35315346718
y: -84.6916275024
theta: 4.69164037704
speed: 14.2743644714
id: 1
t: 259
xxx after update is x: -3.49245882034
y: -86.056678772
theta: 4.78529071808
speed: 14.0709609985
id: 1
t: 260
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:260




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:261


xxx before update is x: -3.49245882034
y: -86.056678772
theta: 4.78529071808
speed: 14.0709609985
id: 1
t: 260
xxx after update is x: -2.56583595276
y: -86.0145721436
theta: 4.73051691055
speed: 13.7847290039
id: 1
t: 261
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 11.6




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 11.6
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '11.6', 'Position': ['(-55.44620132446289', ' 2.962876796722412', ' 3.2059237957000732)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,11.6,(-55.44620132446289, 2.962876796722412, 3.2059237957000732),14,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.6






self.maneuver_requested None
xxx before update is x: -2.56583595276
y: -86.0145721436
theta: 4.73051691055
speed: 13.7847290039
id: 1
t: 261
xxx after update is x: -3.15826249123
y: -86.8201828003
theta: 4.70334291458
speed: 13.8199729919
id: 1
t: 262
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:262


aaaaaa
aaaaaabbbbb
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.0, 0.481599999999998]
222 self.state_dicts[msg.id][msg.t] is (-55.86384582519531, 3.025606393814087, 3.19498872756958, 13.96414852142334)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:263


xxx before update is x: -3.15826249123
y: -86.8201828003
theta: 4.70334291458
speed: 13.8199729919
id: 1
t: 262
xxx after update is x: -3.38437652588
y: -87.7132263184
theta: 4.75804615021
speed: 14.0274209976
id: 1
t: 263
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.38437652588
y: -87.7132263184
theta: 4.75804615021
speed: 14.0274209976
i144
id: 0
t: 258
xxx after update is x: -53.7497749329
y: 3.63929891586
theta: 3.23508381844
speed: 14.006860733
id: 0
t: 259
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:260


xxx before update is x: -53.7497749329
y: 3.63929891586
theta: 3.23508381844
speed: 14.006860733
id: 0
t: 259
xxx after update is x: -54.7998199463
y: 2.79762983322
theta: 3.04887843132
speed: 13.926325798
id: 0
t: 260
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:261


xxx before update is x: -54.7998199463
y: 2.79762983322
theta: 3.04887843132
speed: 13.926325798
id: 0
t: 260
xxx after update is x: -55.4462013245
y: 2.96287679672
theta: 3.2059237957
speed: 14.0143613815
id: 0
t: 261
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.565835952758789, -86.01457214355469, 4.7305169105529785, 13.78472900390625)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.6






self.maneuver_requested left
RELEASE,0,11.6,(-55.44620132446289, 2.962876796722412, 3.2059237957000732),14,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 11.6
self.communication_details == 0
sending RELEASE,0,11.6,(-55.44620132446289, 2.962876796722412, 3.2059237957000732),14,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:262


xxx before update is x: -55.4462013245
y: 2.96287679672
theta: 3.2059237957
speed: 14.0143613815
id: 0
t: 261
xxx after update is x: -55.8638458252
y: 3.02560639381
theta: 3.19498872757
speed: 13.9641485214
id: 0
t: 262
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:263


xxx before update is x: -55.8638458252
y: 3.02560639381
theta: 3.19498872757
speed: 13.9641485214
id: 0
t: 262
xxx after update is x: -56.5354652405
y: 2.80530667305
theta: 3.01864886284
speed: 13.7222986221
id: 0
t: 263
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -56.5354652405
y: 2.80530667305
theta: 3.01864886284
speed: 13.7222986221
id: 0
t: 263
xxx after update is x: -56.7170944214
y: 3.69315433502
theta: 3.11862826347
speed: 13.6112041473
id: 0
t: 264
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:264




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:265


xxx before update is x: -56.7170944214
y: 3.69315433502
theta: 3.11862826347
speed: 13.6112041473
id: 0
t: 264
xxx after update is x: -58.0905723572
y: 2.8465089798
theta: 3.03495168686
speed: 13.9323368073
id: 0
t: 265
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the upd: 1
t: 263
xxx after update is x: -3.79830121994
y: -87.4645462036
theta: 4.71172475815
speed: 14.0471172333
id: 1
t: 264
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:264




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.79830121994
y: -87.4645462036
theta: 4.71172475815
speed: 14.0471172333
id: 1
t: 264
xxx after update is x: -3.09386348724
y: -88.6128234863
theta: 4.63694000244
speed: 14.0705490112
id: 1
t: 265
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:265




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:266


xxx before update is x: -3.09386348724
y: -88.6128234863
theta: 4.63694000244
speed: 14.0705490112
id: 1
t: 265
xxx after update is x: -3.49948120117
y: -89.2974472046
theta: 4.69413852692
speed: 13.8792581558
id: 1
t: 266
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:267


xxx before update is x: -3.49948120117
y: -89.2974472046
theta: 4.69413852692
speed: 13.8792581558
id: 1
t: 266
xxx after update is x: -3.18554568291
y: -90.0214920044
theta: 4.95407819748
speed: 13.8136491776
id: 1
t: 267
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.18554568291
y: -90.0214920044
theta: 4.95407819748
speed: 13.8136491776
id: 1
t: 267
xxx after update is x: -2.91659784317
y: -90.5368804932
theta: 4.69767951965
speed: 13.9521799088
id: 1
t: 268
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:268




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:269


xxx before update is x: -2.91659784317
y: -90.5368804932
theta: 4.69767951965
speed: 13.9521799088
id: 1
t: 268
xxx after update is x: -3.27867078781
y: -90.9038009644
theta: 4.83127737045
speed: 13.6505327225
id: 1
t: 269
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 11.9555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 11.9555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '11.9111111111', 'Position': ['(-59.520965576171875', ' 2.8588035106658936', ' 3.107424736022949)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,11.9111111111,(-59.520965576171875, 2.8588035106658936, 3.107424736022949),13,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.9555555556






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:270


xxx before update is x: -3.27867078781
y: -90.9038009644
theta: 4.83127737045
speed: 13.6505327225
id: 1
t: 269
xxx after update is x: -3.34547448158
y: -91.773979187
theta: 4.85776996613
speed: 14.1360569
id: 1
t: 270
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiadate function xxx before update is x: -58.0905723572
y: 2.8465089798
theta: 3.03495168686
speed: 13.9323368073
id: 0
t: 265
xxx after update is x: -58.4245796204
y: 3.06978702545
theta: 3.29261493683
speed: 14.043759346
id: 0
t: 266
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:266




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -58.4245796204
y: 3.06978702545
theta: 3.29261493683
speed: 14.043759346
id: 0
t: 266
xxx after update is x: -59.2406044006
y: 2.95069026947
theta: 3.13590526581
speed: 13.8148612976
id: 0
t: 267
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:267




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -59.2406044006
y: 2.95069026947
theta: 3.13590526581
speed: 13.8148612976
id: 0
t: 267
xxx after update is x: -59.5209655762
y: 2.85880351067
theta: 3.10742473602
speed: 13.7350711823
id: 0
t: 268
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:268




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.9111111111






self.maneuver_requested left
RELEASE,0,11.9111111111,(-59.520965576171875, 2.8588035106658936, 3.107424736022949),13,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 11.9111111111
self.communication_details == 0
sending RELEASE,0,11.9111111111,(-59.520965576171875, 2.8588035106658936, 3.107424736022949),13,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
xxx before update is x: -59.5209655762
y: 2.85880351067
theta: 3.10742473602
speed: 13.7350711823
id: 0
t: 268
xxx after update is x: -60.2268333435
y: 2.88750505447
theta: 3.12131643295
speed: 13.5920066833
id: 0
t: 269
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:269


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:270


xxx before update is x: -60.2268333435
y: 2.88750505447
theta: 3.12131643295
speed: 13.5920066833
id: 0
t: 269
xxx after update is x: -60.6915245056
y: 3.15891933441
theta: 3.118714571
speed: 14.0972194672
id: 0
t: 270
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -60.6915245056
y: 3.15891933441
theta: 3.118714571
speed: 14.0972194672
id: 0
t: 270
xxx after update is x: -61.0458946228
y: 3.77124023438
theta: 3.10857081413
speed: 13.7882089615
id: 0
t: 271
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:271




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -61.0458946228
y: 3.77124023438
theta: 3.10857081413
speed: 13.7882089615
id: 0
t: 271
xxx after update is x: -61.9020652771
y: 2.64686083794
theta: 3.04138040543
speed: 13.8361825943
id: 0
t: 272
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:272




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:273


xxx before update is xtir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:271


xxx before update is x: -3.34547448158
y: -91.773979187
theta: 4.85776996613
speed: 14.1360569
id: 1
t: 270
xxx after update is x: -2.99098753929
y: -92.6724624634
theta: 4.6524348259
speed: 13.9397916794
id: 1
t: 271
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:272


xxx before update is x: -2.99098753929
y: -92.6724624634
theta: 4.6524348259
speed: 13.9397916794
id: 1
t: 271
xxx after update is x: -3.22703957558
y: -93.2095794678
theta: 4.70019197464
speed: 13.6253700256
id: 1
t: 272
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:273


xxx before update is x: -3.22703957558
y: -93.2095794678
theta: 4.70019197464
speed: 13.6253700256
id: 1
t: 272
xxx after update is x: -2.75009179115
y: -93.6681365967
theta: 4.64123821259
speed: 13.867767334
id: 1
t: 273
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:274


xxx before update is x: -2.75009179115
y: -93.6681365967
theta: 4.64123821259
speed: 13.867767334
id: 1
t: 273
xxx after update is x: -3.3106033802
y: -93.8608551025
theta: 4.87445545197
speed: 13.8914194107
id: 1
t: 274
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (-63.28288650512695, 3.7700533866882324, 3.358339309692383, 13.7815580368042)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:275


xxx before update is x: -3.3106033802
y: -93.8608551025
theta: 4.87445545197
speed: 13.8914194107
id: 1
t: 274
xxx after update is x: -3.26024699211
y: -94.6334533691
theta: 4.53268861771
speed: 13.9977550507
id: 1
t: 275
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:276


xxx before update is x: -3.26024699211
y: -94.6334533691
theta: 4.53268861771
speed: 13.9977550507
id: 1
t: 275
xxx after update is x: -3.00892472267
y: -95.3239135742
theta: 4.75335550308
speed: 13.9903841019
id: 1
t: 276
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:277


xxx before update is x: -3.00892472267
y: -95.3239135742
theta: 4.75335550308
speed: 13.9903841019
id: 1
t: 276
xxx after update is x: -3.29740786552
y: -96.4831695557
theta: 4.70710659027
speed: 13.9185743332
id: 1
t: 277
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 12.3111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 12.3111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.comm: -61.9020652771
y: 2.64686083794
theta: 3.04138040543
speed: 13.8361825943
id: 0
t: 272
xxx after update is x: -62.5522537231
y: 2.72709989548
theta: 3.07938957214
speed: 13.7382459641
id: 0
t: 273
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -62.5522537231
y: 2.72709989548
theta: 3.07938957214
speed: 13.7382459641
id: 0
t: 273
xxx after update is x: -63.2828865051
y: 3.77005338669
theta: 3.35833930969
speed: 13.7815580368
id: 0
t: 274
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:274


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.310603380203247, -93.86085510253906, 4.874455451965332, 13.891419410705566)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:275


xxx before update is x: -63.2828865051
y: 3.77005338669
theta: 3.35833930969
speed: 13.7815580368
id: 0
t: 274
xxx after update is x: -64.4672927856
y: 3.36164283752
theta: 3.10635304451
speed: 13.4595384598
id: 0
t: 275
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:276


xxx before update is x: -64.4672927856
y: 3.36164283752
theta: 3.10635304451
speed: 13.4595384598
id: 0
t: 275
xxx after update is x: -64.9859924316
y: 2.47154998779
theta: 3.08786559105
speed: 13.9415969849
id: 0
t: 276
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:277


xxx before update is x: -64.9859924316
y: 2.47154998779
theta: 3.08786559105
speed: 13.9415969849
id: 0
t: 276
xxx after update is x: -65.5835037231
y: 3.34234929085
theta: 3.14192390442
speed: 13.9394330978
id: 0
t: 277
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.3111111111






self.maneuver_requested left
RELEASE,0,12.3111111111,(-65.58350372314453, 3.3423492908477783, 3.1419239044189453),13,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 12.3111111111
self.communication_details == 0
sending RELEASE,0,12.3111111111,(-65.58350372314453, 3.3423492908477783, 3.1419239044189453),13,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:278


xxx before update is x: -65.5835037231
y: 3.34234929085
theta: 3.14192390442
speed: 13.9394330978
id: 0
t: 277
xxx after update is x: -65.9815139771
y: 3.72129011154
theta: 3.11281871796
speed: 13.9043197632
id: 0
t: 278
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.542714834213257, -96.35167694091797, 4.518177509307861, 14.064074516296387)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:279


xxx before update is x: -6unication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '12.3111111111', 'Position': ['(-65.58350372314453', ' 3.3423492908477783', ' 3.1419239044189453)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,12.3111111111,(-65.58350372314453, 3.3423492908477783, 3.1419239044189453),13,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:278


xxx before update is x: -3.29740786552
y: -96.4831695557
theta: 4.70710659027
speed: 13.9185743332
id: 1
t: 277
xxx after update is x: -2.54271483421
y: -96.3516769409
theta: 4.51817750931
speed: 14.0640745163
id: 1
t: 278
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.3555555556






self.maneuver_requested None
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48479999999999795]
222 self.state_dicts[msg.id][msg.t] is (-65.98151397705078, 3.721290111541748, 3.112818717956543, 13.904319763183594)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:279


xxx before update is x: -2.54271483421
y: -96.3516769409
theta: 4.51817750931
speed: 14.0640745163
id: 1
t: 278
xxx after update is x: -2.71479439735
y: -96.803527832
theta: 4.67882013321
speed: 14.0077581406
id: 1
t: 279
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:280


xxx before update is x: -2.71479439735
y: -96.803527832
theta: 4.67882013321
speed: 14.0077581406
id: 1
t: 279
xxx after update is x: -2.75035881996
y: -97.6948242188
theta: 4.66436624527
speed: 13.6979045868
id: 1
t: 280
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:281


xxx before update is x: -2.75035881996
y: -97.6948242188
theta: 4.66436624527
speed: 13.6979045868
id: 1
t: 280
xxx after update is x: -3.35441064835
y: -98.5315093994
theta: 4.82370710373
speed: 13.8412399292
id: 1
t: 281
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:282


xxx before update is x: -3.35441064835
y: -98.5315093994
theta: 4.82370710373
speed: 13.8412399292
id: 1
t: 281
xxx after update is x: -3.39647817612
y: -98.88230896
theta: 4.6872792244
speed: 13.6806125641
id: 1
t: 282
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (-68.35343170166016, 3.33251690864563, 3.3519716262817383, 13.801118850708008)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:283


xxx before update is x: -3.39647817612
y: -98.88230896
theta: 4.6872792245.9815139771
y: 3.72129011154
theta: 3.11281871796
speed: 13.9043197632
id: 0
t: 278
xxx after update is x: -66.4447021484
y: 3.22942066193
theta: 3.15576314926
speed: 13.6025362015
id: 0
t: 279
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:280


xxx before update is x: -66.4447021484
y: 3.22942066193
theta: 3.15576314926
speed: 13.6025362015
id: 0
t: 279
xxx after update is x: -67.3038024902
y: 3.50001502037
theta: 3.15005064011
speed: 13.8561468124
id: 0
t: 280
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:281


xxx before update is x: -67.3038024902
y: 3.50001502037
theta: 3.15005064011
speed: 13.8561468124
id: 0
t: 280
xxx after update is x: -67.4952545166
y: 3.31462693214
theta: 2.91740775108
speed: 13.7212667465
id: 0
t: 281
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:282


xxx before update is x: -67.4952545166
y: 3.31462693214
theta: 2.91740775108
speed: 13.7212667465
id: 0
t: 281
xxx after update is x: -68.3534317017
y: 3.33251690865
theta: 3.35197162628
speed: 13.8011188507
id: 0
t: 282
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3964781761169434, -98.88230895996094, 4.687279224395752, 13.680612564086914)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:283


xxx before update is x: -68.3534317017
y: 3.33251690865
theta: 3.35197162628
speed: 13.8011188507
id: 0
t: 282
xxx after update is x: -68.2512130737
y: 2.72528719902
theta: 3.19739699364
speed: 14.1898956299
id: 0
t: 283
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:284


xxx before update is x: -68.2512130737
y: 2.72528719902
theta: 3.19739699364
speed: 14.1898956299
id: 0
t: 283
xxx after update is x: -69.5599212646
y: 3.22458386421
theta: 3.33571505547
speed: 14.0579519272
id: 0
t: 284
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:285


xxx before update is x: -69.5599212646
y: 3.22458386421
theta: 3.33571505547
speed: 14.0579519272
id: 0
t: 284
xxx after update is x: -69.8330993652
y: 3.22409462929
theta: 3.10066461563
speed: 14.071559906
id: 0
t: 285
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.6666666667






self.maneuver_requested left
RELEASE,0,12.6666666667,(-69.83309936523438, 3.2240946292877197, 3.1006646156311035),14,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 12.6666666667
self.communication_details == 0
sending RELEASE,0,12.6666666667,(-69.83309936523438, 3.2240946292877197, 3.1006646156311035),14,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the upda4
speed: 13.6806125641
id: 1
t: 282
xxx after update is x: -3.45363426208
y: -99.6135787964
theta: 4.8204741478
speed: 13.7799882889
id: 1
t: 283
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:284


xxx before update is x: -3.45363426208
y: -99.6135787964
theta: 4.8204741478
speed: 13.7799882889
id: 1
t: 283
xxx after update is x: -3.47233605385
y: -100.287666321
theta: 4.73080301285
speed: 13.9777240753
id: 1
t: 284
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:285


xxx before update is x: -3.47233605385
y: -100.287666321
theta: 4.73080301285
speed: 13.9777240753
id: 1
t: 284
xxx after update is x: -3.2234852314
y: -100.635925293
theta: 4.92031431198
speed: 13.3735198975
id: 1
t: 285
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 12.6666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 12.6666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '12.6666666667', 'Position': ['(-69.83309936523438', ' 3.2240946292877197', ' 3.1006646156311035)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,12.6666666667,(-69.83309936523438, 3.2240946292877197, 3.1006646156311035),14,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.6666666667






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:286


xxx before update is x: -3.2234852314
y: -100.635925293
theta: 4.92031431198
speed: 13.3735198975
id: 1
t: 285
xxx after update is x: -3.36525607109
y: -101.733718872
theta: 4.81864786148
speed: 13.9746046066
id: 1
t: 286
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.36525607109
y: -101.733718872
theta: 4.81864786148
speed: 13.9746046066
id: 1
t: 286
xxx after update is x: -3.27015852928
y: -101.891578674
theta: 4.61143112183
speed: 14.0376605988
id: 1
t: 287
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:287


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-71.3084716796875, 3.1766891479492188, 3.0721566677093506, 13.8158540725708)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:288


xxx before update is x: -3.27015852928
y: -101.891578674
theta: 4.61143112183
speed: 14.0376605988
id: 1
t: 287
xxx after update is x: -2.80579996109
y: -102.636886597
theta: 4.58802604675
speed: 13.8840017319
id: 1
t: 288
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave thete function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -69.8330993652
y: 3.22409462929
theta: 3.10066461563
speed: 14.071559906
id: 0
t: 285
xxx after update is x: -70.8929367065
y: 2.92819190025
theta: 3.17626810074
speed: 13.6303091049
id: 0
t: 286
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:286




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:287


xxx before update is x: -70.8929367065
y: 2.92819190025
theta: 3.17626810074
speed: 13.6303091049
id: 0
t: 286
xxx after update is x: -71.3084716797
y: 3.17668914795
theta: 3.07215666771
speed: 13.8158540726
id: 0
t: 287
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:288


xxx before update is x: -71.3084716797
y: 3.17668914795
theta: 3.07215666771
speed: 13.8158540726
id: 0
t: 287
xxx after update is x: -71.6430740356
y: 3.5725646019
theta: 3.29019641876
speed: 14.0153951645
id: 0
t: 288
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:289


xxx before update is x: -71.6430740356
y: 3.5725646019
theta: 3.29019641876
speed: 14.0153951645
id: 0
t: 288
xxx after update is x: -72.8852996826
y: 3.26543593407
theta: 3.13346982002
speed: 13.9312143326
id: 0
t: 289
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-4.173576354980469, -103.42032623291016, 4.760939121246338, 13.64499568939209)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -72.8852996826
y: 3.26543593407
theta: 3.13346982002
speed: 13.9312143326
id: 0
t: 289
xxx after update is x: -73.0795440674
y: 3.00240731239
theta: 3.16352319717
speed: 13.5649986267
id: 0
t: 290
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:290




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -73.0795440674
y: 3.00240731239
theta: 3.16352319717
speed: 13.5649986267
id: 0
t: 290
xxx after update is x: -73.6725692749
y: 3.1430003643
theta: 3.34417104721
speed: 14.221411705
id: 0
t: 291
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:291




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:292


xxx before update is x: -73.6725692749
y: 3.1430003643
theta: 3.34417104721
speed: 14.221411705
id: 0
t: 291
xxx after update is x: -74.4818725586
y: 3.46780371666
theta: 2.97457265854
speed: 13.9544649124
id: 0
t: 292
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:293


xxx before update is x: -74.4818725586
y: 3.46780371666
theta: 2.97457265854
speed: 13.9544649124
id: 0
t: 292
xxx after update is x: -75.2149734497
y: 2.93598222733
theta: 3.20940756798
speed: 13.6489839554
id: 0
t: 293
maneuver_negotiatir.py f update function xxx before update is x: -2.80579996109
y: -102.636886597
theta: 4.58802604675
speed: 13.8840017319
id: 1
t: 288
xxx after update is x: -4.17357635498
y: -103.420326233
theta: 4.76093912125
speed: 13.6449956894
id: 1
t: 289
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:289




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:290


xxx before update is x: -4.17357635498
y: -103.420326233
theta: 4.76093912125
speed: 13.6449956894
id: 1
t: 289
xxx after update is x: -3.41933345795
y: -103.589759827
theta: 4.81193494797
speed: 13.9272174835
id: 1
t: 290
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:291


xxx before update is x: -3.41933345795
y: -103.589759827
theta: 4.81193494797
speed: 13.9272174835
id: 1
t: 290
xxx after update is x: -2.87680530548
y: -104.85861969
theta: 4.64970064163
speed: 13.9328804016
id: 1
t: 291
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.87680530548
y: -104.85861969
theta: 4.64970064163
speed: 13.9328804016
id: 1
t: 291
xxx after update is x: -2.738915205
y: -105.444458008
theta: 4.74534606934
speed: 13.8603219986
id: 1
t: 292
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:292


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:293


xxx before update is x: -2.738915205
y: -105.444458008
theta: 4.74534606934
speed: 13.8603219986
id: 1
t: 292
xxx after update is x: -3.32871365547
y: -105.785667419
theta: 4.66147518158
speed: 13.5894861221
id: 1
t: 293
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 13.0222222222




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.0222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '13.0222222222', 'Position': ['(-75.21497344970703', ' 2.9359822273254395', ' 3.2094075679779053)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,13.0222222222,(-75.21497344970703, 2.9359822273254395, 3.2094075679779053),13,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5167999999999984]
222 self.state_dicts[msg.id][msg.t] is (-75.21497344970703, 2.9359822273254395, 3.2094075679779053, 13.6489839553833)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.0222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:294


xxx before update is x: -3.32871365547
y: -105.785667419
theta: 4.66147518158
speed: 13.5894861221
id: 1
t: 293
xxx after update is x: -3.28716945648
y: -106.911224365
theta: 4.59229373932
speed: 13.722615242
id: 1
t: 294
maneuver_negotiatir.py finish the update agent state from rinish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.0222222222






self.maneuver_requested left
RELEASE,0,13.0222222222,(-75.21497344970703, 2.9359822273254395, 3.2094075679779053),13,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 13.0222222222
self.communication_details == 0
sending RELEASE,0,13.0222222222,(-75.21497344970703, 2.9359822273254395, 3.2094075679779053),13,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:294


xxx before update is x: -75.2149734497
y: 2.93598222733
theta: 3.20940756798
speed: 13.6489839554
id: 0
t: 293
xxx after update is x: -75.630569458
y: 3.10720467567
theta: 3.19527292252
speed: 14.2481050491
id: 0
t: 294
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:295


xxx before update is x: -75.630569458
y: 3.10720467567
theta: 3.19527292252
speed: 14.2481050491
id: 0
t: 294
xxx after update is x: -75.8543395996
y: 3.04020023346
theta: 3.05457925797
speed: 14.1406030655
id: 0
t: 295
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:296


xxx before update is x: -75.8543395996
y: 3.04020023346
theta: 3.05457925797
speed: 14.1406030655
id: 0
t: 295
xxx after update is x: -76.4749069214
y: 3.40915036201
theta: 3.20778632164
speed: 13.9106626511
id: 0
t: 296
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:297


xxx before update is x: -76.4749069214
y: 3.40915036201
theta: 3.20778632164
speed: 13.9106626511
id: 0
t: 296
xxx after update is x: -77.8335647583
y: 3.43495082855
theta: 3.18371152878
speed: 13.8803825378
id: 0
t: 297
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:298


xxx before update is x: -77.8335647583
y: 3.43495082855
theta: 3.18371152878
speed: 13.8803825378
id: 0
t: 297
xxx after update is x: -78.2113113403
y: 3.57760047913
theta: 3.11973381042
speed: 13.8566656113
id: 0
t: 298
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5868561267852783, -109.36346435546875, 4.8506269454956055, 13.751872062683105)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -78.2113113403
y: 3.57760047913
theta: 3.11973381042
speed: 13.8566656113
id: 0
t: 298
xxx after update is x: -78.9220275879
y: 3.45498347282
theta: 2.99918985367
speed: 13.7777738571
id: 0
t: 299
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:299




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:300


xxx before update is x: -78.9220275879
y: os funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:295


xxx before update is x: -3.28716945648
y: -106.911224365
theta: 4.59229373932
speed: 13.722615242
id: 1
t: 294
xxx after update is x: -3.33952283859
y: -107.329063416
theta: 4.70794296265
speed: 14.0778465271
id: 1
t: 295
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:296


xxx before update is x: -3.33952283859
y: -107.329063416
theta: 4.70794296265
speed: 14.0778465271
id: 1
t: 295
xxx after update is x: -3.80617690086
y: -107.965835571
theta: 4.6998257637
speed: 13.5289497375
id: 1
t: 296
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:297


xxx before update is x: -3.80617690086
y: -107.965835571
theta: 4.6998257637
speed: 13.5289497375
id: 1
t: 296
xxx after update is x: -2.98287034035
y: -108.60308075
theta: 4.76112699509
speed: 14.1541395187
id: 1
t: 297
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:298


xxx before update is x: -2.98287034035
y: -108.60308075
theta: 4.76112699509
speed: 14.1541395187
id: 1
t: 297
xxx after update is x: -3.58685612679
y: -109.363464355
theta: 4.8506269455
speed: 13.7518720627
id: 1
t: 298
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:299


xxx before update is x: -3.58685612679
y: -109.363464355
theta: 4.8506269455
speed: 13.7518720627
id: 1
t: 298
xxx after update is x: -3.62629961967
y: -109.451934814
theta: 4.84869861603
speed: 13.3900241852
id: 1
t: 299
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:300


xxx before update is x: -3.62629961967
y: -109.451934814
theta: 4.84869861603
speed: 13.3900241852
id: 1
t: 299
xxx after update is x: -3.62473082542
y: -110.178794861
theta: 4.71629858017
speed: 14.0204401016
id: 1
t: 300
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '13.3333333333', 'Position': ['(-79.37487030029297', ' 3.258657932281494', ' 3.114645004272461)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,13.3333333333,(-79.37487030029297, 3.258657932281494, 3.114645004272461),14,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:301


xxx before update is x: -3.62473082542
y: -110.178794861
theta: 4.71629858017
speed: 14.0204401016
id: 1
t: 300
xxx after update is x: -3.19990968704
y: -110.704238892
3.45498347282
theta: 2.99918985367
speed: 13.7777738571
id: 0
t: 299
xxx after update is x: -79.3748703003
y: 3.25865793228
theta: 3.11464500427
speed: 14.1497793198
id: 0
t: 300
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested left
RELEASE,0,13.3333333333,(-79.37487030029297, 3.258657932281494, 3.114645004272461),14,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 13.3333333333
self.communication_details == 0
sending RELEASE,0,13.3333333333,(-79.37487030029297, 3.258657932281494, 3.114645004272461),14,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:301


xxx before update is x: -79.3748703003
y: 3.25865793228
theta: 3.11464500427
speed: 14.1497793198
id: 0
t: 300
xxx after update is x: -80.2812728882
y: 2.96093463898
theta: 3.04304838181
speed: 13.5107898712
id: 0
t: 301
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:302


xxx before update is x: -80.2812728882
y: 2.96093463898
theta: 3.04304838181
speed: 13.5107898712
id: 0
t: 301
xxx after update is x: -80.6090240479
y: 2.7139081955
theta: 3.23339509964
speed: 13.89270401
id: 0
t: 302
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -80.6090240479
y: 2.7139081955
theta: 3.23339509964
speed: 13.89270401
id: 0
t: 302
xxx after update is x: -81.6031417847
y: 2.91578173637
theta: 3.07678961754
speed: 13.3285312653
id: 0
t: 303
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:303




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:304


xxx before update is x: -81.6031417847
y: 2.91578173637
theta: 3.07678961754
speed: 13.3285312653
id: 0
t: 303
xxx after update is x: -81.5968551636
y: 3.54781794548
theta: 3.34814882278
speed: 13.9410495758
id: 0
t: 304
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.8418526649475098, -113.0193862915039, 4.714817047119141, 13.894397735595703)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:305


xxx before update is x: -81.5968551636
y: 3.54781794548
theta: 3.34814882278
speed: 13.9410495758
id: 0
t: 304
xxx after update is x: -82.3534927368
y: 3.05335450172
theta: 3.15007829666
speed: 14.073091507
id: 0
t: 305
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:306


xxx before update is x: -82.3534927368
y: 3.05335450172
theta: 3.15007829666
speed: 14.073091507
id: 0
t: 305
xxx after update is x: -82.6628799438
y: 3.24244213104
theta: 3.12630987167
speed: 13.6729984283
id: 0
t: 306
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the stheta: 4.73807764053
speed: 13.9336118698
id: 1
t: 301
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5135999999999983]
222 self.state_dicts[msg.id][msg.t] is (-80.2812728881836, 2.960934638977051, 3.04304838180542, 13.51078987121582)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:302


xxx before update is x: -3.19990968704
y: -110.704238892
theta: 4.73807764053
speed: 13.9336118698
id: 1
t: 301
xxx after update is x: -3.34450030327
y: -111.421272278
theta: 4.75219774246
speed: 13.6209106445
id: 1
t: 302
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:303


xxx before update is x: -3.34450030327
y: -111.421272278
theta: 4.75219774246
speed: 13.6209106445
id: 1
t: 302
xxx after update is x: -3.1781373024
y: -111.348579407
theta: 4.71413326263
speed: 14.1887559891
id: 1
t: 303
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:304


xxx before update is x: -3.1781373024
y: -111.348579407
theta: 4.71413326263
speed: 14.1887559891
id: 1
t: 303
xxx after update is x: -3.84185266495
y: -113.019386292
theta: 4.71481704712
speed: 13.8943977356
id: 1
t: 304
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:305


xxx before update is x: -3.84185266495
y: -113.019386292
theta: 4.71481704712
speed: 13.8943977356
id: 1
t: 304
xxx after update is x: -3.75633239746
y: -112.878936768
theta: 4.59212779999
speed: 13.9599885941
id: 1
t: 305
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5103999999999982]
222 self.state_dicts[msg.id][msg.t] is (-82.3534927368164, 3.053354501724243, 3.150078296661377, 14.073091506958008)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:306


xxx before update is x: -3.75633239746
y: -112.878936768
theta: 4.59212779999
speed: 13.9599885941
id: 1
t: 305
xxx after update is x: -3.56410574913
y: -114.189743042
theta: 4.65345668793
speed: 13.6752223969
id: 1
t: 306
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:307


xxx before update is x: -3.56410574913
y: -114.189743042
theta: 4.65345668793
speed: 13.6752223969
id: 1
t: 306
xxx after update is x: -3.00149059296
y: -114.263298035
theta: 4.77087211609
speed: 13.9984407425
id: 1
t: 307
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n timeim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:307


xxx before update is x: -82.6628799438
y: 3.24244213104
theta: 3.12630987167
speed: 13.6729984283
id: 0
t: 306
xxx after update is x: -82.9187011719
y: 3.79936265945
theta: 3.0702290535
speed: 13.8828277588
id: 0
t: 307
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:308


xxx before update is x: -82.9187011719
y: 3.79936265945
theta: 3.0702290535
speed: 13.8828277588
id: 0
t: 307
xxx after update is x: -83.8139801025
y: 2.64996194839
theta: 3.05012178421
speed: 13.5972499847
id: 0
t: 308
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.8039724826812744, -115.08160400390625, 4.766896724700928, 14.014180183410645)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.6888888889






self.maneuver_requested left
RELEASE,0,13.6888888889,(-83.81398010253906, 2.6499619483947754, 3.050121784210205),13,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 13.6888888889
self.communication_details == 0
sending RELEASE,0,13.6888888889,(-83.81398010253906, 2.6499619483947754, 3.050121784210205),13,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -83.8139801025
y: 2.64996194839
theta: 3.05012178421
speed: 13.5972499847
id: 0
t: 308
xxx after update is x: -85.3932647705
y: 3.34616136551
theta: 3.26699256897
speed: 14.2013111115
id: 0
t: 309
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:309




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:310


xxx before update is x: -85.3932647705
y: 3.34616136551
theta: 3.26699256897
speed: 14.2013111115
id: 0
t: 309
xxx after update is x: -85.6974258423
y: 2.95191860199
theta: 3.14350986481
speed: 14.0805416107
id: 0
t: 310
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:311


xxx before update is x: -85.6974258423
y: 2.95191860199
theta: 3.14350986481
speed: 14.0805416107
id: 0
t: 310
xxx after update is x: -86.2945785522
y: 2.81410121918
theta: 3.01440215111
speed: 13.8642587662
id: 0
t: 311
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:312


xxx before update is x: -86.2945785522
y: 2.81410121918
theta: 3.01440215111
speed: 13.8642587662
id: 0
t: 311
xxx after update is x: -86.4044570923
y: 3.19453859329
theta: 3.17495512962
speed: 13.5952548981
id: 0
t: 312
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-4.0956807136535645, -117.49339294433594, 4.550929069519043, 13.593363761901855)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.ps spin:308

xxx before update is x: -3.00149059296
y: -114.263298035
theta: 4.77087211609
speed: 13.9984407425
id: 1
t: 307
xxx after update is x: -2.80397248268
y: -115.081604004
theta: 4.7668967247
speed: 14.0141801834
id: 1
t: 308
maneuver_negotiatir.py finish the update agent state from ros funtion

Received -->>: 
current clock is 13.6888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.6888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '13.6888888889', 'Position': ['(-83.81398010253906', ' 2.6499619483947754', ' 3.050121784210205)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,13.6888888889,(-83.81398010253906, 2.6499619483947754, 3.050121784210205),13,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:309


xxx before update is x: -2.80397248268
y: -115.081604004
theta: 4.7668967247
speed: 14.0141801834
id: 1
t: 308
xxx after update is x: -3.72287034988
y: -115.784423828
theta: 4.54901266098
speed: 13.5391016006
id: 1
t: 309
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-85.39326477050781, 3.346161365509033, 3.2669925689697266, 14.201311111450195)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.7333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:310


xxx before update is x: -3.72287034988
y: -115.784423828
theta: 4.54901266098
speed: 13.5391016006
id: 1
t: 309
xxx after update is x: -3.20337080956
y: -116.14756012
theta: 4.68866348267
speed: 13.8885383606
id: 1
t: 310
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.20337080956
y: -116.14756012
theta: 4.68866348267
speed: 13.8885383606
id: 1
t: 310
xxx after update is x: -3.29764389992
y: -116.655532837
theta: 4.75237321854
speed: 13.7410364151
id: 1
t: 311
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:311




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:312


xxx before update is x: -3.29764389992
y: -116.655532837
theta: 4.75237321854
speed: 13.7410364151
id: 1
t: 311
xxx after update is x: -4.09568071365
y: -117.493392944
theta: 4.55092906952
speed: 13.5933637619
id: 1
t: 312
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-86.40445709228516, 3.1945385932922363, 3.174955129623413, 13.595254898071289)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finisy update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:313


xxx before update is x: -86.4044570923
y: 3.19453859329
theta: 3.17495512962
speed: 13.5952548981
id: 0
t: 312
xxx after update is x: -87.4324188232
y: 2.97350692749
theta: 3.04202747345
speed: 13.7229146957
id: 0
t: 313
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -87.4324188232
y: 2.97350692749
theta: 3.04202747345
speed: 13.7229146957
id: 0
t: 313
xxx after update is x: -88.1279220581
y: 3.69533967972
theta: 3.19058251381
speed: 13.760175705
id: 0
t: 314
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:314




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -88.1279220581
y: 3.69533967972
theta: 3.19058251381
speed: 13.760175705
id: 0
t: 314
xxx after update is x: -88.7877883911
y: 3.52610468864
theta: 3.0594227314
speed: 13.701385498
id: 0
t: 315
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:315




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:316


xxx before update is x: -88.7877883911
y: 3.52610468864
theta: 3.0594227314
speed: 13.701385498
id: 0
t: 315
xxx after update is x: -89.7759552002
y: 3.07206845284
theta: 3.18045687675
speed: 14.1604890823
id: 0
t: 316
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested left
RELEASE,0,14.0444444444,(-89.77595520019531, 3.072068452835083, 3.1804568767547607),14,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 14.0444444444
self.communication_details == 0
sending RELEASE,0,14.0444444444,(-89.77595520019531, 3.072068452835083, 3.1804568767547607),14,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:317


xxx before update is x: -89.7759552002
y: 3.07206845284
theta: 3.18045687675
speed: 14.1604890823
id: 0
t: 316
xxx after update is x: -90.1011123657
y: 2.68668866158
theta: 3.10616564751
speed: 13.8400821686
id: 0
t: 317
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:318


xxx before update is x: -90.1011123657
y: 2.68668866158
theta: 3.10616564751
speed: 13.8400821686
id: 0
t: 317
xxx after update is x: -91.1228179932
y: 2.6684076786
theta: 3.24306511879
speed: 13.5306491852
id: 0
t: 318
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:319


xxx before update is x: -91.1228179932
y: 2.6684076786
theta: 3.24306511879
speed: 13.5306491852
id: 0
t: 318
xxx after update is x: -91.6067581177
y: 2.96441864967
theta: 3.27912020683
speed: 13.8460006714
id: 0
t: 319
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.mah the n times spin:313

xxx before update is x: -4.09568071365
y: -117.493392944
theta: 4.55092906952
speed: 13.5933637619
id: 1
t: 312
xxx after update is x: -3.19974994659
y: -117.665077209
theta: 4.8151345253
speed: 14.0636434555
id: 1
t: 313
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:314


xxx before update is x: -3.19974994659
y: -117.665077209
theta: 4.8151345253
speed: 14.0636434555
id: 1
t: 313
xxx after update is x: -3.33734226227
y: -118.891479492
theta: 4.77649402618
speed: 13.720287323
id: 1
t: 314
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:315


xxx before update is x: -3.33734226227
y: -118.891479492
theta: 4.77649402618
speed: 13.720287323
id: 1
t: 314
xxx after update is x: -2.85836195946
y: -119.345275879
theta: 4.48785829544
speed: 14.0811796188
id: 1
t: 315
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:316


xxx before update is x: -2.85836195946
y: -119.345275879
theta: 4.48785829544
speed: 14.0811796188
id: 1
t: 315
xxx after update is x: -3.22516012192
y: -120.104942322
theta: 4.72718095779
speed: 13.8056297302
id: 1
t: 316
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 14.0444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 14.0444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '14.0444444444', 'Position': ['(-89.77595520019531', ' 3.072068452835083', ' 3.1804568767547607)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,14.0444444444,(-89.77595520019531, 3.072068452835083, 3.1804568767547607),14,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:317


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:318


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.44959999999999817]
222 self.state_dicts[msg.id][msg.t] is (-91.12281799316406, 2.668407678604126, 3.243065118789673, 13.530649185180664)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:319


222 self.state_dicts[msg.id][msg.t] is (-91.60675811767578, 2.964418649673462, 3.2791202068328857, 13.846000671386719)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:320


222 self.state_dicts[msg.id][msg.t] is (-91.4054183959961, 3.2772574424743652, 3.1400351524353027, 14.03850269317627)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:321


222 self.state_dicts[msg.id][msg.t] is (-92.18143463134766, 3.2449100017547607, 3.043654680252075, 13.887868881225586)


going to the update function
sim.py in the sim.py update funcn_init:
leave the update function 
in spin function, finish the n times spin:320


xxx before update is x: -91.6067581177
y: 2.96441864967
theta: 3.27912020683
speed: 13.8460006714
id: 0
t: 319
xxx after update is x: -91.405418396
y: 3.27725744247
theta: 3.14003515244
speed: 14.0385026932
id: 0
t: 320
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -91.405418396
y: 3.27725744247
theta: 3.14003515244
speed: 14.0385026932
id: 0
t: 320
xxx after update is x: -92.1814346313
y: 3.24491000175
theta: 3.04365468025
speed: 13.8878688812
id: 0
t: 321
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:321




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -92.1814346313
y: 3.24491000175
theta: 3.04365468025
speed: 13.8878688812
id: 0
t: 321
xxx after update is x: -92.770072937
y: 3.07870984077
theta: 3.01143312454
speed: 13.9648284912
id: 0
t: 322
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:322




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -92.770072937
y: 3.07870984077
theta: 3.01143312454
speed: 13.9648284912
id: 0
t: 322
xxx after update is x: -93.2673110962
y: 3.01967334747
theta: 3.16652441025
speed: 14.3743696213
id: 0
t: 323
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:323




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -93.2673110962
y: 3.01967334747
theta: 3.16652441025
speed: 14.3743696213
id: 0
t: 323
xxx after update is x: -94.2037887573
y: 3.6448559761
theta: 3.17218995094
speed: 13.6640300751
id: 0
t: 324
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.4
leave the update function 





self.maneuver_requested left
RELEASE,0,14.4,(-94.20378875732422, 3.6448559761047363, 3.172189950942993),13,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 14.4
self.communication_details == 0
sending RELEASE,0,14.4,(-94.20378875732422, 3.6448559761047363, 3.172189950942993),13,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

in spin function, finish the n times spin:324


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:325


xxx before update is x: -94.2037887573
y: 3.6448559761
theta: 3.17218995094
speed: 13.6640300751
id: 0
t: 324
xxx after update is x: -94.5191574097
y: 3.4485001564
theta: 2.97915959358
speed: 13.7580747604
id: 0
t: 325
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -94.5191574097
y: 3.4485001564
theta: 2.97915959358
speed: 13.7580747604
id: 0
t: 325
xxx after update is x: -95.2256851196
y: 3.82414031029
theta: 3.19535923004
speed: 13.7061281204
id: 0
t: 326
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:326




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -95.2256851196
y: 3.82414031029
theta: 3.19535923004
speed: 13.7061281204
id: 0
t: 326
xxx ation 
leave the update function 
in spin function, finish the n times spin:322


222 self.state_dicts[msg.id][msg.t] is (-92.77007293701172, 3.078709840774536, 3.0114331245422363, 13.964828491210938)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:323


222 self.state_dicts[msg.id][msg.t] is (-93.2673110961914, 3.0196733474731445, 3.1665244102478027, 14.374369621276855)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:324


222 self.state_dicts[msg.id][msg.t] is (-94.20378875732422, 3.6448559761047363, 3.172189950942993, 13.664030075073242)
Received -->>: 
current clock is 14.0444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 14.0444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '14.4', 'Position': ['(-94.20378875732422', ' 3.6448559761047363', ' 3.172189950942993)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,14.4,(-94.20378875732422, 3.6448559761047363, 3.172189950942993),13,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:325


222 self.state_dicts[msg.id][msg.t] is (-94.51915740966797, 3.448500156402588, 2.9791595935821533, 13.758074760437012)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:326


222 self.state_dicts[msg.id][msg.t] is (-95.2256851196289, 3.8241403102874756, 3.195359230041504, 13.706128120422363)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:327


222 self.state_dicts[msg.id][msg.t] is (-96.27680969238281, 2.840804100036621, 3.044664144515991, 13.859006881713867)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:328


222 self.state_dicts[msg.id][msg.t] is (-97.05427551269531, 2.767577648162842, 3.124911069869995, 13.657730102539062)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:329


222 self.state_dicts[msg.id][msg.t] is (-96.62779235839844, 3.48382830619812, 3.151972770690918, 13.300517082214355)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:330


222 self.state_dicts[msg.id][msg.t] is (-98.11679077148438, 3.3710858821868896, 3.24172043800354, 13.100411415100098)
222 self.state_dicts[msg.id][msg.t] is (-97.84088134765625, 3.42531418800354, 3.2564961910247803, 12.66247272491455)
Received -->>: 
current clock is 14.0444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 14.0444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '12', 'Sender': '0', 'TagID': '1', 'Time': '14.7111111111', 'Position': ['(-97.84088134765625', ' 3.42531418800354', ' 3.2564961910247803)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,14.7111111111,(-97.84088134765625, 3.42531418800354, 3.2564961910247803),12,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
Received -->>: 
current clock is 14.0444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 14.0444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '12', 'Sender': '0', 'TagID': '1', 'Time': '14.7111111111', 'Position': ['(-97.84088134765625', ' 3.42531418800354', ' 3.2564961910247803)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,14.7111111111,(-97.84088134765625, 3.42531418800354, 3.2564961910247803),12,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:331


fter update is x: -96.2768096924
y: 2.84080410004
theta: 3.04466414452
speed: 13.8590068817
id: 0
t: 327
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:327




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -96.2768096924
y: 2.84080410004
theta: 3.04466414452
speed: 13.8590068817
id: 0
t: 327
xxx after update is x: -97.0542755127
y: 2.76757764816
theta: 3.12491106987
speed: 13.6577301025
id: 0
t: 328
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:328




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -97.0542755127
y: 2.76757764816
theta: 3.12491106987
speed: 13.6577301025
id: 0
t: 328
xxx after update is x: -96.6277923584
y: 3.4838283062
theta: 3.15197277069
speed: 13.3005170822
id: 0
t: 329
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:329




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -96.6277923584
y: 3.4838283062
theta: 3.15197277069
speed: 13.3005170822
id: 0
t: 329
xxx after update is x: -98.1167907715
y: 3.37108588219
theta: 3.241720438
speed: 13.1004114151
id: 0
t: 330
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:330




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -98.1167907715
y: 3.37108588219
theta: 3.241720438
speed: 13.1004114151
id: 0
t: 330
xxx after update is x: -97.8408813477
y: 3.425314188
theta: 3.25649619102
speed: 12.6624727249
id: 0
t: 331
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:331


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.7111111111






self.maneuver_requested left
RELEASE,0,14.7111111111,(-97.84088134765625, 3.42531418800354, 3.2564961910247803),12,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 14.7111111111
self.communication_details == 0
sending RELEASE,0,14.7111111111,(-97.84088134765625, 3.42531418800354, 3.2564961910247803),12,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.7111111111






self.maneuver_requested left
RELEASE,0,14.7111111111,(-97.84088134765625, 3.42531418800354, 3.2564961910247803),12,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 14.7111111111
self.communication_details == 0
sending RELEASE,0,14.7111111111,(-97.84088134765625, 3.42531418800354, 3.2564961910247803),12,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:332


... logging to /home/lu/.ros/log/804a576c-02ac-11e9-ae37-000c291801fc/roslaunch-ubuntu-32149.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch
[1mstarted roslaunch server http://ubuntu:46149/[0m

SUMMARY
========

PARAMETERS
 * /enable_negotiator: True
 * /file_prefix: 
 * /nr_cars: 2
 * /plot: False
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /save: False

NODES
  /
    car0 (virtual_blinker/sim.py)
    car1 (virtual_blinker/sim.py)
    cloud (virtual_blinker/cloud.py)
    rviz (rviz/rviz)
    visualization (virtual_blinker/visualization.py)

auto-starting new master
[1mprocess[master]: started with pid [32170][0m
[1mROS_MASTER_URI=http://localhost:11311[0m
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch http://localhost:11311
[1msetting /run_id to 804a576c-02ac-11e9-ae37-000c291801fc[0m
[1mprocess[rosout-1]: started with pid [32185][0m
started core service [/rosout]
[1mprocess[visualization-2]: started with pid [32188][0m
[1mprocess[rviz-3]: started with pid [32189][0m
[1mprocess[car0-4]: started with pid [32190][0m
[1mprocess[car1-5]: started with pid [32191][0m
[1mprocess[cloud-6]: started with pid [32192][0m
[cloud-6] killing on exit
[car1-5] killing on exit
[rviz-3] killing on exit
[car0-4] killing on exit
[visualization-2] killing on exit
[rosout-1] killing on exit
[master] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
[1mdone[0m
