sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 1
s is car_state0
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 1.86856389046


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:1


222 self.state_dicts[msg.id][msg.t] is (3.696882486343384, -64.63636779785156, 1.4876807928085327, 14.17326545715332)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7fb8b23e7cf8>
self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7fb8b24060e0>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:2


maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (2.813772678375244, -63.79196548461914, 1.6795133352279663, 13.944318771362305)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:3


maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9001)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:4


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: -3.54557394981
y: 72.0233917236
theta: 4.73188400269
speed: 14.1844186783
id: 1
t: 4
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:5


xxx before update is x: -3.54557394981
y: 72.0233917236
theta: 4.73188400269
speed: 14.1844186783
id: 1
t: 4
xxx after update is x: -3.22217559814
y: 71.541267395
theta: 4.75668430328
speed: 13.9892110825
id: 1
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: -3.22217559814
y: 71.541267395
theta: 4.75668430328
speed: 13.9892110825
id: 1
t: 5
xxx after update is x: -3.00464057922
y: 71.2152938843
theta: 4.80644607544
speed: 14.0673656464
id: 1
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times ssim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 0
s is car_state1
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 1.92198109627
222 self.state_dicts[msg.id][msg.t] is (-3.469379186630249, 74.16547393798828, 4.794933795928955, 13.684020042419434)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:1




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:2


222 self.state_dicts[msg.id][msg.t] is (-3.4909045696258545, 73.36429595947266, 4.716965198516846, 13.967094421386719)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7fc9b5686a70>
self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7fc9b56a58c0>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:3


maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:4


maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9000)
222 self.state_dicts[msg.id][msg.t] is (-3.5455739498138428, 72.02339172363281, 4.731884002685547, 14.184418678283691)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:5




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: 3.07605624199
y: -61.6948661804
theta: 1.50895512104
speed: 13.8543701172
id: 0
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:7


xxx before update is x: 3.07605624199
y: -61.6948661804
theta: 1.50895512104
speed: 13.8543701172
id: 0
t: 6
xxx after update is x: 3.5581433773
y: -60.6056060791
theta: 1.64918327332
speed: 13.9750843048
id: 0
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: 3.5581433773
y: -60.6056060791
theta: 1.64918327332
speed: 13.97508430pin:7

xxx before update is x: -3.00464057922
y: 71.2152938843
theta: 4.80644607544
speed: 14.0673656464
id: 1
t: 6
xxx after update is x: -3.35045099258
y: 70.6286010742
theta: 4.73118448257
speed: 13.9902334213
id: 1
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: -3.35045099258
y: 70.6286010742
theta: 4.73118448257
speed: 13.9902334213
id: 1
t: 7
xxx after update is x: -2.81719660759
y: 70.0554199219
theta: 4.71095466614
speed: 14.3228559494
id: 1
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: -2.81719660759
y: 70.0554199219
theta: 4.71095466614
speed: 14.3228559494
id: 1
t: 8
xxx after update is x: -3.47294807434
y: 69.5856246948
theta: 4.7307972908
speed: 14.0134382248
id: 1
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.4






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: -3.47294807434
y: 69.5856246948
theta: 4.7307972908
speed: 14.0134382248
id: 1
t: 9
xxx after update is x: -3.17134094238
y: 69.0733718872
theta: 4.61497926712
speed: 13.9294471741
id: 1
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.31628393163943697, 0.3175745037907852]
222 self.state_dicts[msg.id][msg.t] is (3.1547420024871826, -59.034912109375, 1.6402949094772339, 13.537595748901367)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: -3.17134094238
y: 69.0733718872
theta: 4.61497926712
speed: 13.9294471741
id: 1
t: 10
xxx after update is x: -3.02093148232
y: 67.9905471802
theta: 4.74221897125
speed: 14.2351636887
id: 1
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: -3.02093148232
y: 67.9905471802
theta: 4.74221897125
speed: 14.2351636887
id: 1
t: 11
xxx after update is x: -2.89099407196
y: 67.3128356934
theta: 4.81014966965
speed: 13.8044404984
id: 1
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.89099407196
y: 67.3128356934
theta: 4.81014966965
speed: 13.8044404984
id: 1
t: 12
xxx after update is x: -3.46840715408
y: 66.8282623291
theta: 4.6288766861
speed: 14.0432519913
id: 1
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:13




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: -3.46840715408
y: 66.8282623291
theta: 4.6288766861
speed: 14.0432519913
id: 1
t: 13
xxx after update is x: -3.30292510986
y: 66.1153030396
theta: 4.85926771164
speed: 13.8616266251
id: 1
t: 14
mane48
id: 0
t: 7
xxx after update is x: 3.60254359245
y: -59.8847579956
theta: 1.57166063786
speed: 13.8071718216
id: 0
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: 3.60254359245
y: -59.8847579956
theta: 1.57166063786
speed: 13.8071718216
id: 0
t: 8
xxx after update is x: 3.27137804031
y: -59.1685562134
theta: 1.65816557407
speed: 14.0118713379
id: 0
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: 3.27137804031
y: -59.1685562134
theta: 1.65816557407
speed: 14.0118713379
id: 0
t: 9
xxx after update is x: 3.15474200249
y: -59.0349121094
theta: 1.64029490948
speed: 13.5375957489
id: 0
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: 3.15474200249
y: -59.0349121094
theta: 1.64029490948
speed: 13.5375957489
id: 0
t: 10
xxx after update is x: 3.94512009621
y: -58.9193077087
theta: 1.47295951843
speed: 14.2124891281
id: 0
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.488888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.3892798258778008, 0.27721450048523155]
222 self.state_dicts[msg.id][msg.t] is (-3.0209314823150635, 67.99054718017578, 4.742218971252441, 14.235163688659668)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: 3.94512009621
y: -58.9193077087
theta: 1.47295951843
speed: 14.2124891281
id: 0
t: 11
xxx after update is x: 3.29505825043
y: -57.0853881836
theta: 1.40192854404
speed: 14.0240688324
id: 0
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.29505825043
y: -57.0853881836
theta: 1.40192854404
speed: 14.0240688324
id: 0
t: 12
xxx after update is x: 3.14255619049
y: -57.0585517883
theta: 1.50760495663
speed: 13.9025745392
id: 0
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:13




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: 3.14255619049
y: -57.0585517883
theta: 1.50760495663
speed: 13.9025745392
id: 0
t: 13
xxx after update is x: 3.12900924683
y: -56.2804489136
theta: 1.66994273663
speed: 14.0016860962
id: 0
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.12900924683
y: -56.2804489136
theta: 1.66994273663
speed: 14.0016860962
id: 0
t: 14
xxx after update is x: 3.60399580002
y: -56.0807266235
theta: 1.43109130859
speed: 13.7566699982
id: 0
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:15




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function uver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.30292510986
y: 66.1153030396
theta: 4.85926771164
speed: 13.8616266251
id: 1
t: 14
xxx after update is x: -2.84860253334
y: 65.644203186
theta: 4.70084524155
speed: 14.0195093155
id: 1
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:15


aaaaaa
aaaaaabbbbb
risk is [0.3242063331949407, 0]
222 self.state_dicts[msg.id][msg.t] is (3.6039958000183105, -56.080726623535156, 1.43109130859375, 13.756669998168945)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: -2.84860253334
y: 65.644203186
theta: 4.70084524155
speed: 14.0195093155
id: 1
t: 15
xxx after update is x: -3.56238865852
y: 65.37940979
theta: 4.86518478394
speed: 14.0188550949
id: 1
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: -3.56238865852
y: 65.37940979
theta: 4.86518478394
speed: 14.0188550949
id: 1
t: 16
xxx after update is x: -2.72446417809
y: 64.6548461914
theta: 4.68889808655
speed: 13.6882953644
id: 1
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.755555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: -2.72446417809
y: 64.6548461914
theta: 4.68889808655
speed: 13.6882953644
id: 1
t: 17
xxx after update is x: -3.17108726501
y: 63.7688865662
theta: 4.76457309723
speed: 13.4213132858
id: 1
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: -3.17108726501
y: 63.7688865662
theta: 4.76457309723
speed: 13.4213132858
id: 1
t: 18
xxx after update is x: -3.10103940964
y: 62.9581413269
theta: 4.69273233414
speed: 13.9972133636
id: 1
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: -3.10103940964
y: 62.9581413269
theta: 4.69273233414
speed: 13.9972133636
id: 1
t: 19
xxx after update is x: -3.43847489357
y: 62.6361999512
theta: 4.68608570099
speed: 13.8727340698
id: 1
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.38219899276479646, 0]
222 self.state_dicts[msg.id][msg.t] is (2.8519043922424316, -52.531890869140625, 1.6783231496810913, 14.020139694213867)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: -3.43847489357
y: 62.6361999512
theta: 4.68608570099
speed: 13.8727340698
id: 1
t: 20
xxx after update
in spin function, finish the n times spin:16


 xxx before update is x: 3.60399580002
y: -56.0807266235
theta: 1.43109130859
speed: 13.7566699982
id: 0
t: 15
xxx after update is x: 2.84927248955
y: -55.519317627
theta: 1.53897583485
speed: 13.5597639084
id: 0
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: 2.84927248955
y: -55.519317627
theta: 1.53897583485
speed: 13.5597639084
id: 0
t: 16
xxx after update is x: 2.88523626328
y: -54.7687454224
theta: 1.56938362122
speed: 13.8072385788
id: 0
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: 2.88523626328
y: -54.7687454224
theta: 1.56938362122
speed: 13.8072385788
id: 0
t: 17
xxx after update is x: 3.10675024986
y: -53.9838066101
theta: 1.38940155506
speed: 13.8705091476
id: 0
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.8






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: 3.10675024986
y: -53.9838066101
theta: 1.38940155506
speed: 13.8705091476
id: 0
t: 18
xxx after update is x: 2.87604284286
y: -53.2277450562
theta: 1.66098809242
speed: 13.9057502747
id: 0
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.4102677913332001, 0.265775273648255]
222 self.state_dicts[msg.id][msg.t] is (-3.101039409637451, 62.9581413269043, 4.692732334136963, 13.997213363647461)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: 2.87604284286
y: -53.2277450562
theta: 1.66098809242
speed: 13.9057502747
id: 0
t: 19
xxx after update is x: 2.85190439224
y: -52.5318908691
theta: 1.67832314968
speed: 14.0201396942
id: 0
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: 2.85190439224
y: -52.5318908691
theta: 1.67832314968
speed: 14.0201396942
id: 0
t: 20
xxx after update is x: 3.48147153854
y: -52.103767395
theta: 1.53201937675
speed: 13.8341693878
id: 0
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: 3.48147153854
y: -52.103767395
theta: 1.53201937675
speed: 13.8341693878
id: 0
t: 21
xxx after update is x: 3.24559617043
y: -52.0989532471
theta: 1.64492666721
speed: 14.1686630249
id: 0
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.24559617043
y: -52.0989532471
theta: 1.64492666721
speed: 14.1686630249
id: 0
t: 22
xxx after update is x: 3.331615448
y: -50.5189857483
theta: 1.59699714184
speed: 13.5512533188
id: 0
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:23



 is x: -3.3824775219
y: 61.3886985779
theta: 4.65439558029
speed: 13.9763717651
id: 1
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: -3.3824775219
y: 61.3886985779
theta: 4.65439558029
speed: 13.9763717651
id: 1
t: 21
xxx after update is x: -2.89691185951
y: 61.541179657
theta: 4.64867019653
speed: 13.7842025757
id: 1
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: -2.89691185951
y: 61.541179657
theta: 4.64867019653
speed: 13.7842025757
id: 1
t: 22
xxx after update is x: -3.52340912819
y: 60.7204246521
theta: 4.84957885742
speed: 14.0073537827
id: 1
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: -3.52340912819
y: 60.7204246521
theta: 4.84957885742
speed: 14.0073537827
id: 1
t: 23
xxx after update is x: -3.41972517967
y: 59.6358413696
theta: 4.69731426239
speed: 13.7937955856
id: 1
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.06666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: -3.41972517967
y: 59.6358413696
theta: 4.69731426239
speed: 13.7937955856
id: 1
t: 24
xxx after update is x: -3.66725111008
y: 59.1594200134
theta: 4.68500757217
speed: 13.9016942978
id: 1
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: -3.66725111008
y: 59.1594200134
theta: 4.68500757217
speed: 13.9016942978
id: 1
t: 25
xxx after update is x: -3.62780952454
y: 59.37449646
theta: 4.79206609726
speed: 13.9580421448
id: 1
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3702016244760806, 0]
222 self.state_dicts[msg.id][msg.t] is (3.173234224319458, -48.63691711425781, 1.5527032613754272, 14.123030662536621)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: -3.62780952454
y: 59.37449646
theta: 4.79206609726
speed: 13.9580421448
id: 1
t: 26
xxx after update is x: -3.20850324631
y: 58.1679115295
theta: 4.53235769272
speed: 13.7824201584
id: 1
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.20850324631
y: 58.1679115295
theta: 4.53235769272
speed: 13.7824201584
id: 1
t: 27
xxx after update is x: -3.22297048569
y: 58.2938270569
theta: 4.4958782196
speed: 13.5216302872
id: 1
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:28




going to the update function
sim.py in the sim.py 
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: 3.331615448
y: -50.5189857483
theta: 1.59699714184
speed: 13.5512533188
id: 0
t: 23
xxx after update is x: 2.89221549034
y: -49.4488983154
theta: 1.6692057848
speed: 13.5814762115
id: 0
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: 2.89221549034
y: -49.4488983154
theta: 1.6692057848
speed: 13.5814762115
id: 0
t: 24
xxx after update is x: 2.85765218735
y: -49.8635406494
theta: 1.52121651173
speed: 13.9795255661
id: 0
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: 2.85765218735
y: -49.8635406494
theta: 1.52121651173
speed: 13.9795255661
id: 0
t: 25
xxx after update is x: 3.17323422432
y: -48.6369171143
theta: 1.55270326138
speed: 14.1230306625
id: 0
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3458159522237415, 0.26926389493262665]
222 self.state_dicts[msg.id][msg.t] is (-3.627809524536133, 59.37449645996094, 4.7920660972595215, 13.95804214477539)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.15555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: 3.17323422432
y: -48.6369171143
theta: 1.55270326138
speed: 14.1230306625
id: 0
t: 26
xxx after update is x: 2.90912938118
y: -48.9028663635
theta: 1.60684704781
speed: 13.7872304916
id: 0
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: 2.90912938118
y: -48.9028663635
theta: 1.60684704781
speed: 13.7872304916
id: 0
t: 27
xxx after update is x: 3.21844100952
y: -47.7350120544
theta: 1.5632263422
speed: 13.7122125626
id: 0
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: 3.21844100952
y: -47.7350120544
theta: 1.5632263422
speed: 13.7122125626
id: 0
t: 28
xxx after update is x: 3.68621754646
y: -47.2139854431
theta: 1.44099795818
speed: 13.6350727081
id: 0
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: 3.68621754646
y: -47.2139854431
theta: 1.44099795818
speed: 13.6350727081
id: 0
t: 29
xxx after update is x: 3.32006597519
y: -45.8424911499
theta: 1.55501639843
speed: 14.1764335632
id: 0
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: 3.32006597519
y: -45.8424911499
theta: 1.55501639843
speed: 14.1764335632
id: 0
t: 30
xxx after update is x: 3.4339108update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: -3.22297048569
y: 58.2938270569
theta: 4.4958782196
speed: 13.5216302872
id: 1
t: 28
xxx after update is x: -3.38856840134
y: 57.558971405
theta: 4.67727470398
speed: 13.9859333038
id: 1
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: -3.38856840134
y: 57.558971405
theta: 4.67727470398
speed: 13.9859333038
id: 1
t: 29
xxx after update is x: -3.46243882179
y: 56.5703887939
theta: 4.4404873848
speed: 13.5171909332
id: 1
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.46243882179
y: 56.5703887939
theta: 4.4404873848
speed: 13.5171909332
id: 1
t: 30
xxx after update is x: -3.17361330986
y: 55.4370613098
theta: 4.77906227112
speed: 13.8545188904
id: 1
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:31




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: -3.17361330986
y: 55.4370613098
theta: 4.77906227112
speed: 13.8545188904
id: 1
t: 31
xxx after update is x: -3.00543880463
y: 55.6456718445
theta: 4.64091300964
speed: 13.9385061264
id: 1
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3751544555666687, 0]
222 self.state_dicts[msg.id][msg.t] is (3.424823522567749, -45.04012680053711, 1.5347063541412354, 14.143964767456055)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.42222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: -3.00543880463
y: 55.6456718445
theta: 4.64091300964
speed: 13.9385061264
id: 1
t: 32
xxx after update is x: -3.32032132149
y: 54.4851417542
theta: 4.77130079269
speed: 13.5275182724
id: 1
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: -3.32032132149
y: 54.4851417542
theta: 4.77130079269
speed: 13.5275182724
id: 1
t: 33
xxx after update is x: -3.17941212654
y: 54.0824127197
theta: 4.68082284927
speed: 13.7710838318
id: 1
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: -3.17941212654
y: 54.0824127197
theta: 4.68082284927
speed: 13.7710838318
id: 1
t: 34
xxx after update is x: -2.77808260918
y: 53.7739906311
theta: 4.73636388779
speed: 14.0938854218
id: 1
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.77808260918
y: 53.7739906311
theta: 4.73636388779
speed: 14.0938854218
id: 1
t: 35
xxx after update is x: -2.90079184671
y: -45.624168396
theta: 1.80350470543
speed: 14.0079994202
id: 0
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: 3.43391084671
y: -45.624168396
theta: 1.80350470543
speed: 14.0079994202
id: 0
t: 31
xxx after update is x: 3.42482352257
y: -45.0401268005
theta: 1.53470635414
speed: 14.1439647675
id: 0
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: 3.42482352257
y: -45.0401268005
theta: 1.53470635414
speed: 14.1439647675
id: 0
t: 32
xxx after update is x: 3.5972969532
y: -44.3151283264
theta: 1.65265011787
speed: 13.8555679321
id: 0
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3245796660661096, 0.3361928627612379]
222 self.state_dicts[msg.id][msg.t] is (-3.3203213214874268, 54.48514175415039, 4.771300792694092, 13.527518272399902)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.5972969532
y: -44.3151283264
theta: 1.65265011787
speed: 13.8555679321
id: 0
t: 33
xxx after update is x: 3.1051671505
y: -43.8951263428
theta: 1.46091985703
speed: 13.6008663177
id: 0
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:34


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.51111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: 3.1051671505
y: -43.8951263428
theta: 1.46091985703
speed: 13.6008663177
id: 0
t: 34
xxx after update is x: 3.42068958282
y: -43.8846588135
theta: 1.6207408905
speed: 14.198975563
id: 0
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: 3.42068958282
y: -43.8846588135
theta: 1.6207408905
speed: 14.198975563
id: 0
t: 35
xxx after update is x: 3.18063211441
y: -43.0381736755
theta: 1.50853812695
speed: 13.67000103
id: 0
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: 3.18063211441
y: -43.0381736755
theta: 1.50853812695
speed: 13.67000103
id: 0
t: 36
xxx after update is x: 3.18485045433
y: -42.0645828247
theta: 1.64981389046
speed: 14.1016721725
id: 0
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: 3.18485045433
y: -42.0645828247
theta: 1.64981389046
speed: 14.1016721725
id: 0
t: 37
xxx after update is x: 3.89139103889
y: -41.2459602356
theta: 1.6058306694
speed: 13.9628763199
id: 0
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:39


xxx8347
y: 52.2076416016
theta: 4.68581581116
speed: 13.9606704712
id: 1
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:36




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: -2.90079188347
y: 52.2076416016
theta: 4.68581581116
speed: 13.9606704712
id: 1
t: 36
xxx after update is x: -3.37841463089
y: 52.5276756287
theta: 4.94581270218
speed: 13.9092435837
id: 1
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.34016718969995935, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1848504543304443, -42.06458282470703, 1.6498138904571533, 14.101672172546387)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.37841463089
y: 52.5276756287
theta: 4.94581270218
speed: 13.9092435837
id: 1
t: 37
xxx after update is x: -3.26883649826
y: 51.6280326843
theta: 4.71241140366
speed: 13.6914148331
id: 1
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:38




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.26883649826
y: 51.6280326843
theta: 4.71241140366
speed: 13.6914148331
id: 1
t: 38
xxx after update is x: -3.22435975075
y: 50.7418937683
theta: 4.72829151154
speed: 13.4454278946
id: 1
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:39




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: -3.22435975075
y: 50.7418937683
theta: 4.72829151154
speed: 13.4454278946
id: 1
t: 39
xxx after update is x: -2.72195267677
y: 50.2947731018
theta: 4.52784919739
speed: 13.8022346497
id: 1
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.77777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: -2.72195267677
y: 50.2947731018
theta: 4.52784919739
speed: 13.8022346497
id: 1
t: 40
xxx after update is x: -3.01845002174
y: 49.3456420898
theta: 4.4655585289
speed: 13.7824420929
id: 1
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: -3.01845002174
y: 49.3456420898
theta: 4.4655585289
speed: 13.7824420929
id: 1
t: 41
xxx after update is x: -3.43623900414
y: 48.9973373413
theta: 4.75637102127
speed: 14.1992254257
id: 1
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: -3.43623900414
y: 48.9973373413
theta: 4.75637102127
speed: 14.1992254257
id: 1
t: 42
xxx after update is x: -3.29882335663
y: 48.9297981262
theta: 4.71995544434
speed: 14.032954216
id: 1
t: 43
maneuver_negotiatir.py finish the update agent state from before update is x: 3.89139103889
y: -41.2459602356
theta: 1.6058306694
speed: 13.9628763199
id: 0
t: 38
xxx after update is x: 3.58051562309
y: -40.7775726318
theta: 1.69303703308
speed: 13.6679906845
id: 0
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.58051562309
y: -40.7775726318
theta: 1.69303703308
speed: 13.6679906845
id: 0
t: 39
xxx after update is x: 3.24318313599
y: -40.698802948
theta: 1.63786363602
speed: 13.8956432343
id: 0
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:40




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.24318313599
y: -40.698802948
theta: 1.63786363602
speed: 13.8956432343
id: 0
t: 40
xxx after update is x: 3.41133189201
y: -39.9124717712
theta: 1.53904521465
speed: 14.2395772934
id: 0
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:41




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: 3.41133189201
y: -39.9124717712
theta: 1.53904521465
speed: 14.2395772934
id: 0
t: 41
xxx after update is x: 3.63982462883
y: -38.8726387024
theta: 1.6106287241
speed: 13.6975135803
id: 0
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.86666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.335295739163531, 0.3907462068308873]
222 self.state_dicts[msg.id][msg.t] is (-3.436239004135132, 48.997337341308594, 4.756371021270752, 14.199225425720215)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: 3.63982462883
y: -38.8726387024
theta: 1.6106287241
speed: 13.6975135803
id: 0
t: 42
xxx after update is x: 3.21524405479
y: -38.2128448486
theta: 1.47892904282
speed: 14.1428260803
id: 0
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: 3.21524405479
y: -38.2128448486
theta: 1.47892904282
speed: 14.1428260803
id: 0
t: 43
xxx after update is x: 3.13018679619
y: -37.2517700195
theta: 1.59299051762
speed: 13.8341331482
id: 0
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: 3.13018679619
y: -37.2517700195
theta: 1.59299051762
speed: 13.8341331482
id: 0
t: 44
xxx after update is x: 3.12454628944
y: -36.8596801758
theta: 1.62548112869
speed: 13.9955501556
id: 0
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: 3.12454628944
y: -36.8596801758
theta: 1.62548112869
speed: 13.9955501556
id: 0
t: 45
xxx after update is x: 2.7614569664
y: -36.6361274719
theta: 1.66774559021
speed: 13.8877954483
id: 0
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: -3.29882335663
y: 48.9297981262
theta: 4.71995544434
speed: 14.032954216
id: 1
t: 43
xxx after update is x: -3.51294136047
y: 47.6628265381
theta: 4.74281263351
speed: 13.9428367615
id: 1
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: -3.51294136047
y: 47.6628265381
theta: 4.74281263351
speed: 13.9428367615
id: 1
t: 44
xxx after update is x: -3.40052700043
y: 47.1388130188
theta: 4.71685218811
speed: 13.9353923798
id: 1
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3122472744657082, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1245462894439697, -36.85968017578125, 1.625481128692627, 13.995550155639648)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.40052700043
y: 47.1388130188
theta: 4.71685218811
speed: 13.9353923798
id: 1
t: 45
xxx after update is x: -3.16435313225
y: 46.6632614136
theta: 4.75222492218
speed: 13.7829151154
id: 1
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:46




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: -3.16435313225
y: 46.6632614136
theta: 4.75222492218
speed: 13.7829151154
id: 1
t: 46
xxx after update is x: -3.63330197334
y: 46.0608215332
theta: 4.78953266144
speed: 13.946267128
id: 1
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.08888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: -3.63330197334
y: 46.0608215332
theta: 4.78953266144
speed: 13.946267128
id: 1
t: 47
xxx after update is x: -3.49205994606
y: 45.6406440735
theta: 4.8937754631
speed: 13.8629560471
id: 1
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.49205994606
y: 45.6406440735
theta: 4.8937754631
speed: 13.8629560471
id: 1
t: 48
xxx after update is x: -3.31136083603
y: 44.5013885498
theta: 4.58843803406
speed: 14.1591959
id: 1
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:49




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: -3.31136083603
y: 44.5013885498
theta: 4.58843803406
speed: 14.1591959
id: 1
t: 49
xxx after update is x: -3.30691361427
y: 44.2106971741
theta: 4.82563734055
speed: 13.7390813828
id: 1
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:51


xxx before.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: 2.7614569664
y: -36.6361274719
theta: 1.66774559021
speed: 13.8877954483
id: 0
t: 46
xxx after update is x: 3.78859901428
y: -35.33070755
theta: 1.72324645519
speed: 14.2186660767
id: 0
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: 3.78859901428
y: -35.33070755
theta: 1.72324645519
speed: 14.2186660767
id: 0
t: 47
xxx after update is x: 3.41735839844
y: -35.2597770691
theta: 1.55816364288
speed: 13.9876651764
id: 0
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.41735839844
y: -35.2597770691
theta: 1.55816364288
speed: 13.9876651764
id: 0
t: 48
xxx after update is x: 3.36588978767
y: -35.0114212036
theta: 1.56974315643
speed: 13.8975000381
id: 0
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:49


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.17777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: 3.36588978767
y: -35.0114212036
theta: 1.56974315643
speed: 13.8975000381
id: 0
t: 49
xxx after update is x: 3.38959980011
y: -34.4181747437
theta: 1.56102252007
speed: 14.1673564911
id: 0
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: 3.38959980011
y: -34.4181747437
theta: 1.56102252007
speed: 14.1673564911
id: 0
t: 50
xxx after update is x: 3.83022713661
y: -33.5130805969
theta: 1.62243032455
speed: 14.0644865036
id: 0
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.36825774368962066, 0.32763355195918]
222 self.state_dicts[msg.id][msg.t] is (-2.9999399185180664, 44.33698272705078, 4.556079864501953, 14.128683090209961)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: 3.83022713661
y: -33.5130805969
theta: 1.62243032455
speed: 14.0644865036
id: 0
t: 51
xxx after update is x: 2.6620695591
y: -32.9586906433
theta: 1.45756518841
speed: 13.7562046051
id: 0
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.6620695591
y: -32.9586906433
theta: 1.45756518841
speed: 13.7562046051
id: 0
t: 52
xxx after update is x: 3.7857401371
y: -32.7159500122
theta: 1.36785590649
speed: 13.8179960251
id: 0
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:53




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: 3.7857401371
y: -32.7159500122
theta: 1.36785590649
speed: 13.8179960251
id: 0
t: 53
xxx after update is x: 3.58267140388
y: -31.0520477295
theta: 1.56395 update is x: -3.30691361427
y: 44.2106971741
theta: 4.82563734055
speed: 13.7390813828
id: 1
t: 50
xxx after update is x: -2.99993991852
y: 44.3369827271
theta: 4.5560798645
speed: 14.1286830902
id: 1
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.34710407426552353, 0]
222 self.state_dicts[msg.id][msg.t] is (3.8302271366119385, -33.51308059692383, 1.6224303245544434, 14.064486503601074)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.99993991852
y: 44.3369827271
theta: 4.5560798645
speed: 14.1286830902
id: 1
t: 51
xxx after update is x: -3.24258494377
y: 42.7042388916
theta: 4.91806507111
speed: 13.7207736969
id: 1
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:52




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.24258494377
y: 42.7042388916
theta: 4.91806507111
speed: 13.7207736969
id: 1
t: 52
xxx after update is x: -3.78299760818
y: 42.2568130493
theta: 4.50994539261
speed: 13.8706016541
id: 1
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:53




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: -3.78299760818
y: 42.2568130493
theta: 4.50994539261
speed: 13.8706016541
id: 1
t: 53
xxx after update is x: -3.41545987129
y: 41.6811408997
theta: 4.73303985596
speed: 13.929476738
id: 1
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: -3.41545987129
y: 41.6811408997
theta: 4.73303985596
speed: 13.929476738
id: 1
t: 54
xxx after update is x: -3.28462648392
y: 41.0041122437
theta: 4.46865558624
speed: 13.714430809
id: 1
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.44444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: -3.28462648392
y: 41.0041122437
theta: 4.46865558624
speed: 13.714430809
id: 1
t: 55
xxx after update is x: -3.19029927254
y: 40.4298629761
theta: 4.67278766632
speed: 13.8998575211
id: 1
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: -3.19029927254
y: 40.4298629761
theta: 4.67278766632
speed: 13.8998575211
id: 1
t: 56
xxx after update is x: -3.37763500214
y: 39.7999153137
theta: 4.61181116104
speed: 13.9425125122
id: 1
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3943581355400497, 0]
222 self.state_dicts[msg.id][msg.t] is (3.413691759109497, -29.386550903320312, 1.5515433549880981, 14.094013214111328)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(sel64991
speed: 13.6873645782
id: 0
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: 3.58267140388
y: -31.0520477295
theta: 1.5639564991
speed: 13.6873645782
id: 0
t: 54
xxx after update is x: 2.74160313606
y: -31.2622318268
theta: 1.41867411137
speed: 13.8347892761
id: 0
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.74160313606
y: -31.2622318268
theta: 1.41867411137
speed: 13.8347892761
id: 0
t: 55
xxx after update is x: 3.13571977615
y: -30.5559234619
theta: 1.72844064236
speed: 13.7395343781
id: 0
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:56




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: 3.13571977615
y: -30.5559234619
theta: 1.72844064236
speed: 13.7395343781
id: 0
t: 56
xxx after update is x: 3.41369175911
y: -29.3865509033
theta: 1.55154335499
speed: 14.0940132141
id: 0
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.53333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: 3.41369175911
y: -29.3865509033
theta: 1.55154335499
speed: 14.0940132141
id: 0
t: 57
xxx after update is x: 2.90064907074
y: -29.3696861267
theta: 1.66885995865
speed: 13.8009796143
id: 0
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: 2.90064907074
y: -29.3696861267
theta: 1.66885995865
speed: 13.8009796143
id: 0
t: 58
xxx after update is x: 3.5450656414
y: -28.791721344
theta: 1.41430079937
speed: 13.8648109436
id: 0
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.35749189078609783, 0.33365573087437883]
222 self.state_dicts[msg.id][msg.t] is (-2.989363670349121, 38.59656524658203, 4.680416107177734, 14.10496997833252)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: 3.5450656414
y: -28.791721344
theta: 1.41430079937
speed: 13.8648109436
id: 0
t: 59
xxx after update is x: 3.13788342476
y: -28.1345100403
theta: 1.65310966969
speed: 14.049952507
id: 0
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: 3.13788342476
y: -28.1345100403
theta: 1.65310966969
speed: 14.049952507
id: 0
t: 60
xxx after update is x: 3.45423650742
y: -26.8432407379
theta: 1.69718754292
speed: 13.9953765869
id: 0
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: 3.45423650742
y: -f.id == 1):
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: -3.37763500214
y: 39.7999153137
theta: 4.61181116104
speed: 13.9425125122
id: 1
t: 57
xxx after update is x: -2.41216564178
y: 38.6181030273
theta: 4.81136894226
speed: 14.2151708603
id: 1
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: -2.41216564178
y: 38.6181030273
theta: 4.81136894226
speed: 14.2151708603
id: 1
t: 58
xxx after update is x: -2.98936367035
y: 38.5965652466
theta: 4.68041610718
speed: 14.1049699783
id: 1
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: -2.98936367035
y: 38.5965652466
theta: 4.68041610718
speed: 14.1049699783
id: 1
t: 59
xxx after update is x: -2.70344567299
y: 37.8730430603
theta: 4.57262992859
speed: 14.1850585938
id: 1
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.70344567299
y: 37.8730430603
theta: 4.57262992859
speed: 14.1850585938
id: 1
t: 60
xxx after update is x: -3.54398727417
y: 37.3986625671
theta: 4.61309242249
speed: 13.9995365143
id: 1
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:61




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: -3.54398727417
y: 37.3986625671
theta: 4.61309242249
speed: 13.9995365143
id: 1
t: 61
xxx after update is x: -3.14770936966
y: 36.7235527039
theta: 4.53191709518
speed: 13.3332195282
id: 1
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: -3.14770936966
y: 36.7235527039
theta: 4.53191709518
speed: 13.3332195282
id: 1
t: 62
xxx after update is x: -3.10257816315
y: 35.7441978455
theta: 4.880382061
speed: 13.8284368515
id: 1
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3112897254787404, 0]
222 self.state_dicts[msg.id][msg.t] is (3.391505002975464, -26.250782012939453, 1.6616061925888062, 13.512043952941895)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.8






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.10257816315
y: 35.7441978455
theta: 4.880382061
speed: 13.8284368515
id: 1
t: 63
xxx after update is x: -3.12785196304
y: 35.8410720825
theta: 4.65108728409
speed: 14.0144109726
id: 1
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:64




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: -3.12785196304
y: 35.8410720825
theta: 4.65108728409
speed: 14.0144109726
id: 1
t: 64
xxx after update is x: 26.8432407379
theta: 1.69718754292
speed: 13.9953765869
id: 0
t: 61
xxx after update is x: 2.93901348114
y: -26.6391124725
theta: 1.64962935448
speed: 13.8924741745
id: 0
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: 2.93901348114
y: -26.6391124725
theta: 1.64962935448
speed: 13.8924741745
id: 0
t: 62
xxx after update is x: 3.39150500298
y: -26.2507820129
theta: 1.66160619259
speed: 13.5120439529
id: 0
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 3.39150500298
y: -26.2507820129
theta: 1.66160619259
speed: 13.5120439529
id: 0
t: 63
xxx after update is x: 3.57704329491
y: -25.5406360626
theta: 1.45253169537
speed: 13.2841739655
id: 0
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:64


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.84444444444






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: 3.57704329491
y: -25.5406360626
theta: 1.45253169537
speed: 13.2841739655
id: 0
t: 64
xxx after update is x: 3.78368115425
y: -25.1353664398
theta: 1.70467674732
speed: 13.220451355
id: 0
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.36963767170557366, 0.4256809622683664]
222 self.state_dicts[msg.id][msg.t] is (-3.3448898792266846, 35.090301513671875, 4.650203227996826, 13.892057418823242)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: 3.78368115425
y: -25.1353664398
theta: 1.70467674732
speed: 13.220451355
id: 0
t: 65
xxx after update is x: 3.19985127449
y: -24.388250351
theta: 1.50550091267
speed: 12.7877044678
id: 0
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: 3.19985127449
y: -24.388250351
theta: 1.50550091267
speed: 12.7877044678
id: 0
t: 66
xxx after update is x: 3.64974951744
y: -24.0416374207
theta: 1.66139709949
speed: 12.8033218384
id: 0
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: 3.64974951744
y: -24.0416374207
theta: 1.66139709949
speed: 12.8033218384
id: 0
t: 67
xxx after update is x: 3.42212700844
y: -23.0465373993
theta: 1.55557739735
speed: 12.0403194427
id: 0
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: 3.42212700844
y: -23.0465373993
theta: 1.55557739735
speed: 12.0403194427
id: 0
t: 68
xxx after update is x: 3.44070935249
y: -21.852432251
theta: 1.62345981598
speed: 12.4038934708
id: 0
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin fu-3.34488987923
y: 35.0903015137
theta: 4.650203228
speed: 13.8920574188
id: 1
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: -3.34488987923
y: 35.0903015137
theta: 4.650203228
speed: 13.8920574188
id: 1
t: 65
xxx after update is x: -3.28594231606
y: 33.8200950623
theta: 4.55803489685
speed: 14.2021856308
id: 1
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.28594231606
y: 33.8200950623
theta: 4.55803489685
speed: 14.2021856308
id: 1
t: 66
xxx after update is x: -3.32522463799
y: 33.2662506104
theta: 4.74821043015
speed: 14.0609149933
id: 1
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:67




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: -3.32522463799
y: 33.2662506104
theta: 4.74821043015
speed: 14.0609149933
id: 1
t: 67
xxx after update is x: -3.0966899395
y: 33.2000999451
theta: 4.73572254181
speed: 13.9576473236
id: 1
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.0966899395
y: 33.2000999451
theta: 4.73572254181
speed: 13.9576473236
id: 1
t: 68
xxx after update is x: -3.11004018784
y: 32.6987991333
theta: 4.53835487366
speed: 13.9834737778
id: 1
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:69


aaaaaa
aaaaaabbbbb
risk is [0.4027323526555552, 0]
222 self.state_dicts[msg.id][msg.t] is (3.440709352493286, -21.852432250976562, 1.623459815979004, 12.40389347076416)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: -3.11004018784
y: 32.6987991333
theta: 4.53835487366
speed: 13.9834737778
id: 1
t: 69
xxx after update is x: -3.01876091957
y: 31.7562561035
theta: 4.65500497818
speed: 13.6919107437
id: 1
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.11111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: -3.01876091957
y: 31.7562561035
theta: 4.65500497818
speed: 13.6919107437
id: 1
t: 70
xxx after update is x: -3.10624623299
y: 31.5641956329
theta: 4.61743688583
speed: 14.098443985
id: 1
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: -3.10624623299
y: 31.5641956329
theta: 4.61743688583
speed: 14.098443985
id: 1
t: 71
xxx after update is x: -2.92838048935
y: 30.414560318
theta: 4.70940303802
speed: 13.9413795471
id: 1
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update fnction, finish the n times spin:70

xxx before update is x: 3.44070935249
y: -21.852432251
theta: 1.62345981598
speed: 12.4038934708
id: 0
t: 69
xxx after update is x: 2.78767991066
y: -21.9531593323
theta: 1.62972533703
speed: 12.173163414
id: 0
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: 2.78767991066
y: -21.9531593323
theta: 1.62972533703
speed: 12.173163414
id: 0
t: 70
xxx after update is x: 2.83731508255
y: -21.3154258728
theta: 1.57152998447
speed: 11.4583358765
id: 0
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: 2.83731508255
y: -21.3154258728
theta: 1.57152998447
speed: 11.4583358765
id: 0
t: 71
xxx after update is x: 2.87792229652
y: -21.2237987518
theta: 1.55236804485
speed: 11.2868385315
id: 0
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.2






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: 2.87792229652
y: -21.2237987518
theta: 1.55236804485
speed: 11.2868385315
id: 0
t: 72
xxx after update is x: 2.95530247688
y: -20.6479740143
theta: 1.37768352032
speed: 11.3839960098
id: 0
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.3586459867547867, 0.33277866773572334]
222 self.state_dicts[msg.id][msg.t] is (-3.534637928009033, 29.87298583984375, 4.628305435180664, 13.749222755432129)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:
initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$


maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 1
current clock is 3.24444444444
!!!!after check statue the self.tag is [3.2444444444444445, 0, 'left']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.24444444444

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.2444444444444445, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.24444444444,(2.9553024768829346, -20.647974014282227, 1.3776835203170776),11,1,3.24444444444,0,left
!!!!change state to get
GET,0,3.24444444444,(2.9553024768829346, -20.647974014282227, 1.3776835203170776),11,1,3.24444444444,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.24444444444
self.communication_details == 0
sending GET,0,3.24444444444,(2.9553024768829346, -20.647974014282227, 1.3776835203170776),11,1,3.24444444444,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
 self.man_init:
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: 2.95530247688
y: -20.6479740143
theta: 1.37768352032
speed: 11.3839960098
id: 0
t: 73
xxx after update is x: 3.21673703194
y: -20.3500175476
theta: 1.40446650982
speed: 11.3833093643
id: 0
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.28888888889




maneuverunction 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.92838048935
y: 30.414560318
theta: 4.70940303802
speed: 13.9413795471
id: 1
t: 72
xxx after update is x: -3.53463792801
y: 29.8729858398
theta: 4.62830543518
speed: 13.7492227554
id: 1
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:73




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: -3.53463792801
y: 29.8729858398
theta: 4.62830543518
speed: 13.7492227554
id: 1
t: 73
xxx after update is x: -2.11849236488
y: 29.2431240082
theta: 4.5217499733
speed: 13.98665905
id: 1
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.28888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.28888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.24444444444', 'Sender': '0', 'Time': '3.24444444444', 'IntendedCourse': 'left', 'Position': ['2.9553024768829346', ' -20.647974014282227', ' 1.3776835203170776'], 'TagID': '0', 'Type': 'GET', 'Velocity': '11'}
car 1 received GET,0,3.24444444444,(2.9553024768829346, -20.647974014282227, 1.3776835203170776),11,1,3.24444444444,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.144197530864
sender travel direction is:  north
sender earliest entering time is:  1.88193428239
sender last entering time is:  2.26230626897
sender last leaving time is:  4.42115585317
my entering time is:  1.71325801501
my leaving time is:  4.36231849915
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.28888888889
self.communication_details == 0
sending DENY,1,3.28888888889,(-3.018760919570923, 31.756256103515625, 4.655004978179932),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




aaaaaa
aaaaaabbbbb
risk is [0.5992948914476736, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2167370319366455, -20.350017547607422, 1.4044665098190308, 11.383309364318848)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.11849236488
y: 29.2431240082
theta: 4.5217499733
speed: 13.98665905
id: 1
t: 74
xxx after update is x: -3.20529174805
y: 28.3250141144
theta: 4.72075891495
speed: 13.2898616791
id: 1
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:75




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: -3.20529174805
y: 28.3250141144
theta: 4.72075891495
speed: 13.2898616791
id: 1
t: 75
xxx after update is x: -3.12661170959
y: 28.4125576019
theta: 4.69579219818
speed: 13.8063497543
id: 1
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:77


xxx before u_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.28888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '3.28888888889', 'Position': ['(-3.018760919570923', ' 31.756256103515625', ' 4.655004978179932)'], 'Type': 'DENY'}
car 0 received DENY,1,3.28888888889,(-3.018760919570923, 31.756256103515625, 4.655004978179932),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.2444444444444445, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.2444444444444445, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




finish try maneuver


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.21673703194
y: -20.3500175476
theta: 1.40446650982
speed: 11.3833093643
id: 0
t: 74
xxx after update is x: 3.22612333298
y: -19.4377040863
theta: 1.64777028561
speed: 11.1637506485
id: 0
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:75




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: 3.22612333298
y: -19.4377040863
theta: 1.64777028561
speed: 11.1637506485
id: 0
t: 75
xxx after update is x: 2.27250933647
y: -19.3904972076
theta: 1.53895533085
speed: 10.6029176712
id: 0
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.27250933647
y: -19.3904972076
theta: 1.53895533085
speed: 10.6029176712
id: 0
t: 76
xxx after update is x: 3.03077459335
y: -18.3601589203
theta: 1.6214928627
speed: 10.2418107986
id: 0
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:77




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:78


xxx before update is x: 3.03077459335
y: -18.3601589203
theta: 1.6214928627
speed: 10.2418107986
id: 0
t: 77
xxx after update is x: 2.66312861443
y: -17.8004970551
theta: 1.70536518097
speed: 10.4130277634
id: 0
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: 2.66312861443
y: -17.8004970551
theta: 1.70536518097
speed: 10.4130277634
id: 0
t: 78
xxx after update is x: 3.39800143242
y: -17.7671318054
theta: 1.56066596508
speed: 9.95784187317
id: 0
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:80


xxx before update is x: 3.39800143242
y: -17.7671318054
theta: 1.56066596508
speed: 9.95784187317
id: 0
t: 79
xxx after update is x: 2.96546292305
y: -17.3039283752
theta: 1.78211331367
speed: 9.71072101593
id: 0
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the trpdate is x: -3.12661170959
y: 28.4125576019
theta: 4.69579219818
speed: 13.8063497543
id: 1
t: 76
xxx after update is x: -3.33343935013
y: 27.4497528076
theta: 4.69097185135
speed: 13.8762187958
id: 1
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:78


xxx before update is x: -3.33343935013
y: 27.4497528076
theta: 4.69097185135
speed: 13.8762187958
id: 1
t: 77
xxx after update is x: -3.61699676514
y: 26.9863548279
theta: 4.62521457672
speed: 14.0356378555
id: 1
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.46666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: -3.61699676514
y: 26.9863548279
theta: 4.62521457672
speed: 14.0356378555
id: 1
t: 78
xxx after update is x: -3.06021308899
y: 26.0740318298
theta: 4.70389795303
speed: 13.9193592072
id: 1
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.6245830301486938, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3980014324188232, -17.767131805419922, 1.5606659650802612, 9.957841873168945)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:80


xxx before update is x: -3.06021308899
y: 26.0740318298
theta: 4.70389795303
speed: 13.9193592072
id: 1
t: 79
xxx after update is x: -3.1877052784
y: 25.2871303558
theta: 4.65870904922
speed: 13.7795238495
id: 1
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.55555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.55555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '9', 'Sender': '0', 'TagID': '1', 'Time': '3.55555555556', 'Position': ['(2.9654629230499268', ' -17.30392837524414', ' 1.7821133136749268)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,3.55555555556,(2.9654629230499268, -17.30392837524414, 1.7821133136749268),9,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: -3.1877052784
y: 25.2871303558
theta: 4.65870904922
speed: 13.7795238495
id: 1
t: 80
xxx after update is x: -3.26732540131
y: 25.4056148529
theta: 4.76359367371
speed: 13.858833313
id: 1
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: -3.26732540131
y: 25.4056148529
theta: 4.76359367371
speed: 13.858833313
id: 1
t: 81
xxx after update is x: -3.19115686417
y: 24.3288764954
theta: 4.70716714859
speed: 13.8308134079
id: 1
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function y maneuver function update -. strat
current clock is 3.55555555556






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.511111111111111, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 3.55555555556
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.51111111111
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,3.55555555556,(2.9654629230499268, -17.30392837524414, 1.7821133136749268),9,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 3.55555555556
self.communication_details == 0
sending RELEASE,0,3.55555555556,(2.9654629230499268, -17.30392837524414, 1.7821133136749268),9,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: 2.96546292305
y: -17.3039283752
theta: 1.78211331367
speed: 9.71072101593
id: 0
t: 80
xxx after update is x: 3.37858223915
y: -16.5885982513
theta: 1.49932682514
speed: 9.80976295471
id: 0
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.3249314108463079, 0.3065075758489692]
222 self.state_dicts[msg.id][msg.t] is (-3.2673254013061523, 25.405614852905273, 4.763593673706055, 13.858833312988281)
if we have all measurements for a certain time-stamp perform risk estimation


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: 3.37858223915
y: -16.5885982513
theta: 1.49932682514
speed: 9.80976295471
id: 0
t: 81
xxx after update is x: 3.34572601318
y: -16.2142658234
theta: 1.49508798122
speed: 9.52811527252
id: 0
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:83


xxx before update is x: 3.34572601318
y: -16.2142658234
theta: 1.49508798122
speed: 9.52811527252
id: 0
t: 82
xxx after update is x: 2.86078596115
y: -16.3780422211
theta: 1.55019855499
speed: 9.31914329529
id: 0
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: 2.86078596115
y: -16.3780422211
theta: 1.55019855499
speed: 9.31914329529
id: 0
t: 83
xxx after update is x: 3.08466219902
y: -15.8181591034
theta: 1.58938741684
speed: 8.95066738129
id: 0
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: 3.08466219902
y: -15.8181591034
theta: 1.58938741684
speed: 8.95066738129
id: 0
t: 84
xxx after update is x: 3.33986616135
y: -15.4529504776
theta: 1.5752376318
speed: 8.77808761597
id: 0
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: 3.33986616135
y: -15.4529504776
theta: 1.5752376318
speed: 8.77808761597
id: 0
t: 85
xxx after update is x: 3.5757930278
in spin function, finish the n times spin:83


 xxx before update is x: -3.19115686417
y: 24.3288764954
theta: 4.70716714859
speed: 13.8308134079
id: 1
t: 82
xxx after update is x: -3.21767926216
y: 23.5984706879
theta: 4.78430938721
speed: 14.291103363
id: 1
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.22979293341112608, 0]
222 self.state_dicts[msg.id][msg.t] is (2.860785961151123, -16.378042221069336, 1.5501985549926758, 9.319143295288086)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: -3.21767926216
y: 23.5984706879
theta: 4.78430938721
speed: 14.291103363
id: 1
t: 83
xxx after update is x: -3.20665049553
y: 23.5189418793
theta: 4.79482841492
speed: 13.9908485413
id: 1
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: -3.20665049553
y: 23.5189418793
theta: 4.79482841492
speed: 13.9908485413
id: 1
t: 84
xxx after update is x: -3.13237905502
y: 22.496723175
theta: 4.85049724579
speed: 13.7147703171
id: 1
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: -3.13237905502
y: 22.496723175
theta: 4.85049724579
speed: 13.7147703171
id: 1
t: 85
xxx after update is x: -3.37248969078
y: 21.9635028839
theta: 4.47064495087
speed: 14.2950496674
id: 1
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.82222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: -3.37248969078
y: 21.9635028839
theta: 4.47064495087
speed: 14.2950496674
id: 1
t: 86
xxx after update is x: -2.80878925323
y: 21.6465835571
theta: 4.83005142212
speed: 13.9070959091
id: 1
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.80878925323
y: 21.6465835571
theta: 4.83005142212
speed: 13.9070959091
id: 1
t: 87
xxx after update is x: -3.35354924202
y: 20.7287826538
theta: 4.80846261978
speed: 14.0290927887
id: 1
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:88


aaaaaa
aaaaaabbbbb
risk is [0.3058717144655453, 0]
222 self.state_dicts[msg.id][msg.t] is (2.7885384559631348, -14.25092601776123, 1.4863547086715698, 8.506163597106934)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
current clock is 3.91111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.91111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.24444444444', 'Sender': '0', 'Time': '3.91111111111', 'IntendedCourse': 'left', 'Position': ['2.7885384559631348', ' -14.258
y: -14.5511569977
theta: 1.76882767677
speed: 8.71704483032
id: 0
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: 3.57579302788
y: -14.5511569977
theta: 1.76882767677
speed: 8.71704483032
id: 0
t: 86
xxx after update is x: 3.49032568932
y: -14.4142999649
theta: 1.66928339005
speed: 8.31759166718
id: 0
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: 3.49032568932
y: -14.4142999649
theta: 1.66928339005
speed: 8.31759166718
id: 0
t: 87
xxx after update is x: 2.78853845596
y: -14.2509260178
theta: 1.48635470867
speed: 8.50616359711
id: 0
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.91111111111

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.911111111111111, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.91111111111,(2.7885384559631348, -14.25092601776123, 1.4863547086715698),8,1,3.24444444444,0,left
!!!!change state to get
GET,0,3.91111111111,(2.7885384559631348, -14.25092601776123, 1.4863547086715698),8,1,3.24444444444,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.91111111111
self.communication_details == 0
sending GET,0,3.91111111111,(2.7885384559631348, -14.25092601776123, 1.4863547086715698),8,1,3.24444444444,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
Received -->>: 
current clock is 3.91111111111




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.91111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '14', 'Sender': '1', 'TagID': '1', 'Time': '3.91111111111', 'Position': ['(-3.3724896907806396', ' 21.963502883911133', ' 4.470644950866699)'], 'Type': 'DENY'}
car 0 received DENY,1,3.91111111111,(-3.3724896907806396, 21.963502883911133, 4.470644950866699),14,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.911111111111111, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.911111111111111, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.91111111111






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.911111111111111, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 3.91111111111
(RATE*SLOWDOWN) is 22092601776123', ' 1.4863547086715698'], 'TagID': '0', 'Type': 'GET', 'Velocity': '8'}
car 1 received GET,0,3.91111111111,(2.7885384559631348, -14.25092601776123, 1.4863547086715698),8,1,3.24444444444,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.173827160494
sender travel direction is:  north
sender earliest entering time is:  1.26155198488
sender last entering time is:  2.17382716049
sender last leaving time is:  4.54712541692
my entering time is:  1.12629951157
my leaving time is:  3.15877186264
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.91111111111
self.communication_details == 0
sending DENY,1,3.91111111111,(-3.3724896907806396, 21.963502883911133, 4.470644950866699),14,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




Received -->>: 
current clock is 3.91111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.91111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '8', 'Sender': '0', 'TagID': '1', 'Time': '3.91111111111', 'Position': ['(2.7885384559631348', ' -14.25092601776123', ' 1.4863547086715698)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,3.91111111111,(2.7885384559631348, -14.25092601776123, 1.4863547086715698),8,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: -3.35354924202
y: 20.7287826538
theta: 4.80846261978
speed: 14.0290927887
id: 1
t: 88
xxx after update is x: -3.35757446289
y: 19.7699623108
theta: 4.88800287247
speed: 14.0683345795
id: 1
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:90


xxx before update is x: -3.35757446289
y: 19.7699623108
theta: 4.88800287247
speed: 14.0683345795
id: 1
t: 89
xxx after update is x: -3.8516793251
y: 19.4874248505
theta: 4.66725683212
speed: 13.9919643402
id: 1
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: -3.8516793251
y: 19.4874248505
theta: 4.66725683212
speed: 13.9919643402
id: 1
t: 90
xxx after update is x: -2.75627660751
y: 19.0914058685
theta: 4.69556427002
speed: 13.7276649475
id: 1
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:92


xxx before update is x: -2.75627660751
y: 19.0914058685
theta: 4.69556427002
speed: 13.7276649475
id: 1
t: 91
xxx after update is x: -3.03365635872
y: 18.3347473145
theta: 4.88016557693
speed: 13.6696538925
id: 1
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.21329849797754497, 0]
222 self.state_dicts[msg.id][msg.t] is (3.472064256668091, -12.845857620239258, 1.5380747318267822, 7.172943115234375)
if we have all measurements for a certain time-stamp perform.5
MR[0] is 3.91111111111
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,3.91111111111,(2.7885384559631348, -14.25092601776123, 1.4863547086715698),8,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 3.91111111111
self.communication_details == 0
sending RELEASE,0,3.91111111111,(2.7885384559631348, -14.25092601776123, 1.4863547086715698),8,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: 2.78853845596
y: -14.2509260178
theta: 1.48635470867
speed: 8.50616359711
id: 0
t: 88
xxx after update is x: 2.89768958092
y: -13.5918502808
theta: 1.61233448982
speed: 7.98608398438
id: 0
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.2859213306357898, 0.35672055425168847]
222 self.state_dicts[msg.id][msg.t] is (-3.357574462890625, 19.769962310791016, 4.888002872467041, 14.068334579467773)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:90


xxx before update is x: 2.89768958092
y: -13.5918502808
theta: 1.61233448982
speed: 7.98608398438
id: 0
t: 89
xxx after update is x: 3.1776971817
y: -13.0358057022
theta: 1.55879116058
speed: 7.88167905807
id: 0
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: 3.1776971817
y: -13.0358057022
theta: 1.55879116058
speed: 7.88167905807
id: 0
t: 90
xxx after update is x: 3.26910042763
y: -13.26649189
theta: 1.69158375263
speed: 7.17529058456
id: 0
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:92


xxx before update is x: 3.26910042763
y: -13.26649189
theta: 1.69158375263
speed: 7.17529058456
id: 0
t: 91
xxx after update is x: 3.47206425667
y: -12.8458576202
theta: 1.53807473183
speed: 7.17294311523
id: 0
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: 3.47206425667
y: -12.8458576202
theta: 1.53807473183
speed: 7.17294311523
id: 0
t: 92
xxx after update is x: 3.60799503326
y: -12.2011423111
theta: 1.66469812393
speed: 6.83217859268
id: 0
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: 3.60799503326
y: -12.2011423111
theta: 1.66469812393
speed: 6.83217859268
id: 0
t: 93
xxx after update is x: 3.128916502
y: -12.3537693024
theta: 1.68994951248
speed: 7.04779863358
id: 0
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: 3.128916502
y: -12.3537693024
theta: 1.68994951248
speed: 7.04779863358
id: 0
t: 94
xxx after update is x: 3.86118984222
y: -11.3547019958
theta: 1.648 risk estimation

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: -3.03365635872
y: 18.3347473145
theta: 4.88016557693
speed: 13.6696538925
id: 1
t: 92
xxx after update is x: -2.67876815796
y: 17.6178131104
theta: 4.78788137436
speed: 14.0405673981
id: 1
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion

self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.13333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: -2.67876815796
y: 17.6178131104
theta: 4.78788137436
speed: 14.0405673981
id: 1
t: 93
xxx after update is x: -3.37814760208
y: 17.3150291443
theta: 4.6260304451
speed: 13.7424249649
id: 1
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: -3.37814760208
y: 17.3150291443
theta: 4.6260304451
speed: 13.7424249649
id: 1
t: 94
xxx after update is x: -3.22604346275
y: 15.8381605148
theta: 4.66477155685
speed: 13.9383401871
id: 1
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: -3.22604346275
y: 15.8381605148
theta: 4.66477155685
speed: 13.9383401871
id: 1
t: 95
xxx after update is x: -2.75319981575
y: 16.5430831909
theta: 4.70316934586
speed: 14.1773281097
id: 1
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.26666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.26666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.24444444444', 'Sender': '0', 'Time': '4.26666666667', 'IntendedCourse': 'left', 'Position': ['3.022076368331909', ' -11.749987602233887', ' 1.5356725454330444'], 'TagID': '0', 'Type': 'GET', 'Velocity': '6'}
car 1 received GET,0,4.26666666667,(3.022076368331909, -11.749987602233887, 1.5356725454330444),6,1,3.24444444444,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.18962962963
sender travel direction is:  north
sender earliest entering time is:  0.938291161744
sender last entering time is:  2.18962962963
sender last leaving time is:  4.56292788605
my entering time is:  0.840731619376
my leaving time is:  2.57183360912
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 4.26666666667
self.communication_details == 0
sending DENY,1,4.26666666667,(-2.6787681579589844, 17.617813110351562, 4.787881374359131),14,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish53441715
speed: 6.53490066528
id: 0
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: 3.86118984222
y: -11.3547019958
theta: 1.64853441715
speed: 6.53490066528
id: 0
t: 95
xxx after update is x: 3.02207636833
y: -11.7499876022
theta: 1.53567254543
speed: 6.45055294037
id: 0
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 4.26666666667

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.222222222222222, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.26666666667,(3.022076368331909, -11.749987602233887, 1.5356725454330444),6,1,3.24444444444,0,left
!!!!change state to get
GET,0,4.26666666667,(3.022076368331909, -11.749987602233887, 1.5356725454330444),6,1,3.24444444444,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 4.26666666667
self.communication_details == 0
sending GET,0,4.26666666667,(3.022076368331909, -11.749987602233887, 1.5356725454330444),6,1,3.24444444444,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.26666666667






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0
finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 4.26666666667




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 4.26666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '14', 'Sender': '1', 'TagID': '1', 'Time': '4.26666666667', 'Position': ['(-2.6787681579589844', ' 17.617813110351562', ' 4.787881374359131)'], 'Type': 'DENY'}
car 0 received DENY,1,4.26666666667,(-2.6787681579589844, 17.617813110351562, 4.787881374359131),14,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.222222222222222, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [4.222222222222222, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:97


xxx before update is x: 3.02207636833
y: -11.7499876022
theta: 1.53567254543
speed: 6.45055294037
id: 0
t: 96
xxx after update is x: 3.07835149765
y: -11.7223100662
theta: 1.65910446644
speed: 5.94812822342
id: 0
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: 3.07835149765
 the n times spin:97

xxx before update is x: -2.75319981575
y: 16.5430831909
theta: 4.70316934586
speed: 14.1773281097
id: 1
t: 96
xxx after update is x: -2.84457874298
y: 15.3477926254
theta: 4.75216150284
speed: 13.6030921936
id: 1
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: -2.84457874298
y: 15.3477926254
theta: 4.75216150284
speed: 13.6030921936
id: 1
t: 97
xxx after update is x: -3.73031234741
y: 14.2171230316
theta: 4.63460826874
speed: 13.6856174469
id: 1
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.5419361095467838, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3086354732513428, -10.889532089233398, 1.6510032415390015, 5.532222270965576)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: -3.73031234741
y: 14.2171230316
theta: 4.63460826874
speed: 13.6856174469
id: 1
t: 98
xxx after update is x: -2.91488575935
y: 14.0023708344
theta: 4.56083106995
speed: 13.9509239197
id: 1
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: -2.91488575935
y: 14.0023708344
theta: 4.56083106995
speed: 13.9509239197
id: 1
t: 99
xxx after update is x: -2.86010909081
y: 13.2018194199
theta: 4.61158466339
speed: 13.5300855637
id: 1
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: -2.86010909081
y: 13.2018194199
theta: 4.61158466339
speed: 13.5300855637
id: 1
t: 100
xxx after update is x: -3.68163442612
y: 12.6957540512
theta: 4.76051712036
speed: 13.6206331253
id: 1
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.48888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.68163442612
y: 12.6957540512
theta: 4.76051712036
speed: 13.6206331253
id: 1
t: 101
xxx after update is x: -3.71469187737
y: 12.0120315552
theta: 4.55557012558
speed: 13.6507062912
id: 1
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:102


aaaaaa
aaaaaabbbbb
risk is [0.6058261089926337, 0]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: -3.71469187737
y: 12.0120315552
theta: 4.55557012558
speed: 13.6507062912
id: 1
t: 102
xxx after update is x: -3.21474123001
y: 11.8966178894
theta: 4.69961309433
speed: 13.7662572861
id: 1
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.148578405380249, -9.365803718566895, 1.4806630611419678, 4.7107133865356445)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update fy: -11.7223100662
theta: 1.65910446644
speed: 5.94812822342
id: 0
t: 97
xxx after update is x: 3.30863547325
y: -10.8895320892
theta: 1.65100324154
speed: 5.53222227097
id: 0
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.5320281889220432, 0.013995231061371405]
222 self.state_dicts[msg.id][msg.t] is (-3.7303123474121094, 14.217123031616211, 4.634608268737793, 13.685617446899414)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: 3.30863547325
y: -10.8895320892
theta: 1.65100324154
speed: 5.53222227097
id: 0
t: 98
xxx after update is x: 3.51310014725
y: -10.6489152908
theta: 1.57202076912
speed: 5.61095046997
id: 0
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: 3.51310014725
y: -10.6489152908
theta: 1.57202076912
speed: 5.61095046997
id: 0
t: 99
xxx after update is x: 3.1887114048
y: -10.3509588242
theta: 1.56007564068
speed: 5.23314905167
id: 0
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: 3.1887114048
y: -10.3509588242
theta: 1.56007564068
speed: 5.23314905167
id: 0
t: 100
xxx after update is x: 3.21086907387
y: -9.96823406219
theta: 1.64363014698
speed: 5.12048244476
id: 0
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: 3.21086907387
y: -9.96823406219
theta: 1.64363014698
speed: 5.12048244476
id: 0
t: 101
xxx after update is x: 2.68759465218
y: -9.81015110016
theta: 1.59421801567
speed: 4.95373344421
id: 0
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: 2.68759465218
y: -9.81015110016
theta: 1.59421801567
speed: 4.95373344421
id: 0
t: 102
xxx after update is x: 3.14857840538
y: -9.36580371857
theta: 1.48066306114
speed: 4.71071338654
id: 0
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.48834115691319435, 0.0002555586583268294]
222 self.state_dicts[msg.id][msg.t] is (-3.2147412300109863, 11.896617889404297, 4.699613094329834, 13.766257286071777)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: 3.14857840538
y: -9.36580371857
theta: 1.48066306114
speed: 4.71071338654
id: 0
t: 103
xxx after update is x: 3.12921404839
y: -9.69475078583
theta: 1.4426419735
speed: 4.49726247787
id: 0
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.62222222222






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.57777unction 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: -3.21474123001
y: 11.8966178894
theta: 4.69961309433
speed: 13.7662572861
id: 1
t: 103
xxx after update is x: -3.05619859695
y: 10.9774856567
theta: 4.5889840126
speed: 13.4877471924
id: 1
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.62222222222




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.62222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '4', 'Sender': '0', 'TagID': '1', 'Time': '4.62222222222', 'Position': ['(3.12921404838562', ' -9.694750785827637', ' 1.4426419734954834)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.62222222222,(3.12921404838562, -9.694750785827637, 1.4426419734954834),4,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.05619859695
y: 10.9774856567
theta: 4.5889840126
speed: 13.4877471924
id: 1
t: 104
xxx after update is x: -3.45504975319
y: 10.4791345596
theta: 4.55499219894
speed: 13.9892902374
id: 1
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:105




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.45504975319
y: 10.4791345596
theta: 4.55499219894
speed: 13.9892902374
id: 1
t: 105
xxx after update is x: -2.588098526
y: 9.56871604919
theta: 4.80279350281
speed: 13.3417701721
id: 1
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:106




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: -2.588098526
y: 9.56871604919
theta: 4.80279350281
speed: 13.3417701721
id: 1
t: 106
xxx after update is x: -3.36932945251
y: 8.92426872253
theta: 4.73293352127
speed: 13.5544595718
id: 1
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: -3.36932945251
y: 8.92426872253
theta: 4.73293352127
speed: 13.5544595718
id: 1
t: 107
xxx after update is x: -3.41769909859
y: 8.33762931824
theta: 4.67649793625
speed: 13.5841226578
id: 1
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: -3.41769909859
y: 8.33762931824
theta: 4.67649793625
speed: 13.5841226578
id: 1
t: 108
xxx after update is x: -3.70930361748
y: 7.28357362747
theta: 4.83076381683
speed: 13.5973501205
id: 1
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.84444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:110


xxx before update is x: -3.70930361748
y: 7.28357362747
theta: 4.83076381683
speed: 13.5973501205
i77777777775, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.62222222222
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.57777777778
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,4.62222222222,(3.12921404838562, -9.694750785827637, 1.4426419734954834),4,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 4.62222222222
self.communication_details == 0
sending RELEASE,0,4.62222222222,(3.12921404838562, -9.694750785827637, 1.4426419734954834),4,1,3.24444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.12921404839
y: -9.69475078583
theta: 1.4426419735
speed: 4.49726247787
id: 0
t: 104
xxx after update is x: 2.58970594406
y: -9.57531738281
theta: 1.48523747921
speed: 3.97872972488
id: 0
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:105




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.58970594406
y: -9.57531738281
theta: 1.48523747921
speed: 3.97872972488
id: 0
t: 105
xxx after update is x: 3.36966657639
y: -9.25670146942
theta: 1.6832253933
speed: 4.12993860245
id: 0
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:106




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.36966657639
y: -9.25670146942
theta: 1.6832253933
speed: 4.12993860245
id: 0
t: 106
xxx after update is x: 3.43243432045
y: -8.72668838501
theta: 1.72713792324
speed: 3.7784371376
id: 0
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:107




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: 3.43243432045
y: -8.72668838501
theta: 1.72713792324
speed: 3.7784371376
id: 0
t: 107
xxx after update is x: 3.48995399475
y: -8.34102630615
theta: 1.45080757141
speed: 3.63458752632
id: 0
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: 3.48995399475
y: -8.34102630615
theta: 1.45080757141
speed: 3.63458752632
id: 0
t: 108
xxx after update is x: 4.12557697296
y: -8.78444480896
theta: 1.5252597332
speed: 3.06346058846
id: 0
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:110


xxx before update is x: 4.12557697296
y: -8.78444480896
theta: 1.5252597332
speed: 3.06346058846
id: 0
t: 109
xxx after update is x: 2.84744501114
y: -8.16151714325
theta: 1.55919253826
speed: 2.79954957962
id: 0
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:111


xxx before update is x: 2.84744501114
y: -8.16151714325
theta: 1.55919253826
speed: 2.79954957962
id: 0
t: 110
xxx after update is x: 3.07307434082
y: -8.67661857605
theta: 1.48661100864
speed: 2.67689108849
id: 0
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update functionmaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 4.93333333333

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.888888888888889, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.93333333333,(3.0730743408203125, -8.676618576049805, 1.486611008644104),2,1,3.24444444444,0,left
!!!!change state to get
GET,0,4.93333333333,(3.0730743408203125, -8.676618576049805, 1.486611008644104),2,1,3.24444444444,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 4.93333333333
self.communication_details == 0
sending GET,0,4.93333333333,(3.0730743408203125, -8.676618576049805, 1.486611008644104),2,1,3.24444444444,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.93333333333






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0

sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:112


xxx before update is x: 3.07307434082
y: -8.67661857605
theta: 1.48661100864
speed: 2.67689108849
id: 0
t: 111
xxx after update is x: 3.30064487457
y: -7.44870567322
theta: 1.44688177109
speed: 2.34960508347
id: 0
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
finish try maneuver
Received -->>: 
current clock is 4.97777777778




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 4.97777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '4.97777777778', 'Position': ['(-3.709303617477417', ' 7.283573627471924', ' 4.830763816833496)'], 'Type': 'DENY'}
car 0 received DENY,1,4.97777777778,(-3.709303617477417, 7.283573627471924, 4.830763816833496),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.977777777777778, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [4.977777777777778, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.7919032918446527, 0.003934565251106462]
222 self.state_dicts[msg.id][msg.t] is (-3.226869583129883, 5.687708854675293, 4.64862585067749, 13.859672546386719)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.30064487457
y: -7.44870567322
theta: 1.44688177109
speed: 2.34960508347
id: 0
t: 112
xxx after update is x: 3.37432003021
y: -8.14275550842
theta: 1.60018444061
speed: 2.14154005051
id: 0
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:113




going to the update function
sim.py in thd: 1
t: 109
xxx after update is x: -3.2967376709
y: 6.99895858765
theta: 4.69983053207
speed: 13.9330415726
id: 1
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:111


xxx before update is x: -3.2967376709
y: 6.99895858765
theta: 4.69983053207
speed: 13.9330415726
id: 1
t: 110
xxx after update is x: -3.26703119278
y: 6.12727212906
theta: 4.6102771759
speed: 13.9626178741
id: 1
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.638258008716446, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0730743408203125, -8.676618576049805, 1.486611008644104, 2.6768910884857178)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:112


xxx before update is x: -3.26703119278
y: 6.12727212906
theta: 4.6102771759
speed: 13.9626178741
id: 1
t: 111
xxx after update is x: -3.22686958313
y: 5.68770885468
theta: 4.64862585068
speed: 13.8596725464
id: 1
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.97777777778




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.97777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.24444444444', 'Sender': '0', 'Time': '4.93333333333', 'IntendedCourse': 'left', 'Position': ['3.0730743408203125', ' -8.676618576049805', ' 1.486611008644104'], 'TagID': '0', 'Type': 'GET', 'Velocity': '2'}
car 1 received GET,0,4.93333333333,(3.0730743408203125, -8.676618576049805, 1.486611008644104),2,1,3.24444444444,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.219259259259
sender travel direction is:  north
sender earliest entering time is:  0.595374516824
sender last entering time is:  2.21925925926
sender last leaving time is:  4.59255751568
my entering time is:  0.219259259259
my leaving time is:  1.17232985235
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 4.97777777778
self.communication_details == 0
sending DENY,1,4.97777777778,(-3.709303617477417, 7.283573627471924, 4.830763816833496),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:113


xxx before update is x: -3.22686958313
y: 5.68770885468
theta: 4.64862585068
speed: 13.8596725464
id: 1
t: 112
xxx after update is x: -3.13853478432
y: 5.01166057587
theta: 4.89082145691
speed: 13.6998195648
id: 1
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.13853478432
y: 5.01166057587
theta: 4.89082145691
speed: 13.6998195648
id: 1
t: 113
xxx after update is x: -3.49628067017
y: 4.84637737274
theta: 4.69174957275
speed: 14.1937398911
id: 1
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update functe sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: 3.37432003021
y: -8.14275550842
theta: 1.60018444061
speed: 2.14154005051
id: 0
t: 113
xxx after update is x: 3.22452545166
y: -7.98549032211
theta: 1.57668268681
speed: 2.07968711853
id: 0
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.22452545166
y: -7.98549032211
theta: 1.57668268681
speed: 2.07968711853
id: 0
t: 114
xxx after update is x: 3.06047916412
y: -8.30673027039
theta: 1.53327023983
speed: 2.11845850945
id: 0
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:115




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: 3.06047916412
y: -8.30673027039
theta: 1.53327023983
speed: 2.11845850945
id: 0
t: 115
xxx after update is x: 3.62435984612
y: -7.67663288116
theta: 1.65425443649
speed: 1.76696383953
id: 0
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.62435984612
y: -7.67663288116
theta: 1.65425443649
speed: 1.76696383953
id: 0
t: 116
xxx after update is x: 3.34429121017
y: -7.83783054352
theta: 1.62798130512
speed: 1.31440985203
id: 0
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:117




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: 3.34429121017
y: -7.83783054352
theta: 1.62798130512
speed: 1.31440985203
id: 0
t: 117
xxx after update is x: 3.09615421295
y: -7.3182258606
theta: 1.58655571938
speed: 1.05077016354
id: 0
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: 3.09615421295
y: -7.3182258606
theta: 1.58655571938
speed: 1.05077016354
id: 0
t: 118
xxx after update is x: 3.05651116371
y: -7.81406259537
theta: 1.65267825127
speed: 1.0103366375
id: 0
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.7730261695690318, 0.013717313943450793]
222 self.state_dicts[msg.id][msg.t] is (-2.9772088527679443, 1.9008458852767944, 4.611213684082031, 13.618510246276855)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.28888888889






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.288888888888889, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 5.28888888889
(RATE*SLOWDOWN) is 22.5
MR[0] is 5.28888888889
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,5.28888888889,(3.056511163711548, -7.814062595367432, 1.6526782512664795),1,1,3.24444444444,0
maneuver_negotiatir.py start the update_agent_message
current clock is 5.28888888889
self.communication_details == 0
sending RELEASE,0,5.28888888889,(3.056511163711548, -7.814062595367432, 1.6526782512664795),1,1,3.24ion 
in spin function, finish the n times spin:114




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:115


xxx before update is x: -3.49628067017
y: 4.84637737274
theta: 4.69174957275
speed: 14.1937398911
id: 1
t: 114
xxx after update is x: -3.09589576721
y: 3.67201066017
theta: 4.65702724457
speed: 13.7454690933
id: 1
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: -3.09589576721
y: 3.67201066017
theta: 4.65702724457
speed: 13.7454690933
id: 1
t: 115
xxx after update is x: -2.74447131157
y: 3.39762639999
theta: 4.66833400726
speed: 14.2337217331
id: 1
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.15555555556






self.maneuver_requested None
aaaaaa
aaaaaabbbbb
risk is [0.538068183523359, 0]
222 self.state_dicts[msg.id][msg.t] is (3.6243598461151123, -7.676632881164551, 1.65425443649292, 1.7669638395309448)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: -2.74447131157
y: 3.39762639999
theta: 4.66833400726
speed: 14.2337217331
id: 1
t: 116
xxx after update is x: -3.0627374649
y: 2.75953412056
theta: 4.84352493286
speed: 13.8556203842
id: 1
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: -3.0627374649
y: 2.75953412056
theta: 4.84352493286
speed: 13.8556203842
id: 1
t: 117
xxx after update is x: -3.56767678261
y: 2.08982563019
theta: 4.69469451904
speed: 14.0014858246
id: 1
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: -3.56767678261
y: 2.08982563019
theta: 4.69469451904
speed: 14.0014858246
id: 1
t: 118
xxx after update is x: -2.97720885277
y: 1.90084588528
theta: 4.61121368408
speed: 13.6185102463
id: 1
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 5.28888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 5.28888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '1', 'Sender': '0', 'TagID': '1', 'Time': '5.28888888889', 'Position': ['(3.056511163711548', ' -7.814062595367432', ' 1.6526782512664795)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,5.28888888889,(3.056511163711548, -7.814062595367432, 1.6526782512664795),1,1,3.24444444444,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:120


xxx before update is x: -2.97720885277
y: 1.90084588528
theta: 4.61121368408
speed: 13.6185102463
id: 1
t: 119
xxx after update is x: -3.76656579971
y: 0.968540370444444444,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:120


xxx before update is x: 3.05651116371
y: -7.81406259537
theta: 1.65267825127
speed: 1.0103366375
id: 0
t: 119
xxx after update is x: 3.03205752373
y: -7.53260946274
theta: 1.5940618515
speed: 0.739381492138
id: 0
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.03205752373
y: -7.53260946274
theta: 1.5940618515
speed: 0.739381492138
id: 0
t: 120
xxx after update is x: 3.40134000778
y: -7.10561656952
theta: 1.74440407753
speed: 0.159748390317
id: 0
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:121




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.40134000778
y: -7.10561656952
theta: 1.74440407753
speed: 0.159748390317
id: 0
t: 121
xxx after update is x: 3.87414765358
y: -7.03192806244
theta: 1.53979730606
speed: 0.147043764591
id: 0
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:122




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.87414765358
y: -7.03192806244
theta: 1.53979730606
speed: 0.147043764591
id: 0
t: 122
xxx after update is x: 3.06654763222
y: -7.62828779221
theta: 1.61458981037
speed: 0.0844769924879
id: 0
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:123




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: 3.06654763222
y: -7.62828779221
theta: 1.61458981037
speed: 0.0844769924879
id: 0
t: 123
xxx after update is x: 3.09874629974
y: -7.54914951324
theta: 1.50135147572
speed: -0.149508878589
id: 0
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:125


xxx before update is x: 3.09874629974
y: -7.54914951324
theta: 1.50135147572
speed: -0.149508878589
id: 0
t: 124
xxx after update is x: 2.98678874969
y: -7.96246099472
theta: 1.57941234112
speed: -0.0277612283826
id: 0
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: 2.98678874969
y: -7.96246099472
theta: 1.57941234112
speed: -0.0277612283826
id: 0
t: 125
xxx after update is x: 3.53710389137
y: -7.14739990234
theta: 1.46335041523
speed: -0.0358983315527
id: 0
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: 3.53710389137
y: -7.14739990234
theta: 1.46335041523
speed: -0.0358983315527
id: 0
t: 126
xxx after update is x: 3.07905817032
y: -7.69553899765
theta: 1.62194144726
speed: 0.466408669949
id: 0
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in r464
theta: 4.7580742836
speed: 13.7522144318
id: 1
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.7235275928217954, 0]
222 self.state_dicts[msg.id][msg.t] is (3.032057523727417, -7.532609462738037, 1.5940618515014648, 0.7393814921379089)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:121


xxx before update is x: -3.76656579971
y: 0.968540370464
theta: 4.7580742836
speed: 13.7522144318
id: 1
t: 120
xxx after update is x: -3.01329040527
y: 0.608044683933
theta: 4.71260118484
speed: 13.9579668045
id: 1
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: -3.01329040527
y: 0.608044683933
theta: 4.71260118484
speed: 13.9579668045
id: 1
t: 121
xxx after update is x: -3.83342194557
y: -1.20015406609
theta: 4.74011850357
speed: 13.851319313
id: 1
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.83342194557
y: -1.20015406609
theta: 4.74011850357
speed: 13.851319313
id: 1
t: 122
xxx after update is x: -3.40184092522
y: -0.771785318851
theta: 4.5642118454
speed: 14.1662025452
id: 1
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:123




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: -3.40184092522
y: -0.771785318851
theta: 4.5642118454
speed: 14.1662025452
id: 1
t: 123
xxx after update is x: -3.00254774094
y: -1.89029824734
theta: 4.52995109558
speed: 13.9599142075
id: 1
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.51111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:125


xxx before update is x: -3.00254774094
y: -1.89029824734
theta: 4.52995109558
speed: 13.9599142075
id: 1
t: 124
xxx after update is x: -2.94268655777
y: -2.19973492622
theta: 4.66584444046
speed: 14.2445421219
id: 1
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: -2.94268655777
y: -2.19973492622
theta: 4.66584444046
speed: 14.2445421219
id: 1
t: 125
xxx after update is x: -2.95067048073
y: -3.17939305305
theta: 4.64377164841
speed: 13.9955453873
id: 1
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: -2.95067048073
y: -3.17939305305
theta: 4.64377164841
speed: 13.9955453873
id: 1
t: 126
xxx after update is x: -3.0212521553
y: -3.74954843521
theta: 4.81237363815
speed: 14.0690746307
id: 1
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 5.64444444444
esopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 5.64444444444

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.644444444444445, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,5.64444444444,(3.0790581703186035, -7.6955389976501465, 1.6219414472579956),0,1,3.24444444444,0,left
!!!!change state to get
GET,0,5.64444444444,(3.0790581703186035, -7.6955389976501465, 1.6219414472579956),0,1,3.24444444444,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 5.64444444444
self.communication_details == 0
sending GET,0,5.64444444444,(3.0790581703186035, -7.6955389976501465, 1.6219414472579956),0,1,3.24444444444,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.64444444444






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0
Received -->>: 
current clock is 5.64444444444




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 5.64444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GRANT, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '5.64444444444', 'Position': ['(-3.0025477409362793', ' -1.8902982473373413', ' 4.529951095581055)'], 'Type': 'GRANT'}
car 0 received GRANT,1,5.64444444444,(-3.0025477409362793, -1.8902982473373413, 4.529951095581055),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.644444444444445, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [5.644444444444445, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: 3.07905817032
y: -7.69553899765
theta: 1.62194144726
speed: 0.466408669949
id: 0
t: 127
xxx after update is x: 2.9413497448
y: -7.13732719421
theta: 1.50586986542
speed: 0.10216999054
id: 0
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:129


xxx before update is x: 2.9413497448
y: -7.13732719421
theta: 1.50586986542
speed: 0.10216999054
id: 0
t: 128
xxx after update is x: 3.04769921303
y: -7.41781139374
theta: 1.53973066807
speed: 0.471462666988
id: 0
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: 3.04769921303
y: -7.41781139374
theta: 1.53973066807
speed: 0.471462666988
id: 0
t: 129
xxx after update is x: 3.29183864594
y: -7.705320835



maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 5.64444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.24444444444', 'Sender': '0', 'Time': '5.64444444444', 'IntendedCourse': 'left', 'Position': ['3.0790581703186035', ' -7.6955389976501465', ' 1.6219414472579956'], 'TagID': '0', 'Type': 'GET', 'Velocity': '0'}
car 1 received GET,0,5.64444444444,(3.0790581703186035, -7.6955389976501465, 1.6219414472579956),0,1,3.24444444444,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.250864197531
sender travel direction is:  north
sender earliest entering time is:  0.506167283848
sender last entering time is:  2.25086419753
sender last leaving time is:  4.62416245395
my entering time is:  0.250864197531
my leaving time is:  0.520896710195
i have left the intersection:  False
sender enters just im about to leave
time is  -0.014729426347
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, not conlicted
maneuver_negotiatir.py message_processing,!!dd342 change status to GRANT
self.grantID is 0
GRANT,1,5.64444444444,(-3.0025477409362793, -1.8902982473373413, 4.529951095581055),13,1,0,0
added car with id 0 to grantlist. current grantlist:  {0: [10.155555555555555, 'left']}
maneuver_negotiatir.py start the update_agent_message
current clock is 5.64444444444
self.communication_details == 0
sending GRANT,1,5.64444444444,(-3.0025477409362793, -1.8902982473373413, 4.529951095581055),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
current clock is 5.64444444444




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: -3.0212521553
y: -3.74954843521
theta: 4.81237363815
speed: 14.0690746307
id: 1
t: 127
xxx after update is x: -3.28343033791
y: -4.23510503769
theta: 4.51482343674
speed: 14.0936117172
id: 1
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:129


xxx before update is x: -3.28343033791
y: -4.23510503769
theta: 4.51482343674
speed: 14.0936117172
id: 1
t: 128
xxx after update is x: -3.24958777428
y: -4.63730859756
theta: 4.53258562088
speed: 14.1888475418
id: 1
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: -3.24958777428
y: -4.63730859756
theta: 4.53258562088
speed: 14.1888475418
id: 1
t: 129
xxx after update is x: -3.00338745117
y: -5.29438829422
theta: 4.67902803421
speed: 14.1831588745
id: 1
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.32490268099843406, 0.9995399123442925]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.00338745117
y: -5.29438829422
theta: 4.67902803421
speed: 14.1831588745
id: 1
t: 130
xxx after update is x: -2.76068997383
y: -5.62624073029
theta: 4.7390460968
speed: 13.9556503296
id: 1
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:131


222 self.state_dicts[msg.id][msg.t] is (2.811
theta: 1.55084252357
speed: 0.0628288835287
id: 0
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.7836938612208568, 2.03252e-318]
222 self.state_dicts[msg.id][msg.t] is (-3.003387451171875, -5.294388294219971, 4.679028034210205, 14.183158874511719)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:131


xxx before update is x: 3.29183864594
y: -7.70532083511
theta: 1.55084252357
speed: 0.0628288835287
id: 0
t: 130
xxx after update is x: 2.8022081852
y: -7.51261901855
theta: 1.38253605366
speed: -0.326761513948
id: 0
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: 2.8022081852
y: -7.51261901855
theta: 1.38253605366
speed: -0.326761513948
id: 0
t: 131
xxx after update is x: 3.05676412582
y: -7.36383771896
theta: 1.63673067093
speed: -0.213024780154
id: 0
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:133


xxx before update is x: 3.05676412582
y: -7.36383771896
theta: 1.63673067093
speed: -0.213024780154
id: 0
t: 132
xxx after update is x: 3.4592063427
y: -7.48236894608
theta: 1.6280837059
speed: 0.291260749102
id: 0
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: 3.4592063427
y: -7.48236894608
theta: 1.6280837059
speed: 0.291260749102
id: 0
t: 133
xxx after update is x: 2.9234919548
y: -7.40296030045
theta: 1.79257905483
speed: 0.0389064401388
id: 0
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.6703197922123966, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2737512588500977, -7.810510158538818, 4.634108066558838, 14.026800155639648)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:135


xxx before update is x: 2.9234919548
y: -7.40296030045
theta: 1.79257905483
speed: 0.0389064401388
id: 0
t: 134
xxx after update is x: 3.36214184761
y: -7.96319723129
theta: 1.76129412651
speed: 0.190852344036
id: 0
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.0






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.955555555555556, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 6.0
(RATE*SLOWDOWN) is 22.5
MR[0] is 5.95555555556
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
deny not in message
maneuver_negotiatir.py in the domaneuver function - start
added car with id 0 to grantlist. current grantlist:  {0: [10.777777777777779, 'left']}
Doing maneuver
maneuver_negotiatir.py finish the do maneuver function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxx02208185195923, -7.5126190185546875, 1.3825360536575317, -0.32676151394844055)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:132

xxx before update is x: -2.76068997383
y: -5.62624073029
theta: 4.7390460968
speed: 13.9556503296
id: 1
t: 131
xxx after update is x: -2.79598975182
y: -6.37168931961
theta: 4.79661226273
speed: 13.8032779694
id: 1
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion

maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.86666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:133


xxx before update is x: -2.79598975182
y: -6.37168931961
theta: 4.79661226273
speed: 13.8032779694
id: 1
t: 132
xxx after update is x: -2.84020185471
y: -6.99946784973
theta: 4.49384117126
speed: 13.5877380371
id: 1
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: -2.84020185471
y: -6.99946784973
theta: 4.49384117126
speed: 13.5877380371
id: 1
t: 133
xxx after update is x: -3.27375125885
y: -7.81051015854
theta: 4.63410806656
speed: 14.0268001556
id: 1
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.27375125885
y: -7.81051015854
theta: 4.63410806656
speed: 14.0268001556
id: 1
t: 134
xxx after update is x: -2.98970937729
y: -7.80500507355
theta: 4.70276641846
speed: 13.7865333557
id: 1
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:135


aaaaaa
aaaaaabbbbb
risk is [0.979431067388389, 0.9949235283824609]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.3621418476104736, -7.963197231292725, 1.7612941265106201, 0.1908523440361023)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: -2.98970937729
y: -7.80500507355
theta: 4.70276641846
speed: 13.7865333557
id: 1
t: 135
xxx after update is x: -3.04271221161
y: -8.90058898926
theta: 4.72913408279
speed: 13.4590759277
id: 1
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:137


xxx before update is x: -3.04271221161
y: -8.90058898926
theta: 4.72913408279
speed: 13.4590759277
id: 1
t: 136
xxx after update is x: -3.47214460373
y: -9.89792537689
theta: 4.6047949791
speed: 13.8941812515
id: 1
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.47214460373
y: -9.89792537689
theta: 4.6047949791
speed: 13.8941812515
id: 1
t: 137
xxx after update is x: -3.46363258362
y: -10.4044589996
theta: 4.91380834579
speed: 14.1949415207
id: 1
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update funxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: 3.36214184761
y: -7.96319723129
theta: 1.76129412651
speed: 0.190852344036
id: 0
t: 135
xxx after update is x: 3.73374247551
y: -7.20125865936
theta: 1.63887727261
speed: 0.164103850722
id: 0
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:137


xxx before update is x: 3.73374247551
y: -7.20125865936
theta: 1.63887727261
speed: 0.164103850722
id: 0
t: 136
xxx after update is x: 3.31184387207
y: -7.46253061295
theta: 1.40681290627
speed: 0.464944928885
id: 0
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.31184387207
y: -7.46253061295
theta: 1.40681290627
speed: 0.464944928885
id: 0
t: 137
xxx after update is x: 2.93414306641
y: -7.72767925262
theta: 1.64523530006
speed: 0.415673017502
id: 0
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:138




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:139


xxx before update is x: 2.93414306641
y: -7.72767925262
theta: 1.64523530006
speed: 0.415673017502
id: 0
t: 138
xxx after update is x: 3.53192830086
y: -7.940990448
theta: 1.44435119629
speed: 0.815566182137
id: 0
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: 3.53192830086
y: -7.940990448
theta: 1.44435119629
speed: 0.815566182137
id: 0
t: 139
xxx after update is x: 3.17448735237
y: -7.54067182541
theta: 1.69856071472
speed: 1.11515879631
id: 0
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.8905880700429238, 0.08887683854972236]
222 self.state_dicts[msg.id][msg.t] is (-3.474804162979126, -11.808055877685547, 4.711093425750732, 13.834217071533203)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: 3.17448735237
y: -7.54067182541
theta: 1.69856071472
speed: 1.11515879631
id: 0
t: 140
xxx after update is x: 3.29053139687
y: -7.4921541214
theta: 1.61156392097
speed: 1.66568183899
id: 0
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: 3.29053139687
y: -7.4921541214
theta: 1.61156392097
speed: 1.66568183899
id: 0
t: 141
xxx after update is x: 3.11288714409
y: -7.17352056503
theta: 1.54840028286
speed: 1.90105640888
id: 0
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: 3.11288714409
y: -7.17352056503
theta: 1.54840028286
speed: 1.90105640888
id: 0
t: 142
xxx after update is x: 3.50662875175
y: -7.54467582703
theta: 1.48968923092
speed: 1.91875815392
id: 0
t: 143
maneuver_negotiatir.py finish the update agent state from ros ction 
in spin function, finish the n times spin:138




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:139


xxx before update is x: -3.46363258362
y: -10.4044589996
theta: 4.91380834579
speed: 14.1949415207
id: 1
t: 138
xxx after update is x: -2.8844063282
y: -10.7360715866
theta: 4.84076452255
speed: 13.9886713028
id: 1
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.17777777778






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:140


maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: -2.8844063282
y: -10.7360715866
theta: 4.84076452255
speed: 13.9886713028
id: 1
t: 139
xxx after update is x: -3.47480416298
y: -11.8080558777
theta: 4.71109342575
speed: 13.8342170715
id: 1
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.9129077076088699, 0.5071999999999981]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.174487352371216, -7.5406718254089355, 1.6985607147216797, 1.1151587963104248)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: -3.47480416298
y: -11.8080558777
theta: 4.71109342575
speed: 13.8342170715
id: 1
t: 140
xxx after update is x: -3.29317903519
y: -11.6272258759
theta: 4.68525743484
speed: 13.392364502
id: 1
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: -3.29317903519
y: -11.6272258759
theta: 4.68525743484
speed: 13.392364502
id: 1
t: 141
xxx after update is x: -3.71435880661
y: -12.6062250137
theta: 4.74090385437
speed: 13.9707336426
id: 1
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: -3.71435880661
y: -12.6062250137
theta: 4.74090385437
speed: 13.9707336426
id: 1
t: 142
xxx after update is x: -2.80166268349
y: -13.2146072388
theta: 4.56781578064
speed: 14.139295578
id: 1
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: -2.80166268349
y: -13.2146072388
theta: 4.56781578064
speed: 14.139295578
id: 1
t: 143
xxx after update is x: -3.07246375084
y: -13.6721363068
theta: 4.63804960251
speed: 13.8460111618
id: 1
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: -3.07246375084
y: -13.6721363068
theta: 4.63804960251
speed: 13.8460111618
id: 1
t: 144
xxx after update is x: -3.09308767319
y: -14.8869104385
theta: 4.8085269928
speed: 13.4868535995
id: 1
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaafuntion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.50662875175
y: -7.54467582703
theta: 1.48968923092
speed: 1.91875815392
id: 0
t: 143
xxx after update is x: 3.08219742775
y: -7.49968671799
theta: 1.59267437458
speed: 1.74175989628
id: 0
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:144




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: 3.08219742775
y: -7.49968671799
theta: 1.59267437458
speed: 1.74175989628
id: 0
t: 144
xxx after update is x: 3.13465762138
y: -6.73927116394
theta: 1.52971816063
speed: 2.17759776115
id: 0
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.13465762138
y: -6.73927116394
theta: 1.52971816063
speed: 2.17759776115
id: 0
t: 145
xxx after update is x: 2.943151474
y: -6.8590965271
theta: 1.47044038773
speed: 2.6546599865
id: 0
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:146


aaaaaa
risk is [0.004326620028577927, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3794186115264893, -15.215768814086914, 4.76425838470459, 13.958823204040527)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.943151474
y: -6.8590965271
theta: 1.47044038773
speed: 2.6546599865
id: 0
t: 146
xxx after update is x: 2.80428791046
y: -6.99086332321
theta: 1.49794852734
speed: 2.55384349823
id: 0
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:147




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: 2.80428791046
y: -6.99086332321
theta: 1.49794852734
speed: 2.55384349823
id: 0
t: 147
xxx after update is x: 3.75651216507
y: -6.48885393143
theta: 1.83048844337
speed: 3.57388114929
id: 0
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.75651216507
y: -6.48885393143
theta: 1.83048844337
speed: 3.57388114929
id: 0
t: 148
xxx after update is x: 3.21995139122
y: -7.20300579071
theta: 1.65586137772
speed: 3.37793922424
id: 0
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:149




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: 3.21995139122
y: -7.20300579071
theta: 1.65586137772
speed: 3.37793922424
id: 0
t: 149
xxx after update is x: 3.7275326252
y: -6.43390703201
theta: 1.49528551102
speed: 3.64375591278
id: 0
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.7275326252
y: -6.43390703201
theta: 1.49528551102
speed: 3.64375591278
id: 0
t: 150
xxx after update is x: 3.6121275425
y: -6.26927185059
theta: 1.6701375246
speed: 4.10103845596
id: 0
t: 151
maneuver_negotiatir.py finish the update agent state from ra
aaaaaabbbbb
risk is [0.1869024015495767, 0.4927999999999979]
222 self.state_dicts[msg.id][msg.t] is (3.134657621383667, -6.73927116394043, 1.5297181606292725, 2.177597761154175)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:146


xxx before update is x: -3.09308767319
y: -14.8869104385
theta: 4.8085269928
speed: 13.4868535995
id: 1
t: 145
xxx after update is x: -3.37941861153
y: -15.2157688141
theta: 4.7642583847
speed: 13.958823204
id: 1
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: -3.37941861153
y: -15.2157688141
theta: 4.7642583847
speed: 13.958823204
id: 1
t: 146
xxx after update is x: -3.32033276558
y: -15.4743909836
theta: 4.60688924789
speed: 13.5124359131
id: 1
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.53333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: -3.32033276558
y: -15.4743909836
theta: 4.60688924789
speed: 13.5124359131
id: 1
t: 147
xxx after update is x: -3.69718074799
y: -16.3800621033
theta: 4.81117200851
speed: 13.5579013824
id: 1
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
!!! change status from grant to normal
current clock is 6.57777777778
!!!threading.Timer
tgarnt done
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: -3.69718074799
y: -16.3800621033
theta: 4.81117200851
speed: 13.5579013824
id: 1
t: 148
xxx after update is x: -3.46168804169
y: -16.6757602692
theta: 4.7126955986
speed: 13.4140129089
id: 1
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.46168804169
y: -16.6757602692
theta: 4.7126955986
speed: 13.4140129089
id: 1
t: 149
xxx after update is x: -3.14796686172
y: -17.8488540649
theta: 4.73149871826
speed: 13.9596033096
id: 1
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:150


aaaaaa
aaaaaabbbbb
risk is [7.946145856057511e-11, 0.48799999999999794]
222 self.state_dicts[msg.id][msg.t] is (3.7275326251983643, -6.4339070320129395, 1.4952855110168457, 3.6437559127807617)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: -3.14796686172
y: -17.8488540649
theta: 4.73149871826
speed: 13.9596033096
id: 1
t: 150
xxx after update is x: -3.40999126434
y: -17.8177375793
theta: 4.75881910324
speed: 13.4231023788
id: 1
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:152


xxx before update is x: -3.40999126434
y: -17.8177375793
theta: 4.75881910324
speed: 13.4231023788
id: 1
t: 151
xxx after update is x: -3.11381363869
y: -18.7933425903
theta: 4.70567512512
speed: 13.6943979263
id: 1
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:153


xxx before update is x: -3.11381363869
y: -18.7933425903
theta: 4.70567512512
speed: 13.6943979263
id: 1
t: 152
xxx after update is x: -3.0365717411
y: -20.0040988922
theta: 4.79418325424
speed: 14.0180435181
id: 1
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:154


xxx before update is x: -3.0365717411
y: -20.0040988922
theta: 4.79418325424
speed: 14.0180435181
id: 1
t: 153
xxx after update is x: -3.68930196762
y: -19.8535366058
theta: 4.53990745544
speed: 13.7794857025
id: 1
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
tgarnt done
aaaaaa
aaaaaabbbbb
risk is [1.0570209720393537e-74, 0.5311999999999988]
222 self.state_dicts[msg.id][msg.t] is (3.5613789558410645, -5.782162666320801, 1.4892414808273315, 5.063236236572266)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:155


xxx before update is x: -3.68930196762
y: -19.8535366058
theta: 4.53990745544
speed: 13.7794857025
id: 1
t: 154
xxx after update is x: -3.36056804657
y: -20.1098804474
theta: 4.83796787262
speed: 13.9703483582
id: 1
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.88888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: -3.36056804657
y: -20.1098804474
theta: 4.83796787262
speed: 13.9703483582
id: 1
t: 155
xxx after update is x: -2.99046993256
y: -21.1065101624
theta: 4.8090171814
speed: 13.989812851
id: 1
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: -2.99046993256
y: -21.1065101624
theta: 4.8090171814
speed: 13.989812851
id: 1
t: 156
xxx after update is x: -3.38713145256
y: -21.4740886688
theta: 4.53221511841
speed: 13.8722581863
id: 1
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: -3.38713145256
y: -21.4740886688
theta: 4.53221511841
speed: 13.8722581863
id: 1
t: 157
xxx after update is x: -3.05592060089
y: -22.5553417206
theta: 4.87293720245
speed: 13.6411542892
id: 1
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [7.216238085551275eos funtion
leave the update function 
in spin function, finish the n times spin:151


aaaaaa


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.6121275425
y: -6.26927185059
theta: 1.6701375246
speed: 4.10103845596
id: 0
t: 151
xxx after update is x: 3.41725850105
y: -6.25904369354
theta: 1.56529474258
speed: 4.1205945015
id: 0
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:152


risk is [7.779196144513418e-32, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.113813638687134, -18.79334259033203, 4.70567512512207, 13.694397926330566)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:153


xxx before update is x: 3.41725850105
y: -6.25904369354
theta: 1.56529474258
speed: 4.1205945015
id: 0
t: 152
xxx after update is x: 3.03930425644
y: -6.24362182617
theta: 1.50512206554
speed: 4.42400455475
id: 0
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:154


xxx before update is x: 3.03930425644
y: -6.24362182617
theta: 1.50512206554
speed: 4.42400455475
id: 0
t: 153
xxx after update is x: 3.56137895584
y: -5.78216266632
theta: 1.48924148083
speed: 5.06323623657
id: 0
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:155


xxx before update is x: 3.56137895584
y: -5.78216266632
theta: 1.48924148083
speed: 5.06323623657
id: 0
t: 154
xxx after update is x: 3.07415604591
y: -5.47922182083
theta: 1.65301096439
speed: 5.32120323181
id: 0
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: 3.07415604591
y: -5.47922182083
theta: 1.65301096439
speed: 5.32120323181
id: 0
t: 155
xxx after update is x: 3.28361773491
y: -5.14868974686
theta: 1.51885378361
speed: 5.14476394653
id: 0
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [2.4170268911673878e-95, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.9904699325561523, -21.106510162353516, 4.809017181396484, 13.989812850952148)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: 3.28361773491
y: -5.14868974686
theta: 1.51885378361
speed: 5.14476394653
id: 0
t: 156
xxx after update is x: 3.00071525574
y: -5.03192424774
theta: 1.61782622337
speed: 5.49000740051
id: 0
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.00071525574
y: -5.03192424774
theta: 1.61782622337
speed: 5.49000740051
id: 0
t: 157
xxx after update is x: 2.77739477158
y: -4.89868831635
theta: 1.94023680687
speed: 6.14079046249
id: 0
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:158




going to the-146, 0.46879999999999805]
222 self.state_dicts[msg.id][msg.t] is (2.7773947715759277, -4.898688316345215, 1.9402368068695068, 6.1407904624938965)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:159


xxx before update is x: -3.05592060089
y: -22.5553417206
theta: 4.87293720245
speed: 13.6411542892
id: 1
t: 158
xxx after update is x: -2.54660224915
y: -22.8919563293
theta: 4.69872379303
speed: 13.8899927139
id: 1
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:160


xxx before update is x: -2.54660224915
y: -22.8919563293
theta: 4.69872379303
speed: 13.8899927139
id: 1
t: 159
xxx after update is x: -3.19032621384
y: -23.8694133759
theta: 4.70155858994
speed: 13.9058246613
id: 1
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: -3.19032621384
y: -23.8694133759
theta: 4.70155858994
speed: 13.9058246613
id: 1
t: 160
xxx after update is x: -3.19625020027
y: -24.2514076233
theta: 4.80238294601
speed: 13.9678525925
id: 1
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: -3.19625020027
y: -24.2514076233
theta: 4.80238294601
speed: 13.9678525925
id: 1
t: 161
xxx after update is x: -3.39101648331
y: -24.8829650879
theta: 4.55332231522
speed: 14.0742368698
id: 1
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [4.377032679469099e-223, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (2.705747604370117, -3.760592460632324, 1.7623209953308105, 6.982855319976807)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.2






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:163


xxx before update is x: -3.39101648331
y: -24.8829650879
theta: 4.55332231522
speed: 14.0742368698
id: 1
t: 162
xxx after update is x: -3.72761869431
y: -25.3762435913
theta: 4.6981306076
speed: 13.9678993225
id: 1
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: -3.72761869431
y: -25.3762435913
theta: 4.6981306076
speed: 13.9678993225
id: 1
t: 163
xxx after update is x: -3.1114885807
y: -26.0556640625
theta: 4.65116024017
speed: 13.5418548584
id: 1
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.1114885807
y: -26.0556640625
theta: 4.65116024017
speed: 13.5418548584
id: 1
t: 164
xxx after update is x: -3.19333291054 update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.77739477158
y: -4.89868831635
theta: 1.94023680687
speed: 6.14079046249
id: 0
t: 158
xxx after update is x: 3.30509591103
y: -4.63434505463
theta: 1.77155673504
speed: 6.31831932068
id: 0
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:159




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:160


xxx before update is x: 3.30509591103
y: -4.63434505463
theta: 1.77155673504
speed: 6.31831932068
id: 0
t: 159
xxx after update is x: 2.6962211132
y: -3.87366652489
theta: 1.59778106213
speed: 6.36251831055
id: 0
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: 2.6962211132
y: -3.87366652489
theta: 1.59778106213
speed: 6.36251831055
id: 0
t: 160
xxx after update is x: 3.25737190247
y: -3.61159920692
theta: 1.75663924217
speed: 6.39161729813
id: 0
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [2.8359445334867337e-156, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1962502002716064, -24.251407623291016, 4.802382946014404, 13.967852592468262)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: 3.25737190247
y: -3.61159920692
theta: 1.75663924217
speed: 6.39161729813
id: 0
t: 161
xxx after update is x: 2.70574760437
y: -3.76059246063
theta: 1.76232099533
speed: 6.98285531998
id: 0
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:163


xxx before update is x: 2.70574760437
y: -3.76059246063
theta: 1.76232099533
speed: 6.98285531998
id: 0
t: 162
xxx after update is x: 2.74386978149
y: -3.34351158142
theta: 1.90912687778
speed: 7.17216348648
id: 0
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: 2.74386978149
y: -3.34351158142
theta: 1.90912687778
speed: 7.17216348648
id: 0
t: 163
xxx after update is x: 2.68541264534
y: -3.23670220375
theta: 1.78896641731
speed: 7.45996856689
id: 0
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:165


xxx before update is x: 2.68541264534
y: -3.23670220375
theta: 1.78896641731
speed: 7.45996856689
id: 0
t: 164
xxx after update is x: 2.22886562347
y: -2.74888896942
theta: 2.04192256927
speed: 7.84547710419
id: 0
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.22886562347
y: -2.74888896942
theta: 2.04192256927
speed: 7.84547710419
id: 0
t: 165
xxx after update is x: 2.1750369072
y: -2.9931178093
theta: 2.04592823982
speed: 8.25618934631
id: 0
t: 166
maneuver_negotiatir.py finish the update agent state from ros 
y: -27.0142860413
theta: 4.74858188629
speed: 13.8933391571
id: 1
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:165


aaaaaa
aaaaaabbbbb
risk is [8.12815691598287e-299, 0.476799999999998]
222 self.state_dicts[msg.id][msg.t] is (2.228865623474121, -2.7488889694213867, 2.0419225692749023, 7.845477104187012)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:166


xxx before update is x: -3.19333291054
y: -27.0142860413
theta: 4.74858188629
speed: 13.8933391571
id: 1
t: 165
xxx after update is x: -3.28315114975
y: -27.2916259766
theta: 4.66210317612
speed: 13.8113088608
id: 1
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: -3.28315114975
y: -27.2916259766
theta: 4.66210317612
speed: 13.8113088608
id: 1
t: 166
xxx after update is x: -3.37324786186
y: -27.6900024414
theta: 4.78110122681
speed: 13.9439353943
id: 1
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: -3.37324786186
y: -27.6900024414
theta: 4.78110122681
speed: 13.9439353943
id: 1
t: 167
xxx after update is x: -3.22122955322
y: -28.6848373413
theta: 4.73084926605
speed: 14.2908391953
id: 1
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: -3.22122955322
y: -28.6848373413
theta: 4.73084926605
speed: 14.2908391953
id: 1
t: 168
xxx after update is x: -2.80988669395
y: -28.9211368561
theta: 4.71329641342
speed: 13.8246116638
id: 1
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (2.106964349746704, -1.6413369178771973, 2.0923714637756348, 8.580577850341797)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: -2.80988669395
y: -28.9211368561
theta: 4.71329641342
speed: 13.8246116638
id: 1
t: 169
xxx after update is x: -3.43463659286
y: -29.9390621185
theta: 4.68101453781
speed: 13.5137357712
id: 1
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.55555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.43463659286
y: -29.9390621185
theta: 4.68101453781
speed: 13.5137357712
id: 1
t: 170
xxx after update is x: -3.45096111298
y: -30.3480796814
theta: 4.80417728424
speed: 13.7411174774
id: 1
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:171




going to the update function
sim.py in the sim.py update funcfuntion
leave the update function 
in spin function, finish the n times spin:166


risk is [1.1165223793254778e-257, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.283151149749756, -27.2916259765625, 4.662103176116943, 13.811308860778809)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: 2.1750369072
y: -2.9931178093
theta: 2.04592823982
speed: 8.25618934631
id: 0
t: 166
xxx after update is x: 2.15967035294
y: -2.7259926796
theta: 2.02259159088
speed: 8.37640762329
id: 0
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.15967035294
y: -2.7259926796
theta: 2.02259159088
speed: 8.37640762329
id: 0
t: 167
xxx after update is x: 1.8705085516
y: -2.44387435913
theta: 2.1858921051
speed: 8.50737953186
id: 0
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:168




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 1.8705085516
y: -2.44387435913
theta: 2.1858921051
speed: 8.50737953186
id: 0
t: 168
xxx after update is x: 2.10696434975
y: -1.64133691788
theta: 2.09237146378
speed: 8.58057785034
id: 0
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:169




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.10696434975
y: -1.64133691788
theta: 2.09237146378
speed: 8.58057785034
id: 0
t: 169
xxx after update is x: 1.8719432354
y: -1.67536997795
theta: 2.30925750732
speed: 9.20432376862
id: 0
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:170


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4346365928649902, -29.939062118530273, 4.681014537811279, 13.5137357711792)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:171


xxx before update is x: 1.8719432354
y: -1.67536997795
theta: 2.30925750732
speed: 9.20432376862
id: 0
t: 170
xxx after update is x: 1.37115514278
y: -0.839882552624
theta: 2.46837091446
speed: 9.51498889923
id: 0
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 1.37115514278
y: -0.839882552624
theta: 2.46837091446
speed: 9.51498889923
id: 0
t: 171
xxx after update is x: 1.01619148254
y: -0.21056561172
theta: 2.33992052078
speed: 9.86069297791
id: 0
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:172




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 1.01619148254
y: -0.21056561172
theta: 2.33992052078
speed: 9.86069297791
id: 0
t: 172
xxx after update is x: 0.804235816002
y: -0.244011357427
theta: 2.26918554306
speed: 10.02684021
id: 0
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:173




going to the update function
sim.py in the sition 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: -3.45096111298
y: -30.3480796814
theta: 4.80417728424
speed: 13.7411174774
id: 1
t: 171
xxx after update is x: -3.11363482475
y: -31.4926815033
theta: 4.80568265915
speed: 13.9160251617
id: 1
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.11363482475
y: -31.4926815033
theta: 4.80568265915
speed: 13.9160251617
id: 1
t: 172
xxx after update is x: -3.43904733658
y: -31.623374939
theta: 4.45394945145
speed: 13.8688840866
id: 1
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:173




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.43904733658
y: -31.623374939
theta: 4.45394945145
speed: 13.8688840866
id: 1
t: 173
xxx after update is x: -3.26333475113
y: -32.1517601013
theta: 4.70962667465
speed: 14.0988826752
id: 1
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:174




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.26333475113
y: -32.1517601013
theta: 4.70962667465
speed: 14.0988826752
id: 1
t: 174
xxx after update is x: -3.43269753456
y: -33.3586158752
theta: 4.71805334091
speed: 13.7329750061
id: 1
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:175




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: -3.43269753456
y: -33.3586158752
theta: 4.71805334091
speed: 13.7329750061
id: 1
t: 175
xxx after update is x: -3.66436386108
y: -33.7873268127
theta: 4.82187700272
speed: 13.8425645828
id: 1
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:177


xxx before update is x: -3.66436386108
y: -33.7873268127
theta: 4.82187700272
speed: 13.8425645828
id: 1
t: 176
xxx after update is x: -3.67430901527
y: -34.3093566895
theta: 4.6627831459
speed: 13.817688942
id: 1
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-0.6666666269302368, 1.284290075302124, 2.5522401332855225, 10.58597469329834)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: -3.67430901527
y: -34.3093566895
theta: 4.6627831459
speed: 13.817688942
id: 1
t: 177
xxx after update is x: -2.98729944229
y: -34.699054718
theta: 4.50111484528
speed: 13.8423519135
id: 1
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.91111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spinm.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: 0.804235816002
y: -0.244011357427
theta: 2.26918554306
speed: 10.02684021
id: 0
t: 173
xxx after update is x: -0.102776095271
y: -0.307734340429
theta: 2.54526758194
speed: 9.9756860733
id: 0
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: -0.102776095271
y: -0.307734340429
theta: 2.54526758194
speed: 9.9756860733
id: 0
t: 174
xxx after update is x: 0.531709551811
y: 0.251454085112
theta: 2.44436860085
speed: 10.7342700958
id: 0
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 0.531709551811
y: 0.251454085112
theta: 2.44436860085
speed: 10.7342700958
id: 0
t: 175
xxx after update is x: -0.0641833916306
y: 0.457462668419
theta: 2.46062588692
speed: 10.8990812302
id: 0
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:176




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:177


xxx before update is x: -0.0641833916306
y: 0.457462668419
theta: 2.46062588692
speed: 10.8990812302
id: 0
t: 176
xxx after update is x: -0.66666662693
y: 1.2842900753
theta: 2.55224013329
speed: 10.5859746933
id: 0
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.674309015274048, -34.309356689453125, 4.662783145904541, 13.817688941955566)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: -0.66666662693
y: 1.2842900753
theta: 2.55224013329
speed: 10.5859746933
id: 0
t: 177
xxx after update is x: -1.12835633755
y: 1.49950051308
theta: 2.66291499138
speed: 11.2606840134
id: 0
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: -1.12835633755
y: 1.49950051308
theta: 2.66291499138
speed: 11.2606840134
id: 0
t: 178
xxx after update is x: -1.57248294353
y: 1.06034588814
theta: 2.57550811768
speed: 11.1989774704
id: 0
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:180


xxx before update is x: -1.57248294353
y: 1.06034588814
theta: 2.57550811768
speed: 11.1989774704
id: 0
t: 179
xxx after update is x: -1.66382908821
y: 1.42253363132
theta: 2.72020792961
speed: 11.9319162369
id: 0
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -1.66382908821
y: 1.42253363132
theta: 2.72020792961
speed: 11.9319162369
id: 0
t: 180
xxx after update is x: -2.26414465904
y: 1.85074591637
theta: 2.60968375206
speed: 11.9083843231
id: 0
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin func:179

xxx before update is x: -2.98729944229
y: -34.699054718
theta: 4.50111484528
speed: 13.8423519135
id: 1
t: 178
xxx after update is x: -3.27751255035
y: -35.8782081604
theta: 4.63855981827
speed: 13.9555006027
id: 1
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion

************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:180


xxx before update is x: -3.27751255035
y: -35.8782081604
theta: 4.63855981827
speed: 13.9555006027
id: 1
t: 179
xxx after update is x: -3.06177353859
y: -36.5012321472
theta: 4.64387226105
speed: 13.7069196701
id: 1
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5231999999999986]
222 self.state_dicts[msg.id][msg.t] is (-1.6638290882110596, 1.422533631324768, 2.720207929611206, 11.931916236877441)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:181


xxx before update is x: -3.06177353859
y: -36.5012321472
theta: 4.64387226105
speed: 13.7069196701
id: 1
t: 180
xxx after update is x: -3.74016714096
y: -36.4020652771
theta: 4.65119695663
speed: 13.8682613373
id: 1
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:182


xxx before update is x: -3.74016714096
y: -36.4020652771
theta: 4.65119695663
speed: 13.8682613373
id: 1
t: 181
xxx after update is x: -3.39673495293
y: -37.4353713989
theta: 4.53468751907
speed: 13.9961776733
id: 1
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:183


xxx before update is x: -3.39673495293
y: -37.4353713989
theta: 4.53468751907
speed: 13.9961776733
id: 1
t: 182
xxx after update is x: -3.53187894821
y: -38.1941986084
theta: 4.64696836472
speed: 13.9373474121
id: 1
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: -3.53187894821
y: -38.1941986084
theta: 4.64696836472
speed: 13.9373474121
id: 1
t: 183
xxx after update is x: -3.44075059891
y: -38.6889572144
theta: 4.65319681168
speed: 13.8143777847
id: 1
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:185


xxx before update is x: -3.44075059891
y: -38.6889572144
theta: 4.65319681168
speed: 13.8143777847
id: 1
t: 184
xxx after update is x: -3.10939836502
y: -38.9866676331
theta: 4.69918107986
speed: 13.7225055695
id: 1
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.22222222222






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: -3.10939836502
y: -38.9866676331
theta: 4.69918107986
speed: 13.7225055695
id: 1
t: 185
xxx after update is x: -3.32249331474
y: -39.4956817627
theta: 4.81695tion, finish the n times spin:181


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.7401671409606934, -36.40206527709961, 4.6511969566345215, 13.868261337280273)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:182


xxx before update is x: -2.26414465904
y: 1.85074591637
theta: 2.60968375206
speed: 11.9083843231
id: 0
t: 181
xxx after update is x: -2.81032729149
y: 2.71967673302
theta: 2.60752391815
speed: 12.6274557114
id: 0
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:183


xxx before update is x: -2.81032729149
y: 2.71967673302
theta: 2.60752391815
speed: 12.6274557114
id: 0
t: 182
xxx after update is x: -3.04396653175
y: 1.90620291233
theta: 2.65846776962
speed: 12.5111217499
id: 0
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: -3.04396653175
y: 1.90620291233
theta: 2.65846776962
speed: 12.5111217499
id: 0
t: 183
xxx after update is x: -3.59318184853
y: 2.14536213875
theta: 2.92450976372
speed: 13.1213274002
id: 0
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:185


xxx before update is x: -3.59318184853
y: 2.14536213875
theta: 2.92450976372
speed: 13.1213274002
id: 0
t: 184
xxx after update is x: -4.32540512085
y: 2.59987092018
theta: 2.89562749863
speed: 12.9933900833
id: 0
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: -4.32540512085
y: 2.59987092018
theta: 2.89562749863
speed: 12.9933900833
id: 0
t: 185
xxx after update is x: -4.91548299789
y: 2.47882938385
theta: 3.13940739632
speed: 13.0226926804
id: 0
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -4.91548299789
y: 2.47882938385
theta: 3.13940739632
speed: 13.0226926804
id: 0
t: 186
xxx after update is x: -5.2154173851
y: 2.80591225624
theta: 2.93517756462
speed: 13.3648376465
id: 0
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:187




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -5.2154173851
y: 2.80591225624
theta: 2.93517756462
speed: 13.3648376465
id: 0
t: 187
xxx after update is x: -6.09400320053
y: 2.87856602669
theta: 3.30807590485
speed: 13.7093524933
id: 0
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:188


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.197810411453247, -40.7501106262207, 4.666306972503662, 14.102555274963379)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxx079803
speed: 14.2323541641
id: 1
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: -3.32249331474
y: -39.4956817627
theta: 4.81695079803
speed: 14.2323541641
id: 1
t: 186
xxx after update is x: -3.66951346397
y: -40.7190666199
theta: 4.60904598236
speed: 13.7504043579
id: 1
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.479999999999998]
222 self.state_dicts[msg.id][msg.t] is (-5.215417385101318, 2.8059122562408447, 2.9351775646209717, 13.364837646484375)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:188


xxx before update is x: -3.66951346397
y: -40.7190666199
theta: 4.60904598236
speed: 13.7504043579
id: 1
t: 187
xxx after update is x: -3.19781041145
y: -40.7501106262
theta: 4.6663069725
speed: 14.102555275
id: 1
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: -3.19781041145
y: -40.7501106262
theta: 4.6663069725
speed: 14.102555275
id: 1
t: 188
xxx after update is x: -2.81067872047
y: -41.2930145264
theta: 4.76439285278
speed: 13.8400554657
id: 1
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: -2.81067872047
y: -41.2930145264
theta: 4.76439285278
speed: 13.8400554657
id: 1
t: 189
xxx after update is x: -3.43225026131
y: -42.2158851624
theta: 4.82332897186
speed: 13.7648162842
id: 1
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.475199999999998]
222 self.state_dicts[msg.id][msg.t] is (-7.5822248458862305, 3.4197707176208496, 2.957292079925537, 13.88536262512207)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -3.43225026131
y: -42.2158851624
theta: 4.82332897186
speed: 13.7648162842
id: 1
t: 190
xxx after update is x: -3.01859354973
y: -43.3755607605
theta: 4.85156679153
speed: 13.7936134338
id: 1
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:192


xxx before update is x: -3.01859354973
y: -43.3755607605
theta: 4.85156679153
speed: 13.7936134338
id: 1
t: 191
xxx after update is x: -3.37535214424
y: -43.6320343018
theta: 4.55926179886
speed: 13.7267417908
id: 1
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:193


xxx before update is x: -3.375xxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: -6.09400320053
y: 2.87856602669
theta: 3.30807590485
speed: 13.7093524933
id: 0
t: 188
xxx after update is x: -6.88616514206
y: 2.93188214302
theta: 3.07084035873
speed: 13.8155841827
id: 0
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: -6.88616514206
y: 2.93188214302
theta: 3.07084035873
speed: 13.8155841827
id: 0
t: 189
xxx after update is x: -7.58222484589
y: 3.41977071762
theta: 2.95729207993
speed: 13.8853626251
id: 0
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -7.58222484589
y: 3.41977071762
theta: 2.95729207993
speed: 13.8853626251
id: 0
t: 190
xxx after update is x: -7.89713764191
y: 3.37857365608
theta: 3.00523853302
speed: 14.0223741531
id: 0
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -7.89713764191
y: 3.37857365608
theta: 3.00523853302
speed: 14.0223741531
id: 0
t: 191
xxx after update is x: -8.49333381653
y: 3.60776519775
theta: 3.21741366386
speed: 13.9950532913
id: 0
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:192


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.375352144241333, -43.63203430175781, 4.559261798858643, 13.726741790771484)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:193


xxx before update is x: -8.49333381653
y: 3.60776519775
theta: 3.21741366386
speed: 13.9950532913
id: 0
t: 192
xxx after update is x: -8.97584342957
y: 3.45380449295
theta: 2.97634339333
speed: 14.0434141159
id: 0
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:194


xxx before update is x: -8.97584342957
y: 3.45380449295
theta: 2.97634339333
speed: 14.0434141159
id: 0
t: 193
xxx after update is x: -10.2223577499
y: 3.69655585289
theta: 3.21753811836
speed: 13.5797719955
id: 0
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:195


xxx before update is x: -10.2223577499
y: 3.69655585289
theta: 3.21753811836
speed: 13.5797719955
id: 0
t: 194
xxx after update is x: -10.5315275192
y: 3.47448968887
theta: 3.07157111168
speed: 14.166349411
id: 0
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.47170090675354, -45.686378479003906, 4.768773078918457, 13.956855773925781)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:196


xxx before update is x: -10.5315275192
35214424
y: -43.6320343018
theta: 4.55926179886
speed: 13.7267417908
id: 1
t: 192
xxx after update is x: -3.07151675224
y: -44.2243003845
theta: 4.6757311821
speed: 13.7431020737
id: 1
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48799999999999794]
222 self.state_dicts[msg.id][msg.t] is (-8.97584342956543, 3.4538044929504395, 2.9763433933258057, 14.043414115905762)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.57777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:194


xxx before update is x: -3.07151675224
y: -44.2243003845
theta: 4.6757311821
speed: 13.7431020737
id: 1
t: 193
xxx after update is x: -3.20983481407
y: -44.9065208435
theta: 4.5846657753
speed: 14.336520195
id: 1
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.20983481407
y: -44.9065208435
theta: 4.5846657753
speed: 14.336520195
id: 1
t: 194
xxx after update is x: -3.47170090675
y: -45.686378479
theta: 4.76877307892
speed: 13.9568557739
id: 1
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:195




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:196


xxx before update is x: -3.47170090675
y: -45.686378479
theta: 4.76877307892
speed: 13.9568557739
id: 1
t: 195
xxx after update is x: -3.17774605751
y: -46.1756973267
theta: 4.65066146851
speed: 14.1040315628
id: 1
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5135999999999983]
222 self.state_dicts[msg.id][msg.t] is (-10.470580101013184, 3.6779425144195557, 3.0971109867095947, 14.096673011779785)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -3.17774605751
y: -46.1756973267
theta: 4.65066146851
speed: 14.1040315628
id: 1
t: 196
xxx after update is x: -3.27301001549
y: -46.6321372986
theta: 4.78798103333
speed: 13.8532676697
id: 1
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:198


xxx before update is x: -3.27301001549
y: -46.6321372986
theta: 4.78798103333
speed: 13.8532676697
id: 1
t: 197
xxx after update is x: -3.65738892555
y: -47.3369598389
theta: 4.79654121399
speed: 13.7594003677
id: 1
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:199


xxx before update is x: -3.65738892555
y: -47.3369598389
theta: 4.79654121399
speed: 13.7594003677
id: 1
t: 198
xxx after update is x: -3.83116579056
y: -47.8704223633
theta: 4.5666847229
speed: 13.6143732071
id: 1
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**************y: 3.47448968887
theta: 3.07157111168
speed: 14.166349411
id: 0
t: 195
xxx after update is x: -10.470580101
y: 3.67794251442
theta: 3.09711098671
speed: 14.0966730118
id: 0
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -10.470580101
y: 3.67794251442
theta: 3.09711098671
speed: 14.0966730118
id: 0
t: 196
xxx after update is x: -11.7117652893
y: 3.53678965569
theta: 3.39697170258
speed: 14.0242519379
id: 0
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:198


xxx before update is x: -11.7117652893
y: 3.53678965569
theta: 3.39697170258
speed: 14.0242519379
id: 0
t: 197
xxx after update is x: -12.9882726669
y: 3.21780252457
theta: 3.1237719059
speed: 14.0369138718
id: 0
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:199


xxx before update is x: -12.9882726669
y: 3.21780252457
theta: 3.1237719059
speed: 14.0369138718
id: 0
t: 198
xxx after update is x: -12.6501235962
y: 3.10660648346
theta: 3.22791838646
speed: 13.7949495316
id: 0
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.8311657905578613, -47.87042236328125, 4.566684722900391, 13.614373207092285)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: -12.6501235962
y: 3.10660648346
theta: 3.22791838646
speed: 13.7949495316
id: 0
t: 199
xxx after update is x: -14.0485229492
y: 3.39212441444
theta: 3.14860749245
speed: 13.4821252823
id: 0
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -14.0485229492
y: 3.39212441444
theta: 3.14860749245
speed: 13.4821252823
id: 0
t: 200
xxx after update is x: -13.751909256
y: 3.21105313301
theta: 3.14404630661
speed: 14.0990848541
id: 0
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:202


xxx before update is x: -13.751909256
y: 3.21105313301
theta: 3.14404630661
speed: 14.0990848541
id: 0
t: 201
xxx after update is x: -14.8852262497
y: 3.561160326
theta: 3.10320186615
speed: 13.4161968231
id: 0
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:203


xxx before update is x: -14.8852262497
y: 3.561160326
theta: 3.10320186615
speed: 13.4161968231
id: 0
t: 202
xxx after update is x: -15.3145132065
y: 3.42074513435
theta: 3.4198372364
speed: 13.9099254608
id: 0
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -15.3145132065
y: 3.420745134********
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4895999999999979]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.83116579056
y: -47.8704223633
theta: 4.5666847229
speed: 13.6143732071
id: 1
t: 199
xxx after update is x: -2.86032342911
y: -48.5636329651
theta: 4.70099592209
speed: 13.7552118301
id: 1
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:200


222 self.state_dicts[msg.id][msg.t] is (-14.04852294921875, 3.3921244144439697, 3.1486074924468994, 13.482125282287598)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -2.86032342911
y: -48.5636329651
theta: 4.70099592209
speed: 13.7552118301
id: 1
t: 200
xxx after update is x: -3.11952018738
y: -49.1611175537
theta: 4.43417406082
speed: 13.9045286179
id: 1
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.93333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:202


xxx before update is x: -3.11952018738
y: -49.1611175537
theta: 4.43417406082
speed: 13.9045286179
id: 1
t: 201
xxx after update is x: -3.27560520172
y: -49.59998703
theta: 4.76103162766
speed: 13.5489006042
id: 1
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion
removed car with id 0 from grantlist. currentgrantlist: {}
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:203


xxx before update is x: -3.27560520172
y: -49.59998703
theta: 4.76103162766
speed: 13.5489006042
id: 1
t: 202
xxx after update is x: -3.34624123573
y: -49.9727401733
theta: 4.73117589951
speed: 13.7952165604
id: 1
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-15.314513206481934, 3.4207451343536377, 3.419837236404419, 13.90992546081543)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:204


xxx before update is x: -3.34624123573
y: -49.9727401733
theta: 4.73117589951
speed: 13.7952165604
id: 1
t: 203
xxx after update is x: -2.94476008415
y: -51.231300354
theta: 4.69358539581
speed: 14.0222835541
id: 1
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.94476008415
y: -51.231300354
theta: 4.69358539581
speed: 14.0222835541
id: 1
t: 204
xxx after update is x: -2.61049056053
y: -51.5139732361
theta: 4.61814260483
speed: 13.7986602783
id: 1
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:205




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:206


xxx before update is x: -2.61049056053
y: 35
theta: 3.4198372364
speed: 13.9099254608
id: 0
t: 203
xxx after update is x: -15.340511322
y: 3.43623137474
theta: 3.12968015671
speed: 13.9045982361
id: 0
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:204




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:205


xxx before update is x: -15.340511322
y: 3.43623137474
theta: 3.12968015671
speed: 13.9045982361
id: 0
t: 204
xxx after update is x: -16.6669006348
y: 3.46658611298
theta: 3.12386751175
speed: 13.6504144669
id: 0
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.610490560531616, -51.513973236083984, 4.618142604827881, 13.798660278320312)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:206


xxx before update is x: -16.6669006348
y: 3.46658611298
theta: 3.12386751175
speed: 13.6504144669
id: 0
t: 205
xxx after update is x: -17.0241069794
y: 3.56886386871
theta: 3.23038005829
speed: 14.1669187546
id: 0
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:207


xxx before update is x: -17.0241069794
y: 3.56886386871
theta: 3.23038005829
speed: 14.1669187546
id: 0
t: 206
xxx after update is x: -17.9713249207
y: 2.68245530128
theta: 3.23289060593
speed: 14.1370944977
id: 0
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:208


xxx before update is x: -17.9713249207
y: 2.68245530128
theta: 3.23289060593
speed: 14.1370944977
id: 0
t: 207
xxx after update is x: -18.3238182068
y: 3.47150468826
theta: 3.12148785591
speed: 13.7324199677
id: 0
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -18.3238182068
y: 3.47150468826
theta: 3.12148785591
speed: 13.7324199677
id: 0
t: 208
xxx after update is x: -18.5289592743
y: 3.01611852646
theta: 3.29074478149
speed: 13.9115514755
id: 0
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -18.5289592743
y: 3.01611852646
theta: 3.29074478149
speed: 13.9115514755
id: 0
t: 209
xxx after update is x: -19.52942276
y: 3.86789989471
theta: 3.29434084892
speed: 13.6219921112
id: 0
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2045037746429443, -53.92666244506836, 4.742667198181152, 14.025267601013184)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
removed car with id 0 from grantlist. currentgrantlist: {}


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:211


xxx before update is x: -19.52942276
y: 3.86789989471
th-51.5139732361
theta: 4.61814260483
speed: 13.7986602783
id: 1
t: 205
xxx after update is x: -3.21810269356
y: -52.0161933899
theta: 4.80926370621
speed: 14.0035028458
id: 1
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:207


xxx before update is x: -3.21810269356
y: -52.0161933899
theta: 4.80926370621
speed: 14.0035028458
id: 1
t: 206
xxx after update is x: -3.40357756615
y: -52.3428573608
theta: 4.8135266304
speed: 13.9646167755
id: 1
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-17.971324920654297, 2.68245530128479, 3.2328906059265137, 14.137094497680664)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.40357756615
y: -52.3428573608
theta: 4.8135266304
speed: 13.9646167755
id: 1
t: 207
xxx after update is x: -2.95521450043
y: -53.0402870178
theta: 4.79962301254
speed: 13.9103031158
id: 1
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:208




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -2.95521450043
y: -53.0402870178
theta: 4.79962301254
speed: 13.9103031158
id: 1
t: 208
xxx after update is x: -3.23490190506
y: -54.0986061096
theta: 4.74482393265
speed: 13.6546344757
id: 1
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.28888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:210

xxx before update is x: -3.23490190506
y: -54.0986061096
theta: 4.74482393265
speed: 13.6546344757
id: 1
t: 209
xxx after update is x: -3.20450377464
y: -53.9266624451
theta: 4.74266719818
speed: 14.025267601
id: 1
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion

************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:211


xxx before update is x: -3.20450377464
y: -53.9266624451
theta: 4.74266719818
speed: 14.025267601
id: 1
t: 210
xxx after update is x: -3.24841213226
y: -55.0222587585
theta: 4.65254449844
speed: 14.0255756378
id: 1
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5167999999999984]
222 self.state_dicts[msg.id][msg.t] is (-20.52960205078125, 3.285064458847046, 3.1747496128082275, 13.94837760925293)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.24841213226
y: -55.0222587585
theta: 4.65254449844
speed: 14.0255756378
id: 1
t: 211
xxx after update is x: -3.15532517433
y: -56.2809028625
theta: 4.78995275497
speed: 13.8108863831
id: 1
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:212




eta: 3.29434084892
speed: 13.6219921112
id: 0
t: 210
xxx after update is x: -20.5296020508
y: 3.28506445885
theta: 3.17474961281
speed: 13.9483776093
id: 0
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:212


xxx before update is x: -20.5296020508
y: 3.28506445885
theta: 3.17474961281
speed: 13.9483776093
id: 0
t: 211
xxx after update is x: -21.1102695465
y: 3.53719186783
theta: 3.23290038109
speed: 13.8208885193
id: 0
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -21.1102695465
y: 3.53719186783
theta: 3.23290038109
speed: 13.8208885193
id: 0
t: 212
xxx after update is x: -21.3416938782
y: 3.71122336388
theta: 3.14843535423
speed: 13.9562368393
id: 0
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:214


xxx before update is x: -21.3416938782
y: 3.71122336388
theta: 3.14843535423
speed: 13.9562368393
id: 0
t: 213
xxx after update is x: -21.9124889374
y: 2.96450638771
theta: 3.19208717346
speed: 13.9863023758
id: 0
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:215


xxx before update is x: -21.9124889374
y: 2.96450638771
theta: 3.19208717346
speed: 13.9863023758
id: 0
t: 214
xxx after update is x: -22.594997406
y: 3.1535410881
theta: 3.19338297844
speed: 13.8673505783
id: 0
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1954569816589355, -57.65281677246094, 4.746382236480713, 13.819193840026855)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:216


xxx before update is x: -22.594997406
y: 3.1535410881
theta: 3.19338297844
speed: 13.8673505783
id: 0
t: 215
xxx after update is x: -23.594285965
y: 3.25768589973
theta: 3.25472259521
speed: 13.6193218231
id: 0
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:217


xxx before update is x: -23.594285965
y: 3.25768589973
theta: 3.25472259521
speed: 13.6193218231
id: 0
t: 216
xxx after update is x: -23.7650032043
y: 3.21220064163
theta: 3.26297712326
speed: 13.6858072281
id: 0
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:218


xxx before update is x: -23.7650032043
y: 3.21220064163
theta: 3.26297712326
speed: 13.6858072281
id: 0
t: 217
xxx after update is x: -25.0439739227
y: 3.01732754707
theta: 3.07997083664
speed: 14.0634384155
id: 0
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.746128559112549, -59.85090637207031, 4.70564079284668, 14.229353904724121)
if we have all measurements for a certain going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -3.15532517433
y: -56.2809028625
theta: 4.78995275497
speed: 13.8108863831
id: 1
t: 212
xxx after update is x: -3.28603506088
y: -56.2558135986
theta: 4.70806074142
speed: 13.8301095963
id: 1
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:214


xxx before update is x: -3.28603506088
y: -56.2558135986
theta: 4.70806074142
speed: 13.8301095963
id: 1
t: 213
xxx after update is x: -3.37047290802
y: -57.6453781128
theta: 4.72250175476
speed: 13.9935588837
id: 1
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.47199999999999803]
222 self.state_dicts[msg.id][msg.t] is (-21.91248893737793, 2.9645063877105713, 3.192087173461914, 13.986302375793457)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:215


xxx before update is x: -3.37047290802
y: -57.6453781128
theta: 4.72250175476
speed: 13.9935588837
id: 1
t: 214
xxx after update is x: -3.19545698166
y: -57.6528167725
theta: 4.74638223648
speed: 13.81919384
id: 1
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:216


xxx before update is x: -3.19545698166
y: -57.6528167725
theta: 4.74638223648
speed: 13.81919384
id: 1
t: 215
xxx after update is x: -2.91813158989
y: -58.5497207642
theta: 4.81025409698
speed: 14.1120204926
id: 1
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.6






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.91813158989
y: -58.5497207642
theta: 4.81025409698
speed: 14.1120204926
id: 1
t: 216
xxx after update is x: -3.49478960037
y: -59.5294799805
theta: 4.71050930023
speed: 14.0329246521
id: 1
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:217




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:218


xxx before update is x: -3.49478960037
y: -59.5294799805
theta: 4.71050930023
speed: 14.0329246521
id: 1
t: 217
xxx after update is x: -3.74612855911
y: -59.8509063721
theta: 4.70564079285
speed: 14.2293539047
id: 1
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.476799999999998]
222 self.state_dicts[msg.id][msg.t] is (-25.043973922729492, 3.0173275470733643, 3.0799708366394043, 14.063438415527344)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -3.74612855911
y: -59.8509063721
theta: 4.70564079285
speed: 14.2293539047
id: 1
t: 218
xxx after update is x: -2.96331071854
y: -59.9315567017
theta: 4.55269908905
speed: 14.1328010559
id: 1
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:220


xxx before update is x: -2.96331071854
y: -59.9315567017
theta: 4.55269908905
speed: 14.1328010559
id: 1
t: 219
xxx after update is x: -3.46658444405
y: -60.5173835754
theta: 4.71575164795
speed: 13.7829504013
id: 1
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -3.46658444405
y: -60.5173835754
theta: 4.71575164795
speed: 13.7829504013
id: 1
t: 220
xxx after update is x: -2.7824614048
y: -61.5730514526
theta: 4.69401264191
speed: 13.8526515961
id: 1
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5311999999999988]
222 self.state_dicts[msg.id][msg.t] is (-26.73008155822754, 3.1947193145751953, 3.2846434116363525, 13.894771575927734)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:222


xxx before update is x: -2.7824614048
y: -61.5730514526
theta: 4.69401264191
speed: 13.8526515961
id: 1
t: 221
xxx after update is x: -3.20972466469
y: -62.2711715698
theta: 4.9760427475
speed: 13.663898468
id: 1
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -3.20972466469
y: -62.2711715698
theta: 4.9760427475
speed: 13.663898468
id: 1
t: 222
xxx after update is x: -3.0448205471
y: -63.1473617554
theta: 4.71721696854
speed: 14.2378053665
id: 1
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:224


xxx before update is x: -3.0448205471
y: -63.1473617554
theta: 4.71721696854
speed: 14.2378053665
id: 1
t: 223
xxx after update is x: -3.84504294395
y: -63.5693473816
theta: 4.70563936234
speed: 14.038020134
id: 1
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.95555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:225


xxx before update is x: -3.84504294395
y: -63.5693473816
theta: 4.70563936234
speed: 14.038020134
id: 1
t: 224
xxx after update is x: -3.39373874664
y: -64.0464935303
theta: 4.78916406631
speed: 13.7903585434
id: 1
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4895999999999979]
222 self.state_dicts[msg.id][msg.t] is (-29.111984252929688, 3.447061777114868, 3.1683871746063232, 14.055238723754883)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update functiontime-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -25.0439739227
y: 3.01732754707
theta: 3.07997083664
speed: 14.0634384155
id: 0
t: 218
xxx after update is x: -24.9230308533
y: 3.70189666748
theta: 3.00093793869
speed: 13.8419122696
id: 0
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:220


xxx before update is x: -24.9230308533
y: 3.70189666748
theta: 3.00093793869
speed: 13.8419122696
id: 0
t: 219
xxx after update is x: -25.5347232819
y: 2.8823094368
theta: 2.97582101822
speed: 13.6552419662
id: 0
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -25.5347232819
y: 2.8823094368
theta: 2.97582101822
speed: 13.6552419662
id: 0
t: 220
xxx after update is x: -26.7300815582
y: 3.19471931458
theta: 3.28464341164
speed: 13.8947715759
id: 0
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:222


xxx before update is x: -26.7300815582
y: 3.19471931458
theta: 3.28464341164
speed: 13.8947715759
id: 0
t: 221
xxx after update is x: -26.8818836212
y: 3.43147969246
theta: 3.21151232719
speed: 13.6285448074
id: 0
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -26.8818836212
y: 3.43147969246
theta: 3.21151232719
speed: 13.6285448074
id: 0
t: 222
xxx after update is x: -27.6101264954
y: 3.24343967438
theta: 3.26729035378
speed: 13.855890274
id: 0
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.044820547103882, -63.147361755371094, 4.717216968536377, 14.237805366516113)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:224


xxx before update is x: -27.6101264954
y: 3.24343967438
theta: 3.26729035378
speed: 13.855890274
id: 0
t: 223
xxx after update is x: -27.9873638153
y: 3.36605429649
theta: 2.99282360077
speed: 13.6343708038
id: 0
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:225


xxx before update is x: -27.9873638153
y: 3.36605429649
theta: 2.99282360077
speed: 13.6343708038
id: 0
t: 224
xxx after update is x: -29.1119842529
y: 3.44706177711
theta: 3.16838717461
speed: 14.0552387238
id: 0
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:226


xxx before update is x: -29.1119842529
y: 3.44706177711
theta: 3.16838717461
speed: 14.0552387238
id: 0
t: 225
xxx after update i
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:226


xxx before update is x: -3.39373874664
y: -64.0464935303
theta: 4.78916406631
speed: 13.7903585434
id: 1
t: 225
xxx after update is x: -3.05851387978
y: -64.4613342285
theta: 4.70326471329
speed: 13.970038414
id: 1
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -3.05851387978
y: -64.4613342285
theta: 4.70326471329
speed: 13.970038414
id: 1
t: 226
xxx after update is x: -3.33872652054
y: -64.7584457397
theta: 4.64006471634
speed: 14.0713777542
id: 1
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:228


xxx before update is x: -3.33872652054
y: -64.7584457397
theta: 4.64006471634
speed: 14.0713777542
id: 1
t: 227
xxx after update is x: -3.19510197639
y: -65.6890487671
theta: 4.66870212555
speed: 14.0429525375
id: 1
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.505599999999998]
222 self.state_dicts[msg.id][msg.t] is (-30.35073471069336, 3.2634406089782715, 3.1235475540161133, 13.84328842163086)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -3.19510197639
y: -65.6890487671
theta: 4.66870212555
speed: 14.0429525375
id: 1
t: 228
xxx after update is x: -3.23688983917
y: -66.0682067871
theta: 4.71919584274
speed: 13.811750412
id: 1
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -3.23688983917
y: -66.0682067871
theta: 4.71919584274
speed: 13.811750412
id: 1
t: 229
xxx after update is x: -2.89292740822
y: -67.0247573853
theta: 4.82018566132
speed: 14.249499321
id: 1
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.89292740822
y: -67.0247573853
theta: 4.82018566132
speed: 14.249499321
id: 1
t: 230
xxx after update is x: -3.52131509781
y: -67.284034729
theta: 4.81633138657
speed: 13.9170770645
id: 1
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:231




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:232


xxx before update is x: -3.52131509781
y: -67.284034729
theta: 4.81633138657
speed: 13.9170770645
id: 1
t: 231
xxx after update is x: -3.11874246597
y: -67.5350646973
theta: 4.67855024338
speed: 13.9023866653
id: 1
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.3111111111






self.maneuver_requested None
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (-32.839172363s x: -29.6501998901
y: 3.72502374649
theta: 3.20038199425
speed: 13.8852434158
id: 0
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -29.6501998901
y: 3.72502374649
theta: 3.20038199425
speed: 13.8852434158
id: 0
t: 226
xxx after update is x: -29.6944179535
y: 4.0611000061
theta: 3.19034695625
speed: 13.6620121002
id: 0
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:228


xxx before update is x: -29.6944179535
y: 4.0611000061
theta: 3.19034695625
speed: 13.6620121002
id: 0
t: 227
xxx after update is x: -30.3507347107
y: 3.26344060898
theta: 3.12354755402
speed: 13.8432884216
id: 0
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1951019763946533, -65.68904876708984, 4.668702125549316, 14.042952537536621)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -30.3507347107
y: 3.26344060898
theta: 3.12354755402
speed: 13.8432884216
id: 0
t: 228
xxx after update is x: -30.4387321472
y: 3.16200637817
theta: 3.09358739853
speed: 13.6565999985
id: 0
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -30.4387321472
y: 3.16200637817
theta: 3.09358739853
speed: 13.6565999985
id: 0
t: 229
xxx after update is x: -32.2306289673
y: 3.07515048981
theta: 3.18850469589
speed: 14.1872882843
id: 0
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:231


xxx before update is x: -32.2306289673
y: 3.07515048981
theta: 3.18850469589
speed: 14.1872882843
id: 0
t: 230
xxx after update is x: -32.9098052979
y: 2.79361557961
theta: 3.27912998199
speed: 13.7064218521
id: 0
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -32.9098052979
y: 2.79361557961
theta: 3.27912998199
speed: 13.7064218521
id: 0
t: 231
xxx after update is x: -32.8391723633
y: 3.28786921501
theta: 3.14281153679
speed: 14.3693094254
id: 0
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:232




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -32.8391723633
y: 3.28786921501
theta: 3.14281153679
speed: 14.3693094254
id: 0
t: 232
xxx after update is x: -34.3909988403
y: 3.32198953629
theta: 3.1093184948
speed: 14.2087278366
id: 0
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.302581548690796, -68.79762268066406, 4.699360370635986, 13.905620574951172)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
c28125, 3.2878692150115967, 3.1428115367889404, 14.369309425354004)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -3.11874246597
y: -67.5350646973
theta: 4.67855024338
speed: 13.9023866653
id: 1
t: 232
xxx after update is x: -3.30258154869
y: -68.7976226807
theta: 4.69936037064
speed: 13.905620575
id: 1
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -3.30258154869
y: -68.7976226807
theta: 4.69936037064
speed: 13.905620575
id: 1
t: 233
xxx after update is x: -3.62043452263
y: -69.1071624756
theta: 4.46183538437
speed: 13.671585083
id: 1
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -3.62043452263
y: -69.1071624756
theta: 4.46183538437
speed: 13.671585083
id: 1
t: 234
xxx after update is x: -3.19942641258
y: -70.1715087891
theta: 4.82625961304
speed: 13.8104305267
id: 1
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:236


xxx before update is x: -3.19942641258
y: -70.1715087891
theta: 4.82625961304
speed: 13.8104305267
id: 1
t: 235
xxx after update is x: -3.05060172081
y: -71.0273590088
theta: 4.74835205078
speed: 14.1054182053
id: 1
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.481599999999998]
222 self.state_dicts[msg.id][msg.t] is (-35.39914321899414, 2.936276912689209, 3.2494781017303467, 13.744588851928711)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -3.05060172081
y: -71.0273590088
theta: 4.74835205078
speed: 14.1054182053
id: 1
t: 236
xxx after update is x: -3.28737068176
y: -70.7195205688
theta: 4.69919776917
speed: 14.0464191437
id: 1
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -3.28737068176
y: -70.7195205688
theta: 4.69919776917
speed: 14.0464191437
id: 1
t: 237
xxx after update is x: -3.79420375824
y: -71.8870849609
theta: 4.44920682907
speed: 14.02039814
id: 1
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:239


xxx before update is x: -3.79420375824
y: -71.8870849609
theta: 4.44920682907
speed: 14.02039814
id: 1
t: 238
xxx after update is x: -3.22202801704
y: -73.096572876
theta: 4.62473535538
speed: 13.8410110474
id: 1
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.6222222222






self.maneuver_requested Nall update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -34.3909988403
y: 3.32198953629
theta: 3.1093184948
speed: 14.2087278366
id: 0
t: 233
xxx after update is x: -34.4839477539
y: 3.1175236702
theta: 3.18607544899
speed: 14.2538986206
id: 0
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -34.4839477539
y: 3.1175236702
theta: 3.18607544899
speed: 14.2538986206
id: 0
t: 234
xxx after update is x: -35.0435409546
y: 3.41388225555
theta: 3.20113229752
speed: 13.8506221771
id: 0
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:236


xxx before update is x: -35.0435409546
y: 3.41388225555
theta: 3.20113229752
speed: 13.8506221771
id: 0
t: 235
xxx after update is x: -35.399143219
y: 2.93627691269
theta: 3.24947810173
speed: 13.7445888519
id: 0
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -35.399143219
y: 2.93627691269
theta: 3.24947810173
speed: 13.7445888519
id: 0
t: 236
xxx after update is x: -36.5099563599
y: 3.4918847084
theta: 3.2157728672
speed: 13.8565073013
id: 0
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2873706817626953, -70.71952056884766, 4.699197769165039, 14.046419143676758)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -36.5099563599
y: 3.4918847084
theta: 3.2157728672
speed: 13.8565073013
id: 0
t: 237
xxx after update is x: -37.3622894287
y: 3.01590299606
theta: 3.11573553085
speed: 13.7721738815
id: 0
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:239


xxx before update is x: -37.3622894287
y: 3.01590299606
theta: 3.11573553085
speed: 13.7721738815
id: 0
t: 238
xxx after update is x: -37.1107559204
y: 3.88627243042
theta: 3.07244157791
speed: 13.7982759476
id: 0
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:240


xxx before update is x: -37.1107559204
y: 3.88627243042
theta: 3.07244157791
speed: 13.7982759476
id: 0
t: 239
xxx after update is x: -37.8746032715
y: 3.55314826965
theta: 2.98786211014
speed: 13.799911499
id: 0
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -37.8746032715
y: 3.55314826965
theta: 2.98786211014
speed: 13.799911499
id: 0
t: 240
xxx after update is x: -39.0845375061
y: 3.28051519394
theta: 3.08629775047
speed: 13.6041660309
id: 0
t: 241
maneuver_negotiatir.py finish the update agent state fromone
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:240


maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: -3.22202801704
y: -73.096572876
theta: 4.62473535538
speed: 13.8410110474
id: 1
t: 239
xxx after update is x: -3.21058678627
y: -72.9063339233
theta: 4.76156425476
speed: 13.6969423294
id: 1
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.502399999999998]
222 self.state_dicts[msg.id][msg.t] is (-37.874603271484375, 3.5531482696533203, 2.9878621101379395, 13.799911499023438)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:241


xxx before update is x: -3.21058678627
y: -72.9063339233
theta: 4.76156425476
speed: 13.6969423294
id: 1
t: 240
xxx after update is x: -2.87101745605
y: -73.6317825317
theta: 4.85649299622
speed: 13.6273555756
id: 1
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -2.87101745605
y: -73.6317825317
theta: 4.85649299622
speed: 13.6273555756
id: 1
t: 241
xxx after update is x: -3.64519286156
y: -74.1592712402
theta: 4.5994644165
speed: 13.9615602493
id: 1
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:243


xxx before update is x: -3.64519286156
y: -74.1592712402
theta: 4.5994644165
speed: 13.9615602493
id: 1
t: 242
xxx after update is x: -3.78506541252
y: -75.1806945801
theta: 4.86050367355
speed: 14.1578502655
id: 1
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.78506541252
y: -75.1806945801
theta: 4.86050367355
speed: 14.1578502655
id: 1
t: 243
xxx after update is x: -3.80542755127
y: -75.8055419922
theta: 4.76242160797
speed: 14.0487279892
id: 1
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:244


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5151999999999983]
222 self.state_dicts[msg.id][msg.t] is (-40.62084197998047, 3.3298447132110596, 3.1454923152923584, 13.690104484558105)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:245


xxx before update is x: -3.80542755127
y: -75.8055419922
theta: 4.76242160797
speed: 14.0487279892
id: 1
t: 244
xxx after update is x: -2.986109972
y: -76.2282180786
theta: 4.77513408661
speed: 13.8120269775
id: 1
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:246


xxx before update is x: -2.986109972
y: -76.2282180786
theta: 4.77513408661
speed: 13.8120269775
id: 1
t: 245
xxx after update is x: -3.38380765915
y: -76.6657867432
theta: 4.7564573288
 ros funtion
leave the update function 
in spin function, finish the n times spin:241




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -39.0845375061
y: 3.28051519394
theta: 3.08629775047
speed: 13.6041660309
id: 0
t: 241
xxx after update is x: -39.4078063965
y: 3.64072012901
theta: 3.21581530571
speed: 13.9529838562
id: 0
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -39.4078063965
y: 3.64072012901
theta: 3.21581530571
speed: 13.9529838562
id: 0
t: 242
xxx after update is x: -39.8741073608
y: 2.84552884102
theta: 3.30769228935
speed: 14.1300630569
id: 0
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:243


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.7850654125213623, -75.18069458007812, 4.860503673553467, 14.15785026550293)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:244


xxx before update is x: -39.8741073608
y: 2.84552884102
theta: 3.30769228935
speed: 14.1300630569
id: 0
t: 243
xxx after update is x: -40.62084198
y: 3.32984471321
theta: 3.14549231529
speed: 13.6901044846
id: 0
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:245


xxx before update is x: -40.62084198
y: 3.32984471321
theta: 3.14549231529
speed: 13.6901044846
id: 0
t: 244
xxx after update is x: -40.4589691162
y: 3.13429236412
theta: 3.14934659004
speed: 13.7887611389
id: 0
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:246


xxx before update is x: -40.4589691162
y: 3.13429236412
theta: 3.14934659004
speed: 13.7887611389
id: 0
t: 245
xxx after update is x: -41.587600708
y: 2.60759735107
theta: 3.25337409973
speed: 14.0855045319
id: 0
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -41.587600708
y: 2.60759735107
theta: 3.25337409973
speed: 14.0855045319
id: 0
t: 246
xxx after update is x: -42.6755142212
y: 3.20423126221
theta: 3.0887606144
speed: 13.7926645279
id: 0
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.297724723815918, -77.65796661376953, 4.702990531921387, 13.953445434570312)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -42.6755142212
y: 3.20423126221
theta: 3.0887606144
speed: 13.7926645279
id: 0
t: 247
xxx after update is x: -43.2398719788
y: 2.95156550407
theta: 3.30635690689
speed: 14.2269649506
id: 0
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py upspeed: 14.0778779984
id: 1
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -3.38380765915
y: -76.6657867432
theta: 4.7564573288
speed: 14.0778779984
id: 1
t: 246
xxx after update is x: -3.29772472382
y: -77.6579666138
theta: 4.70299053192
speed: 13.9534454346
id: 1
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.9777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -3.29772472382
y: -77.6579666138
theta: 4.70299053192
speed: 13.9534454346
id: 1
t: 247
xxx after update is x: -3.03172087669
y: -77.4663009644
theta: 4.606528759
speed: 13.7464923859
id: 1
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (-43.239871978759766, 2.9515655040740967, 3.306356906890869, 14.226964950561523)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -3.03172087669
y: -77.4663009644
theta: 4.606528759
speed: 13.7464923859
id: 1
t: 248
xxx after update is x: -3.1187517643
y: -78.1537475586
theta: 4.62498998642
speed: 13.7489480972
id: 1
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:250


xxx before update is x: -3.1187517643
y: -78.1537475586
theta: 4.62498998642
speed: 13.7489480972
id: 1
t: 249
xxx after update is x: -2.97575545311
y: -79.516998291
theta: 4.54115629196
speed: 14.0107822418
id: 1
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.97575545311
y: -79.516998291
theta: 4.54115629196
speed: 14.0107822418
id: 1
t: 250
xxx after update is x: -3.44021058083
y: -79.9137878418
theta: 4.78023481369
speed: 13.9029922485
id: 1
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:251




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:252


xxx before update is x: -3.44021058083
y: -79.9137878418
theta: 4.78023481369
speed: 13.9029922485
id: 1
t: 251
xxx after update is x: -3.11129331589
y: -80.4231262207
theta: 4.91412687302
speed: 14.0999755859
id: 1
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5503999999999993]
222 self.state_dicts[msg.id][msg.t] is (-45.522674560546875, 3.0141303539276123, 3.0093154907226562, 13.861859321594238)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in date function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -43.2398719788
y: 2.95156550407
theta: 3.30635690689
speed: 14.2269649506
id: 0
t: 248
xxx after update is x: -44.1271286011
y: 3.29887700081
theta: 3.28285956383
speed: 14.1954545975
id: 0
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -44.1271286011
y: 3.29887700081
theta: 3.28285956383
speed: 14.1954545975
id: 0
t: 249
xxx after update is x: -44.9622917175
y: 3.63579583168
theta: 3.06680107117
speed: 13.5082511902
id: 0
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:250




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:251


xxx before update is x: -44.9622917175
y: 3.63579583168
theta: 3.06680107117
speed: 13.5082511902
id: 0
t: 250
xxx after update is x: -44.7658882141
y: 3.26162838936
theta: 3.26295018196
speed: 13.3619470596
id: 0
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:252


xxx before update is x: -44.7658882141
y: 3.26162838936
theta: 3.26295018196
speed: 13.3619470596
id: 0
t: 251
xxx after update is x: -45.5226745605
y: 3.01413035393
theta: 3.00931549072
speed: 13.8618593216
id: 0
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:253


xxx before update is x: -45.5226745605
y: 3.01413035393
theta: 3.00931549072
speed: 13.8618593216
id: 0
t: 252
xxx after update is x: -46.6331176758
y: 3.3069062233
theta: 3.37038826942
speed: 14.0188169479
id: 0
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.483182668685913, -80.8874282836914, 4.758491516113281, 13.837167739868164)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:254


xxx before update is x: -46.6331176758
y: 3.3069062233
theta: 3.37038826942
speed: 14.0188169479
id: 0
t: 253
xxx after update is x: -46.9083023071
y: 3.04931306839
theta: 3.07995080948
speed: 13.8012561798
id: 0
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:255


xxx before update is x: -46.9083023071
y: 3.04931306839
theta: 3.07995080948
speed: 13.8012561798
id: 0
t: 254
xxx after update is x: -47.1094741821
y: 3.38355374336
theta: 3.27077674866
speed: 13.5847492218
id: 0
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:256


xxx before update is x: -47.1094741821
y: 3.38355374336
theta: 3.27077674866
speed: 13.5847492218
id: 0
t: 255
xxx after update is x: -47.7995643616
y: 3.2888417244
theta: 3.19335865974
speed: 13.8544788361
id: 0
t: 256
maneuver_negotiatir.py finish the update agent state frospin function, finish the n times spin:253

xxx before update is x: -3.11129331589
y: -80.4231262207
theta: 4.91412687302
speed: 14.0999755859
id: 1
t: 252
xxx after update is x: -3.48318266869
y: -80.8874282837
theta: 4.75849151611
speed: 13.8371677399
id: 1
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:254


xxx before update is x: -3.48318266869
y: -80.8874282837
theta: 4.75849151611
speed: 13.8371677399
id: 1
t: 253
xxx after update is x: -3.48443961143
y: -82.1786956787
theta: 4.71646881104
speed: 13.9674024582
id: 1
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.48443961143
y: -82.1786956787
theta: 4.71646881104
speed: 13.9674024582
id: 1
t: 254
xxx after update is x: -3.70413017273
y: -82.1942443848
theta: 4.67184019089
speed: 14.042842865
id: 1
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:255


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:256


xxx before update is x: -3.70413017273
y: -82.1942443848
theta: 4.67184019089
speed: 14.042842865
id: 1
t: 255
xxx after update is x: -3.54949784279
y: -83.1439743042
theta: 4.54120969772
speed: 14.2804994583
id: 1
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4927999999999979]
222 self.state_dicts[msg.id][msg.t] is (-47.799564361572266, 3.288841724395752, 3.1933586597442627, 13.85447883605957)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:257


xxx before update is x: -3.54949784279
y: -83.1439743042
theta: 4.54120969772
speed: 14.2804994583
id: 1
t: 256
xxx after update is x: -3.27594304085
y: -83.3129882812
theta: 4.73713350296
speed: 13.7424840927
id: 1
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:258


xxx before update is x: -3.27594304085
y: -83.3129882812
theta: 4.73713350296
speed: 13.7424840927
id: 1
t: 257
xxx after update is x: -3.31096482277
y: -84.5704650879
theta: 4.67376661301
speed: 14.0754070282
id: 1
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:259


xxx before update is x: -3.31096482277
y: -84.5704650879
theta: 4.67376661301
speed: 14.0754070282
id: 1
t: 258
xxx after update is x: -2.95128631592
y: -84.6186523438
theta: 4.88138628006
speed: 14.0057783127
id: 1
t: 259
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:260


xxx before update is x: -2.95128631592
y: -84.6186523438
theta: 4.881386280m ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:257


xxx before update is x: -47.7995643616
y: 3.2888417244
theta: 3.19335865974
speed: 13.8544788361
id: 0
t: 256
xxx after update is x: -48.8263244629
y: 3.07584452629
theta: 2.79507136345
speed: 14.1057348251
id: 0
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:258


xxx before update is x: -48.8263244629
y: 3.07584452629
theta: 2.79507136345
speed: 14.1057348251
id: 0
t: 257
xxx after update is x: -49.290058136
y: 3.20265102386
theta: 3.31159353256
speed: 13.6496915817
id: 0
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:259


xxx before update is x: -49.290058136
y: 3.20265102386
theta: 3.31159353256
speed: 13.6496915817
id: 0
t: 258
xxx after update is x: -49.2137069702
y: 3.01509523392
theta: 2.99464678764
speed: 14.116736412
id: 0
t: 259
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:260


xxx before update is x: -49.2137069702
y: 3.01509523392
theta: 2.99464678764
speed: 14.116736412
id: 0
t: 259
xxx after update is x: -50.0094184875
y: 3.3808028698
theta: 3.33020424843
speed: 13.7220993042
id: 0
t: 260
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0475528240203857, -85.52132415771484, 4.493627071380615, 14.049871444702148)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:261


xxx before update is x: -50.0094184875
y: 3.3808028698
theta: 3.33020424843
speed: 13.7220993042
id: 0
t: 260
xxx after update is x: -51.3145523071
y: 3.26285076141
theta: 3.28834843636
speed: 14.188876152
id: 0
t: 261
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:262


xxx before update is x: -51.3145523071
y: 3.26285076141
theta: 3.28834843636
speed: 14.188876152
id: 0
t: 261
xxx after update is x: -51.7156181335
y: 3.22679448128
theta: 2.94710350037
speed: 13.7970561981
id: 0
t: 262
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:263


xxx before update is x: -51.7156181335
y: 3.22679448128
theta: 2.94710350037
speed: 13.7970561981
id: 0
t: 262
xxx after update is x: -51.786693573
y: 3.56409215927
theta: 3.2395067215
speed: 13.5156116486
id: 0
t: 263
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:264


xxx before update is x: -51.786693573
y: 3.56409215927
theta: 3.2395067215
speed: 13.5156116486
id: 0
t: 263
xxx after update is x: -52.9613227844
y: 3.08876276016
theta: 2.99297642708
speed: 13.7866306305
id: 0
t: 06
speed: 14.0057783127
id: 1
t: 259
xxx after update is x: -3.04755282402
y: -85.5213241577
theta: 4.49362707138
speed: 14.0498714447
id: 1
t: 260
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:261


xxx before update is x: -3.04755282402
y: -85.5213241577
theta: 4.49362707138
speed: 14.0498714447
id: 1
t: 260
xxx after update is x: -3.65033316612
y: -86.1208343506
theta: 4.63634490967
speed: 13.7226219177
id: 1
t: 261
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.505599999999998]
222 self.state_dicts[msg.id][msg.t] is (-51.314552307128906, 3.262850761413574, 3.288348436355591, 14.188876152038574)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.65033316612
y: -86.1208343506
theta: 4.63634490967
speed: 13.7226219177
id: 1
t: 261
xxx after update is x: -3.33090424538
y: -86.3477783203
theta: 4.83382749557
speed: 13.731048584
id: 1
t: 262
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:262




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.6444444444






self.maneuver_requested None
xxx before update is x: -3.33090424538
y: -86.3477783203
theta: 4.83382749557
speed: 13.731048584
id: 1
t: 262
xxx after update is x: -3.57413363457
y: -87.4100799561
theta: 4.63187265396
speed: 13.8967952728
id: 1
t: 263
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:263


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:264


xxx before update is x: -3.57413363457
y: -87.4100799561
theta: 4.63187265396
speed: 13.8967952728
id: 1
t: 263
xxx after update is x: -3.26489591599
y: -87.702835083
theta: 4.47070074081
speed: 13.7715997696
id: 1
t: 264
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:265


xxx before update is x: -3.26489591599
y: -87.702835083
theta: 4.47070074081
speed: 13.7715997696
id: 1
t: 264
xxx after update is x: -2.92960810661
y: -88.920249939
theta: 4.84944629669
speed: 13.8411588669
id: 1
t: 265
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.92960810661
y: -88.920249939
theta: 4.84944629669
speed: 13.8411588669
id: 1
t: 265
xxx after update is x: -3.58408379555
y: -89.236289978
theta: 4.69500589371
speed: 13.9141607285
id: 1
t: 266
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:266




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.58408379555
y: -89.236289978
theta: 4.69500589371
speed: 13.9141607285
id: 1
t: 266
xxx after update is x: -3.20080518723
y: -89.3324432373
theta: 4.5591173172
speed: 13.8244524002
id: 1
t: 267
maneuver_negotiatir.py finish the update agent state fr264
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -52.9613227844
y: 3.08876276016
theta: 2.99297642708
speed: 13.7866306305
id: 0
t: 264
xxx after update is x: -53.6660614014
y: 3.36902356148
theta: 3.14885544777
speed: 14.1672716141
id: 0
t: 265
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:265




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:266


xxx before update is x: -53.6660614014
y: 3.36902356148
theta: 3.14885544777
speed: 14.1672716141
id: 0
t: 265
xxx after update is x: -54.3434448242
y: 3.08434224129
theta: 3.2685444355
speed: 14.0890741348
id: 0
t: 266
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -54.3434448242
y: 3.08434224129
theta: 3.2685444355
speed: 14.0890741348
id: 0
t: 266
xxx after update is x: -55.3163223267
y: 3.09521770477
theta: 3.14674973488
speed: 13.9095573425
id: 0
t: 267
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:267


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.200805187225342, -89.33244323730469, 4.559117317199707, 13.82445240020752)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:268


xxx before update is x: -55.3163223267
y: 3.09521770477
theta: 3.14674973488
speed: 13.9095573425
id: 0
t: 267
xxx after update is x: -55.1374740601
y: 2.93530154228
theta: 3.14556479454
speed: 14.0490732193
id: 0
t: 268
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:269


xxx before update is x: -55.1374740601
y: 2.93530154228
theta: 3.14556479454
speed: 14.0490732193
id: 0
t: 268
xxx after update is x: -55.9034423828
y: 3.45374965668
theta: 3.14402699471
speed: 13.8777532578
id: 0
t: 269
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:270


xxx before update is x: -55.9034423828
y: 3.45374965668
theta: 3.14402699471
speed: 13.8777532578
id: 0
t: 269
xxx after update is x: -56.9024429321
y: 2.83833122253
theta: 3.14578080177
speed: 13.9571676254
id: 0
t: 270
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:271


xxx before update is x: -56.9024429321
y: 2.83833122253
theta: 3.14578080177
speed: 13.9571676254
id: 0
t: 270
xxx after update is x: -57.2884750366
y: 3.29319286346
theta: 3.31407785416
speed: 13.9543523788
id: 0
t: 271
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:272


xxx before update is x: -57.2884750366
y: 3.29319286346
theta: 3.31407785416
speed: 13.9543523788
id: 0
t: 271
xxx after update is x: -57.3381919861om ros funtion
leave the update function 
in spin function, finish the n times spin:267


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.20080518723
y: -89.3324432373
theta: 4.5591173172
speed: 13.8244524002
id: 1
t: 267
xxx after update is x: -2.9786324501
y: -90.4772567749
theta: 4.60574531555
speed: 13.580447197
id: 1
t: 268
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:268


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (-55.137474060058594, 2.9353015422821045, 3.1455647945404053, 14.049073219299316)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.9786324501
y: -90.4772567749
theta: 4.60574531555
speed: 13.580447197
id: 1
t: 268
xxx after update is x: -3.75360703468
y: -91.1705932617
theta: 4.63950634003
speed: 13.740477562
id: 1
t: 269
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:269




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:270


xxx before update is x: -3.75360703468
y: -91.1705932617
theta: 4.63950634003
speed: 13.740477562
id: 1
t: 269
xxx after update is x: -3.65801310539
y: -91.7698669434
theta: 4.74867963791
speed: 13.8750190735
id: 1
t: 270
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.0






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.65801310539
y: -91.7698669434
theta: 4.74867963791
speed: 13.8750190735
id: 1
t: 270
xxx after update is x: -3.29542541504
y: -92.6038894653
theta: 4.69427251816
speed: 14.0343513489
id: 1
t: 271
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:271




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:272


xxx before update is x: -3.29542541504
y: -92.6038894653
theta: 4.69427251816
speed: 14.0343513489
id: 1
t: 271
xxx after update is x: -3.04149198532
y: -92.7475967407
theta: 5.01818656921
speed: 13.6633214951
id: 1
t: 272
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5119999999999982]
222 self.state_dicts[msg.id][msg.t] is (-57.338191986083984, 3.5667648315429688, 3.139728546142578, 13.679375648498535)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:273


xxx before update is x: -3.04149198532
y: -92.7475967407
theta: 5.01818656921
speed: 13.6633214951
id: 1
t: 272
xxx after update is x: -2.89568448067
y: -93.7468490601
theta: 4.75881052017
speed: 14.1225156784
id: 1
t: 273
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish
y: 3.56676483154
theta: 3.13972854614
speed: 13.6793756485
id: 0
t: 272
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -57.3381919861
y: 3.56676483154
theta: 3.13972854614
speed: 13.6793756485
id: 0
t: 272
xxx after update is x: -58.8658447266
y: 2.95182514191
theta: 3.00379896164
speed: 13.8367929459
id: 0
t: 273
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:273


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.8956844806671143, -93.7468490600586, 4.758810520172119, 14.122515678405762)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:274


xxx before update is x: -58.8658447266
y: 2.95182514191
theta: 3.00379896164
speed: 13.8367929459
id: 0
t: 273
xxx after update is x: -59.1395683289
y: 3.40017843246
theta: 3.22589278221
speed: 13.7692670822
id: 0
t: 274
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:275


xxx before update is x: -59.1395683289
y: 3.40017843246
theta: 3.22589278221
speed: 13.7692670822
id: 0
t: 274
xxx after update is x: -59.7598762512
y: 3.69247555733
theta: 3.11717057228
speed: 13.984539032
id: 0
t: 275
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -59.7598762512
y: 3.69247555733
theta: 3.11717057228
speed: 13.984539032
id: 0
t: 275
xxx after update is x: -60.1438865662
y: 3.37114071846
theta: 3.20421862602
speed: 13.8094787598
id: 0
t: 276
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:276




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:277


xxx before update is x: -60.1438865662
y: 3.37114071846
theta: 3.20421862602
speed: 13.8094787598
id: 0
t: 276
xxx after update is x: -60.8293762207
y: 3.63584756851
theta: 3.06083345413
speed: 14.231713295
id: 0
t: 277
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.692223072052002, -95.79035949707031, 4.741581439971924, 13.743352890014648)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:278


xxx before update is x: -60.8293762207
y: 3.63584756851
theta: 3.06083345413
speed: 14.231713295
id: 0
t: 277
xxx after update is x: -62.0607681274
y: 3.77075242996
theta: 3.01821517944
speed: 13.8322153091
id: 0
t: 278
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:279


xxx before update is x: -62.0607681274
y: 3.77075242996
theta: 3.01821517944
speed: 13.8322153091
id: 0
t: 278
xxx after update is x: -62.6082649231
y: 2.81690621376
theta: 3.20625424385
speed: 13.7010383606
id: 0
t: 279
maneuver_negotiatir.py finish the update agent state from ros fun the n times spin:274

xxx before update is x: -2.89568448067
y: -93.7468490601
theta: 4.75881052017
speed: 14.1225156784
id: 1
t: 273
xxx after update is x: -3.29449129105
y: -94.6178283691
theta: 4.79363965988
speed: 13.9982423782
id: 1
t: 274
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:275


xxx before update is x: -3.29449129105
y: -94.6178283691
theta: 4.79363965988
speed: 13.9982423782
id: 1
t: 274
xxx after update is x: -2.8110575676
y: -94.881362915
theta: 4.72802591324
speed: 13.7679166794
id: 1
t: 275
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:276


xxx before update is x: -2.8110575676
y: -94.881362915
theta: 4.72802591324
speed: 13.7679166794
id: 1
t: 275
xxx after update is x: -3.29854297638
y: -95.0197372437
theta: 4.62335681915
speed: 13.8363227844
id: 1
t: 276
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.478399999999998]
222 self.state_dicts[msg.id][msg.t] is (-60.14388656616211, 3.371140718460083, 3.204218626022339, 13.809478759765625)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:277


xxx before update is x: -3.29854297638
y: -95.0197372437
theta: 4.62335681915
speed: 13.8363227844
id: 1
t: 276
xxx after update is x: -2.69222307205
y: -95.7903594971
theta: 4.74158143997
speed: 13.74335289
id: 1
t: 277
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:278


xxx before update is x: -2.69222307205
y: -95.7903594971
theta: 4.74158143997
speed: 13.74335289
id: 1
t: 277
xxx after update is x: -3.21991109848
y: -96.3479919434
theta: 4.51967906952
speed: 13.84973526
id: 1
t: 278
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.3555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:279


xxx before update is x: -3.21991109848
y: -96.3479919434
theta: 4.51967906952
speed: 13.84973526
id: 1
t: 278
xxx after update is x: -2.84225916862
y: -97.5418930054
theta: 4.62739562988
speed: 14.2596111298
id: 1
t: 279
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5295999999999987]
222 self.state_dicts[msg.id][msg.t] is (-62.6082649230957, 2.816906213760376, 3.206254243850708, 13.701038360595703)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.84225916862
y: -97.5418930054
theta: 4.62739562988
speed: 14.2596111298
id: 1
t: 279
xxx after update is x: -2.90461325645
y: -97.6100463867
theta: 4.72805023193
speed: 13.9455480576
id: 1
t: 280
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update functtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:280


xxx before update is x: -62.6082649231
y: 2.81690621376
theta: 3.20625424385
speed: 13.7010383606
id: 0
t: 279
xxx after update is x: -62.4795761108
y: 3.45964050293
theta: 3.10927081108
speed: 14.0215396881
id: 0
t: 280
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:281


xxx before update is x: -62.4795761108
y: 3.45964050293
theta: 3.10927081108
speed: 14.0215396881
id: 0
t: 280
xxx after update is x: -63.284614563
y: 2.94185209274
theta: 3.19910335541
speed: 14.2512636185
id: 0
t: 281
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:282


xxx before update is x: -63.284614563
y: 2.94185209274
theta: 3.19910335541
speed: 14.2512636185
id: 0
t: 281
xxx after update is x: -63.9823417664
y: 3.62100315094
theta: 3.15231251717
speed: 14.2014856339
id: 0
t: 282
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:283


xxx before update is x: -63.9823417664
y: 3.62100315094
theta: 3.15231251717
speed: 14.2014856339
id: 0
t: 282
xxx after update is x: -64.4697341919
y: 3.05549836159
theta: 3.05297040939
speed: 14.1256608963
id: 0
t: 283
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2667882442474365, -100.15154266357422, 4.867855548858643, 13.631458282470703)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:284


xxx before update is x: -64.4697341919
y: 3.05549836159
theta: 3.05297040939
speed: 14.1256608963
id: 0
t: 283
xxx after update is x: -65.3576049805
y: 2.98154830933
theta: 2.97529530525
speed: 13.8085021973
id: 0
t: 284
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -65.3576049805
y: 2.98154830933
theta: 2.97529530525
speed: 13.8085021973
id: 0
t: 284
xxx after update is x: -65.8808288574
y: 2.69512844086
theta: 2.96374583244
speed: 13.8739643097
id: 0
t: 285
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:285




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:286


xxx before update is x: -65.8808288574
y: 2.69512844086
theta: 2.96374583244
speed: 13.8739643097
id: 0
t: 285
xxx after update is x: -66.7909851074
y: 3.27973723412
theta: 3.23789334297
speed: 14.1251325607
id: 0
t: 286
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:287


xxx before update is x: -66.7909851074
y: 3.27973723412
theta: 3.23789334297
speed: 14.1251325607
id: 0
t: 286
xxx after update is x: -67.2393875122
y: 2.96050190926
theta: 3.17424845695
speed: 13.7163333893
id: 0
ion 
in spin function, finish the n times spin:280




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:281


xxx before update is x: -2.90461325645
y: -97.6100463867
theta: 4.72805023193
speed: 13.9455480576
id: 1
t: 280
xxx after update is x: -3.36377835274
y: -98.4605255127
theta: 4.60106754303
speed: 13.9183502197
id: 1
t: 281
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:282


xxx before update is x: -3.36377835274
y: -98.4605255127
theta: 4.60106754303
speed: 13.9183502197
id: 1
t: 281
xxx after update is x: -3.72552132607
y: -99.2412109375
theta: 4.72301435471
speed: 13.5789680481
id: 1
t: 282
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:283


xxx before update is x: -3.72552132607
y: -99.2412109375
theta: 4.72301435471
speed: 13.5789680481
id: 1
t: 282
xxx after update is x: -3.26678824425
y: -100.151542664
theta: 4.86785554886
speed: 13.6314582825
id: 1
t: 283
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:284


xxx before update is x: -3.26678824425
y: -100.151542664
theta: 4.86785554886
speed: 13.6314582825
id: 1
t: 283
xxx after update is x: -3.12792849541
y: -100.684135437
theta: 4.7768163681
speed: 13.9160165787
id: 1
t: 284
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:285


xxx before update is x: -3.12792849541
y: -100.684135437
theta: 4.7768163681
speed: 13.9160165787
id: 1
t: 284
xxx after update is x: -3.29247236252
y: -100.781326294
theta: 4.74534225464
speed: 13.9755706787
id: 1
t: 285
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.481599999999998]
222 self.state_dicts[msg.id][msg.t] is (-65.88082885742188, 2.6951284408569336, 2.9637458324432373, 13.873964309692383)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.29247236252
y: -100.781326294
theta: 4.74534225464
speed: 13.9755706787
id: 1
t: 285
xxx after update is x: -3.0605969429
y: -101.046569824
theta: 4.65699863434
speed: 13.828918457
id: 1
t: 286
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:286


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.7111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.0605969429
y: -101.046569824
theta: 4.65699863434
speed: 13.828918457
id: 1
t: 286
xxx after update is x: -2.74805569649
y: -102.281036377
theta: 4.55791664124
speed: 14.1233453751
id: 1
t: 287
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:287




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:288


xxx before update is x: -2.74805569649
y: -102.281036377
theta: 4.55791664124
speed: 14.1233453751
id: 1
t: 287
xxx after update is x: -3.70471525192
y: -102.863258362
theta: 4.66982078552
speed: 13.7901163101
id: 1
t: 288
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.70471525192
y: -102.863258362
theta: 4.66982078552
speed: 13.7901163101
id: 1
t: 288
xxx after update is x: -2.73269844055
y: -102.932723999
theta: 4.83667612076
speed: 13.7644939423
id: 1
t: 289
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:289


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.475199999999998]
222 self.state_dicts[msg.id][msg.t] is (-68.40412902832031, 3.6613643169403076, 3.1252880096435547, 13.814994812011719)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:290


xxx before update is x: -2.73269844055
y: -102.932723999
theta: 4.83667612076
speed: 13.7644939423
id: 1
t: 289
xxx after update is x: -3.64679646492
y: -103.884757996
theta: 4.66370868683
speed: 13.6980676651
id: 1
t: 290
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:291


xxx before update is x: -3.64679646492
y: -103.884757996
theta: 4.66370868683
speed: 13.6980676651
id: 1
t: 290
xxx after update is x: -3.54344534874
y: -104.854904175
theta: 4.77966594696
speed: 13.7474508286
id: 1
t: 291
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.54344534874
y: -104.854904175
theta: 4.77966594696
speed: 13.7474508286
id: 1
t: 291
xxx after update is x: -3.11800384521
y: -105.245819092
theta: 4.56519412994
speed: 13.859208107
id: 1
t: 292
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:292


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:293


xxx before update is x: -3.11800384521
y: -105.245819092
theta: 4.56519412994
speed: 13.859208107
id: 1
t: 292
xxx after update is x: -3.06022071838
y: -106.257110596
theta: 4.82479953766
speed: 14.0158071518
id: 1
t: 293
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-70.7040786743164, 3.4567627906799316, 3.263134241104126, 13.701982498168945)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:294


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.0222222222






self.maneuver_requested None
xxx before update is x: -3.06022071838
y: -106.257110596
theta: 4.82479953766
speed: 14.0158071518
id: 1
t: 293
xxx after update is x: -3.16827726364
y: -106.047348022
theta: 4.66122674942
speed: 1t: 287
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:288


xxx before update is x: -67.2393875122
y: 2.96050190926
theta: 3.17424845695
speed: 13.7163333893
id: 0
t: 287
xxx after update is x: -67.7442626953
y: 3.83027982712
theta: 3.03917646408
speed: 13.6342506409
id: 0
t: 288
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.7047152519226074, -102.8632583618164, 4.669820785522461, 13.790116310119629)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:289


xxx before update is x: -67.7442626953
y: 3.83027982712
theta: 3.03917646408
speed: 13.6342506409
id: 0
t: 288
xxx after update is x: -68.4041290283
y: 3.66136431694
theta: 3.12528800964
speed: 13.814994812
id: 0
t: 289
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:290


xxx before update is x: -68.4041290283
y: 3.66136431694
theta: 3.12528800964
speed: 13.814994812
id: 0
t: 289
xxx after update is x: -68.8856811523
y: 3.09910726547
theta: 3.26292562485
speed: 13.8716611862
id: 0
t: 290
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:291


xxx before update is x: -68.8856811523
y: 3.09910726547
theta: 3.26292562485
speed: 13.8716611862
id: 0
t: 290
xxx after update is x: -69.6714324951
y: 2.7981607914
theta: 2.99072527885
speed: 14.0588817596
id: 0
t: 291
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:292


xxx before update is x: -69.6714324951
y: 2.7981607914
theta: 2.99072527885
speed: 14.0588817596
id: 0
t: 291
xxx after update is x: -70.3641586304
y: 3.35567092896
theta: 3.05538582802
speed: 13.5223588943
id: 0
t: 292
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:293


xxx before update is x: -70.3641586304
y: 3.35567092896
theta: 3.05538582802
speed: 13.5223588943
id: 0
t: 292
xxx after update is x: -70.7040786743
y: 3.45676279068
theta: 3.2631342411
speed: 13.7019824982
id: 0
t: 293
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.060220718383789, -106.25711059570312, 4.824799537658691, 14.015807151794434)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:294


xxx before update is x: -70.7040786743
y: 3.45676279068
theta: 3.2631342411
speed: 13.7019824982
id: 0
t: 293
xxx after update is x: -71.2871322632
y: 3.02913880348
theta: 3.26705813408
speed: 13.7495651245
id: 0
t: 294
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update fu4.2618932724
id: 1
t: 294
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:295


xxx before update is x: -3.16827726364
y: -106.047348022
theta: 4.66122674942
speed: 14.2618932724
id: 1
t: 294
xxx after update is x: -3.05125164986
y: -107.586486816
theta: 4.69986104965
speed: 13.710682869
id: 1
t: 295
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:296


xxx before update is x: -3.05125164986
y: -107.586486816
theta: 4.69986104965
speed: 13.710682869
id: 1
t: 295
xxx after update is x: -2.75813746452
y: -107.372879028
theta: 4.71052742004
speed: 13.9190597534
id: 1
t: 296
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5119999999999982]
222 self.state_dicts[msg.id][msg.t] is (-72.87017822265625, 3.274827003479004, 3.1240408420562744, 13.973325729370117)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:297


xxx before update is x: -2.75813746452
y: -107.372879028
theta: 4.71052742004
speed: 13.9190597534
id: 1
t: 296
xxx after update is x: -3.09780550003
y: -108.185684204
theta: 4.67047071457
speed: 13.6720428467
id: 1
t: 297
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:298


xxx before update is x: -3.09780550003
y: -108.185684204
theta: 4.67047071457
speed: 13.6720428467
id: 1
t: 297
xxx after update is x: -3.46376657486
y: -108.656761169
theta: 4.57282781601
speed: 13.6156921387
id: 1
t: 298
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:299


xxx before update is x: -3.46376657486
y: -108.656761169
theta: 4.57282781601
speed: 13.6156921387
id: 1
t: 298
xxx after update is x: -3.3425090313
y: -110.137115479
theta: 4.58878469467
speed: 13.7308664322
id: 1
t: 299
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:300


xxx before update is x: -3.3425090313
y: -110.137115479
theta: 4.58878469467
speed: 13.7308664322
id: 1
t: 299
xxx after update is x: -3.40315508842
y: -110.558387756
theta: 4.7873878479
speed: 13.9768123627
id: 1
t: 300
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48479999999999795]
222 self.state_dicts[msg.id][msg.t] is (-75.1558609008789, 3.2144722938537598, 3.2045068740844727, 13.731658935546875)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:301


xxx before update is x: -3.40315508842
y: -110.558387756
theta: 4.7873878479
speed: 13.97681236nction 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:295


xxx before update is x: -71.2871322632
y: 3.02913880348
theta: 3.26705813408
speed: 13.7495651245
id: 0
t: 294
xxx after update is x: -72.1687088013
y: 3.39706277847
theta: 3.03452277184
speed: 13.6988153458
id: 0
t: 295
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:296


xxx before update is x: -72.1687088013
y: 3.39706277847
theta: 3.03452277184
speed: 13.6988153458
id: 0
t: 295
xxx after update is x: -72.8701782227
y: 3.27482700348
theta: 3.12404084206
speed: 13.9733257294
id: 0
t: 296
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:297


xxx before update is x: -72.8701782227
y: 3.27482700348
theta: 3.12404084206
speed: 13.9733257294
id: 0
t: 296
xxx after update is x: -73.2964859009
y: 2.97590875626
theta: 3.24866843224
speed: 13.5826673508
id: 0
t: 297
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0978055000305176, -108.18568420410156, 4.670470714569092, 13.672042846679688)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -73.2964859009
y: 2.97590875626
theta: 3.24866843224
speed: 13.5826673508
id: 0
t: 297
xxx after update is x: -73.6879577637
y: 3.03004384041
theta: 3.07669758797
speed: 13.5380764008
id: 0
t: 298
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:298




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -73.6879577637
y: 3.03004384041
theta: 3.07669758797
speed: 13.5380764008
id: 0
t: 298
xxx after update is x: -75.2169723511
y: 3.24589657784
theta: 3.24682402611
speed: 13.8947401047
id: 0
t: 299
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:299




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:300


xxx before update is x: -75.2169723511
y: 3.24589657784
theta: 3.24682402611
speed: 13.8947401047
id: 0
t: 299
xxx after update is x: -75.1558609009
y: 3.21447229385
theta: 3.20450687408
speed: 13.7316589355
id: 0
t: 300
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:301


xxx before update is x: -75.1558609009
y: 3.21447229385
theta: 3.20450687408
speed: 13.7316589355
id: 0
t: 300
xxx after update is x: -76.140007019
y: 2.9981637001
theta: 3.02758836746
speed: 13.9769420624
id: 0
t: 301
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:302


xxx before update is x: -76.140007019
y: 2.9981637001
theta: 3.02758836746
speed: 13.9769420624
id: 0
t: 301
xxx after update is x: -76.5638809204
y: 3.43745326996
theta: 3.17379212379
speed: 13.75349617
id: 0
t: 302
maneuver_negotiatir.py finish the update agent state from ros f27
id: 1
t: 300
xxx after update is x: -3.66521549225
y: -110.424072266
theta: 4.65467453003
speed: 13.9942893982
id: 1
t: 301
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:302


xxx before update is x: -3.66521549225
y: -110.424072266
theta: 4.65467453003
speed: 13.9942893982
id: 1
t: 301
xxx after update is x: -2.85478067398
y: -111.021377563
theta: 4.65198993683
speed: 14.1127290726
id: 1
t: 302
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:303


xxx before update is x: -2.85478067398
y: -111.021377563
theta: 4.65198993683
speed: 14.1127290726
id: 1
t: 302
xxx after update is x: -2.53961920738
y: -112.072532654
theta: 4.67810440063
speed: 14.0515565872
id: 1
t: 303
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:304


xxx before update is x: -2.53961920738
y: -112.072532654
theta: 4.67810440063
speed: 14.0515565872
id: 1
t: 303
xxx after update is x: -3.04339694977
y: -112.134666443
theta: 4.78751754761
speed: 13.9783496857
id: 1
t: 304
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5167999999999984]
222 self.state_dicts[msg.id][msg.t] is (-77.42937469482422, 3.2896065711975098, 3.050975799560547, 13.98622989654541)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:305


xxx before update is x: -3.04339694977
y: -112.134666443
theta: 4.78751754761
speed: 13.9783496857
id: 1
t: 304
xxx after update is x: -3.71235918999
y: -113.192901611
theta: 4.80935001373
speed: 13.8250541687
id: 1
t: 305
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:306


xxx before update is x: -3.71235918999
y: -113.192901611
theta: 4.80935001373
speed: 13.8250541687
id: 1
t: 305
xxx after update is x: -3.33498001099
y: -114.610038757
theta: 4.70743083954
speed: 14.2672672272
id: 1
t: 306
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:307


xxx before update is x: -3.33498001099
y: -114.610038757
theta: 4.70743083954
speed: 14.2672672272
id: 1
t: 306
xxx after update is x: -3.79157972336
y: -114.324905396
theta: 4.7266998291
speed: 13.339258194
id: 1
t: 307
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.79157972336
y: -114.324905396
theta: 4.7266998291
speed: 13.339258194
id: 1
t: 307
xxx after update is x: -3.61482834816
y: -115.235176086
theta: 4.78574228287
speed: 13.5241260529
id: 1
t: 308
maneuver_negotiatir.py finish the update agent state from ros funtion
luntion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.854780673980713, -111.02137756347656, 4.651989936828613, 14.1127290725708)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:303


xxx before update is x: -76.5638809204
y: 3.43745326996
theta: 3.17379212379
speed: 13.75349617
id: 0
t: 302
xxx after update is x: -77.1212768555
y: 3.38886189461
theta: 2.96476531029
speed: 13.9475469589
id: 0
t: 303
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:304


xxx before update is x: -77.1212768555
y: 3.38886189461
theta: 2.96476531029
speed: 13.9475469589
id: 0
t: 303
xxx after update is x: -77.4293746948
y: 3.2896065712
theta: 3.05097579956
speed: 13.9862298965
id: 0
t: 304
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:305


xxx before update is x: -77.4293746948
y: 3.2896065712
theta: 3.05097579956
speed: 13.9862298965
id: 0
t: 304
xxx after update is x: -77.9903869629
y: 3.41146612167
theta: 3.32158350945
speed: 14.246304512
id: 0
t: 305
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:306


xxx before update is x: -77.9903869629
y: 3.41146612167
theta: 3.32158350945
speed: 14.246304512
id: 0
t: 305
xxx after update is x: -78.640083313
y: 3.60184526443
theta: 3.35921192169
speed: 13.6351194382
id: 0
t: 306
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -78.640083313
y: 3.60184526443
theta: 3.35921192169
speed: 13.6351194382
id: 0
t: 306
xxx after update is x: -79.1091003418
y: 3.27600336075
theta: 3.26940608025
speed: 14.0064353943
id: 0
t: 307
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:307


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.7915797233581543, -114.32490539550781, 4.7266998291015625, 13.339258193969727)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:308


xxx before update is x: -79.1091003418
y: 3.27600336075
theta: 3.26940608025
speed: 14.0064353943
id: 0
t: 307
xxx after update is x: -79.9839706421
y: 3.30165290833
theta: 3.08009147644
speed: 13.9250793457
id: 0
t: 308
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:309


xxx before update is x: -79.9839706421
y: 3.30165290833
theta: 3.08009147644
speed: 13.9250793457
id: 0
t: 308
xxx after update is x: -81.1815567017
y: 3.2539498806
theta: 3.32871437073
speed: 13.7826051712
id: 0
t: 309
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the updaeave the update function 
in spin function, finish the n times spin:308


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.61482834816
y: -115.235176086
theta: 4.78574228287
speed: 13.5241260529
id: 1
t: 308
xxx after update is x: -3.18079066277
y: -115.736694336
theta: 4.70994710922
speed: 13.8854999542
id: 1
t: 309
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:309


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.7333333333






self.maneuver_requested None
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48319999999999796]
222 self.state_dicts[msg.id][msg.t] is (-81.18155670166016, 3.2539498805999756, 3.328714370727539, 13.782605171203613)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:310


xxx before update is x: -3.18079066277
y: -115.736694336
theta: 4.70994710922
speed: 13.8854999542
id: 1
t: 309
xxx after update is x: -3.01727247238
y: -116.878189087
theta: 4.68007707596
speed: 13.7769231796
id: 1
t: 310
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:311


xxx before update is x: -3.01727247238
y: -116.878189087
theta: 4.68007707596
speed: 13.7769231796
id: 1
t: 310
xxx after update is x: -3.30824041367
y: -117.136611938
theta: 4.54976558685
speed: 13.6563158035
id: 1
t: 311
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:312


xxx before update is x: -3.30824041367
y: -117.136611938
theta: 4.54976558685
speed: 13.6563158035
id: 1
t: 311
xxx after update is x: -3.05909228325
y: -117.693313599
theta: 4.69933509827
speed: 13.6797065735
id: 1
t: 312
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:313


xxx before update is x: -3.05909228325
y: -117.693313599
theta: 4.69933509827
speed: 13.6797065735
id: 1
t: 312
xxx after update is x: -3.18356347084
y: -118.520065308
theta: 4.7437543869
speed: 13.9548177719
id: 1
t: 313
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5311999999999988]
222 self.state_dicts[msg.id][msg.t] is (-83.27154541015625, 3.352177619934082, 3.015817880630493, 13.949655532836914)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:314


xxx before update is x: -3.18356347084
y: -118.520065308
theta: 4.7437543869
speed: 13.9548177719
id: 1
t: 313
xxx after update is x: -3.59282279015
y: -118.742103577
theta: 4.64409542084
speed: 13.8595895767
id: 1
t: 314
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the te function xxx before update is x: -81.1815567017
y: 3.2539498806
theta: 3.32871437073
speed: 13.7826051712
id: 0
t: 309
xxx after update is x: -81.4795761108
y: 3.14763784409
theta: 2.99897646904
speed: 13.9934453964
id: 0
t: 310
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:310




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -81.4795761108
y: 3.14763784409
theta: 2.99897646904
speed: 13.9934453964
id: 0
t: 310
xxx after update is x: -81.4646530151
y: 3.64897203445
theta: 3.19612908363
speed: 13.4644384384
id: 0
t: 311
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:311




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -81.4646530151
y: 3.64897203445
theta: 3.19612908363
speed: 13.4644384384
id: 0
t: 311
xxx after update is x: -82.4445953369
y: 3.06270623207
theta: 3.25858974457
speed: 13.8178653717
id: 0
t: 312
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:312


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0590922832489014, -117.69331359863281, 4.699335098266602, 13.679706573486328)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:313


xxx before update is x: -82.4445953369
y: 3.06270623207
theta: 3.25858974457
speed: 13.8178653717
id: 0
t: 312
xxx after update is x: -83.2715454102
y: 3.35217761993
theta: 3.01581788063
speed: 13.9496555328
id: 0
t: 313
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:314


xxx before update is x: -83.2715454102
y: 3.35217761993
theta: 3.01581788063
speed: 13.9496555328
id: 0
t: 313
xxx after update is x: -83.8082580566
y: 3.1947953701
theta: 3.28711700439
speed: 13.8392372131
id: 0
t: 314
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:315


xxx before update is x: -83.8082580566
y: 3.1947953701
theta: 3.28711700439
speed: 13.8392372131
id: 0
t: 314
xxx after update is x: -84.8188552856
y: 2.97367477417
theta: 3.10171246529
speed: 14.0635166168
id: 0
t: 315
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:316


xxx before update is x: -84.8188552856
y: 2.97367477417
theta: 3.10171246529
speed: 14.0635166168
id: 0
t: 315
xxx after update is x: -84.9756469727
y: 3.35537004471
theta: 2.98336362839
speed: 13.952296257
id: 0
t: 316
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3931663036346436, -119.82999420166016, 4.656053066253662, 13.699312210083008)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:317


xxx before update is x: -84.9756469727
y: 3.35537004471
theta: 2.98336362839
speed: 13.952296257
id: 0
t: 316
xxx after update is x: -85.8969650269
y: 2.69891142845
theta: 3.0834338665
speed: 14.117816925
id: 0
t: 317
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:318


xxx before update is x: -85.8969650269
y: 2.69891142845
theta: 3.0834338665
speed: 14.117816925
id: 0
t: 317
xxx after update is x: -86.2717895508
y: 3.05768966675
theta: 3.08321452141
speed: 13.6988115311
id: 0
t: 318
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:319


xxx before update is x: -86.2717895508
y: 3.05768966675
theta: 3.08321452141
speed: 13.6988115311
id: 0
t: 318
xxx after update is x: -86.5168991089
y: 3.19126582146
theta: 3.2834148407
speed: 13.5953950882
id: 0
t: 319
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:320


xxx before update is x: -86.5168991089
y: 3.19126582146
theta: 3.2834148407
speed: 13.5953950882
id: 0
t: 319
xxx after update is x: -87.6133880615
y: 3.28668856621
theta: 3.25850915909
speed: 13.6565103531
id: 0
t: 320
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:321


xxx before update is x: -87.6133880615
y: 3.28668856621
theta: 3.25850915909
speed: 13.6565103531
id: 0
t: 320
xxx after update is x: -88.2978286743
y: 3.57857513428
theta: 3.06755971909
speed: 13.9954528809
id: 0
t: 321
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -88.2978286743
y: 3.57857513428
theta: 3.06755971909
speed: 13.9954528809
id: 0
t: 321
xxx after update is x: -88.4539031982
y: 3.02753257751
theta: 3.13313007355
speed: 13.9830741882
id: 0
t: 322
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:322




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -88.4539031982
y: 3.02753257751
theta: 3.13313007355
speed: 13.9830741882
id: 0
t: 322
xxx after update is x: -89.4223480225
y: 2.12570142746
theta: 3.16928553581
speed: 14.0654783249
id: 0
t: 323
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:323




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -89.4223480225
y: 2.12570142746
theta: 3.16928553581
speed: 14.0654783249
id: 0
t: 323
xxx after update is x: -90.1360397339
y: 3.8608481884
theta: 3.0092830658
speed: 14.2108869553
id: 0
t: 324
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:324




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -90.1360397339
y: 3.8608481884
theta: 3.0092830658
speed: 14.2108869553
id: 0
t: 324
xxx after update is x: -90.6027526855
y: 3.20146346092
theta: 3.07284903526
speed: 13.5864286423
id: 0
t: 325
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finisn times spin:315

xxx before update is x: -3.59282279015
y: -118.742103577
theta: 4.64409542084
speed: 13.8595895767
id: 1
t: 314
xxx after update is x: -3.45258784294
y: -119.444198608
theta: 4.72573328018
speed: 13.6598443985
id: 1
t: 315
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:316


xxx before update is x: -3.45258784294
y: -119.444198608
theta: 4.72573328018
speed: 13.6598443985
id: 1
t: 315
xxx after update is x: -3.39316630363
y: -119.829994202
theta: 4.65605306625
speed: 13.6993122101
id: 1
t: 316
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4943999999999979]
222 self.state_dicts[msg.id][msg.t] is (-84.97564697265625, 3.355370044708252, 2.983363628387451, 13.952296257019043)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:317


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:318




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:319




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:320


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48639999999999795]
222 self.state_dicts[msg.id][msg.t] is (-87.61338806152344, 3.2866885662078857, 3.2585091590881348, 13.656510353088379)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:321


222 self.state_dicts[msg.id][msg.t] is (-88.2978286743164, 3.5785751342773438, 3.0675597190856934, 13.995452880859375)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:322


222 self.state_dicts[msg.id][msg.t] is (-88.45390319824219, 3.0275325775146484, 3.1331300735473633, 13.983074188232422)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:323


222 self.state_dicts[msg.id][msg.t] is (-89.42234802246094, 2.125701427459717, 3.169285535812378, 14.065478324890137)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:324


222 self.state_dicts[msg.id][msg.t] is (-90.13603973388672, 3.8608481884002686, 3.0092830657958984, 14.21088695526123)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:325


222 self.state_dicts[msg.id][msg.t] is (-90.60275268554688, 3.201463460922241, 3.0728490352630615, 13.58642864227295)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:326


222 self.state_dicts[msg.id][msg.t] is (-91.40022277832031, 2.7928473949432373, 3.1591503620147705, 13.762995719909668)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:327


222 selfh the n times spin:325




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -90.6027526855
y: 3.20146346092
theta: 3.07284903526
speed: 13.5864286423
id: 0
t: 325
xxx after update is x: -91.4002227783
y: 2.79284739494
theta: 3.15915036201
speed: 13.7629957199
id: 0
t: 326
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:326




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -91.4002227783
y: 2.79284739494
theta: 3.15915036201
speed: 13.7629957199
id: 0
t: 326
xxx after update is x: -91.8792800903
y: 3.25320911407
theta: 3.04646873474
speed: 14.257390976
id: 0
t: 327
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:327




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -91.8792800903
y: 3.25320911407
theta: 3.04646873474
speed: 14.257390976
id: 0
t: 327
xxx after update is x: -92.1769866943
y: 3.35897016525
theta: 3.07447767258
speed: 13.7610740662
id: 0
t: 328
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:328




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -92.1769866943
y: 3.35897016525
theta: 3.07447767258
speed: 13.7610740662
id: 0
t: 328
xxx after update is x: -92.7729873657
y: 3.52493834496
theta: 3.24023389816
speed: 13.9866943359
id: 0
t: 329
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:329




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -92.7729873657
y: 3.52493834496
theta: 3.24023389816
speed: 13.9866943359
id: 0
t: 329
xxx after update is x: -93.3324508667
y: 3.35146856308
theta: 3.21208357811
speed: 14.0446987152
id: 0
t: 330
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:330




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -93.3324508667
y: 3.35146856308
theta: 3.21208357811
speed: 14.0446987152
id: 0
t: 330
xxx after update is x: -94.0872573853
y: 3.23468375206
theta: 2.83773207664
speed: 13.6571941376
id: 0
t: 331
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:331




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -94.0872573853
y: 3.23468375206
theta: 2.83773207664
speed: 13.6571941376
id: 0
t: 331
xxx after update is x: -94.0712890625
y: 3.45809173584
theta: 3.15399098396
speed: 13.8024749756
id: 0
t: 332
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:332




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -94.0712890625
y: 3.45809173584
theta: 3.15399098396
speed: 13.8024749756
id: 0
t: 332
xxx after update is x: -95.4088897705
y: 3.50217747688
theta: 3.1389811039
speed: 13.3696708679
id: 0
t: 333
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:333




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -95.4088897705
y: 3.50217747688
theta: 3.1389811039
speed: 13.3696708.state_dicts[msg.id][msg.t] is (-91.87928009033203, 3.253209114074707, 3.046468734741211, 14.257390975952148)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:328


222 self.state_dicts[msg.id][msg.t] is (-92.17698669433594, 3.3589701652526855, 3.0744776725769043, 13.76107406616211)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:329


222 self.state_dicts[msg.id][msg.t] is (-92.77298736572266, 3.5249383449554443, 3.240233898162842, 13.9866943359375)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:330


222 self.state_dicts[msg.id][msg.t] is (-93.33245086669922, 3.351468563079834, 3.212083578109741, 14.044698715209961)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:331


222 self.state_dicts[msg.id][msg.t] is (-94.0872573852539, 3.2346837520599365, 2.8377320766448975, 13.657194137573242)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:332


222 self.state_dicts[msg.id][msg.t] is (-94.0712890625, 3.4580917358398438, 3.1539909839630127, 13.802474975585938)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:333


222 self.state_dicts[msg.id][msg.t] is (-95.40888977050781, 3.5021774768829346, 3.1389811038970947, 13.369670867919922)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:334


222 self.state_dicts[msg.id][msg.t] is (-95.81414794921875, 3.028693199157715, 3.222357988357544, 13.107114791870117)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:335


222 self.state_dicts[msg.id][msg.t] is (-96.90345764160156, 3.8426897525787354, 3.0948991775512695, 12.857839584350586)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:336


222 self.state_dicts[msg.id][msg.t] is (-97.0103759765625, 2.8674662113189697, 3.169295310974121, 12.626978874206543)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:337


222 self.state_dicts[msg.id][msg.t] is (-97.79916381835938, 3.4278805255889893, 3.1723434925079346, 12.251945495605469)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:338


222 self.state_dicts[msg.id][msg.t] is (-98.21429443359375, 3.578510284423828, 3.130079507827759, 11.786453247070312)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:339


222 self.state_dicts[msg.id][msg.t] is (-98.93528747558594, 3.6730334758758545, 2.949612855911255, 11.766115188598633)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:340


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444
222 self.state_dicts[msg.id][msg.t] is (-99.35926818847656, 2.96752667427063, 3.269655227661133, 11.521199226379395)






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:341


222 self.state_dicts[ms679
id: 0
t: 333
xxx after update is x: -95.8141479492
y: 3.02869319916
theta: 3.22235798836
speed: 13.1071147919
id: 0
t: 334
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:334




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -95.8141479492
y: 3.02869319916
theta: 3.22235798836
speed: 13.1071147919
id: 0
t: 334
xxx after update is x: -96.9034576416
y: 3.84268975258
theta: 3.09489917755
speed: 12.8578395844
id: 0
t: 335
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:335




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -96.9034576416
y: 3.84268975258
theta: 3.09489917755
speed: 12.8578395844
id: 0
t: 335
xxx after update is x: -97.0103759766
y: 2.86746621132
theta: 3.16929531097
speed: 12.6269788742
id: 0
t: 336
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:336




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -97.0103759766
y: 2.86746621132
theta: 3.16929531097
speed: 12.6269788742
id: 0
t: 336
xxx after update is x: -97.7991638184
y: 3.42788052559
theta: 3.17234349251
speed: 12.2519454956
id: 0
t: 337
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:337




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -97.7991638184
y: 3.42788052559
theta: 3.17234349251
speed: 12.2519454956
id: 0
t: 337
xxx after update is x: -98.2142944336
y: 3.57851028442
theta: 3.13007950783
speed: 11.7864532471
id: 0
t: 338
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:338




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -98.2142944336
y: 3.57851028442
theta: 3.13007950783
speed: 11.7864532471
id: 0
t: 338
xxx after update is x: -98.9352874756
y: 3.67303347588
theta: 2.94961285591
speed: 11.7661151886
id: 0
t: 339
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:339




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -98.9352874756
y: 3.67303347588
theta: 2.94961285591
speed: 11.7661151886
id: 0
t: 339
xxx after update is x: -99.3592681885
y: 2.96752667427
theta: 3.26965522766
speed: 11.5211992264
id: 0
t: 340
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:340




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -99.3592681885
y: 2.96752667427
theta: 3.26965522766
speed: 11.5211992264
id: 0
t: 340
xxx after update is x: -99.4944076538
y: 3.24964499474
theta: 3.22178077698
speed: 11.4403982162
id: 0
t: 341
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:341




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -99.4944076538
y: 3.24964499474
theta: 3.22178077698
speed: 11.4403982162
id: 0
t: 341
xxx after update is x: -100.436729431
y: 2.99334740639
theta: 3.09809446335
speed: 11.0167684555
id: 0
t: 342
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:342




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -100.436729431
y: 2.99334740639
theta: 3.09809446335
speed: 11.0167684555
id: 0
t: 342
xxx after update is x: -100.807815552
y: 3.26012134552
theta: 3.24771666527
speed: 10.6935482025
id: 0
t: 343
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:343




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -100.807815552
y: 3.26012134552
theta: 3.24771666527
speed: 10.6935482025
id: 0
t: 343
xxx after update is x: -101.558265686
y: 3.0391023159
theta: 3.21767306328
speed: 10.5858564377
id: 0
t: 344
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:344




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -101.558265686
y: 3.0391023159
theta: 3.21767306328
speed: 10.5858564377
id: 0
t: 344
xxx after update is x: -101.083396912
y: 3.38814544678
theta: 3.21559309959
speed: 9.96245574951
id: 0
t: 345
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:345




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -101.083396912
y: 3.38814544678
theta: 3.21559309959
speed: 9.96245574951
id: 0
t: 345
xxx after update is x: -101.979057312
y: 3.07409620285
theta: 3.06939387321
speed: 10.1015167236
id: 0
t: 346
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:346




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -101.979057312
y: 3.07409620285
theta: 3.06939387321
speed: 10.1015167236
id: 0
t: 346
xxx after update is x: -102.698173523
y: 3.26795458794
theta: 3.23939490318
speed: 9.69861030579
id: 0
t: 347
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:347




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -102.698173523
y: 3.26795458794
theta: 3.23939490318
speed: 9.69861030579
id: 0
t: 347
xxx after update is x: -103.436561584
y: 2.99003076553
theta: 3.19563961029
speed: 9.32543468475
id: 0
t: 348
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:348




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -103.436561584
y: 2.99003076553
theta: 3.19563961029
speed: 9.32543468475
id: 0
t: 348
xxx after update is x: -103.773422241
y: 3.6594991684
theta: 3.07295370102
speed: 9.09727668762
id: 0
t: 349
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:349




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -103.773422241
y: 3.6594991684
theta: 3.07295370102
speed: 9.09727668762
id: 0
t: 349
xxx after update is x: -103.855140686
y: 3.18834757805
theta: 3.25581169128
speed: 8.72385311127
id: 0
t: 350
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:350




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -103.855140686
y: 3.18834757805
theta: 3.25581169128
speed: 8.72385311127
id: 0
t: 350
xxx after update is x: -103.92502594
y: 3.25794768333
theta: 3.2345597g.id][msg.t] is (-99.4944076538086, 3.2496449947357178, 3.221780776977539, 11.440398216247559)
222 self.state_dicts[msg.id][msg.t] is (-100.43672943115234, 2.993347406387329, 3.0980944633483887, 11.016768455505371)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:342




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:343


222 self.state_dicts[msg.id][msg.t] is (-100.80781555175781, 3.2601213455200195, 3.2477166652679443, 10.693548202514648)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:344


222 self.state_dicts[msg.id][msg.t] is (-101.55826568603516, 3.03910231590271, 3.2176730632781982, 10.585856437683105)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:345


222 self.state_dicts[msg.id][msg.t] is (-101.0833969116211, 3.3881454467773438, 3.215593099594116, 9.962455749511719)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:346


222 self.state_dicts[msg.id][msg.t] is (-101.97905731201172, 3.074096202850342, 3.0693938732147217, 10.101516723632812)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:347


222 self.state_dicts[msg.id][msg.t] is (-102.69817352294922, 3.2679545879364014, 3.2393949031829834, 9.698610305786133)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:348


222 self.state_dicts[msg.id][msg.t] is (-103.43656158447266, 2.9900307655334473, 3.1956396102905273, 9.325434684753418)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:349


222 self.state_dicts[msg.id][msg.t] is (-103.77342224121094, 3.659499168395996, 3.072953701019287, 9.09727668762207)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:350


222 self.state_dicts[msg.id][msg.t] is (-103.85514068603516, 3.188347578048706, 3.2558116912841797, 8.72385311126709)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:351


222 self.state_dicts[msg.id][msg.t] is (-103.9250259399414, 3.2579476833343506, 3.2345597743988037, 8.518858909606934)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:352


222 self.state_dicts[msg.id][msg.t] is (-104.11483001708984, 2.9678726196289062, 3.396941661834717, 8.49406909942627)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:353


222 self.state_dicts[msg.id][msg.t] is (-105.1383285522461, 3.5691287517547607, 3.0745997428894043, 8.25716781616211)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:354


222 self.state_dicts[msg.id][msg.t] is (-105.59380340576172, 2.9728739261627197, 3.188722610473633, 7.732819080352783)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:355


222 self.state_dicts[msg.id][msg.t] is (-105.7403564453125, 3.107208013534546, 3.1530051231384277, 7.250558376312256)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuv744
speed: 8.51885890961
id: 0
t: 351
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:351




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:352


xxx before update is x: -103.92502594
y: 3.25794768333
theta: 3.2345597744
speed: 8.51885890961
id: 0
t: 351
xxx after update is x: -104.114830017
y: 2.96787261963
theta: 3.39694166183
speed: 8.49406909943
id: 0
t: 352
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -104.114830017
y: 2.96787261963
theta: 3.39694166183
speed: 8.49406909943
id: 0
t: 352
xxx after update is x: -105.138328552
y: 3.56912875175
theta: 3.07459974289
speed: 8.25716781616
id: 0
t: 353
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:353




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -105.138328552
y: 3.56912875175
theta: 3.07459974289
speed: 8.25716781616
id: 0
t: 353
xxx after update is x: -105.593803406
y: 2.97287392616
theta: 3.18872261047
speed: 7.73281908035
id: 0
t: 354
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:354




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -105.593803406
y: 2.97287392616
theta: 3.18872261047
speed: 7.73281908035
id: 0
t: 354
xxx after update is x: -105.740356445
y: 3.10720801353
theta: 3.15300512314
speed: 7.25055837631
id: 0
t: 355
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:355




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -105.740356445
y: 3.10720801353
theta: 3.15300512314
speed: 7.25055837631
id: 0
t: 355
xxx after update is x: -106.325019836
y: 2.91586208344
theta: 3.06855344772
speed: 7.15109205246
id: 0
t: 356
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:356




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -106.325019836
y: 2.91586208344
theta: 3.06855344772
speed: 7.15109205246
id: 0
t: 356
xxx after update is x: -106.308509827
y: 3.22798609734
theta: 3.27331018448
speed: 7.19200181961
id: 0
t: 357
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:357




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -106.308509827
y: 3.22798609734
theta: 3.27331018448
speed: 7.19200181961
id: 0
t: 357
xxx after update is x: -106.557754517
y: 3.36050605774
theta: 2.98532557487
speed: 7.03413391113
id: 0
t: 358
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:358




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -106.557754517
y: 3.36050605774
theta: 2.98532557487
speed: 7.03413391113
id: 0
t: 358
xxx after update is x: -107.707801819
y: 3.27431082726
theta: 3.04030227661
speed: 6.61606884003
id: 0
t: 359
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:359




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -107.707801819
y: 3.27431082726
theta: 3.04030227661
speed: 6.61606884003
id: 0
t: 359
xxx after update is x: -108.29183197
y: 3.18393111229
theta: 3.22802448273
speed: 6.18935871124
id: 0
t: 360
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:360




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -108.29183197
y: 3.18393111229
theta: 3.22802448273
speed: 6.18935871124
id: 0
t: 360
xxx after update is x: -107.878204346
y: 2.9644753933
theta: 3.09155082703
speed: 5.85679578781
id: 0
t: 361
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:361




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -107.878204346
y: 2.9644753933
theta: 3.09155082703
speed: 5.85679578781
id: 0
t: 361
xxx after update is x: -108.132698059
y: 2.963296175
theta: 3.12649345398
speed: 6.057076931
id: 0
t: 362
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:362




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -108.132698059
y: 2.963296175
theta: 3.12649345398
speed: 6.057076931
id: 0
t: 362
xxx after update is x: -108.045722961
y: 3.33749198914
theta: 3.15909194946
speed: 5.23994827271
id: 0
t: 363
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:363




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -108.045722961
y: 3.33749198914
theta: 3.15909194946
speed: 5.23994827271
id: 0
t: 363
xxx after update is x: -107.505355835
y: 2.85050749779
theta: 3.03321385384
speed: 5.12547063828
id: 0
t: 364
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:364




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -107.505355835
y: 2.85050749779
theta: 3.03321385384
speed: 5.12547063828
id: 0
t: 364
xxx after update is x: -108.492782593
y: 2.90554499626
theta: 3.0538892746
speed: 4.38046884537
id: 0
t: 365
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:365




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -108.492782593
y: 2.90554499626
theta: 3.0538892746
speed: 4.38046884537
id: 0
t: 365
xxx after update is x: -108.261116028
y: 3.22880268097
theta: 3.31954550743
speed: 4.29935455322
id: 0
t: 366
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:366




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -108.261116028
y: 3.22880268097
theta: 3.31954550743
speed: 4.29935455322
id: 0
t: 366
xxx after update is x: -109.213500977
y: 3.50928258896
theta: 3.21830105782
speed: 4.31008434296
id: 0
t: 367
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:367




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -109.213500977
y: 3.50928258896
theta: 3.21830105782
speed: 4.31008434296
id: 0
t: 367
xxx after update is x: -108.946746826
y: 3.47278857231
theta: 3.02622747421
speed: 3.98491406441
id: 0
t: 368
maneuver_negotiatir.py finish the update agent state from roser_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:356


222 self.state_dicts[msg.id][msg.t] is (-106.32501983642578, 2.9158620834350586, 3.0685534477233887, 7.151092052459717)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:357


222 self.state_dicts[msg.id][msg.t] is (-106.30850982666016, 3.2279860973358154, 3.2733101844787598, 7.192001819610596)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:358


222 self.state_dicts[msg.id][msg.t] is (-106.55775451660156, 3.360506057739258, 2.985325574874878, 7.0341339111328125)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:359


222 self.state_dicts[msg.id][msg.t] is (-107.70780181884766, 3.274310827255249, 3.040302276611328, 6.6160688400268555)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:360


222 self.state_dicts[msg.id][msg.t] is (-108.29183197021484, 3.1839311122894287, 3.228024482727051, 6.189358711242676)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:361


222 self.state_dicts[msg.id][msg.t] is (-107.87820434570312, 2.964475393295288, 3.091550827026367, 5.856795787811279)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:362


222 self.state_dicts[msg.id][msg.t] is (-108.13269805908203, 2.9632961750030518, 3.126493453979492, 6.057076930999756)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-108.04572296142578, 3.337491989135742, 3.1590919494628906, 5.239948272705078)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:363


222 self.state_dicts[msg.id][msg.t] is (-107.50535583496094, 2.8505074977874756, 3.0332138538360596, 5.1254706382751465)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:364




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:365


222 self.state_dicts[msg.id][msg.t] is (-108.49278259277344, 2.9055449962615967, 3.053889274597168, 4.380468845367432)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:366


222 self.state_dicts[msg.id][msg.t] is (-108.26111602783203, 3.2288026809692383, 3.3195455074310303, 4.299354553222656)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:367


222 self.state_dicts[msg.id][msg.t] is (-109.2135009765625, 3.5092825889587402, 3.2183010578155518, 4.310084342956543)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:368


222 self.state_dicts[msg.id][msg.t] is (-108.94674682617188, 3.4727885723114014, 3.0262274742126465, 3.9849140644073486)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:369


222 self.state_dicts[msg.id][msg.t] is (-109.45331573486328, 3.701645851135254, 3.1521828174591064, 4.168936729431152)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, fi funtion
leave the update function 
in spin function, finish the n times spin:368




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -108.946746826
y: 3.47278857231
theta: 3.02622747421
speed: 3.98491406441
id: 0
t: 368
xxx after update is x: -109.453315735
y: 3.70164585114
theta: 3.15218281746
speed: 4.16893672943
id: 0
t: 369
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:369




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -109.453315735
y: 3.70164585114
theta: 3.15218281746
speed: 4.16893672943
id: 0
t: 369
xxx after update is x: -109.452331543
y: 3.09924507141
theta: 3.19070482254
speed: 3.26077461243
id: 0
t: 370
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:370




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -109.452331543
y: 3.09924507141
theta: 3.19070482254
speed: 3.26077461243
id: 0
t: 370
xxx after update is x: -109.437965393
y: 3.54083442688
theta: 3.1221511364
speed: 3.11586713791
id: 0
t: 371
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:371




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -109.437965393
y: 3.54083442688
theta: 3.1221511364
speed: 3.11586713791
id: 0
t: 371
xxx after update is x: -110.367362976
y: 3.34584593773
theta: 3.06039905548
speed: 2.84911561012
id: 0
t: 372
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:372




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -110.367362976
y: 3.34584593773
theta: 3.06039905548
speed: 2.84911561012
id: 0
t: 372
xxx after update is x: -109.965324402
y: 3.20012331009
theta: 3.08464646339
speed: 2.80693030357
id: 0
t: 373
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:373




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -109.965324402
y: 3.20012331009
theta: 3.08464646339
speed: 2.80693030357
id: 0
t: 373
xxx after update is x: -109.944519043
y: 3.09777879715
theta: 3.02410078049
speed: 2.43346500397
id: 0
t: 374
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:374




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -109.944519043
y: 3.09777879715
theta: 3.02410078049
speed: 2.43346500397
id: 0
t: 374
xxx after update is x: -110.890182495
y: 3.69061350822
theta: 3.09780955315
speed: 1.86955738068
id: 0
t: 375
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:375




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -110.890182495
y: 3.69061350822
theta: 3.09780955315
speed: 1.86955738068
id: 0
t: 375
xxx after update is x: -110.621253967
y: 3.30088210106
theta: 3.04795336723
speed: 1.9020742178
id: 0
t: 376
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:376




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -110.621253967
y: 3.30088210106
theta: 3.04795336723
speed: 1.90nish the n times spin:370


222 self.state_dicts[msg.id][msg.t] is (-109.45233154296875, 3.099245071411133, 3.190704822540283, 3.260774612426758)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:371


222 self.state_dicts[msg.id][msg.t] is (-109.4379653930664, 3.540834426879883, 3.1221511363983154, 3.1158671379089355)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:372


222 self.state_dicts[msg.id][msg.t] is (-110.36736297607422, 3.345845937728882, 3.060399055480957, 2.8491156101226807)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:373


222 self.state_dicts[msg.id][msg.t] is (-109.96532440185547, 3.2001233100891113, 3.084646463394165, 2.8069303035736084)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:374


222 self.state_dicts[msg.id][msg.t] is (-109.94451904296875, 3.097778797149658, 3.0241007804870605, 2.433465003967285)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:375


222 self.state_dicts[msg.id][msg.t] is (-110.89018249511719, 3.6906135082244873, 3.0978095531463623, 1.8695573806762695)
222 self.state_dicts[msg.id][msg.t] is (-110.62125396728516, 3.30088210105896, 3.0479533672332764, 1.9020742177963257)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:376




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:377


222 self.state_dicts[msg.id][msg.t] is (-109.74942016601562, 2.7061548233032227, 3.067478656768799, 1.6372557878494263)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-110.1410903930664, 3.320192813873291, 3.1515491008758545, 1.244438886642456)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:378




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:379


222 self.state_dicts[msg.id][msg.t] is (-110.40399932861328, 2.904639720916748, 3.0532917976379395, 1.6498030424118042)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:380


222 self.state_dicts[msg.id][msg.t] is (-110.37059783935547, 2.839230537414551, 3.161635398864746, 0.8322799801826477)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:381


222 self.state_dicts[msg.id][msg.t] is (-111.07889556884766, 3.4615983963012695, 3.2354848384857178, 0.7640142440795898)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:382


222 self.state_dicts[msg.id][msg.t] is (-110.39622497558594, 3.1580281257629395, 3.1379923820495605, 0.5028860569000244)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:383


222 self.state_dicts[msg.id][msg.t] is (-110.00179290771484, 3.516615390777588, 3.2445080280303955, 0.24236302077770233)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function,20742178
id: 0
t: 376
xxx after update is x: -109.749420166
y: 2.7061548233
theta: 3.06747865677
speed: 1.63725578785
id: 0
t: 377
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:377




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -109.749420166
y: 2.7061548233
theta: 3.06747865677
speed: 1.63725578785
id: 0
t: 377
xxx after update is x: -110.141090393
y: 3.32019281387
theta: 3.15154910088
speed: 1.24443888664
id: 0
t: 378
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:378




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -110.141090393
y: 3.32019281387
theta: 3.15154910088
speed: 1.24443888664
id: 0
t: 378
xxx after update is x: -110.403999329
y: 2.90463972092
theta: 3.05329179764
speed: 1.64980304241
id: 0
t: 379
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:379




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -110.403999329
y: 2.90463972092
theta: 3.05329179764
speed: 1.64980304241
id: 0
t: 379
xxx after update is x: -110.370597839
y: 2.83923053741
theta: 3.16163539886
speed: 0.832279980183
id: 0
t: 380
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:380




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -110.370597839
y: 2.83923053741
theta: 3.16163539886
speed: 0.832279980183
id: 0
t: 380
xxx after update is x: -111.078895569
y: 3.4615983963
theta: 3.23548483849
speed: 0.76401424408
id: 0
t: 381
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:381




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -111.078895569
y: 3.4615983963
theta: 3.23548483849
speed: 0.76401424408
id: 0
t: 381
xxx after update is x: -110.396224976
y: 3.15802812576
theta: 3.13799238205
speed: 0.5028860569
id: 0
t: 382
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:382




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -110.396224976
y: 3.15802812576
theta: 3.13799238205
speed: 0.5028860569
id: 0
t: 382
xxx after update is x: -110.001792908
y: 3.51661539078
theta: 3.24450802803
speed: 0.242363020778
id: 0
t: 383
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:383




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -110.001792908
y: 3.51661539078
theta: 3.24450802803
speed: 0.242363020778
id: 0
t: 383
xxx after update is x: -110.498352051
y: 2.59511494637
theta: 2.99908185005
speed: -0.236553996801
id: 0
t: 384
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:384




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.498352051
y: 2.59511494637
theta: 2.99908185005
speed: -0.236553996801
id: 0
t: 384
xxx after update is x: -110.441146851
y: 3.39708399773
theta: 3.13059043884
speed: -0.0620978064835
id: 0
t: 385
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:385




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.441146851
y: 3.39708399773
theta: 3.13059043884
speed: -0.0620978064835
id: 0
t: 385
xxx after update is x: -111.003707886
y: 3.54869437218
theta: 3.15313124657
speed: -0.029282508418
id: 0
t: 386
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:386




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -111.003707886
y: 3.54869437218
theta: 3.15313124657
speed: -0.029282508418
id: 0
t: 386
xxx after update is x: -110.37853241
y: 3.4808139801
theta: 3.0299346447
speed: -0.0968264043331
id: 0
t: 387
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:387




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.37853241
y: 3.4808139801
theta: 3.0299346447
speed: -0.0968264043331
id: 0
t: 387
xxx after update is x: -110.354904175
y: 2.79055094719
theta: 3.21178936958
speed: 0.0713732615113
id: 0
t: 388
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:388




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.354904175
y: 2.79055094719
theta: 3.21178936958
speed: 0.0713732615113
id: 0
t: 388
xxx after update is x: -110.81930542
y: 2.94230413437
theta: 3.08297109604
speed: -0.0822480544448
id: 0
t: 389
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:389




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.81930542
y: 2.94230413437
theta: 3.08297109604
speed: -0.0822480544448
id: 0
t: 389
xxx after update is x: -110.752532959
y: 3.43349313736
theta: 3.34690117836
speed: -0.21292771399
id: 0
t: 390
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:390




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.752532959
y: 3.43349313736
theta: 3.34690117836
speed: -0.21292771399
id: 0
t: 390
xxx after update is x: -110.407905579
y: 3.2994248867
theta: 2.87840533257
speed: -0.204794690013
id: 0
t: 391
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:391




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.407905579
y: 3.2994248867
theta: 2.87840533257
speed: -0.204794690013
id: 0
t: 391
xxx after update is x: -110.783622742
y: 3.55215787888
theta: 3.17306828499
speed: 0.254358291626
id: 0
t: 392
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:392




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.783622742
y: 3.55215787888
theta: 3.17306828499
speed: 0.254358291626
id: 0
t: 392
xxx after update is x: -110.349449158
y: 3.21832609177
theta: 3.23225140572
speed: 0.031075142324
id: 0
t: 393
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:393




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.349449158
y: 3.21832609177 finish the n times spin:384


222 self.state_dicts[msg.id][msg.t] is (-110.49835205078125, 2.5951149463653564, 2.99908185005188, -0.23655399680137634)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:385


222 self.state_dicts[msg.id][msg.t] is (-110.44114685058594, 3.3970839977264404, 3.1305904388427734, -0.062097806483507156)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:386


222 self.state_dicts[msg.id][msg.t] is (-111.00370788574219, 3.548694372177124, 3.1531312465667725, -0.02928250841796398)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:387


222 self.state_dicts[msg.id][msg.t] is (-110.37853240966797, 3.480813980102539, 3.0299346446990967, -0.09682640433311462)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:388


222 self.state_dicts[msg.id][msg.t] is (-110.35490417480469, 2.790550947189331, 3.21178936958313, 0.07137326151132584)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:389


222 self.state_dicts[msg.id][msg.t] is (-110.81930541992188, 2.9423041343688965, 3.0829710960388184, -0.08224805444478989)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:390


222 self.state_dicts[msg.id][msg.t] is (-110.75253295898438, 3.433493137359619, 3.3469011783599854, -0.2129277139902115)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:391


222 self.state_dicts[msg.id][msg.t] is (-110.40790557861328, 3.299424886703491, 2.8784053325653076, -0.20479469001293182)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:392


222 self.state_dicts[msg.id][msg.t] is (-110.78362274169922, 3.5521578788757324, 3.1730682849884033, 0.25435829162597656)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:393


222 self.state_dicts[msg.id][msg.t] is (-110.34944915771484, 3.2183260917663574, 3.2322514057159424, 0.031075142323970795)
222 self.state_dicts[msg.id][msg.t] is (-110.72879028320312, 3.377101182937622, 3.079263210296631, -0.5543290376663208)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:394




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:395


222 self.state_dicts[msg.id][msg.t] is (-110.30301666259766, 2.9094018936157227, 3.1909725666046143, -0.03929102420806885)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:396


222 self.state_dicts[msg.id][msg.t] is (-110.25203704833984, 3.2002851963043213, 3.2245357036590576, 0.28385722637176514)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:397


222 self.state_dicts[msg.id][msg.t] is (-110.8265380859375, 3.204545259475708, 3.0830352306365967, -0.21981137990951538)


going to the update function
sim.py in the sim.py update function 
leave the u
theta: 3.23225140572
speed: 0.031075142324
id: 0
t: 393
xxx after update is x: -110.728790283
y: 3.37710118294
theta: 3.0792632103
speed: -0.554329037666
id: 0
t: 394
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:394




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.728790283
y: 3.37710118294
theta: 3.0792632103
speed: -0.554329037666
id: 0
t: 394
xxx after update is x: -110.303016663
y: 2.90940189362
theta: 3.1909725666
speed: -0.0392910242081
id: 0
t: 395
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:395




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.303016663
y: 2.90940189362
theta: 3.1909725666
speed: -0.0392910242081
id: 0
t: 395
xxx after update is x: -110.252037048
y: 3.2002851963
theta: 3.22453570366
speed: 0.283857226372
id: 0
t: 396
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:396




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.252037048
y: 3.2002851963
theta: 3.22453570366
speed: 0.283857226372
id: 0
t: 396
xxx after update is x: -110.826538086
y: 3.20454525948
theta: 3.08303523064
speed: -0.21981137991
id: 0
t: 397
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:397




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.826538086
y: 3.20454525948
theta: 3.08303523064
speed: -0.21981137991
id: 0
t: 397
xxx after update is x: -110.368011475
y: 3.04999804497
theta: 3.17873811722
speed: -0.17423851788
id: 0
t: 398
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:398




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.368011475
y: 3.04999804497
theta: 3.17873811722
speed: -0.17423851788
id: 0
t: 398
xxx after update is x: -110.06502533
y: 3.13437771797
theta: 3.2278149128
speed: 0.455957263708
id: 0
t: 399
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:399




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.06502533
y: 3.13437771797
theta: 3.2278149128
speed: 0.455957263708
id: 0
t: 399
xxx after update is x: -110.967681885
y: 3.37912964821
theta: 3.20472812653
speed: 0.140013799071
id: 0
t: 400
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:400




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.967681885
y: 3.37912964821
theta: 3.20472812653
speed: 0.140013799071
id: 0
t: 400
xxx after update is x: -110.781417847
y: 3.38828873634
theta: 2.96065664291
speed: -0.16834256053
id: 0
t: 401
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:401




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.781417847
y: 3.38828873634
theta: 2.96065664291
speed: -0.16834256053
id: 0
t: 401
xxx after update is x: -110.594993591
y: 2.82844996452
theta: 3.18405079842
speed: 0.322206795216
id: 0
t: 402
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:402




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.594993591
y: 2.82844996452
theta: 3.18405079842
speed: 0.322206795216
id: 0
t: 402
xxx after update is x: -111.053321838
y: 3.30326032639
theta: 3.33385658264
speed: 0.276079326868
id: 0
t: 403
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:403




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -111.053321838
y: 3.30326032639
theta: 3.33385658264
speed: 0.276079326868
id: 0
t: 403
xxx after update is x: -110.40827179
y: 3.18990588188
theta: 3.15639948845
speed: -0.0658193528652
id: 0
t: 404
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:404




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.40827179
y: 3.18990588188
theta: 3.15639948845
speed: -0.0658193528652
id: 0
t: 404
xxx after update is x: -110.875045776
y: 3.29970216751
theta: 3.36198425293
speed: 0.301570445299
id: 0
t: 405
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:405




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.875045776
y: 3.29970216751
theta: 3.36198425293
speed: 0.301570445299
id: 0
t: 405
xxx after update is x: -110.873161316
y: 3.51428747177
theta: 3.19900417328
speed: 0.297775059938
id: 0
t: 406
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:406




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.873161316
y: 3.51428747177
theta: 3.19900417328
speed: 0.297775059938
id: 0
t: 406
xxx after update is x: -110.29044342
y: 3.31853413582
theta: 3.32544136047
speed: 0.240452542901
id: 0
t: 407
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:407




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.29044342
y: 3.31853413582
theta: 3.32544136047
speed: 0.240452542901
id: 0
t: 407
xxx after update is x: -111.140846252
y: 2.90653705597
theta: 3.12116026878
speed: 0.242331758142
id: 0
t: 408
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:408




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -111.140846252
y: 2.90653705597
theta: 3.12116026878
speed: 0.242331758142
id: 0
t: 408
xxx after update is x: -111.042411804
y: 3.11320543289
theta: 3.23994135857
speed: 0.264246970415
id: 0
t: 409
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:409




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -111.042411804
y: 3.11320543289
theta: 3.23994135857
speed: 0.264246970415
id: 0
t: 409
xxx after update is x: -110.821075439
y: 3.77772140503
theta: 3.10666251183
speed: -0.104354701936
id: 0
t: 410
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:410




going to the update function
sim.py in the sim.py update function 
targepdate function 
in spin function, finish the n times spin:398


222 self.state_dicts[msg.id][msg.t] is (-110.36801147460938, 3.0499980449676514, 3.1787381172180176, -0.17423851788043976)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:399


222 self.state_dicts[msg.id][msg.t] is (-110.06502532958984, 3.1343777179718018, 3.2278149127960205, 0.4559572637081146)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:400


222 self.state_dicts[msg.id][msg.t] is (-110.96768188476562, 3.379129648208618, 3.204728126525879, 0.14001379907131195)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-110.78141784667969, 3.388288736343384, 2.9606566429138184, -0.16834256052970886)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:401




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:402


222 self.state_dicts[msg.id][msg.t] is (-110.5949935913086, 2.8284499645233154, 3.1840507984161377, 0.3222067952156067)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:403


222 self.state_dicts[msg.id][msg.t] is (-111.0533218383789, 3.303260326385498, 3.3338565826416016, 0.27607932686805725)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:404


222 self.state_dicts[msg.id][msg.t] is (-110.40827178955078, 3.189905881881714, 3.1563994884490967, -0.06581935286521912)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:405


222 self.state_dicts[msg.id][msg.t] is (-110.87504577636719, 3.2997021675109863, 3.3619842529296875, 0.30157044529914856)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:406


222 self.state_dicts[msg.id][msg.t] is (-110.87316131591797, 3.5142874717712402, 3.1990041732788086, 0.2977750599384308)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:407


222 self.state_dicts[msg.id][msg.t] is (-110.29044342041016, 3.3185341358184814, 3.325441360473633, 0.24045254290103912)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function 222 self.state_dicts[msg.id][msg.t] is (-111.1408462524414, 2.9065370559692383, 3.1211602687835693, 0.24233175814151764)

sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:408




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:409


222 self.state_dicts[msg.id][msg.t] is (-111.04241180419922, 3.1132054328918457, 3.239941358566284, 0.26424697041511536)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:410


222 self.state_dicts[msg.id][msg.t] is (-110.82107543945312, 3.777721405029297, 3.1066625118255615, -0.10435470193624496)
222 self.state_dicts[msg.id][msg.t] is (-110.51900482177734, 3.642897605895996, 3.1014275550842285, 0.0142754428088665)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:411




going to the update function
sim.py in the sim.py updtspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.821075439
y: 3.77772140503
theta: 3.10666251183
speed: -0.104354701936
id: 0
t: 410
xxx after update is x: -110.519004822
y: 3.6428976059
theta: 3.10142755508
speed: 0.0142754428089
id: 0
t: 411
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:411




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.519004822
y: 3.6428976059
theta: 3.10142755508
speed: 0.0142754428089
id: 0
t: 411
xxx after update is x: -110.911994934
y: 2.73099637032
theta: 3.12140822411
speed: 0.243156611919
id: 0
t: 412
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:412




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.911994934
y: 2.73099637032
theta: 3.12140822411
speed: 0.243156611919
id: 0
t: 412
xxx after update is x: -110.691177368
y: 3.37389731407
theta: 3.11208963394
speed: 0.00502178724855
id: 0
t: 413
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:413




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.691177368
y: 3.37389731407
theta: 3.11208963394
speed: 0.00502178724855
id: 0
t: 413
xxx after update is x: -110.954368591
y: 3.09738349915
theta: 3.24878406525
speed: 0.133633375168
id: 0
t: 414
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:414




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.954368591
y: 3.09738349915
theta: 3.24878406525
speed: 0.133633375168
id: 0
t: 414
xxx after update is x: -110.463066101
y: 3.342441082
theta: 3.02861142159
speed: -0.0282734837383
id: 0
t: 415
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:415




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.463066101
y: 3.342441082
theta: 3.02861142159
speed: -0.0282734837383
id: 0
t: 415
xxx after update is x: -110.243164062
y: 3.07347917557
theta: 2.94497537613
speed: -0.0027549166698
id: 0
t: 416
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:416




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.243164062
y: 3.07347917557
theta: 2.94497537613
speed: -0.0027549166698
id: 0
t: 416
xxx after update is x: -110.092750549
y: 3.35630917549
theta: 3.12364792824
speed: 0.185594156384
id: 0
t: 417
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:417




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.092750549
y: 3.35630917549
theta: 3.12364792824
speed: 0.185594156384
id: 0
t: 417
xxx after update is x: -110.540626526
y: 3.42115664482
theta: 3.31455230713
speed: -0.210212871432
id: 0
t: 418
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:418




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.540626526
y: 3.42115664482
theta: 3.31455230713
speed: -0.210212871432
id: 0
t: 418
xxx after update is x: ate function 
leave the update function 
in spin function, finish the n times spin:412


222 self.state_dicts[msg.id][msg.t] is (-110.91199493408203, 2.7309963703155518, 3.121408224105835, 0.24315661191940308)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:413


222 self.state_dicts[msg.id][msg.t] is (-110.69117736816406, 3.3738973140716553, 3.1120896339416504, 0.0050217872485518456)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:414


222 self.state_dicts[msg.id][msg.t] is (-110.9543685913086, 3.097383499145508, 3.248784065246582, 0.13363337516784668)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:415


222 self.state_dicts[msg.id][msg.t] is (-110.46306610107422, 3.3424410820007324, 3.028611421585083, -0.028273483738303185)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:416


222 self.state_dicts[msg.id][msg.t] is (-110.2431640625, 3.073479175567627, 2.9449753761291504, -0.0027549166698008776)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:417


222 self.state_dicts[msg.id][msg.t] is (-110.0927505493164, 3.356309175491333, 3.123647928237915, 0.18559415638446808)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:418


222 self.state_dicts[msg.id][msg.t] is (-110.5406265258789, 3.421156644821167, 3.3145523071289062, -0.21021287143230438)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:419


222 self.state_dicts[msg.id][msg.t] is (-110.9268569946289, 3.3621387481689453, 3.0669078826904297, 0.13405056297779083)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:420


222 self.state_dicts[msg.id][msg.t] is (-110.90681457519531, 3.021373748779297, 3.214513063430786, -0.06592817604541779)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:421


222 self.state_dicts[msg.id][msg.t] is (-110.892822265625, 3.446260929107666, 3.073650360107422, 0.06492307037115097)
222 self.state_dicts[msg.id][msg.t] is (-110.52461242675781, 3.6385507583618164, 3.099688768386841, -0.03286533057689667)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:422




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:423


222 self.state_dicts[msg.id][msg.t] is (-111.2045669555664, 3.3437416553497314, 3.2464091777801514, 0.08445564657449722)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:424


222 self.state_dicts[msg.id][msg.t] is (-110.2561264038086, 3.191755771636963, 3.2081449031829834, -0.5476120710372925)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:425


222 self.state_dicts[msg.id][msg.t] is (-110.51363372802734, 3.179664373397827, 3.0314626693725586, -0.13567909598350525)


going to the update function
sim.-110.926856995
y: 3.36213874817
theta: 3.06690788269
speed: 0.134050562978
id: 0
t: 419
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:419




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.926856995
y: 3.36213874817
theta: 3.06690788269
speed: 0.134050562978
id: 0
t: 419
xxx after update is x: -110.906814575
y: 3.02137374878
theta: 3.21451306343
speed: -0.0659281760454
id: 0
t: 420
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:420




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.906814575
y: 3.02137374878
theta: 3.21451306343
speed: -0.0659281760454
id: 0
t: 420
xxx after update is x: -110.892822266
y: 3.44626092911
theta: 3.07365036011
speed: 0.0649230703712
id: 0
t: 421
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:421




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.892822266
y: 3.44626092911
theta: 3.07365036011
speed: 0.0649230703712
id: 0
t: 421
xxx after update is x: -110.524612427
y: 3.63855075836
theta: 3.09968876839
speed: -0.0328653305769
id: 0
t: 422
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:422




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.524612427
y: 3.63855075836
theta: 3.09968876839
speed: -0.0328653305769
id: 0
t: 422
xxx after update is x: -111.204566956
y: 3.34374165535
theta: 3.24640917778
speed: 0.0844556465745
id: 0
t: 423
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:423




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -111.204566956
y: 3.34374165535
theta: 3.24640917778
speed: 0.0844556465745
id: 0
t: 423
xxx after update is x: -110.256126404
y: 3.19175577164
theta: 3.20814490318
speed: -0.547612071037
id: 0
t: 424
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:424




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.256126404
y: 3.19175577164
theta: 3.20814490318
speed: -0.547612071037
id: 0
t: 424
xxx after update is x: -110.513633728
y: 3.1796643734
theta: 3.03146266937
speed: -0.135679095984
id: 0
t: 425
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:425




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.513633728
y: 3.1796643734
theta: 3.03146266937
speed: -0.135679095984
id: 0
t: 425
xxx after update is x: -110.879989624
y: 3.11218619347
theta: 2.96328496933
speed: -0.344024389982
id: 0
t: 426
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:426




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.879989624
y: 3.11218619347
theta: 2.96328496933
speed: -0.344024389982
id: 0
t: 426
xxx after update is x: -110.750663757
y: 3.03653335571
theta: 3.17170763016
speed: 0.236496016383
id: 0
t: 427
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:427




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.750663757
y: 3.03653335571
theta: 3.17170763016
speed: 0.236496016383
id: 0
t: 427
xxx after update is x: -110.824523926
y: 3.31843423843
theta: 3.15448188782
speed: 0.0805740430951
id: 0
t: 428
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:428




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.824523926
y: 3.31843423843
theta: 3.15448188782
speed: 0.0805740430951
id: 0
t: 428
xxx after update is x: -110.594726562
y: 3.24626636505
theta: 3.15080928802
speed: 0.141402170062
id: 0
t: 429
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:429




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.594726562
y: 3.24626636505
theta: 3.15080928802
speed: 0.141402170062
id: 0
t: 429
xxx after update is x: -110.357933044
y: 3.42770195007
theta: 3.08923411369
speed: -0.0451984778047
id: 0
t: 430
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:430




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.357933044
y: 3.42770195007
theta: 3.08923411369
speed: -0.0451984778047
id: 0
t: 430
xxx after update is x: -110.567672729
y: 3.0888838768
theta: 3.15629768372
speed: -0.282521247864
id: 0
t: 431
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:431




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.567672729
y: 3.0888838768
theta: 3.15629768372
speed: -0.282521247864
id: 0
t: 431
xxx after update is x: -110.782608032
y: 3.5364382267
theta: 3.28745961189
speed: 0.150054574013
id: 0
t: 432
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:432




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.782608032
y: 3.5364382267
theta: 3.28745961189
speed: 0.150054574013
id: 0
t: 432
xxx after update is x: -110.920211792
y: 3.17774271965
theta: 3.1673181057
speed: 0.248805567622
id: 0
t: 433
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:433




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.920211792
y: 3.17774271965
theta: 3.1673181057
speed: 0.248805567622
id: 0
t: 433
xxx after update is x: -110.792221069
y: 2.60838723183
theta: 3.10782647133
speed: -0.366269648075
id: 0
t: 434
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:434




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.792221069
y: 2.60838723183
theta: 3.10782647133
speed: -0.366269648075
id: 0
t: 434
xxx after update is x: -110.607879639
y: 3.42129135132
theta: 3.12389874458
speed: 0.316175580025
id: 0
t: 435
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:435




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:426


222 self.state_dicts[msg.id][msg.t] is (-110.87998962402344, 3.1121861934661865, 2.963284969329834, -0.3440243899822235)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:427


222 self.state_dicts[msg.id][msg.t] is (-110.75066375732422, 3.0365333557128906, 3.1717076301574707, 0.23649601638317108)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:428


222 self.state_dicts[msg.id][msg.t] is (-110.82452392578125, 3.318434238433838, 3.154481887817383, 0.08057404309511185)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:429


222 self.state_dicts[msg.id][msg.t] is (-110.5947265625, 3.2462663650512695, 3.1508092880249023, 0.14140217006206512)
222 self.state_dicts[msg.id][msg.t] is (-110.3579330444336, 3.427701950073242, 3.0892341136932373, -0.0451984778046608)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:430


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:431


222 self.state_dicts[msg.id][msg.t] is (-110.56767272949219, 3.088883876800537, 3.1562976837158203, -0.28252124786376953)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:432


222 self.state_dicts[msg.id][msg.t] is (-110.78260803222656, 3.536438226699829, 3.2874596118927, 0.15005457401275635)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:433


222 self.state_dicts[msg.id][msg.t] is (-110.92021179199219, 3.1777427196502686, 3.167318105697632, 0.24880556762218475)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:434


222 self.state_dicts[msg.id][msg.t] is (-110.79222106933594, 2.6083872318267822, 3.1078264713287354, -0.36626964807510376)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:435


222 self.state_dicts[msg.id][msg.t] is (-110.60787963867188, 3.4212913513183594, 3.12389874458313, 0.31617558002471924)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:436


222 self.state_dicts[msg.id][msg.t] is (-110.33839416503906, 3.270236015319824, 3.235234260559082, 0.17139531672000885)
222 self.state_dicts[msg.id][msg.t] is (-110.28436279296875, 3.575819253921509, 3.171882390975952, -0.17657321691513062)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:437




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:438


222 self.state_dicts[msg.id][msg.t] is (-110.53489685058594, 3.179067850112915, 3.2224345207214355, 0.13711805641651154)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-110.5221176147461, 3.026348352432251, 3.115288496017456, 0.14687325060367584)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:439




going to the updateupdate is x: -110.607879639
y: 3.42129135132
theta: 3.12389874458
speed: 0.316175580025
id: 0
t: 435
xxx after update is x: -110.338394165
y: 3.27023601532
theta: 3.23523426056
speed: 0.17139531672
id: 0
t: 436
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:436




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.338394165
y: 3.27023601532
theta: 3.23523426056
speed: 0.17139531672
id: 0
t: 436
xxx after update is x: -110.284362793
y: 3.57581925392
theta: 3.17188239098
speed: -0.176573216915
id: 0
t: 437
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:437




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.284362793
y: 3.57581925392
theta: 3.17188239098
speed: -0.176573216915
id: 0
t: 437
xxx after update is x: -110.534896851
y: 3.17906785011
theta: 3.22243452072
speed: 0.137118056417
id: 0
t: 438
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:438




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.534896851
y: 3.17906785011
theta: 3.22243452072
speed: 0.137118056417
id: 0
t: 438
xxx after update is x: -110.522117615
y: 3.02634835243
theta: 3.11528849602
speed: 0.146873250604
id: 0
t: 439
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:439




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.522117615
y: 3.02634835243
theta: 3.11528849602
speed: 0.146873250604
id: 0
t: 439
xxx after update is x: -110.171730042
y: 3.32885360718
theta: 3.06934905052
speed: 0.0703426674008
id: 0
t: 440
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:440




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.171730042
y: 3.32885360718
theta: 3.06934905052
speed: 0.0703426674008
id: 0
t: 440
xxx after update is x: -110.627182007
y: 2.89621019363
theta: 3.11549854279
speed: -0.0545060038567
id: 0
t: 441
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:441




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.627182007
y: 2.89621019363
theta: 3.11549854279
speed: -0.0545060038567
id: 0
t: 441
xxx after update is x: -110.55670929
y: 3.54533910751
theta: 3.10012054443
speed: 0.0554100051522
id: 0
t: 442
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:442




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.55670929
y: 3.54533910751
theta: 3.10012054443
speed: 0.0554100051522
id: 0
t: 442
xxx after update is x: -110.640525818
y: 2.61534357071
theta: 3.20392632484
speed: -0.285114407539
id: 0
t: 443
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:443




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.640525818
y: 2.61534357071
theta: 3.20392632484
speed: -0.285114407539
id: 0
t: 443
xxx after update is x: -111.395683289
y: 3.33352255821
theta: 3.39335632324
speed: 0.150221392512
id: 0
t: 444
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:444




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -111.395683289
y: 3.33352255821
theta: 3.39335632324
speed: 0.150221392512
id: 0
t: 444
xxx after update is x: -110.44355011
y: 3.56196761131
theta: 3.13073277473
speed: 0.323754608631
id: 0
t: 445
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:445




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.44355011
y: 3.56196761131
theta: 3.13073277473
speed: 0.323754608631
id: 0
t: 445
xxx after update is x: -110.282676697
y: 3.81417322159
theta: 3.05399847031
speed: 0.100013151765
id: 0
t: 446
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:446




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.282676697
y: 3.81417322159
theta: 3.05399847031
speed: 0.100013151765
id: 0
t: 446
xxx after update is x: -111.031539917
y: 3.36269116402
theta: 2.93270015717
speed: 0.057973973453
id: 0
t: 447
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:447




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -111.031539917
y: 3.36269116402
theta: 2.93270015717
speed: 0.057973973453
id: 0
t: 447
xxx after update is x: -110.423316956
y: 3.31737446785
theta: 2.99954295158
speed: 0.196833774447
id: 0
t: 448
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:448




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.423316956
y: 3.31737446785
theta: 2.99954295158
speed: 0.196833774447
id: 0
t: 448
xxx after update is x: -111.098686218
y: 3.43318676949
theta: 2.98407530785
speed: 0.000981627963483
id: 0
t: 449
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:449




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -111.098686218
y: 3.43318676949
theta: 2.98407530785
speed: 0.000981627963483
id: 0
t: 449
xxx after update is x: -110.900260925
y: 3.16638302803
theta: 3.0276529789
speed: 0.0909342393279
id: 0
t: 450
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:450




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.900260925
y: 3.16638302803
theta: 3.0276529789
speed: 0.0909342393279
id: 0
t: 450
xxx after update is x: -110.550140381
y: 3.13520407677
theta: 3.18082594872
speed: -0.0471748635173
id: 0
t: 451
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:451




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.550140381
y: 3.13520407677
theta: 3.18082594872
speed: -0.0471748635173
id: 0
t: 451
xxx after update is x: -110.656448364
y: 3.23364233971
theta: 3.16561841965
speed: -0.0232934821397
id: 0
t: 452
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:452




going t function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:440


222 self.state_dicts[msg.id][msg.t] is (-110.1717300415039, 3.3288536071777344, 3.0693490505218506, 0.07034266740083694)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:441


222 self.state_dicts[msg.id][msg.t] is (-110.62718200683594, 2.896210193634033, 3.1154985427856445, -0.054506003856658936)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:442


222 self.state_dicts[msg.id][msg.t] is (-110.55670928955078, 3.5453391075134277, 3.1001205444335938, 0.055410005152225494)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:443


222 self.state_dicts[msg.id][msg.t] is (-110.6405258178711, 2.6153435707092285, 3.2039263248443604, -0.2851144075393677)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:444


222 self.state_dicts[msg.id][msg.t] is (-111.39568328857422, 3.3335225582122803, 3.3933563232421875, 0.15022139251232147)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:445


222 self.state_dicts[msg.id][msg.t] is (-110.44355010986328, 3.561967611312866, 3.130732774734497, 0.32375460863113403)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:446


222 self.state_dicts[msg.id][msg.t] is (-110.28267669677734, 3.8141732215881348, 3.0539984703063965, 0.10001315176486969)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:447


222 self.state_dicts[msg.id][msg.t] is (-111.03153991699219, 3.3626911640167236, 2.9327001571655273, 0.05797397345304489)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:448


222 self.state_dicts[msg.id][msg.t] is (-110.4233169555664, 3.3173744678497314, 2.9995429515838623, 0.1968337744474411)
222 self.state_dicts[msg.id][msg.t] is (-111.09868621826172, 3.4331867694854736, 2.9840753078460693, 0.0009816279634833336)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:449




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:450


222 self.state_dicts[msg.id][msg.t] is (-110.90026092529297, 3.1663830280303955, 3.0276529788970947, 0.09093423932790756)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:451


222 self.state_dicts[msg.id][msg.t] is (-110.55014038085938, 3.1352040767669678, 3.18082594871521, -0.04717486351728439)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:452


222 self.state_dicts[msg.id][msg.t] is (-110.65644836425781, 3.233642339706421, 3.165618419647217, -0.02329348213970661)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:453


222 self.state_dicts[msg.id][msg.t] is (-110.99990844726562, 2.89451265335083, 3.0836899280548096, 0.13897278904914856)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -.o the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.656448364
y: 3.23364233971
theta: 3.16561841965
speed: -0.0232934821397
id: 0
t: 452
xxx after update is x: -110.999908447
y: 2.89451265335
theta: 3.08368992805
speed: 0.138972789049
id: 0
t: 453
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:453




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.999908447
y: 2.89451265335
theta: 3.08368992805
speed: 0.138972789049
id: 0
t: 453
xxx after update is x: -110.774398804
y: 4.08073854446
theta: 3.1181447506
speed: -0.145301535726
id: 0
t: 454
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:454




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.774398804
y: 4.08073854446
theta: 3.1181447506
speed: -0.145301535726
id: 0
t: 454
xxx after update is x: -110.855415344
y: 3.1219201088
theta: 3.15481948853
speed: -0.354959160089
id: 0
t: 455
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:455




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.855415344
y: 3.1219201088
theta: 3.15481948853
speed: -0.354959160089
id: 0
t: 455
xxx after update is x: -110.280899048
y: 3.20799827576
theta: 3.16473126411
speed: -0.0184454210103
id: 0
t: 456
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:456




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.280899048
y: 3.20799827576
theta: 3.16473126411
speed: -0.0184454210103
id: 0
t: 456
xxx after update is x: -110.916114807
y: 3.2954480648
theta: 3.0460319519
speed: 0.120702460408
id: 0
t: 457
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:457




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.916114807
y: 3.2954480648
theta: 3.0460319519
speed: 0.120702460408
id: 0
t: 457
xxx after update is x: -110.673583984
y: 3.44842648506
theta: 3.2011320591
speed: -0.39866912365
id: 0
t: 458
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:458




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.673583984
y: 3.44842648506
theta: 3.2011320591
speed: -0.39866912365
id: 0
t: 458
xxx after update is x: -110.938903809
y: 3.66915464401
theta: 3.2272837162
speed: -0.125625804067
id: 0
t: 459
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:459




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.938903809
y: 3.66915464401
theta: 3.2272837162
speed: -0.125625804067
id: 0
t: 459
xxx after update is x: -110.569320679
y: 3.35430693626
theta: 3.09330606461
speed: -0.276491552591
id: 0
t: 460
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:460




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.569320679
y: 3.35430693626
theta: 3.09330606461
speed: -0.276491552591
id: 0
t: 460
xxx after update is x: -110.790008545
y: 3.11277508736
theta: 3.31837940216
speed: 0.18228277564
id: 0
t: 461
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:461




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.790008545
y: 3.11277508736
theta: 3.31837940216
speed: 0.18228277564
id: 0
t: 461
xxx after update is x: -110.94342041
y: 3.46128582954
theta: 3.1578412056
speed: -0.385208457708
id: 0
t: 462
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:462




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.94342041
y: 3.46128582954
theta: 3.1578412056
speed: -0.385208457708
id: 0
t: 462
xxx after update is x: -110.770622253
y: 3.19557070732
theta: 3.17878484726
speed: -0.311045259237
id: 0
t: 463
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:463




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.770622253
y: 3.19557070732
theta: 3.17878484726
speed: -0.311045259237
id: 0
t: 463
xxx after update is x: -110.700019836
y: 2.86295795441
theta: 3.12971258163
speed: 0.53050994873
id: 0
t: 464
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:464




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -110.700019836
y: 2.86295795441
theta: 3.12971258163
speed: 0.53050994873
id: 0
t: 464
xxx after update is x: -111.185928345
y: 3.26881575584
theta: 3.07238936424
speed: -0.0903703868389
id: 0
t: 465
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:465




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:466


 sfinish
222 self.state_dicts[msg.id][msg.t] is (-110.77439880371094, 4.080738544464111, 3.1181447505950928, -0.14530153572559357)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:454




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:455


222 self.state_dicts[msg.id][msg.t] is (-110.85541534423828, 3.121920108795166, 3.1548194885253906, -0.3549591600894928)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:456


222 self.state_dicts[msg.id][msg.t] is (-110.28089904785156, 3.207998275756836, 3.16473126411438, -0.018445421010255814)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:457


222 self.state_dicts[msg.id][msg.t] is (-110.9161148071289, 3.295448064804077, 3.046031951904297, 0.12070246040821075)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:458


222 self.state_dicts[msg.id][msg.t] is (-110.673583984375, 3.4484264850616455, 3.20113205909729, -0.39866912364959717)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:459


222 self.state_dicts[msg.id][msg.t] is (-110.93890380859375, 3.669154644012451, 3.2272837162017822, -0.12562580406665802)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:460


222 self.state_dicts[msg.id][msg.t] is (-110.56932067871094, 3.354306936264038, 3.093306064605713, -0.27649155259132385)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:461


222 self.state_dicts[msg.id][msg.t] is (-110.79000854492188, 3.1127750873565674, 3.3183794021606445, 0.18228277564048767)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:462


222 self.state_dicts[msg.id][msg.t] is (-110.94342041015625, 3.4612858295440674, 3.157841205596924, -0.38520845770835876)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:463


222 self.state_dicts[msg.id][msg.t] is (-110.77062225341797, 3.195570707321167, 3.1787848472595215, -0.31104525923728943)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:464


222 self.state_dicts[msg.id][msg.t] is (-110.70001983642578, 2.8629579544067383, 3.1297125816345215, 0.5305099487304688)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:465


222 self.state_dicts[msg.id][msg.t] is (-111.18592834472656, 3.268815755844116, 3.0723893642425537, -0.09037038683891296)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:466


... logging to /home/lu/.ros/log/88c55b08-ffa0-11e8-9ca8-000c291801fc/roslaunch-ubuntu-75861.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch
[1mstarted roslaunch server http://ubuntu:45705/[0m

SUMMARY
========

PARAMETERS
 * /enable_negotiator: True
 * /file_prefix: 
 * /nr_cars: 2
 * /plot: False
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /save: False

NODES
  /
    car0 (virtual_blinker/sim.py)
    car1 (virtual_blinker/sim.py)
    cloud (virtual_blinker/cloud.py)
    rviz (rviz/rviz)
    visualization (virtual_blinker/visualization.py)

auto-starting new master
[1mprocess[master]: started with pid [75881][0m
[1mROS_MASTER_URI=http://localhost:11311[0m
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch http://localhost:11311
[1msetting /run_id to 88c55b08-ffa0-11e8-9ca8-000c291801fc[0m
[1mprocess[rosout-1]: started with pid [75894][0m
started core service [/rosout]
[1mprocess[visualization-2]: started with pid [75905][0m
[1mprocess[rviz-3]: started with pid [75912][0m
[1mprocess[car0-4]: started with pid [75913][0m
[1mprocess[car1-5]: started with pid [75914][0m
[1mprocess[cloud-6]: started with pid [75915][0m
[cloud-6] killing on exit
[car1-5] killing on exit
[car0-4] killing on exit
[rviz-3] killing on exit
[visualization-2] killing on exit
[rosout-1] killing on exit
[master] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
[1mdone[0m
