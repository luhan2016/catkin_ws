sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 1
s is car_state0
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.578459978104
222 self.state_dicts[msg.id][msg.t] is (3.3688149452209473, -64.1810073852539, 1.5273600816726685, 13.945115089416504)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:1




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:2


222 self.state_dicts[msg.id][msg.t] is (3.179990291595459, -63.47711181640625, 1.6037557125091553, 13.996661186218262)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7f04c011d908>
self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f04c013ecf8>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9001)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:3


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: -3.11509418488
y: 63.3060112
theta: 4.7437171936
speed: 14.0002737045
id: 1
t: 3
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (2.922231674194336, -62.819366455078125, 1.5782623291015625, 13.628535270690918)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.11509418488
y: 63.3060112
theta: 4.7437171936
speed: 14.0002737045
id: 1
t: 3
xxx after update is x: -3.09233736992
y: 62.1800537109
theta: 4.78056669235
speed: 14.3413085938
id: 1
t: 4
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:4




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_nosim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 0
s is car_state1
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.403884887695


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:1


222 self.state_dicts[msg.id][msg.t] is (-2.79415225982666, 63.64813995361328, 4.5853424072265625, 13.944336891174316)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7fb251fae3f8>
self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7fb251fca200>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9000)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:2


222 self.state_dicts[msg.id][msg.t] is (-3.9112958908081055, 63.82209014892578, 4.678578853607178, 13.748353958129883)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: 3.1799902916
y: -63.4771118164
theta: 1.60375571251
speed: 13.9966611862
id: 0
t: 2
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:3


xxx before update is x: 3.1799902916
y: -63.4771118164
theta: 1.60375571251
speed: 13.9966611862
id: 0
t: 2
xxx after update is x: 2.92223167419
y: -62.8193664551
theta: 1.5782623291
speed: 13.6285352707
id: 0
t: 3
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:4


xxx before update is x: 2.92223167419
y: -62.8193664551
theta: 1.5782623291
speed: 13.6285352707
id: 0
t: 3
xxx after update is x: 3.63425016403
y: -62.5896072388
theta: 1.55102872849
speed: 14.2439279556
id: 0
t: 4
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:5


xxx before update is x: 3.63425016403
y: -62.5896072388
theta: 1.55102872849
speed: 14.2439279556
id: 0
t: 4
xxx after update is x: 3.14102649689
y: -61.6299057007
theta: 1.6t going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:5


xxx before update is x: -3.09233736992
y: 62.1800537109
theta: 4.78056669235
speed: 14.3413085938
id: 1
t: 4
xxx after update is x: -3.11189103127
y: 62.0441207886
theta: 4.72538232803
speed: 13.8192710876
id: 1
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.4118614942705286, 0.3355889736642929]
222 self.state_dicts[msg.id][msg.t] is (3.141026496887207, -61.629905700683594, 1.6819016933441162, 14.233738899230957)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: -3.11189103127
y: 62.0441207886
theta: 4.72538232803
speed: 13.8192710876
id: 1
t: 5
xxx after update is x: -3.43320989609
y: 61.4816589355
theta: 4.78800058365
speed: 13.3173542023
id: 1
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:7


xxx before update is x: -3.43320989609
y: 61.4816589355
theta: 4.78800058365
speed: 13.3173542023
id: 1
t: 6
xxx after update is x: -3.56640005112
y: 60.9426498413
theta: 4.64462661743
speed: 13.8812799454
id: 1
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: -3.56640005112
y: 60.9426498413
theta: 4.64462661743
speed: 13.8812799454
id: 1
t: 7
xxx after update is x: -3.50518870354
y: 59.9760093689
theta: 4.77508306503
speed: 13.9137954712
id: 1
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.30650635649893176, 0]
222 self.state_dicts[msg.id][msg.t] is (3.305243968963623, -59.79720687866211, 1.8339130878448486, 13.92123031616211)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: -3.50518870354
y: 59.9760093689
theta: 4.77508306503
speed: 13.9137954712
id: 1
t: 8
xxx after update is x: -3.40509057045
y: 59.6617012024
theta: 4.71663141251
speed: 14.0207157135
id: 1
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: -3.40509057045
y: 59.6617012024
theta: 4.71663141251
speed: 14.0207157135
id: 1
t: 9
xxx after update is x: -3.9657626152
y: 58.2077598572
theta: 4.63340330124
speed: 13.7454710007
id: 1
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try mane8190169334
speed: 14.2337388992
id: 0
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3755422589474136, 0.3635861811169811]
222 self.state_dicts[msg.id][msg.t] is (-3.111891031265259, 62.04412078857422, 4.725382328033447, 13.819271087646484)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: 3.14102649689
y: -61.6299057007
theta: 1.68190169334
speed: 14.2337388992
id: 0
t: 5
xxx after update is x: 2.85339331627
y: -60.408870697
theta: 1.65406286716
speed: 13.885632515
id: 0
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:7


xxx before update is x: 2.85339331627
y: -60.408870697
theta: 1.65406286716
speed: 13.885632515
id: 0
t: 6
xxx after update is x: 3.53732895851
y: -60.5861549377
theta: 1.57011342049
speed: 13.9993209839
id: 0
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: 3.53732895851
y: -60.5861549377
theta: 1.57011342049
speed: 13.9993209839
id: 0
t: 7
xxx after update is x: 3.30524396896
y: -59.7972068787
theta: 1.83391308784
speed: 13.9212303162
id: 0
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.32571051117259936, 0.33083282051104973]
222 self.state_dicts[msg.id][msg.t] is (-3.5051887035369873, 59.976009368896484, 4.775083065032959, 13.913795471191406)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.355555555556






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: 3.30524396896
y: -59.7972068787
theta: 1.83391308784
speed: 13.9212303162
id: 0
t: 8
xxx after update is x: 3.35799765587
y: -59.0397720337
theta: 1.53357350826
speed: 13.8933429718
id: 0
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: 3.35799765587
y: -59.0397720337
theta: 1.53357350826
speed: 13.8933429718
id: 0
t: 9
xxx after update is x: 3.19053864479
y: -59.2996520996
theta: 1.50828301907
speed: 13.8105459213
id: 0
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: 3.19053864479
y: -59.2996520996
theta: 1.50828301907
speed: 13.8105459213
id: 0
t: 10
xxx after update is x: 3.24588465691
y: -58.0446205139
theta: 1.73338973522
speed: 13.9482212067
id: 0
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in thuver function update -. strat
current clock is 0.444444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: -3.9657626152
y: 58.2077598572
theta: 4.63340330124
speed: 13.7454710007
id: 1
t: 10
xxx after update is x: -3.38122272491
y: 57.7961349487
theta: 4.61477804184
speed: 13.9767723083
id: 1
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: -3.38122272491
y: 57.7961349487
theta: 4.61477804184
speed: 13.9767723083
id: 1
t: 11
xxx after update is x: -3.44582891464
y: 58.0067977905
theta: 4.68111658096
speed: 13.9232339859
id: 1
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3382312624381584, 0]
222 self.state_dicts[msg.id][msg.t] is (3.753279447555542, -57.45827865600586, 1.493919849395752, 13.650238990783691)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: -3.44582891464
y: 58.0067977905
theta: 4.68111658096
speed: 13.9232339859
id: 1
t: 12
xxx after update is x: -3.59831118584
y: 57.5505485535
theta: 4.873005867
speed: 13.9966058731
id: 1
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: -3.59831118584
y: 57.5505485535
theta: 4.873005867
speed: 13.9966058731
id: 1
t: 13
xxx after update is x: -3.60054302216
y: 56.3651199341
theta: 4.75247192383
speed: 14.1965513229
id: 1
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: -3.60054302216
y: 56.3651199341
theta: 4.75247192383
speed: 14.1965513229
id: 1
t: 14
xxx after update is x: -2.68042111397
y: 56.0116539001
theta: 4.73728895187
speed: 13.7510900497
id: 1
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: -2.68042111397
y: 56.0116539001
theta: 4.73728895187
speed: 13.7510900497
id: 1
t: 15
xxx after update is x: -2.96594572067
y: 54.8080406189
theta: 4.57515335083
speed: 13.6660909653
id: 1
t: 16
maneuver_negotiae sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: 3.24588465691
y: -58.0446205139
theta: 1.73338973522
speed: 13.9482212067
id: 0
t: 11
xxx after update is x: 3.75327944756
y: -57.458278656
theta: 1.4939198494
speed: 13.6502389908
id: 0
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: 3.75327944756
y: -57.458278656
theta: 1.4939198494
speed: 13.6502389908
id: 0
t: 12
xxx after update is x: 3.57081365585
y: -57.6697349548
theta: 1.51812899113
speed: 13.6063871384
id: 0
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3185251802994816, 0.36989946018205105]
222 self.state_dicts[msg.id][msg.t] is (-3.598311185836792, 57.5505485534668, 4.8730058670043945, 13.99660587310791)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: 3.57081365585
y: -57.6697349548
theta: 1.51812899113
speed: 13.6063871384
id: 0
t: 13
xxx after update is x: 3.22040605545
y: -56.3443717957
theta: 1.61550784111
speed: 13.6268215179
id: 0
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: 3.22040605545
y: -56.3443717957
theta: 1.61550784111
speed: 13.6268215179
id: 0
t: 14
xxx after update is x: 3.22789096832
y: -55.8209571838
theta: 1.35492181778
speed: 13.8440914154
id: 0
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.22789096832
y: -55.8209571838
theta: 1.35492181778
speed: 13.8440914154
id: 0
t: 15
xxx after update is x: 3.51486182213
y: -55.5273170471
theta: 1.48983860016
speed: 13.7969913483
id: 0
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:16


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.711111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:17


maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: 3.51486182213
y: -55.5273170471
theta: 1.48983860016
speed: 13.7969913483
id: 0
t: 16
xxx after update is x: 3.55685687065
y: -53.7541999817
theta: 1.63356268406
speed: 13.9244470596
id: 0
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: 3.55685687065
y: -53.7541999817
theta: 1.63356268406
speed: 13.9244470596
id: 0
t: 17
xxx after update is x: 3.13136601448
y: -53.8916091919
theta: 1.45396780968
speed: 13.8769025803
id: 0
t: 18
maneuver_negotiatir.py finish ttir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: -2.96594572067
y: 54.8080406189
theta: 4.57515335083
speed: 13.6660909653
id: 1
t: 16
xxx after update is x: -2.95180869102
y: 54.4728050232
theta: 4.76424646378
speed: 13.7137126923
id: 1
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.39259145792905686, 0]
222 self.state_dicts[msg.id][msg.t] is (3.556856870651245, -53.75419998168945, 1.633562684059143, 13.924447059631348)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:18


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.755555555556






self.maneuver_requested None
xxx before update is x: -2.95180869102
y: 54.4728050232
theta: 4.76424646378
speed: 13.7137126923
id: 1
t: 17
xxx after update is x: -3.51569628716
y: 53.5874443054
theta: 4.63433694839
speed: 13.768787384
id: 1
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: -3.51569628716
y: 53.5874443054
theta: 4.63433694839
speed: 13.768787384
id: 1
t: 18
xxx after update is x: -3.22710466385
y: 53.0519828796
theta: 4.8155798912
speed: 13.7689790726
id: 1
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3297637454839524, 0]
222 self.state_dicts[msg.id][msg.t] is (3.081627607345581, -53.2310676574707, 1.6077314615249634, 13.988991737365723)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: -3.22710466385
y: 53.0519828796
theta: 4.8155798912
speed: 13.7689790726
id: 1
t: 19
xxx after update is x: -3.35491394997
y: 52.7538223267
theta: 4.46521234512
speed: 13.9180259705
id: 1
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.35491394997
y: 52.7538223267
theta: 4.46521234512
speed: 13.9180259705
id: 1
t: 20
xxx after update is x: -3.44282531738
y: 52.0264587402
theta: 4.80190467834
speed: 14.3602895737
id: 1
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:21




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mhe update agent state from ros funtion
aaaaaa
risk is [0.5573213222808242, 0.3264384859979005]
222 self.state_dicts[msg.id][msg.t] is (-3.5156962871551514, 53.58744430541992, 4.634336948394775, 13.768787384033203)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: 3.13136601448
y: -53.8916091919
theta: 1.45396780968
speed: 13.8769025803
id: 0
t: 18
xxx after update is x: 3.08162760735
y: -53.2310676575
theta: 1.60773146152
speed: 13.9889917374
id: 0
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: 3.08162760735
y: -53.2310676575
theta: 1.60773146152
speed: 13.9889917374
id: 0
t: 19
xxx after update is x: 3.4249689579
y: -52.4248085022
theta: 1.71321368217
speed: 13.6554994583
id: 0
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: 3.4249689579
y: -52.4248085022
theta: 1.71321368217
speed: 13.6554994583
id: 0
t: 20
xxx after update is x: 2.96980118752
y: -52.1264762878
theta: 1.51859331131
speed: 13.7843294144
id: 0
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3316914405676158, 0.29138657765526615]
222 self.state_dicts[msg.id][msg.t] is (-3.4428253173828125, 52.026458740234375, 4.801904678344727, 14.360289573669434)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: 2.96980118752
y: -52.1264762878
theta: 1.51859331131
speed: 13.7843294144
id: 0
t: 21
xxx after update is x: 3.27635741234
y: -52.3514060974
theta: 1.69017410278
speed: 13.9731397629
id: 0
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: 3.27635741234
y: -52.3514060974
theta: 1.69017410278
speed: 13.9731397629
id: 0
t: 22
xxx after update is x: 2.82598924637
y: -51.1173667908
theta: 1.34347510338
speed: 13.850274086
id: 0
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: 2.82598924637
y: -51.1173667908
theta: 1.34347510338
speed: 13.850274086
id: 0
t: 23
xxx after update is x: 2.87551379204
y: -49.6435775757
theta: 1.79013681412
speed: 13.9442501068
id: 0
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.06666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.spemmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.44282531738
y: 52.0264587402
theta: 4.80190467834
speed: 14.3602895737
id: 1
t: 21
xxx after update is x: -3.15776729584
y: 51.2316818237
theta: 4.75763893127
speed: 13.9698047638
id: 1
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:22


aaaaaa
aaaaaabbbbb
risk is [0.3389300394297721, 0]
222 self.state_dicts[msg.id][msg.t] is (3.276357412338257, -52.35140609741211, 1.6901741027832031, 13.973139762878418)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: -3.15776729584
y: 51.2316818237
theta: 4.75763893127
speed: 13.9698047638
id: 1
t: 22
xxx after update is x: -2.62146449089
y: 51.033203125
theta: 4.64355516434
speed: 13.9995422363
id: 1
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: -2.62146449089
y: 51.033203125
theta: 4.64355516434
speed: 13.9995422363
id: 1
t: 23
xxx after update is x: -3.29956030846
y: 50.0006332397
theta: 4.67063570023
speed: 13.8862133026
id: 1
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.43267529984164765, 0]
222 self.state_dicts[msg.id][msg.t] is (2.875513792037964, -49.643577575683594, 1.7901368141174316, 13.944250106811523)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: -3.29956030846
y: 50.0006332397
theta: 4.67063570023
speed: 13.8862133026
id: 1
t: 24
xxx after update is x: -3.84349894524
y: 49.6778030396
theta: 4.86800146103
speed: 13.7000236511
id: 1
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.11111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: -3.84349894524
y: 49.6778030396
theta: 4.86800146103
speed: 13.7000236511
id: 1
t: 25
xxx after update is x: -3.0398004055
y: 48.573638916
theta: 4.72406339645
speed: 13.836555481
id: 1
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: -3.0398004055
y: 48.57363891ed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: 2.87551379204
y: -49.6435775757
theta: 1.79013681412
speed: 13.9442501068
id: 0
t: 24
xxx after update is x: 3.48719906807
y: -49.2933044434
theta: 1.52293932438
speed: 13.7897100449
id: 0
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.38763114626511785, 0.4089058406590831]
222 self.state_dicts[msg.id][msg.t] is (-3.843498945236206, 49.67780303955078, 4.868001461029053, 13.700023651123047)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: 3.48719906807
y: -49.2933044434
theta: 1.52293932438
speed: 13.7897100449
id: 0
t: 25
xxx after update is x: 3.83606338501
y: -48.9742355347
theta: 1.50233888626
speed: 14.0230464935
id: 0
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: 3.83606338501
y: -48.9742355347
theta: 1.50233888626
speed: 14.0230464935
id: 0
t: 26
xxx after update is x: 3.18146705627
y: -47.8719825745
theta: 1.3724988699
speed: 14.1013088226
id: 0
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: 3.18146705627
y: -47.8719825745
theta: 1.3724988699
speed: 14.1013088226
id: 0
t: 27
xxx after update is x: 3.27677583694
y: -47.6835441589
theta: 1.51148927212
speed: 13.9857597351
id: 0
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: 3.27677583694
y: -47.6835441589
theta: 1.51148927212
speed: 13.9857597351
id: 0
t: 28
xxx after update is x: 3.29065275192
y: -47.3415222168
theta: 1.4578166008
speed: 13.6175260544
id: 0
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3340418137031625, 0.4730773372955665]
222 self.state_dicts[msg.id][msg.t] is (-3.1613998413085938, 47.03179931640625, 4.665985584259033, 13.760335922241211)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: 3.29065275192
y: -47.3415222168
theta: 1.4578166008
speed: 13.6175260544
id: 0
t: 29
xxx after update is x: 3.09099650383
y: -46.3725204468
theta: 1.74950349331
speed: 13.649810791
id: 0
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: 3.09099650383
y: -46.3725204468
theta: 1.74950349331
speed: 13.649810791
id: 0
t: 30
xxx after update is x: 2.86045789719
y: -46.2404327393
theta: 1.62958014011
speed: 16
theta: 4.72406339645
speed: 13.836555481
id: 1
t: 26
xxx after update is x: -2.95373821259
y: 48.1015510559
theta: 4.79702329636
speed: 13.575676918
id: 1
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.45105623653334265, 0]
222 self.state_dicts[msg.id][msg.t] is (3.181467056274414, -47.87198257446289, 1.372498869895935, 14.101308822631836)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: -2.95373821259
y: 48.1015510559
theta: 4.79702329636
speed: 13.575676918
id: 1
t: 27
xxx after update is x: -3.01961660385
y: 47.9400901794
theta: 4.7183971405
speed: 13.997004509
id: 1
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: -3.01961660385
y: 47.9400901794
theta: 4.7183971405
speed: 13.997004509
id: 1
t: 28
xxx after update is x: -3.16139984131
y: 47.0317993164
theta: 4.66598558426
speed: 13.7603359222
id: 1
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3448337993911676, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2906527519226074, -47.341522216796875, 1.4578166007995605, 13.617526054382324)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: -3.16139984131
y: 47.0317993164
theta: 4.66598558426
speed: 13.7603359222
id: 1
t: 29
xxx after update is x: -3.51820206642
y: 46.4448776245
theta: 4.76315593719
speed: 14.0341310501
id: 1
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: -3.51820206642
y: 46.4448776245
theta: 4.76315593719
speed: 14.0341310501
id: 1
t: 30
xxx after update is x: -3.38913989067
y: 45.6274757385
theta: 4.63308048248
speed: 14.153878212
id: 1
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: -3.38913989067
y: 45.6274757385
theta: 4.63308048248
speed: 14.153878212
id: 1
t: 31
xxx after update is x: -3.60521459579
y: 45.852394104
theta: 4.77068281174
speed: 13.9452409744
id: 1
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.34632196245220404, 0]
222 self.state_dicts[msg.id][msg.t] is (2.967538356781006, -44.40476608276367, 1.5462472438812256, 14.189034461975098)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: -3.60521459579
y: 45.852394104
theta: 4.77068281174
speed: 13.9452409744
id: 1
t: 32
xxx after update is x: -3.53372120857
y: 44.3274230957
theta: 4.66882276535
speed: 13.8348274231
id: 1
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.46666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: -3.53372120857
y: 44.3274230957
theta: 4.66882276535
speed: 13.8348274231
id: 1
t: 33
xxx after update is x: -3.40090703964
y: 43.8290061951
theta: 4.75676679611
speed: 13.6373329163
id: 1
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3839346126382913, 0]
222 self.state_dicts[msg.id][msg.t] is (3.595585346221924, -44.164955139160156, 1.648207187652588, 13.657658576965332)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: -3.40090703964
y: 43.8290061951
theta: 4.75676679611
speed: 13.6373329163
id: 1
t: 34
xxx after update is x: -3.38285565376
y: 43.5030136108
theta: 4.7868103981
speed: 13.5690555573
id: 1
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.38285565376
y: 43.5030136108
theta: 4.7868103981
speed: 13.5690555573
id: 1
t: 35
xxx after update is x: -2.86459541321
y: 42.8735771179
theta: 4.84077501297
speed: 13.8857240677
id: 1
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:36


aaaaaa
aaaaaabbbbb
risk is [0.36994667497622175, 0]
222 self.state_dicts[msg.id][msg.t] is (3.383626699447632, -42.918704986572266, 1.568894863128662, 14.045516967773438)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: -2.86459541321
y: 42.8735771179
theta: 4.84077501297
speed: 13.8857240677
id: 1
t: 36
xxx after update is x: -2.99290108681
y: 42.6116523743
theta: 4.84027528763
speed: 13.8349466324
id: 1
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxx3.8081493378
id: 0
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: 2.86045789719
y: -46.2404327393
theta: 1.62958014011
speed: 13.8081493378
id: 0
t: 31
xxx after update is x: 2.96753835678
y: -44.4047660828
theta: 1.54624724388
speed: 14.189034462
id: 0
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.42222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: 2.96753835678
y: -44.4047660828
theta: 1.54624724388
speed: 14.189034462
id: 0
t: 32
xxx after update is x: 3.43132567406
y: -44.6113929749
theta: 1.51424002647
speed: 14.1690540314
id: 0
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.35490529806010684, 0.3975201038966368]
222 self.state_dicts[msg.id][msg.t] is (-3.5337212085723877, 44.327423095703125, 4.668822765350342, 13.834827423095703)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: 3.43132567406
y: -44.6113929749
theta: 1.51424002647
speed: 14.1690540314
id: 0
t: 33
xxx after update is x: 3.59558534622
y: -44.1649551392
theta: 1.64820718765
speed: 13.657658577
id: 0
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: 3.59558534622
y: -44.1649551392
theta: 1.64820718765
speed: 13.657658577
id: 0
t: 34
xxx after update is x: 3.45592737198
y: -42.3761825562
theta: 1.55024659634
speed: 13.8673830032
id: 0
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: 3.45592737198
y: -42.3761825562
theta: 1.55024659634
speed: 13.8673830032
id: 0
t: 35
xxx after update is x: 3.38362669945
y: -42.9187049866
theta: 1.56889486313
speed: 14.0455169678
id: 0
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: 3.38362669945
y: -42.9187049866
theta: 1.56889486313
speed: 14.0455169678
id: 0
t: 36
xxx after update is x: 3.2910554409
y: -41.7120437622
theta: 1.31970119476
speed: 13.9833288193
id: 0
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3091179301962875, 0.3746345106783325]
222 self.state_dicts[msg.id][msg.t] is (-2.992901086807251, 42.61165237426758, 4.840275287628174, 13.834946632385254)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.pyxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: -2.99290108681
y: 42.6116523743
theta: 4.84027528763
speed: 13.8349466324
id: 1
t: 37
xxx after update is x: -3.19722533226
y: 41.4702758789
theta: 4.52566480637
speed: 13.9863615036
id: 1
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: -3.19722533226
y: 41.4702758789
theta: 4.52566480637
speed: 13.9863615036
id: 1
t: 38
xxx after update is x: -3.61103510857
y: 41.5173988342
theta: 4.83755636215
speed: 14.3804235458
id: 1
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4609170800368041, 0]
222 self.state_dicts[msg.id][msg.t] is (3.517143487930298, -41.00208282470703, 1.3228660821914673, 13.852339744567871)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: -3.61103510857
y: 41.5173988342
theta: 4.83755636215
speed: 14.3804235458
id: 1
t: 39
xxx after update is x: -2.77344369888
y: 40.4562759399
theta: 4.68130779266
speed: 14.0231847763
id: 1
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.77777777778






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: -2.77344369888
y: 40.4562759399
theta: 4.68130779266
speed: 14.0231847763
id: 1
t: 40
xxx after update is x: -3.39755320549
y: 39.5153579712
theta: 4.78647136688
speed: 13.9441356659
id: 1
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: -3.39755320549
y: 39.5153579712
theta: 4.78647136688
speed: 13.9441356659
id: 1
t: 41
xxx after update is x: -3.32725262642
y: 39.0664329529
theta: 4.66988420486
speed: 13.815325737
id: 1
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.35899484098075046, 0]
222 self.state_dicts[msg.id][msg.t] is (3.4232523441314697, -39.11893844604492, 1.546872854232788, 13.896601676940918)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n  in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: 3.2910554409
y: -41.7120437622
theta: 1.31970119476
speed: 13.9833288193
id: 0
t: 37
xxx after update is x: 3.29611229897
y: -41.8664360046
theta: 1.54655528069
speed: 14.0012674332
id: 0
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: 3.29611229897
y: -41.8664360046
theta: 1.54655528069
speed: 14.0012674332
id: 0
t: 38
xxx after update is x: 3.51714348793
y: -41.0020828247
theta: 1.32286608219
speed: 13.8523397446
id: 0
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: 3.51714348793
y: -41.0020828247
theta: 1.32286608219
speed: 13.8523397446
id: 0
t: 39
xxx after update is x: 2.88388752937
y: -40.1384773254
theta: 1.68215990067
speed: 13.8289794922
id: 0
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.77777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: 2.88388752937
y: -40.1384773254
theta: 1.68215990067
speed: 13.8289794922
id: 0
t: 40
xxx after update is x: 2.78529548645
y: -40.6106872559
theta: 1.55328702927
speed: 14.1390666962
id: 0
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.38835488168453247, 0.3465820153524632]
222 self.state_dicts[msg.id][msg.t] is (-3.3975532054901123, 39.515357971191406, 4.786471366882324, 13.944135665893555)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: 2.78529548645
y: -40.6106872559
theta: 1.55328702927
speed: 14.1390666962
id: 0
t: 41
xxx after update is x: 3.42325234413
y: -39.118938446
theta: 1.54687285423
speed: 13.8966016769
id: 0
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: 3.42325234413
y: -39.118938446
theta: 1.54687285423
speed: 13.8966016769
id: 0
t: 42
xxx after update is x: 3.0770316124
y: -38.289440155
theta: 1.79700958729
speed: 14.1599636078
id: 0
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: 3.0770316124
y: -38.289440155
theta: 1.79700958729
speed: 14.1599636078
id: 0
t: 43
xxx after update is x: 3.41492462158
y: -38.0359115601
theta: 1.61089682579
speed: 14.0089826584
id: 0
t: 44
maneuver_negotiatir.py fintimes spin:43

xxx before update is x: -3.32725262642
y: 39.0664329529
theta: 4.66988420486
speed: 13.815325737
id: 1
t: 42
xxx after update is x: -3.07112360001
y: 39.0115661621
theta: 4.74610233307
speed: 13.89067173
id: 1
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: -3.07112360001
y: 39.0115661621
theta: 4.74610233307
speed: 13.89067173
id: 1
t: 43
xxx after update is x: -3.08435964584
y: 38.0020065308
theta: 4.70519399643
speed: 13.9663600922
id: 1
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: -3.08435964584
y: 38.0020065308
theta: 4.70519399643
speed: 13.9663600922
id: 1
t: 44
xxx after update is x: -3.33046197891
y: 37.322177887
theta: 4.83345079422
speed: 13.8240661621
id: 1
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3498611293330789, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0268280506134033, -37.268795013427734, 1.5212948322296143, 13.80269718170166)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: -3.33046197891
y: 37.322177887
theta: 4.83345079422
speed: 13.8240661621
id: 1
t: 45
xxx after update is x: -3.24550771713
y: 36.7038536072
theta: 4.80225944519
speed: 13.9452543259
id: 1
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: -3.24550771713
y: 36.7038536072
theta: 4.80225944519
speed: 13.9452543259
id: 1
t: 46
xxx after update is x: -3.31303071976
y: 35.7954139709
theta: 4.77478122711
speed: 13.8539800644
id: 1
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.34439505406061327, 0]
222 self.state_dicts[msg.id][msg.t] is (2.632039785385132, -35.62831115722656, 1.481069564819336, 13.758275985717773)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: -3.31303071976
y: 35.7954139709
theta: 4.77478122711
speed: 13.8539800644
id: 1
t: 47
xxx after update is x: -3.17906522751
y: 36.0583648682
theta: 4.68392753601
speed: 14.2223711014
id: 1
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.13333333333






self.maneuveish the update agent state from ros funtion
risk is [0.6555617510381627, 0.2831411466854915]
222 self.state_dicts[msg.id][msg.t] is (-3.084359645843506, 38.00200653076172, 4.705193996429443, 13.966360092163086)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: 3.41492462158
y: -38.0359115601
theta: 1.61089682579
speed: 14.0089826584
id: 0
t: 44
xxx after update is x: 3.02682805061
y: -37.2687950134
theta: 1.52129483223
speed: 13.8026971817
id: 0
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: 3.02682805061
y: -37.2687950134
theta: 1.52129483223
speed: 13.8026971817
id: 0
t: 45
xxx after update is x: 3.12708854675
y: -36.3213272095
theta: 1.61531853676
speed: 14.4521379471
id: 0
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: 3.12708854675
y: -36.3213272095
theta: 1.61531853676
speed: 14.4521379471
id: 0
t: 46
xxx after update is x: 2.63203978539
y: -35.6283111572
theta: 1.48106956482
speed: 13.7582759857
id: 0
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.2912403438943687, 0.35335591154398566]
222 self.state_dicts[msg.id][msg.t] is (-3.31303071975708, 35.795413970947266, 4.774781227111816, 13.85398006439209)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.08888888889






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: 2.63203978539
y: -35.6283111572
theta: 1.48106956482
speed: 13.7582759857
id: 0
t: 47
xxx after update is x: 3.42999744415
y: -34.9432907104
theta: 1.48940348625
speed: 13.7131261826
id: 0
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: 3.42999744415
y: -34.9432907104
theta: 1.48940348625
speed: 13.7131261826
id: 0
t: 48
xxx after update is x: 2.59577512741
y: -34.6924247742
theta: 1.50231254101
speed: 14.1946840286
id: 0
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: 2.59577512741
y: -34.6924247742
theta: 1.50231254101
speed: 14.1946840286
id: 0
t: 49
xxx after update is x: 3.42859864235
y: -34.1883850098
theta: 1.41967153549
speed: 14.0017404556
id: 0
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxr_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: -3.17906522751
y: 36.0583648682
theta: 4.68392753601
speed: 14.2223711014
id: 1
t: 48
xxx after update is x: -3.21375131607
y: 34.7638435364
theta: 4.80316829681
speed: 13.5373039246
id: 1
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: -3.21375131607
y: 34.7638435364
theta: 4.80316829681
speed: 13.5373039246
id: 1
t: 49
xxx after update is x: -3.10476851463
y: 34.4308929443
theta: 4.750415802
speed: 13.7725563049
id: 1
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.10476851463
y: 34.4308929443
theta: 4.750415802
speed: 13.7725563049
id: 1
t: 50
xxx after update is x: -2.94388747215
y: 33.2288513184
theta: 4.76647043228
speed: 13.9853868484
id: 1
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:51


risk is [0.4375986219167375, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0712924003601074, -33.539276123046875, 1.5998449325561523, 13.664480209350586)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: -2.94388747215
y: 33.2288513184
theta: 4.76647043228
speed: 13.9853868484
id: 1
t: 51
xxx after update is x: -3.13286447525
y: 32.9489402771
theta: 4.98472929001
speed: 13.9043855667
id: 1
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:53


xxx before update is x: -3.13286447525
y: 32.9489402771
theta: 4.98472929001
speed: 13.9043855667
id: 1
t: 52
xxx after update is x: -3.65462350845
y: 32.2367019653
theta: 4.72001409531
speed: 14.2614955902
id: 1
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3616748613364767, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0602588653564453, -32.522804260253906, 1.5554003715515137, 13.825822830200195)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:54


xxx xxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: 3.42859864235
y: -34.1883850098
theta: 1.41967153549
speed: 14.0017404556
id: 0
t: 50
xxx after update is x: 3.07129240036
y: -33.539276123
theta: 1.59984493256
speed: 13.6644802094
id: 0
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3044935954569718, 0.37832358282292977]
222 self.state_dicts[msg.id][msg.t] is (-2.94388747215271, 33.228851318359375, 4.766470432281494, 13.985386848449707)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: 3.07129240036
y: -33.539276123
theta: 1.59984493256
speed: 13.6644802094
id: 0
t: 51
xxx after update is x: 3.76978397369
y: -32.9343910217
theta: 1.69267511368
speed: 13.9301319122
id: 0
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:53


xxx before update is x: 3.76978397369
y: -32.9343910217
theta: 1.69267511368
speed: 13.9301319122
id: 0
t: 52
xxx after update is x: 3.06025886536
y: -32.5228042603
theta: 1.55540037155
speed: 13.8258228302
id: 0
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: 3.06025886536
y: -32.5228042603
theta: 1.55540037155
speed: 13.8258228302
id: 0
t: 53
xxx after update is x: 3.47561192513
y: -31.8019104004
theta: 1.40929985046
speed: 14.1041698456
id: 0
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: 3.47561192513
y: -31.8019104004
theta: 1.40929985046
speed: 14.1041698456
id: 0
t: 54
xxx after update is x: 3.20238542557
y: -30.2973842621
theta: 1.63743710518
speed: 13.5914773941
id: 0
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.398244477143932, 0.3682745908684023]
222 self.state_dicts[msg.id][msg.t] is (-3.4913246631622314, 30.99513816833496, 4.926804542541504, 13.572254180908203)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.44444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: 3.20238542557
y: -30.2973842621
theta: 1.63743710518
speed: 13.5914773941
id: 0
t: 55
xxx after update is x: 3.05231571198
y: -30.5586185455
theta: 1.48763442039
speed: 13.9946184158
id: 0
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:57


xxxbefore update is x: -3.65462350845
y: 32.2367019653
theta: 4.72001409531
speed: 14.2614955902
id: 1
t: 53
xxx after update is x: -3.15531349182
y: 31.1248264313
theta: 4.67029809952
speed: 13.6912202835
id: 1
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: -3.15531349182
y: 31.1248264313
theta: 4.67029809952
speed: 13.6912202835
id: 1
t: 54
xxx after update is x: -3.49132466316
y: 30.9951381683
theta: 4.92680454254
speed: 13.5722541809
id: 1
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: -3.49132466316
y: 30.9951381683
theta: 4.92680454254
speed: 13.5722541809
id: 1
t: 55
xxx after update is x: -3.55598425865
y: 30.2106113434
theta: 4.72815847397
speed: 13.7893943787
id: 1
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.48888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.40273967721744997, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0523157119750977, -30.558618545532227, 1.4876344203948975, 13.99461841583252)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: -3.55598425865
y: 30.2106113434
theta: 4.72815847397
speed: 13.7893943787
id: 1
t: 56
xxx after update is x: -3.35897231102
y: 29.9767932892
theta: 4.75899934769
speed: 13.9700059891
id: 1
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: -3.35897231102
y: 29.9767932892
theta: 4.75899934769
speed: 13.9700059891
id: 1
t: 57
xxx after update is x: -3.65012216568
y: 28.8528938293
theta: 4.68427705765
speed: 13.6603813171
id: 1
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: -3.65012216568
y: 28.8528938293
theta: 4.68427705765
speed: 13.6603813171
id: 1
t: 58
xxx after update is x: -3.51850652695
y: 28.6733360291
theta: 4.74710464478
speed: 13.95499897
id: 1
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.33655666153717523, 0]
222 self.state_dicts[msg.id][msg.t] is (3.20674467086792, -28.625083923339844, 1.7085809707641602, 13.77682876586914)
if we have all measurements for a certain time-stamp perform r before update is x: 3.05231571198
y: -30.5586185455
theta: 1.48763442039
speed: 13.9946184158
id: 0
t: 56
xxx after update is x: 3.41211867332
y: -29.6695308685
theta: 1.55611681938
speed: 13.8885440826
id: 0
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: 3.41211867332
y: -29.6695308685
theta: 1.55611681938
speed: 13.8885440826
id: 0
t: 57
xxx after update is x: 3.25476264954
y: -28.9479656219
theta: 1.61341702938
speed: 13.7514295578
id: 0
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: 3.25476264954
y: -28.9479656219
theta: 1.61341702938
speed: 13.7514295578
id: 0
t: 58
xxx after update is x: 3.20674467087
y: -28.6250839233
theta: 1.70858097076
speed: 13.7768287659
id: 0
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.36809267129872436, 0.31606599317524153]
222 self.state_dicts[msg.id][msg.t] is (-3.5185065269470215, 28.673336029052734, 4.747104644775391, 13.954998970031738)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: 3.20674467087
y: -28.6250839233
theta: 1.70858097076
speed: 13.7768287659
id: 0
t: 59
xxx after update is x: 3.21064639091
y: -27.6078891754
theta: 1.66310703754
speed: 14.0099935532
id: 0
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: 3.21064639091
y: -27.6078891754
theta: 1.66310703754
speed: 14.0099935532
id: 0
t: 60
xxx after update is x: 3.15301036835
y: -27.4735507965
theta: 1.64698863029
speed: 13.8756780624
id: 0
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: 3.15301036835
y: -27.4735507965
theta: 1.64698863029
speed: 13.8756780624
id: 0
t: 61
xxx after update is x: 3.38442397118
y: -26.8771038055
theta: 1.45239233971
speed: 13.8542461395
id: 0
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: 3.38442397118
y: -26.8771038055
theta: 1.45239233971
speed: 13.8542461395
id: 0
t: 62
xxx after update is x: 4.11897563934
y: -26.031452179
theta: 1.65091192722
speed: 13.4574165344
id: 0
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.8






self.maneuver_requested None
risk is [0.3590266653442037, 0.3656193768953718]
222 self.state_dicts[msg.id][msg.t] is (-3.43178653717041, 26.100645065307617, 5.021831512451172, 13.159868240356445)
if we have all measurements for a certain time-stamp perform risk estimatiisk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: -3.51850652695
y: 28.6733360291
theta: 4.74710464478
speed: 13.95499897
id: 1
t: 59
xxx after update is x: -3.41153860092
y: 27.8219184875
theta: 4.82815885544
speed: 13.4500608444
id: 1
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: -3.41153860092
y: 27.8219184875
theta: 4.82815885544
speed: 13.4500608444
id: 1
t: 60
xxx after update is x: -2.89622330666
y: 27.2860965729
theta: 4.73019313812
speed: 14.0966901779
id: 1
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: -2.89622330666
y: 27.2860965729
theta: 4.73019313812
speed: 14.0966901779
id: 1
t: 61
xxx after update is x: -2.95191025734
y: 26.9062004089
theta: 4.74680805206
speed: 13.9869041443
id: 1
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3307761997389984, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3844239711761475, -26.877103805541992, 1.452392339706421, 13.854246139526367)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: -2.95191025734
y: 26.9062004089
theta: 4.74680805206
speed: 13.9869041443
id: 1
t: 62
xxx after update is x: -3.43178653717
y: 26.1006450653
theta: 5.02183151245
speed: 13.1598682404
id: 1
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.8






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: -3.43178653717
y: 26.1006450653
theta: 5.02183151245
speed: 13.1598682404
id: 1
t: 63
xxx after update is x: -3.62823057175
y: 25.4043655396
theta: 4.69234991074
speed: 13.8230381012
id: 1
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: -3.62823057175
y: 25.4043655396
theta: 4.69234991074
speed: 13.8230381012
id: 1
t: 64
xxx after update is on
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 4.11897563934
y: -26.031452179
theta: 1.65091192722
speed: 13.4574165344
id: 0
t: 63
xxx after update is x: 3.02866148949
y: -25.5290222168
theta: 1.67871630192
speed: 13.3855037689
id: 0
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:64




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: 3.02866148949
y: -25.5290222168
theta: 1.67871630192
speed: 13.3855037689
id: 0
t: 64
xxx after update is x: 3.17983675003
y: -24.8506679535
theta: 1.64018380642
speed: 13.2648048401
id: 0
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: 3.17983675003
y: -24.8506679535
theta: 1.64018380642
speed: 13.2648048401
id: 0
t: 65
xxx after update is x: 3.02370858192
y: -24.4965515137
theta: 1.58298325539
speed: 12.659658432
id: 0
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: 3.02370858192
y: -24.4965515137
theta: 1.58298325539
speed: 12.659658432
id: 0
t: 66
xxx after update is x: 3.71805739403
y: -23.8403778076
theta: 1.56715714931
speed: 12.5823020935
id: 0
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: 3.71805739403
y: -23.8403778076
theta: 1.56715714931
speed: 12.5823020935
id: 0
t: 67
xxx after update is x: 3.48591732979
y: -23.0750350952
theta: 1.8128361702
speed: 12.4162092209
id: 0
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.30425379648375395, 0.317087143776164]
222 self.state_dicts[msg.id][msg.t] is (-3.463829517364502, 22.864391326904297, 4.7318034172058105, 13.788488388061523)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: 3.48591732979
y: -23.0750350952
theta: 1.8128361702
speed: 12.4162092209
id: 0
t: 68
xxx after update is x: 2.97894048691
y: -22.3274879456
theta: 1.72012329102
speed: 12.2404136658
id: 0
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: 2.97894048691
y: -22.3274879456
theta: 1.72012329102
speed: 12.2404136658
id: 0
t: 69
xxx after update is x: 3.49702882767
y: -21.5393848419
theta: 1.58147013187
speed: 11.9586811066
id: 0
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.451133370485183, 0.3171181421864272]
222 sex: -3.08905911446
y: 25.5576915741
theta: 4.685505867
speed: 14.1069154739
id: 1
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3198699716699456, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1798367500305176, -24.85066795349121, 1.6401838064193726, 13.26480484008789)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: -3.08905911446
y: 25.5576915741
theta: 4.685505867
speed: 14.1069154739
id: 1
t: 65
xxx after update is x: -2.84332680702
y: 23.9267215729
theta: 4.51827049255
speed: 13.9860630035
id: 1
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: -2.84332680702
y: 23.9267215729
theta: 4.51827049255
speed: 13.9860630035
id: 1
t: 66
xxx after update is x: -3.16874814034
y: 23.8650131226
theta: 4.54697084427
speed: 14.0244789124
id: 1
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: -3.16874814034
y: 23.8650131226
theta: 4.54697084427
speed: 14.0244789124
id: 1
t: 67
xxx after update is x: -3.46382951736
y: 22.8643913269
theta: 4.73180341721
speed: 13.7884883881
id: 1
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.38501586669046656, 0]
222 self.state_dicts[msg.id][msg.t] is (3.485917329788208, -23.075035095214844, 1.8128361701965332, 12.41620922088623)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: -3.46382951736
y: 22.8643913269
theta: 4.73180341721
speed: 13.7884883881
id: 1
t: 68
xxx after update is x: -2.79031300545
y: 22.0139389038
theta: 4.72484922409
speed: 13.7083368301
id: 1
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: -2.79031300545
y: 22.0139389038
theta: 4.72484922409
speed: 13.7083368301
id: 1
t: 69
xxx after update is x: -3.2965760231
y: 21.6370983124
theta: 4.76380205154
speed: 13.7629518509
id: 1
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.42630571789341015, 0]
222 self.state_dicts[msg.id][msg.t] is (3.4970288276672363, -21.539384841918945, 1.5814701318740845, 11.958681106567383)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:Fallf.state_dicts[msg.id][msg.t] is (-3.2965760231018066, 21.63709831237793, 4.7638020515441895, 13.762951850891113)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: 3.49702882767
y: -21.5393848419
theta: 1.58147013187
speed: 11.9586811066
id: 0
t: 70
xxx after update is x: 3.01225113869
y: -21.6986865997
theta: 1.62644219398
speed: 11.6926546097
id: 0
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.15555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: 3.01225113869
y: -21.6986865997
theta: 1.62644219398
speed: 11.6926546097
id: 0
t: 71
xxx after update is x: 2.9328763485
y: -20.371547699
theta: 1.53016483784
speed: 11.8374061584
id: 0
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: 2.9328763485
y: -20.371547699
theta: 1.53016483784
speed: 11.8374061584
id: 0
t: 72
xxx after update is x: 3.35697627068
y: -20.0438404083
theta: 1.50331509113
speed: 11.4523849487
id: 0
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.36269106906799664, 0.07984916137514543]
222 self.state_dicts[msg.id][msg.t] is (-3.2359166145324707, 19.802101135253906, 4.780709266662598, 13.926809310913086)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:
initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$


hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: 3.35697627068
y: -20.0438404083
theta: 1.50331509113
speed: 11.4523849487
id: 0
t: 73
xxx after update is x: 3.39442682266
y: -19.4837837219
theta: 1.5052434206
speed: 11.3222570419
id: 0
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 1
current clock is 3.28888888889
!!!!after check statue the self.tag is [3.2888888888888888, 0, 'left']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.28888888889

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.2444444444444445, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.28888888889,(3.3944268226623535, -19.483783721923828, 1.5052434206008911),11,1,3.28888888889,0,left
!!!!change state to get
GET,0,3.28888888889,(3.3944268226623535, -19.483783721923828, 1.5052434206008911),11,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.28888888889
self.communication_details == 0
sending GET,0,3.28888888889,(3.3944268226623535, -19.483783721923828, 1.505243420se

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: -3.2965760231
y: 21.6370983124
theta: 4.76380205154
speed: 13.7629518509
id: 1
t: 70
xxx after update is x: -3.49196696281
y: 20.5102863312
theta: 4.96777820587
speed: 13.7773513794
id: 1
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion

 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.15555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: -3.49196696281
y: 20.5102863312
theta: 4.96777820587
speed: 13.7773513794
id: 1
t: 71
xxx after update is x: -3.11816000938
y: 20.9549674988
theta: 4.75536298752
speed: 13.7917842865
id: 1
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: -3.11816000938
y: 20.9549674988
theta: 4.75536298752
speed: 13.7917842865
id: 1
t: 72
xxx after update is x: -3.23591661453
y: 19.8021011353
theta: 4.78070926666
speed: 13.9268093109
id: 1
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.19879814590528164, 0]
222 self.state_dicts[msg.id][msg.t] is (3.356976270675659, -20.043840408325195, 1.5033150911331177, 11.452384948730469)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: -3.23591661453
y: 19.8021011353
theta: 4.78070926666
speed: 13.9268093109
id: 1
t: 73
xxx after update is x: -2.76395869255
y: 19.1936740875
theta: 4.77885770798
speed: 13.763086319
id: 1
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.28888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.28888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '3.28888888889', 'IntendedCourse': 'left', 'Position': ['3.3944268226623535', ' -19.483783721923828', ' 1.5052434206008911'], 'TagID': '0', 'Type': 'GET', 'Velocity': '11'}
car 1 received GET,0,3.28888888889,(3.3944268226623535, -19.483783721923828, 1.5052434206008911),11,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.146172839506
sender travel direction is:  north
sender earliest entering time is:  1.78002667663
sender last entering time is:  2.22244795418
sender last leaving time is:  4.4501536036008911),11,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
Received -->>: 
current clock is 3.28888888889




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.28888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '3.28888888889', 'Position': ['(-3.491966962814331', ' 20.510286331176758', ' 4.967778205871582)'], 'Type': 'DENY'}
car 0 received DENY,1,3.28888888889,(-3.491966962814331, 20.510286331176758, 4.967778205871582),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.2444444444444445, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.2444444444444445, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




finish try maneuver


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: 3.39442682266
y: -19.4837837219
theta: 1.5052434206
speed: 11.3222570419
id: 0
t: 74
xxx after update is x: 3.30953407288
y: -19.2893619537
theta: 1.48166537285
speed: 10.9934120178
id: 0
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: 3.30953407288
y: -19.2893619537
theta: 1.48166537285
speed: 10.9934120178
id: 0
t: 75
xxx after update is x: 3.63759160042
y: -18.5815086365
theta: 1.67272257805
speed: 10.5048770905
id: 0
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: 3.63759160042
y: -18.5815086365
theta: 1.67272257805
speed: 10.5048770905
id: 0
t: 76
xxx after update is x: 3.42868065834
y: -18.5046386719
theta: 1.55541324615
speed: 10.3569793701
id: 0
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.46919476836944757, 0.09846628481147535]
222 self.state_dicts[msg.id][msg.t] is (-3.1353375911712646, 17.057201385498047, 4.6637067794799805, 13.967071533203125)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:78


xxx before update is x: 3.42868065834
y: -18.5046386719
theta: 1.55541324615
speed: 10.3569793701
id: 0
t: 77
xxx after update is x: 3.33544301987
y: -18.6142959595
theta: 1.58602142334
speed: 10.0975818634
id: 0
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.46666666667






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R24
my entering time is:  0.991672929364
my leaving time is:  2.91717301922
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.28888888889
self.communication_details == 0
sending DENY,1,3.28888888889,(-3.491966962814331, 20.510286331176758, 4.967778205871582),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: -2.76395869255
y: 19.1936740875
theta: 4.77885770798
speed: 13.763086319
id: 1
t: 74
xxx after update is x: -3.61812090874
y: 18.9769954681
theta: 4.61901378632
speed: 13.7601032257
id: 1
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.61812090874
y: 18.9769954681
theta: 4.61901378632
speed: 13.7601032257
id: 1
t: 75
xxx after update is x: -2.90377616882
y: 18.1146850586
theta: 4.74082565308
speed: 14.3857278824
id: 1
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:76


aaaaaa
aaaaaabbbbb
risk is [0.5240427705904349, 0]
222 self.state_dicts[msg.id][msg.t] is (3.637591600418091, -18.58150863647461, 1.672722578048706, 10.504877090454102)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: -2.90377616882
y: 18.1146850586
theta: 4.74082565308
speed: 14.3857278824
id: 1
t: 76
xxx after update is x: -3.13533759117
y: 17.0572013855
theta: 4.66370677948
speed: 13.9670715332
id: 1
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:78


xxx before update is x: -3.13533759117
y: 17.0572013855
theta: 4.66370677948
speed: 13.9670715332
id: 1
t: 77
xxx after update is x: -3.28911709785
y: 16.8748073578
theta: 4.61680984497
speed: 13.8724145889
id: 1
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.32500918315094546, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3354430198669434, -18.614295959472656, 1.5860214233398438, 10.09758186340332)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
current clock is 3.46666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.46666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '10', 'Sender': '0', 'TagID': '1', 'Time': '3.46666666667', 'Position': ['(3.3354430198669434', ' -18.614295959472656', ' 1.5860214233398438)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,3.46666666667,(3.3354430198669434, -18.614295959472656, 1.5860214233398438),10,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: -3.28911709785
y: 16.8748073578
theta: 4.61680984497
speed: 13.8724145889
id: 1
t: 78
xxx after update is x: -3.45694208145
y: 15.6858177185
theta: 4.55970335007
speed: 13.986079216
id: 1
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.51111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:80


xxx before update is x: -3.45694208145
y: 15.6858177185
theta: 4.55970335007
speed: 13.986079216
id: 1
t: 79
xxx after update is x: -3.26091265678
y: 15.5236730576
theta: 4.47956323624
speed: 13.6858043671
id: 1
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.23432152858764918, 0]
222 self.state_dicts[msg.id][msg.t] is (3.4198386669158936, -17.212665557861328, 1.6004773378372192, 10.058696746826172)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: -3.26091265678
y: 15.5236730576
theta: 4.47956323624
speed: 13.6858043671
id: 1
t: 80
xxx after update is x: -3.43948674202
y: 14.7963562012
theta: 4.59760522842
speed: 13.7441759109
id: 1
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: -3.43948674202
y: 14.7963562012
theta: 4.59760522842
speed: 13.7441759109
id: 1
t: 81
xxx after update is x: -3.4068441391
y: 14.1688108444
theta: 4.56763935089
speed: 13.9137268066
id: 1
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:83


xxx before update is x: -3.4068441391
y: 14.1688108444
theta: 4.56763935089
speed: 13.9137268066
id: 1
t: 82
xxx after update is x: -3.42060399055
y: 13.7114591599
theta: 4.68484783173
speed: 13.9326047897
id: 1
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.32973275784568445, 0]
222 self.state_dicts[msg.id][msg.t] is (3.685821771621704, -16.3038330078125, 1.4693067073822021, 8.96142 response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.422222222222222, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 3.46666666667
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.42222222222
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,3.46666666667,(3.3354430198669434, -18.614295959472656, 1.5860214233398438),10,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 3.46666666667
self.communication_details == 0
sending RELEASE,0,3.46666666667,(3.3354430198669434, -18.614295959472656, 1.5860214233398438),10,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: 3.33544301987
y: -18.6142959595
theta: 1.58602142334
speed: 10.0975818634
id: 0
t: 78
xxx after update is x: 3.26056170464
y: -18.0621757507
theta: 1.47788500786
speed: 9.98046875
id: 0
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:80


xxx before update is x: 3.26056170464
y: -18.0621757507
theta: 1.47788500786
speed: 9.98046875
id: 0
t: 79
xxx after update is x: 3.41983866692
y: -17.2126655579
theta: 1.60047733784
speed: 10.0586967468
id: 0
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.4605449490182246, 0.019666683395711763]
222 self.state_dicts[msg.id][msg.t] is (-3.2609126567840576, 15.523673057556152, 4.479563236236572, 13.68580436706543)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.41983866692
y: -17.2126655579
theta: 1.60047733784
speed: 10.0586967468
id: 0
t: 80
xxx after update is x: 3.6213850975
y: -16.5108661652
theta: 1.63141715527
speed: 9.57979297638
id: 0
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:81




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: 3.6213850975
y: -16.5108661652
theta: 1.63141715527
speed: 9.57979297638
id: 0
t: 81
xxx after update is x: 2.803160429
y: -16.3922729492
theta: 1.60948503017
speed: 9.66150569916
id: 0
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:83


xxx before update is x: 2.803160429
y: -16.3922729492
theta: 1.60948503017
speed: 9.66150569916
id: 0
t: 82
xxx after update is x: 3.68582177162
y: -16.3038330078
theta: 1.46930670738
speed: 8.96142482758
id: 0
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: 3.68582177162
y: -16.3038330078
theta: 1.46930670738
speed: 8.96142482758
id: 0
t: 83
xxx after update is x: 2.88756608963
y: -15.560790062
theta: 1.4521971941
speed: 8.98507404327
id: 0
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.42592696416163567, 0.06500112493817999]
222 self.state_dicts[msg.id][msg.t] is (-3.2703185081481934, 12.9681396484375, 4.723223686218262, 13.728134155273438)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: 2.88756608963
y: -15.560790062
theta: 1.4521971941
speed: 8.98507404327
id: 0
t: 84
xxx after update is x: 3.01721978188
y: -15.5884742737
theta: 1.48862814903
speed: 8.57143688202
id: 0
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: 3.01721978188
y: -15.5884742737
theta: 1.48862814903
speed: 8.57143688202
id: 0
t: 85
xxx after update is x: 3.22906398773
y: -14.8248882294
theta: 1.61521780491
speed: 8.36941432953
id: 0
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.82222222222

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.7777777777777777, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.82222222222,(3.2290639877319336, -14.824888229370117, 1.6152178049087524),8,1,3.28888888889,0,left
!!!!change state to get
GET,0,3.82222222222,(3.2290639877319336, -14.824888229370117, 1.6152178049087524),8,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.82222222222
self.communication_details == 0
sending GET,0,3.82222222222,(3.2290639877319336, -14.824888229370117, 1.6152178049087524),8,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.82222222222






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0
Received -->>: 
current clock is 3.82222222222




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.82222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '3.82222222222', 'Position': ['(-3.456942081451416', ' 15.68581771850586', ' 4.559703350067139)'], 'Type': 'DENY'}
car 0 received DENY,1,3.82222222222,(-3.456942081451416, 15.68581771850586, 4.559703350067139),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.7777777777777777, True, ['1']]
maneuver_negotiatir.py get mem4827575684)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: -3.42060399055
y: 13.7114591599
theta: 4.68484783173
speed: 13.9326047897
id: 1
t: 83
xxx after update is x: -3.27031850815
y: 12.9681396484
theta: 4.72322368622
speed: 13.7281341553
id: 1
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.27031850815
y: 12.9681396484
theta: 4.72322368622
speed: 13.7281341553
id: 1
t: 84
xxx after update is x: -3.5409283638
y: 12.9135551453
theta: 4.67400598526
speed: 13.6856117249
id: 1
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:85


aaaaaa
aaaaaabbbbb
risk is [0.31488495922234405, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0172197818756104, -15.58847427368164, 1.4886281490325928, 8.571436882019043)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: -3.5409283638
y: 12.9135551453
theta: 4.67400598526
speed: 13.6856117249
id: 1
t: 85
xxx after update is x: -3.48969244957
y: 12.0240297318
theta: 4.63391017914
speed: 13.8747930527
id: 1
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.82222222222




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.82222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '3.82222222222', 'IntendedCourse': 'left', 'Position': ['3.2290639877319336', ' -14.824888229370117', ' 1.6152178049087524'], 'TagID': '0', 'Type': 'GET', 'Velocity': '8'}
car 1 received GET,0,3.82222222222,(3.2290639877319336, -14.824888229370117, 1.6152178049087524),8,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.16987654321
sender travel direction is:  north
sender earliest entering time is:  1.32773933647
sender last entering time is:  2.16987654321
sender last leaving time is:  4.54317479963
my entering time is:  0.499162239451
my leaving time is:  1.90844793569
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.82222222222
self.communication_details == 0
sending DENY,1,3.82222222222,(-3.456942081451416, 15.68581771850586, 4.559703350067139),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.8bership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.7777777777777777, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: 3.22906398773
y: -14.8248882294
theta: 1.61521780491
speed: 8.36941432953
id: 0
t: 86
xxx after update is x: 3.22002911568
y: -13.7594280243
theta: 1.4655970335
speed: 8.84702396393
id: 0
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: 3.22002911568
y: -13.7594280243
theta: 1.4655970335
speed: 8.84702396393
id: 0
t: 87
xxx after update is x: 3.07064437866
y: -13.5994558334
theta: 1.67816627026
speed: 7.99254369736
id: 0
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.5459836125642014, 0.07363763424090174]
222 self.state_dicts[msg.id][msg.t] is (-3.26306414604187, 10.246231079101562, 4.640548229217529, 13.902990341186523)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: 3.07064437866
y: -13.5994558334
theta: 1.67816627026
speed: 7.99254369736
id: 0
t: 88
xxx after update is x: 3.27897238731
y: -13.1880922318
theta: 1.40643680096
speed: 8.13617134094
id: 0
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:90


xxx before update is x: 3.27897238731
y: -13.1880922318
theta: 1.40643680096
speed: 8.13617134094
id: 0
t: 89
xxx after update is x: 3.51097488403
y: -13.1854352951
theta: 1.3732843399
speed: 7.47066545486
id: 0
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: 3.51097488403
y: -13.1854352951
theta: 1.3732843399
speed: 7.47066545486
id: 0
t: 90
xxx after update is x: 3.53002738953
y: -12.6998806
theta: 1.50415432453
speed: 7.28055143356
id: 0
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.40886638016530036, 0.030808659369732528]
222 self.state_dicts[msg.id][msg.t] is (-2.9430816173553467, 8.652047157287598, 4.869006633758545, 13.753703117370605)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin funct2222222222

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo







self.maneuver_requested None
xxx before update is x: -3.48969244957
y: 12.0240297318
theta: 4.63391017914
speed: 13.8747930527
id: 1
t: 86
xxx after update is x: -2.90356397629
y: 11.084066391
theta: 4.69783735275
speed: 13.9749879837
id: 1
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:87


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: -2.90356397629
y: 11.084066391
theta: 4.69783735275
speed: 13.9749879837
id: 1
t: 87
xxx after update is x: -3.26306414604
y: 10.2462310791
theta: 4.64054822922
speed: 13.9029903412
id: 1
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.2423425106109341, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0706443786621094, -13.599455833435059, 1.6781662702560425, 7.992543697357178)
if we have all measurements for a certain time-stamp perform risk estimation


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: -3.26306414604
y: 10.2462310791
theta: 4.64054822922
speed: 13.9029903412
id: 1
t: 88
xxx after update is x: -3.07361578941
y: 9.96960067749
theta: 4.62462902069
speed: 14.097618103
id: 1
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:90


xxx before update is x: -3.07361578941
y: 9.96960067749
theta: 4.62462902069
speed: 14.097618103
id: 1
t: 89
xxx after update is x: -3.13446474075
y: 9.4214887619
theta: 4.66993141174
speed: 13.9441633224
id: 1
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: -3.13446474075
y: 9.4214887619
theta: 4.66993141174
speed: 13.9441633224
id: 1
t: 90
xxx after update is x: -2.94308161736
y: 8.65204715729
theta: 4.86900663376
speed: 13.7537031174
id: 1
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.2132056280515087, 0]
222 self.state_dicts[msg.id][msg.t] is (3.530027389526367, -12.699880599975586, 1.5041543245315552, 7.280551433563232)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:92

xxx before update is x: -2.94308161736
y: 8.65204715729
theta: 4.86900663376
speed: 13.7537031174
id: 1
t: 91
xxx after update is x: -3.02292728424
y: 8.60443115234
theta: 4.85789585114
speed: 13.7120513916
id: 1
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: -3.02292728424
y: 8.60443115234
theta: 4.85789585114
speed: 13.7120513916
id: 1
t: 92
xxx after update is x: -3.37429499626
y: 7.00638151169
theta: 4.63243579865
speed: 13.5469083786
id: 1
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.1792656634710998, 0]
222 self.state_dicts[msg.id][msg.t] is (3.041656732559204, -12.384052276611328, 1.519899845123291, 7.107525825500488)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: -3.37429499626
y: 7.00638151169
theta: 4.63243579865
speed: 13.5469083786
id: 1
t: 93
xxx after update is x: -3.41943883896
y: 6.95649719238
theta: 4.5474395752
speed: 13.73848629
id: 1
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.17777777778




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.17777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '6', 'Sender': '0', 'TagID': '1', 'Time': '4.17777777778', 'Position': ['(2.956350326538086', ' -11.588638305664062', ' 1.544593095779419)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.17777777778,(2.956350326538086, -11.588638305664062, 1.544593095779419),6,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.17777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: -3.41943883896
y: 6.95649719238
theta: 4.5474395752
speed: 13.73848629
id: 1
t: 94
xxx after update is x: -3.30996847153
y: 6.42275333405
theta: 4.49581003189
speed: 13.6104345322
id: 1
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: -3.30996847153
y: 6.42275333405
theta: 4.49581003189
speed: 13.6104345322
id: 1
t: 95
xxx after update is x: -3.34567713737
y: 5.66496706009
theta: 4.68134069443
speed: 13.5918769836
id: 1
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.2915749941369819, 0]
222 self.state_dicts[msg.id]ion, finish the n times spin:92

xxx before update is x: 3.53002738953
y: -12.6998806
theta: 1.50415432453
speed: 7.28055143356
id: 0
t: 91
xxx after update is x: 3.03358745575
y: -12.2171173096
theta: 1.63447272778
speed: 6.97170829773
id: 0
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: 3.03358745575
y: -12.2171173096
theta: 1.63447272778
speed: 6.97170829773
id: 0
t: 92
xxx after update is x: 3.04165673256
y: -12.3840522766
theta: 1.51989984512
speed: 7.1075258255
id: 0
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: 3.04165673256
y: -12.3840522766
theta: 1.51989984512
speed: 7.1075258255
id: 0
t: 93
xxx after update is x: 2.95635032654
y: -11.5886383057
theta: 1.54459309578
speed: 6.60219860077
id: 0
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.17777777778






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.088888888888889, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.17777777778
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.08888888889
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,4.17777777778,(2.956350326538086, -11.588638305664062, 1.544593095779419),6,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 4.17777777778
self.communication_details == 0
sending RELEASE,0,4.17777777778,(2.956350326538086, -11.588638305664062, 1.544593095779419),6,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: 2.95635032654
y: -11.5886383057
theta: 1.54459309578
speed: 6.60219860077
id: 0
t: 94
xxx after update is x: 3.16585946083
y: -12.3076448441
theta: 1.42019617558
speed: 6.53950881958
id: 0
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.49417247553345145, 0.019612542645737766]
222 self.state_dicts[msg.id][msg.t] is (-3.3099684715270996, 6.42275333404541, 4.495810031890869, 13.610434532165527)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: 3.16585946083
y: -12.3076448441
theta: 1.42019617558
speed: 6.53950881958
id: 0
t: 95
xxx after update is x: 2.87891411781
y: -11.4149065018
theta: 1.52213275433
speed: 6.19136667252
id: 0
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 2.87891411781
y: -11.4149065018
theta: 1.52213275433
speed: 6.19136667252
id: 0
t: 96
xxx after update is x: 3.3004629612
y: -11.0870409012
theta: 1.53799879551
speed: 6.11247682571
id: 0
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:97




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: 3.3004629612
y: -11.0870409012
theta: 1.53799879551
speed: 6.11247682571
id: 0
t: 97
xxx after update is x: 3.50600600243
y: -11.2307567596
theta: 1.57720267773
speed: 5.82795095444
id: 0
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.2541751072263934, 0.03480571818714969]
222 self.state_dicts[msg.id][msg.t] is (-3.2996623516082764, 4.591315746307373, 4.689241409301758, 14.080836296081543)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.50600600243
y: -11.2307567596
theta: 1.57720267773
speed: 5.82795095444
id: 0
t: 98
xxx after update is x: 3.20032501221
y: -10.5302562714
theta: 1.76092398167
speed: 5.55745220184
id: 0
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:99




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: 3.20032501221
y: -10.5302562714
theta: 1.76092398167
speed: 5.55745220184
id: 0
t: 99
xxx after update is x: 3.35875344276
y: -9.79572963715
theta: 1.62236332893
speed: 5.00158262253
id: 0
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: 3.35875344276
y: -9.79572963715
theta: 1.62236332893
speed: 5.00158262253
id: 0
t: 100
xxx after update is x: 3.08779144287
y: -10.2425394058
theta: 1.49145960808
speed: 4.97595691681
id: 0
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.35113665827824136, 0.001230860719909624]
222 self.state_dicts[msg.id][msg.t] is (-3.46041202545166, 2.373293161392212, 4.8798699378967285, 13.650548934936523)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 4.48888888889

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.488888888888889, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.48888888889,(3.0877914428710938, -10.242539405822754, 1.491459608078003),4,1,3.28888888889,0,left
!!!!change state to get
GET,0,4.48888888889,(3.0877914428710938, -10.242539405822754, 1.491459608078003),4,1,3.28888888889,0,left
maneu[msg.t] is (2.8789141178131104, -11.41490650177002, 1.5221327543258667, 6.191366672515869)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:97


xxx before update is x: -3.34567713737
y: 5.66496706009
theta: 4.68134069443
speed: 13.5918769836
id: 1
t: 96
xxx after update is x: -3.51581478119
y: 5.60681629181
theta: 4.62640047073
speed: 13.9938049316
id: 1
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: -3.51581478119
y: 5.60681629181
theta: 4.62640047073
speed: 13.9938049316
id: 1
t: 97
xxx after update is x: -3.29966235161
y: 4.59131574631
theta: 4.6892414093
speed: 14.0808362961
id: 1
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.29966235161
y: 4.59131574631
theta: 4.6892414093
speed: 14.0808362961
id: 1
t: 98
xxx after update is x: -3.26528525352
y: 3.90644955635
theta: 4.80078029633
speed: 13.8064174652
id: 1
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:99


aaaaaa
aaaaaabbbbb
risk is [0.5116841660014401, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2003250122070312, -10.530256271362305, 1.760923981666565, 5.557452201843262)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: -3.26528525352
y: 3.90644955635
theta: 4.80078029633
speed: 13.8064174652
id: 1
t: 99
xxx after update is x: -3.49362421036
y: 2.73965358734
theta: 4.61424255371
speed: 14.0779209137
id: 1
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: -3.49362421036
y: 2.73965358734
theta: 4.61424255371
speed: 14.0779209137
id: 1
t: 100
xxx after update is x: -3.46041202545
y: 2.37329316139
theta: 4.8798699379
speed: 13.6505489349
id: 1
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.48888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.48888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '4.48888888889', 'IntendedCourse': 'left', 'Position': ['3.0877914428710938', ' -10.242539405822754', ' 1.491459608078003'], 'TagID': '0', 'Type': 'GET', 'Velocity': '4'}
car 1 received GET,0,4.48888888889,(3.0877914428710938, -10.242539405822754, 1.491459608078003),4,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.19950617284
sender travel direction is:  north
sender earliest entering time is:  0.729459562184
sender last entering time is:  2.19950617284
sender last leaving time is:  4.57280442926
my entering time is:  0.19950617284
my leaving time is:  0.913938836015
i have left the intersection:  False
sender enters just im about to leave
time is  -0.184479273831
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, not conlicted
maneuver_negotiatir.py message_processing,!!dd342 change status to GRANT
self.grantID is 0
GRANT,1,4.48888888889,(-3.4194388389587402, 6.9564971923828125, 4.5474395751953125),13,1,0,0
aaaaaa
aaaaaabbbbb
risk is [0.4695133005513359, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0877914428710938, -10.242539405822754, 1.491459608078003, 4.975956916809082)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: -3.46041202545
y: 2.37329316139
theta: 4.8798699379
speed: 13.6505489349
id: 1
t: 101
xxx after update is x: -3.64258527756
y: 2.35754036903
theta: 4.69643211365
speed: 13.6516075134
id: 1
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
added car with id 0 to grantlist. current grantlist:  {0: [9.266666666666666, 'left']}
maneuver_negotiatir.py start the update_agent_message
current clock is 4.53333333333
self.communication_details == 0
sending GRANT,1,4.48888888889,(-3.4194388389587402, 6.9564971923828125, 4.5474395751953125),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
current clock is 4.53333333333




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.53333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: -3.64258527756
y: 2.35754036903
theta: 4.69643211365
speed: 13.6516075134
id: 1
t: 102
xxx after update is x: -3.40016126633
y: 1.31406056881
theta: 4.57318973541
speed: 13.9965677261
id: 1
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: -3.40016126633
y: 1.31406056881
theta: 4.57318973541
speed: 13.9965677261
id: 1
t: 103
xxx after update is x: -3.17187047005
y: 0.947767794132
theta: 4.76546621323
speed: 13.7022838593
id: 1
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.87108048924023, 0.9998421305780093]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.469468593597412, -9.295169830322266, 1ver_negotiatir.py start the update_agent_message
current clock is 4.48888888889
self.communication_details == 0
sending GET,0,4.48888888889,(3.0877914428710938, -10.242539405822754, 1.491459608078003),4,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.48888888889






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: 3.08779144287
y: -10.2425394058
theta: 1.49145960808
speed: 4.97595691681
id: 0
t: 101
xxx after update is x: 3.27755737305
y: -10.234995842
theta: 1.6260638237
speed: 4.97703409195
id: 0
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 4.53333333333




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 4.53333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GRANT, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '4.48888888889', 'Position': ['(-3.4194388389587402', ' 6.9564971923828125', ' 4.5474395751953125)'], 'Type': 'GRANT'}
car 0 received GRANT,1,4.48888888889,(-3.4194388389587402, 6.9564971923828125, 4.5474395751953125),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.488888888888889, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [4.488888888888889, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: 3.27755737305
y: -10.234995842
theta: 1.6260638237
speed: 4.97703409195
id: 0
t: 102
xxx after update is x: 3.4256067276
y: -9.72786903381
theta: 1.6222755909
speed: 4.42454528809
id: 0
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: 3.4256067276
y: -9.72786903381
theta: 1.6222755909
speed: 4.42454528809
id: 0
t: 103
xxx after update is x: 3.4694685936
y: -9.29516983032
theta: 1.55950391293
speed: 4.56657886505
id: 0
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.34003615214596156, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.171870470046997, 0.9477677941322327, 4.765466213226318, 13.70228385925293)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish t.5595039129257202, 4.5665788650512695)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.17187047005
y: 0.947767794132
theta: 4.76546621323
speed: 13.7022838593
id: 1
t: 104
xxx after update is x: -3.61992049217
y: 0.157046541572
theta: 4.6671500206
speed: 13.5315599442
id: 1
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:105




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: -3.61992049217
y: 0.157046541572
theta: 4.6671500206
speed: 13.5315599442
id: 1
t: 105
xxx after update is x: -3.14075994492
y: -0.558229327202
theta: 4.74483156204
speed: 13.7015581131
id: 1
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.8448074000307794, 0.4895999999999979]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.3097188472747803, -9.100393295288086, 1.6637390851974487, 4.0545196533203125)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: -3.14075994492
y: -0.558229327202
theta: 4.74483156204
speed: 13.7015581131
id: 1
t: 106
xxx after update is x: -2.93694281578
y: -1.59098887444
theta: 4.7137389183
speed: 13.6950588226
id: 1
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: -2.93694281578
y: -1.59098887444
theta: 4.7137389183
speed: 13.6950588226
id: 1
t: 107
xxx after update is x: -2.99359607697
y: -1.75924324989
theta: 4.66992902756
speed: 13.4872751236
id: 1
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: -2.99359607697
y: -1.75924324989
theta: 4.66992902756
speed: 13.4872751236
id: 1
t: 108
xxx after update is x: -3.25832414627
y: -2.04540514946
theta: 4.58897352219
speed: 13.7280893326
id: 1
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.9128085171076915, 0.5151999999999983]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.319611072540283, -8.128915786743164, 1.5001578330993652, 2.9797518253326416)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < selhe n times spin:105

xxx before update is x: 3.4694685936
y: -9.29516983032
theta: 1.55950391293
speed: 4.56657886505
id: 0
t: 104
xxx after update is x: 3.52510666847
y: -9.79839324951
theta: 1.45847845078
speed: 3.98940706253
id: 0
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: 3.52510666847
y: -9.79839324951
theta: 1.45847845078
speed: 3.98940706253
id: 0
t: 105
xxx after update is x: 3.30971884727
y: -9.10039329529
theta: 1.6637390852
speed: 4.05451965332
id: 0
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: 3.30971884727
y: -9.10039329529
theta: 1.6637390852
speed: 4.05451965332
id: 0
t: 106
xxx after update is x: 3.11155533791
y: -9.30727005005
theta: 1.55002474785
speed: 3.7004544735
id: 0
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.260699313006127, 9.516543726080145e-19]
222 self.state_dicts[msg.id][msg.t] is (-2.9369428157806396, -1.5909888744354248, 4.713738918304443, 13.695058822631836)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: 3.11155533791
y: -9.30727005005
theta: 1.55002474785
speed: 3.7004544735
id: 0
t: 107
xxx after update is x: 3.84658718109
y: -8.64304637909
theta: 1.5510263443
speed: 2.98591637611
id: 0
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: 3.84658718109
y: -8.64304637909
theta: 1.5510263443
speed: 2.98591637611
id: 0
t: 108
xxx after update is x: 3.31961107254
y: -8.12891578674
theta: 1.5001578331
speed: 2.97975182533
id: 0
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.84444444444






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.844444444444444, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.84444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.84444444444
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
deny not in message
maneuver_negotiatir.py in the domaneuver function - start
added car with id 0 to grantlist. current grantlist:  {0: [9.622222222222222, 'left']}
Doing maneuver
maneuver_negotiatir.py finish the do maneuver function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:110


xxx before update is x: 3.31961107254
y: -8.12891578674
theta: 1.5001578331
speed: f.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:110


xxx before update is x: -3.25832414627
y: -2.04540514946
theta: 4.58897352219
speed: 13.7280893326
id: 1
t: 109
xxx after update is x: -3.6060295105
y: -2.52491855621
theta: 4.67933034897
speed: 13.5513591766
id: 1
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.88888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.6060295105
y: -2.52491855621
theta: 4.67933034897
speed: 13.5513591766
id: 1
t: 110
xxx after update is x: -3.5776758194
y: -3.23884820938
theta: 4.77730226517
speed: 13.795498848
id: 1
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:111


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.8768587115947055, 0.48639999999999795]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.558953046798706, -7.7652788162231445, 1.5403727293014526, 3.2203738689422607)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.5776758194
y: -3.23884820938
theta: 4.77730226517
speed: 13.795498848
id: 1
t: 111
xxx after update is x: -3.24962067604
y: -3.96222567558
theta: 4.81437635422
speed: 13.4166927338
id: 1
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:112




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:113


xxx before update is x: -3.24962067604
y: -3.96222567558
theta: 4.81437635422
speed: 13.4166927338
id: 1
t: 112
xxx after update is x: -2.94733572006
y: -4.66928482056
theta: 4.8392829895
speed: 13.8114509583
id: 1
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: -2.94733572006
y: -4.66928482056
theta: 4.8392829895
speed: 13.8114509583
id: 1
t: 113
xxx after update is x: -3.24108934402
y: -5.07260894775
theta: 4.54756689072
speed: 13.8515691757
id: 1
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.27676379583213545, 0.5119999999999982]
222 self.state_dicts[msg.id][msg.t] is (3.2269980907440186, -7.58474063873291, 1.5318663120269775, 4.1962971687316895)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii2.97975182533
id: 0
t: 109
xxx after update is x: 3.09723925591
y: -7.65179824829
theta: 1.37844765186
speed: 3.10882568359
id: 0
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:111


xxx before update is x: 3.09723925591
y: -7.65179824829
theta: 1.37844765186
speed: 3.10882568359
id: 0
t: 110
xxx after update is x: 3.5589530468
y: -7.76527881622
theta: 1.5403727293
speed: 3.22037386894
id: 0
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.4285341114079977, 0.7593548661656078]
222 self.state_dicts[msg.id][msg.t] is (-3.5776758193969727, -3.2388482093811035, 4.777302265167236, 13.795498847961426)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.5589530468
y: -7.76527881622
theta: 1.5403727293
speed: 3.22037386894
id: 0
t: 111
xxx after update is x: 3.1177380085
y: -7.94329214096
theta: 1.55249118805
speed: 3.71531367302
id: 0
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:112




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:113


xxx before update is x: 3.1177380085
y: -7.94329214096
theta: 1.55249118805
speed: 3.71531367302
id: 0
t: 112
xxx after update is x: 2.92823243141
y: -7.96467351913
theta: 1.654692173
speed: 3.56782770157
id: 0
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.6670930090381993, 0.9999999999999997]
222 self.state_dicts[msg.id][msg.t] is (-2.947335720062256, -4.669284820556641, 4.839282989501953, 13.811450958251953)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: 2.92823243141
y: -7.96467351913
theta: 1.654692173
speed: 3.56782770157
id: 0
t: 113
xxx after update is x: 3.22699809074
y: -7.58474063873
theta: 1.53186631203
speed: 4.19629716873
id: 0
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:115


xxx before update is x: 3.22699809074
y: -7.58474063873
theta: 1.53186631203
speed: 4.19629716873
id: 0
t: 114
xxx after update is x: 3.0315515995
y: -7.30724811554
theta: 1.67474472523
speed: 4.47760629654
id: 0
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: 3.0315515995
y: -7.30724811554
theta: 1.67474472523
speed: 4.47760629654
id: 0
t: 115
xxx after updatiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:115


xxx before update is x: -3.24108934402
y: -5.07260894775
theta: 4.54756689072
speed: 13.8515691757
id: 1
t: 114
xxx after update is x: -3.24077796936
y: -5.99834251404
theta: 4.92188358307
speed: 13.7981147766
id: 1
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.24077796936
y: -5.99834251404
theta: 4.92188358307
speed: 13.7981147766
id: 1
t: 115
xxx after update is x: -3.03179383278
y: -6.90791749954
theta: 4.55309009552
speed: 13.8864002228
id: 1
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:116


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [8.242910583379933e-07, 0.479999999999998]
222 self.state_dicts[msg.id][msg.t] is (3.094449043273926, -7.866593360900879, 1.591993808746338, 4.755179405212402)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: -3.03179383278
y: -6.90791749954
theta: 4.55309009552
speed: 13.8864002228
id: 1
t: 116
xxx after update is x: -3.41765832901
y: -6.90621709824
theta: 4.95636844635
speed: 13.7538976669
id: 1
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.2






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: -3.41765832901
y: -6.90621709824
theta: 4.95636844635
speed: 13.7538976669
id: 1
t: 117
xxx after update is x: -3.30367302895
y: -8.57566642761
theta: 4.73933458328
speed: 13.7343482971
id: 1
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: -3.30367302895
y: -8.57566642761
theta: 4.73933458328
speed: 13.7343482971
id: 1
t: 118
xxx after update is x: -2.40781450272
y: -8.25559520721
theta: 4.55776262283
speed: 14.3204650879
id: 1
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [2.6900557147549034e-23, 0.4895999999999979]
222 self.state_dicts[msg.id][msg.t] is (3.2695796489715576, -6.834775924682617, 1.6585029363632202, 5.736846923828125)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
se is x: 3.09444904327
y: -7.8665933609
theta: 1.59199380875
speed: 4.75517940521
id: 0
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.03366593160600361, 1.0000000000000002]
222 self.state_dicts[msg.id][msg.t] is (-3.0317938327789307, -6.907917499542236, 4.5530900955200195, 13.88640022277832)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: 3.09444904327
y: -7.8665933609
theta: 1.59199380875
speed: 4.75517940521
id: 0
t: 116
xxx after update is x: 3.30013728142
y: -7.67196178436
theta: 1.47735786438
speed: 4.90310907364
id: 0
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.2






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: 3.30013728142
y: -7.67196178436
theta: 1.47735786438
speed: 4.90310907364
id: 0
t: 117
xxx after update is x: 3.52181196213
y: -6.91147994995
theta: 1.63168811798
speed: 5.28905534744
id: 0
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: 3.52181196213
y: -6.91147994995
theta: 1.63168811798
speed: 5.28905534744
id: 0
t: 118
xxx after update is x: 3.26957964897
y: -6.83477592468
theta: 1.65850293636
speed: 5.73684692383
id: 0
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [6.117600366668922e-13, 0.66773945448033]
222 self.state_dicts[msg.id][msg.t] is (-2.4078145027160645, -8.255595207214355, 4.557762622833252, 14.320465087890625)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:120


xxx before update is x: 3.26957964897
y: -6.83477592468
theta: 1.65850293636
speed: 5.73684692383
id: 0
t: 119
xxx after update is x: 2.79173636436
y: -7.15169525146
theta: 1.71133363247
speed: 5.7766699791
id: 0
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:121


xxx before update is x: 2.79173636436
y: -7.15169525146
theta: 1.71133363247
speed: 5.7766699791
id: 0
t: 120
xxx after update is x: 3.20102310181
y: -5.88025188446
theta: 1.68370461464
speed: 6.08758449554
id: 0
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [2.1896060849434725e-11, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.8820316791534424, -9.440805435180664, 4.651586055755615, 13.897234916687012)
if we have all measurements for a certain time-stamp perform risk estimation
self.ender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:120


xxx before update is x: -2.40781450272
y: -8.25559520721
theta: 4.55776262283
speed: 14.3204650879
id: 1
t: 119
xxx after update is x: -3.53513383865
y: -8.52574920654
theta: 4.61220598221
speed: 13.6135072708
id: 1
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:121


xxx before update is x: -3.53513383865
y: -8.52574920654
theta: 4.61220598221
speed: 13.6135072708
id: 1
t: 120
xxx after update is x: -3.88203167915
y: -9.44080543518
theta: 4.65158605576
speed: 13.8972349167
id: 1
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [9.617183029064034e-28, 0.4927999999999979]
222 self.state_dicts[msg.id][msg.t] is (3.2010231018066406, -5.880251884460449, 1.6837046146392822, 6.087584495544434)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: -3.88203167915
y: -9.44080543518
theta: 4.65158605576
speed: 13.8972349167
id: 1
t: 121
xxx after update is x: -3.29610776901
y: -10.6257171631
theta: 4.56384944916
speed: 13.894659996
id: 1
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: -3.29610776901
y: -10.6257171631
theta: 4.56384944916
speed: 13.894659996
id: 1
t: 122
xxx after update is x: -3.21056365967
y: -11.1045207977
theta: 4.75088167191
speed: 14.0440216064
id: 1
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [1.5349483499143494e-207, 0.5087999999999981]
222 self.state_dicts[msg.id][msg.t] is (3.2811429500579834, -5.875757217407227, 1.7403885126113892, 6.319886207580566)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: -3.21056365967
y: -11.1045207977
theta: 4.75088167191
speed: 14.0440216064
id: 1
t: 123
xxx after update is x: -3.41070151329
y: -11.6828975677
theta: 4.54114532471
speed: 13.9955320358
id: 1
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:125


xxx before update is x: -3.41070151329
y: -11.6828975677
theta: 4.54114532471
speed: 13.9955320358
id: 1
t: 124
xxx after update is xfm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 3.20102310181
y: -5.88025188446
theta: 1.68370461464
speed: 6.08758449554
id: 0
t: 121
xxx after update is x: 3.35807681084
y: -6.05608892441
theta: 1.85067331791
speed: 6.18639421463
id: 0
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:122




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: 3.35807681084
y: -6.05608892441
theta: 1.85067331791
speed: 6.18639421463
id: 0
t: 122
xxx after update is x: 3.28114295006
y: -5.87575721741
theta: 1.74038851261
speed: 6.31988620758
id: 0
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [1.5742827026715513e-207, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2105636596679688, -11.104520797729492, 4.750881671905518, 14.044021606445312)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: 3.28114295006
y: -5.87575721741
theta: 1.74038851261
speed: 6.31988620758
id: 0
t: 123
xxx after update is x: 3.50196695328
y: -5.21474552155
theta: 1.61034321785
speed: 6.93650341034
id: 0
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.51111111111






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:125


xxx before update is x: 3.50196695328
y: -5.21474552155
theta: 1.61034321785
speed: 6.93650341034
id: 0
t: 124
xxx after update is x: 3.24849438667
y: -4.87926101685
theta: 1.60226523876
speed: 7.18572807312
id: 0
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: 3.24849438667
y: -4.87926101685
theta: 1.60226523876
speed: 7.18572807312
id: 0
t: 125
xxx after update is x: 3.25784158707
y: -5.2459654808
theta: 1.73837983608
speed: 6.9528503418
id: 0
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [2.470972673833627e-223, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.152372360229492, -12.86579418182373, 4.56170129776001, 13.971612930297852)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: 3.25784158707
y: -5.2459654808
theta: 1.73837983608
speed: 6.952: -3.06729006767
y: -11.6889591217
theta: 4.73225831985
speed: 13.9102487564
id: 1
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [2.500199859437099e-223, 0.5183999999999984]
222 self.state_dicts[msg.id][msg.t] is (3.2484943866729736, -4.879261016845703, 1.6022652387619019, 7.185728073120117)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.55555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: -3.06729006767
y: -11.6889591217
theta: 4.73225831985
speed: 13.9102487564
id: 1
t: 125
xxx after update is x: -3.15237236023
y: -12.8657941818
theta: 4.56170129776
speed: 13.9716129303
id: 1
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: -3.15237236023
y: -12.8657941818
theta: 4.56170129776
speed: 13.9716129303
id: 1
t: 126
xxx after update is x: -3.11005949974
y: -13.1008472443
theta: 4.78096103668
speed: 14.0105686188
id: 1
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [3.648612184001899e-296, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (3.25203013420105, -4.873319625854492, 1.840021014213562, 7.512084007263184)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: -3.11005949974
y: -13.1008472443
theta: 4.78096103668
speed: 14.0105686188
id: 1
t: 127
xxx after update is x: -2.74432969093
y: -14.2494888306
theta: 4.85168743134
speed: 13.9110174179
id: 1
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:129


xxx before update is x: -2.74432969093
y: -14.2494888306
theta: 4.85168743134
speed: 13.9110174179
id: 1
t: 128
xxx after update is x: -3.23086190224
y: -14.6630544662
theta: 4.57543754578
speed: 13.8335447311
id: 1
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4639999999999981]
222 self.state_dicts[msg.id][msg.t] is (3.112306833267212, -4.5799336433410645, 1.9103620052337646, 7.959996700286865)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii8503418
id: 0
t: 126
xxx after update is x: 3.2520301342
y: -4.87331962585
theta: 1.84002101421
speed: 7.51208400726
id: 0
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: 3.2520301342
y: -4.87331962585
theta: 1.84002101421
speed: 7.51208400726
id: 0
t: 127
xxx after update is x: 2.89931797981
y: -3.91859126091
theta: 1.86418485641
speed: 7.70030260086
id: 0
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [1.674133462245846e-274, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.7443296909332275, -14.249488830566406, 4.851687431335449, 13.911017417907715)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:129


xxx before update is x: 2.89931797981
y: -3.91859126091
theta: 1.86418485641
speed: 7.70030260086
id: 0
t: 128
xxx after update is x: 3.11230683327
y: -4.57993364334
theta: 1.91036200523
speed: 7.95999670029
id: 0
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: 3.11230683327
y: -4.57993364334
theta: 1.91036200523
speed: 7.95999670029
id: 0
t: 129
xxx after update is x: 3.29900097847
y: -3.5515563488
theta: 1.78294110298
speed: 8.39165210724
id: 0
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.8443784713745117, -15.442750930786133, 4.645690441131592, 13.939940452575684)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:131


xxx before update is x: 3.29900097847
y: -3.5515563488
theta: 1.78294110298
speed: 8.39165210724
id: 0
t: 130
xxx after update is x: 2.10544967651
y: -3.05383706093
theta: 1.85767269135
speed: 8.43566036224
id: 0
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: 2.10544967651
y: -3.05383706093
theta: 1.85767269135
speed: 8.43566036224
id: 0
t: 131
xxx after update is x: 2.56784677505
y: -2.77206778526
theta: 2.07429361343
speed: 8.90124416351
id: 0
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.86666666667






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spiniiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: -3.23086190224
y: -14.6630544662
theta: 4.57543754578
speed: 13.8335447311
id: 1
t: 129
xxx after update is x: -2.84437847137
y: -15.4427509308
theta: 4.64569044113
speed: 13.9399404526
id: 1
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:131


xxx before update is x: -2.84437847137
y: -15.4427509308
theta: 4.64569044113
speed: 13.9399404526
id: 1
t: 130
xxx after update is x: -2.81835365295
y: -15.9390106201
theta: 4.63333129883
speed: 14.1016645432
id: 1
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5247999999999986]
222 self.state_dicts[msg.id][msg.t] is (2.105449676513672, -3.0538370609283447, 1.8576726913452148, 8.435660362243652)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: -2.81835365295
y: -15.9390106201
theta: 4.63333129883
speed: 14.1016645432
id: 1
t: 131
xxx after update is x: -3.39347982407
y: -16.3836898804
theta: 4.68981838226
speed: 14.2102651596
id: 1
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:133


xxx before update is x: -3.39347982407
y: -16.3836898804
theta: 4.68981838226
speed: 14.2102651596
id: 1
t: 132
xxx after update is x: -2.99555492401
y: -17.3459148407
theta: 4.66388225555
speed: 13.8332777023
id: 1
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.91111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.503999999999998]
222 self.state_dicts[msg.id][msg.t] is (2.0649449825286865, -2.351309299468994, 2.1737709045410156, 8.847847938537598)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: -2.99555492401
y: -17.3459148407
theta: 4.66388225555
speed: 13.8332777023
id: 1
t: 133
xxx after update is x: -2.68212914467
y: -18.113243103
theta: 4.66890525818
speed: 13.9748277664
id: 1
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmm function, finish the n times spin:133

xxx before update is x: 2.56784677505
y: -2.77206778526
theta: 2.07429361343
speed: 8.90124416351
id: 0
t: 132
xxx after update is x: 2.06494498253
y: -2.35130929947
theta: 2.17377090454
speed: 8.84784793854
id: 0
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion

aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.9955549240112305, -17.345914840698242, 4.663882255554199, 13.833277702331543)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: 2.06494498253
y: -2.35130929947
theta: 2.17377090454
speed: 8.84784793854
id: 0
t: 133
xxx after update is x: 2.44031476974
y: -2.09746479988
theta: 2.28332018852
speed: 9.80942440033
id: 0
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:135


xxx before update is x: 2.44031476974
y: -2.09746479988
theta: 2.28332018852
speed: 9.80942440033
id: 0
t: 134
xxx after update is x: 2.17121243477
y: -2.07973575592
theta: 2.0942440033
speed: 9.51031589508
id: 0
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0747482776641846, -18.024057388305664, 4.727112293243408, 13.9090576171875)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: 2.17121243477
y: -2.07973575592
theta: 2.0942440033
speed: 9.51031589508
id: 0
t: 135
xxx after update is x: 2.0346827507
y: -1.63658475876
theta: 2.21325659752
speed: 9.99109077454
id: 0
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:137


xxx before update is x: 2.0346827507
y: -1.63658475876
theta: 2.21325659752
speed: 9.99109077454
id: 0
t: 136
xxx after update is x: 1.6663043499
y: -1.11382555962
theta: 2.28223633766
speed: 9.93504905701
id: 0
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: 1.6663043499
y: -1.11382555962
theta: 2.28223633766
speed: 9.93504905701
id: 0
t: 137
xxx after update is x: 1.2970854044
y: -0.403288602829
theta: 2.27696418762
speed: 10.2334737778
id: 0
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.295605421066284, -20.032039642333984, 4.890754699707031, 14.034173965454102)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py updatmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.68212914467
y: -18.113243103
theta: 4.66890525818
speed: 13.9748277664
id: 1
t: 134
xxx after update is x: -3.07474827766
y: -18.0240573883
theta: 4.72711229324
speed: 13.9090576172
id: 1
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:135


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5199999999999985]
222 self.state_dicts[msg.id][msg.t] is (2.1712124347686768, -2.07973575592041, 2.0942440032958984, 9.510315895080566)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: -3.07474827766
y: -18.0240573883
theta: 4.72711229324
speed: 13.9090576172
id: 1
t: 135
xxx after update is x: -3.70942974091
y: -19.5039787292
theta: 4.76704216003
speed: 13.8718271255
id: 1
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (2.0346827507019043, -1.636584758758545, 2.213256597518921, 9.991090774536133)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:137


xxx before update is x: -3.70942974091
y: -19.5039787292
theta: 4.76704216003
speed: 13.8718271255
id: 1
t: 136
xxx after update is x: -3.1511824131
y: -18.9797668457
theta: 4.59117507935
speed: 13.9133195877
id: 1
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: -3.1511824131
y: -18.9797668457
theta: 4.59117507935
speed: 13.9133195877
id: 1
t: 137
xxx after update is x: -3.29560542107
y: -20.0320396423
theta: 4.89075469971
speed: 14.0341739655
id: 1
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5087999999999981]
222 self.state_dicts[msg.id][msg.t] is (1.2970854043960571, -0.4032886028289795, 2.2769641876220703, 10.233473777770996)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:139


xxx before update is x: -3.29560542107
y: -20.0320396423
theta: 4.89075469971
speed: 14.0341739655
id: 1
t: 138
xxx after update is x: -2.95411229134
y: -20.5921001434
theta: 4.47998714447
speed: 13.9722623825
id: 1
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
!!! change status from grant to normal
current clock is 6.17777777778
!!!te function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:139


xxx before update is x: 1.2970854044
y: -0.403288602829
theta: 2.27696418762
speed: 10.2334737778
id: 0
t: 138
xxx after update is x: 0.660690665245
y: -0.0656256899238
theta: 2.19170594215
speed: 10.3012456894
id: 0
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: 0.660690665245
y: -0.0656256899238
theta: 2.19170594215
speed: 10.3012456894
id: 0
t: 139
xxx after update is x: 0.504289329052
y: -0.180999442935
theta: 2.43362593651
speed: 10.7235527039
id: 0
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.22222222222






self.maneuver_requested left
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.695969820022583, -21.950700759887695, 4.6768903732299805, 13.80042839050293)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: 0.504289329052
y: -0.180999442935
theta: 2.43362593651
speed: 10.7235527039
id: 0
t: 140
xxx after update is x: 0.242523670197
y: 0.0350684374571
theta: 2.49746513367
speed: 10.7616949081
id: 0
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: 0.242523670197
y: 0.0350684374571
theta: 2.49746513367
speed: 10.7616949081
id: 0
t: 141
xxx after update is x: -0.285354822874
y: 0.768730700016
theta: 2.64092183113
speed: 11.3215646744
id: 0
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.016781806945801, -22.3198184967041, 4.741330623626709, 13.763482093811035)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: -0.285354822874
y: 0.768730700016
theta: 2.64092183113
speed: 11.3215646744
id: 0
t: 142
xxx after update is x: -0.600686371326
y: 0.863497257233
theta: 2.4805700779
speed: 11.4399433136
id: 0
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: -0.600686371326
y: 0.863497257233
theta: 2.4805700779
speed: 11.4399433136
id: 0
t: 143
xxx after update is x: -1.51226866245
y: 1.41824781895
theta: 2.38410615921
speed: 11.4883937836
id: 0
t:hreading.Timer
tgarnt done


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: -2.95411229134
y: -20.5921001434
theta: 4.47998714447
speed: 13.9722623825
id: 1
t: 139
xxx after update is x: -3.69596982002
y: -21.9507007599
theta: 4.67689037323
speed: 13.8004283905
id: 1
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.479999999999998]
222 self.state_dicts[msg.id][msg.t] is (0.5042893290519714, -0.18099944293498993, 2.4336259365081787, 10.723552703857422)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.22222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: -3.69596982002
y: -21.9507007599
theta: 4.67689037323
speed: 13.8004283905
id: 1
t: 140
xxx after update is x: -3.25916242599
y: -21.8024291992
theta: 4.79242372513
speed: 14.1327886581
id: 1
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: -3.25916242599
y: -21.8024291992
theta: 4.79242372513
speed: 14.1327886581
id: 1
t: 141
xxx after update is x: -3.01678180695
y: -22.3198184967
theta: 4.74133062363
speed: 13.7634820938
id: 1
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.481599999999998]
222 self.state_dicts[msg.id][msg.t] is (-0.2853548228740692, 0.7687307000160217, 2.6409218311309814, 11.321564674377441)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: -3.01678180695
y: -22.3198184967
theta: 4.74133062363
speed: 13.7634820938
id: 1
t: 142
xxx after update is x: -3.6532022953
y: -22.9246387482
theta: 4.76996898651
speed: 13.8023719788
id: 1
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.6532022953
y: -22.9246387482
theta: 4.76996898651
speed: 13.8023719788
id: 1
t: 143
xxx after update is x: -3.05433559418
y: -23.8302059174
theta: 4.72409009933
speed: 14.2395401001
id: 1
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:144


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.481599999999998]
222 self.state_dicts[msg.id][msg.t] is (-1.5122686624526978, 1.4182478189468384, 2.384106159210205, 11.488393783569336)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: -3.05433559418
y: -23.8302059174
theta: 4.72409009933
speed: 14.2395401001
id: 1
t: 144
xxx after update is x: -3.09118485451
y: -24.7867774963
theta: 4.84675598145
speed: 14.1174163818
id: 1
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:146


xxx before update is x: -3.09118485451
y: -24.7867774963
theta: 4.84675598145
speed: 14.1174163818
id: 1
t: 145
xxx after update is x: -3.43211102486
y: -24.6443271637
theta: 4.64783573151
speed: 14.2411079407
id: 1
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5423999999999991]
222 self.state_dicts[msg.id][msg.t] is (-2.0211808681488037, 1.983121395111084, 2.8334245681762695, 11.803947448730469)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: -3.43211102486
y: -24.6443271637
theta: 4.64783573151
speed: 14.2411079407
id: 1
t: 146
xxx after update is x: -3.82487511635
y: -25.9226856232
theta: 4.82374858856
speed: 14.036315918
id: 1
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: -3.82487511635
y: -25.9226856232
theta: 4.82374858856
speed: 14.036315918
id: 1
t: 147
xxx after update is x: -2.87553954124
y: -26.1072540283
theta: 4.64379835129
speed: 14.0640058517
id: 1
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.57777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-2.768158435821533, 2.3511810302734375, 2.8611655235290527, 12.46041202545166)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: -2.87553954124
y: -26.1072540283
theta: 4.6437 144
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: -1.51226866245
y: 1.41824781895
theta: 2.38410615921
speed: 11.4883937836
id: 0
t: 144
xxx after update is x: -1.54802012444
y: 1.38591814041
theta: 2.59944915771
speed: 11.4540634155
id: 0
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0911848545074463, -24.78677749633789, 4.8467559814453125, 14.117416381835938)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:146


xxx before update is x: -1.54802012444
y: 1.38591814041
theta: 2.59944915771
speed: 11.4540634155
id: 0
t: 145
xxx after update is x: -2.02118086815
y: 1.98312139511
theta: 2.83342456818
speed: 11.8039474487
id: 0
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: -2.02118086815
y: 1.98312139511
theta: 2.83342456818
speed: 11.8039474487
id: 0
t: 146
xxx after update is x: -2.15388345718
y: 1.91178631783
theta: 2.61494374275
speed: 12.1321849823
id: 0
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.8248751163482666, -25.922685623168945, 4.823748588562012, 14.03631591796875)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: -2.15388345718
y: 1.91178631783
theta: 2.61494374275
speed: 12.1321849823
id: 0
t: 147
xxx after update is x: -2.76815843582
y: 2.35118103027
theta: 2.86116552353
speed: 12.4604120255
id: 0
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.57777777778






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: -2.76815843582
y: 2.35118103027
theta: 2.86116552353
speed: 12.4604120255
id: 0
t: 148
xxx after update is x: -3.39918136597
y: 2.213940382
theta: 2.68786978722
speed: 12.3544082642
id: 0
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: -3.39918136597
y: 2.213940382
theta: 2.68786978722
speed: 12.3544082642
id: 0
t9835129
speed: 14.0640058517
id: 1
t: 148
xxx after update is x: -2.97617721558
y: -26.8684253693
theta: 4.61672735214
speed: 13.5572404861
id: 1
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: -2.97617721558
y: -26.8684253693
theta: 4.61672735214
speed: 13.5572404861
id: 1
t: 149
xxx after update is x: -3.51419210434
y: -27.3971614838
theta: 4.66445970535
speed: 13.6107339859
id: 1
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: -3.51419210434
y: -27.3971614838
theta: 4.66445970535
speed: 13.6107339859
id: 1
t: 150
xxx after update is x: -3.43673419952
y: -28.0326080322
theta: 4.71825027466
speed: 13.8932313919
id: 1
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4895999999999979]
222 self.state_dicts[msg.id][msg.t] is (-4.339274883270264, 2.5301942825317383, 2.9260451793670654, 13.19518756866455)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
tgarnt done


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:152


xxx before update is x: -3.43673419952
y: -28.0326080322
theta: 4.71825027466
speed: 13.8932313919
id: 1
t: 151
xxx after update is x: -3.01027321815
y: -28.995847702
theta: 4.69182348251
speed: 13.9465255737
id: 1
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:153


xxx before update is x: -3.01027321815
y: -28.995847702
theta: 4.69182348251
speed: 13.9465255737
id: 1
t: 152
xxx after update is x: -2.96979141235
y: -29.4485530853
theta: 4.66976594925
speed: 13.8126649857
id: 1
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 0.5423999999999991]
222 self.state_dicts[msg.id][msg.t] is (-5.928508281707764, 3.2804787158966064, 2.9151535034179688, 13.231009483337402)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:154


xxx before update is x: -2.96979141235
y: -29.4485530853
theta: 4.66976594925
speed: 13.8126649857
id: 1
t: 153
xxx after update is x: -3.25539493561
y: -29.9210357666
theta: 4.61207532883
speed: 14.1793737411
id: 1
t: 154
maneuver_negotiatir.py finish the u: 149
xxx after update is x: -3.09636211395
y: 2.77456927299
theta: 2.86892724037
speed: 12.9805421829
id: 0
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5141921043395996, -27.39716148376465, 4.664459705352783, 13.610733985900879)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: -3.09636211395
y: 2.77456927299
theta: 2.86892724037
speed: 12.9805421829
id: 0
t: 150
xxx after update is x: -4.33927488327
y: 2.53019428253
theta: 2.92604517937
speed: 13.1951875687
id: 0
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:152


xxx before update is x: -4.33927488327
y: 2.53019428253
theta: 2.92604517937
speed: 13.1951875687
id: 0
t: 151
xxx after update is x: -5.06389331818
y: 3.23189806938
theta: 2.69841384888
speed: 13.3607139587
id: 0
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0102732181549072, -28.995847702026367, 4.691823482513428, 13.946525573730469)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:153


xxx before update is x: -5.06389331818
y: 3.23189806938
theta: 2.69841384888
speed: 13.3607139587
id: 0
t: 152
xxx after update is x: -5.92850828171
y: 3.2804787159
theta: 2.91515350342
speed: 13.2310094833
id: 0
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:154


xxx before update is x: -5.92850828171
y: 3.2804787159
theta: 2.91515350342
speed: 13.2310094833
id: 0
t: 153
xxx after update is x: -6.6098856926
y: 3.69061756134
theta: 2.83954024315
speed: 13.362452507
id: 0
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.25539493560791, -29.921035766601562, 4.612075328826904, 14.179373741149902)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:155


xxx before update is x: -6.6098856926
y: 3.69061756134
theta: 2.83954024315
speed: 13.362452507
id: 0
t: 154
xxx after update is x: -6.4568104744
y: 3.03545999527
theta: 3.1183013916
speed: 13.8198051453
id: 0
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.88888888889






self.maneuver_requested left
RELEASE,0,6.88888888889,(-6.456810474395752, 3.0354599952697754, 3.1183pdate agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.481599999999998]
222 self.state_dicts[msg.id][msg.t] is (-6.6098856925964355, 3.690617561340332, 2.8395402431488037, 13.362452507019043)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:155


xxx before update is x: -3.25539493561
y: -29.9210357666
theta: 4.61207532883
speed: 14.1793737411
id: 1
t: 154
xxx after update is x: -3.05326724052
y: -30.4366283417
theta: 4.58801651001
speed: 14.1423530579
id: 1
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 6.88888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 6.88888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '6.88888888889', 'Position': ['(-6.456810474395752', ' 3.0354599952697754', ' 3.1183013916015625)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,6.88888888889,(-6.456810474395752, 3.0354599952697754, 3.1183013916015625),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: -3.05326724052
y: -30.4366283417
theta: 4.58801651001
speed: 14.1423530579
id: 1
t: 155
xxx after update is x: -3.13693070412
y: -31.6947040558
theta: 4.77772712708
speed: 13.7986593246
id: 1
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.93333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-7.863499641418457, 3.0579452514648438, 3.2049856185913086, 14.064153671264648)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: -3.13693070412
y: -31.6947040558
theta: 4.77772712708
speed: 13.7986593246
id: 1
t: 156
xxx after update is x: -2.93631100655
y: -31.703666687
theta: 4.72365760803
speed: 13.9056062698
id: 1
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.93631100655
y: -31.703666687
theta: 4.72365760803
speed: 13.9056062698
id: 1
t: 157
xxx after update is x: -3.01508307457
y: -32.810344696
theta: 4.97675275803
speed: 13.7062606812
id: 1
t: 158
maneuver_negotiatir.py finish the update agent state from 013916015625),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 6.88888888889
self.communication_details == 0
sending RELEASE,0,6.88888888889,(-6.456810474395752, 3.0354599952697754, 3.1183013916015625),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: -6.4568104744
y: 3.03545999527
theta: 3.1183013916
speed: 13.8198051453
id: 0
t: 155
xxx after update is x: -7.86349964142
y: 3.05794525146
theta: 3.20498561859
speed: 14.0641536713
id: 0
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: -7.86349964142
y: 3.05794525146
theta: 3.20498561859
speed: 14.0641536713
id: 0
t: 156
xxx after update is x: -7.90113735199
y: 3.77873921394
theta: 3.21396303177
speed: 13.6662168503
id: 0
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.9363110065460205, -31.70366668701172, 4.723657608032227, 13.905606269836426)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: -7.90113735199
y: 3.77873921394
theta: 3.21396303177
speed: 13.6662168503
id: 0
t: 157
xxx after update is x: -8.29516983032
y: 3.3330655098
theta: 3.2093102932
speed: 13.663061142
id: 0
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:159


xxx before update is x: -8.29516983032
y: 3.3330655098
theta: 3.2093102932
speed: 13.663061142
id: 0
t: 158
xxx after update is x: -9.07316493988
y: 3.54477190971
theta: 3.12719702721
speed: 13.8429832458
id: 0
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:160


xxx before update is x: -9.07316493988
y: 3.54477190971
theta: 3.12719702721
speed: 13.8429832458
id: 0
t: 159
xxx after update is x: -9.38481521606
y: 2.98908615112
theta: 3.09551763535
speed: 14.1371250153
id: 0
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0805249214172363, -34.00621032714844, 4.766141891479492, 13.908661842346191)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:161


xxx before updros funtion
leave the update function 
in spin function, finish the n times spin:158


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48479999999999795]
222 self.state_dicts[msg.id][msg.t] is (-8.295169830322266, 3.3330655097961426, 3.209310293197632, 13.663061141967773)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:159


xxx before update is x: -3.01508307457
y: -32.810344696
theta: 4.97675275803
speed: 13.7062606812
id: 1
t: 158
xxx after update is x: -3.14210581779
y: -32.6656417847
theta: 4.57406139374
speed: 13.9731588364
id: 1
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:160


xxx before update is x: -3.14210581779
y: -32.6656417847
theta: 4.57406139374
speed: 13.9731588364
id: 1
t: 159
xxx after update is x: -3.08052492142
y: -34.0062103271
theta: 4.76614189148
speed: 13.9086618423
id: 1
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5135999999999983]
222 self.state_dicts[msg.id][msg.t] is (-9.384815216064453, 2.989086151123047, 3.095517635345459, 14.137125015258789)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: -3.08052492142
y: -34.0062103271
theta: 4.76614189148
speed: 13.9086618423
id: 1
t: 160
xxx after update is x: -3.35661101341
y: -34.1931877136
theta: 4.69585704803
speed: 13.6986923218
id: 1
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: -3.35661101341
y: -34.1931877136
theta: 4.69585704803
speed: 13.6986923218
id: 1
t: 161
xxx after update is x: -3.02852654457
y: -34.8350715637
theta: 4.74504375458
speed: 13.587843895
id: 1
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:163


Received -->>: 
current clock is 7.2




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 7.2
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '7.24444444444', 'Position': ['(-11.434311866760254', ' 3.52478ate is x: -9.38481521606
y: 2.98908615112
theta: 3.09551763535
speed: 14.1371250153
id: 0
t: 160
xxx after update is x: -10.5084590912
y: 3.32587742805
theta: 2.95132613182
speed: 14.2509870529
id: 0
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: -10.5084590912
y: 3.32587742805
theta: 2.95132613182
speed: 14.2509870529
id: 0
t: 161
xxx after update is x: -10.3851413727
y: 3.71336483955
theta: 3.19325184822
speed: 13.7779159546
id: 0
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.028526544570923, -34.8350715637207, 4.745043754577637, 13.587843894958496)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:163


xxx before update is x: -10.3851413727
y: 3.71336483955
theta: 3.19325184822
speed: 13.7779159546
id: 0
t: 162
xxx after update is x: -11.4343118668
y: 3.52478122711
theta: 3.25023508072
speed: 13.688375473
id: 0
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.24444444444






self.maneuver_requested left
RELEASE,0,7.24444444444,(-11.434311866760254, 3.5247812271118164, 3.250235080718994),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.24444444444
self.communication_details == 0
sending RELEASE,0,7.24444444444,(-11.434311866760254, 3.5247812271118164, 3.250235080718994),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: -11.4343118668
y: 3.52478122711
theta: 3.25023508072
speed: 13.688375473
id: 0
t: 163
xxx after update is x: -11.6776094437
y: 2.98365139961
theta: 3.16974568367
speed: 13.4650907516
id: 0
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0104904174804688, -35.69358825683594, 4.863933563232422, 14.029946327209473)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:165


xxx before update is x: -11.6776094437
y: 2.98365139961
theta: 3.16974568367
speed: 13.4650907516
id: 0
t: 164
xxx after update is x: -12.9323596954
y: 3.71370315552
theta: 3.32931733131
speed: 13.7845745087
id: 0
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:166


xxx before update is x: -12.9323596954
y: 3.71370315552
theta: 3.3293173313112271118164', ' 3.250235080718994)'], 'Type': 'RELEASE'}xxx before update is x: -3.02852654457
y: -34.8350715637
theta: 4.74504375458
speed: 13.587843895
id: 1
t: 162
xxx after update is x: -3.49988913536
y: -35.6556282043
theta: 4.71425867081
speed: 13.7191905975
id: 1
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion

car 1 received RELEASE,0,7.24444444444,(-11.434311866760254, 3.5247812271118164, 3.250235080718994),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




aaaaaa
aaaaaabbbbb
risk is [0.0, 0.502399999999998]
222 self.state_dicts[msg.id][msg.t] is (-11.434311866760254, 3.5247812271118164, 3.250235080718994, 13.688375473022461)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.24444444444






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: -3.49988913536
y: -35.6556282043
theta: 4.71425867081
speed: 13.7191905975
id: 1
t: 163
xxx after update is x: -3.01049041748
y: -35.6935882568
theta: 4.86393356323
speed: 14.0299463272
id: 1
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:165


xxx before update is x: -3.01049041748
y: -35.6935882568
theta: 4.86393356323
speed: 14.0299463272
id: 1
t: 164
xxx after update is x: -3.32882022858
y: -36.918510437
theta: 4.75483322144
speed: 13.8101844788
id: 1
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5247999999999986]
222 self.state_dicts[msg.id][msg.t] is (-12.93235969543457, 3.713703155517578, 3.329317331314087, 13.784574508666992)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:166


xxx before update is x: -3.32882022858
y: -36.918510437
theta: 4.75483322144
speed: 13.8101844788
id: 1
t: 165
xxx after update is x: -3.4211101532
y: -37.2913551331
theta: 4.68954944611
speed: 13.8742427826
id: 1
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: -3.4211101532
y: -37.2913551331
theta: 4.68954944611
speed: 13.8742427826
id: 1
t: 166
xxx after update is x: -2.66057300568
y: -38.2476348877
theta: 4.76738119125
speed: 13.7490968704
id: 1
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-14.057777404785156, 3.39492
speed: 13.7845745087
id: 0
t: 165
xxx after update is x: -13.1230010986
y: 3.59591841698
theta: 3.1069047451
speed: 13.7612028122
id: 0
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.421110153198242, -37.29135513305664, 4.689549446105957, 13.874242782592773)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: -13.1230010986
y: 3.59591841698
theta: 3.1069047451
speed: 13.7612028122
id: 0
t: 166
xxx after update is x: -14.0577774048
y: 3.39492297173
theta: 3.06457901001
speed: 13.8999862671
id: 0
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: -14.0577774048
y: 3.39492297173
theta: 3.06457901001
speed: 13.8999862671
id: 0
t: 167
xxx after update is x: -14.4976291656
y: 3.42539548874
theta: 3.15650177002
speed: 13.6376924515
id: 0
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: -14.4976291656
y: 3.42539548874
theta: 3.15650177002
speed: 13.6376924515
id: 0
t: 168
xxx after update is x: -15.2358350754
y: 3.57732725143
theta: 3.26940965652
speed: 13.9174880981
id: 0
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.220179319381714, -39.04427719116211, 4.638443946838379, 14.558477401733398)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: -15.2358350754
y: 3.57732725143
theta: 3.26940965652
speed: 13.9174880981
id: 0
t: 169
xxx after update is x: -15.9701728821
y: 3.58564162254
theta: 3.29465293884
speed: 13.7799987793
id: 0
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.55555555556






self.maneuver_requested left
RELEASE,0,7.55555555556,(-15.970172882080078, 3.585641622543335, 3.2946529388427734),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.55555555556
self.communication_details == 0
sending RELEASE,0,7.55555555556,(-15.970172882080078, 3.585641622543335, 3.2946529388427734),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:171


xxx before update is x: -15.9701728821
y: 3.58564162254
theta: 3.29465293884
speed: 13.7799987793
id: 0
t: 170
xxx after update is x: -16.3979148865
y: 3.77798128128
theta: 3.08904361725
speed: 14.1005315781
2971725464, 3.0645790100097656, 13.899986267089844)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.66057300568
y: -38.2476348877
theta: 4.76738119125
speed: 13.7490968704
id: 1
t: 167
xxx after update is x: -3.65946173668
y: -39.1202468872
theta: 4.67188358307
speed: 14.1124038696
id: 1
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:168




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: -3.65946173668
y: -39.1202468872
theta: 4.67188358307
speed: 14.1124038696
id: 1
t: 168
xxx after update is x: -3.22017931938
y: -39.0442771912
theta: 4.63844394684
speed: 14.5584774017
id: 1
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (-15.235835075378418, 3.577327251434326, 3.269409656524658, 13.917488098144531)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.22017931938
y: -39.0442771912
theta: 4.63844394684
speed: 14.5584774017
id: 1
t: 169
xxx after update is x: -3.5528190136
y: -40.3455848694
theta: 4.8221745491
speed: 14.1411170959
id: 1
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:170




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:171


Received -->>: 
current clock is 7.55555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 7.55555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '7.55555555556', 'Position': ['(-15.970172882080078', ' 3.585641622543335', ' 3.2946529388427734)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,7.55555555556,(-15.970172882080078, 3.585641622543335, 3.2946529388427734),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




xxx before update is x: -3.5528190136
y: -40.3455848694
theta: 4.8221745491
speed: 14.1411170959
id: 1
t: 170
xxx after update is x: -3.43403697014
y: -40.1954154968
theta: 4.73061752319
speed: 13.5952615738
id: 1
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.6






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4895999999999979]
222 self.state_dicts[msg.id][msg.t] is (-16.39791488647461, 3.7779812812805176, 3.089043617248535, 14.100531578063965)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: -3.43403697014
y: -40.1954154968
theta: 4.73061752319
speed: 13.5952615738
id: 1
t: 171
xxx after update is x: -3.69201827049
y: -41.0142250061
theta: 4.6660695076
speed: 13.9442958832
id: 1
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:173


xxx before update is x: -3.69201827049
y: -41.0142250061
theta: 4.6660695076
speed: 13.9442958832
id: 1
t: 172
xxx after update is x: -3.12447834015
y: -42.1179695129
theta: 4.80124282837
speed: 14.2242946625
id: 1
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-17.757951736450195, 3.470543146133423, 3.309791088104248, 13.808947563171387)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: -3.12447834015
y: -42.1179695129
theta: 4.80124282837
speed: 14.2242946625
id: 1
t: 173
xxx after update is x: -3.29750990868
y: -42.2687797546
theta: 4.49108600616
speed: 13.9164419174
id: 1
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: -3.29750990868
y: -42.2687797546
theta: 4.49108600616
speed: 13.9164419174
id: 1
t: 174
xxx after update is x: -2.92585659027
y: -43.1554946899
theta: 4.59606981277
speed: 14.1015453339
id: 1
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: -2.92585659027
y: -43.1554946899
theta: 4.59606981277
speed: 14.1015453339
id: 1
t: 175
xxx after update is x: -3.72890257835
y: -43.5983963013
theta: 4.74356460571
speed: 13.8724822998
id: 1
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (-19.919147491455078, 3.3189735412597656, 3.177859306335449, 14.453125)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function id: 0
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.43403697013855, -40.19541549682617, 4.730617523193359, 13.595261573791504)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: -16.3979148865
y: 3.77798128128
theta: 3.08904361725
speed: 14.1005315781
id: 0
t: 171
xxx after update is x: -17.0280628204
y: 3.43094468117
theta: 3.02079820633
speed: 13.7299318314
id: 0
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:173


xxx before update is x: -17.0280628204
y: 3.43094468117
theta: 3.02079820633
speed: 13.7299318314
id: 0
t: 172
xxx after update is x: -17.7579517365
y: 3.47054314613
theta: 3.3097910881
speed: 13.8089475632
id: 0
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: -17.7579517365
y: 3.47054314613
theta: 3.3097910881
speed: 13.8089475632
id: 0
t: 173
xxx after update is x: -17.9667568207
y: 2.79501795769
theta: 3.1531586647
speed: 13.7233915329
id: 0
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2975099086761475, -42.26877975463867, 4.491086006164551, 13.916441917419434)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: -17.9667568207
y: 2.79501795769
theta: 3.1531586647
speed: 13.7233915329
id: 0
t: 174
xxx after update is x: -19.1583518982
y: 3.37487649918
theta: 2.9894194603
speed: 13.8447084427
id: 0
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: -19.1583518982
y: 3.37487649918
theta: 2.9894194603
speed: 13.8447084427
id: 0
t: 175
xxx after update is x: -19.9191474915
y: 3.31897354126
theta: 3.17785930634
speed: 14.453125
id: 0
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.728902578353882, -43.59839630126953, 4.743564605712891, 13.872482299804688)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, fi
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:177


xxx before update is x: -3.72890257835
y: -43.5983963013
theta: 4.74356460571
speed: 13.8724822998
id: 1
t: 176
xxx after update is x: -3.20418429375
y: -44.0046844482
theta: 4.79093551636
speed: 14.1718816757
id: 1
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion
removed car with id 0 from grantlist. currentgrantlist: {}
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-20.065298080444336, 3.38789439201355, 3.251828908920288, 13.963443756103516)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: -3.20418429375
y: -44.0046844482
theta: 4.79093551636
speed: 14.1718816757
id: 1
t: 177
xxx after update is x: -3.13801836967
y: -44.519443512
theta: 4.86611747742
speed: 13.7367486954
id: 1
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 7.91111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 7.91111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '7.91111111111', 'Position': ['(-20.831695556640625', ' 3.1453495025634766', ' 3.2083218097686768)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,7.91111111111,(-20.831695556640625, 3.1453495025634766, 3.2083218097686768),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: -3.13801836967
y: -44.519443512
theta: 4.86611747742
speed: 13.7367486954
id: 1
t: 178
xxx after update is x: -3.28203487396
y: -45.6458587646
theta: 4.66830778122
speed: 13.8912258148
id: 1
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.95555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5295999999999987]
222 self.state_dicts[msg.id][msg.t] is (-21.339868545532227, 2.8725216388702393, 3.054654598236084, 13.555153846740723)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:180


xxx before update is x: -3.28203487396
y: -45.6458587646
theta: 4.66830778122
speed: 13.8912258148
id: 1
t: 179
xxx after update is x: -3.46262478828
y: -46.8556251526
theta: 4.67624378204
speed: 14.075758934
id: 1
t: 180
maneuver_negotiatir.py finnish the n times spin:177

xxx before update is x: -19.9191474915
y: 3.31897354126
theta: 3.17785930634
speed: 14.453125
id: 0
t: 176
xxx after update is x: -20.0652980804
y: 3.38789439201
theta: 3.25182890892
speed: 13.9634437561
id: 0
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: -20.0652980804
y: 3.38789439201
theta: 3.25182890892
speed: 13.9634437561
id: 0
t: 177
xxx after update is x: -20.8316955566
y: 3.14534950256
theta: 3.20832180977
speed: 13.9161586761
id: 0
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.91111111111






self.maneuver_requested left
RELEASE,0,7.91111111111,(-20.831695556640625, 3.1453495025634766, 3.2083218097686768),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.91111111111
self.communication_details == 0
sending RELEASE,0,7.91111111111,(-20.831695556640625, 3.1453495025634766, 3.2083218097686768),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: -20.8316955566
y: 3.14534950256
theta: 3.20832180977
speed: 13.9161586761
id: 0
t: 178
xxx after update is x: -21.3398685455
y: 2.87252163887
theta: 3.05465459824
speed: 13.5551538467
id: 0
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2820348739624023, -45.64585876464844, 4.668307781219482, 13.891225814819336)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:180


xxx before update is x: -21.3398685455
y: 2.87252163887
theta: 3.05465459824
speed: 13.5551538467
id: 0
t: 179
xxx after update is x: -22.0227012634
y: 3.21929883957
theta: 3.04259204865
speed: 13.5500621796
id: 0
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:181


xxx before update is x: -22.0227012634
y: 3.21929883957
theta: 3.04259204865
speed: 13.5500621796
id: 0
t: 180
xxx after update is x: -22.3239879608
y: 2.98632860184
theta: 3.14688420296
speed: 13.7062654495
id: 0
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.447432518005371, -46.750492095947266, 4.803177833557129, 14.040132522583008)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:182


xxx before update is x: -22.3239ish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.46262478828
y: -46.8556251526
theta: 4.67624378204
speed: 14.075758934
id: 1
t: 180
xxx after update is x: -3.44743251801
y: -46.7504920959
theta: 4.80317783356
speed: 14.0401325226
id: 1
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:181


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.475199999999998]
222 self.state_dicts[msg.id][msg.t] is (-22.32398796081543, 2.986328601837158, 3.1468842029571533, 13.706265449523926)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:182


xxx before update is x: -3.44743251801
y: -46.7504920959
theta: 4.80317783356
speed: 14.0401325226
id: 1
t: 181
xxx after update is x: -2.85636353493
y: -47.4421195984
theta: 4.60245513916
speed: 13.9246091843
id: 1
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.85636353493
y: -47.4421195984
theta: 4.60245513916
speed: 13.9246091843
id: 1
t: 182
xxx after update is x: -3.55155491829
y: -48.3446502686
theta: 4.48166131973
speed: 13.8303556442
id: 1
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:183


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48639999999999795]
222 self.state_dicts[msg.id][msg.t] is (-24.173297882080078, 3.2787647247314453, 3.2399215698242188, 13.805006980895996)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: -3.55155491829
y: -48.3446502686
theta: 4.48166131973
speed: 13.8303556442
id: 1
t: 183
xxx after update is x: -2.79229092598
y: -48.8389854431
theta: 4.88768529892
speed: 13.9613199234
id: 1
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:185


xxx before update is x: -2.79229092598
y: -48.8389854431
theta: 4.88768529892
speed: 13.9613199234
id: 1
t: 184
xxx after update is x: -3.46925640106
y: -49.3826751709
theta: 4.84540748596
speed: 13.5527887344
id: 1
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48479999999999795]
222 self.state_dicts[msg.id][msg.t] is (-25.307254791259766, 3.0816328525543213, 3.1786935329437256, 13.901273727416992)
if we have all879608
y: 2.98632860184
theta: 3.14688420296
speed: 13.7062654495
id: 0
t: 181
xxx after update is x: -23.2986564636
y: 3.34533715248
theta: 3.20740270615
speed: 14.1291055679
id: 0
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:183


xxx before update is x: -23.2986564636
y: 3.34533715248
theta: 3.20740270615
speed: 14.1291055679
id: 0
t: 182
xxx after update is x: -24.1732978821
y: 3.27876472473
theta: 3.23992156982
speed: 13.8050069809
id: 0
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5515549182891846, -48.34465026855469, 4.481661319732666, 13.830355644226074)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: -24.1732978821
y: 3.27876472473
theta: 3.23992156982
speed: 13.8050069809
id: 0
t: 183
xxx after update is x: -24.3215751648
y: 2.66703414917
theta: 3.3808567524
speed: 14.0656118393
id: 0
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion
removed car with id 0 from grantlist. currentgrantlist: {}


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:185


xxx before update is x: -24.3215751648
y: 2.66703414917
theta: 3.3808567524
speed: 14.0656118393
id: 0
t: 184
xxx after update is x: -25.3072547913
y: 3.08163285255
theta: 3.17869353294
speed: 13.9012737274
id: 0
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: -25.3072547913
y: 3.08163285255
theta: 3.17869353294
speed: 13.9012737274
id: 0
t: 185
xxx after update is x: -25.6414432526
y: 3.63251638412
theta: 3.338752985
speed: 14.1264820099
id: 0
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.26666666667






self.maneuver_requested left
RELEASE,0,8.26666666667,(-25.641443252563477, 3.632516384124756, 3.3387529850006104),14,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 8.26666666667
self.communication_details == 0
sending RELEASE,0,8.26666666667,(-25.641443252563477, 3.632516384124756, 3.3387529850006104),14,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.7027034759521484, -49.673336029052734, 4.646933078765869, 13.950301170349121)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: -25.641443 measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: -3.46925640106
y: -49.3826751709
theta: 4.84540748596
speed: 13.5527887344
id: 1
t: 185
xxx after update is x: -2.70270347595
y: -49.6733360291
theta: 4.64693307877
speed: 13.9503011703
id: 1
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 8.26666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 8.26666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '8.26666666667', 'Position': ['(-25.641443252563477', ' 3.632516384124756', ' 3.3387529850006104)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,8.26666666667,(-25.641443252563477, 3.632516384124756, 3.3387529850006104),14,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.26666666667






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.70270347595
y: -49.6733360291
theta: 4.64693307877
speed: 13.9503011703
id: 1
t: 186
xxx after update is x: -3.33085346222
y: -50.594997406
theta: 4.80738067627
speed: 13.8753728867
id: 1
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:187


maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4895999999999979]
222 self.state_dicts[msg.id][msg.t] is (-26.1885929107666, 2.939497232437134, 3.093538999557495, 14.292807579040527)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:188


xxx before update is x: -3.33085346222
y: -50.594997406
theta: 4.80738067627
speed: 13.8753728867
id: 1
t: 187
xxx after update is x: -3.41696548462
y: -51.4158096313
theta: 4.90800952911
speed: 14.0562238693
id: 1
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: -3.41696548462
y: -51.4158096313
theta: 4.90800952911
speed: 14.0562238693
id: 1
t: 188
xxx after update is x: -3.45975899696
y: -51.3855361938
theta: 4.71792840958
speed: 13.7965974808
id: 1
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-28.296039581298828, 3.03200364112854, 3.242526
y: 3.63251638412
theta: 3.338752985
speed: 14.1264820099
id: 0
t: 186
xxx after update is x: -26.1885929108
y: 2.93949723244
theta: 3.09353899956
speed: 14.292807579
id: 0
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:188


xxx before update is x: -26.1885929108
y: 2.93949723244
theta: 3.09353899956
speed: 14.292807579
id: 0
t: 187
xxx after update is x: -27.0340919495
y: 2.79779529572
theta: 3.05332565308
speed: 13.8548631668
id: 0
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4169654846191406, -51.415809631347656, 4.9080095291137695, 14.05622386932373)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: -27.0340919495
y: 2.79779529572
theta: 3.05332565308
speed: 13.8548631668
id: 0
t: 188
xxx after update is x: -28.2960395813
y: 3.03200364113
theta: 3.24325084686
speed: 13.6448783875
id: 0
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: -28.2960395813
y: 3.03200364113
theta: 3.24325084686
speed: 13.6448783875
id: 0
t: 189
xxx after update is x: -27.7898139954
y: 2.93710184097
theta: 2.99271202087
speed: 13.8489294052
id: 0
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5575780868530273, -52.091552734375, 4.64320707321167, 13.630269050598145)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -27.7898139954
y: 2.93710184097
theta: 2.99271202087
speed: 13.8489294052
id: 0
t: 190
xxx after update is x: -28.8424549103
y: 3.22307491302
theta: 3.19599246979
speed: 14.2705345154
id: 0
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:192


xxx before update is x: -28.8424549103
y: 3.22307491302
theta: 3.19599246979
speed: 14.2705345154
id: 0
t: 191
xxx after update is x: -30.010641098
y: 2.90871524811
theta: 3.04435706139
speed: 14.0890417099
id: 0
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:193


xxx before update is x: -30.010641098
y: 2.90871524811
theta: 3.04435706139
speed: 14.0890417099
id: 0
t: 192
xxx after update is x: -29.9929163250846862793, 13.644878387451172)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: -3.45975899696
y: -51.3855361938
theta: 4.71792840958
speed: 13.7965974808
id: 1
t: 189
xxx after update is x: -3.55757808685
y: -52.0915527344
theta: 4.64320707321
speed: 13.6302690506
id: 1
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -3.55757808685
y: -52.0915527344
theta: 4.64320707321
speed: 13.6302690506
id: 1
t: 190
xxx after update is x: -3.42245554924
y: -52.3987388611
theta: 4.92630529404
speed: 13.9765691757
id: 1
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5247999999999986]
222 self.state_dicts[msg.id][msg.t] is (-28.84245491027832, 3.2230749130249023, 3.1959924697875977, 14.27053451538086)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:192


xxx before update is x: -3.42245554924
y: -52.3987388611
theta: 4.92630529404
speed: 13.9765691757
id: 1
t: 191
xxx after update is x: -3.27586174011
y: -53.3408279419
theta: 4.69502592087
speed: 13.5685634613
id: 1
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:193


xxx before update is x: -3.27586174011
y: -53.3408279419
theta: 4.69502592087
speed: 13.5685634613
id: 1
t: 192
xxx after update is x: -3.52625870705
y: -54.8880805969
theta: 4.70506763458
speed: 14.227394104
id: 1
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4895999999999979]
222 self.state_dicts[msg.id][msg.t] is (-29.992916107177734, 2.9076054096221924, 3.1808652877807617, 13.954954147338867)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:194


xxx before update is x: -3.52625870705
y: -54.8880805969
theta: 4.70506763458
speed: 14.227394104
id: 1
t: 193
xxx after update is x: -3.38538980484
y: -54.5212631226
theta: 4.73231840134
speed: 14.0838775635
id: 1
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 8.62222222222




maneuver_negotiatir.py message_processing, it's a long code, sta1072
y: 2.90760540962
theta: 3.18086528778
speed: 13.9549541473
id: 0
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.526258707046509, -54.88808059692383, 4.7050676345825195, 14.227394104003906)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:194


xxx before update is x: -29.9929161072
y: 2.90760540962
theta: 3.18086528778
speed: 13.9549541473
id: 0
t: 193
xxx after update is x: -30.1826534271
y: 3.41496801376
theta: 3.1578514576
speed: 13.9875268936
id: 0
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.62222222222






self.maneuver_requested left
RELEASE,0,8.62222222222,(-30.182653427124023, 3.4149680137634277, 3.157851457595825),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 8.62222222222
self.communication_details == 0
sending RELEASE,0,8.62222222222,(-30.182653427124023, 3.4149680137634277, 3.157851457595825),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -30.1826534271
y: 3.41496801376
theta: 3.1578514576
speed: 13.9875268936
id: 0
t: 194
xxx after update is x: -31.6770553589
y: 3.41721010208
theta: 3.12325024605
speed: 13.914888382
id: 0
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:195


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3225581645965576, -55.444515228271484, 4.867466449737549, 13.99630069732666)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:196


xxx before update is x: -31.6770553589
y: 3.41721010208
theta: 3.12325024605
speed: 13.914888382
id: 0
t: 195
xxx after update is x: -32.0987892151
y: 3.05944824219
theta: 3.24612140656
speed: 13.9981307983
id: 0
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -32.0987892151
y: 3.05944824219
theta: 3.24612140656
speed: 13.9981307983
id: 0
t: 196
xxx after update is x: -32.2878036499
y: 3.39946269989
theta: 3.12137556076
speed: 14.161438942
id: 0
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:198


xxx before update is x: -32.2878036499
y: 3.39946269989
theta: 3.12137556076
speed: 14.161438942
id: 0
t: 197
xxx after update is x: -32.9727363586
y: 3.1334540844
theta: 3.03009080887
speed: 13.7220935822
irt...1




current clock is 8.62222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '8.62222222222', 'Position': ['(-30.182653427124023', ' 3.4149680137634277', ' 3.157851457595825)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,8.62222222222,(-30.182653427124023, 3.4149680137634277, 3.157851457595825),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.62222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.38538980484
y: -54.5212631226
theta: 4.73231840134
speed: 14.0838775635
id: 1
t: 194
xxx after update is x: -3.3225581646
y: -55.4445152283
theta: 4.86746644974
speed: 13.9963006973
id: 1
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:195


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48479999999999795]
222 self.state_dicts[msg.id][msg.t] is (-31.67705535888672, 3.417210102081299, 3.1232502460479736, 13.914888381958008)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:196


xxx before update is x: -3.3225581646
y: -55.4445152283
theta: 4.86746644974
speed: 13.9963006973
id: 1
t: 195
xxx after update is x: -3.77019333839
y: -56.4142341614
theta: 4.64438486099
speed: 14.2063407898
id: 1
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -3.77019333839
y: -56.4142341614
theta: 4.64438486099
speed: 14.2063407898
id: 1
t: 196
xxx after update is x: -2.93920183182
y: -56.3484382629
theta: 4.59873437881
speed: 14.127951622
id: 1
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5087999999999981]
222 self.state_dicts[msg.id][msg.t] is (-32.287803649902344, 3.3994626998901367, 3.121375560760498, 14.161438941955566)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:198


xxx before update is x: -2.93920183182
y: -56.3484382629
theta: 4.59873437881
speed: 14.127951622
id: 1
t: 197
xxx after update is x: -3.15690374374
y: -56.9995155334
theta: 4.76470041275
speed: 13.6905260086
id: 1
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:199


xxx before update is x: -3.15690374374
y: -56.9995155334
theta: 4.76470041275
speed: 13.6905260086
id: 1
t: 198
xxx after update is x: -3.52182817459
y: -57.4377861023
theta: 4.67752933502
speed: 13.743973732
id: 1
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-33.82283401489258, 2.732628107070923, 3.1672632694244385, 13.795674324035645)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: -3.52182817459
y: -57.4377861023
theta: 4.67752933502
speed: 13.743973732
id: 1
t: 199
xxx after update is x: -3.69889974594
y: -58.5134887695
theta: 4.8118724823
speed: 14.0375976562
id: 1
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -3.69889974594
y: -58.5134887695
theta: 4.8118724823
speed: 14.0375976562
id: 1
t: 200
xxx after update is x: -2.93926072121
y: -59.1431007385
theta: 4.62994480133
speed: 14.109503746
id: 1
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5087999999999981]
222 self.state_dicts[msg.id][msg.t] is (-34.78342819213867, 3.5418972969055176, 3.053307294845581, 13.730610847473145)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
current clock is 8.93333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 8.93333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '8.93333333333', 'Position': ['(-34.78342819213867', ' 3.5418972969055176', ' 3.053307294845581)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,8.93333333333,(-34.78342819213867, 3.5418972969055176, 3.053307294845581),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:202


xxx before update is x: -2.93926072121
y: -59.1431007385
theta: 4.62994480133
speed: 14.109503746
id: 1
t: 201
xxx after update is x: -3.54497623444
y: -59.2297554016
theta: 4.70826148987
speed: 13.9238100052
id: 1
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.97777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the upd: 0
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1569037437438965, -56.999515533447266, 4.764700412750244, 13.690526008605957)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:199


xxx before update is x: -32.9727363586
y: 3.1334540844
theta: 3.03009080887
speed: 13.7220935822
id: 0
t: 198
xxx after update is x: -33.8228340149
y: 2.73262810707
theta: 3.16726326942
speed: 13.795674324
id: 0
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: -33.8228340149
y: 2.73262810707
theta: 3.16726326942
speed: 13.795674324
id: 0
t: 199
xxx after update is x: -34.6296081543
y: 3.26896739006
theta: 3.00071549416
speed: 13.9414253235
id: 0
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.698899745941162, -58.51348876953125, 4.811872482299805, 14.03759765625)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -34.6296081543
y: 3.26896739006
theta: 3.00071549416
speed: 13.9414253235
id: 0
t: 200
xxx after update is x: -34.7834281921
y: 3.54189729691
theta: 3.05330729485
speed: 13.7306108475
id: 0
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.93333333333






self.maneuver_requested left
RELEASE,0,8.93333333333,(-34.78342819213867, 3.5418972969055176, 3.053307294845581),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 8.93333333333
self.communication_details == 0
sending RELEASE,0,8.93333333333,(-34.78342819213867, 3.5418972969055176, 3.053307294845581),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:202


xxx before update is x: -34.7834281921
y: 3.54189729691
theta: 3.05330729485
speed: 13.7306108475
id: 0
t: 201
xxx after update is x: -35.5690498352
y: 3.30299162865
theta: 3.09322929382
speed: 13.9300804138
id: 0
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.544976234436035, -59.22975540161133, 4.708261489868164, 13.923810005187988)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:20date function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:203


xxx before update is x: -3.54497623444
y: -59.2297554016
theta: 4.70826148987
speed: 13.9238100052
id: 1
t: 202
xxx after update is x: -3.15995526314
y: -59.9399185181
theta: 4.68038034439
speed: 13.942401886
id: 1
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5103999999999982]
222 self.state_dicts[msg.id][msg.t] is (-35.952362060546875, 3.313417434692383, 3.2994987964630127, 14.264569282531738)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:204


xxx before update is x: -3.15995526314
y: -59.9399185181
theta: 4.68038034439
speed: 13.942401886
id: 1
t: 203
xxx after update is x: -3.07292127609
y: -60.8440437317
theta: 4.57088279724
speed: 14.0975151062
id: 1
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:205


xxx before update is x: -3.07292127609
y: -60.8440437317
theta: 4.57088279724
speed: 14.0975151062
id: 1
t: 204
xxx after update is x: -3.03728508949
y: -62.1014823914
theta: 4.85390949249
speed: 13.6806936264
id: 1
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5103999999999982]
222 self.state_dicts[msg.id][msg.t] is (-37.58734130859375, 3.3687567710876465, 3.3134889602661133, 13.789904594421387)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:206


xxx before update is x: -3.03728508949
y: -62.1014823914
theta: 4.85390949249
speed: 13.6806936264
id: 1
t: 205
xxx after update is x: -3.45561671257
y: -62.2180023193
theta: 4.63125944138
speed: 14.146115303
id: 1
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:207


xxx before update is x: -3.45561671257
y: -62.2180023193
theta: 4.63125944138
speed: 14.146115303
id: 1
t: 206
xxx after update is x: -2.80022859573
y: -62.855381012
theta: 4.69688606262
speed: 14.2394838333
id: 1
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5103999999999982]
222 self.state_dicts[msg.id][msg.t] is (-38.7744026184082, 3.1488490104675293, 3.167264461517334, 13.797868728637695)
if we have all measurements for a certain time-stamp perform risk estimation
self.f3

xxx before update is x: -35.5690498352
y: 3.30299162865
theta: 3.09322929382
speed: 13.9300804138
id: 0
t: 202
xxx after update is x: -35.9523620605
y: 3.31341743469
theta: 3.29949879646
speed: 14.2645692825
id: 0
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:204


xxx before update is x: -35.9523620605
y: 3.31341743469
theta: 3.29949879646
speed: 14.2645692825
id: 0
t: 203
xxx after update is x: -37.2052078247
y: 2.4696688652
theta: 3.13400292397
speed: 13.5280122757
id: 0
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:205


xxx before update is x: -37.2052078247
y: 2.4696688652
theta: 3.13400292397
speed: 13.5280122757
id: 0
t: 204
xxx after update is x: -37.5873413086
y: 3.36875677109
theta: 3.31348896027
speed: 13.7899045944
id: 0
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.037285089492798, -62.10148239135742, 4.853909492492676, 13.680693626403809)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:206


xxx before update is x: -37.5873413086
y: 3.36875677109
theta: 3.31348896027
speed: 13.7899045944
id: 0
t: 205
xxx after update is x: -38.7620773315
y: 2.94067716599
theta: 3.20146274567
speed: 14.0258569717
id: 0
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:207


xxx before update is x: -38.7620773315
y: 2.94067716599
theta: 3.20146274567
speed: 14.0258569717
id: 0
t: 206
xxx after update is x: -38.7744026184
y: 3.14884901047
theta: 3.16726446152
speed: 13.7978687286
id: 0
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:208


xxx before update is x: -38.7744026184
y: 3.14884901047
theta: 3.16726446152
speed: 13.7978687286
id: 0
t: 207
xxx after update is x: -39.4849472046
y: 2.90504145622
theta: 3.1735868454
speed: 14.1538190842
id: 0
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2754268646240234, -63.363826751708984, 4.729137420654297, 13.968427658081055)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -39.4849472046
y: 2.90504145622
theta: 3.1735868454
speed: 14.1538190842
id: m:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:208


xxx before update is x: -2.80022859573
y: -62.855381012
theta: 4.69688606262
speed: 14.2394838333
id: 1
t: 207
xxx after update is x: -3.27542686462
y: -63.3638267517
theta: 4.72913742065
speed: 13.9684276581
id: 1
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48319999999999796]
222 self.state_dicts[msg.id][msg.t] is (-39.484947204589844, 2.905041456222534, 3.173586845397949, 14.15381908416748)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -3.27542686462
y: -63.3638267517
theta: 4.72913742065
speed: 13.9684276581
id: 1
t: 208
xxx after update is x: -3.0503475666
y: -63.87915802
theta: 4.73310565948
speed: 13.9153594971
id: 1
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 9.28888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 9.28888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '9.28888888889', 'Position': ['(-39.79252624511719', ' 2.8103063106536865', ' 3.26037859916687)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,9.28888888889,(-39.79252624511719, 2.8103063106536865, 3.26037859916687),14,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.28888888889






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -3.0503475666
y: -63.87915802
theta: 4.73310565948
speed: 13.9153594971
id: 1
t: 209
xxx after update is x: -3.27566838264
y: -64.3733215332
theta: 4.73427152634
speed: 14.1531295776
id: 1
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5151999999999983]
222 self.state_dicts[msg.id][msg.t] is (-40.303985595703125, 2.619978666305542, 3.2294178009033203, 13.893991470336914)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:211


xxx before update is x: -3.27566838264
y: -64.3733215332
theta: 4.73427152634
speed: 14.1531295776
id: 1
t: 210
xxx after update is x: -3.58232498169
y: -65.2790756226
theta: 4.8710398674
speed: 130
t: 208
xxx after update is x: -39.7925262451
y: 2.81030631065
theta: 3.26037859917
speed: 14.0749797821
id: 0
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.28888888889






self.maneuver_requested left
RELEASE,0,9.28888888889,(-39.79252624511719, 2.8103063106536865, 3.26037859916687),14,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 9.28888888889
self.communication_details == 0
sending RELEASE,0,9.28888888889,(-39.79252624511719, 2.8103063106536865, 3.26037859916687),14,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -39.7925262451
y: 2.81030631065
theta: 3.26037859917
speed: 14.0749797821
id: 0
t: 209
xxx after update is x: -40.3039855957
y: 2.61997866631
theta: 3.2294178009
speed: 13.8939914703
id: 0
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2756683826446533, -64.37332153320312, 4.73427152633667, 14.153129577636719)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:211


xxx before update is x: -40.3039855957
y: 2.61997866631
theta: 3.2294178009
speed: 13.8939914703
id: 0
t: 210
xxx after update is x: -41.7192802429
y: 2.91381311417
theta: 3.15443992615
speed: 13.8986778259
id: 0
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:212


xxx before update is x: -41.7192802429
y: 2.91381311417
theta: 3.15443992615
speed: 13.8986778259
id: 0
t: 211
xxx after update is x: -41.7172317505
y: 3.48379945755
theta: 3.11721539497
speed: 13.3732872009
id: 0
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -41.7172317505
y: 3.48379945755
theta: 3.11721539497
speed: 13.3732872009
id: 0
t: 212
xxx after update is x: -41.9359359741
y: 3.23113298416
theta: 3.0002143383
speed: 13.8374013901
id: 0
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4995195865631104, -66.6549072265625, 4.877500534057617, 13.589540481567383)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:214


xxx before update is x: -41.9359359741
y: 3.23113298416
theta: 3.0002143383
speed: 13.8374013901
id: 0
t: 213
xxx after update is x: -42.974193573
y: 3.45636439323
theta.9539251328
id: 1
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.58232498169
y: -65.2790756226
theta: 4.8710398674
speed: 13.9539251328
id: 1
t: 211
xxx after update is x: -3.03471565247
y: -65.9765777588
theta: 4.71421957016
speed: 13.7044019699
id: 1
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:212


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-41.71723175048828, 3.483799457550049, 3.117215394973755, 13.373287200927734)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -3.03471565247
y: -65.9765777588
theta: 4.71421957016
speed: 13.7044019699
id: 1
t: 212
xxx after update is x: -3.49951958656
y: -66.6549072266
theta: 4.87750053406
speed: 13.5895404816
id: 1
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:214


xxx before update is x: -3.49951958656
y: -66.6549072266
theta: 4.87750053406
speed: 13.5895404816
id: 1
t: 213
xxx after update is x: -3.4328391552
y: -67.1625518799
theta: 4.77936267853
speed: 13.5058193207
id: 1
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48799999999999794]
222 self.state_dicts[msg.id][msg.t] is (-42.97419357299805, 3.456364393234253, 3.278059959411621, 13.802837371826172)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:215


xxx before update is x: -3.4328391552
y: -67.1625518799
theta: 4.77936267853
speed: 13.5058193207
id: 1
t: 214
xxx after update is x: -3.32146954536
y: -68.3818511963
theta: 4.60549592972
speed: 14.14523983
id: 1
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:216


xxx before update is x: -3.32146954536
y: -68.3818511963
theta: 4.60549592972
speed: 14.14523983
id: 1
t: 215
xxx after update is x: -3.22923922539
y: -68.9621200562
theta: 4.75851726532
speed: 13.8216381073
id: 1
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (-44.357696533203125, 3.518249988555908, 2.957951068878: 3.27805995941
speed: 13.8028373718
id: 0
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:215


xxx before update is x: -42.974193573
y: 3.45636439323
theta: 3.27805995941
speed: 13.8028373718
id: 0
t: 214
xxx after update is x: -43.9207496643
y: 2.72717928886
theta: 3.25211048126
speed: 13.9400396347
id: 0
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.32146954536438, -68.38185119628906, 4.605495929718018, 14.14523983001709)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:216


xxx before update is x: -43.9207496643
y: 2.72717928886
theta: 3.25211048126
speed: 13.9400396347
id: 0
t: 215
xxx after update is x: -44.3576965332
y: 3.51824998856
theta: 2.95795106888
speed: 14.1409397125
id: 0
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:217


xxx before update is x: -44.3576965332
y: 3.51824998856
theta: 2.95795106888
speed: 14.1409397125
id: 0
t: 216
xxx after update is x: -44.5229911804
y: 3.17353844643
theta: 3.2806520462
speed: 13.65878582
id: 0
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.64444444444






self.maneuver_requested left
RELEASE,0,9.64444444444,(-44.52299118041992, 3.1735384464263916, 3.2806520462036133),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 9.64444444444
self.communication_details == 0
sending RELEASE,0,9.64444444444,(-44.52299118041992, 3.1735384464263916, 3.2806520462036133),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:218


xxx before update is x: -44.5229911804
y: 3.17353844643
theta: 3.2806520462
speed: 13.65878582
id: 0
t: 217
xxx after update is x: -45.5906867981
y: 3.30376577377
theta: 3.18024945259
speed: 13.7126159668
id: 0
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.854684591293335, -69.29208374023438, 4.647654056549072, 13.917110443115234)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -45.5906867981
y: 3.30376577377
theta: 3.18024945259
speed: 13.7126159668
id: 0
t: 218
xxx after update is x: -46.2163124084
y: 2.65819382668
theta: 3.18320274353
speed: 14.0483636856
id: 0
t: 219
maneuver_negotiatir174, 14.140939712524414)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:217


xxx before update is x: -3.22923922539
y: -68.9621200562
theta: 4.75851726532
speed: 13.8216381073
id: 1
t: 216
xxx after update is x: -3.05916953087
y: -69.0831832886
theta: 4.69024467468
speed: 14.0917358398
id: 1
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 9.64444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 9.64444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '9.64444444444', 'Position': ['(-44.52299118041992', ' 3.1735384464263916', ' 3.2806520462036133)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,9.64444444444,(-44.52299118041992, 3.1735384464263916, 3.2806520462036133),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.64444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:218


xxx before update is x: -3.05916953087
y: -69.0831832886
theta: 4.69024467468
speed: 14.0917358398
id: 1
t: 217
xxx after update is x: -2.85468459129
y: -69.2920837402
theta: 4.64765405655
speed: 13.9171104431
id: 1
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5487999999999993]
222 self.state_dicts[msg.id][msg.t] is (-45.5906867980957, 3.3037657737731934, 3.1802494525909424, 13.712615966796875)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -2.85468459129
y: -69.2920837402
theta: 4.64765405655
speed: 13.9171104431
id: 1
t: 218
xxx after update is x: -3.23981618881
y: -69.9976959229
theta: 4.56265497208
speed: 13.5528011322
id: 1
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.23981618881
y: -69.9976959229
theta: 4.56265497208
speed: 13.5528011322
id: 1
t: 219
xxx after update is x: -3.17532086372
y: -70.6568374634
theta: 4.61126184464
speed: 14.1063213348
id: 1
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:220


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5327999999999988]
222 self.state_dicts[msg.id][msg.t] is (.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:220


xxx before update is x: -46.2163124084
y: 2.65819382668
theta: 3.18320274353
speed: 14.0483636856
id: 0
t: 219
xxx after update is x: -46.6006698608
y: 3.48187494278
theta: 3.29293298721
speed: 13.7534828186
id: 0
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.175320863723755, -70.6568374633789, 4.61126184463501, 14.106321334838867)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -46.6006698608
y: 3.48187494278
theta: 3.29293298721
speed: 13.7534828186
id: 0
t: 220
xxx after update is x: -47.7359733582
y: 3.63034272194
theta: 3.12854886055
speed: 14.1080036163
id: 0
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:222


xxx before update is x: -47.7359733582
y: 3.63034272194
theta: 3.12854886055
speed: 14.1080036163
id: 0
t: 221
xxx after update is x: -48.4067687988
y: 3.47758960724
theta: 3.1011531353
speed: 14.1084489822
id: 0
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3755404949188232, -72.01704406738281, 4.64656400680542, 13.724260330200195)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -48.4067687988
y: 3.47758960724
theta: 3.1011531353
speed: 14.1084489822
id: 0
t: 222
xxx after update is x: -48.4618873596
y: 3.48492741585
theta: 3.30981183052
speed: 13.9689874649
id: 0
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:224


xxx before update is x: -48.4618873596
y: 3.48492741585
theta: 3.30981183052
speed: 13.9689874649
id: 0
t: 223
xxx after update is x: -49.1310577393
y: 3.04700946808
theta: 3.15869688988
speed: 13.6913881302
id: 0
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.95555555556






self.maneuver_requested left
RELEASE,0,9.95555555556,(-49.13105773925781, 3.0470094680786133, 3.1586968898773193),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 9.95555555556
self.communication_details == 0
sending RELEASE,0,9.95555555556,(-49.13105773925781, 3.0470094680786133, 3.1586968898773193),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to th-46.600669860839844, 3.481874942779541, 3.2929329872131348, 13.753482818603516)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -3.17532086372
y: -70.6568374634
theta: 4.61126184464
speed: 14.1063213348
id: 1
t: 220
xxx after update is x: -3.49953627586
y: -71.3590087891
theta: 4.63187122345
speed: 14.0409898758
id: 1
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:222


xxx before update is x: -3.49953627586
y: -71.3590087891
theta: 4.63187122345
speed: 14.0409898758
id: 1
t: 221
xxx after update is x: -3.37554049492
y: -72.0170440674
theta: 4.64656400681
speed: 13.7242603302
id: 1
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (-48.406768798828125, 3.4775896072387695, 3.1011531352996826, 14.10844898223877)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -3.37554049492
y: -72.0170440674
theta: 4.64656400681
speed: 13.7242603302
id: 1
t: 222
xxx after update is x: -3.22621536255
y: -73.2611923218
theta: 4.71668863297
speed: 13.6897354126
id: 1
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:224


xxx before update is x: -3.22621536255
y: -73.2611923218
theta: 4.71668863297
speed: 13.6897354126
id: 1
t: 223
xxx after update is x: -2.63801693916
y: -73.0186386108
theta: 4.6612906456
speed: 13.8674764633
id: 1
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.505599999999998]
222 self.state_dicts[msg.id][msg.t] is (-49.13105773925781, 3.0470094680786133, 3.1586968898773193, 13.691388130187988)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
current clock is 9.95555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 9.95555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '9.95555555556', 'Position': ['(-49.13105773925781', ' 3.0470094680786133', ' 3.1586968898773193)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,9.95555555556,(-49.13105773925781, 3.0470094680786133, 3.1586968898773193),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1





going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo

xxx before update is x: -2.63801693916
y: -73.0186386108
theta: 4.6612906456
speed: 13.8674764633
id: 1
t: 224
xxx after update is x: -3.56925153732
y: -74.1674957275
theta: 4.74172067642
speed: 13.8130865097
id: 1
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:225


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.0






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:226


xxx before update is x: -3.56925153732
y: -74.1674957275
theta: 4.74172067642
speed: 13.8130865097
id: 1
t: 225
xxx after update is x: -3.18525743484
y: -74.6139755249
theta: 4.7020778656
speed: 13.9171113968
id: 1
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.502399999999998]
222 self.state_dicts[msg.id][msg.t] is (-50.53032302856445, 3.2079544067382812, 3.0126709938049316, 14.150545120239258)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -3.18525743484
y: -74.6139755249
theta: 4.7020778656
speed: 13.9171113968
id: 1
t: 226
xxx after update is x: -3.04772591591
y: -75.0771942139
theta: 4.87961387634
speed: 13.4480962753
id: 1
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:228


xxx before update is x: -3.04772591591
y: -75.0771942139
theta: 4.87961387634
speed: 13.4480962753
id: 1
t: 227
xxx after update is x: -3.53328084946
y: -75.5479431152
theta: 4.82962369919
speed: 13.8580341339
id: 1
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5087999999999981]
222 self.state_dicts[msg.id][msg.t] is (-51.946537017822266, 2.6539793014526367, 3.052417278289795, 13.997922897338867)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -3.53328084946
y: -75.5479431152
theta: 4.82962369919
speed: 13.8580341339
id: 1
t: 228
xxx after update is x: -3.21126580238
y: -76.3625259399
theta: 4.63516044617
speed: 14.0251579285
id: 1
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update functe update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -49.1310577393
y: 3.04700946808
theta: 3.15869688988
speed: 13.6913881302
id: 0
t: 224
xxx after update is x: -49.9749183655
y: 3.0908613205
theta: 3.19866061211
speed: 13.8839664459
id: 0
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:225


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.569251537322998, -74.16749572753906, 4.741720676422119, 13.81308650970459)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:226


xxx before update is x: -49.9749183655
y: 3.0908613205
theta: 3.19866061211
speed: 13.8839664459
id: 0
t: 225
xxx after update is x: -50.5303230286
y: 3.20795440674
theta: 3.0126709938
speed: 14.1505451202
id: 0
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -50.5303230286
y: 3.20795440674
theta: 3.0126709938
speed: 14.1505451202
id: 0
t: 226
xxx after update is x: -50.8594207764
y: 3.3316848278
theta: 2.94545650482
speed: 13.9877681732
id: 0
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0477259159088135, -75.07719421386719, 4.879613876342773, 13.44809627532959)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:228


xxx before update is x: -50.8594207764
y: 3.3316848278
theta: 2.94545650482
speed: 13.9877681732
id: 0
t: 227
xxx after update is x: -51.9465370178
y: 2.65397930145
theta: 3.05241727829
speed: 13.9979228973
id: 0
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -51.9465370178
y: 2.65397930145
theta: 3.05241727829
speed: 13.9979228973
id: 0
t: 228
xxx after update is x: -52.387260437
y: 3.15584611893
theta: 2.98470973969
speed: 13.9261455536
id: 0
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -52.387260437
y: 3.15584611893
theta: 2.98470973969
speed: 13.9261455536
id: 0
t: 229
xxx after update is x: -52.850894928
y: 3.56744384766
theta: 3.19201827049
speed: 13.3677415848
id: 0
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.417654275894165, -77.08139038085938, 4.699728965759277, 13ion
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -3.21126580238
y: -76.3625259399
theta: 4.63516044617
speed: 14.0251579285
id: 1
t: 229
xxx after update is x: -3.41765427589
y: -77.0813903809
theta: 4.69972896576
speed: 13.9303026199
id: 1
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (-52.850894927978516, 3.56744384765625, 3.1920182704925537, 13.367741584777832)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:231


xxx before update is x: -3.41765427589
y: -77.0813903809
theta: 4.69972896576
speed: 13.9303026199
id: 1
t: 230
xxx after update is x: -2.90122509003
y: -77.6665725708
theta: 4.88611936569
speed: 14.2015790939
id: 1
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:232


xxx before update is x: -2.90122509003
y: -77.6665725708
theta: 4.88611936569
speed: 14.2015790939
id: 1
t: 231
xxx after update is x: -3.05250501633
y: -77.8021316528
theta: 4.54299068451
speed: 14.1557331085
id: 1
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (-53.967506408691406, 2.687039613723755, 3.0324747562408447, 14.141472816467285)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
current clock is 10.3111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 10.3111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '10.3111111111', 'Position': ['(-53.967506408691406', ' 2.687039613723755', ' 3.0324747562408447)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,10.3111111111,(-53.967506408691406, 2.687039613723755, 3.0324747562408447),14,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.3111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -3.05250501633
y: -77.8021316528
theta: 4.54299068451
speed: 14.1557331085
id: 1
t: 232
xxx after update is x: -2.5707025528
y: -78.719291687
theta: 4.66867637634
speed: 14.2096118927
id: 1
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver f.930302619934082)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:231


xxx before update is x: -52.850894928
y: 3.56744384766
theta: 3.19201827049
speed: 13.3677415848
id: 0
t: 230
xxx after update is x: -53.6870613098
y: 3.02684164047
theta: 3.05806779861
speed: 14.1959733963
id: 0
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:232


xxx before update is x: -53.6870613098
y: 3.02684164047
theta: 3.05806779861
speed: 14.1959733963
id: 0
t: 231
xxx after update is x: -53.9675064087
y: 2.68703961372
theta: 3.03247475624
speed: 14.1414728165
id: 0
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.3111111111






self.maneuver_requested left
RELEASE,0,10.3111111111,(-53.967506408691406, 2.687039613723755, 3.0324747562408447),14,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 10.3111111111
self.communication_details == 0
sending RELEASE,0,10.3111111111,(-53.967506408691406, 2.687039613723755, 3.0324747562408447),14,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0525050163269043, -77.80213165283203, 4.542990684509277, 14.155733108520508)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -53.9675064087
y: 2.68703961372
theta: 3.03247475624
speed: 14.1414728165
id: 0
t: 232
xxx after update is x: -55.0343704224
y: 3.32447695732
theta: 3.11672306061
speed: 13.8214464188
id: 0
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -55.0343704224
y: 3.32447695732
theta: 3.11672306061
speed: 13.8214464188
id: 0
t: 233
xxx after update is x: -55.6050338745
y: 3.44004607201
theta: 3.15863037109
speed: 14.1275892258
id: 0
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -55.6050338745
y: 3.44004607201
theta: 3.15863037109
speed: 14.1275892258
id: 0
t: 234
xxx after update is x: -55.9222221375
y: 2.82001543045
theta: 3.15943908691
speed: 13.6697835922
id: 0
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.591305732727051, -79.77389526367188, 4.560856342315674, 13.77017593383789)
if we have all measurements for a certain tunction update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -2.5707025528
y: -78.719291687
theta: 4.66867637634
speed: 14.2096118927
id: 1
t: 233
xxx after update is x: -3.06890916824
y: -79.8293685913
theta: 4.60746765137
speed: 13.7358064651
id: 1
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.49919999999999787]
222 self.state_dicts[msg.id][msg.t] is (-55.60503387451172, 3.4400460720062256, 3.15863037109375, 14.127589225769043)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -3.06890916824
y: -79.8293685913
theta: 4.60746765137
speed: 13.7358064651
id: 1
t: 234
xxx after update is x: -3.59130573273
y: -79.7738952637
theta: 4.56085634232
speed: 13.7701759338
id: 1
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:236


xxx before update is x: -3.59130573273
y: -79.7738952637
theta: 4.56085634232
speed: 13.7701759338
id: 1
t: 235
xxx after update is x: -3.0131547451
y: -80.4518051147
theta: 4.58067655563
speed: 14.220117569
id: 1
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (-56.769500732421875, 3.290313243865967, 3.1634624004364014, 13.806739807128906)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -3.0131547451
y: -80.4518051147
theta: 4.58067655563
speed: 14.220117569
id: 1
t: 236
xxx after update is x: -3.15027046204
y: -81.4764785767
theta: 4.73150491714
speed: 13.9521341324
id: 1
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -3.15027046204
y: -81.4764785767
theta: 4.73150491714
speed: 13.9521341324
id: 1
t: 237
xxx after update is x: -3.63227343559
y: -81.6302642822
theta: 4.86423254013
speed: 13.9192810059
id: 1
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48479999999999795]
222 self.state_dicts[msg.id][msg.t] is (-57.3991813659668, 3.558340549468994, 3.1601667404174805, 14.353772163391113)
if we have all measurements for a certainime-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:236


xxx before update is x: -55.9222221375
y: 2.82001543045
theta: 3.15943908691
speed: 13.6697835922
id: 0
t: 235
xxx after update is x: -56.7695007324
y: 3.29031324387
theta: 3.16346240044
speed: 13.8067398071
id: 0
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -56.7695007324
y: 3.29031324387
theta: 3.16346240044
speed: 13.8067398071
id: 0
t: 236
xxx after update is x: -57.0968437195
y: 3.70452952385
theta: 3.17124724388
speed: 14.0595369339
id: 0
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.150270462036133, -81.47647857666016, 4.731504917144775, 13.952134132385254)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -57.0968437195
y: 3.70452952385
theta: 3.17124724388
speed: 14.0595369339
id: 0
t: 237
xxx after update is x: -57.399181366
y: 3.55834054947
theta: 3.16016674042
speed: 14.3537721634
id: 0
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:239


xxx before update is x: -57.399181366
y: 3.55834054947
theta: 3.16016674042
speed: 14.3537721634
id: 0
t: 238
xxx after update is x: -58.2250328064
y: 2.72198629379
theta: 2.87892007828
speed: 14.1240386963
id: 0
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.78170108795166, -82.35598754882812, 4.749557018280029, 13.763152122497559)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:240


xxx before update is x: -58.2250328064
y: 2.72198629379
theta: 2.87892007828
speed: 14.1240386963
id: 0
t: 239
xxx after update is x: -58.7105560303
y: 3.56622099876
theta: 3.07750272751
speed: 14.3703012466
id: 0
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.6666666667






self.maneuver_requested left
RELEASE,0,10.6666666667,(-58.71055603027344, 3.566220998764038, 3.077502727508545),14,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 10.6666666667
self.communication_details == 0
sending RELEASE,0,10.6666666667,(-58.71055603027344, 3.566220998764038, 3.077502727508545),14,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the  time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:239


xxx before update is x: -3.63227343559
y: -81.6302642822
theta: 4.86423254013
speed: 13.9192810059
id: 1
t: 238
xxx after update is x: -2.78170108795
y: -82.3559875488
theta: 4.74955701828
speed: 13.7631521225
id: 1
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:240


xxx before update is x: -2.78170108795
y: -82.3559875488
theta: 4.74955701828
speed: 13.7631521225
id: 1
t: 239
xxx after update is x: -3.10839176178
y: -83.3459091187
theta: 4.51514101028
speed: 13.9868745804
id: 1
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 10.6666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 10.6666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '10.6666666667', 'Position': ['(-58.71055603027344', ' 3.566220998764038', ' 3.077502727508545)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,10.6666666667,(-58.71055603027344, 3.566220998764038, 3.077502727508545),14,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48799999999999794]
222 self.state_dicts[msg.id][msg.t] is (-58.71055603027344, 3.566220998764038, 3.077502727508545, 14.370301246643066)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.6666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.10839176178
y: -83.3459091187
theta: 4.51514101028
speed: 13.9868745804
id: 1
t: 240
xxx after update is x: -2.80927634239
y: -83.7324523926
theta: 4.70887517929
speed: 14.0735435486
id: 1
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:241


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -2.80927634239
y: -83.7324523926
theta: 4.70887517929
speed: 14.0735435486
id: 1
t: 241
xxx after update is x: -3.78023123741
y: -83.4160308838
theta: 4.70656776428
speed: 14.0815401077
id: 1
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5183999999999984]
222 self.state_dicts[msg.id][msg.t] is (-60.101036071777344, 3.0140745639801025, 3.0492775440216064, 13.555848sim.py update function maneuver_negotiatir.py in the try maneuver function update -. sfinish

targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:241


xxx before update is x: -58.7105560303
y: 3.56622099876
theta: 3.07750272751
speed: 14.3703012466
id: 0
t: 240
xxx after update is x: -59.6473960876
y: 3.36354756355
theta: 3.00948023796
speed: 14.0879888535
id: 0
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -59.6473960876
y: 3.36354756355
theta: 3.00948023796
speed: 14.0879888535
id: 0
t: 241
xxx after update is x: -60.1010360718
y: 3.01407456398
theta: 3.04927754402
speed: 13.5558481216
id: 0
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.780231237411499, -83.41603088378906, 4.706567764282227, 14.08154010772705)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -60.1010360718
y: 3.01407456398
theta: 3.04927754402
speed: 13.5558481216
id: 0
t: 242
xxx after update is x: -60.2145118713
y: 3.13245868683
theta: 3.22589850426
speed: 13.7579307556
id: 0
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:243




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -60.2145118713
y: 3.13245868683
theta: 3.22589850426
speed: 13.7579307556
id: 0
t: 243
xxx after update is x: -61.1121406555
y: 2.4081492424
theta: 2.92997312546
speed: 13.9754810333
id: 0
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:244




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:245


xxx before update is x: -61.1121406555
y: 2.4081492424
theta: 2.92997312546
speed: 13.9754810333
id: 0
t: 244
xxx after update is x: -61.9508323669
y: 3.24406027794
theta: 3.04733490944
speed: 13.5773077011
id: 0
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.8722712993621826, -86.2669906616211, 4.614233493804932, 13.963509559631348)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:246


xxx before update is x: -61.9508323669
y: 3.24406027794
theta: 3.04733490944
speed: 13.5773077011
id: 0
t: 245
xxx after update is x: -62.4031181335
y: 3.18583893776
theta: 2.85464882851
speed: 13.8832435608
id: 0
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed <121643066)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.78023123741
y: -83.4160308838
theta: 4.70656776428
speed: 14.0815401077
id: 1
t: 242
xxx after update is x: -3.15523099899
y: -85.1990280151
theta: 4.78565311432
speed: 13.9606981277
id: 1
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:243


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:244


xxx before update is x: -3.15523099899
y: -85.1990280151
theta: 4.78565311432
speed: 13.9606981277
id: 1
t: 243
xxx after update is x: -3.37723755836
y: -84.8213653564
theta: 4.90822839737
speed: 14.0511522293
id: 1
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5135999999999983]
222 self.state_dicts[msg.id][msg.t] is (-61.11214065551758, 2.408149242401123, 2.9299731254577637, 13.975481033325195)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:245


xxx before update is x: -3.37723755836
y: -84.8213653564
theta: 4.90822839737
speed: 14.0511522293
id: 1
t: 244
xxx after update is x: -2.87227129936
y: -86.2669906616
theta: 4.6142334938
speed: 13.9635095596
id: 1
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48479999999999795]
222 self.state_dicts[msg.id][msg.t] is (-61.95083236694336, 3.2440602779388428, 3.047334909439087, 13.57730770111084)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:246


xxx before update is x: -2.87227129936
y: -86.2669906616
theta: 4.6142334938
speed: 13.9635095596
id: 1
t: 245
xxx after update is x: -3.31348085403
y: -87.2584457397
theta: 4.74829721451
speed: 14.062792778
id: 1
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -3.31348085403
y: -87.2584457397
theta: 4.74829721451
speed: 14.062792778
id: 1
t: 246
xxx after update is x: -2.88788294792
y: -87.6172103882
theta: 4.68908452988
speed: 13.9065494537
id: 1
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (-63.509239196777344, 3.187664747238159, 3.260544776916504, 14.155110359191895)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -2.88788294792
y: -87.6172103882
theta: 4.68908452988
speed: 13.9065494537
id: 1
t: 247
xxx after update is x: -3.11439776421
y: -88.0071029663
theta: 4.80705213547
speed: 14.2652835846
id: 1
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.0222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 11.0222222222




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 11.0222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '11.0222222222', 'Position': ['(-64.35405731201172', ' 3.2453389167785645', ' 3.1618573665618896)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,11.0222222222,(-64.35405731201172, 3.2453389167785645, 3.1618573665618896),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -3.11439776421
y: -88.0071029663
theta: 4.80705213547
speed: 14.2652835846
id: 1
t: 248
xxx after update is x: -3.04355049133
y: -88.6823654175
theta: 4.62108850479
speed: 14.0031366348
id: 1
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.502399999999998]
222 self.state_dicts[msg.id][msg.t] is (-65.11520385742188, 3.54028582572937, 3.069554328918457, 13.730464935302734)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:250


xxx before update is x: -3.04355049133
y: -88.6823654175
theta: 4.62108850479
speed: 14.0031366348
id: 1
t: 249
xxx after update is x: -3.15584468842
y: -89.1311569214
theta: 4.74650096893
speed: 13.8542013168
id: 1
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:251


xxx before update is x: -3.15584468842
y: -89.1311569214
theta: 4.74650096893
speed: 13.8542013168
id: 1
t: 250
xxx after update is x: -3.02340984344
y: -89.8555374146
theta: 4.5919418335
speed: 14.0317106247
id: 1
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4991999 self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -62.4031181335
y: 3.18583893776
theta: 2.85464882851
speed: 13.8832435608
id: 0
t: 246
xxx after update is x: -63.5092391968
y: 3.18766474724
theta: 3.26054477692
speed: 14.1551103592
id: 0
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.887882947921753, -87.6172103881836, 4.689084529876709, 13.906549453735352)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -63.5092391968
y: 3.18766474724
theta: 3.26054477692
speed: 14.1551103592
id: 0
t: 247
xxx after update is x: -64.354057312
y: 3.24533891678
theta: 3.16185736656
speed: 13.7177381516
id: 0
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.0222222222






self.maneuver_requested left
RELEASE,0,11.0222222222,(-64.35405731201172, 3.2453389167785645, 3.1618573665618896),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 11.0222222222
self.communication_details == 0
sending RELEASE,0,11.0222222222,(-64.35405731201172, 3.2453389167785645, 3.1618573665618896),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -64.354057312
y: 3.24533891678
theta: 3.16185736656
speed: 13.7177381516
id: 0
t: 248
xxx after update is x: -65.1152038574
y: 3.54028582573
theta: 3.06955432892
speed: 13.7304649353
id: 0
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.043550491333008, -88.68236541748047, 4.62108850479126, 14.00313663482666)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:250


xxx before update is x: -65.1152038574
y: 3.54028582573
theta: 3.06955432892
speed: 13.7304649353
id: 0
t: 249
xxx after update is x: -65.1484298706
y: 3.14184212685
theta: 2.95462441444
speed: 14.4068393707
id: 0
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:251


xxx before update is x: -65.1484298706
y: 3.14184212685
theta: 2.95462441444
speed: 14.4068393707
id: 0
t: 250
xxx after update is x: -66.0522842407
y: 2.88813900948
theta: 3.02456641197
speed: 13.9235610962
id: 0
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii9999999787]
222 self.state_dicts[msg.id][msg.t] is (-66.05228424072266, 2.888139009475708, 3.024566411972046, 13.923561096191406)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.02340984344
y: -89.8555374146
theta: 4.5919418335
speed: 14.0317106247
id: 1
t: 251
xxx after update is x: -3.06183815002
y: -89.881652832
theta: 4.89882564545
speed: 13.6586551666
id: 1
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:252


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5135999999999983]
222 self.state_dicts[msg.id][msg.t] is (-66.63194274902344, 2.9603519439697266, 3.1247010231018066, 13.815930366516113)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:253


xxx before update is x: -3.06183815002
y: -89.881652832
theta: 4.89882564545
speed: 13.6586551666
id: 1
t: 252
xxx after update is x: -3.21011614799
y: -91.2495727539
theta: 4.73849630356
speed: 13.7045106888
id: 1
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:254


xxx before update is x: -3.21011614799
y: -91.2495727539
theta: 4.73849630356
speed: 13.7045106888
id: 1
t: 253
xxx after update is x: -3.18313455582
y: -91.6185760498
theta: 4.63583707809
speed: 14.5007677078
id: 1
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5311999999999988]
222 self.state_dicts[msg.id][msg.t] is (-67.42327880859375, 3.3277463912963867, 3.2844927310943604, 14.02325439453125)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:255


xxx before update is x: -3.18313455582
y: -91.6185760498
theta: 4.63583707809
speed: 14.5007677078
id: 1
t: 254
xxx after update is x: -3.24443459511
y: -92.1123580933
theta: 4.83647537231
speed: 13.9751844406
id: 1
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:256


xxx before update is x: -3.24443459511
y: -92.1123580933
theta: 4.83647537231
speed: 13.9751844406
id: 1
t: 255
xxx after update is x: -2.55519628525
y: -92.8972702026
theta: 4.73491764069
speed: 14.0635480881
id: 1
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.pyiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:252


xxx before update is x: -66.0522842407
y: 2.88813900948
theta: 3.02456641197
speed: 13.9235610962
id: 0
t: 251
xxx after update is x: -66.631942749
y: 2.96035194397
theta: 3.1247010231
speed: 13.8159303665
id: 0
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.061838150024414, -89.88165283203125, 4.898825645446777, 13.658655166625977)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:253


xxx before update is x: -66.631942749
y: 2.96035194397
theta: 3.1247010231
speed: 13.8159303665
id: 0
t: 252
xxx after update is x: -66.7735519409
y: 3.21214175224
theta: 3.10201191902
speed: 13.8934307098
id: 0
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:254


xxx before update is x: -66.7735519409
y: 3.21214175224
theta: 3.10201191902
speed: 13.8934307098
id: 0
t: 253
xxx after update is x: -67.4232788086
y: 3.3277463913
theta: 3.28449273109
speed: 14.0232543945
id: 0
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1831345558166504, -91.61857604980469, 4.635837078094482, 14.500767707824707)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -67.4232788086
y: 3.3277463913
theta: 3.28449273109
speed: 14.0232543945
id: 0
t: 254
xxx after update is x: -68.3463439941
y: 3.60437631607
theta: 3.02690029144
speed: 13.8892631531
id: 0
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:255




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:256


xxx before update is x: -68.3463439941
y: 3.60437631607
theta: 3.02690029144
speed: 13.8892631531
id: 0
t: 255
xxx after update is x: -68.8212585449
y: 3.04390215874
theta: 3.26010465622
speed: 14.0571212769
id: 0
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.3777777778






self.maneuver_requested left
RELEASE,0,11.3777777778,(-68.82125854492188, 3.0439021587371826, 3.2601046562194824),14,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 11.3777777778
self.communication_details == 0
sending RELEASE,0,11.3777777778,(-68.82125854492188, 3.0439021587371826, 3.2601046562194824),14,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.5551962852478027, -92.89727020263672, 4.734917640686035, 14.06354808807373)
if we have all measurements for a certain time-stamp perform risk e in the try maneuver function update -. strat
current clock is 11.3777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 11.3777777778




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 11.3777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '11.3777777778', 'Position': ['(-68.82125854492188', ' 3.0439021587371826', ' 3.2601046562194824)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,11.3777777778,(-68.82125854492188, 3.0439021587371826, 3.2601046562194824),14,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4607999999999981]
222 self.state_dicts[msg.id][msg.t] is (-68.82125854492188, 3.0439021587371826, 3.2601046562194824, 14.057121276855469)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:257


xxx before update is x: -2.55519628525
y: -92.8972702026
theta: 4.73491764069
speed: 14.0635480881
id: 1
t: 256
xxx after update is x: -3.38497543335
y: -93.7084350586
theta: 4.6549911499
speed: 13.5889148712
id: 1
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:258


xxx before update is x: -3.38497543335
y: -93.7084350586
theta: 4.6549911499
speed: 13.5889148712
id: 1
t: 257
xxx after update is x: -3.03714156151
y: -94.3029251099
theta: 4.61284589767
speed: 14.2470436096
id: 1
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:259


xxx before update is x: -3.03714156151
y: -94.3029251099
theta: 4.61284589767
speed: 14.2470436096
id: 1
t: 258
xxx after update is x: -2.83868980408
y: -95.1238937378
theta: 4.77043581009
speed: 14.4302740097
id: 1
t: 259
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5183999999999984]
222 self.state_dicts[msg.id][msg.t] is (-70.71332550048828, 2.880833625793457, 3.3294496536254883, 13.882328987121582)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:260


xxx before update is x: -2.83868980408
y: -95.1238937378
theta: 4.77043581009
speed: 14.4302740097
id: 1
t: 259
xxx after update is x: -3.2565305233
y: -95.8084945679
theta: 4.64866876602
speed: 13.5810213089
id: 1
t: 260
maneuver_negotiatir.py finish the updatestimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:257


xxx before update is x: -68.8212585449
y: 3.04390215874
theta: 3.26010465622
speed: 14.0571212769
id: 0
t: 256
xxx after update is x: -69.778137207
y: 2.98937058449
theta: 3.08432769775
speed: 13.9386463165
id: 0
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:258


xxx before update is x: -69.778137207
y: 2.98937058449
theta: 3.08432769775
speed: 13.9386463165
id: 0
t: 257
xxx after update is x: -70.8891677856
y: 3.1401014328
theta: 3.21034193039
speed: 13.6878290176
id: 0
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0371415615081787, -94.30292510986328, 4.6128458976745605, 14.24704360961914)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:259


xxx before update is x: -70.8891677856
y: 3.1401014328
theta: 3.21034193039
speed: 13.6878290176
id: 0
t: 258
xxx after update is x: -70.7133255005
y: 2.88083362579
theta: 3.32944965363
speed: 13.8823289871
id: 0
t: 259
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:260


xxx before update is x: -70.7133255005
y: 2.88083362579
theta: 3.32944965363
speed: 13.8823289871
id: 0
t: 259
xxx after update is x: -71.0621414185
y: 3.48341655731
theta: 3.20694279671
speed: 13.9769659042
id: 0
t: 260
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:261


xxx before update is x: -71.0621414185
y: 3.48341655731
theta: 3.20694279671
speed: 13.9769659042
id: 0
t: 260
xxx after update is x: -72.101776123
y: 2.32967233658
theta: 2.9671523571
speed: 13.8145904541
id: 0
t: 261
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.990374803543091, -95.72440338134766, 4.83263635635376, 13.344764709472656)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:262


xxx before update is x: -72.101776123
y: 2.32967233658
theta: 2.9671523571
speed: 13.8145904541
id: 0
t: 261
xxx after update is x: -73.0719909668
y: 2.73679351807
theta: 3.23800706863
speed: 13.7554664612
id: 0
t: 262
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:261


xxx before update is x: -3.2565305233
y: -95.8084945679
theta: 4.64866876602
speed: 13.5810213089
id: 1
t: 260
xxx after update is x: -2.99037480354
y: -95.7244033813
theta: 4.83263635635
speed: 13.3447647095
id: 1
t: 261
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.502399999999998]
222 self.state_dicts[msg.id][msg.t] is (-72.10177612304688, 2.329672336578369, 2.9671523571014404, 13.814590454101562)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:262


xxx before update is x: -2.99037480354
y: -95.7244033813
theta: 4.83263635635
speed: 13.3447647095
id: 1
t: 261
xxx after update is x: -2.74216413498
y: -96.7029647827
theta: 4.65008878708
speed: 14.0646457672
id: 1
t: 262
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4927999999999979]
222 self.state_dicts[msg.id][msg.t] is (-73.07199096679688, 2.7367935180664062, 3.238007068634033, 13.75546646118164)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:263


xxx before update is x: -2.74216413498
y: -96.7029647827
theta: 4.65008878708
speed: 14.0646457672
id: 1
t: 262
xxx after update is x: -3.51001405716
y: -97.4490127563
theta: 4.76517391205
speed: 14.1410903931
id: 1
t: 263
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.6888888889






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:264


xxx before update is x: -3.51001405716
y: -97.4490127563
theta: 4.76517391205
speed: 14.1410903931
id: 1
t: 263
xxx after update is x: -3.16201496124
y: -97.6415100098
theta: 4.73726654053
speed: 13.4832878113
id: 1
t: 264
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 11.7333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 11.7333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '11.7333333333', 'Position': ['(-74.16071319580078', ' 3.253959894180298', ' 3.018362045288086)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,11.7333333333,(-74.16071319580078, 3.253959894180298, 3.018362045288086),13,1,3.28888888889,0 from  car0
status: 1




maneuver_neg sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:263


xxx before update is x: -73.0719909668
y: 2.73679351807
theta: 3.23800706863
speed: 13.7554664612
id: 0
t: 262
xxx after update is x: -72.7527770996
y: 3.0815114975
theta: 2.96823239326
speed: 13.5925788879
id: 0
t: 263
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.510014057159424, -97.44901275634766, 4.76517391204834, 14.141090393066406)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:264


xxx before update is x: -72.7527770996
y: 3.0815114975
theta: 2.96823239326
speed: 13.5925788879
id: 0
t: 263
xxx after update is x: -74.1607131958
y: 3.25395989418
theta: 3.01836204529
speed: 13.9016904831
id: 0
t: 264
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.7333333333






self.maneuver_requested left
RELEASE,0,11.7333333333,(-74.16071319580078, 3.253959894180298, 3.018362045288086),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 11.7333333333
self.communication_details == 0
sending RELEASE,0,11.7333333333,(-74.16071319580078, 3.253959894180298, 3.018362045288086),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:265


xxx before update is x: -74.1607131958
y: 3.25395989418
theta: 3.01836204529
speed: 13.9016904831
id: 0
t: 264
xxx after update is x: -74.7157287598
y: 3.31395959854
theta: 2.99542808533
speed: 13.8705148697
id: 0
t: 265
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1669514179229736, -98.21532440185547, 4.669434547424316, 13.757551193237305)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:266


xxx before update is x: -74.7157287598
y: 3.31395959854
theta: 2.99542808533
speed: 13.8705148697
id: 0
t: 265
xxx after update is x: -74.9418334961
y: 3.35371232033
theta: 3.17888021469
speed: 13.8904504776
id: 0
t: 266
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -74.9418334961
y: 3.35371232033
theta: 3.17888021469
speed: 13.8904504776
id: 0
t: 266
xxx after update is x: -75.5289611816
y: 3.19510126114
theta: 3.10445690155
speed: 13.7631540298
id: 0
t: 267
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:267


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.8599541187286377, -99.38701629638672, 4.7otiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5279999999999987]
222 self.state_dicts[msg.id][msg.t] is (-74.16071319580078, 3.253959894180298, 3.018362045288086, 13.901690483093262)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:265


xxx before update is x: -3.16201496124
y: -97.6415100098
theta: 4.73726654053
speed: 13.4832878113
id: 1
t: 264
xxx after update is x: -3.16695141792
y: -98.2153244019
theta: 4.66943454742
speed: 13.7575511932
id: 1
t: 265
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:266


xxx before update is x: -3.16695141792
y: -98.2153244019
theta: 4.66943454742
speed: 13.7575511932
id: 1
t: 265
xxx after update is x: -2.92633366585
y: -99.1712799072
theta: 4.74646425247
speed: 13.6570301056
id: 1
t: 266
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4895999999999979]
222 self.state_dicts[msg.id][msg.t] is (-74.94183349609375, 3.353712320327759, 3.178880214691162, 13.890450477600098)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:267


xxx before update is x: -2.92633366585
y: -99.1712799072
theta: 4.74646425247
speed: 13.6570301056
id: 1
t: 266
xxx after update is x: -3.85995411873
y: -99.3870162964
theta: 4.71222734451
speed: 14.2543268204
id: 1
t: 267
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:268


xxx before update is x: -3.85995411873
y: -99.3870162964
theta: 4.71222734451
speed: 14.2543268204
id: 1
t: 267
xxx after update is x: -3.74190378189
y: -100.092887878
theta: 4.72025060654
speed: 13.5303440094
id: 1
t: 268
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.47199999999999803]
222 self.state_dicts[msg.id][msg.t] is (-76.03244018554688, 3.192115545272827, 3.3638803958892822, 14.10412883758545)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:269


xxx before update is x: -3.74190378189
y: -100.092887878
theta: 4.72025060654
speed: 13.5303440094
id: 1
t: 268
xxx after update is x: -3.2998652122273445129395, 14.254326820373535)

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:268


xxx before update is x: -75.5289611816
y: 3.19510126114
theta: 3.10445690155
speed: 13.7631540298
id: 0
t: 267
xxx after update is x: -76.0324401855
y: 3.19211554527
theta: 3.36388039589
speed: 14.1041288376
id: 0
t: 268
maneuver_negotiatir.py finish the update agent state from ros funtion

if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:269


xxx before update is x: -76.0324401855
y: 3.19211554527
theta: 3.36388039589
speed: 14.1041288376
id: 0
t: 268
xxx after update is x: -76.9551849365
y: 3.05183339119
theta: 2.99155712128
speed: 13.679561615
id: 0
t: 269
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:270


xxx before update is x: -76.9551849365
y: 3.05183339119
theta: 2.99155712128
speed: 13.679561615
id: 0
t: 269
xxx after update is x: -77.2615890503
y: 3.1184489727
theta: 2.90587306023
speed: 14.0774793625
id: 0
t: 270
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.7067177295684814, -101.45162963867188, 4.7563371658325195, 14.203304290771484)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:271


xxx before update is x: -77.2615890503
y: 3.1184489727
theta: 2.90587306023
speed: 14.0774793625
id: 0
t: 270
xxx after update is x: -78.2785644531
y: 3.36657047272
theta: 3.30507445335
speed: 13.9723129272
id: 0
t: 271
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.0444444444






self.maneuver_requested left
RELEASE,0,12.0444444444,(-78.278564453125, 3.366570472717285, 3.305074453353882),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 12.0444444444
self.communication_details == 0
sending RELEASE,0,12.0444444444,(-78.278564453125, 3.366570472717285, 3.305074453353882),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:272


xxx before update is x: -78.2785644531
y: 3.36657047272
theta: 3.30507445335
speed: 13.9723129272
id: 0
t: 271
xxx after update is x: -78.905128479
y: 3.45782423019
theta: 3.16256332397
speed: 13.8112602234
id: 0
t: 272
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.735121011734009, -102.54174041748047, 4.73921537399292, 13.61890697479248)
if we have all measurements for a 4582
y: -100.883369446
theta: 4.75807571411
speed: 13.904545784
id: 1
t: 269
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:270


xxx before update is x: -3.29986524582
y: -100.883369446
theta: 4.75807571411
speed: 13.904545784
id: 1
t: 269
xxx after update is x: -2.70671772957
y: -101.451629639
theta: 4.75633716583
speed: 14.2033042908
id: 1
t: 270
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.481599999999998]
222 self.state_dicts[msg.id][msg.t] is (-77.26158905029297, 3.1184489727020264, 2.9058730602264404, 14.077479362487793)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:271


xxx before update is x: -2.70671772957
y: -101.451629639
theta: 4.75633716583
speed: 14.2033042908
id: 1
t: 270
xxx after update is x: -3.15086054802
y: -102.736335754
theta: 4.56594848633
speed: 14.1191778183
id: 1
t: 271
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 12.0444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 12.0444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '12.0444444444', 'Position': ['(-78.278564453125', ' 3.366570472717285', ' 3.305074453353882)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,12.0444444444,(-78.278564453125, 3.366570472717285, 3.305074453353882),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:272


xxx before update is x: -3.15086054802
y: -102.736335754
theta: 4.56594848633
speed: 14.1191778183
id: 1
t: 271
xxx after update is x: -3.73512101173
y: -102.541740417
theta: 4.73921537399
speed: 13.6189069748
id: 1
t: 272
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-78.9051284790039, 3.457824230194092, 3.1625633239746094, 13.811260223388672)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:273


xxx before update is x: -3.73512101173
y: -102.541740417
theta: 4.73921537399
speed: 13.6189069748
id: 1
t: 272
xxx after update is x: -3.56216430664
y: -103.595176697
theta: 4.70147418976
speed: 13.8698358536
id: 1
t: 273
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:274


xxx before update is x: -3.56216430664
y: -103.595176697
theta: 4.70147418976
speed: 13.8698358536
id: 1
t: 273
xxx after update is x: -3.12617254257
y: -103.668327332
theta: 4.89760255814
speed: 13.7725725174
id: 1
t: 274
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.503999999999998]
222 self.state_dicts[msg.id][msg.t] is (-79.89598083496094, 3.8918888568878174, 3.224886178970337, 13.965005874633789)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:275


xxx before update is x: -3.12617254257
y: -103.668327332
theta: 4.89760255814
speed: 13.7725725174
id: 1
t: 274
xxx after update is x: -3.27969241142
y: -104.536323547
theta: 4.71420288086
speed: 13.8957834244
id: 1
t: 275
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5151999999999983]
222 self.state_dicts[msg.id][msg.t] is (-79.83671569824219, 3.2534756660461426, 3.1376118659973145, 13.840400695800781)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:276


xxx before update is x: -3.27969241142
y: -104.536323547
theta: 4.71420288086
speed: 13.8957834244
id: 1
t: 275
xxx after update is x: -3.10610961914
y: -104.915435791
theta: 4.81551074982
speed: 13.9109611511
id: 1
t: 276
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:277


xxx before update is x: -3.10610961914
y: -104.915435791
theta: 4.81551074982
speed: 13.9109611511
id: 1
t: 276
xxx after update is x: -3.47803497314
y: -105.810966492
theta: 4.48850488663
speed: 13.7040596008
id: 1
t: 277
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4927999999999979]
222 self.state_dicts[msg.id][msg.t] is (-82.22425842285156, 3.3621654510498047, 2.9986629486083984, 14.021706581115723)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:278


xxx before update is x: -3.4certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:273


xxx before update is x: -78.905128479
y: 3.45782423019
theta: 3.16256332397
speed: 13.8112602234
id: 0
t: 272
xxx after update is x: -79.4752655029
y: 3.24737286568
theta: 3.16951227188
speed: 14.1990699768
id: 0
t: 273
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:274


xxx before update is x: -79.4752655029
y: 3.24737286568
theta: 3.16951227188
speed: 14.1990699768
id: 0
t: 273
xxx after update is x: -79.895980835
y: 3.89188885689
theta: 3.22488617897
speed: 13.9650058746
id: 0
t: 274
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:275


xxx before update is x: -79.895980835
y: 3.89188885689
theta: 3.22488617897
speed: 13.9650058746
id: 0
t: 274
xxx after update is x: -79.8367156982
y: 3.25347566605
theta: 3.137611866
speed: 13.8404006958
id: 0
t: 275
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2796924114227295, -104.53632354736328, 4.714202880859375, 13.895783424377441)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:276


xxx before update is x: -79.8367156982
y: 3.25347566605
theta: 3.137611866
speed: 13.8404006958
id: 0
t: 275
xxx after update is x: -81.7217941284
y: 3.92269825935
theta: 3.18319344521
speed: 13.8455724716
id: 0
t: 276
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:277


xxx before update is x: -81.7217941284
y: 3.92269825935
theta: 3.18319344521
speed: 13.8455724716
id: 0
t: 276
xxx after update is x: -82.2242584229
y: 3.36216545105
theta: 2.99866294861
speed: 14.0217065811
id: 0
t: 277
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4780349731445312, -105.81096649169922, 4.488504886627197, 13.704059600830078)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:278


xxx before update is x: -82.2242584229
y: 3.36216545105
theta: 2.99866294861
speed: 14.0217065811
id: 0
t: 277
xxx after update is x: -82.8843536377
y: 3.79338741302
theta: 3.10434365273
speed: 13.831413269
id: 0
t: 278
maneuver_negotiatir.py finish the update agent state from ros funtion


going7803497314
y: -105.810966492
theta: 4.48850488663
speed: 13.7040596008
id: 1
t: 277
xxx after update is x: -3.30284166336
y: -106.706748962
theta: 4.73785018921
speed: 13.617650032
id: 1
t: 278
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:279


xxx before update is x: -3.30284166336
y: -106.706748962
theta: 4.73785018921
speed: 13.617650032
id: 1
t: 278
xxx after update is x: -2.81526064873
y: -107.361846924
theta: 4.84420490265
speed: 14.0543413162
id: 1
t: 279
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.4






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 12.4




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 12.4
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '12.4', 'Position': ['(-82.81698608398438', ' 3.472363233566284', ' 3.215070962905884)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,12.4,(-82.81698608398438, 3.472363233566284, 3.215070962905884),14,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.537599999999999]
222 self.state_dicts[msg.id][msg.t] is (-82.81698608398438, 3.472363233566284, 3.215070962905884, 14.031591415405273)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.81526064873
y: -107.361846924
theta: 4.84420490265
speed: 14.0543413162
id: 1
t: 279
xxx after update is x: -3.16001963615
y: -108.244262695
theta: 4.50654506683
speed: 13.9907655716
id: 1
t: 280
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:280




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:281


xxx before update is x: -3.16001963615
y: -108.244262695
theta: 4.50654506683
speed: 13.9907655716
id: 1
t: 280
xxx after update is x: -3.46602964401
y: -108.493499756
theta: 4.57136583328
speed: 13.725605011
id: 1
t: 281
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5215999999999985]
222 self.state_dicts[msg.id][msg.t] is (-84.19100189208984, 2.8920369148254395, 3.1813852787017822, 13.736613273620605)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:282


xxx before update is x: -3. to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -82.8843536377
y: 3.79338741302
theta: 3.10434365273
speed: 13.831413269
id: 0
t: 278
xxx after update is x: -82.816986084
y: 3.47236323357
theta: 3.21507096291
speed: 14.0315914154
id: 0
t: 279
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:279


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.4






self.maneuver_requested left
RELEASE,0,12.4,(-82.81698608398438, 3.472363233566284, 3.215070962905884),14,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 12.4
self.communication_details == 0
sending RELEASE,0,12.4,(-82.81698608398438, 3.472363233566284, 3.215070962905884),14,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:280


xxx before update is x: -82.816986084
y: 3.47236323357
theta: 3.21507096291
speed: 14.0315914154
id: 0
t: 279
xxx after update is x: -83.6801376343
y: 3.01389813423
theta: 3.10572385788
speed: 13.9151973724
id: 0
t: 280
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.160019636154175, -108.2442626953125, 4.506545066833496, 13.990765571594238)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -83.6801376343
y: 3.01389813423
theta: 3.10572385788
speed: 13.9151973724
id: 0
t: 280
xxx after update is x: -84.1910018921
y: 2.89203691483
theta: 3.1813852787
speed: 13.7366132736
id: 0
t: 281
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:281




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:282


xxx before update is x: -84.1910018921
y: 2.89203691483
theta: 3.1813852787
speed: 13.7366132736
id: 0
t: 281
xxx after update is x: -84.5236129761
y: 3.52506661415
theta: 3.06644248962
speed: 13.7678565979
id: 0
t: 282
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3203647136688232, -108.7188949584961, 4.493885040283203, 13.486721992492676)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:283


xxx before update is x: -84.5236129761
y: 3.52506661415
theta: 3.06644248962
speed: 13.7678565979
id: 0
t: 282
xxx after update is x: -85.2489318848
y: 3.42060947418
theta: 3.21919083595
speed: 13.611992836
id: 0
t: 283
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiii46602964401
y: -108.493499756
theta: 4.57136583328
speed: 13.725605011
id: 1
t: 281
xxx after update is x: -3.32036471367
y: -108.718894958
theta: 4.49388504028
speed: 13.4867219925
id: 1
t: 282
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:283


xxx before update is x: -3.32036471367
y: -108.718894958
theta: 4.49388504028
speed: 13.4867219925
id: 1
t: 282
xxx after update is x: -3.12070941925
y: -109.926635742
theta: 4.77068948746
speed: 14.0280160904
id: 1
t: 283
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-85.24893188476562, 3.420609474182129, 3.219190835952759, 13.611992835998535)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:284


xxx before update is x: -3.12070941925
y: -109.926635742
theta: 4.77068948746
speed: 14.0280160904
id: 1
t: 283
xxx after update is x: -3.228713274
y: -110.223937988
theta: 4.73483037949
speed: 13.9727115631
id: 1
t: 284
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:285


xxx before update is x: -3.228713274
y: -110.223937988
theta: 4.73483037949
speed: 13.9727115631
id: 1
t: 284
xxx after update is x: -3.60478281975
y: -110.94757843
theta: 4.605219841
speed: 13.8466320038
id: 1
t: 285
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-86.77864074707031, 3.3397974967956543, 3.0897867679595947, 14.10062313079834)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.60478281975
y: -110.94757843
theta: 4.605219841
speed: 13.8466320038
id: 1
t: 285
xxx after update is x: -3.32771348953
y: -111.367256165
theta: 4.57864189148
speed: 13.7034788132
id: 1
t: 286
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:286


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.7111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:287


xxx before update is x: -3.32771348953
y: -111.367256165
theta: 4.57864189148
speed: 13.7034788132
id: 1
t: 286
xxx after update is x: -3.33620619774
y: -111.969306946
theta: 4.60743761063
siiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:284


xxx before update is x: -85.2489318848
y: 3.42060947418
theta: 3.21919083595
speed: 13.611992836
id: 0
t: 283
xxx after update is x: -85.9434280396
y: 3.1499478817
theta: 3.12148475647
speed: 13.6215982437
id: 0
t: 284
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -85.9434280396
y: 3.1499478817
theta: 3.12148475647
speed: 13.6215982437
id: 0
t: 284
xxx after update is x: -86.7786407471
y: 3.3397974968
theta: 3.08978676796
speed: 14.1006231308
id: 0
t: 285
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:285


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.604782819747925, -110.94757843017578, 4.605219841003418, 13.84663200378418)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -86.7786407471
y: 3.3397974968
theta: 3.08978676796
speed: 14.1006231308
id: 0
t: 285
xxx after update is x: -87.3589248657
y: 2.7074213028
theta: 3.36272907257
speed: 14.09856987
id: 0
t: 286
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:286




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:287


xxx before update is x: -87.3589248657
y: 2.7074213028
theta: 3.36272907257
speed: 14.09856987
id: 0
t: 286
xxx after update is x: -87.8988265991
y: 3.63534712791
theta: 3.19745182991
speed: 13.8076524734
id: 0
t: 287
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.7555555556






self.maneuver_requested left
RELEASE,0,12.7555555556,(-87.8988265991211, 3.6353471279144287, 3.1974518299102783),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 12.7555555556
self.communication_details == 0
sending RELEASE,0,12.7555555556,(-87.8988265991211, 3.6353471279144287, 3.1974518299102783),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3362061977386475, -111.96930694580078, 4.607437610626221, 14.059210777282715)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:288


xxx before update is x: -87.8988265991
y: 3.63534712791
theta: 3.19745182991
speed: 13.8076524734
id: 0
t: 287
xxx after update is x: -88.6087036133
y: 2.96468091011
theta: 3.16908764839
speed: 13.6808586121
id: 0
t: 288
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
Falspeed: 14.0592107773
id: 1
t: 287
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 12.7555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 12.7555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '12.7555555556', 'Position': ['(-87.8988265991211', ' 3.6353471279144287', ' 3.1974518299102783)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,12.7555555556,(-87.8988265991211, 3.6353471279144287, 3.1974518299102783),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5199999999999985]
222 self.state_dicts[msg.id][msg.t] is (-87.8988265991211, 3.6353471279144287, 3.1974518299102783, 13.807652473449707)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:288


xxx before update is x: -3.33620619774
y: -111.969306946
theta: 4.60743761063
speed: 14.0592107773
id: 1
t: 287
xxx after update is x: -3.47232079506
y: -112.750656128
theta: 4.76336288452
speed: 13.7236299515
id: 1
t: 288
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:289


xxx before update is x: -3.47232079506
y: -112.750656128
theta: 4.76336288452
speed: 13.7236299515
id: 1
t: 288
xxx after update is x: -3.07635426521
y: -113.844238281
theta: 4.63374614716
speed: 13.5063724518
id: 1
t: 289
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:290


xxx before update is x: -3.07635426521
y: -113.844238281
theta: 4.63374614716
speed: 13.5063724518
id: 1
t: 289
xxx after update is x: -2.86875414848
y: -113.863174438
theta: 4.64340257645
speed: 13.970615387
id: 1
t: 290
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5263999999999986]
222 self.state_dicts[msg.id][msg.t] is (-90.5955810546875, 3.1752028465270996, 3.246945858001709, 14.154520034790039)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:291


xxx before update is x: -2.86875414848
y: -113.863174438
theta: 4.64340257645
speed: 13.970615387
id: 1
t: 290
xxx after update is x: -3.02438139915
y: -115.017127991
theta: 4.63709497452
speed: 13.5445384979
id: 1
t: 291
maneuver_negotiatir.py finish the update agent statee
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:289


xxx before update is x: -88.6087036133
y: 2.96468091011
theta: 3.16908764839
speed: 13.6808586121
id: 0
t: 288
xxx after update is x: -89.9247283936
y: 3.82627153397
theta: 3.14983773232
speed: 13.4313468933
id: 0
t: 289
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0763542652130127, -113.84423828125, 4.633746147155762, 13.506372451782227)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -89.9247283936
y: 3.82627153397
theta: 3.14983773232
speed: 13.4313468933
id: 0
t: 289
xxx after update is x: -90.5955810547
y: 3.17520284653
theta: 3.246945858
speed: 14.1545200348
id: 0
t: 290
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:290




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:291


xxx before update is x: -90.5955810547
y: 3.17520284653
theta: 3.246945858
speed: 14.1545200348
id: 0
t: 290
xxx after update is x: -90.0886306763
y: 3.24249172211
theta: 3.22515583038
speed: 13.6743898392
id: 0
t: 291
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:292


xxx before update is x: -90.0886306763
y: 3.24249172211
theta: 3.22515583038
speed: 13.6743898392
id: 0
t: 291
xxx after update is x: -91.1718978882
y: 3.67646741867
theta: 2.92066526413
speed: 14.0470113754
id: 0
t: 292
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.141624927520752, -114.77825927734375, 4.7113165855407715, 13.412742614746094)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:293


xxx before update is x: -91.1718978882
y: 3.67646741867
theta: 2.92066526413
speed: 14.0470113754
id: 0
t: 292
xxx after update is x: -91.3160552979
y: 3.19285678864
theta: 3.09708404541
speed: 13.8503818512
id: 0
t: 293
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:294


xxx before update is x: -91.3160552979
y: 3.19285678864
theta: 3.09708404541
speed: 13.8503818512
id: 0
t: 293
xxx after update is x: -92.1394500732
y: 3.3042576313
theta: 3.05184149742
speed: 14.0298509598
id: 0
t: 294
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5133347511291504, -116.02616119384766, 4.84028434753418, 14.023750305175781)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_n from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:292


xxx before update is x: -3.02438139915
y: -115.017127991
theta: 4.63709497452
speed: 13.5445384979
id: 1
t: 291
xxx after update is x: -3.14162492752
y: -114.778259277
theta: 4.71131658554
speed: 13.4127426147
id: 1
t: 292
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-91.1718978881836, 3.6764674186706543, 2.9206652641296387, 14.047011375427246)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:293


xxx before update is x: -3.14162492752
y: -114.778259277
theta: 4.71131658554
speed: 13.4127426147
id: 1
t: 292
xxx after update is x: -3.25756430626
y: -116.215995789
theta: 4.6266207695
speed: 13.734837532
id: 1
t: 293
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:294


xxx before update is x: -3.25756430626
y: -116.215995789
theta: 4.6266207695
speed: 13.734837532
id: 1
t: 293
xxx after update is x: -3.51333475113
y: -116.026161194
theta: 4.84028434753
speed: 14.0237503052
id: 1
t: 294
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 0.5247999999999986]
222 self.state_dicts[msg.id][msg.t] is (-92.13945007324219, 3.30425763130188, 3.0518414974212646, 14.029850959777832)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.0666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 13.0666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.0666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '13.0666666667', 'Position': ['(-92.13945007324219', ' 3.30425763130188', ' 3.0518414974212646)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,13.0666666667,(-92.13945007324219, 3.30425763130188, 3.0518414974212646),14,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:295


xxx before update is x: -3.51333475113
y: -116.026161194
theta: 4.84028434753
speed: 14.0237503052
id: 1
t: 294
xxx after update is x: -3.53997302055
y: -116.472229004
theta: 4.74516963959
speed: 13.9123592377
id: 1
t: 295
maneuveegotiatir.py in the try maneuver function update -. strat
current clock is 13.0666666667






self.maneuver_requested left
RELEASE,0,13.0666666667,(-92.13945007324219, 3.30425763130188, 3.0518414974212646),14,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 13.0666666667
self.communication_details == 0
sending RELEASE,0,13.0666666667,(-92.13945007324219, 3.30425763130188, 3.0518414974212646),14,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:295


xxx before update is x: -92.1394500732
y: 3.3042576313
theta: 3.05184149742
speed: 14.0298509598
id: 0
t: 294
xxx after update is x: -93.5716094971
y: 3.18460059166
theta: 2.99988055229
speed: 13.8454866409
id: 0
t: 295
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:296


xxx before update is x: -93.5716094971
y: 3.18460059166
theta: 2.99988055229
speed: 13.8454866409
id: 0
t: 295
xxx after update is x: -93.7995910645
y: 3.17143535614
theta: 3.12946724892
speed: 13.7786722183
id: 0
t: 296
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.158303737640381, -117.70787811279297, 4.576489448547363, 14.248329162597656)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:297


xxx before update is x: -93.7995910645
y: 3.17143535614
theta: 3.12946724892
speed: 13.7786722183
id: 0
t: 296
xxx after update is x: -93.9927978516
y: 3.3959069252
theta: 2.98919892311
speed: 13.574848175
id: 0
t: 297
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:298


xxx before update is x: -93.9927978516
y: 3.3959069252
theta: 2.98919892311
speed: 13.574848175
id: 0
t: 297
xxx after update is x: -95.0912704468
y: 3.41415262222
theta: 3.1597495079
speed: 14.3162021637
id: 0
t: 298
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.916851282119751, -118.510498046875, 4.6408867835998535, 13.925719261169434)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:299


xxx before update is x: -95.0912704468
y: 3.41415262222
theta: 3.1597495079
speed: 14.3162021637
id: 0
t: 298
xxx after update is x: -95.5424346924
y: 3.49136996269
theta: 3.00680184364
speed: 13.9554271698
id: 0
t: 299
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeedr_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (-93.57160949707031, 3.184600591659546, 2.99988055229187, 13.845486640930176)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:296


xxx before update is x: -3.53997302055
y: -116.472229004
theta: 4.74516963959
speed: 13.9123592377
id: 1
t: 295
xxx after update is x: -3.15830373764
y: -117.707878113
theta: 4.57648944855
speed: 14.2483291626
id: 1
t: 296
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:297


xxx before update is x: -3.15830373764
y: -117.707878113
theta: 4.57648944855
speed: 14.2483291626
id: 1
t: 296
xxx after update is x: -3.24720025063
y: -119.005134583
theta: 4.84221887589
speed: 13.863817215
id: 1
t: 297
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5407999999999991]
222 self.state_dicts[msg.id][msg.t] is (-93.9927978515625, 3.395906925201416, 2.989198923110962, 13.574848175048828)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:298


xxx before update is x: -3.24720025063
y: -119.005134583
theta: 4.84221887589
speed: 13.863817215
id: 1
t: 297
xxx after update is x: -3.91685128212
y: -118.510498047
theta: 4.6408867836
speed: 13.9257192612
id: 1
t: 298
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:299


xxx before update is x: -3.91685128212
y: -118.510498047
theta: 4.6408867836
speed: 13.9257192612
id: 1
t: 298
xxx after update is x: -3.5490860939
y: -119.045791626
theta: 4.81912899017
speed: 13.6825609207
id: 1
t: 299
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-95.54243469238281, 3.4913699626922607, 3.0068018436431885, 13.955427169799805)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:300


xxx before update is x: -3.5490860939
y: -119.045791626
theta: 4.81912899017
speed: 13.6825609207
id: 1
t: 299
xxx after update is x: -3.3909368515
y: -119.725997925 < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:300


xxx before update is x: -95.5424346924
y: 3.49136996269
theta: 3.00680184364
speed: 13.9554271698
id: 0
t: 299
xxx after update is x: -95.7716140747
y: 3.30351758003
theta: 3.20519018173
speed: 13.5250062943
id: 0
t: 300
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -95.7716140747
y: 3.30351758003
theta: 3.20519018173
speed: 13.5250062943
id: 0
t: 300
xxx after update is x: -97.0399856567
y: 3.40759658813
theta: 3.0640399456
speed: 14.0248308182
id: 0
t: 301
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:301


aaaaaa
risk is [0.0, 0.0]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:302


xxx before update is x: -97.0399856567
y: 3.40759658813
theta: 3.0640399456
speed: 14.0248308182
id: 0
t: 301
xxx after update is x: -97.2336044312
y: 3.67189764977
theta: 3.03549861908
speed: 14.1252393723
id: 0
t: 302
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.4222222222






self.maneuver_requested left
RELEASE,0,13.4222222222,(-97.23360443115234, 3.6718976497650146, 3.03549861907959),14,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 13.4222222222
self.communication_details == 0
sending RELEASE,0,13.4222222222,(-97.23360443115234, 3.6718976497650146, 3.03549861907959),14,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:303


xxx before update is x: -97.2336044312
y: 3.67189764977
theta: 3.03549861908
speed: 14.1252393723
id: 0
t: 302
xxx after update is x: -98.1741790771
y: 3.9812681675
theta: 3.14052677155
speed: 13.6915826797
id: 0
t: 303
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -98.1741790771
y: 3.9812681675
theta: 3.14052677155
speed: 13.6915826797
id: 0
t: 303
xxx after update is x: -98.3794174194
y: 3.02669811249
theta: 3.16626739502
speed: 13.8362598419
id: 0
t: 304
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:304




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -98.3794174194
y: 3.02669811249
theta: 3.16626739502
speed: 13.8362598419
id: 0
t: 304
xxx after update is x: -99.1784667969
y: 3.7581050396
theta: 3.05942153931
speed: 14.1132507324
id: 0
t: 305
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:305




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiii
theta: 4.69386196136
speed: 13.8301534653
id: 1
t: 300
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:301


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5263999999999986]
222 self.state_dicts[msg.id][msg.t] is (-97.03998565673828, 3.4075965881347656, 3.064039945602417, 14.02483081817627)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:302


222 self.state_dicts[msg.id][msg.t] is (-97.23360443115234, 3.6718976497650146, 3.03549861907959, 14.125239372253418)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '13.4222222222', 'Position': ['(-97.23360443115234', ' 3.6718976497650146', ' 3.03549861907959)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,13.4222222222,(-97.23360443115234, 3.6718976497650146, 3.03549861907959),14,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:303


222 self.state_dicts[msg.id][msg.t] is (-98.17417907714844, 3.9812681674957275, 3.14052677154541, 13.691582679748535)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:304


222 self.state_dicts[msg.id][msg.t] is (-98.3794174194336, 3.026698112487793, 3.1662673950195312, 13.836259841918945)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:305


222 self.state_dicts[msg.id][msg.t] is (-99.178466796875, 3.7581050395965576, 3.0594215393066406, 14.113250732421875)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:306


222 self.state_dicts[msg.id][msg.t] is (-100.09768676757812, 3.3961517810821533, 2.883059024810791, 13.958660125732422)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:307


222 self.state_dicts[msg.id][msg.t] is (-100.6610336303711, 3.180666923522949, 3.118164300918579, 13.866750717163086)
222 self.state_dicts[msg.id][msg.t] is (-100.91541290283203, 3.4663405418395996, 3.1788747310638428, 13.91917896270752)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:308


222 self.state_dicts[msg.id][msg.t] is (-101.81053161621094, 3.269059181213379, 2.952587127685547, 14.33080005645752)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:309


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:310


222 self.state_dicts[msg.id][msg.t] is (-102.31956481933594, 3.137381076812744, 3.2847344875335693, 13.634532928466797)
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -99.1784667969
y: 3.7581050396
theta: 3.05942153931
speed: 14.1132507324
id: 0
t: 305
xxx after update is x: -100.097686768
y: 3.39615178108
theta: 2.88305902481
speed: 13.9586601257
id: 0
t: 306
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:306




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -100.097686768
y: 3.39615178108
theta: 2.88305902481
speed: 13.9586601257
id: 0
t: 306
xxx after update is x: -100.66103363
y: 3.18066692352
theta: 3.11816430092
speed: 13.8667507172
id: 0
t: 307
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:307




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -100.66103363
y: 3.18066692352
theta: 3.11816430092
speed: 13.8667507172
id: 0
t: 307
xxx after update is x: -100.915412903
y: 3.46634054184
theta: 3.17887473106
speed: 13.9191789627
id: 0
t: 308
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:308




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -100.915412903
y: 3.46634054184
theta: 3.17887473106
speed: 13.9191789627
id: 0
t: 308
xxx after update is x: -101.810531616
y: 3.26905918121
theta: 2.95258712769
speed: 14.3308000565
id: 0
t: 309
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:309




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -101.810531616
y: 3.26905918121
theta: 2.95258712769
speed: 14.3308000565
id: 0
t: 309
xxx after update is x: -102.319564819
y: 3.13738107681
theta: 3.28473448753
speed: 13.6345329285
id: 0
t: 310
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:310


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.7777777778






self.maneuver_requested left
RELEASE,0,13.7777777778,(-102.31956481933594, 3.137381076812744, 3.2847344875335693),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 13.7777777778
self.communication_details == 0
sending RELEASE,0,13.7777777778,(-102.31956481933594, 3.137381076812744, 3.2847344875335693),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -102.319564819
y: 3.13738107681
theta: 3.28473448753
speed: 13.6345329285
id: 0
t: 310
xxx after update is x: -102.71774292
y: 2.57521390915
theta: 3.23793435097
speed: 13.9353904724
id: 0
t: 311
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:311




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -102.71774292
y: 2.57521390915
theta: 3.23793435097
speed: 13.9353904724
id: 0
t: 311
xxx after update is x: -103.890235901
y: 3.27096843719
theta: 3.08146858215
speed: 14.0176954269
id: 0
t: 312
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:312




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -103.890235901
y: 3.27096843719
theta: 3.08146858215
speed: 14.0176954269
id: 0
t: 312
xxx after update is x: -104.174659729
y: 3.10006856918
theta: 3.20375275612
speed: 14.2223844528
id: 0
t: 313
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:313




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -104.174659729
y: 3.10006856918
theta: 3.20375275612
speed: 14.2223844528
id: 0
t: 313
xxx after update is x: -104.792282104
y: 3.79611110687
theta: 3.05624747276
speed: 13.2833738327
id: 0
t: 314
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:314




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -104.792282104
y: 3.79611110687
theta: 3.05624747276
speed: 13.2833738327
id: 0
t: 314
xxx after update is x: -105.376655579
y: 2.93671393394
theta: 3.25829911232
speed: 13.3679656982
id: 0
t: 315
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:315




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -105.376655579
y: 2.93671393394
theta: 3.25829911232
speed: 13.3679656982
id: 0
t: 315
xxx after update is x: -106.605522156
y: 3.23806405067
theta: 3.20943260193
speed: 12.6319675446
id: 0
t: 316
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:316




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -106.605522156
y: 3.23806405067
theta: 3.20943260193
speed: 12.6319675446
id: 0
t: 316
xxx after update is x: -106.410667419
y: 2.81827664375
theta: 3.14076137543
speed: 13.0319213867
id: 0
t: 317
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:317


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0888888889






self.maneuver_requested left
RELEASE,0,14.0888888889,(-106.4106674194336, 2.8182766437530518, 3.140761375427246),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 14.0888888889
self.communication_details == 0
sending RELEASE,0,14.0888888889,(-106.4106674194336, 2.8182766437530518, 3.140761375427246),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -106.410667419
y: 2.818276643processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '13.7777777778', 'Position': ['(-102.31956481933594', ' 3.137381076812744', ' 3.2847344875335693)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,13.7777777778,(-102.31956481933594, 3.137381076812744, 3.2847344875335693),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:311


222 self.state_dicts[msg.id][msg.t] is (-102.71774291992188, 2.57521390914917, 3.2379343509674072, 13.93539047241211)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:312


222 self.state_dicts[msg.id][msg.t] is (-103.8902359008789, 3.270968437194824, 3.0814685821533203, 14.017695426940918)
222 self.state_dicts[msg.id][msg.t] is (-104.1746597290039, 3.1000685691833496, 3.2037527561187744, 14.222384452819824)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:313


222 self.state_dicts[msg.id][msg.t] is (-104.79228210449219, 3.7961111068725586, 3.0562474727630615, 13.283373832702637)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:314




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:315


222 self.state_dicts[msg.id][msg.t] is (-105.37665557861328, 2.936713933944702, 3.2582991123199463, 13.367965698242188)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:316


222 self.state_dicts[msg.id][msg.t] is (-106.60552215576172, 3.2380640506744385, 3.209432601928711, 12.631967544555664)
222 self.state_dicts[msg.id][msg.t] is (-106.4106674194336, 2.8182766437530518, 3.140761375427246, 13.03192138671875)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:317


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '14.0888888889', 'Position': ['(-106.4106674194336', ' 2.8182766437530518', ' 3.140761375427246)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,14.0888888889,(-106.4106674194336, 2.8182766437530518, 3.140761375427246),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:318


222 self.state_dicts[msg.id][msg.t] is (-107.26979064941406, 3.273784875869751, 3.110398530960083, 12.385601043701172)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:319


222 self.state_dicts[msg.id][msg.t] is (-107.66755676269531, 3.1505327224731445, 3.237316370010376, 12.510663032531738)
222 self.state_dicts[msg.id][msg.t] is (-108.2176742553711, 3.2517149448394775, 3.06880617141723675
theta: 3.14076137543
speed: 13.0319213867
id: 0
t: 317
xxx after update is x: -107.269790649
y: 3.27378487587
theta: 3.11039853096
speed: 12.3856010437
id: 0
t: 318
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:318




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -107.269790649
y: 3.27378487587
theta: 3.11039853096
speed: 12.3856010437
id: 0
t: 318
xxx after update is x: -107.667556763
y: 3.15053272247
theta: 3.23731637001
speed: 12.5106630325
id: 0
t: 319
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:319




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -107.667556763
y: 3.15053272247
theta: 3.23731637001
speed: 12.5106630325
id: 0
t: 319
xxx after update is x: -108.217674255
y: 3.25171494484
theta: 3.06880617142
speed: 12.1032543182
id: 0
t: 320
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:320




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -108.217674255
y: 3.25171494484
theta: 3.06880617142
speed: 12.1032543182
id: 0
t: 320
xxx after update is x: -108.949432373
y: 3.56629419327
theta: 3.29613566399
speed: 11.4367599487
id: 0
t: 321
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:321




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -108.949432373
y: 3.56629419327
theta: 3.29613566399
speed: 11.4367599487
id: 0
t: 321
xxx after update is x: -110.093490601
y: 3.30541706085
theta: 3.09964728355
speed: 11.2879076004
id: 0
t: 322
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:322




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -110.093490601
y: 3.30541706085
theta: 3.09964728355
speed: 11.2879076004
id: 0
t: 322
xxx after update is x: -110.012802124
y: 2.81275486946
theta: 3.17949080467
speed: 11.3380489349
id: 0
t: 323
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:323




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -110.012802124
y: 2.81275486946
theta: 3.17949080467
speed: 11.3380489349
id: 0
t: 323
xxx after update is x: -109.837760925
y: 3.58288264275
theta: 3.17608141899
speed: 10.84354496
id: 0
t: 324
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:324




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -109.837760925
y: 3.58288264275
theta: 3.17608141899
speed: 10.84354496
id: 0
t: 324
xxx after update is x: -111.410705566
y: 3.40796923637
theta: 3.04850721359
speed: 10.9176864624
id: 0
t: 325
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:325


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.4444444444






self.maneuver_requested left
RELEASE,0,14.4444444444,(-111.41070556640625, 3.4079692363739014, 3.0485072135925293),10,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 14.4444444444
self.communication_details == 0
sending RELEASE,0,14.4444444444,(-111.41070556640625, 3.4079692363739014, 3.0485072135925293),10,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -111.410705566
y: 3.40796923637
theta: 3.04850721359
speed: 10.9176864624
id: 0
t: 325
xxx after update is x: -110.855636597
y: 3.23292374611
theta: 3.11438393593
speed: 10.3452882767
id: 0
t: 326
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:326




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -110.855636597
y: 3.23292374611
theta: 3.11438393593
speed: 10.3452882767
id: 0
t: 326
xxx after update is x: -111.616470337
y: 3.10436630249
theta: 3.05110359192
speed: 10.2977361679
id: 0
t: 327
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:327




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -111.616470337
y: 3.10436630249
theta: 3.05110359192
speed: 10.2977361679
id: 0
t: 327
xxx after update is x: -111.992111206
y: 2.60068392754
theta: 3.15690231323
speed: 10.2598075867
id: 0
t: 328
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:328




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -111.992111206
y: 2.60068392754
theta: 3.15690231323
speed: 10.2598075867
id: 0
t: 328
xxx after update is x: -113.092674255
y: 3.76289916039
theta: 3.1232073307
speed: 9.7007484436
id: 0
t: 329
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:329




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -113.092674255
y: 3.76289916039
theta: 3.1232073307
speed: 9.7007484436
id: 0
t: 329
xxx after update is x: -112.605300903
y: 3.21465492249
theta: 3.17531442642
speed: 9.61430358887
id: 0
t: 330
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:330




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -112.605300903
y: 3.21465492249
theta: 3.17531442642
speed: 9.61430358887
id: 0
t: 330
xxx after update is x: -113.804901123
y: 2.94367933273
theta: 3.17654705048
speed: 9.45798301697
id: 0
t: 331
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function3, 12.103254318237305)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:320




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:321


222 self.state_dicts[msg.id][msg.t] is (-108.94943237304688, 3.5662941932678223, 3.296135663986206, 11.436759948730469)
222 self.state_dicts[msg.id][msg.t] is (-110.09349060058594, 3.305417060852051, 3.099647283554077, 11.287907600402832)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:322


222 self.state_dicts[msg.id][msg.t] is (-110.01280212402344, 2.8127548694610596, 3.179490804672241, 11.338048934936523)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:323


222 self.state_dicts[msg.id][msg.t] is (-109.83776092529297, 3.5828826427459717, 3.176081418991089, 10.843544960021973)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:324


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:325


222 self.state_dicts[msg.id][msg.t] is (-111.41070556640625, 3.4079692363739014, 3.0485072135925293, 10.917686462402344)
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '10', 'Sender': '0', 'TagID': '1', 'Time': '14.4444444444', 'Position': ['(-111.41070556640625', ' 3.4079692363739014', ' 3.0485072135925293)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,14.4444444444,(-111.41070556640625, 3.4079692363739014, 3.0485072135925293),10,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




222 self.state_dicts[msg.id][msg.t] is (-110.85563659667969, 3.232923746109009, 3.1143839359283447, 10.345288276672363)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:326


222 self.state_dicts[msg.id][msg.t] is (-111.61647033691406, 3.1043663024902344, 3.0511035919189453, 10.297736167907715)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:327




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:328


222 self.state_dicts[msg.id][msg.t] is (-111.99211120605469, 2.6006839275360107, 3.156902313232422, 10.259807586669922)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:329


222 self.state_dicts[msg.id][msg.t] is (-113.0926742553711, 3.762899160385132, 3.1232073307037354, 9.700748443603516)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:330


222 self.state_dicts[msg.id][msg.t] is (-112.60530090332031, 3.2146549224853516, 3.175314426422119, 9.614303588867188)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:331


222 self.state_dicts[msg.id][msg.t] is (-113.80490112304688, 2.9436793327331543, 3.176547050476074, 9.457983016967773)


going to the update function
sim.py in the sim.py update function  
in spin function, finish the n times spin:331




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -113.804901123
y: 2.94367933273
theta: 3.17654705048
speed: 9.45798301697
id: 0
t: 331
xxx after update is x: -114.449035645
y: 2.6837515831
theta: 3.0969953537
speed: 8.60212612152
id: 0
t: 332
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:332


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.7555555556






self.maneuver_requested left
RELEASE,0,14.7555555556,(-114.44903564453125, 2.6837515830993652, 3.0969953536987305),8,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 14.7555555556
self.communication_details == 0
sending RELEASE,0,14.7555555556,(-114.44903564453125, 2.6837515830993652, 3.0969953536987305),8,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -114.449035645
y: 2.6837515831
theta: 3.0969953537
speed: 8.60212612152
id: 0
t: 332
xxx after update is x: -114.722442627
y: 2.99262619019
theta: 3.30994939804
speed: 8.40962409973
id: 0
t: 333
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:333




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -114.722442627
y: 2.99262619019
theta: 3.30994939804
speed: 8.40962409973
id: 0
t: 333
xxx after update is x: -114.646644592
y: 3.44669103622
theta: 3.27175331116
speed: 8.48898601532
id: 0
t: 334
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:334




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -114.646644592
y: 3.44669103622
theta: 3.27175331116
speed: 8.48898601532
id: 0
t: 334
xxx after update is x: -114.979202271
y: 3.6549282074
theta: 3.29986834526
speed: 8.23681545258
id: 0
t: 335
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:335




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -114.979202271
y: 3.6549282074
theta: 3.29986834526
speed: 8.23681545258
id: 0
t: 335
xxx after update is x: -115.674545288
y: 2.53828930855
theta: 3.04924559593
speed: 7.64185762405
id: 0
t: 336
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:336




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -115.674545288
y: 2.53828930855
theta: 3.04924559593
speed: 7.64185762405
id: 0
t: 336
xxx after update is x: -115.377006531
y: 3.7070274353
theta: 3.15301179886
speed: 7.4866900444
id: 0
t: 337
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:337




going to the update function
sim.py in the sim.py update f
leave the update function 
in spin function, finish the n times spin:332


222 self.state_dicts[msg.id][msg.t] is (-114.44903564453125, 2.6837515830993652, 3.0969953536987305, 8.602126121520996)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '8', 'Sender': '0', 'TagID': '1', 'Time': '14.7555555556', 'Position': ['(-114.44903564453125', ' 2.6837515830993652', ' 3.0969953536987305)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,14.7555555556,(-114.44903564453125, 2.6837515830993652, 3.0969953536987305),8,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:333


222 self.state_dicts[msg.id][msg.t] is (-114.72244262695312, 2.992626190185547, 3.3099493980407715, 8.409624099731445)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:334


222 self.state_dicts[msg.id][msg.t] is (-114.64664459228516, 3.4466910362243652, 3.2717533111572266, 8.488986015319824)
222 self.state_dicts[msg.id][msg.t] is (-114.97920227050781, 3.654928207397461, 3.29986834526062, 8.236815452575684)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:335


222 self.state_dicts[msg.id][msg.t] is (-115.67454528808594, 2.5382893085479736, 3.049245595932007, 7.641857624053955)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:336


222 self.state_dicts[msg.id][msg.t] is (-115.37700653076172, 3.7070274353027344, 3.1530117988586426, 7.486690044403076)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:337




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:338


222 self.state_dicts[msg.id][msg.t] is (-115.68118286132812, 3.2035152912139893, 3.263885021209717, 7.363379001617432)
222 self.state_dicts[msg.id][msg.t] is (-115.970947265625, 3.0375590324401855, 2.9870898723602295, 6.655315399169922)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:339


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:340


222 self.state_dicts[msg.id][msg.t] is (-116.6596450805664, 3.3037631511688232, 3.148494005203247, 6.822627067565918)
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '6', 'Sender': '0', 'TagID': '1', 'Time': '15.1111111111', 'Position': ['(-116.6596450805664', ' 3.3037631511688232', ' 3.148494005203247)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,15.1111111111,(-116.6596450805664, 3.3037631511688232, 3.148494005203247),6,1,3.28888888889,0 unction 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -115.377006531
y: 3.7070274353
theta: 3.15301179886
speed: 7.4866900444
id: 0
t: 337
xxx after update is x: -115.681182861
y: 3.20351529121
theta: 3.26388502121
speed: 7.36337900162
id: 0
t: 338
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:338




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -115.681182861
y: 3.20351529121
theta: 3.26388502121
speed: 7.36337900162
id: 0
t: 338
xxx after update is x: -115.970947266
y: 3.03755903244
theta: 2.98708987236
speed: 6.65531539917
id: 0
t: 339
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:339




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -115.970947266
y: 3.03755903244
theta: 2.98708987236
speed: 6.65531539917
id: 0
t: 339
xxx after update is x: -116.659645081
y: 3.30376315117
theta: 3.1484940052
speed: 6.82262706757
id: 0
t: 340
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:340


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 15.1111111111






self.maneuver_requested left
RELEASE,0,15.1111111111,(-116.6596450805664, 3.3037631511688232, 3.148494005203247),6,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 15.1111111111
self.communication_details == 0
sending RELEASE,0,15.1111111111,(-116.6596450805664, 3.3037631511688232, 3.148494005203247),6,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -116.659645081
y: 3.30376315117
theta: 3.1484940052
speed: 6.82262706757
id: 0
t: 340
xxx after update is x: -116.404335022
y: 3.35492014885
theta: 3.27108693123
speed: 6.06762170792
id: 0
t: 341
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:341




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -116.404335022
y: 3.35492014885
theta: 3.27108693123
speed: 6.06762170792
id: 0
t: 341
xxx after update is x: -116.708175659
y: 3.71731305122
theta: 3.154078722
speed: 6.12512683868
id: 0
t: 342
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:342




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -116.708175659
y: 3.71731305122
theta: 3.154078722
speed: 6.12512683868
id: 0
t: 342
xxx after update is x: -117.643798828
y: 3.19487309456
theta: 3.16240620613
speed: 5.56932115555
id: 0
t: 343
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:343




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -117.643798828
y: 3.19487309456
theta: 3.16240620613
speed: 5.56932115555
id: 0
t: 343
xxx after update is x: -117.13419342
y: 2.85529232025
theta: 3.21664977074
speed: 5.74594402313
id: 0
t: 344
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:344




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -117.13419342
y: 2.85529232025
theta: 3.21664977074
speed: 5.74594402313
id: 0
t: 344
xxx after update is x: -117.729736328
y: 3.30860304832
theta: 3.22724676132
speed: 5.49458408356
id: 0
t: 345
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:345




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -117.729736328
y: 3.30860304832
theta: 3.22724676132
speed: 5.49458408356
id: 0
t: 345
xxx after update is x: -118.022819519
y: 2.70085382462
theta: 3.24123382568
speed: 5.12852907181
id: 0
t: 346
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:346




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -118.022819519
y: 2.70085382462
theta: 3.24123382568
speed: 5.12852907181
id: 0
t: 346
xxx after update is x: -118.322120667
y: 3.79246163368
theta: 3.09548425674
speed: 4.66902160645
id: 0
t: 347
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:347


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 15.4222222222






self.maneuver_requested left
RELEASE,0,15.4222222222,(-118.3221206665039, 3.792461633682251, 3.0954842567443848),4,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 15.4222222222
self.communication_details == 0
sending RELEASE,0,15.4222222222,(-118.3221206665039, 3.792461633682251, 3.0954842567443848),4,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -118.322120667
y: 3.79246163368
theta: 3.09548425674
speed: 4.66902160645
id: 0
t: 347
xxx after update is x: -118.692733765
y: 3.55282115936
theta: 3.17079591751
speed: 4.54448080063
id: 0
t: 348
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:348




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -118.692733765
y: 3.55282115936
theta: 3.17079591751
speed: 4.54448080063
id: 0
t: 348
xxx after update is x: -118.845153809
y: 3.62929201126
theta: 3.04705619812
speed: 4.50475978851
id: 0
t: 349
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:349




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -118.845153809
y: 3.62929201126
theta: 3.04705619812
speed: 4from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




222 self.state_dicts[msg.id][msg.t] is (-116.40433502197266, 3.3549201488494873, 3.2710869312286377, 6.06762170791626)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:341


222 self.state_dicts[msg.id][msg.t] is (-116.70817565917969, 3.717313051223755, 3.154078722000122, 6.125126838684082)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:342




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:343


222 self.state_dicts[msg.id][msg.t] is (-117.643798828125, 3.194873094558716, 3.1624062061309814, 5.569321155548096)
222 self.state_dicts[msg.id][msg.t] is (-117.13419342041016, 2.855292320251465, 3.2166497707366943, 5.745944023132324)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:344


222 self.state_dicts[msg.id][msg.t] is (-117.729736328125, 3.308603048324585, 3.2272467613220215, 5.494584083557129)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:345




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:346


222 self.state_dicts[msg.id][msg.t] is (-118.02281951904297, 2.7008538246154785, 3.2412338256835938, 5.128529071807861)
222 self.state_dicts[msg.id][msg.t] is (-118.3221206665039, 3.792461633682251, 3.0954842567443848, 4.6690216064453125)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:347


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '4', 'Sender': '0', 'TagID': '1', 'Time': '15.4222222222', 'Position': ['(-118.3221206665039', ' 3.792461633682251', ' 3.0954842567443848)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,15.4222222222,(-118.3221206665039, 3.792461633682251, 3.0954842567443848),4,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:348


222 self.state_dicts[msg.id][msg.t] is (-118.69273376464844, 3.552821159362793, 3.1707959175109863, 4.544480800628662)
222 self.state_dicts[msg.id][msg.t] is (-118.84515380859375, 3.6292920112609863, 3.047056198120117, 4.504759788513184)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:349




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:350


222 self.state_dicts[msg.id][msg.t] is (-119.1977310180664, 3.295280694961548, 3.1395015716552734, 4.211215019226074)
222 self.state_dicts[msg.id][msg.t] is (-119.40599060058594, 3.409257173538208, 3.2000997066497803, 3.6833035945892334)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:351




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:3.50475978851
id: 0
t: 349
xxx after update is x: -119.197731018
y: 3.29528069496
theta: 3.13950157166
speed: 4.21121501923
id: 0
t: 350
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:350




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -119.197731018
y: 3.29528069496
theta: 3.13950157166
speed: 4.21121501923
id: 0
t: 350
xxx after update is x: -119.405990601
y: 3.40925717354
theta: 3.20009970665
speed: 3.68330359459
id: 0
t: 351
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:351




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -119.405990601
y: 3.40925717354
theta: 3.20009970665
speed: 3.68330359459
id: 0
t: 351
xxx after update is x: -119.701370239
y: 2.89697432518
theta: 3.1644012928
speed: 3.39397859573
id: 0
t: 352
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:352




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -119.701370239
y: 2.89697432518
theta: 3.1644012928
speed: 3.39397859573
id: 0
t: 352
xxx after update is x: -119.666259766
y: 2.53936314583
theta: 3.05817508698
speed: 3.28227591515
id: 0
t: 353
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:353




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -119.666259766
y: 2.53936314583
theta: 3.05817508698
speed: 3.28227591515
id: 0
t: 353
xxx after update is x: -119.3801651
y: 3.16548204422
theta: 3.09211373329
speed: 3.02316570282
id: 0
t: 354
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:354




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -119.3801651
y: 3.16548204422
theta: 3.09211373329
speed: 3.02316570282
id: 0
t: 354
xxx after update is x: -120.400253296
y: 3.11548423767
theta: 3.16081571579
speed: 3.06983709335
id: 0
t: 355
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:355


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 15.7777777778






self.maneuver_requested left
RELEASE,0,15.7777777778,(-120.40025329589844, 3.1154842376708984, 3.160815715789795),3,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 15.7777777778
self.communication_details == 0
sending RELEASE,0,15.7777777778,(-120.40025329589844, 3.1154842376708984, 3.160815715789795),3,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.400253296
y: 3.11548423767
theta: 3.16081571579
speed: 3.06983709335
id: 0
t: 355
xxx after update is x: -120.413459778
y: 3.34935379028
theta: 3.11496162415
speed: 252


222 self.state_dicts[msg.id][msg.t] is (-119.70137023925781, 2.8969743251800537, 3.1644012928009033, 3.3939785957336426)
222 self.state_dicts[msg.id][msg.t] is (-119.666259765625, 2.539363145828247, 3.0581750869750977, 3.282275915145874)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:353


222 self.state_dicts[msg.id][msg.t] is (-119.38016510009766, 3.1654820442199707, 3.092113733291626, 3.023165702819824)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:354


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-120.40025329589844, 3.1154842376708984, 3.160815715789795, 3.0698370933532715)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:355


Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '3', 'Sender': '0', 'TagID': '1', 'Time': '15.7777777778', 'Position': ['(-120.40025329589844', ' 3.1154842376708984', ' 3.160815715789795)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,15.7777777778,(-120.40025329589844, 3.1154842376708984, 3.160815715789795),3,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




222 self.state_dicts[msg.id][msg.t] is (-120.41345977783203, 3.349353790283203, 3.114961624145508, 2.681654214859009)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:356




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:357


222 self.state_dicts[msg.id][msg.t] is (-119.56338500976562, 3.171063184738159, 3.2911059856414795, 1.9635422229766846)
222 self.state_dicts[msg.id][msg.t] is (-120.1108169555664, 2.971285581588745, 3.100491523742676, 1.9556621313095093)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:358




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:359


222 self.state_dicts[msg.id][msg.t] is (-120.47434997558594, 3.0754454135894775, 3.213977098464966, 1.657150387763977)
222 self.state_dicts[msg.id][msg.t] is (-120.26316833496094, 3.3485212326049805, 3.07332706451416, 1.1899584531784058)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:360


222 self.state_dicts[msg.id][msg.t] is (-120.30187225341797, 3.1427483558654785, 3.118394136428833, 1.0904877185821533)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:361


222 self.state_dicts[msg.id][msg.t] is (-120.08503723144531, 3.231635332107544, 3.210554838180542, 0.8706842660903931)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:362


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py m.68165421486
id: 0
t: 356
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:356




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.413459778
y: 3.34935379028
theta: 3.11496162415
speed: 2.68165421486
id: 0
t: 356
xxx after update is x: -119.56338501
y: 3.17106318474
theta: 3.29110598564
speed: 1.96354222298
id: 0
t: 357
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:357




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -119.56338501
y: 3.17106318474
theta: 3.29110598564
speed: 1.96354222298
id: 0
t: 357
xxx after update is x: -120.110816956
y: 2.97128558159
theta: 3.10049152374
speed: 1.95566213131
id: 0
t: 358
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:358




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.110816956
y: 2.97128558159
theta: 3.10049152374
speed: 1.95566213131
id: 0
t: 358
xxx after update is x: -120.474349976
y: 3.07544541359
theta: 3.21397709846
speed: 1.65715038776
id: 0
t: 359
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:359




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.474349976
y: 3.07544541359
theta: 3.21397709846
speed: 1.65715038776
id: 0
t: 359
xxx after update is x: -120.263168335
y: 3.3485212326
theta: 3.07332706451
speed: 1.18995845318
id: 0
t: 360
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:360




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.263168335
y: 3.3485212326
theta: 3.07332706451
speed: 1.18995845318
id: 0
t: 360
xxx after update is x: -120.301872253
y: 3.14274835587
theta: 3.11839413643
speed: 1.09048771858
id: 0
t: 361
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:361




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.301872253
y: 3.14274835587
theta: 3.11839413643
speed: 1.09048771858
id: 0
t: 361
xxx after update is x: -120.085037231
y: 3.23163533211
theta: 3.21055483818
speed: 0.87068426609
id: 0
t: 362
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:362


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 16.0888888889






self.maneuver_requested left
RELEASE,0,16.0888888889,(-120.08503723144531, 3.231635332107544, 3.210554838180542),0,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 16.0888888889
self.communication_details == 0
sending RELEASE,0,16.0888888889,(-120.08503723144531, 3.231635332107544, 3.210554838180542),0,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.085037231
y: 3.23163533211
theta: 3.21055483818
speed: 0.87068426609
id: 0
t: 362
xxx after update is x: -119.886886597
y: 3.36582231522
theta: 3.17689752579
speed: 0.260475099087
id: 0
t: 363
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:363




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -119.886886597
y: 3.36582231522
theta: 3.17689752579
speed: 0.260475099087
id: 0
t: 363
xxx after update is x: -120.139831543
y: 3.49944353104
theta: 3.24530911446
speed: 0.410084486008
id: 0
t: 364
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:364




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.139831543
y: 3.49944353104
theta: 3.24530911446
speed: 0.410084486008
id: 0
t: 364
xxx after update is x: -120.369430542
y: 3.46063232422
theta: 3.26913166046
speed: -0.00824387837201
id: 0
t: 365
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:365




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.369430542
y: 3.46063232422
theta: 3.26913166046
speed: -0.00824387837201
id: 0
t: 365
xxx after update is x: -120.538963318
y: 3.00326299667
theta: 3.15686416626
speed: -0.0769213810563
id: 0
t: 366
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:366




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.538963318
y: 3.00326299667
theta: 3.15686416626
speed: -0.0769213810563
id: 0
t: 366
xxx after update is x: -120.559501648
y: 3.65524435043
theta: 3.12111926079
speed: -0.349002182484
id: 0
t: 367
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:367




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.559501648
y: 3.65524435043
theta: 3.12111926079
speed: -0.349002182484
id: 0
t: 367
xxx after update is x: -120.731689453
y: 3.54480481148
theta: 3.07933831215
speed: 0.478541612625
id: 0
t: 368
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:368




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.731689453
y: 3.54480481148
theta: 3.07933831215
speed: 0.478541612625
id: 0
t: 368
xxx after update is x: -120.712265015
y: 3.32179617882
theta: 3.16728496552
speed: -0.0777212157845
id: 0
t: 369
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:369




going to the update function
sim.py inessage_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '16.0888888889', 'Position': ['(-120.08503723144531', ' 3.231635332107544', ' 3.210554838180542)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,16.0888888889,(-120.08503723144531, 3.231635332107544, 3.210554838180542),0,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:363


222 self.state_dicts[msg.id][msg.t] is (-119.88688659667969, 3.3658223152160645, 3.1768975257873535, 0.2604750990867615)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:364


222 self.state_dicts[msg.id][msg.t] is (-120.13983154296875, 3.499443531036377, 3.2453091144561768, 0.41008448600769043)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:365


222 self.state_dicts[msg.id][msg.t] is (-120.36943054199219, 3.46063232421875, 3.269131660461426, -0.008243878372013569)
222 self.state_dicts[msg.id][msg.t] is (-120.5389633178711, 3.003262996673584, 3.1568641662597656, -0.07692138105630875)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:366


222 self.state_dicts[msg.id][msg.t] is (-120.55950164794922, 3.6552443504333496, 3.121119260787964, -0.3490021824836731)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:367




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:368


222 self.state_dicts[msg.id][msg.t] is (-120.731689453125, 3.544804811477661, 3.079338312149048, 0.47854161262512207)
222 self.state_dicts[msg.id][msg.t] is (-120.71226501464844, 3.321796178817749, 3.1672849655151367, -0.07772121578454971)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:369


222 self.state_dicts[msg.id][msg.t] is (-120.81666564941406, 3.2408087253570557, 3.057021141052246, 0.202055886387825)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:370


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '16.4444444444', 'Position': ['(-120.81666564941406', ' 3.2408087253570557', ' 3.057021141052246)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,16.4444444444,(-120.81666564941406, 3.2408087253570557, 3.057021141052246),0,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:371


222 self.state_dicts[msg.id][msg.t] is (-120.57425689697266, 3.4566497802734375, 3.1307103633880615, -0.15011155605316162)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:372


222 self.state_dicts[msg.id][msg.t] is (-120 the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.712265015
y: 3.32179617882
theta: 3.16728496552
speed: -0.0777212157845
id: 0
t: 369
xxx after update is x: -120.816665649
y: 3.24080872536
theta: 3.05702114105
speed: 0.202055886388
id: 0
t: 370
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:370


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 16.4444444444






self.maneuver_requested left
RELEASE,0,16.4444444444,(-120.81666564941406, 3.2408087253570557, 3.057021141052246),0,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 16.4444444444
self.communication_details == 0
sending RELEASE,0,16.4444444444,(-120.81666564941406, 3.2408087253570557, 3.057021141052246),0,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.816665649
y: 3.24080872536
theta: 3.05702114105
speed: 0.202055886388
id: 0
t: 370
xxx after update is x: -120.574256897
y: 3.45664978027
theta: 3.13071036339
speed: -0.150111556053
id: 0
t: 371
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:371




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.574256897
y: 3.45664978027
theta: 3.13071036339
speed: -0.150111556053
id: 0
t: 371
xxx after update is x: -120.482147217
y: 2.87656855583
theta: 3.27197694778
speed: -0.0033539023716
id: 0
t: 372
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:372




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.482147217
y: 2.87656855583
theta: 3.27197694778
speed: -0.0033539023716
id: 0
t: 372
xxx after update is x: -120.765182495
y: 3.07890486717
theta: 3.28836750984
speed: -0.0343853756785
id: 0
t: 373
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:373




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.765182495
y: 3.07890486717
theta: 3.28836750984
speed: -0.0343853756785
id: 0
t: 373
xxx after update is x: -120.973197937
y: 3.21462965012
theta: 3.13327026367
speed: -0.0544735640287
id: 0
t: 374
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:374




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.973197937
y: 3.21462965012
theta: 3.13327026367
speed: -0.0544735640287
id: 0
t: 374
xxx after update is x: -120.582557678
y: 3.88759088516
theta: 3.0886387825
speed: 0.0895444154739
id: 0
t: 375
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:375




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.582557678
y: 3.88759088516
theta: 3.0886387825
speed: 0.0895444154739
id: 0
t: 375
xxx after update is x: -121.094322205
y: 3.14631390572
theta: 3.11463594437
speed: -0.134103357792
id: 0
t: 376
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:376




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -121.094322205
y: 3.14631390572
theta: 3.11463594437
speed: -0.134103357792
id: 0
t: 376
xxx after update is x: -120.582443237
y: 3.57294249535
theta: 3.43424081802
speed: -0.0256495065987
id: 0
t: 377
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:377




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.582443237
y: 3.57294249535
theta: 3.43424081802
speed: -0.0256495065987
id: 0
t: 377
xxx after update is x: -120.581230164
y: 3.28780937195
theta: 3.08309364319
speed: 0.0913653150201
id: 0
t: 378
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:378


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 16.8






self.maneuver_requested left
RELEASE,0,16.8,(-120.58123016357422, 3.287809371948242, 3.0830936431884766),0,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 16.8
self.communication_details == 0
sending RELEASE,0,16.8,(-120.58123016357422, 3.287809371948242, 3.0830936431884766),0,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.581230164
y: 3.28780937195
theta: 3.08309364319
speed: 0.0913653150201
id: 0
t: 378
xxx after update is x: -119.922714233
y: 3.06917381287
theta: 3.14091658592
speed: -0.0296230260283
id: 0
t: 379
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:379




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -119.922714233
y: 3.06917381287
theta: 3.14091658592
speed: -0.0296230260283
id: 0
t: 379
xxx after update is x: -120.885040283
y: 2.71314811707
theta: 3.04763221741
speed: -0.139741331339
id: 0
t: 380
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:380




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.885040283
y: 2.71314811707
theta: 3.04763221741
speed: -0.139741331339
id: 0
t: 380
xxx after update is x: -121.015617371
y: 2.87895774841
theta: 3.30454206467
speed: 0.0281135551631
id: 0
t: 381
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:381




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiii.48214721679688, 2.876568555831909, 3.271976947784424, -0.0033539023716002703)
222 self.state_dicts[msg.id][msg.t] is (-120.76518249511719, 3.078904867172241, 3.288367509841919, -0.034385375678539276)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:373


222 self.state_dicts[msg.id][msg.t] is (-120.97319793701172, 3.214629650115967, 3.133270263671875, -0.05447356402873993)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:374




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:375


222 self.state_dicts[msg.id][msg.t] is (-120.58255767822266, 3.8875908851623535, 3.0886387825012207, 0.08954441547393799)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:376


222 self.state_dicts[msg.id][msg.t] is (-121.09432220458984, 3.1463139057159424, 3.114635944366455, -0.13410335779190063)
222 self.state_dicts[msg.id][msg.t] is (-120.58244323730469, 3.5729424953460693, 3.4342408180236816, -0.025649506598711014)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:377


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:378


222 self.state_dicts[msg.id][msg.t] is (-120.58123016357422, 3.287809371948242, 3.0830936431884766, 0.09136531502008438)
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '16.8', 'Position': ['(-120.58123016357422', ' 3.287809371948242', ' 3.0830936431884766)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,16.8,(-120.58123016357422, 3.287809371948242, 3.0830936431884766),0,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:379


222 self.state_dicts[msg.id][msg.t] is (-119.92271423339844, 3.069173812866211, 3.140916585922241, -0.02962302602827549)
222 self.state_dicts[msg.id][msg.t] is (-120.88504028320312, 2.7131481170654297, 3.0476322174072266, -0.13974133133888245)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:380


222 self.state_dicts[msg.id][msg.t] is (-121.01561737060547, 2.878957748413086, 3.304542064666748, 0.028113555163145065)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:381


222 self.state_dicts[msg.id][msg.t] is (-120.7610855102539, 2.9877681732177734, 3.090566873550415, 0.01717212237417698)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:382




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:383


222 self.state_dicts[msg.id][msg.t] is (-120.82469177246094, 3.7374606132507324, 3.1102020740509033, -0.03949538245797157)
222 self.state_dicts[msg.id][msg.t] is (-120.2771224975586, 3.6177661418914795, 2.984548807144165, 0.27955931425094604)


going to the update function
sim.iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -121.015617371
y: 2.87895774841
theta: 3.30454206467
speed: 0.0281135551631
id: 0
t: 381
xxx after update is x: -120.76108551
y: 2.98776817322
theta: 3.09056687355
speed: 0.0171721223742
id: 0
t: 382
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:382




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.76108551
y: 2.98776817322
theta: 3.09056687355
speed: 0.0171721223742
id: 0
t: 382
xxx after update is x: -120.824691772
y: 3.73746061325
theta: 3.11020207405
speed: -0.039495382458
id: 0
t: 383
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:383




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.824691772
y: 3.73746061325
theta: 3.11020207405
speed: -0.039495382458
id: 0
t: 383
xxx after update is x: -120.277122498
y: 3.61776614189
theta: 2.98454880714
speed: 0.279559314251
id: 0
t: 384
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:384




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.277122498
y: 3.61776614189
theta: 2.98454880714
speed: 0.279559314251
id: 0
t: 384
xxx after update is x: -120.738578796
y: 3.37345981598
theta: 3.07583093643
speed: 0.0663842484355
id: 0
t: 385
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:385


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 17.1111111111






self.maneuver_requested left
RELEASE,0,17.1111111111,(-120.73857879638672, 3.373459815979004, 3.0758309364318848),0,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 17.1111111111
self.communication_details == 0
sending RELEASE,0,17.1111111111,(-120.73857879638672, 3.373459815979004, 3.0758309364318848),0,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.738578796
y: 3.37345981598
theta: 3.07583093643
speed: 0.0663842484355
id: 0
t: 385
xxx after update is x: -120.615478516
y: 3.36644387245
theta: 3.14306116104
speed: -0.259771734476
id: 0
t: 386
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:386




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.615478516
y: 3.36644387245
theta: 3.14306116104
speed: -0.259771734476
id: 0
t: 386
xxx after update is x: -120.584785461
y: 3.26147341728
theta: 3.06010317802
speed: 0.0736295133829
id: 0
t: 387
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:387




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiipy in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:384


222 self.state_dicts[msg.id][msg.t] is (-120.73857879638672, 3.373459815979004, 3.0758309364318848, 0.06638424843549728)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:385


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '17.1111111111', 'Position': ['(-120.73857879638672', ' 3.373459815979004', ' 3.0758309364318848)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,17.1111111111,(-120.73857879638672, 3.373459815979004, 3.0758309364318848),0,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:386


222 self.state_dicts[msg.id][msg.t] is (-120.615478515625, 3.3664438724517822, 3.1430611610412598, -0.2597717344760895)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:387


222 self.state_dicts[msg.id][msg.t] is (-120.58478546142578, 3.2614734172821045, 3.060103178024292, 0.07362951338291168)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:388


222 self.state_dicts[msg.id][msg.t] is (-120.40946197509766, 3.361853837966919, 3.182166814804077, 0.11139176785945892)
222 self.state_dicts[msg.id][msg.t] is (-119.96382904052734, 3.122854232788086, 3.1655406951904297, -0.2641242444515228)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:389


222 self.state_dicts[msg.id][msg.t] is (-120.28077697753906, 2.8582472801208496, 3.1917107105255127, 0.29342585802078247)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:390


222 self.state_dicts[msg.id][msg.t] is (-120.38587951660156, 3.360341787338257, 3.3421201705932617, -0.33622610569000244)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:391




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:392


222 self.state_dicts[msg.id][msg.t] is (-120.3495864868164, 2.656662940979004, 2.990541696548462, -0.16602852940559387)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '17.4222222222', 'Position': ['(-120.3495864868164', ' 2.656662940979004', ' 2.990541696548462)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,17.4222222222,(-120.3495864868164, 2.656662940979004, 2.990541696548462),0,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:393


iiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.584785461
y: 3.26147341728
theta: 3.06010317802
speed: 0.0736295133829
id: 0
t: 387
xxx after update is x: -120.409461975
y: 3.36185383797
theta: 3.1821668148
speed: 0.111391767859
id: 0
t: 388
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:388




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.409461975
y: 3.36185383797
theta: 3.1821668148
speed: 0.111391767859
id: 0
t: 388
xxx after update is x: -119.963829041
y: 3.12285423279
theta: 3.16554069519
speed: -0.264124244452
id: 0
t: 389
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:389




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -119.963829041
y: 3.12285423279
theta: 3.16554069519
speed: -0.264124244452
id: 0
t: 389
xxx after update is x: -120.280776978
y: 2.85824728012
theta: 3.19171071053
speed: 0.293425858021
id: 0
t: 390
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:390




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.280776978
y: 2.85824728012
theta: 3.19171071053
speed: 0.293425858021
id: 0
t: 390
xxx after update is x: -120.385879517
y: 3.36034178734
theta: 3.34212017059
speed: -0.33622610569
id: 0
t: 391
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:391




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -120.385879517
y: 3.36034178734
theta: 3.34212017059
speed: -0.33622610569
id: 0
t: 391
xxx after update is x: -120.349586487
y: 2.65666294098
theta: 2.99054169655
speed: -0.166028529406
id: 0
t: 392
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:392


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 17.4222222222






self.maneuver_requested left
RELEASE,0,17.4222222222,(-120.3495864868164, 2.656662940979004, 2.990541696548462),0,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 17.4222222222
self.communication_details == 0
sending RELEASE,0,17.4222222222,(-120.3495864868164, 2.656662940979004, 2.990541696548462),0,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:393


... logging to /home/lu/.ros/log/fb78f3e0-0e8b-11e9-bb7c-000c291801fc/roslaunch-ubuntu-11328.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch
[1mstarted roslaunch server http://ubuntu:38731/[0m

SUMMARY
========

PARAMETERS
 * /enable_negotiator: True
 * /file_prefix: 
 * /nr_cars: 2
 * /plot: False
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /save: False

NODES
  /
    car0 (virtual_blinker/sim.py)
    car1 (virtual_blinker/sim.py)
    cloud (virtual_blinker/cloud.py)
    rviz (rviz/rviz)
    visualization (virtual_blinker/visualization.py)

auto-starting new master
[1mprocess[master]: started with pid [11338][0m
[1mROS_MASTER_URI=http://localhost:11311[0m
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch http://localhost:11311
[1msetting /run_id to fb78f3e0-0e8b-11e9-bb7c-000c291801fc[0m
[1mprocess[rosout-1]: started with pid [11351][0m
started core service [/rosout]
[1mprocess[visualization-2]: started with pid [11368][0m
[1mprocess[rviz-3]: started with pid [11369][0m
[1mprocess[car0-4]: started with pid [11370][0m
[1mprocess[car1-5]: started with pid [11371][0m
[1mprocess[cloud-6]: started with pid [11372][0m
[cloud-6] killing on exit
[car1-5] killing on exit
[car0-4] killing on exit
[rviz-3] killing on exit
[visualization-2] killing on exit
[rosout-1] killing on exit
[master] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
[1mdone[0m
