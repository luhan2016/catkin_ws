sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 1
s is car_state0
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.0758340358734


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
222 self.state_dicts[msg.id][msg.t] is (3.4175281524658203, -64.6968994140625, 1.5376768112182617, 13.911532402038574)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
leave the update function 
in spin function, finish the n times spin:1


self.intersection <utils.Intersection.Intersection instance at 0x7f4461273830>


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:2


self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f446128fc20>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:3


maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9001)
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (3.4783365726470947, -63.17268371582031, 1.5090848207473755, 13.658876419067383)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:4




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:5


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: -3.27457618713
y: 71.7454681396
theta: 4.89565372467
speed: 13.7968273163
id: 1
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: -3.27457618713
y: 71.7454681396
theta: 4.89565372467
speed: 13.7968273163
id: 1
t: 5
xxx after update is x: -2.71541333199
y: 71.4772262573
theta: 4.67976903915
speed: 14.091881752
id: 1
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:7


xxx before update is x: -2.71541333199
y: 71.4772262573
theta: 4.67976903915
speed: 14.091881752
id: 1
t: 6
xxx after update is x: -3.68866348267
y: 70.5565948486
theta: 4.68014383316
speed: 13.8653039932
id: 1
t: 7
maneuver_negotiatir.py finish the update agent state from sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 0
s is car_state1
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.0873510837555


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:1


222 self.state_dicts[msg.id][msg.t] is (-3.0233514308929443, 74.25930786132812, 4.711402893066406, 14.057269096374512)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7f029a9346c8>
self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f029a94f440>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:2


maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (-3.8267550468444824, 74.03362274169922, 4.718294620513916, 14.094693183898926)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9000)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:3




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:4




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:5


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: 3.5843565464
y: -61.9931411743
theta: 1.51077306271
speed: 14.2112035751
id: 0
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: 3.5843565464
y: -61.9931411743
theta: 1.51077306271
speed: 14.2112035751
id: 0
t: 5
xxx after update is x: 3.22913479805
y: -60.6972999573
theta: 1.62803912163
speed: 13.9647541046
id: 0
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:7


xxx before update is x: 3.22913479805
y: -60.6972999573
theta: 1.62803912163
speed: 13.9647541046
id: 0
t: 6
xxx after update is x: 3.38127470016
y: -60.3614845276
theta: 1.64523804188
speed: 14.0492162704
id: 0
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: -3.68866348267
y: 70.5565948486
theta: 4.68014383316
speed: 13.8653039932
id: 1
t: 7
xxx after update is x: -3.11521315575
y: 69.5849533081
theta: 4.75143051147
speed: 14.1820211411
id: 1
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: -3.11521315575
y: 69.5849533081
theta: 4.75143051147
speed: 14.1820211411
id: 1
t: 8
xxx after update is x: -3.7237637043
y: 69.3323287964
theta: 4.78856468201
speed: 13.8941869736
id: 1
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: -3.7237637043
y: 69.3323287964
theta: 4.78856468201
speed: 13.8941869736
id: 1
t: 9
xxx after update is x: -3.36733579636
y: 68.7791061401
theta: 4.74514818192
speed: 13.5102529526
id: 1
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.444444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: -3.36733579636
y: 68.7791061401
theta: 4.74514818192
speed: 13.5102529526
id: 1
t: 10
xxx after update is x: -3.22005176544
y: 68.1640090942
theta: 4.60350036621
speed: 13.4334468842
id: 1
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.39185711512412047, 0.2168614207557584]
222 self.state_dicts[msg.id][msg.t] is (3.3508245944976807, -58.242427825927734, 1.6858277320861816, 13.68508243560791)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: -3.22005176544
y: 68.1640090942
theta: 4.60350036621
speed: 13.4334468842
id: 1
t: 11
xxx after update is x: -3.20267939568
y: 67.365737915
theta: 4.59776830673
speed: 13.7511711121
id: 1
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.20267939568
y: 67.365737915
theta: 4.59776830673
speed: 13.7511711121
id: 1
t: 12
xxx after update is x: -2.85381221771
y: 67.0616073608
theta: 4.92554473877
speed: 13.8891143799
id: 1
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:13




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: -2.85381221771
y: 67.0616073608
theta: 4.92554473877
speed: 13.8891143799
id: 1
t: 13
xxx after update is x: -3.7073328495
y: 66.457824707
theta: 4.67079305649
speed: 13.7495832443
id: 1
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:15


xxx before uxx
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: 3.38127470016
y: -60.3614845276
theta: 1.64523804188
speed: 14.0492162704
id: 0
t: 7
xxx after update is x: 3.63202095032
y: -60.7328948975
theta: 1.40799820423
speed: 14.0993108749
id: 0
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: 3.63202095032
y: -60.7328948975
theta: 1.40799820423
speed: 14.0993108749
id: 0
t: 8
xxx after update is x: 3.02453160286
y: -59.6986465454
theta: 1.48593688011
speed: 13.9257564545
id: 0
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.4






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: 3.02453160286
y: -59.6986465454
theta: 1.48593688011
speed: 13.9257564545
id: 0
t: 9
xxx after update is x: 3.54949307442
y: -58.6145057678
theta: 1.62542748451
speed: 13.6397724152
id: 0
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.35966799514862485, 0.2636836063635345]
222 self.state_dicts[msg.id][msg.t] is (-3.367335796356201, 68.77910614013672, 4.745148181915283, 13.510252952575684)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: 3.54949307442
y: -58.6145057678
theta: 1.62542748451
speed: 13.6397724152
id: 0
t: 10
xxx after update is x: 3.3508245945
y: -58.2424278259
theta: 1.68582773209
speed: 13.6850824356
id: 0
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: 3.3508245945
y: -58.2424278259
theta: 1.68582773209
speed: 13.6850824356
id: 0
t: 11
xxx after update is x: 3.37516260147
y: -57.6996803284
theta: 1.3855522871
speed: 13.7993412018
id: 0
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: 3.37516260147
y: -57.6996803284
theta: 1.3855522871
speed: 13.7993412018
id: 0
t: 12
xxx after update is x: 3.48927545547
y: -57.1105003357
theta: 1.65830731392
speed: 13.9607152939
id: 0
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: 3.48927545547
y: -57.1105003357
theta: 1.65830731392
speed: 13.9607152939
id: 0
t: 13
xxx after update is x: 2.62055492401
y: -56.440246582
theta: 1.4317381382
speed: 13.8197040558
id: 0
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: 2.62055492401
y: -56.440246582
theta: 1.4317381382
speed: 13.8197040558
id: 0
t: 14
xxx after update is x: 2.4566617012
y: -56.3027839661
theta: 1.62349081039
speed: 14.0770244598
id: 0
t: 15
maneuver_negotiatir.py finish the update agent stapdate is x: -3.7073328495
y: 66.457824707
theta: 4.67079305649
speed: 13.7495832443
id: 1
t: 14
xxx after update is x: -2.99033117294
y: 65.9285202026
theta: 4.68315696716
speed: 13.6201820374
id: 1
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3724294250886687, 0]
222 self.state_dicts[msg.id][msg.t] is (2.4566617012023926, -56.30278396606445, 1.623490810394287, 14.077024459838867)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: -2.99033117294
y: 65.9285202026
theta: 4.68315696716
speed: 13.6201820374
id: 1
t: 15
xxx after update is x: -3.24117231369
y: 64.7371520996
theta: 4.62363862991
speed: 14.3755130768
id: 1
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: -3.24117231369
y: 64.7371520996
theta: 4.62363862991
speed: 14.3755130768
id: 1
t: 16
xxx after update is x: -3.10592770576
y: 64.3354873657
theta: 4.86622095108
speed: 14.1169624329
id: 1
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: -3.10592770576
y: 64.3354873657
theta: 4.86622095108
speed: 14.1169624329
id: 1
t: 17
xxx after update is x: -2.81112313271
y: 63.7608222961
theta: 4.74272871017
speed: 13.9856519699
id: 1
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.8






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.81112313271
y: 63.7608222961
theta: 4.74272871017
speed: 13.9856519699
id: 1
t: 18
xxx after update is x: -3.28453183174
y: 63.1934547424
theta: 4.70078802109
speed: 13.768286705
id: 1
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:19




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: -3.28453183174
y: 63.1934547424
theta: 4.70078802109
speed: 13.768286705
id: 1
t: 19
xxx after update is x: -3.15479660034
y: 62.0482215881
theta: 4.88335323334
speed: 13.8006258011
id: 1
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.15479660034
y: 62.0482215881
theta: 4.88335323334
speed: 13.8006258011
id: 1
t: 20
xxx after update is x: -3.40930771828
y: 61.9969520569
theta: 4.87232255936
speed: 13.7705821991
id: 1
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:21




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: -3.40930771828
y: 61.9969520569
theta: 4.87232255936
speed: 13.7705821991
id: 1
t: 21
xxx after update is x: -3.03387212753
y: 61.5151557922
theta: 4.86302375793
speed: 13.9765052795
id: 1
t: 22
maneuver_negote from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: 2.4566617012
y: -56.3027839661
theta: 1.62349081039
speed: 14.0770244598
id: 0
t: 15
xxx after update is x: 3.02666926384
y: -55.0237617493
theta: 1.65576803684
speed: 14.0548458099
id: 0
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: 3.02666926384
y: -55.0237617493
theta: 1.65576803684
speed: 14.0548458099
id: 0
t: 16
xxx after update is x: 3.44683623314
y: -54.3834915161
theta: 1.69338703156
speed: 13.9262857437
id: 0
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.755555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.37788795929793034, 0.5260856694692321]
222 self.state_dicts[msg.id][msg.t] is (-3.1059277057647705, 64.33548736572266, 4.866220951080322, 14.116962432861328)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.44683623314
y: -54.3834915161
theta: 1.69338703156
speed: 13.9262857437
id: 0
t: 17
xxx after update is x: 3.00418448448
y: -53.288936615
theta: 1.57297205925
speed: 13.8394737244
id: 0
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:18




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: 3.00418448448
y: -53.288936615
theta: 1.57297205925
speed: 13.8394737244
id: 0
t: 18
xxx after update is x: 3.03038454056
y: -53.0744285583
theta: 1.67007160187
speed: 14.2090702057
id: 0
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: 3.03038454056
y: -53.0744285583
theta: 1.67007160187
speed: 14.2090702057
id: 0
t: 19
xxx after update is x: 3.00127983093
y: -52.2270545959
theta: 1.55915045738
speed: 13.5957450867
id: 0
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: 3.00127983093
y: -52.2270545959
theta: 1.55915045738
speed: 13.5957450867
id: 0
t: 20
xxx after update is x: 3.37514734268
y: -51.3614959717
theta: 1.37111127377
speed: 13.818810463
id: 0
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: 3.37514734268
y: -51.3614959717
theta: 1.37111127377
speed: 13.818810463
id: 0
t: 21
xxx after update is x: 2.98074698448
y: -51.7205352783
theta: 1.4971820116
speed: 14.0211362839
id: 0
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: 2.98074698448
y: -51.7205352783
theta: 1.4971820116
speed: 14.0211362839
id: 0
t: 22
xxx after update tiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.36007937605922824, 0]
222 self.state_dicts[msg.id][msg.t] is (2.9807469844818115, -51.72053527832031, 1.497182011604309, 14.021136283874512)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: -3.03387212753
y: 61.5151557922
theta: 4.86302375793
speed: 13.9765052795
id: 1
t: 22
xxx after update is x: -3.29340100288
y: 60.5983505249
theta: 4.66819667816
speed: 13.8852806091
id: 1
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: -3.29340100288
y: 60.5983505249
theta: 4.66819667816
speed: 13.8852806091
id: 1
t: 23
xxx after update is x: -3.16533946991
y: 60.146396637
theta: 4.7341094017
speed: 14.1243457794
id: 1
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: -3.16533946991
y: 60.146396637
theta: 4.7341094017
speed: 14.1243457794
id: 1
t: 24
xxx after update is x: -3.60135197639
y: 60.4802856445
theta: 4.79641962051
speed: 14.0012273788
id: 1
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: -3.60135197639
y: 60.4802856445
theta: 4.79641962051
speed: 14.0012273788
id: 1
t: 25
xxx after update is x: -3.0950319767
y: 58.9819717407
theta: 4.590675354
speed: 13.9561433792
id: 1
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.15555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.0950319767
y: 58.9819717407
theta: 4.590675354
speed: 13.9561433792
id: 1
t: 26
xxx after update is x: -2.96123600006
y: 58.1540603638
theta: 4.76826906204
speed: 13.9493293762
id: 1
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:27




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: -2.96123600006
y: 58.1540603638
theta: 4.76826906204
speed: 13.9493293762
id: 1
t: 27
xxx after update is x: -3.72942638397
y: 58.3717918396
theta: 4.75902080536
speed: 13.5798635483
id: 1
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: -3.72942638397
y: 58.3717918396
theta: 4.75902080536
speed: 13.5798635483
id: 1
t: 28
xxx after update is x: -3.1454885006
y: 57.3807678223
theta: 4.68290758133
speed: 14.0562124252
id: 1
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3558636714848512, 0]
222 self.state_dicts[msg.id][msg.t] is (3.578092336654663, -46.74668502807617, 1.6804969310760498, 13.805414is x: 3.39810657501
y: -50.0404624939
theta: 1.50304222107
speed: 13.8518333435
id: 0
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: 3.39810657501
y: -50.0404624939
theta: 1.50304222107
speed: 13.8518333435
id: 0
t: 23
xxx after update is x: 3.38643693924
y: -49.46434021
theta: 1.69806444645
speed: 14.0141372681
id: 0
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: 3.38643693924
y: -49.46434021
theta: 1.69806444645
speed: 14.0141372681
id: 0
t: 24
xxx after update is x: 3.55615735054
y: -49.5104217529
theta: 1.42943787575
speed: 13.8662528992
id: 0
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.11111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: 3.55615735054
y: -49.5104217529
theta: 1.42943787575
speed: 13.8662528992
id: 0
t: 25
xxx after update is x: 2.96014261246
y: -48.76795578
theta: 1.58358025551
speed: 13.9994077682
id: 0
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: 2.96014261246
y: -48.76795578
theta: 1.58358025551
speed: 13.9994077682
id: 0
t: 26
xxx after update is x: 3.51269698143
y: -48.2290725708
theta: 1.62913155556
speed: 14.1850538254
id: 0
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: 3.51269698143
y: -48.2290725708
theta: 1.62913155556
speed: 14.1850538254
id: 0
t: 27
xxx after update is x: 2.86834478378
y: -48.0578384399
theta: 1.5130712986
speed: 14.0652151108
id: 0
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3795186035412416, 0.40194002437016557]
222 self.state_dicts[msg.id][msg.t] is (-3.729426383972168, 58.37179183959961, 4.759020805358887, 13.579863548278809)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.86834478378
y: -48.0578384399
theta: 1.5130712986
speed: 14.0652151108
id: 0
t: 28
xxx after update is x: 3.57809233665
y: -46.7466850281
theta: 1.68049693108
speed: 13.8054141998
id: 0
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:29




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: 3.57809233665
y: -46.7466850281
theta: 1.68049693108
speed: 13.8054141998
id: 0
t: 29
xxx after update is x: 2.9164481163
y: -46.5639839172
theta: 1.66813337803
speed: 13.7561702728
id: 0
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n 199829102)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: -3.1454885006
y: 57.3807678223
theta: 4.68290758133
speed: 14.0562124252
id: 1
t: 29
xxx after update is x: -4.05213928223
y: 56.7244415283
theta: 4.66192483902
speed: 13.6596660614
id: 1
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: -4.05213928223
y: 56.7244415283
theta: 4.66192483902
speed: 13.6596660614
id: 1
t: 30
xxx after update is x: -3.21172261238
y: 55.7560997009
theta: 4.81548690796
speed: 13.9151439667
id: 1
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: -3.21172261238
y: 55.7560997009
theta: 4.81548690796
speed: 13.9151439667
id: 1
t: 31
xxx after update is x: -3.40464520454
y: 55.6396942139
theta: 4.69951105118
speed: 13.6902351379
id: 1
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: -3.40464520454
y: 55.6396942139
theta: 4.69951105118
speed: 13.6902351379
id: 1
t: 32
xxx after update is x: -3.08144068718
y: 54.2756958008
theta: 4.72964572906
speed: 13.8860940933
id: 1
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: -3.08144068718
y: 54.2756958008
theta: 4.72964572906
speed: 13.8860940933
id: 1
t: 33
xxx after update is x: -3.01122331619
y: 54.0486335754
theta: 4.64498519897
speed: 13.8646068573
id: 1
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.51111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.01122331619
y: 54.0486335754
theta: 4.64498519897
speed: 13.8646068573
id: 1
t: 34
xxx after update is x: -2.92451667786
y: 52.7388725281
theta: 4.67129898071
speed: 13.9524593353
id: 1
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:35




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: -2.92451667786
y: 52.7388725281
theta: 4.67129898071
speed: 13.9524593353
id: 1
t: 35
xxx after update is x: -3.39135956764
y: 53.1832199097
theta: 4.73663568497
speed: 14.0373277664
id: 1
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.31941482943841026, 0]
222 self.state_dicts[msg.id][msg.t] is (3.092010974884033, -42.93745422363281, 1.5150845050811768, 13.549211502075195)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update ftimes spin:31

xxx before update is x: 2.9164481163
y: -46.5639839172
theta: 1.66813337803
speed: 13.7561702728
id: 0
t: 30
xxx after update is x: 3.57658195496
y: -46.3331985474
theta: 1.68611168861
speed: 13.8726806641
id: 0
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: 3.57658195496
y: -46.3331985474
theta: 1.68611168861
speed: 13.8726806641
id: 0
t: 31
xxx after update is x: 4.00496482849
y: -45.5439147949
theta: 1.45960736275
speed: 13.7930088043
id: 0
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: 4.00496482849
y: -45.5439147949
theta: 1.45960736275
speed: 13.7930088043
id: 0
t: 32
xxx after update is x: 2.92101430893
y: -44.7857284546
theta: 1.48704111576
speed: 14.1566982269
id: 0
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.46666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: 2.92101430893
y: -44.7857284546
theta: 1.48704111576
speed: 14.1566982269
id: 0
t: 33
xxx after update is x: 3.38763403893
y: -43.9485244751
theta: 1.69760882854
speed: 13.8076820374
id: 0
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: 3.38763403893
y: -43.9485244751
theta: 1.69760882854
speed: 13.8076820374
id: 0
t: 34
xxx after update is x: 3.47380876541
y: -43.4552383423
theta: 1.50891876221
speed: 13.7467432022
id: 0
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: 3.47380876541
y: -43.4552383423
theta: 1.50891876221
speed: 13.7467432022
id: 0
t: 35
xxx after update is x: 3.09201097488
y: -42.9374542236
theta: 1.51508450508
speed: 13.5492115021
id: 0
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: 3.09201097488
y: -42.9374542236
theta: 1.51508450508
speed: 13.5492115021
id: 0
t: 36
xxx after update is x: 3.26062560081
y: -41.9722938538
theta: 1.5265532732
speed: 14.0202026367
id: 0
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.35928927910691205, 0.40275183411223914]
222 self.state_dicts[msg.id][msg.t] is (-3.5417397022247314, 52.26644515991211, 4.622546195983887, 13.923558235168457)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: 3.26062560081
y: -41.9722938538
theta: 1.5265532732
speed: 14.0202026367
id: 0
t: 37
xxx after update is x: 3.50799131393
y: -41.4989471436
theta: 1.49354326725
speed: 13.9485559464
id: 0
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going tunction 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: -3.39135956764
y: 53.1832199097
theta: 4.73663568497
speed: 14.0373277664
id: 1
t: 36
xxx after update is x: -3.54173970222
y: 52.2664451599
theta: 4.62254619598
speed: 13.9235582352
id: 1
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: -3.54173970222
y: 52.2664451599
theta: 4.62254619598
speed: 13.9235582352
id: 1
t: 37
xxx after update is x: -3.60603904724
y: 52.0589599609
theta: 4.6812505722
speed: 13.8906421661
id: 1
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: -3.60603904724
y: 52.0589599609
theta: 4.6812505722
speed: 13.8906421661
id: 1
t: 38
xxx after update is x: -3.14426517487
y: 50.4493103027
theta: 4.9977722168
speed: 14.3101196289
id: 1
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: -3.14426517487
y: 50.4493103027
theta: 4.9977722168
speed: 14.3101196289
id: 1
t: 39
xxx after update is x: -3.61005496979
y: 49.95545578
theta: 4.5267906189
speed: 13.7181968689
id: 1
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.36612260633274474, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1332812309265137, -39.588077545166016, 1.4410347938537598, 13.757014274597168)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: -3.61005496979
y: 49.95545578
theta: 4.5267906189
speed: 13.7181968689
id: 1
t: 40
xxx after update is x: -3.16482806206
y: 49.5863380432
theta: 4.69970846176
speed: 13.7292985916
id: 1
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.82222222222






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.16482806206
y: 49.5863380432
theta: 4.69970846176
speed: 13.7292985916
id: 1
t: 41
xxx after update is x: -3.23412561417
y: 48.7455558777
theta: 4.61573171616
speed: 13.742020607
id: 1
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:42


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.23412561417
y: 48.7455558777
theta: 4.61573171616
speed: 13.742020607
id: 1
t: 42
xxx after update is x: -3.03072285652
y: 48.2769126892
theta: 4.72822713852
speed: 13.8862905502
id: 1
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:43




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: -3.03072285652
y: 48.2769126892
theta: 4.72822713852
speeo the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: 3.50799131393
y: -41.4989471436
theta: 1.49354326725
speed: 13.9485559464
id: 0
t: 38
xxx after update is x: 3.14836001396
y: -41.4256706238
theta: 1.51035010815
speed: 14.2747001648
id: 0
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: 3.14836001396
y: -41.4256706238
theta: 1.51035010815
speed: 14.2747001648
id: 0
t: 39
xxx after update is x: 3.13328123093
y: -39.5880775452
theta: 1.44103479385
speed: 13.7570142746
id: 0
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.77777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: 3.13328123093
y: -39.5880775452
theta: 1.44103479385
speed: 13.7570142746
id: 0
t: 40
xxx after update is x: 3.06866693497
y: -39.9479942322
theta: 1.63377296925
speed: 13.69435215
id: 0
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: 3.06866693497
y: -39.9479942322
theta: 1.63377296925
speed: 13.69435215
id: 0
t: 41
xxx after update is x: 3.19307780266
y: -38.9451599121
theta: 1.53286457062
speed: 14.006439209
id: 0
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.19307780266
y: -38.9451599121
theta: 1.53286457062
speed: 14.006439209
id: 0
t: 42
xxx after update is x: 3.63291358948
y: -38.5161323547
theta: 1.71141886711
speed: 14.1340255737
id: 0
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:43


aaaaaa
risk is [0.36300644042318697, 0.35659144166620327]
222 self.state_dicts[msg.id][msg.t] is (-3.0307228565216064, 48.276912689208984, 4.728227138519287, 13.886290550231934)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.63291358948
y: -38.5161323547
theta: 1.71141886711
speed: 14.1340255737
id: 0
t: 43
xxx after update is x: 3.06928896904
y: -38.0107688904
theta: 1.43326997757
speed: 13.7100143433
id: 0
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:44




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: 3.06928896904
y: -38.0107688904
theta: 1.43326997757
speed: 13.7100143433
id: 0
t: 44
xxx after update is x: 3.35811591148
y: -37.4928436279
theta: 1.77955925465
speed: 13.9044237137
id: 0
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: 3.35811591148
y: -37.4928436279
theta: 1.77955925465
speed: 13.9044237137
id: 0
t: 45
xxx after update is x: 3.53534436226
d: 13.8862905502
id: 1
t: 43
xxx after update is x: -3.50093865395
y: 47.4248466492
theta: 4.84446048737
speed: 13.8795871735
id: 1
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: -3.50093865395
y: 47.4248466492
theta: 4.84446048737
speed: 13.8795871735
id: 1
t: 44
xxx after update is x: -3.01515102386
y: 47.1080589294
theta: 4.75317430496
speed: 13.9862642288
id: 1
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: -3.01515102386
y: 47.1080589294
theta: 4.75317430496
speed: 13.9862642288
id: 1
t: 45
xxx after update is x: -3.17822241783
y: 47.1158485413
theta: 4.76288747787
speed: 13.7930183411
id: 1
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.38028861735307345, 0]
222 self.state_dicts[msg.id][msg.t] is (3.535344362258911, -36.609947204589844, 1.8471393585205078, 14.097393989562988)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.17822241783
y: 47.1158485413
theta: 4.76288747787
speed: 13.7930183411
id: 1
t: 46
xxx after update is x: -3.0314412117
y: 45.8177032471
theta: 4.49780750275
speed: 13.6708583832
id: 1
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:47




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: -3.0314412117
y: 45.8177032471
theta: 4.49780750275
speed: 13.6708583832
id: 1
t: 47
xxx after update is x: -3.28920340538
y: 45.3234405518
theta: 4.6124830246
speed: 14.0079240799
id: 1
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: -3.28920340538
y: 45.3234405518
theta: 4.6124830246
speed: 14.0079240799
id: 1
t: 48
xxx after update is x: -3.08943033218
y: 44.5155067444
theta: 4.74800729752
speed: 13.7802715302
id: 1
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.17777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: -3.08943033218
y: 44.5155067444
theta: 4.74800729752
speed: 13.7802715302
id: 1
t: 49
xxx after update is x: -3.35254359245
y: 44.1902999878
theta: 4.67472648621
speed: 13.8399972916
id: 1
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: -3.35254359245
y: 44.1902999878
theta: 4.67472648621
speed: 13.8399972916
id: 1
t: 50
xxx after update is x: -3.2543990612
y: 43.3912506104
theta: 4.70401620865
speed: 13.7098007202
id: 1
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
ay: -36.6099472046
theta: 1.84713935852
speed: 14.0973939896
id: 0
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: 3.53534436226
y: -36.6099472046
theta: 1.84713935852
speed: 14.0973939896
id: 0
t: 46
xxx after update is x: 3.06771993637
y: -35.8669166565
theta: 1.67299735546
speed: 14.1357555389
id: 0
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: 3.06771993637
y: -35.8669166565
theta: 1.67299735546
speed: 14.1357555389
id: 0
t: 47
xxx after update is x: 3.37244844437
y: -35.5584411621
theta: 1.64564311504
speed: 13.794046402
id: 0
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.13333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: 3.37244844437
y: -35.5584411621
theta: 1.64564311504
speed: 13.794046402
id: 0
t: 48
xxx after update is x: 3.15612840652
y: -34.5843162537
theta: 1.57325267792
speed: 13.8889312744
id: 0
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: 3.15612840652
y: -34.5843162537
theta: 1.57325267792
speed: 13.8889312744
id: 0
t: 49
xxx after update is x: 2.87823367119
y: -34.2360649109
theta: 1.56660223007
speed: 13.9920606613
id: 0
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: 2.87823367119
y: -34.2360649109
theta: 1.56660223007
speed: 13.9920606613
id: 0
t: 50
xxx after update is x: 3.09737563133
y: -33.2023353577
theta: 1.59234821796
speed: 13.7029876709
id: 0
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.33352149715932433, 0.3451256676490442]
222 self.state_dicts[msg.id][msg.t] is (-3.254399061203003, 43.39125061035156, 4.704016208648682, 13.709800720214844)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: 3.09737563133
y: -33.2023353577
theta: 1.59234821796
speed: 13.7029876709
id: 0
t: 51
xxx after update is x: 3.44605779648
y: -32.7573013306
theta: 1.67484593391
speed: 14.0645971298
id: 0
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:53


xxx before update is x: 3.44605779648
y: -32.7573013306
theta: 1.67484593391
speed: 14.0645971298
id: 0
t: 52
xxx after update is x: 3.45137310028
y: -32.5395545959
theta: 1.44128954411
speed: 13.8433618546
id: 0
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:aaaaa
aaaaaabbbbb
risk is [0.45117321999948334, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0973756313323975, -33.202335357666016, 1.5923482179641724, 13.702987670898438)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: -3.2543990612
y: 43.3912506104
theta: 4.70401620865
speed: 13.7098007202
id: 1
t: 51
xxx after update is x: -2.63639855385
y: 42.811378479
theta: 4.64452648163
speed: 13.9715986252
id: 1
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.63639855385
y: 42.811378479
theta: 4.64452648163
speed: 13.9715986252
id: 1
t: 52
xxx after update is x: -3.23043370247
y: 42.0478553772
theta: 4.72005796432
speed: 13.8637628555
id: 1
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:53




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: -3.23043370247
y: 42.0478553772
theta: 4.72005796432
speed: 13.8637628555
id: 1
t: 53
xxx after update is x: -3.21780514717
y: 41.5390281677
theta: 4.74244070053
speed: 13.6813497543
id: 1
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: -3.21780514717
y: 41.5390281677
theta: 4.74244070053
speed: 13.6813497543
id: 1
t: 54
xxx after update is x: -3.55763554573
y: 40.9922943115
theta: 4.93067741394
speed: 14.1493062973
id: 1
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: -3.55763554573
y: 40.9922943115
theta: 4.93067741394
speed: 14.1493062973
id: 1
t: 55
xxx after update is x: -3.1576602459
y: 40.4012489319
theta: 4.5806016922
speed: 13.8160066605
id: 1
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.40193698417692525, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1355409622192383, -30.545825958251953, 1.7211222648620605, 13.795459747314453)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: -3.1576602459
y: 40.4012489319
theta: 4.5806016922
speed: 13.8160066605
id: 1
t: 56
xxx after update is x: -3.12829732895
y: 39.4517288208
theta: 4.67272615433
speed: 13.8033046722
id: 1
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.53333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.12829732895
y: 39.4517288208
theta: 4.67272615433
speed: 13.8033046722
id: 1
t: 57
xxx after update is x: -3.35202431679
y: 39.6532363892
theta: 4.68542385101
speed: 14.1410398483
id: 1
t: 58
maneuver_negotiatir.py finish the update agent 54

xxx before update is x: 3.45137310028
y: -32.5395545959
theta: 1.44128954411
speed: 13.8433618546
id: 0
t: 53
xxx after update is x: 3.11025452614
y: -32.0838699341
theta: 1.57742679119
speed: 14.0438194275
id: 0
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: 3.11025452614
y: -32.0838699341
theta: 1.57742679119
speed: 14.0438194275
id: 0
t: 54
xxx after update is x: 3.50560474396
y: -31.056930542
theta: 1.61932015419
speed: 14.1400260925
id: 0
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: 3.50560474396
y: -31.056930542
theta: 1.61932015419
speed: 14.1400260925
id: 0
t: 55
xxx after update is x: 3.13554096222
y: -30.5458259583
theta: 1.72112226486
speed: 13.7954597473
id: 0
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.48888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: 3.13554096222
y: -30.5458259583
theta: 1.72112226486
speed: 13.7954597473
id: 0
t: 56
xxx after update is x: 2.9719376564
y: -29.8941307068
theta: 1.56058335304
speed: 13.8836278915
id: 0
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.9719376564
y: -29.8941307068
theta: 1.56058335304
speed: 13.8836278915
id: 0
t: 57
xxx after update is x: 3.49139738083
y: -29.2685852051
theta: 1.59386575222
speed: 13.6285018921
id: 0
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:58




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: 3.49139738083
y: -29.2685852051
theta: 1.59386575222
speed: 13.6285018921
id: 0
t: 58
xxx after update is x: 3.50757837296
y: -28.4478206635
theta: 1.47894763947
speed: 13.7033557892
id: 0
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.50757837296
y: -28.4478206635
theta: 1.47894763947
speed: 13.7033557892
id: 0
t: 59
xxx after update is x: 3.14450287819
y: -28.0572090149
theta: 1.50912368298
speed: 13.8685655594
id: 0
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:60


aaaaaa
risk is [0.3532525855550009, 0.41813603395440013]
222 self.state_dicts[msg.id][msg.t] is (-3.508924961090088, 37.66855239868164, 4.91750431060791, 13.787104606628418)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.14450287819
y: -28.0572090149
theta: 1.50912368298
speed: 13.8685655594
id: 0
t: 60
xxx after update is x: 3.13423919678
y: -27.1946372986
theta: 1.60494053364
speed: 14.0010185242
id: 0
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:61




going to the update fustate from ros funtion
leave the update function 
in spin function, finish the n times spin:58




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: -3.35202431679
y: 39.6532363892
theta: 4.68542385101
speed: 14.1410398483
id: 1
t: 58
xxx after update is x: -3.06650686264
y: 38.695514679
theta: 4.86898803711
speed: 13.7540245056
id: 1
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: -3.06650686264
y: 38.695514679
theta: 4.86898803711
speed: 13.7540245056
id: 1
t: 59
xxx after update is x: -3.50892496109
y: 37.6685523987
theta: 4.91750431061
speed: 13.7871046066
id: 1
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: -3.50892496109
y: 37.6685523987
theta: 4.91750431061
speed: 13.7871046066
id: 1
t: 60
xxx after update is x: -3.32270717621
y: 37.5156898499
theta: 4.90188837051
speed: 14.1940402985
id: 1
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: -3.32270717621
y: 37.5156898499
theta: 4.90188837051
speed: 14.1940402985
id: 1
t: 61
xxx after update is x: -2.79669594765
y: 36.758895874
theta: 4.81105136871
speed: 13.8751649857
id: 1
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.29854232328161057, 0]
222 self.state_dicts[msg.id][msg.t] is (3.197038412094116, -26.989234924316406, 1.6109637022018433, 13.837727546691895)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: -2.79669594765
y: 36.758895874
theta: 4.81105136871
speed: 13.8751649857
id: 1
t: 62
xxx after update is x: -3.17729878426
y: 36.2550773621
theta: 4.8099155426
speed: 13.6995048523
id: 1
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: -3.17729878426
y: 36.2550773621
theta: 4.8099155426
speed: 13.6995048523
id: 1
t: 63
xxx after update is x: -2.90216040611
y: 35.5218505859
theta: 4.67379713058
speed: 13.9478559494
id: 1
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.90216040611
y: 35.5218505859
theta: 4.67379713058
speed: 13.9478559494
id: 1
t: 64
xxx after update is x: -2.72772049904
y: 35.2217941284
theta: 4.80782365799
speed: 13.6237344742
id: 1
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:65


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.88888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id nction
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: 3.13423919678
y: -27.1946372986
theta: 1.60494053364
speed: 14.0010185242
id: 0
t: 61
xxx after update is x: 3.19703841209
y: -26.9892349243
theta: 1.6109637022
speed: 13.8377275467
id: 0
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: 3.19703841209
y: -26.9892349243
theta: 1.6109637022
speed: 13.8377275467
id: 0
t: 62
xxx after update is x: 3.62856173515
y: -25.9637432098
theta: 1.60935437679
speed: 13.6589107513
id: 0
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.8






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: 3.62856173515
y: -25.9637432098
theta: 1.60935437679
speed: 13.6589107513
id: 0
t: 63
xxx after update is x: 3.38220262527
y: -24.6218776703
theta: 1.60582566261
speed: 13.6719398499
id: 0
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 3.38220262527
y: -24.6218776703
theta: 1.60582566261
speed: 13.6719398499
id: 0
t: 64
xxx after update is x: 3.52423167229
y: -24.9134140015
theta: 1.45709240437
speed: 13.0220365524
id: 0
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:65




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: 3.52423167229
y: -24.9134140015
theta: 1.45709240437
speed: 13.0220365524
id: 0
t: 65
xxx after update is x: 3.17933368683
y: -24.1899623871
theta: 1.47354519367
speed: 12.6918811798
id: 0
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: 3.17933368683
y: -24.1899623871
theta: 1.47354519367
speed: 12.6918811798
id: 0
t: 66
xxx after update is x: 3.56051278114
y: -23.9586868286
theta: 1.57358169556
speed: 12.488442421
id: 0
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: 3.56051278114
y: -23.9586868286
theta: 1.57358169556
speed: 12.488442421
id: 0
t: 67
xxx after update is x: 2.9802274704
y: -23.3645839691
theta: 1.50808537006
speed: 12.3115730286
id: 0
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: 2.9802274704
y: -23.3645839691
theta: 1.50808537006
speed: 12.3115730286
id: 0
t: 68
xxx after update is x: 3.5097360611
y: -22.5020561218
theta: 1.6657204628
speed: 12.5904741287
id: 0
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.37436893006941463, 0.3094016695600964]
222 self.state_dicts[msg.id][msg.t] is (-3.4734644889831543, 32.801517486572266, 4.653116226196289, 14.141518592834473)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 s== 1):
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: -2.72772049904
y: 35.2217941284
theta: 4.80782365799
speed: 13.6237344742
id: 1
t: 65
xxx after update is x: -3.13850998878
y: 34.1563262939
theta: 4.76054763794
speed: 14.1797542572
id: 1
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: -3.13850998878
y: 34.1563262939
theta: 4.76054763794
speed: 14.1797542572
id: 1
t: 66
xxx after update is x: -3.55838251114
y: 33.7497367859
theta: 4.73779726028
speed: 13.7108945847
id: 1
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: -3.55838251114
y: 33.7497367859
theta: 4.73779726028
speed: 13.7108945847
id: 1
t: 67
xxx after update is x: -3.10272336006
y: 33.5164527893
theta: 4.79770994186
speed: 13.9691982269
id: 1
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.10272336006
y: 33.5164527893
theta: 4.79770994186
speed: 13.9691982269
id: 1
t: 68
xxx after update is x: -3.47346448898
y: 32.8015174866
theta: 4.6531162262
speed: 14.1415185928
id: 1
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:69


aaaaaa
aaaaaabbbbb
risk is [0.3718612632891365, 0]
222 self.state_dicts[msg.id][msg.t] is (3.5097360610961914, -22.502056121826172, 1.6657204627990723, 12.590474128723145)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: -3.47346448898
y: 32.8015174866
theta: 4.6531162262
speed: 14.1415185928
id: 1
t: 69
xxx after update is x: -3.42482328415
y: 31.3200397491
theta: 4.76835298538
speed: 13.7749958038
id: 1
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: -3.42482328415
y: 31.3200397491
theta: 4.76835298538
speed: 13.7749958038
id: 1
t: 70
xxx after update is x: -3.39370059967
y: 31.1011886597
theta: 4.68623542786
speed: 14.0652952194
id: 1
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.39370059967
y: 31.1011886597
theta: 4.68623542786
speed: 14.0652952194
id: 1
t: 71
xxx after update is x: -3.28342270851
y: 30.4483013153
theta: 4.93012809753
speed: 13.7269792557
id: 1
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:72


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.2






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: -3.28342270851
y: 30.4483013153
theta: 4.93012809753
speed: 13.7269792557
id: 1
t: 72
xxx after update is x: -3.83062124252
y: 30.2483940125
theta: 4.66919660568
speed: 13.740398407elf.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: 3.5097360611
y: -22.5020561218
theta: 1.6657204628
speed: 12.5904741287
id: 0
t: 69
xxx after update is x: 3.06971979141
y: -22.1540603638
theta: 1.61805188656
speed: 12.1109981537
id: 0
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: 3.06971979141
y: -22.1540603638
theta: 1.61805188656
speed: 12.1109981537
id: 0
t: 70
xxx after update is x: 3.42968845367
y: -21.5852794647
theta: 1.3633736372
speed: 11.9302120209
id: 0
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.15555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: 3.42968845367
y: -21.5852794647
theta: 1.3633736372
speed: 11.9302120209
id: 0
t: 71
xxx after update is x: 3.68880152702
y: -21.2621192932
theta: 1.49957752228
speed: 11.5637168884
id: 0
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: 3.68880152702
y: -21.2621192932
theta: 1.49957752228
speed: 11.5637168884
id: 0
t: 72
xxx after update is x: 3.56268382072
y: -20.469171524
theta: 1.63806688786
speed: 11.2777795792
id: 0
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:
initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$


 self.man_init:
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: 3.56268382072
y: -20.469171524
theta: 1.63806688786
speed: 11.2777795792
id: 0
t: 73
xxx after update is x: 3.22981357574
y: -19.9953975677
theta: 1.45512795448
speed: 11.4396886826
id: 0
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 1
current clock is 3.28888888889
!!!!after check statue the self.tag is [3.2888888888888888, 0, 'left']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.28888888889

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.2444444444444445, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.28888888889,(3.229813575744629, -19.995397567749023, 1.4551279544830322),11,1,3.28888888889,0,left
!!!!change state to get
GET,0,3.28888888889,(3.229813575744629, -19.995397567749023, 1.4551279544830322),11,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.28888888889
self.communication_details == 0
sending GET,0,3.28888888889,(3.229813575744629, -19.995397567749023, 1.4551279544830322),11,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
Received -->>: 
current clock is 3.28888888889




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.28888888889
maneuver_negot
id: 1
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: -3.83062124252
y: 30.2483940125
theta: 4.66919660568
speed: 13.740398407
id: 1
t: 73
xxx after update is x: -3.20014166832
y: 28.8125190735
theta: 4.75646877289
speed: 13.9096860886
id: 1
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.28888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.28888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '3.28888888889', 'IntendedCourse': 'left', 'Position': ['3.229813575744629', ' -19.995397567749023', ' 1.4551279544830322'], 'TagID': '0', 'Type': 'GET', 'Velocity': '11'}
car 1 received GET,0,3.28888888889,(3.229813575744629, -19.995397567749023, 1.4551279544830322),11,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.146172839506
sender travel direction is:  north
sender earliest entering time is:  1.8262735695
sender last entering time is:  2.24107156627
sender last leaving time is:  4.43709605781
my entering time is:  1.68422976835
my leaving time is:  4.3022866972
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.28888888889
self.communication_details == 0
sending DENY,1,3.28888888889,(-3.2834227085113525, 30.448301315307617, 4.93012809753418),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: -3.20014166832
y: 28.8125190735
theta: 4.75646877289
speed: 13.9096860886
id: 1
t: 74
xxx after update is x: -3.41373467445
y: 28.6904907227
theta: 4.65786552429
speed: 13.6824331284
id: 1
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: -3.41373467445
y: 28.6904907227
theta: 4.65786552429
speed: 13.6824331284
id: 1
t: 75
xxx after update is x: -3.576192379
y: 28.1213092804
theta: 4.80238056183
speed: 13.7016448975
id: 1
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4918619843885884, 0]
222 self.state_dicts[msg.id][msg.t] is (3.436417579650879, -19.202083587646484, 1.579939842224121, 10.606179237365723)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: -3.576192379
y: 28.1213092804
theta: 4.80238056183
speed: 13.7016448975
id: 1
t: 76
xxx after update is x: -3.31406331062
y: 27.162651062
theta: 4.60571050644
speed: 13.8156404495
id: 1
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtioiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '3.28888888889', 'Position': ['(-3.2834227085113525', ' 30.448301315307617', ' 4.93012809753418)'], 'Type': 'DENY'}
car 0 received DENY,1,3.28888888889,(-3.2834227085113525, 30.448301315307617, 4.93012809753418),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.2444444444444445, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.2444444444444445, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: 3.22981357574
y: -19.9953975677
theta: 1.45512795448
speed: 11.4396886826
id: 0
t: 74
xxx after update is x: 3.36734843254
y: -19.4133167267
theta: 1.56707429886
speed: 10.9477853775
id: 0
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.36734843254
y: -19.4133167267
theta: 1.56707429886
speed: 10.9477853775
id: 0
t: 75
xxx after update is x: 3.43641757965
y: -19.2020835876
theta: 1.57993984222
speed: 10.6061792374
id: 0
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:76




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: 3.43641757965
y: -19.2020835876
theta: 1.57993984222
speed: 10.6061792374
id: 0
t: 76
xxx after update is x: 2.6643447876
y: -18.2777233124
theta: 1.5169775486
speed: 10.4498271942
id: 0
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.43853769628859846, 0.2939632845427602]
222 self.state_dicts[msg.id][msg.t] is (-3.314063310623169, 27.16265106201172, 4.605710506439209, 13.815640449523926)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:78


xxx before update is x: 2.6643447876
y: -18.2777233124
theta: 1.5169775486
speed: 10.4498271942
id: 0
t: 77
xxx after update is x: 2.98025774956
y: -18.2751522064
theta: 1.56273376942
speed: 10.505030632
id: 0
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.46666666667






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.422222222222222, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 3.46666666667
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.42222222222
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,3.46666666667,(2.980257749557495, -18.2751522064209, 1.562733769416809),10,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
cun


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.31406331062
y: 27.162651062
theta: 4.60571050644
speed: 13.8156404495
id: 1
t: 77
xxx after update is x: -3.17722272873
y: 26.7217006683
theta: 4.72483921051
speed: 13.7675409317
id: 1
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:78




going to the update functionReceived -->>: 
current clock is 3.46666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.46666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '10', 'Sender': '0', 'TagID': '1', 'Time': '3.46666666667', 'Position': ['(2.980257749557495', ' -18.2751522064209', ' 1.562733769416809)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,3.46666666667,(2.980257749557495, -18.2751522064209, 1.562733769416809),10,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1





sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: -3.17722272873
y: 26.7217006683
theta: 4.72483921051
speed: 13.7675409317
id: 1
t: 78
xxx after update is x: -3.55010128021
y: 26.571855545
theta: 4.73392295837
speed: 13.6387548447
id: 1
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.55010128021
y: 26.571855545
theta: 4.73392295837
speed: 13.6387548447
id: 1
t: 79
xxx after update is x: -3.1400847435
y: 25.6894359589
theta: 4.88595199585
speed: 13.9732971191
id: 1
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:80


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.55555555556






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: -3.1400847435
y: 25.6894359589
theta: 4.88595199585
speed: 13.9732971191
id: 1
t: 80
xxx after update is x: -3.37262153625
y: 25.4256591797
theta: 4.68785429001
speed: 13.4979286194
id: 1
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.37262153625
y: 25.4256591797
theta: 4.68785429001
speed: 13.4979286194
id: 1
t: 81
xxx after update is x: -3.23230481148
y: 24.2129268646
theta: 4.86644172668
speed: 14.1290397644
id: 1
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:82




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:83


xxx before update is x: -3.23230481148
y: 24.2129268646
theta: 4.86644172668
speed: 14.1290397644
id: 1
t: 82
xxx after update is x: -2.89750099182
y: 23.0078125
theta: 4.62973928452
speed: 13.751991272
id: 1
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.49255977452816374, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1964993476867676, -15.779314041137695, 1.678990125656128, 9.386280059814453)
if we have all measurements for a certain time-stamp perform risk estimation
self.rrent clock is 3.46666666667

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:

self.communication_details == 0
sending RELEASE,0,3.46666666667,(2.980257749557495, -18.2751522064209, 1.562733769416809),10,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
xxx before update is x: 2.98025774956
y: -18.2751522064
theta: 1.56273376942
speed: 10.505030632
id: 0
t: 78
xxx after update is x: 3.12715625763
y: -17.6928710938
theta: 1.37425243855
speed: 10.3758106232
id: 0
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:79


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.12715625763
y: -17.6928710938
theta: 1.37425243855
speed: 10.3758106232
id: 0
t: 79
xxx after update is x: 3.33399701118
y: -17.1235713959
theta: 1.44939851761
speed: 9.83521652222
id: 0
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:80




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.33399701118
y: -17.1235713959
theta: 1.44939851761
speed: 9.83521652222
id: 0
t: 80
xxx after update is x: 2.67797660828
y: -17.065870285
theta: 1.72309625149
speed: 9.51031398773
id: 0
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:81




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: 2.67797660828
y: -17.065870285
theta: 1.72309625149
speed: 9.51031398773
id: 0
t: 81
xxx after update is x: 2.77948188782
y: -16.5599250793
theta: 1.6482309103
speed: 8.93524074554
id: 0
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:83


xxx before update is x: 2.77948188782
y: -16.5599250793
theta: 1.6482309103
speed: 8.93524074554
id: 0
t: 82
xxx after update is x: 3.19649934769
y: -15.7793140411
theta: 1.67899012566
speed: 9.38628005981
id: 0
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: 3.19649934769
y: -15.7793140411
theta: 1.67899012566
speed: 9.38628005981
id: 0
t: 83
xxx after update is x: 2.99756717682
y: -15.6469402313
theta: 1.5815025568
speed: 8.95122337341
id: 0
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: 2.99756717682
y: -15.6469402313
theta: 1.5815025568
speed: 8.95122337341
id: 0
t: 84
xxx after update is x: 3.1727643013
y: -14.4981603622
theta: 1.60641527176
speed: 8.84087848663
id: 0
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: 3.1727643013
y: -14.4981603622
theta: 1.60641527176
speed: 8.84087848663
id: 0
t: 85
xxx after update is x: 3.03066277504
y: -14.6226291656
theta: 1.69898796082
speed: 7.90512990952
id: 0
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtfm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: -2.89750099182
y: 23.0078125
theta: 4.62973928452
speed: 13.751991272
id: 1
t: 83
xxx after update is x: -3.09960222244
y: 22.6058197021
theta: 4.6721701622
speed: 13.970249176
id: 1
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.09960222244
y: 22.6058197021
theta: 4.6721701622
speed: 13.970249176
id: 1
t: 84
xxx after update is x: -3.45260000229
y: 22.161649704
theta: 4.69250106812
speed: 13.749958992
id: 1
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:85




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: -3.45260000229
y: 22.161649704
theta: 4.69250106812
speed: 13.749958992
id: 1
t: 85
xxx after update is x: -3.21297550201
y: 22.0842418671
theta: 4.69758892059
speed: 13.6359519958
id: 1
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.82222222222




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.82222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '3.82222222222', 'IntendedCourse': 'left', 'Position': ['3.030662775039673', ' -14.622629165649414', ' 1.6989879608154297'], 'TagID': '0', 'Type': 'GET', 'Velocity': '7'}
car 1 received GET,0,3.82222222222,(3.030662775039673, -14.622629165649414, 1.6989879608154297),7,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.16987654321
sender travel direction is:  north
sender earliest entering time is:  1.31430843905
sender last entering time is:  2.16987654321
sender last leaving time is:  4.54317479963
my entering time is:  1.22349751319
my leaving time is:  3.35711848318
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.82222222222
self.communication_details == 0
sending DENY,1,3.82222222222,(-3.140084743499756, 25.689435958862305, 4.885951995849609),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: -3.21297550201
y: 22.0842418671
theta: 4.69758892059
speed: 13.6359519958
id: 1
t: 86
xxx after update is x: -3.37444114685
y: 21.2608566284
theta: 4.73084211349
speed: 13.7582578659
id: 1
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: -3.37444114685
y: 21.2608566284
theta: 4.73084211349
speed: 13.7582578659
id: 1
t: 87
xxx after update is x: -3.21041202545
y: 20.6975402832
theta: 4.68591547012
speed: 14.2281217575
id: 1
t: ion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.82222222222

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.8222222222222224, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.82222222222,(3.030662775039673, -14.622629165649414, 1.6989879608154297),7,1,3.28888888889,0,left
!!!!change state to get
GET,0,3.82222222222,(3.030662775039673, -14.622629165649414, 1.6989879608154297),7,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.82222222222
self.communication_details == 0
sending GET,0,3.82222222222,(3.030662775039673, -14.622629165649414, 1.6989879608154297),7,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.82222222222






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0
Received -->>: 
current clock is 3.82222222222




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.82222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '3.82222222222', 'Position': ['(-3.140084743499756', ' 25.689435958862305', ' 4.885951995849609)'], 'Type': 'DENY'}
car 0 received DENY,1,3.82222222222,(-3.140084743499756, 25.689435958862305, 4.885951995849609),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.8222222222222224, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.8222222222222224, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: 3.03066277504
y: -14.6226291656
theta: 1.69898796082
speed: 7.90512990952
id: 0
t: 86
xxx after update is x: 2.94715976715
y: -13.7076358795
theta: 1.51710629463
speed: 8.32821464539
id: 0
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion
finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: 2.94715976715
y: -13.7076358795
theta: 1.51710629463
speed: 8.32821464539
id: 0
t: 87
xxx after update is x: 3.21022105217
y: -13.7968854904
theta: 1.50867950916
speed: 8.066614151
id: 0
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.6366080473532097, 0.42031628649645103]
222 self.state_dicts[msg.id][msg.t] is (-3.21041202545166, 20.697540283203125, 4.685915470123291, 14.228121757507324)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: 3.21022105217
y: -13.7968854904
theta: 1.50867950916
speed: 8.066614151
id: 0
t: 88
xxx after update is x: 3.80559515953
y: -13.8113155365
theta: 1.46978914738
speed: 7.90162754059
id: 0
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:90


xxx before update is x: 3.80559515953
y: -13.8113155365
theta: 1.46978914738
speed: 7.90162754059
id: 0
t: 89
xxx after update is x: 3.4852232933
y: -13.4696779251
theta: 1.56589102745
speed: 7.65766716003
id: 0
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: 3.4852232933
y: -13.4696779251
theta: 1.56589102745
speed: 7.65766716003
id: 0
t: 90
xxx after update is x: 3.17900538445
y: -13.1219682693
theta: 1.60506546497
speed: 7.16201353073
id: 0
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.17900538445
y: -13.1219682693
theta: 1.60506546497
speed: 7.16201353073
id: 0
t: 91
xxx after update is x: 3.48815083504
y: -12.8486452103
theta: 1.50106656551
speed: 7.4599738121
id: 0
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:92




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: 3.48815083504
y: -12.8486452103
theta: 1.50106656551
speed: 7.4599738121
id: 0
t: 92
xxx after update is x: 3.67970132828
y: -12.2069606781
theta: 1.55294787884
speed: 6.94683408737
id: 0
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: 3.67970132828
y: -12.2069606781
theta: 1.55294787884
speed: 6.94683408737
id: 0
t: 93
xxx after update is x: 3.81316447258
y: -12.2926712036
theta: 1.65941131115
speed: 6.18768072128
id: 0
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.7032146449748096, 0.242400996659797]
222 self.state_dicts[msg.id][msg.t] is (-3.4133870601654053, 16.881488800048828, 4.638574600219727, 13.788508415222168)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.17777777778






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.177777777777778, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.17777777778
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.17777777778
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,4.17777777778,(3.813164472579956, -12.292671203613281, 1.6594113111495972),6,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 4.17777777778
self.communication_details == 0
sending RELEASE,0,4.17777777778,(3.813164472579956, -12.292671203613281, 1.6594113111495972),6,1,3.28888
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.91111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: -3.21041202545
y: 20.6975402832
theta: 4.68591547012
speed: 14.2281217575
id: 1
t: 88
xxx after update is x: -3.22663426399
y: 20.299369812
theta: 4.76933097839
speed: 13.911198616
id: 1
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.48929169922245885, 0]
222 self.state_dicts[msg.id][msg.t] is (3.8055951595306396, -13.811315536499023, 1.4697891473770142, 7.901627540588379)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:90


xxx before update is x: -3.22663426399
y: 20.299369812
theta: 4.76933097839
speed: 13.911198616
id: 1
t: 89
xxx after update is x: -3.52215051651
y: 19.604095459
theta: 4.68959665298
speed: 13.985329628
id: 1
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: -3.52215051651
y: 19.604095459
theta: 4.68959665298
speed: 13.985329628
id: 1
t: 90
xxx after update is x: -3.10628724098
y: 19.0328330994
theta: 4.62242746353
speed: 13.8709001541
id: 1
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:92


xxx before update is x: -3.10628724098
y: 19.0328330994
theta: 4.62242746353
speed: 13.8709001541
id: 1
t: 91
xxx after update is x: -3.1494204998
y: 18.3875102997
theta: 4.81251525879
speed: 14.2411546707
id: 1
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: -3.1494204998
y: 18.3875102997
theta: 4.81251525879
speed: 14.2411546707
id: 1
t: 92
xxx after update is x: -4.23533439636
y: 17.5052776337
theta: 4.70877981186
speed: 13.9833831787
id: 1
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.47898121945688316, 0]
222 self.state_dicts[msg.id][msg.t] is (3.679701328277588, -12.206960678100586, 1.5529478788375854, 6.946834087371826)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: -4.23533439636
y: 17.5052776337
theta: 4.70877981186
speed: 13.9833831787
id: 1
t: 93
xxx after update is x: -3.41338706017
y: 16.8814888
theta: 4.63857460022
speed: 13.7885084152
id: 1
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.17777777778




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.17777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '6', 'Sender': '0', 'TagID': '1', 'Time': '4.17777777778', 'Position': ['(3.813164472579956', ' -12.292671203613281', ' 1.6594113111495972)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.17777777778,(3.813164472579956, -12.292671203613281, 1.6594113111495972),6,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.41338706017
y: 16.8814888
theta: 4.63857460022
speed: 13.7885084152
id: 1
t: 94
xxx after update is x: -3.35343170166
y: 16.5245704651
theta: 4.70873737335
speed: 13.9150276184
id: 1
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:95




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: -3.35343170166
y: 16.5245704651
theta: 4.70873737335
speed: 13.9150276184
id: 1
t: 95
xxx after update is x: -3.44824361801
y: 15.8702106476
theta: 4.71632289886
speed: 13.6430101395
id: 1
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.26666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:97


xxx before update is x: -3.44824361801
y: 15.8702106476
theta: 4.71632289886
speed: 13.6430101395
id: 1
t: 96
xxx after update is x: -3.25548005104
y: 14.7051954269
theta: 4.66156005859
speed: 13.8751945496
id: 1
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: -3.25548005104
y: 14.7051954269
theta: 4.66156005859
speed: 13.8751945496
id: 1
t: 97
xxx after update is x: -3.21214938164
y: 14.0442419052
theta: 4.61298418045
speed: 13.9654808044
id: 1
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.4900104107112223, 0]
222 self.state_dicts[msg.id][msg.t] is (3.367586612701416, -10.430079460144043, 1.6278636455535889, 6.0624566078186035)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: -3.21214938164
y: 14.0442419052
theta: 4.61298418045
speed: 13.9654808044
id: 1
t: 98
xxx after update is x: -3.35516381264
y: 14.1624307632
theta: 4.75625896454
speed: 13.7554883957
id: 1
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: -3.35516381264
y: 14.1624307632
theta: 4.75625896454
speed: 13.7554883957
id: 1
t: 99
xxx after update is x: -3.43705558777
y: 13.3219308853
theta: 4.80702257156
speed: 13.7135066986
id: 1
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.43705558777
y: 13.3219308853
theta: 4.80702257156
speed: 13.7135066986
id: 1
t: 100
xxx after update is x: -3.588888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: 3.81316447258
y: -12.2926712036
theta: 1.65941131115
speed: 6.18768072128
id: 0
t: 94
xxx after update is x: 3.38993787766
y: -11.7819356918
theta: 1.59209692478
speed: 6.35070991516
id: 0
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: 3.38993787766
y: -11.7819356918
theta: 1.59209692478
speed: 6.35070991516
id: 0
t: 95
xxx after update is x: 3.34862995148
y: -10.9695606232
theta: 1.53896093369
speed: 6.1495718956
id: 0
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:97


xxx before update is x: 3.34862995148
y: -10.9695606232
theta: 1.53896093369
speed: 6.1495718956
id: 0
t: 96
xxx after update is x: 2.73910045624
y: -11.0470113754
theta: 1.52524340153
speed: 5.57254266739
id: 0
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: 2.73910045624
y: -11.0470113754
theta: 1.52524340153
speed: 5.57254266739
id: 0
t: 97
xxx after update is x: 3.3675866127
y: -10.4300794601
theta: 1.62786364555
speed: 6.06245660782
id: 0
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: 3.3675866127
y: -10.4300794601
theta: 1.62786364555
speed: 6.06245660782
id: 0
t: 98
xxx after update is x: 2.91217160225
y: -10.2196807861
theta: 1.53954541683
speed: 5.40683031082
id: 0
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.2616512074926763, 0.026929905067314186]
222 self.state_dicts[msg.id][msg.t] is (-3.355163812637329, 14.162430763244629, 4.756258964538574, 13.755488395690918)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.91217160225
y: -10.2196807861
theta: 1.53954541683
speed: 5.40683031082
id: 0
t: 99
xxx after update is x: 3.3053817749
y: -10.5506763458
theta: 1.46975231171
speed: 5.11480045319
id: 0
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:100




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.3053817749
y: -10.5506763458
theta: 1.46975231171
speed: 5.11480045319
id: 0
t: 100
xxx after update is x: 2.83122944832
y: -9.64276218414
theta: 1.69680511951
speed: 5.35277795792
id: 0
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:101




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.83122944832
y: -9.64276218414
theta: 1.69680511951
speed: 5.35277795792
id: 0
t: 101
xxx after update is x: 3.48338031769
y: -10.0404195786
theta: 1.69801259041
speed: 4.71491861343
id: 0
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:102


maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 4.53333333333

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.488888888888889, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.53333333333,(3.4833803176879883, -10.040419578552246, 1.6980125904083252),4,1,3.28888888889,0,left
!!!!change state to get
GET,0,4.53333333333,(3.4833803176879883, -10.040419578552246, 1.6980125904083252),4,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 4.53333333333
self.communication_details == 0
sending GET,0,4.53333333333,(3.4833803176879883, -10.040419578552246, 1.6980125904083252),4,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.53333333333






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0
Received -->>: 
current clock is 4.53333333333




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 4.53333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '4.53333333333', 'Position': ['(-3.4482436180114746', ' 15.870210647583008', ' 4.716322898864746)'], 'Type': 'DENY'}
car 0 received DENY,1,4.53333333333,(-3.4482436180114746, 15.870210647583008, 4.716322898864746),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.488888888888889, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [4.488888888888889, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: 3.48338031769
y: -10.0404195786
theta: 1.69801259041
speed: 4.71491861343
id: 0
t: 102
xxx after update is x: 3.43258738518
y: -9.67989444733
theta: 1.51773762703
speed: 4.55597066879
id: 0
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: 3.43258738518
y: -9.67989444733
theta: 1.51773762703
speed: 4.55597066879
id: 0
t: 103
xxx after update is x: 3.21977210045
y: -9.31863498688
theta: 1.51445221901
speed: 4.27652025223
id: 0
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the 2230882645
y: 12.9291648865
theta: 4.48735427856
speed: 13.8815317154
id: 1
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:101




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.52230882645
y: 12.9291648865
theta: 4.48735427856
speed: 13.8815317154
id: 1
t: 101
xxx after update is x: -3.15864944458
y: 12.26496315
theta: 4.71663141251
speed: 14.1172399521
id: 1
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:102


Received -->>: 
current clock is 4.53333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.53333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '4.53333333333', 'IntendedCourse': 'left', 'Position': ['3.4833803176879883', ' -10.040419578552246', ' 1.6980125904083252'], 'TagID': '0', 'Type': 'GET', 'Velocity': '4'}
car 1 received GET,0,4.53333333333,(3.4833803176879883, -10.040419578552246, 1.6980125904083252),4,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.201481481481
sender travel direction is:  north
sender earliest entering time is:  0.695053301917
sender last entering time is:  2.20148148148
sender last leaving time is:  4.57477973791
my entering time is:  0.544558828283
my leaving time is:  1.96763617508
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 4.53333333333
self.communication_details == 0
sending DENY,1,4.53333333333,(-3.4482436180114746, 15.870210647583008, 4.716322898864746),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: -3.15864944458
y: 12.26496315
theta: 4.71663141251
speed: 14.1172399521
id: 1
t: 102
xxx after update is x: -3.34658503532
y: 11.0560665131
theta: 4.93927335739
speed: 13.853304863
id: 1
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:104


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.57777777778






self.maneuver_requested None
xxx before update is x: -3.34658503532
y: 11.0560665131
theta: 4.93927335739
speed: 13.853304863
id: 1
t: 103
xxx after update is x: -3.99124789238
y: 10.3558979034
theta: 4.72749423981
speed: 14.0025005341
id: 1
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:105


xxx before update is x: -3.99124789238
y: 10.3558979034
theta: 4.72749423981
speed: 14.0025005341
id: 1
t: 104
xxx after update is x: -3.49577116966
y: 10.3858108521
theta: 4.65566396713
speed: 14.1899452209
id: 1
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
n times spin:105

xxx before update is x: 3.21977210045
y: -9.31863498688
theta: 1.51445221901
speed: 4.27652025223
id: 0
t: 104
xxx after update is x: 3.17134904861
y: -9.22385692596
theta: 1.64740347862
speed: 3.89234614372
id: 0
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: 3.17134904861
y: -9.22385692596
theta: 1.64740347862
speed: 3.89234614372
id: 0
t: 105
xxx after update is x: 2.99943447113
y: -9.03355026245
theta: 1.44785511494
speed: 4.12405872345
id: 0
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: 2.99943447113
y: -9.03355026245
theta: 1.44785511494
speed: 4.12405872345
id: 0
t: 106
xxx after update is x: 3.32196211815
y: -8.99439144135
theta: 1.49866688251
speed: 3.89333605766
id: 0
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.5157095329145609, 0.040474484261843066]
222 self.state_dicts[msg.id][msg.t] is (-3.11442232131958, 9.393945693969727, 4.783028602600098, 13.881415367126465)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: 3.32196211815
y: -8.99439144135
theta: 1.49866688251
speed: 3.89333605766
id: 0
t: 107
xxx after update is x: 3.26212501526
y: -8.82152080536
theta: 1.60324668884
speed: 3.6796002388
id: 0
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: 3.26212501526
y: -8.82152080536
theta: 1.60324668884
speed: 3.6796002388
id: 0
t: 108
xxx after update is x: 3.40100836754
y: -8.47727298737
theta: 1.48943710327
speed: 2.95872807503
id: 0
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:110


xxx before update is x: 3.40100836754
y: -8.47727298737
theta: 1.48943710327
speed: 2.95872807503
id: 0
t: 109
xxx after update is x: 3.50648021698
y: -8.34030342102
theta: 1.6580426693
speed: 3.09087896347
id: 0
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.88888888889






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.844444444444444, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.88888888889
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.84444444444
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,4.88888888889,(3.5064802169799805, -8.340303421020508, 1.6580426692962646),3,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 4.88888888889
self.communication_details == 0
sending RELEASE,0,4.88888888889,(3.5064802169799805, -8.340303421020508, 1.6580426692962646),3,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver fuaaaaaabbbbb
risk is [0.3658459019668299, 0]
222 self.state_dicts[msg.id][msg.t] is (3.171349048614502, -9.223856925964355, 1.6474034786224365, 3.892346143722534)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: -3.49577116966
y: 10.3858108521
theta: 4.65566396713
speed: 14.1899452209
id: 1
t: 105
xxx after update is x: -3.25486159325
y: 9.67004489899
theta: 4.61321973801
speed: 14.1477584839
id: 1
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: -3.25486159325
y: 9.67004489899
theta: 4.61321973801
speed: 14.1477584839
id: 1
t: 106
xxx after update is x: -3.11442232132
y: 9.39394569397
theta: 4.7830286026
speed: 13.8814153671
id: 1
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.11442232132
y: 9.39394569397
theta: 4.7830286026
speed: 13.8814153671
id: 1
t: 107
xxx after update is x: -3.27380156517
y: 8.4613494873
theta: 4.71443414688
speed: 14.1217460632
id: 1
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:108




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: -3.27380156517
y: 8.4613494873
theta: 4.71443414688
speed: 14.1217460632
id: 1
t: 108
xxx after update is x: -3.17993617058
y: 8.10472679138
theta: 4.72949075699
speed: 13.9072494507
id: 1
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.7466061060694935, 0]
222 self.state_dicts[msg.id][msg.t] is (3.401008367538452, -8.477272987365723, 1.4894371032714844, 2.958728075027466)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:110


xxx before update is x: -3.17993617058
y: 8.10472679138
theta: 4.72949075699
speed: 13.9072494507
id: 1
t: 109
xxx after update is x: -3.20237636566
y: 6.93704509735
theta: 4.73574876785
speed: 13.9031105042
id: 1
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.88888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.88888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '3', 'Sender': '0', 'TagID': '1', 'Time': '4.88888888889', 'Position': ['(3.5064802169799805', ' -8.340303421020508', ' 1.6580426692962646)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.88888888889,(3.5064802169799805, -8.340303421020508, 1.6580426692962646),3,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:111


xxx before update is x: -3.20237636566
y: 6.93704509735
theta: 4.73574876785
speed: 13.9031105042
id: 1
t: 110
xxx after unction update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:111


xxx before update is x: 3.50648021698
y: -8.34030342102
theta: 1.6580426693
speed: 3.09087896347
id: 0
t: 110
xxx after update is x: 3.13600420952
y: -8.71497154236
theta: 1.77966785431
speed: 2.96316576004
id: 0
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:112


xxx before update is x: 3.13600420952
y: -8.71497154236
theta: 1.77966785431
speed: 2.96316576004
id: 0
t: 111
xxx after update is x: 3.04202651978
y: -7.99268198013
theta: 1.52339339256
speed: 2.23098421097
id: 0
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:113


xxx before update is x: 3.04202651978
y: -7.99268198013
theta: 1.52339339256
speed: 2.23098421097
id: 0
t: 112
xxx after update is x: 3.06135988235
y: -8.80832195282
theta: 1.63490521908
speed: 2.46825432777
id: 0
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: 3.06135988235
y: -8.80832195282
theta: 1.63490521908
speed: 2.46825432777
id: 0
t: 113
xxx after update is x: 2.79627418518
y: -7.75556135178
theta: 1.45742809772
speed: 2.04966926575
id: 0
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.3239437675364546, 0.0855760868778687]
222 self.state_dicts[msg.id][msg.t] is (-3.1850204467773438, 4.633803844451904, 4.827881336212158, 13.867834091186523)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:115


xxx before update is x: 2.79627418518
y: -7.75556135178
theta: 1.45742809772
speed: 2.04966926575
id: 0
t: 114
xxx after update is x: 3.36531710625
y: -8.15710067749
theta: 1.49342596531
speed: 1.56166291237
id: 0
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.36531710625
y: -8.15710067749
theta: 1.49342596531
speed: 1.56166291237
id: 0
t: 115
xxx after update is x: 2.93738555908
y: -7.15506124496
theta: 1.51194691658
speed: 1.52730834484
id: 0
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:116




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: 2.93738555908
y: -7.15506124496
theta: 1.51194691658
speed: 1.52730834484
id: 0
t: 116
xxx after update is x: 3.00813436508
y: -7.65954589844
theta: 1.53918087482
speed: 1.09053325653
id: 0
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: 3.00813436508
y: -7.65954589844
theta: 1.53918087482
speed: 1.09053325653
id: 0
t: 117
xxx after update is x: 2.77465748787
y: -7.3189573288
theta: 1.74589502811
speed: 1.14291298389
id: 0
t: 118
maneuver_negpdate is x: -3.62446880341
y: 6.55761575699
theta: 4.64399147034
speed: 14.0752859116
id: 1
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.93333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:112


xxx before update is x: -3.62446880341
y: 6.55761575699
theta: 4.64399147034
speed: 14.0752859116
id: 1
t: 111
xxx after update is x: -3.06530857086
y: 5.74354219437
theta: 4.8157491684
speed: 14.0672121048
id: 1
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:113


xxx before update is x: -3.06530857086
y: 5.74354219437
theta: 4.8157491684
speed: 14.0672121048
id: 1
t: 112
xxx after update is x: -3.13038158417
y: 5.12585830688
theta: 4.8918261528
speed: 13.7776679993
id: 1
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.6738780102752261, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0613598823547363, -8.808321952819824, 1.634905219078064, 2.468254327774048)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: -3.13038158417
y: 5.12585830688
theta: 4.8918261528
speed: 13.7776679993
id: 1
t: 113
xxx after update is x: -3.18502044678
y: 4.63380384445
theta: 4.82788133621
speed: 13.8678340912
id: 1
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:115


xxx before update is x: -3.18502044678
y: 4.63380384445
theta: 4.82788133621
speed: 13.8678340912
id: 1
t: 114
xxx after update is x: -3.43386745453
y: 3.93570709229
theta: 4.64916706085
speed: 13.826874733
id: 1
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: -3.43386745453
y: 3.93570709229
theta: 4.64916706085
speed: 13.826874733
id: 1
t: 115
xxx after update is x: -3.91296243668
y: 2.84895920753
theta: 4.7267370224
speed: 13.5413751602
id: 1
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: -3.91296243668
y: 2.84895920753
theta: 4.7267370224
speed: 13.5413751602
id: 1
t: 116
xxx after update is x: -3.31577849388
y: 2.899923563
theta: 4.86005115509
speed: 13.8500432968
id: 1
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: -3.31577849388
y: 2.899923563
theta: 4.86005115509
speed: 13.8500432968
id: 1
t: 117
xxx after update is x: -3.28632712364
y: 1.85896337032
theta: 4.97234296799
speed: 13.9444322586
id: 1
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0otiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 5.24444444444

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.2444444444444445, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,5.24444444444,(2.7746574878692627, -7.318957328796387, 1.7458950281143188),1,1,3.28888888889,0,left
!!!!change state to get
GET,0,5.24444444444,(2.7746574878692627, -7.318957328796387, 1.7458950281143188),1,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 5.24444444444
self.communication_details == 0
sending GET,0,5.24444444444,(2.7746574878692627, -7.318957328796387, 1.7458950281143188),1,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.24444444444






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0
finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 5.24444444444




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 5.24444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GRANT, meaasge dict is {'TagTime': '14', 'Sender': '1', 'TagID': '1', 'Time': '5.24444444444', 'Position': ['(-3.6244688034057617', ' 6.557615756988525', ' 4.643991470336914)'], 'Type': 'GRANT'}
car 0 received GRANT,1,5.24444444444,(-3.6244688034057617, 6.557615756988525, 4.643991470336914),14,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.2444444444444445, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [5.2444444444444445, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: 2.77465748787
y: -7.3189573288
theta: 1.74589502811
speed: 1.14291298389
id: 0
t: 118
xxx after update is x: 3.82111978531
y: -7.95720005035
theta: 1.73285460472
speed: 0.491463452578
id: 0
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.3619290188948438, 0.00932127643781833]
222 self.state_dicts[msg.id][msg.t] is (-2.978128671646118, 1.3532400131225586, 4.694423675537109, 13.824076652526855)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:120


xxx before update is x: 3.82111978531
y: -7.95720005035
theta: 1.73285460472
speed: 0.491463452578
id: 0
t: 119
xxx after update is x: 3.76713871956
y: -7.67459106445
theta: 1.51589977741
speed: 0.73912024498
id: 0
t: 120
maneuver_negotiatir..2697999394856482, 0]
222 self.state_dicts[msg.id][msg.t] is (2.7746574878692627, -7.318957328796387, 1.7458950281143188, 1.1429129838943481)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
current clock is 5.24444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 5.24444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '5.24444444444', 'IntendedCourse': 'left', 'Position': ['2.7746574878692627', ' -7.318957328796387', ' 1.7458950281143188'], 'TagID': '0', 'Type': 'GET', 'Velocity': '1'}
car 1 received GET,0,5.24444444444,(2.7746574878692627, -7.318957328796387, 1.7458950281143188),1,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.233086419753
maneuver_negotiatir.py sender travel direction is none
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, not conlicted
maneuver_negotiatir.py message_processing,!!dd342 change status to GRANT
self.grantID is 0
GRANT,1,5.24444444444,(-3.6244688034057617, 6.557615756988525, 4.643991470336914),14,1,0,0
added car with id 0 to grantlist. current grantlist:  {0: [10.022222222222222, 'left']}
maneuver_negotiatir.py start the update_agent_message
current clock is 5.24444444444
self.communication_details == 0
sending GRANT,1,5.24444444444,(-3.6244688034057617, 6.557615756988525, 4.643991470336914),14,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
current clock is 5.24444444444




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.28632712364
y: 1.85896337032
theta: 4.97234296799
speed: 13.9444322586
id: 1
t: 118
xxx after update is x: -2.97812867165
y: 1.35324001312
theta: 4.69442367554
speed: 13.8240766525
id: 1
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:119


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.28888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.97812867165
y: 1.35324001312
theta: 4.69442367554
speed: 13.8240766525
id: 1
t: 119
xxx after update is x: -3.00740814209
y: 0.941440820694
theta: 4.79551458359
speed: 13.8304080963
id: 1
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:120




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:121


xxx before update is x: -3.00740814209
y: 0.941440820694
theta: 4.79551458359
speed: 13.8304080963
id: 1
t: 120
xxx after update is x: -3.32153320312
y: 0.401757985353
theta: 4.85402345657
speed: 13.826672554
id: 1
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.7738448423162662, 0.9937103372564586]
222 self.state_dicts[msg.id][msg.t] is (3.2941551208496094, -7.504595756530762, 1.5256407260894775, 0.5546411871910095)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
tpy finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:121


xxx before update is x: 3.76713871956
y: -7.67459106445
theta: 1.51589977741
speed: 0.73912024498
id: 0
t: 120
xxx after update is x: 3.29415512085
y: -7.50459575653
theta: 1.52564072609
speed: 0.554641187191
id: 0
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: 3.29415512085
y: -7.50459575653
theta: 1.52564072609
speed: 0.554641187191
id: 0
t: 121
xxx after update is x: 3.08919668198
y: -7.21831989288
theta: 1.7137196064
speed: 0.309837937355
id: 0
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: 3.08919668198
y: -7.21831989288
theta: 1.7137196064
speed: 0.309837937355
id: 0
t: 122
xxx after update is x: 3.80554199219
y: -7.20423698425
theta: 1.60519194603
speed: -0.00342769012786
id: 0
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: 3.80554199219
y: -7.20423698425
theta: 1.60519194603
speed: -0.00342769012786
id: 0
t: 123
xxx after update is x: 3.43046236038
y: -7.1289896965
theta: 1.61209928989
speed: -0.188545405865
id: 0
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.43046236038
y: -7.1289896965
theta: 1.61209928989
speed: -0.188545405865
id: 0
t: 124
xxx after update is x: 2.77489709854
y: -8.29145145416
theta: 1.63460886478
speed: -0.351952314377
id: 0
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:125


risk is [0.9191913896125016, 0.00036197773584160253]
222 self.state_dicts[msg.id][msg.t] is (-3.0507876873016357, -2.7731943130493164, 4.599489212036133, 13.976286888122559)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: 2.77489709854
y: -8.29145145416
theta: 1.63460886478
speed: -0.351952314377
id: 0
t: 125
xxx after update is x: 3.32874679565
y: -7.8481965065
theta: 1.62946915627
speed: 0.225837126374
id: 0
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.6






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.555555555555555, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 5.6
(RATE*SLOWDOWN) is 22.5
MR[0] is 5.55555555556
self.TMan is 5
Empty
self.agents_to_ask is []
stopped retry timer
deny not in message
maneuver_negotiatir.py in the domaneuver function - start
added car with id 0 to grantlist. current grantlist:  {0: [10.288888888888888, 'left']}
Doing maneuver
maneuver_negotiatir.py finish the do maneuver functiargetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: -3.32153320312
y: 0.401757985353
theta: 4.85402345657
speed: 13.826672554
id: 1
t: 121
xxx after update is x: -3.22225832939
y: -0.162481531501
theta: 4.67868852615
speed: 13.8761520386
id: 1
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: -3.22225832939
y: -0.162481531501
theta: 4.67868852615
speed: 13.8761520386
id: 1
t: 122
xxx after update is x: -2.96651697159
y: -0.4617010355
theta: 4.60124588013
speed: 13.9348192215
id: 1
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: -2.96651697159
y: -0.4617010355
theta: 4.60124588013
speed: 13.9348192215
id: 1
t: 123
xxx after update is x: -3.27682042122
y: -0.736448585987
theta: 4.80285978317
speed: 14.1550397873
id: 1
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.27682042122
y: -0.736448585987
theta: 4.80285978317
speed: 14.1550397873
id: 1
t: 124
xxx after update is x: -3.0507876873
y: -2.77319431305
theta: 4.59948921204
speed: 13.9762868881
id: 1
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:125




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.0507876873
y: -2.77319431305
theta: 4.59948921204
speed: 13.9762868881
id: 1
t: 125
xxx after update is x: -2.84303069115
y: -3.41555857658
theta: 4.72212314606
speed: 13.7182703018
id: 1
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:126


aaaaaa
aaaaaabbbbb
risk is [0.7528076539631657, 0.9999999999999994]
222 self.state_dicts[msg.id][msg.t] is (3.328746795654297, -7.848196506500244, 1.6294691562652588, 0.2258371263742447)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:127


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.6






self.maneuver_requested None
xxx before update is x: -2.84303069115
y: -3.41555857658
theta: 4.72212314606
speed: 13.7182703018
id: 1
t: 126
xxx after update is x: -3.76586294174
y: -3.96885180473
theta: 4.77958965302
speed: 14.275727272
id: 1
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: -3.76586294174
y: -3.96885180473
theta: 4.77958965302
speed: 14.275727272
id: 1
t: 127
xxx after update is x: -3.44058537483
y: -4.02013111115
theta: 4.5866894722
speed: 13.9909925461
id: 1
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:129


xxx before update is x: -3.44058537483
y: -on
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: 3.32874679565
y: -7.8481965065
theta: 1.62946915627
speed: 0.225837126374
id: 0
t: 126
xxx after update is x: 3.37542200089
y: -7.77820444107
theta: 1.51656103134
speed: 0.174977198243
id: 0
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: 3.37542200089
y: -7.77820444107
theta: 1.51656103134
speed: 0.174977198243
id: 0
t: 127
xxx after update is x: 3.5766658783
y: -7.37597322464
theta: 1.61554086208
speed: 0.0986919105053
id: 0
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:129


xxx before update is x: 3.5766658783
y: -7.37597322464
theta: 1.61554086208
speed: 0.0986919105053
id: 0
t: 128
xxx after update is x: 3.08482575417
y: -7.85047388077
theta: 1.60899722576
speed: 0.530493915081
id: 0
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: 3.08482575417
y: -7.85047388077
theta: 1.60899722576
speed: 0.530493915081
id: 0
t: 129
xxx after update is x: 2.92433643341
y: -7.40286064148
theta: 1.49259793758
speed: 0.591531455517
id: 0
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:131


xxx before update is x: 2.92433643341
y: -7.40286064148
theta: 1.49259793758
speed: 0.591531455517
id: 0
t: 130
xxx after update is x: 3.49286675453
y: -7.52984476089
theta: 1.52167880535
speed: 0.824949502945
id: 0
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.8258565013541848, 0.991188386166855]
222 self.state_dicts[msg.id][msg.t] is (-3.555182933807373, -5.817590713500977, 4.743744850158691, 14.107877731323242)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: 3.49286675453
y: -7.52984476089
theta: 1.52167880535
speed: 0.824949502945
id: 0
t: 131
xxx after update is x: 3.44344949722
y: -6.9759554863
theta: 1.57720637321
speed: 1.19750487804
id: 0
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.44344949722
y: -6.9759554863
theta: 1.57720637321
speed: 1.19750487804
id: 0
t: 132
xxx after update is x: 3.24211978912
y: -7.86431360245
theta: 1.46716034412
speed: 1.45692765713
id: 0
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:133




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: 3.24211978912
y: -7.86431360245
theta: 1.46716034412
speed: 1.45692765713
id: 0
t: 134.02013111115
theta: 4.5866894722
speed: 13.9909925461
id: 1
t: 128
xxx after update is x: -3.57860851288
y: -4.67672157288
theta: 4.83534622192
speed: 13.6752853394
id: 1
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: -3.57860851288
y: -4.67672157288
theta: 4.83534622192
speed: 13.6752853394
id: 1
t: 129
xxx after update is x: -3.28865909576
y: -5.30163526535
theta: 4.82328510284
speed: 14.1138544083
id: 1
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:131


xxx before update is x: -3.28865909576
y: -5.30163526535
theta: 4.82328510284
speed: 14.1138544083
id: 1
t: 130
xxx after update is x: -3.55518293381
y: -5.8175907135
theta: 4.74374485016
speed: 14.1078777313
id: 1
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: -3.55518293381
y: -5.8175907135
theta: 4.74374485016
speed: 14.1078777313
id: 1
t: 131
xxx after update is x: -3.44870972633
y: -6.28522491455
theta: 4.67584037781
speed: 14.1685600281
id: 1
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.9253035045318577, 0.998986531948208]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.4434494972229004, -6.975955486297607, 1.5772063732147217, 1.1975048780441284)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:133


xxx before update is x: -3.44870972633
y: -6.28522491455
theta: 4.67584037781
speed: 14.1685600281
id: 1
t: 132
xxx after update is x: -3.37407851219
y: -7.10439825058
theta: 4.74727535248
speed: 13.9835739136
id: 1
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: -3.37407851219
y: -7.10439825058
theta: 4.74727535248
speed: 13.9835739136
id: 1
t: 133
xxx after update is x: -3.23356389999
y: -7.60336923599
theta: 4.63494777679
speed: 13.9507284164
id: 1
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.23356389999
y: -7.60336923599
theta: 4.63494777679
speed: 13.9507284164
id: 1
t: 134
xxx after update is x: -3.27585268021
y: -8.49230194092
theta: 4.8627910614
speed: 14.0627365112
id: 1
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:135


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.0






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.27585268021
y: -8.49230194092
theta: 4.8627910614
speed: 14.0627365112
id: 1
t: 135
xxx after update is x: -3.28804016113
y: -9.37805175781
theta: 4.67432975769
speed: 13.8211631775
id: 1
t: 136
maneuver_negotiatir.py finish the update agent state from ros funt3maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.91111111111






self.maneuver_requested left

xxx after update is x: 3.52393102646
y: -7.75437784195
theta: 1.64448475838
speed: 1.89147734642
id: 0
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.52393102646
y: -7.75437784195
theta: 1.64448475838
speed: 1.89147734642
id: 0
t: 134
xxx after update is x: 3.57029056549
y: -6.96870565414
theta: 1.5560939312
speed: 2.29037952423
id: 0
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:135




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: 3.57029056549
y: -6.96870565414
theta: 1.5560939312
speed: 2.29037952423
id: 0
t: 135
xxx after update is x: 3.14097571373
y: -7.08409929276
theta: 1.61981630325
speed: 2.4403181076
id: 0
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:137


xxx before update is x: 3.14097571373
y: -7.08409929276
theta: 1.61981630325
speed: 2.4403181076
id: 0
t: 136
xxx after update is x: 3.44610476494
y: -6.96920204163
theta: 1.63401401043
speed: 2.84875965118
id: 0
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: 3.44610476494
y: -6.96920204163
theta: 1.63401401043
speed: 2.84875965118
id: 0
t: 137
xxx after update is x: 3.37763023376
y: -7.1685795784
theta: 1.4038271904
speed: 2.73225140572
id: 0
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:139


xxx before update is x: 3.37763023376
y: -7.1685795784
theta: 1.4038271904
speed: 2.73225140572
id: 0
t: 138
xxx after update is x: 3.59658169746
y: -6.7441444397
theta: 1.43645608425
speed: 3.2730038166
id: 0
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.59658169746
y: -6.7441444397
theta: 1.43645608425
speed: 3.2730038166
id: 0
t: 139
xxx after update is x: 3.45629310608
y: -6.27334260941
theta: 1.66349041462
speed: 3.4710047245
id: 0
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:140


aaaaaa
risk is [0.23839607352706146, 0.9999999999999993]
222 self.state_dicts[msg.id][msg.t] is (-3.378875494003296, -12.099198341369629, 4.587480545043945, 14.066203117370605)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: 3.45629310608
y: -6.27334260941
theta: 1.66349041462
speed: 3.4710047245
id: 0
t: 140
xxx after update is x: 3.44698262215
y: -6.24692106247
theta: 1.61482322216
speed: 3.50131630898
id: 0
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_nion
leave the update function 
in spin function, finish the n times spin:136




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.28804016113
y: -9.37805175781
theta: 4.67432975769
speed: 13.8211631775
id: 1
t: 136
xxx after update is x: -3.07178473473
y: -9.59808158875
theta: 4.86935043335
speed: 13.9802494049
id: 1
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:137




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: -3.07178473473
y: -9.59808158875
theta: 4.86935043335
speed: 13.9802494049
id: 1
t: 137
xxx after update is x: -3.23736214638
y: -9.8798160553
theta: 4.80684089661
speed: 13.7834663391
id: 1
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:139


xxx before update is x: -3.23736214638
y: -9.8798160553
theta: 4.80684089661
speed: 13.7834663391
id: 1
t: 138
xxx after update is x: -3.03355693817
y: -10.8892068863
theta: 4.72936010361
speed: 13.5596113205
id: 1
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: -3.03355693817
y: -10.8892068863
theta: 4.72936010361
speed: 13.5596113205
id: 1
t: 139
xxx after update is x: -3.378875494
y: -12.0991983414
theta: 4.58748054504
speed: 14.0662031174
id: 1
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: -3.378875494
y: -12.0991983414
theta: 4.58748054504
speed: 14.0662031174
id: 1
t: 140
xxx after update is x: -3.25123548508
y: -12.9313907623
theta: 4.70539522171
speed: 13.7178535461
id: 1
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.008461909010763356, 0.49919999999999787]
222 self.state_dicts[msg.id][msg.t] is (3.4469826221466064, -6.246921062469482, 1.6148232221603394, 3.5013163089752197)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: -3.25123548508
y: -12.9313907623
theta: 4.70539522171
speed: 13.7178535461
id: 1
t: 141
xxx after update is x: -3.28286075592
y: -12.5376663208
theta: 4.64533281326
speed: 13.8089370728
id: 1
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.31111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: -3.28286075592
y: -12.5376663208
theta: 4.64533281326
speed: 13.8089370728
id: 1
t: 142
xxx after update is x: -2.83065295219
y: -13.4580259323
theta: 4.73743009567
speed: 13.8589448929
id: 1
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update funcegotiatir.py in the try maneuver function update -. strat
current clock is 6.26666666667






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: 3.44698262215
y: -6.24692106247
theta: 1.61482322216
speed: 3.50131630898
id: 0
t: 141
xxx after update is x: 3.36596703529
y: -5.6768655777
theta: 1.76401460171
speed: 3.99806213379
id: 0
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: 3.36596703529
y: -5.6768655777
theta: 1.76401460171
speed: 3.99806213379
id: 0
t: 142
xxx after update is x: 3.09803771973
y: -6.17427682877
theta: 1.60394847393
speed: 5.00479364395
id: 0
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: 3.09803771973
y: -6.17427682877
theta: 1.60394847393
speed: 5.00479364395
id: 0
t: 143
xxx after update is x: 2.68377256393
y: -5.99245166779
theta: 1.73814666271
speed: 4.4428691864
id: 0
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.68377256393
y: -5.99245166779
theta: 1.73814666271
speed: 4.4428691864
id: 0
t: 144
xxx after update is x: 3.24096655846
y: -5.79230594635
theta: 1.80283153057
speed: 4.8952832222
id: 0
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:145


aaaaaa
risk is [3.0313476554351465e-39, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.7297861576080322, -14.578606605529785, 4.726213455200195, 13.910691261291504)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:146


xxx before update is x: 3.24096655846
y: -5.79230594635
theta: 1.80283153057
speed: 4.8952832222
id: 0
t: 145
xxx after update is x: 3.1327009201
y: -6.13726806641
theta: 1.65906953812
speed: 5.04057645798
id: 0
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: 3.1327009201
y: -6.13726806641
theta: 1.65906953812
speed: 5.04057645798
id: 0
t: 146
xxx after update is x: 3.17227005959
y: -5.32073783875
theta: 1.57426083088
speed: 5.14657497406
id: 0
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: 3.17227005959
y: -5.32073783875
theta: 1.57426083088
speed: 5.14657497406
id: 0
t: 147
xxx after update is x: 3.46016335487
y: -5.43505907059
theta: 1.67014598846
speed: 5.23097848892
id: 0
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:149


xxx before ution
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: -2.83065295219
y: -13.4580259323
theta: 4.73743009567
speed: 13.8589448929
id: 1
t: 143
xxx after update is x: -3.43716692924
y: -13.6428451538
theta: 4.73017597198
speed: 13.8844404221
id: 1
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: -3.43716692924
y: -13.6428451538
theta: 4.73017597198
speed: 13.8844404221
id: 1
t: 144
xxx after update is x: -2.72978615761
y: -14.5786066055
theta: 4.7262134552
speed: 13.9106912613
id: 1
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
!!! change status from grant to normal
current clock is 6.44444444444
!!!threading.Timer
tgarnt done
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [8.549608833484304e-70, 0.44959999999999817]
222 self.state_dicts[msg.id][msg.t] is (3.240966558456421, -5.792305946350098, 1.8028315305709839, 4.895283222198486)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:146


xxx before update is x: -2.72978615761
y: -14.5786066055
theta: 4.7262134552
speed: 13.9106912613
id: 1
t: 145
xxx after update is x: -3.65037369728
y: -15.2432823181
theta: 4.90166330338
speed: 13.7743425369
id: 1
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: -3.65037369728
y: -15.2432823181
theta: 4.90166330338
speed: 13.7743425369
id: 1
t: 146
xxx after update is x: -3.49973154068
y: -15.9636001587
theta: 4.77973508835
speed: 13.8899259567
id: 1
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: -3.49973154068
y: -15.9636001587
theta: 4.77973508835
speed: 13.8899259567
id: 1
t: 147
xxx after update is x: -2.76529121399
y: -16.4063739777
theta: 4.7611489296
speed: 14.0861368179
id: 1
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [1.4531808073433347e-137, 0.46559999999999807]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: -2.76529121399
y: -16.4063739777
theta: 4.7611489296
speed: 14.0861368179
id: 1
t: 148
xxx after update is x: -3.41617321968
y: -16.9331550598
theta: 4.77731180191
speed: 13.9960517883
id: 1
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.022209405899048, -5.204970359802246, 1.779834508895874, 6.249479293823242)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: -3.41617321968
y: -16.9331550598
theta:pdate is x: 3.46016335487
y: -5.43505907059
theta: 1.67014598846
speed: 5.23097848892
id: 0
t: 148
xxx after update is x: 3.0222094059
y: -5.2049703598
theta: 1.7798345089
speed: 6.24947929382
id: 0
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.62222222222






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [1.6030627795507763e-137, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.416173219680786, -16.933155059814453, 4.7773118019104, 13.996051788330078)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.0222094059
y: -5.2049703598
theta: 1.7798345089
speed: 6.24947929382
id: 0
t: 149
xxx after update is x: 3.29001235962
y: -4.80614614487
theta: 1.6348246336
speed: 6.13176822662
id: 0
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:150




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: 3.29001235962
y: -4.80614614487
theta: 1.6348246336
speed: 6.13176822662
id: 0
t: 150
xxx after update is x: 3.00791740417
y: -4.12676429749
theta: 1.63668811321
speed: 6.27503871918
id: 0
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:152


xxx before update is x: 3.00791740417
y: -4.12676429749
theta: 1.63668811321
speed: 6.27503871918
id: 0
t: 151
xxx after update is x: 2.90063929558
y: -4.05276632309
theta: 1.92432880402
speed: 6.78201913834
id: 0
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:153


xxx before update is x: 2.90063929558
y: -4.05276632309
theta: 1.92432880402
speed: 6.78201913834
id: 0
t: 152
xxx after update is x: 3.32181763649
y: -3.78283882141
theta: 1.93245577812
speed: 6.91845607758
id: 0
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [9.564093486297906e-225, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0644140243530273, -19.8648624420166, 4.571944713592529, 13.81663990020752)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:154


xxx before update is x: 3.32181763649
y: -3.78283882141
theta: 1.93245577812
speed: 6.91845607758
id: 0
t: 153
xxx after update is x: 3.12348365784
y: -3.7726020813
theta: 1.8700106144
speed: 7.1598238945
id: 0
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:155


xxx before update is x: 3.12348365784
y: -3.7726020813
theta: 1.8700106144
speed: 7.1598238945
id: 0
t: 154
xxx after update is x: 2.59302902222
y: -3.14565205574
theta: 1.97068989277
speed: 7.43662309647
id: 0
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_ 4.77731180191
speed: 13.9960517883
id: 1
t: 149
xxx after update is x: -3.01710677147
y: -18.2662620544
theta: 4.79789352417
speed: 13.7266540527
id: 1
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.66666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: -3.01710677147
y: -18.2662620544
theta: 4.79789352417
speed: 13.7266540527
id: 1
t: 150
xxx after update is x: -3.50109767914
y: -18.274055481
theta: 4.63081359863
speed: 13.9049062729
id: 1
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:152


xxx before update is x: -3.50109767914
y: -18.274055481
theta: 4.63081359863
speed: 13.9049062729
id: 1
t: 151
xxx after update is x: -3.30921888351
y: -18.5200538635
theta: 4.64448547363
speed: 14.5947856903
id: 1
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [7.951199231383395e-225, 0.503999999999998]
222 self.state_dicts[msg.id][msg.t] is (2.900639295578003, -4.0527663230896, 1.9243288040161133, 6.782019138336182)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:153


xxx before update is x: -3.30921888351
y: -18.5200538635
theta: 4.64448547363
speed: 14.5947856903
id: 1
t: 152
xxx after update is x: -3.06441402435
y: -19.864862442
theta: 4.57194471359
speed: 13.8166399002
id: 1
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
tgarnt done


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:154


xxx before update is x: -3.06441402435
y: -19.864862442
theta: 4.57194471359
speed: 13.8166399002
id: 1
t: 153
xxx after update is x: -3.21652293205
y: -19.8114242554
theta: 4.7449631691
speed: 14.0067796707
id: 1
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:155


xxx before update is x: -3.21652293205
y: -19.8114242554
theta: 4.7449631691
speed: 14.0067796707
id: 1
t: 154
xxx after update is x: -3.81473350525
y: -21.1473426819
theta: 4.75354099274
speed: 13.9897689819
id: 1
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: -3.81473350525
y: -21.1473426819
theta: 4.75354099274
speed: 13.9897689819
id: 1
t: 155
xxx after update is x: -3.46855974197
y: -21.3982048035
theta: 4.61237812042
speed: 14.0940532684
id: 1
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.46855974197
y: -21.3982048035
theta: 4.61237812042
speed: 14.0940532684init:
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: 2.59302902222
y: -3.14565205574
theta: 1.97068989277
speed: 7.43662309647
id: 0
t: 155
xxx after update is x: 2.07159328461
y: -3.05927371979
theta: 2.13698220253
speed: 7.9277715683
id: 0
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.07159328461
y: -3.05927371979
theta: 2.13698220253
speed: 7.9277715683
id: 0
t: 156
xxx after update is x: 3.30954766273
y: -2.15349602699
theta: 2.16354250908
speed: 7.9199924469
id: 0
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:157


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.97777777778






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.30954766273
y: -2.15349602699
theta: 2.16354250908
speed: 7.9199924469
id: 0
t: 157
xxx after update is x: 2.73673558235
y: -1.59132397175
theta: 2.00240468979
speed: 8.5920381546
id: 0
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:158


aaaaaa
risk is [3.592627528488216e-294, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.8175606727600098, -22.98862075805664, 4.610538005828857, 14.091712951660156)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.73673558235
y: -1.59132397175
theta: 2.00240468979
speed: 8.5920381546
id: 0
t: 158
xxx after update is x: 1.94592320919
y: -1.55668389797
theta: 2.14541983604
speed: 8.4055185318
id: 0
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:159




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 1.94592320919
y: -1.55668389797
theta: 2.14541983604
speed: 8.4055185318
id: 0
t: 159
xxx after update is x: 1.44691550732
y: -1.62442290783
theta: 2.40340137482
speed: 8.75243854523
id: 0
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:160




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: 1.44691550732
y: -1.62442290783
theta: 2.40340137482
speed: 8.75243854523
id: 0
t: 160
xxx after update is x: 1.60829472542
y: -0.99750328064
theta: 2.24857401848
speed: 9.0786857605
id: 0
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: 1.60829472542
y: -0.99750328064
theta: 2.24857401848
speed: 9.0786857605
id: 0
t: 161
xxx after update is x: 1.44402825832
y: -1.45380520821
theta: 2.24109172821
speed: 9.32761192322
id: 0
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:163


xxx before update is x: 1.44402825832
y: -1.45380520821
theta: 2.24109172821
speed: 9.32761192322
id: 0
t: 162
xxx afte
id: 1
t: 156
xxx after update is x: -2.81126475334
y: -22.4076747894
theta: 4.66266965866
speed: 13.7574806213
id: 1
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:157


aaaaaa
aaaaaabbbbb
risk is [7.016800481224262e-281, 0.478399999999998]
222 self.state_dicts[msg.id][msg.t] is (3.3095476627349854, -2.153496026992798, 2.1635425090789795, 7.919992446899414)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: -2.81126475334
y: -22.4076747894
theta: 4.66266965866
speed: 13.7574806213
id: 1
t: 157
xxx after update is x: -2.81756067276
y: -22.9886207581
theta: 4.61053800583
speed: 14.0917129517
id: 1
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.02222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:159


xxx before update is x: -2.81756067276
y: -22.9886207581
theta: 4.61053800583
speed: 14.0917129517
id: 1
t: 158
xxx after update is x: -3.4087407589
y: -22.7944850922
theta: 4.47949838638
speed: 13.9622106552
id: 1
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.4087407589
y: -22.7944850922
theta: 4.47949838638
speed: 13.9622106552
id: 1
t: 159
xxx after update is x: -3.466599226
y: -23.7400913239
theta: 4.63837623596
speed: 13.7359600067
id: 1
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:160




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: -3.466599226
y: -23.7400913239
theta: 4.63837623596
speed: 13.7359600067
id: 1
t: 160
xxx after update is x: -3.44411063194
y: -24.4557628632
theta: 4.67410230637
speed: 14.2292709351
id: 1
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.44411063194
y: -24.4557628632
theta: 4.67410230637
speed: 14.2292709351
id: 1
t: 161
xxx after update is x: -3.06936812401
y: -24.7070140839
theta: 4.67086458206
speed: 13.8474388123
id: 1
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:162




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.06936812401
y: -24.7070140839
theta: 4.67086458206
speed: 13.8474388123
id: 1
t: 162
xxx after update is x: -3.84911799431
y: -25.6216907501
theta: 4.75933599472
speed: 13.712677002
id: 1
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:163




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: -3.84911799431
y: -25.6216907501
theta: 4.75933599472
speed: 13.712677002
id: 1
t: 163
xxx after update is x: -2.94609165192
y: -26.6070079803
theta: 4.82801r update is x: 1.45547413826
y: 0.0461045689881
theta: 2.28171515465
speed: 9.38978004456
id: 0
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: 1.45547413826
y: 0.0461045689881
theta: 2.28171515465
speed: 9.38978004456
id: 0
t: 163
xxx after update is x: 0.737030625343
y: -0.00761353783309
theta: 2.44806861877
speed: 9.88179111481
id: 0
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.28888888889






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:165


xxx before update is x: 0.737030625343
y: -0.00761353783309
theta: 2.44806861877
speed: 9.88179111481
id: 0
t: 164
xxx after update is x: 1.26306164265
y: -0.0406361930072
theta: 2.38796305656
speed: 10.1360311508
id: 0
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:166


xxx before update is x: 1.26306164265
y: -0.0406361930072
theta: 2.38796305656
speed: 10.1360311508
id: 0
t: 165
xxx after update is x: 0.0908880010247
y: 0.34641712904
theta: 2.2822766304
speed: 10.572517395
id: 0
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.04046368598938, -27.677289962768555, 4.874837875366211, 14.107229232788086)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: 0.0908880010247
y: 0.34641712904
theta: 2.2822766304
speed: 10.572517395
id: 0
t: 166
xxx after update is x: 0.333214998245
y: 0.348444461823
theta: 2.62774252892
speed: 10.4536190033
id: 0
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: 0.333214998245
y: 0.348444461823
theta: 2.62774252892
speed: 10.4536190033
id: 0
t: 167
xxx after update is x: -0.618849515915
y: 1.15405201912
theta: 2.3006234169
speed: 10.9250936508
id: 0
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: -0.618849515915
y: 1.15405201912
theta: 2.3006234169
speed: 10.9250936508
id: 0
t: 168
xxx after update is x: -1.01180648804
y: 1.34555840492
theta: 2.40465450287
speed: 11.4914312363
id: 0
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: -1.01180648804
y: 1.34555840492
theta: 2.40465450287
speed: 11.4914312363
id: 0
t: 169
xxx after update is x: -1.81043434143
y: 1.35412669182
theta: 2.61825537682
speed: 11.3988676071
id: 0
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0771164
speed: 13.8420724869
id: 1
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4895999999999979]
222 self.state_dicts[msg.id][msg.t] is (0.7370306253433228, -0.007613537833094597, 2.448068618774414, 9.881791114807129)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.94609165192
y: -26.6070079803
theta: 4.82801771164
speed: 13.8420724869
id: 1
t: 164
xxx after update is x: -3.51121330261
y: -27.0567646027
theta: 4.66005992889
speed: 13.587720871
id: 1
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:165


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.33333333333






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.51121330261
y: -27.0567646027
theta: 4.66005992889
speed: 13.587720871
id: 1
t: 165
xxx after update is x: -3.04046368599
y: -27.6772899628
theta: 4.87483787537
speed: 14.1072292328
id: 1
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:166


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.04046368599
y: -27.6772899628
theta: 4.87483787537
speed: 14.1072292328
id: 1
t: 166
xxx after update is x: -3.35641908646
y: -28.3771152496
theta: 4.68751621246
speed: 13.8150539398
id: 1
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:167


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: -3.35641908646
y: -28.3771152496
theta: 4.68751621246
speed: 13.8150539398
id: 1
t: 167
xxx after update is x: -2.9437584877
y: -28.4868888855
theta: 4.82086753845
speed: 14.0067043304
id: 1
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4607999999999981]
222 self.state_dicts[msg.id][msg.t] is (-0.618849515914917, 1.1540520191192627, 2.3006234169006348, 10.925093650817871)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: -2.9437584877
y: -28.4868888855
theta: 4.82086753845
speed: 14.0067043304
id: 1
t: 168
xxx after update is x: -3.57217001915
y: -28.8886108398
theta: 4.78102779388
speed: 13.7797718048
id: 1
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: -3.57217001915
y: -28.8886108398
theta: 4.78102779388
speed: 13.7797718048
id: 1
t: 169
xxx after update is x: -2.87689328194
y: -29.928943634
theta: 4.65879106522
speed: 14.0549030304
id: 1
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.]
222 self.state_dicts[msg.id][msg.t] is (-2.8768932819366455, -29.928943634033203, 4.6587910652160645, 14.054903030395508)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:171


xxx before update is x: -1.81043434143
y: 1.35412669182
theta: 2.61825537682
speed: 11.3988676071
id: 0
t: 170
xxx after update is x: -1.43658316135
y: 2.00703859329
theta: 2.61641669273
speed: 11.9690694809
id: 0
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: -1.43658316135
y: 2.00703859329
theta: 2.61641669273
speed: 11.9690694809
id: 0
t: 171
xxx after update is x: -2.27987670898
y: 1.91722893715
theta: 2.80139684677
speed: 11.9227561951
id: 0
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.64444444444






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:173


xxx before update is x: -2.27987670898
y: 1.91722893715
theta: 2.80139684677
speed: 11.9227561951
id: 0
t: 172
xxx after update is x: -2.30686640739
y: 2.26335430145
theta: 2.72336888313
speed: 12.0325088501
id: 0
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: -2.30686640739
y: 2.26335430145
theta: 2.72336888313
speed: 12.0325088501
id: 0
t: 173
xxx after update is x: -2.8230741024
y: 2.36313414574
theta: 2.80316758156
speed: 12.6294488907
id: 0
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3454315662384033, -32.46662902832031, 4.73105525970459, 14.058757781982422)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: -2.8230741024
y: 2.36313414574
theta: 2.80316758156
speed: 12.6294488907
id: 0
t: 174
xxx after update is x: -4.17595672607
y: 2.71856021881
theta: 2.72390580177
speed: 12.7687244415
id: 0
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: -4.17595672607
y: 2.71856021881
theta: 2.72390580177
speed: 12.7687244415
id: 0
t: 175
xxx after update is x: -4.26880216599
y: 2.88797855377
theta: 2.870459795
speed: 12.8084030151
id: 0
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:177


xxx before update is x: -4.26880216599
y: 2.88797855377
theta: 2.870459795
speed: 12.8084030151
id: 0
t: 176
xxx after update is x: -5.03373479843
y: 2.47584199905
theta: 3.1067006588
speed: 12.9003763199
id: 0
t: 177
maneuver_negotiatir.py finisspeed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:171


xxx before update is x: -2.87689328194
y: -29.928943634
theta: 4.65879106522
speed: 14.0549030304
id: 1
t: 170
xxx after update is x: -2.93201494217
y: -30.1591911316
theta: 4.82279396057
speed: 14.0600852966
id: 1
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (-1.436583161354065, 2.0070385932922363, 2.6164166927337646, 11.969069480895996)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: -2.93201494217
y: -30.1591911316
theta: 4.82279396057
speed: 14.0600852966
id: 1
t: 171
xxx after update is x: -3.23637199402
y: -31.0289802551
theta: 4.50314855576
speed: 14.2068805695
id: 1
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.23637199402
y: -31.0289802551
theta: 4.50314855576
speed: 14.2068805695
id: 1
t: 172
xxx after update is x: -3.36804270744
y: -31.65691185
theta: 4.75914287567
speed: 13.7927999496
id: 1
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:173


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.68888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: -3.36804270744
y: -31.65691185
theta: 4.75914287567
speed: 13.7927999496
id: 1
t: 173
xxx after update is x: -3.34543156624
y: -32.4666290283
theta: 4.7310552597
speed: 14.058757782
id: 1
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.49919999999999787]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: -3.34543156624
y: -32.4666290283
theta: 4.7310552597
speed: 14.058757782
id: 1
t: 174
xxx after update is x: -3.04647445679
y: -32.8445358276
theta: 4.6894903183
speed: 14.018368721
id: 1
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (-4.175956726074219, 2.718560218811035, 2.7239058017730713, 12.76872444152832)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: -3.04647445679
y: -32.8445358276
theta: 4.6894903183
speed: 14.018368721
id: 1
t: 175
xxx after update is x: -3.18007993698
y: -33.465221405
theta: 4.59212636948
speed: 13.7969226837
id: 1
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.18007993698
y: -33.465221405
theta: 4.59212636948
speed: 13.7969226837
id: 1
t: 176
xxx after update is x: -2.59453320503
y: -34.1241531372
theta: 4.70439004898
speed: 13.6808996201
id: 1
t: 177
maneuver_negotiatir.py finish the update agent state from h the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.5945332050323486, -34.12415313720703, 4.704390048980713, 13.680899620056152)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: -5.03373479843
y: 2.47584199905
theta: 3.1067006588
speed: 12.9003763199
id: 0
t: 177
xxx after update is x: -5.50657939911
y: 3.12568712234
theta: 3.03027033806
speed: 13.3845100403
id: 0
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -5.50657939911
y: 3.12568712234
theta: 3.03027033806
speed: 13.3845100403
id: 0
t: 178
xxx after update is x: -5.85469532013
y: 3.37356281281
theta: 2.97890949249
speed: 13.5871248245
id: 0
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:179




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -5.85469532013
y: 3.37356281281
theta: 2.97890949249
speed: 13.5871248245
id: 0
t: 179
xxx after update is x: -6.64345502853
y: 3.6638302803
theta: 3.24071717262
speed: 13.4120893478
id: 0
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:180


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.0






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:181


xxx before update is x: -6.64345502853
y: 3.6638302803
theta: 3.24071717262
speed: 13.4120893478
id: 0
t: 180
xxx after update is x: -7.82556724548
y: 3.60784482956
theta: 3.24413633347
speed: 13.5769023895
id: 0
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:182


xxx before update is x: -7.82556724548
y: 3.60784482956
theta: 3.24413633347
speed: 13.5769023895
id: 0
t: 181
xxx after update is x: -7.86088705063
y: 3.19316768646
theta: 3.1054494381
speed: 13.558889389
id: 0
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:183


xxx before update is x: -7.86088705063
y: 3.19316768646
theta: 3.1054494381
speed: 13.558889389
id: 0
t: 182
xxx after update is x: -8.6991558075
y: 3.36056804657
theta: 3.06757593155
speed: 13.8586244583
id: 0
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: -8.6991558075
y: 3.36056804657
theta: 3.06757593155
speed: 13.8586244583
id: 0
t: 183
xxx after update is x: -9.16159629822
y: 3.61191105843
theta: 3.32777833939
speed: 14.1511116028
id: 0
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spros funtion
leave the update function 
in spin function, finish the n times spin:177




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: -2.59453320503
y: -34.1241531372
theta: 4.70439004898
speed: 13.6808996201
id: 1
t: 177
xxx after update is x: -3.4906668663
y: -34.6399841309
theta: 4.66719102859
speed: 13.6149053574
id: 1
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.4906668663
y: -34.6399841309
theta: 4.66719102859
speed: 13.6149053574
id: 1
t: 178
xxx after update is x: -3.04320955276
y: -35.3135910034
theta: 4.60503768921
speed: 13.8707904816
id: 1
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:179




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.04320955276
y: -35.3135910034
theta: 4.60503768921
speed: 13.8707904816
id: 1
t: 179
xxx after update is x: -3.28730511665
y: -35.9933853149
theta: 4.89356422424
speed: 14.078338623
id: 1
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:180


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5151999999999983]
222 self.state_dicts[msg.id][msg.t] is (-6.6434550285339355, 3.663830280303955, 3.2407171726226807, 13.412089347839355)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.0






self.maneuver_requested None
xxx before update is x: -3.28730511665
y: -35.9933853149
theta: 4.89356422424
speed: 14.078338623
id: 1
t: 180
xxx after update is x: -3.44337773323
y: -36.7943611145
theta: 4.7852396965
speed: 13.9082860947
id: 1
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:181


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.44337773323
y: -36.7943611145
theta: 4.7852396965
speed: 13.9082860947
id: 1
t: 181
xxx after update is x: -3.14725184441
y: -38.0896530151
theta: 4.72402906418
speed: 13.518538475
id: 1
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:182




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:183


xxx before update is x: -3.14725184441
y: -38.0896530151
theta: 4.72402906418
speed: 13.518538475
id: 1
t: 182
xxx after update is x: -3.37622976303
y: -38.6706047058
theta: 4.73940658569
speed: 14.0003576279
id: 1
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: -3.37622976303
y: -38.6706047058
theta: 4.73940658569
speed: 14.0003576279
id: 1
t: 183
xxx after update is x: -2.77352190018
y: -38.4804153442
theta: 4.85634994507
speed: 14.0232820511
id: 1
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:185


xxx before update is x: -2.77352190018
y: -38.4804153442
theta: 4.85634994507
speed: 14.0232820511
id: 1
t: 184
xxx after update is x: -3.24816989899
y: -39.0113601685
theta: 4.72390222549
speed: 13.7549648285
id: 1
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.24816989899
y: -39.0113601685
theta: 4.72390222549
speed: 13.7549648285
id: 1
t: 185
xxx after update is x: -3.19414448738
y: -39.6279640198
theta: 4.8480796814
speed: 14.0460147858
id: 1
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:186


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: -3.19414448738
y: -39.6279640198
theta: 4.8480796814
speed: 14.0460147858
id: 1
t: 186
xxx after update is x: -3.67657256126
y: -40.9252662659
theta: 4.73946094513
speed: 13.8872299194
id: 1
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (-10.724215507507324, 3.603062629699707, 3.281079053878784, 13.780011177062988)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.67657256126
y: -40.9252662659
theta: 4.73946094513
speed: 13.8872299194
id: 1
t: 187
xxx after update is x: -2.86581778526
y: -40.8198738098
theta: 4.79317617416
speed: 13.7460708618
id: 1
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:188




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: -2.86581778526
y: -40.8198738098
theta: 4.79317617416
speed: 13.7460708618
id: 1
t: 188
xxx after update is x: -3.20013785362
y: -41.8309249878
theta: 4.61538314819
speed: 14.051566124
id: 1
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.4






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: -3.20013785362
y: -41.8309249878
theta: 4.61538314819
speed: 14.051566124
id: 1
t: 189
xxx after update is x: -3.70869588852
y: -42.2446899414
theta: 4.6213259697
speed: 13.8804512024
id: 1
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -3.70869588852
y: -42.2446899414
theta: 4.6213259697
speed: 13.8804512024
id: 1
t: 190
xxx after update is x: -4.05565023422
y: -42.9303894043
theta: 4.55417537689
speed: 13.9404945374
id: 1
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.49919999999999787]
222 self.state_dicts[msg.id][msg.t] is (-13.187941551208496, 3.32739472389221in:185

xxx before update is x: -9.16159629822
y: 3.61191105843
theta: 3.32777833939
speed: 14.1511116028
id: 0
t: 184
xxx after update is x: -9.69756603241
y: 3.45186901093
theta: 3.18362092972
speed: 13.7550563812
id: 0
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: -9.69756603241
y: 3.45186901093
theta: 3.18362092972
speed: 13.7550563812
id: 0
t: 185
xxx after update is x: -10.1763410568
y: 3.67827892303
theta: 3.13415241241
speed: 14.1194782257
id: 0
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1941444873809814, -39.62796401977539, 4.848079681396484, 14.046014785766602)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -10.1763410568
y: 3.67827892303
theta: 3.13415241241
speed: 14.1194782257
id: 0
t: 186
xxx after update is x: -10.7242155075
y: 3.6030626297
theta: 3.28107905388
speed: 13.7800111771
id: 0
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:187




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:188


xxx before update is x: -10.7242155075
y: 3.6030626297
theta: 3.28107905388
speed: 13.7800111771
id: 0
t: 187
xxx after update is x: -11.303319931
y: 4.02045726776
theta: 3.19619941711
speed: 13.8144788742
id: 0
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.35555555556






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: -11.303319931
y: 4.02045726776
theta: 3.19619941711
speed: 13.8144788742
id: 0
t: 188
xxx after update is x: -12.4622545242
y: 3.23704886436
theta: 3.00969862938
speed: 13.6114120483
id: 0
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: -12.4622545242
y: 3.23704886436
theta: 3.00969862938
speed: 13.6114120483
id: 0
t: 189
xxx after update is x: -12.0195245743
y: 3.94601774216
theta: 3.27945756912
speed: 13.7224149704
id: 0
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -12.0195245743
y: 3.94601774216
theta: 3.27945756912
speed: 13.7224149704
id: 0
t: 190
xxx after update is x: -13.1879415512
y: 3.32739472389
theta: 3.20638275146
speed: 14.2103862762
id: 0
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-4.055650234222412, -42.930389404296875, 4.55417537689209, 13.940494537353516)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:2, 3.2063827514648438, 14.210386276245117)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:192


xxx before update is x: -4.05565023422
y: -42.9303894043
theta: 4.55417537689
speed: 13.9404945374
id: 1
t: 191
xxx after update is x: -3.45430707932
y: -43.8330764771
theta: 4.74877309799
speed: 13.6513671875
id: 1
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.45430707932
y: -43.8330764771
theta: 4.74877309799
speed: 13.6513671875
id: 1
t: 192
xxx after update is x: -3.18876695633
y: -44.0080566406
theta: 4.70719337463
speed: 13.7141399384
id: 1
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:193


removed car with id 0 from grantlist. currentgrantlist: {}


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:194


xxx before update is x: -3.18876695633
y: -44.0080566406
theta: 4.70719337463
speed: 13.7141399384
id: 1
t: 193
xxx after update is x: -4.1797876358
y: -45.0063819885
theta: 4.6119761467
speed: 14.2177352905
id: 1
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -4.1797876358
y: -45.0063819885
theta: 4.6119761467
speed: 14.2177352905
id: 1
t: 194
xxx after update is x: -3.5005800724
y: -45.4178314209
theta: 4.74209833145
speed: 13.858007431
id: 1
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:195




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:196


xxx before update is x: -3.5005800724
y: -45.4178314209
theta: 4.74209833145
speed: 13.858007431
id: 1
t: 195
xxx after update is x: -3.05138635635
y: -45.8352241516
theta: 4.75674438477
speed: 13.5394477844
id: 1
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.71111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -3.05138635635
y: -45.8352241516
theta: 4.75674438477
speed: 13.5394477844
id: 1
t: 196
xxx after update is x: -3.50662589073
y: -46.2147102356
theta: 4.79367017746
speed: 13.8519201279
id: 1
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (-17.259864807128906, 3.3094558715820312, 3.101588010787964, 13.980813980102539)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.50662589073
y: -46.2147102356
theta: 4.79367017746
speed: 13.8519201279
id: 1
t: 197
xxx after update is x: -2.91067647934
y: -47.3082733154
theta: 4.76184797287
speed: 14.1583433151
id: 1
t: 198
maneuver_negotiatir.py finish the
leave the update function 
in spin function, finish the n times spin:192


xxx before update is x: -13.1879415512
y: 3.32739472389
theta: 3.20638275146
speed: 14.2103862762
id: 0
t: 191
xxx after update is x: -13.3360614777
y: 3.6553800106
theta: 3.1718776226
speed: 13.816409111
id: 0
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -13.3360614777
y: 3.6553800106
theta: 3.1718776226
speed: 13.816409111
id: 0
t: 192
xxx after update is x: -14.2008666992
y: 3.62066578865
theta: 3.00610256195
speed: 13.544757843
id: 0
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:193




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:194


xxx before update is x: -14.2008666992
y: 3.62066578865
theta: 3.00610256195
speed: 13.544757843
id: 0
t: 193
xxx after update is x: -15.439748764
y: 3.08167552948
theta: 3.23683452606
speed: 13.6595315933
id: 0
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -15.439748764
y: 3.08167552948
theta: 3.23683452606
speed: 13.6595315933
id: 0
t: 194
xxx after update is x: -15.2707700729
y: 3.56716489792
theta: 3.14525842667
speed: 13.6498670578
id: 0
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:195


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.66666666667






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:196


xxx before update is x: -15.2707700729
y: 3.56716489792
theta: 3.14525842667
speed: 13.6498670578
id: 0
t: 195
xxx after update is x: -16.2216720581
y: 3.17653918266
theta: 3.11038064957
speed: 13.9254837036
id: 0
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -16.2216720581
y: 3.17653918266
theta: 3.11038064957
speed: 13.9254837036
id: 0
t: 196
xxx after update is x: -17.2598648071
y: 3.30945587158
theta: 3.10158801079
speed: 13.9808139801
id: 0
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5066258907318115, -46.2147102355957, 4.793670177459717, 13.851920127868652)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:198


xxx before update is x: -17.2598648071
y: 3.30945587158
theta: 3.10158801079
speed: 13.9808139801
id: 0
t: 197
xxx after update is x: -17.4670467377
y: 3.51622915268
theta: 3.16053414345
speed: 13.708899498
id: 0
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -17.4670467377
y: 3.51622915268
theta: 3.16053414345
speed: 13.708899498
id: 0
t: 198
xxx after update is x: -18.9750652313
y: 2.98720860481
theta: 3.09011363983
speed: 13.8498458862
id: 0
t: 199
 update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:198




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:199


xxx before update is x: -2.91067647934
y: -47.3082733154
theta: 4.76184797287
speed: 14.1583433151
id: 1
t: 198
xxx after update is x: -3.14672160149
y: -47.8064727783
theta: 4.6918182373
speed: 13.5029029846
id: 1
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: -3.14672160149
y: -47.8064727783
theta: 4.6918182373
speed: 13.5029029846
id: 1
t: 199
xxx after update is x: -2.87988328934
y: -48.2390594482
theta: 4.79842567444
speed: 14.4202194214
id: 1
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -2.87988328934
y: -48.2390594482
theta: 4.79842567444
speed: 14.4202194214
id: 1
t: 200
xxx after update is x: -3.37960338593
y: -49.3105201721
theta: 4.57605075836
speed: 14.0594396591
id: 1
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4895999999999979]
222 self.state_dicts[msg.id][msg.t] is (-19.49370765686035, 3.242624282836914, 3.06554913520813, 13.873167991638184)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:202


xxx before update is x: -3.37960338593
y: -49.3105201721
theta: 4.57605075836
speed: 14.0594396591
id: 1
t: 201
xxx after update is x: -3.23036456108
y: -50.1049919128
theta: 4.51404190063
speed: 14.0030050278
id: 1
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:203


xxx before update is x: -3.23036456108
y: -50.1049919128
theta: 4.51404190063
speed: 14.0030050278
id: 1
t: 202
xxx after update is x: -2.78783130646
y: -49.9557342529
theta: 4.74150371552
speed: 13.7278213501
id: 1
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:204


xxx before update is x: -2.78783130646
y: -49.9557342529
theta: 4.74150371552
speed: 13.7278213501
id: 1
t: 203
xxx after update is x: -3.42656588554
y: -50.5013046265
theta: 4.69271039963
speed: 13.8447742462
id: 1
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.06666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:205


xxx before update is x: -3.42656588554
y: -50.5013046265
theta: 4.69271039963
speed: 13.8447742462
id: 1
t: 204
xxx after update is x: -3.48922252655
y: -51.6244468689
theta: 4.63058805466
speed: 14.0303573608
id: 1
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion
**********maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:199




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: -18.9750652313
y: 2.98720860481
theta: 3.09011363983
speed: 13.8498458862
id: 0
t: 199
xxx after update is x: -18.9204978943
y: 2.78236269951
theta: 2.99483823776
speed: 13.5503883362
id: 0
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -18.9204978943
y: 2.78236269951
theta: 2.99483823776
speed: 13.5503883362
id: 0
t: 200
xxx after update is x: -19.4937076569
y: 3.24262428284
theta: 3.06554913521
speed: 13.8731679916
id: 0
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion
removed car with id 0 from grantlist. currentgrantlist: {}


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:202


xxx before update is x: -19.4937076569
y: 3.24262428284
theta: 3.06554913521
speed: 13.8731679916
id: 0
t: 201
xxx after update is x: -20.0789546967
y: 3.32011413574
theta: 3.14418768883
speed: 13.8096027374
id: 0
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2303645610809326, -50.1049919128418, 4.514041900634766, 14.003005027770996)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:203


xxx before update is x: -20.0789546967
y: 3.32011413574
theta: 3.14418768883
speed: 13.8096027374
id: 0
t: 202
xxx after update is x: -20.5569763184
y: 3.28648996353
theta: 3.20700097084
speed: 13.8604059219
id: 0
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.02222222222






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:204


xxx before update is x: -20.5569763184
y: 3.28648996353
theta: 3.20700097084
speed: 13.8604059219
id: 0
t: 203
xxx after update is x: -21.2904644012
y: 3.07790231705
theta: 3.11966776848
speed: 13.8206892014
id: 0
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:205


xxx before update is x: -21.2904644012
y: 3.07790231705
theta: 3.11966776848
speed: 13.8206892014
id: 0
t: 204
xxx after update is x: -21.5917243958
y: 3.53068900108
theta: 3.22318148613
speed: 14.0736236572
id: 0
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:206


xxx before update is x: -21.5917243958
y: 3.53068900108
theta: 3.22318148613
speed: 14.0736236572
id: 0
t: 205
xxx after update is x: -22.6543331146
y: 2.79705381393
theta: 3.16777420044
speed: 13.8870697021
id: 0
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion


goin**normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4943999999999979]
222 self.state_dicts[msg.id][msg.t] is (-21.591724395751953, 3.530689001083374, 3.2231814861297607, 14.073623657226562)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.48922252655
y: -51.6244468689
theta: 4.63058805466
speed: 14.0303573608
id: 1
t: 205
xxx after update is x: -3.19468379021
y: -52.3450088501
theta: 4.6110200882
speed: 13.8780517578
id: 1
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:206




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:207


xxx before update is x: -3.19468379021
y: -52.3450088501
theta: 4.6110200882
speed: 13.8780517578
id: 1
t: 206
xxx after update is x: -3.45864868164
y: -52.5987968445
theta: 4.62438058853
speed: 13.9597377777
id: 1
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:208


xxx before update is x: -3.45864868164
y: -52.5987968445
theta: 4.62438058853
speed: 13.9597377777
id: 1
t: 207
xxx after update is x: -3.46099638939
y: -53.3205108643
theta: 4.64198350906
speed: 13.9078454971
id: 1
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -3.46099638939
y: -53.3205108643
theta: 4.64198350906
speed: 13.9078454971
id: 1
t: 208
xxx after update is x: -3.48723316193
y: -54.0685768127
theta: 4.67876148224
speed: 13.7474422455
id: 1
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4927999999999979]
222 self.state_dicts[msg.id][msg.t] is (-24.19747543334961, 3.292792797088623, 3.0079660415649414, 13.97120189666748)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -3.48723316193
y: -54.0685768127
theta: 4.67876148224
speed: 13.7474422455
id: 1
t: 209
xxx after update is x: -3.19632720947
y: -54.886631012
theta: 4.77965497971
speed: 13.882390976
id: 1
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.19632720947
y: -54.886631012
theta: 4.77965497971
speed: 13.882390976
id: 1
t: 210
xxx after update is x: -3.43990159035
y: -54.8886260986
theta: 4.64850711823
speed: 13.9281797409
id: 1
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:211




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.43990159035
y: -54.8886260986
theta: 4.64850711823
speed: 13.9281797409
id: 1
t: 211
xxx after update is x: -2.64474821091
y: -56.2254142761
theta: 4.79697370529
speed: 13.8143930435
id: 1
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish theg to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:207


xxx before update is x: -22.6543331146
y: 2.79705381393
theta: 3.16777420044
speed: 13.8870697021
id: 0
t: 206
xxx after update is x: -23.4039802551
y: 3.38133239746
theta: 3.13294744492
speed: 14.0214986801
id: 0
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.458648681640625, -52.59879684448242, 4.624380588531494, 13.959737777709961)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:208


xxx before update is x: -23.4039802551
y: 3.38133239746
theta: 3.13294744492
speed: 14.0214986801
id: 0
t: 207
xxx after update is x: -23.5974521637
y: 2.92408156395
theta: 3.13674330711
speed: 13.8530168533
id: 0
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -23.5974521637
y: 2.92408156395
theta: 3.13674330711
speed: 13.8530168533
id: 0
t: 208
xxx after update is x: -24.1974754333
y: 3.29279279709
theta: 3.00796604156
speed: 13.9712018967
id: 0
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -24.1974754333
y: 3.29279279709
theta: 3.00796604156
speed: 13.9712018967
id: 0
t: 209
xxx after update is x: -25.4780826569
y: 3.59506011009
theta: 3.10702776909
speed: 13.8248262405
id: 0
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.33333333333






self.maneuver_requested left
xxx before update is x: -25.4780826569
y: 3.59506011009
theta: 3.10702776909
speed: 13.8248262405
id: 0
t: 210
xxx after update is x: -25.30210495
y: 3.59809350967
theta: 3.15476632118
speed: 14.0059175491
id: 0
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:211


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -25.30210495
y: 3.59809350967
theta: 3.15476632118
speed: 14.0059175491
id: 0
t: 211
xxx after update is x: -26.1159725189
y: 3.0690112114
theta: 3.09208607674
speed: 14.0257835388
id: 0
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:212




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -26.1159725189
y: 3.0690112114
theta: 3.09208607674
speed: 14.0257835388
id: 0
t: 212
xxx after update is x: -27.0749130249
y: 3.02482652664
theta: 3.03868746758
speed: 13.9234323502
id: 0
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.154059648513794, -56.780029296875, 4.732150077819824, 14.279502868652344)
if we have all measurements for a certain time-stamp perform risk estimation
se n times spin:212


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.42222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -2.64474821091
y: -56.2254142761
theta: 4.79697370529
speed: 13.8143930435
id: 1
t: 212
xxx after update is x: -3.15405964851
y: -56.7800292969
theta: 4.73215007782
speed: 14.2795028687
id: 1
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:214


xxx before update is x: -3.15405964851
y: -56.7800292969
theta: 4.73215007782
speed: 14.2795028687
id: 1
t: 213
xxx after update is x: -3.29692649841
y: -57.9114456177
theta: 4.76266431808
speed: 13.6584243774
id: 1
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:215


xxx before update is x: -3.29692649841
y: -57.9114456177
theta: 4.76266431808
speed: 13.6584243774
id: 1
t: 214
xxx after update is x: -3.37026333809
y: -58.0590286255
theta: 4.65490055084
speed: 14.0671863556
id: 1
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4943999999999979]
222 self.state_dicts[msg.id][msg.t] is (-27.752033233642578, 2.7911641597747803, 3.1683812141418457, 14.126995086669922)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:216


xxx before update is x: -3.37026333809
y: -58.0590286255
theta: 4.65490055084
speed: 14.0671863556
id: 1
t: 215
xxx after update is x: -3.66455388069
y: -58.1611328125
theta: 4.6972413063
speed: 14.006072998
id: 1
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:217


xxx before update is x: -3.66455388069
y: -58.1611328125
theta: 4.6972413063
speed: 14.006072998
id: 1
t: 216
xxx after update is x: -2.81385850906
y: -58.6328468323
theta: 4.52392816544
speed: 14.2833929062
id: 1
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:218


xxx before update is x: -2.81385850906
y: -58.6328468323
theta: 4.52392816544
speed: 14.2833929062
id: 1
t: 217
xxx after update is x: -3.52554130554
y: -59.4156150818
theta: 4.69761323929
speed: 13.9850854874
id: 1
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -3.52554130554
y: -59.4156150818
theta: 4.69761323929
speed: 13.9850854874
id: 1
t: 218
xxx after update is x: -3.42359113693
y: -60.4496383667
theta: 4.65521144867
speed: 13.5253219604
id: 1
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.50239999999999lf.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:214


xxx before update is x: -27.0749130249
y: 3.02482652664
theta: 3.03868746758
speed: 13.9234323502
id: 0
t: 213
xxx after update is x: -27.8886432648
y: 3.2445526123
theta: 2.83277702332
speed: 14.3419179916
id: 0
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:215


xxx before update is x: -27.8886432648
y: 3.2445526123
theta: 2.83277702332
speed: 14.3419179916
id: 0
t: 214
xxx after update is x: -27.7520332336
y: 2.79116415977
theta: 3.16838121414
speed: 14.1269950867
id: 0
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -27.7520332336
y: 2.79116415977
theta: 3.16838121414
speed: 14.1269950867
id: 0
t: 215
xxx after update is x: -28.7241630554
y: 3.06058049202
theta: 3.2647356987
speed: 13.9151964188
id: 0
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:216




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:217


xxx before update is x: -28.7241630554
y: 3.06058049202
theta: 3.2647356987
speed: 13.9151964188
id: 0
t: 216
xxx after update is x: -29.3733825684
y: 3.33798742294
theta: 3.15312504768
speed: 13.8164167404
id: 0
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -29.3733825684
y: 3.33798742294
theta: 3.15312504768
speed: 13.8164167404
id: 0
t: 217
xxx after update is x: -29.7236862183
y: 3.12626457214
theta: 3.39668321609
speed: 13.7840204239
id: 0
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:218


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.68888888889






self.maneuver_requested left
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.525541305541992, -59.41561508178711, 4.69761323928833, 13.985085487365723)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -29.7236862183
y: 3.12626457214
theta: 3.39668321609
speed: 13.7840204239
id: 0
t: 218
xxx after update is x: -30.2238826752
y: 3.16356182098
theta: 3.05009198189
speed: 13.8013839722
id: 0
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:220


xxx before update is x: -30.2238826752
y: 3.16356182098
theta: 3.05009198189
speed: 13.8013839722
id: 0
t: 219
xxx after update is x: -31.0926780701
y: 2.94839406013
theta: 3.12596964836
speed: 13.964507103
id: 0
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -31.0926780701
y8]
222 self.state_dicts[msg.id][msg.t] is (-30.2238826751709, 3.1635618209838867, 3.0500919818878174, 13.801383972167969)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:220


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.73333333333






self.maneuver_requested None
xxx before update is x: -3.42359113693
y: -60.4496383667
theta: 4.65521144867
speed: 13.5253219604
id: 1
t: 219
xxx after update is x: -3.16087031364
y: -60.8680419922
theta: 4.52273130417
speed: 13.8082084656
id: 1
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -3.16087031364
y: -60.8680419922
theta: 4.52273130417
speed: 13.8082084656
id: 1
t: 220
xxx after update is x: -3.61683154106
y: -61.4386138916
theta: 4.50128078461
speed: 13.9374294281
id: 1
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:222


xxx before update is x: -3.61683154106
y: -61.4386138916
theta: 4.50128078461
speed: 13.9374294281
id: 1
t: 221
xxx after update is x: -2.62456035614
y: -61.8860321045
theta: 4.7761259079
speed: 13.7172317505
id: 1
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -2.62456035614
y: -61.8860321045
theta: 4.7761259079
speed: 13.7172317505
id: 1
t: 222
xxx after update is x: -3.55375242233
y: -62.4724960327
theta: 4.83489465714
speed: 14.0896558762
id: 1
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5151999999999983]
222 self.state_dicts[msg.id][msg.t] is (-33.089088439941406, 3.6252517700195312, 3.127777099609375, 13.542558670043945)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:224


xxx before update is x: -3.55375242233
y: -62.4724960327
theta: 4.83489465714
speed: 14.0896558762
id: 1
t: 223
xxx after update is x: -3.01834487915
y: -63.3781509399
theta: 4.70206212997
speed: 14.0377445221
id: 1
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:225


xxx before update is x: -3.01834487915
y: -63.3781509399
theta: 4.70206212997
speed: 14.0377445221
id: 1
t: 224
xxx after update is x: -4.11488866806
y: -64.006980896
theta: 4.62515926361
speed: 13.6510448456
id: 1
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:226


xxx before update is x: -4.11488866806
y: -64.006980896
theta: 4.62515926361
speed: 13.6510448456
id: 1
t: 225
xxx after update is x: -4.00611829758
y: -64.: 2.94839406013
theta: 3.12596964836
speed: 13.964507103
id: 0
t: 220
xxx after update is x: -31.642539978
y: 3.84320092201
theta: 3.11552739143
speed: 13.997171402
id: 0
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:221




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:222


xxx before update is x: -31.642539978
y: 3.84320092201
theta: 3.11552739143
speed: 13.997171402
id: 0
t: 221
xxx after update is x: -32.4732017517
y: 3.4999563694
theta: 3.2233736515
speed: 14.2164773941
id: 0
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -32.4732017517
y: 3.4999563694
theta: 3.2233736515
speed: 14.2164773941
id: 0
t: 222
xxx after update is x: -33.0890884399
y: 3.62525177002
theta: 3.12777709961
speed: 13.54255867
id: 0
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5537524223327637, -62.472496032714844, 4.83489465713501, 14.089655876159668)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -33.0890884399
y: 3.62525177002
theta: 3.12777709961
speed: 13.54255867
id: 0
t: 223
xxx after update is x: -33.3776245117
y: 3.42700004578
theta: 3.18446707726
speed: 13.8612318039
id: 0
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:224




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:225


xxx before update is x: -33.3776245117
y: 3.42700004578
theta: 3.18446707726
speed: 13.8612318039
id: 0
t: 224
xxx after update is x: -34.2012519836
y: 3.07488155365
theta: 3.09649085999
speed: 13.8820514679
id: 0
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:226


xxx before update is x: -34.2012519836
y: 3.07488155365
theta: 3.09649085999
speed: 13.8820514679
id: 0
t: 225
xxx after update is x: -34.8814277649
y: 3.56507110596
theta: 3.03026413918
speed: 13.7804861069
id: 0
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.0444444444






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -34.8814277649
y: 3.56507110596
theta: 3.03026413918
speed: 13.7804861069
id: 0
t: 226
xxx after update is x: -35.5085678101
y: 3.67862868309
theta: 3.15556430817
speed: 13.6323919296
id: 0
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:228


xxx before update is x: -35.5085678101
y: 3.67862868309
theta: 3.15556430817
speed: 13.6323919296
id: 0
t: 227
xxx after update is x: -36.6648483276
y: 3.20286846161
theta: 3.11690402031
8042602539
theta: 4.76458883286
speed: 13.8204498291
id: 1
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -4.00611829758
y: -64.8042602539
theta: 4.76458883286
speed: 13.8204498291
id: 1
t: 226
xxx after update is x: -3.32316112518
y: -65.1652908325
theta: 4.7297077179
speed: 13.8761415482
id: 1
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (-35.508567810058594, 3.67862868309021, 3.155564308166504, 13.632391929626465)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.0888888889






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
maneuver_negotiatir.py in the try maneuver function update -. sfinish
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.32316112518
y: -65.1652908325
theta: 4.7297077179
speed: 13.8761415482
id: 1
t: 227
xxx after update is x: -3.2214820385
y: -65.5519714355
theta: 4.61145162582
speed: 14.0285015106
id: 1
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:228




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -3.2214820385
y: -65.5519714355
theta: 4.61145162582
speed: 14.0285015106
id: 1
t: 228
xxx after update is x: -2.98564505577
y: -66.342338562
theta: 4.63707733154
speed: 13.8897800446
id: 1
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -2.98564505577
y: -66.342338562
theta: 4.63707733154
speed: 13.8897800446
id: 1
t: 229
xxx after update is x: -2.88695049286
y: -66.9385375977
theta: 4.7037987709
speed: 14.0064353943
id: 1
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.88695049286
y: -66.9385375977
theta: 4.7037987709
speed: 14.0064353943
id: 1
t: 230
xxx after update is x: -3.43658471107
y: -68.3916168213
theta: 4.60122251511
speed: 13.775841713
id: 1
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:231


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.43658471107
y: -68.3916168213
theta: 4.60122251511
speed: 13.775841713
id: 1
t: 231
xxx after update is x: -3.40132331848
y: -68.0947341919
theta: 4.76598644257
speed: 13.8289957047
id: 1
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:232




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -3.40132331848
y: -68.0947341919
theta: 4.76598644257
speed: 13.8289957047
id: 1
t: 232
xxx after update is x: -3.14592814445
y: -68.853729248
theta: 4.76277923584
speed: 13.8535518646
id: 1
t: 233
maneuver_negospeed: 14.3372621536
id: 0
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.221482038497925, -65.55197143554688, 4.611451625823975, 14.028501510620117)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -36.6648483276
y: 3.20286846161
theta: 3.11690402031
speed: 14.3372621536
id: 0
t: 228
xxx after update is x: -36.6292877197
y: 3.14929485321
theta: 3.1774930954
speed: 14.0878591537
id: 0
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -36.6292877197
y: 3.14929485321
theta: 3.1774930954
speed: 14.0878591537
id: 0
t: 229
xxx after update is x: -37.6850738525
y: 2.99935865402
theta: 3.14501428604
speed: 13.9101772308
id: 0
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -37.6850738525
y: 2.99935865402
theta: 3.14501428604
speed: 13.9101772308
id: 0
t: 230
xxx after update is x: -38.4303245544
y: 3.4538192749
theta: 3.17044305801
speed: 14.2153682709
id: 0
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:231




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -38.4303245544
y: 3.4538192749
theta: 3.17044305801
speed: 14.2153682709
id: 0
t: 231
xxx after update is x: -38.6059112549
y: 3.88312101364
theta: 3.08024024963
speed: 13.7758426666
id: 0
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:232




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -38.6059112549
y: 3.88312101364
theta: 3.08024024963
speed: 13.7758426666
id: 0
t: 232
xxx after update is x: -39.2657623291
y: 3.04826331139
theta: 3.10097241402
speed: 13.9771966934
id: 0
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -39.2657623291
y: 3.04826331139
theta: 3.10097241402
speed: 13.9771966934
id: 0
t: 233
xxx after update is x: -39.941116333
y: 3.1570019722
theta: 3.05209779739
speed: 13.9173936844
id: 0
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.4






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -39.941116333
y: 3.1570019722
theta: 3.05209779739
speed: 13.9173936844
id: 0
t: 234
xxx after update is x: -40.2060890198
y: 3.37822127342
theta: 3.01869916916
speed: 14.1424703598
id: 0
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leatiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-39.26576232910156, 3.0482633113861084, 3.1009724140167236, 13.97719669342041)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.14592814445
y: -68.853729248
theta: 4.76277923584
speed: 13.8535518646
id: 1
t: 233
xxx after update is x: -3.48136091232
y: -69.6508789062
theta: 4.83794260025
speed: 14.147061348
id: 1
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:234




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -3.48136091232
y: -69.6508789062
theta: 4.83794260025
speed: 14.147061348
id: 1
t: 234
xxx after update is x: -3.57541680336
y: -70.2723999023
theta: 4.69916915894
speed: 14.055232048
id: 1
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.4444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:236


xxx before update is x: -3.57541680336
y: -70.2723999023
theta: 4.69916915894
speed: 14.055232048
id: 1
t: 235
xxx after update is x: -3.6249871254
y: -70.8107376099
theta: 4.61058568954
speed: 13.7017688751
id: 1
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -3.6249871254
y: -70.8107376099
theta: 4.61058568954
speed: 13.7017688751
id: 1
t: 236
xxx after update is x: -2.80410051346
y: -71.5018005371
theta: 4.75016641617
speed: 13.6615905762
id: 1
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5183999999999984]
222 self.state_dicts[msg.id][msg.t] is (-42.26036071777344, 3.117959499359131, 3.012310266494751, 14.134839057922363)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -2.80410051346
y: -71.5018005371
theta: 4.75016641617
speed: 13.6615905762
id: 1
t: 237
xxx after update is x: -3.17088890076
y: -72.2001571655
theta: 4.60731267929
speed: 14.0173501968
id: 1
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:239


xxx before update is x: -3.17088890076
y: -72.2001571655
theta: 4.60731267929
speed: 14.0173501968
id: 1
t: 238
xxx after update is x: -3.81921863556
y: -72.6868209839
theta: 4.70450019836
speed: 13.8881902695
id: 1
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.81921863556
y: -72.6868209839
theta: 4.70450019836
speed: 13.8881902695
id: 1
t: 239
xxx after update ive the update function xxx before update is x: -40.2060890198
y: 3.37822127342
theta: 3.01869916916
speed: 14.1424703598
id: 0
t: 235
xxx after update is x: -40.8882675171
y: 2.81336545944
theta: 3.22550487518
speed: 13.748459816
id: 0
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:236


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.6249871253967285, -70.81073760986328, 4.610585689544678, 13.70176887512207)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -40.8882675171
y: 2.81336545944
theta: 3.22550487518
speed: 13.748459816
id: 0
t: 236
xxx after update is x: -42.2603607178
y: 3.11795949936
theta: 3.01231026649
speed: 14.1348390579
id: 0
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -42.2603607178
y: 3.11795949936
theta: 3.01231026649
speed: 14.1348390579
id: 0
t: 237
xxx after update is x: -42.3421821594
y: 3.3345515728
theta: 3.2346367836
speed: 13.5505428314
id: 0
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -42.3421821594
y: 3.3345515728
theta: 3.2346367836
speed: 13.5505428314
id: 0
t: 238
xxx after update is x: -42.4652519226
y: 2.80456852913
theta: 3.16992664337
speed: 13.910487175
id: 0
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:239




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:240


xxx before update is x: -42.4652519226
y: 2.80456852913
theta: 3.16992664337
speed: 13.910487175
id: 0
t: 239
xxx after update is x: -43.5593528748
y: 3.3459777832
theta: 3.21786522865
speed: 13.856256485
id: 0
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.436218738555908, -73.26643371582031, 4.740771293640137, 13.66639232635498)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:241


xxx before update is x: -43.5593528748
y: 3.3459777832
theta: 3.21786522865
speed: 13.856256485
id: 0
t: 240
xxx after update is x: -44.2163391113
y: 3.0181658268
theta: 2.97256755829
speed: 14.2926483154
id: 0
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.7111111111






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -44.2163391113
y: 3.0181658268
theta: 2.97256755829
speed: 14.2926483154
id: 0
t: 241
xxx after update is x: -44.5875091553
y: 2.78501176834
theta: 3.05002474785
speed: 13.5977087021
id: 0
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function s x: -3.43621873856
y: -73.2664337158
theta: 4.74077129364
speed: 13.6663923264
id: 1
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:240


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.49919999999999787]
222 self.state_dicts[msg.id][msg.t] is (-43.55935287475586, 3.345977783203125, 3.217865228652954, 13.856256484985352)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:241


xxx before update is x: -3.43621873856
y: -73.2664337158
theta: 4.74077129364
speed: 13.6663923264
id: 1
t: 240
xxx after update is x: -3.36752867699
y: -73.6300201416
theta: 4.72288227081
speed: 13.8477602005
id: 1
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -3.36752867699
y: -73.6300201416
theta: 4.72288227081
speed: 13.8477602005
id: 1
t: 241
xxx after update is x: -3.32966208458
y: -74.5702133179
theta: 4.6965379715
speed: 13.6364603043
id: 1
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:243


xxx before update is x: -3.32966208458
y: -74.5702133179
theta: 4.6965379715
speed: 13.6364603043
id: 1
t: 242
xxx after update is x: -3.39406323433
y: -74.6218490601
theta: 4.9193406105
speed: 13.8621120453
id: 1
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.8






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:244


xxx before update is x: -3.39406323433
y: -74.6218490601
theta: 4.9193406105
speed: 13.8621120453
id: 1
t: 243
xxx after update is x: -3.20147800446
y: -75.6150665283
theta: 4.68115711212
speed: 13.9381542206
id: 1
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.20147800446
y: -75.6150665283
theta: 4.68115711212
speed: 13.9381542206
id: 1
t: 244
xxx after update is x: -3.35306763649
y: -76.2185668945
theta: 4.58961439133
speed: 13.8719396591
id: 1
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:245


risk is [0.0, 0.5199999999999985]
222 self.state_dicts[msg.id][msg.t] is (-46.9979248046875, 3.1100289821624756, 3.1365153789520264, 13.663990020751953)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.35306763649
y: -76.2185668945
theta: 4.58961439133
speed: 13.8719396591
id: 1
t: 245
xxx after update is x: -3.17282605171
y: -76.9356155396
theta: 4.8305182457
speed: 14.2322387695
id: 1
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:246




going to the update fu
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:243


xxx before update is x: -44.5875091553
y: 2.78501176834
theta: 3.05002474785
speed: 13.5977087021
id: 0
t: 242
xxx after update is x: -45.569190979
y: 3.92625761032
theta: 3.31561541557
speed: 13.6782875061
id: 0
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:244


xxx before update is x: -45.569190979
y: 3.92625761032
theta: 3.31561541557
speed: 13.6782875061
id: 0
t: 243
xxx after update is x: -46.0082015991
y: 3.29345607758
theta: 3.13171124458
speed: 14.243347168
id: 0
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:245


xxx before update is x: -46.0082015991
y: 3.29345607758
theta: 3.13171124458
speed: 14.243347168
id: 0
t: 244
xxx after update is x: -46.9979248047
y: 3.11002898216
theta: 3.13651537895
speed: 13.6639900208
id: 0
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.353067636489868, -76.21856689453125, 4.589614391326904, 13.871939659118652)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:246


xxx before update is x: -46.9979248047
y: 3.11002898216
theta: 3.13651537895
speed: 13.6639900208
id: 0
t: 245
xxx after update is x: -47.5239372253
y: 3.1810464859
theta: 2.94360089302
speed: 13.656080246
id: 0
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -47.5239372253
y: 3.1810464859
theta: 2.94360089302
speed: 13.656080246
id: 0
t: 246
xxx after update is x: -47.1211585999
y: 3.78019332886
theta: 3.21108865738
speed: 13.7299938202
id: 0
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -47.1211585999
y: 3.78019332886
theta: 3.21108865738
speed: 13.7299938202
id: 0
t: 247
xxx after update is x: -48.7481651306
y: 3.29401755333
theta: 3.4323489666
speed: 13.9257364273
id: 0
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -48.7481651306
y: 3.29401755333
theta: 3.4323489666
speed: 13.9257364273
id: 0
t: 248
xxx after update is x: -49.1799278259
y: 3.24767994881
theta: 3.08261752129
speed: 13.650645256
id: 0
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.0666666667






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1817257404327393, -78.77550506591797, 4.710141181945801, 13.738184928894043)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going nction
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -3.17282605171
y: -76.9356155396
theta: 4.8305182457
speed: 14.2322387695
id: 1
t: 246
xxx after update is x: -3.31455683708
y: -77.1506729126
theta: 4.75470876694
speed: 13.9849729538
id: 1
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -3.31455683708
y: -77.1506729126
theta: 4.75470876694
speed: 13.9849729538
id: 1
t: 247
xxx after update is x: -3.00021052361
y: -78.2106246948
theta: 4.7510061264
speed: 13.9516372681
id: 1
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.49919999999999787]
222 self.state_dicts[msg.id][msg.t] is (-48.748165130615234, 3.2940175533294678, 3.4323489665985107, 13.925736427307129)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -3.00021052361
y: -78.2106246948
theta: 4.7510061264
speed: 13.9516372681
id: 1
t: 248
xxx after update is x: -3.18172574043
y: -78.7755050659
theta: 4.71014118195
speed: 13.7381849289
id: 1
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:250


xxx before update is x: -3.18172574043
y: -78.7755050659
theta: 4.71014118195
speed: 13.7381849289
id: 1
t: 249
xxx after update is x: -3.20364689827
y: -79.669593811
theta: 4.75948190689
speed: 13.9396724701
id: 1
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.1111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.20364689827
y: -79.669593811
theta: 4.75948190689
speed: 13.9396724701
id: 1
t: 250
xxx after update is x: -3.26081395149
y: -79.7802810669
theta: 4.68220710754
speed: 14.1075696945
id: 1
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:251


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.26081395149
y: -79.7802810669
theta: 4.68220710754
speed: 14.1075696945
id: 1
t: 251
xxx after update is x: -3.75431776047
y: -80.4693756104
theta: 4.72621059418
speed: 13.5603637695
id: 1
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:252


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4591999999999981]
222 self.state_dicts[msg.id][msg.t] is (-51.30072021484375, 2.966027021408081, 3.115319013595581, 14.214310646057129)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.75431776047
y: -80.4693756104
theta: 4.72621059418
speed: 13.5603637695
id: 1
t: 252
xxx after update is x: -3.45144677162
y: -8to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:250


xxx before update is x: -49.1799278259
y: 3.24767994881
theta: 3.08261752129
speed: 13.650645256
id: 0
t: 249
xxx after update is x: -49.3282699585
y: 3.0727353096
theta: 3.22229075432
speed: 13.6952562332
id: 0
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:251


xxx before update is x: -49.3282699585
y: 3.0727353096
theta: 3.22229075432
speed: 13.6952562332
id: 0
t: 250
xxx after update is x: -50.4621543884
y: 3.05775785446
theta: 2.9447491169
speed: 13.8222570419
id: 0
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -50.4621543884
y: 3.05775785446
theta: 2.9447491169
speed: 13.8222570419
id: 0
t: 251
xxx after update is x: -51.3007202148
y: 2.96602702141
theta: 3.1153190136
speed: 14.2143106461
id: 0
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:252




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:253


xxx before update is x: -51.3007202148
y: 2.96602702141
theta: 3.1153190136
speed: 14.2143106461
id: 0
t: 252
xxx after update is x: -51.5760536194
y: 3.14363908768
theta: 3.28239297867
speed: 14.0334787369
id: 0
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:254


xxx before update is x: -51.5760536194
y: 3.14363908768
theta: 3.28239297867
speed: 14.0334787369
id: 0
t: 253
xxx after update is x: -51.5857467651
y: 3.54252576828
theta: 3.14418935776
speed: 13.8255319595
id: 0
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4300858974456787, -80.79810333251953, 4.728609561920166, 13.67956256866455)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:255


xxx before update is x: -51.5857467651
y: 3.54252576828
theta: 3.14418935776
speed: 13.8255319595
id: 0
t: 254
xxx after update is x: -52.4222183228
y: 3.11384701729
theta: 3.27012419701
speed: 13.9470376968
id: 0
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:256


xxx before update is x: -52.4222183228
y: 3.11384701729
theta: 3.27012419701
speed: 13.9470376968
id: 0
t: 255
xxx after update is x: -53.0407371521
y: 2.8115644455
theta: 3.11440634727
speed: 14.0566682816
id: 0
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -53.0407371521
y: 2.8115644455
theta: 3.11440634727
speed: 14.0566682816
id: 0
t: 256
xxx after update is x: -53.7016830444
y: 3.83954501152
theta: 3.11798143387
speed: 13.5544338226
id: 0
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update fun1.7357711792
theta: 4.7325053215
speed: 14.2295122147
id: 1
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:253




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:254


xxx before update is x: -3.45144677162
y: -81.7357711792
theta: 4.7325053215
speed: 14.2295122147
id: 1
t: 253
xxx after update is x: -3.43008589745
y: -80.7981033325
theta: 4.72860956192
speed: 13.6795625687
id: 1
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:255


xxx before update is x: -3.43008589745
y: -80.7981033325
theta: 4.72860956192
speed: 13.6795625687
id: 1
t: 254
xxx after update is x: -3.88571357727
y: -82.3929977417
theta: 4.7901597023
speed: 14.2158813477
id: 1
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:256


xxx before update is x: -3.88571357727
y: -82.3929977417
theta: 4.7901597023
speed: 14.2158813477
id: 1
t: 255
xxx after update is x: -3.18394160271
y: -82.2715759277
theta: 4.81250190735
speed: 13.7392034531
id: 1
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5247999999999986]
222 self.state_dicts[msg.id][msg.t] is (-53.04073715209961, 2.8115644454956055, 3.1144063472747803, 14.056668281555176)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:257


xxx before update is x: -3.18394160271
y: -82.2715759277
theta: 4.81250190735
speed: 13.7392034531
id: 1
t: 256
xxx after update is x: -3.30211663246
y: -83.8156509399
theta: 4.56870555878
speed: 13.7706623077
id: 1
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:258


xxx before update is x: -3.30211663246
y: -83.8156509399
theta: 4.56870555878
speed: 13.7706623077
id: 1
t: 257
xxx after update is x: -3.1991815567
y: -84.2392349243
theta: 4.74266767502
speed: 14.0648498535
id: 1
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.4666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:259


xxx before update is x: -3.1991815567
y: -84.2392349243
theta: 4.74266767502
speed: 14.0648498535
id: 1
t: 258
xxx after update is x: -3.93922615051
y: -84.6435089111
theta: 4.67120885849
speed: 13.6163139343
id: 1
t: 259
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:260


xxx before update is x: -3.93922615051
y: -84.6435089111
theta: 4.67120885849
speed: 13.6163139343
id: 1
t: 259
xxx after update is x: -3.6398794651
y: -85.5633392334
theta: 4.54678440094
speed: 14.11833ction 
in spin function, finish the n times spin:257


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.4222222222






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -53.7016830444
y: 3.83954501152
theta: 3.11798143387
speed: 13.5544338226
id: 0
t: 257
xxx after update is x: -54.8108100891
y: 2.98051452637
theta: 3.12819743156
speed: 13.8087663651
id: 0
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:258




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:259


xxx before update is x: -54.8108100891
y: 2.98051452637
theta: 3.12819743156
speed: 13.8087663651
id: 0
t: 258
xxx after update is x: -54.7880630493
y: 3.04035282135
theta: 3.39808440208
speed: 13.7750177383
id: 0
t: 259
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -54.7880630493
y: 3.04035282135
theta: 3.39808440208
speed: 13.7750177383
id: 0
t: 259
xxx after update is x: -55.6408653259
y: 3.38912010193
theta: 3.030616045
speed: 13.9780397415
id: 0
t: 260
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:260


risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.6398794651031494, -85.56333923339844, 4.546784400939941, 14.118337631225586)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:261


xxx before update is x: -55.6408653259
y: 3.38912010193
theta: 3.030616045
speed: 13.9780397415
id: 0
t: 260
xxx after update is x: -55.9633865356
y: 3.19333052635
theta: 3.33919262886
speed: 13.1302652359
id: 0
t: 261
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:262


xxx before update is x: -55.9633865356
y: 3.19333052635
theta: 3.33919262886
speed: 13.1302652359
id: 0
t: 261
xxx after update is x: -56.5366744995
y: 2.95398831367
theta: 3.08383274078
speed: 13.9952545166
id: 0
t: 262
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:263


xxx before update is x: -56.5366744995
y: 2.95398831367
theta: 3.08383274078
speed: 13.9952545166
id: 0
t: 262
xxx after update is x: -58.277141571
y: 3.59236311913
theta: 3.06961250305
speed: 14.2313690186
id: 0
t: 263
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:264


xxx before update is x: -58.277141571
y: 3.59236311913
theta: 3.06961250305
speed: 14.2313690186
id: 0
t: 263
xxx after update is x: -58.1260108948
y: 3.03799986839
theta: 3.07070422173
speed: 13.9329910278
id: 0
t: 264
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.659543752670288, -88.14491271972656, 4.734373092651367, 14.256072998046875)
if we have all 76312
id: 1
t: 260
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:261


xxx before update is x: -3.6398794651
y: -85.5633392334
theta: 4.54678440094
speed: 14.1183376312
id: 1
t: 260
xxx after update is x: -3.46299576759
y: -86.1348648071
theta: 4.77292156219
speed: 13.9017868042
id: 1
t: 261
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-55.96338653564453, 3.1933305263519287, 3.3391926288604736, 13.130265235900879)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:262


xxx before update is x: -3.46299576759
y: -86.1348648071
theta: 4.77292156219
speed: 13.9017868042
id: 1
t: 261
xxx after update is x: -2.87324547768
y: -86.8477478027
theta: 4.72302913666
speed: 13.7768316269
id: 1
t: 262
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:263


xxx before update is x: -2.87324547768
y: -86.8477478027
theta: 4.72302913666
speed: 13.7768316269
id: 1
t: 262
xxx after update is x: -3.45215058327
y: -86.8653182983
theta: 4.76017713547
speed: 14.1061162949
id: 1
t: 263
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:264


xxx before update is x: -3.45215058327
y: -86.8653182983
theta: 4.76017713547
speed: 14.1061162949
id: 1
t: 263
xxx after update is x: -3.65954375267
y: -88.1449127197
theta: 4.73437309265
speed: 14.256072998
id: 1
t: 264
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (-58.12601089477539, 3.0379998683929443, 3.070704221725464, 13.932991027832031)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:265


xxx before update is x: -3.65954375267
y: -88.1449127197
theta: 4.73437309265
speed: 14.256072998
id: 1
t: 264
xxx after update is x: -3.98497796059
y: -88.6787338257
theta: 4.76939344406
speed: 14.2005767822
id: 1
t: 265
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:266


xxx before update is x: -3.98497796059
y: -88.6787338257
theta: 4.76939344406
speed: 14.2005767822
id: 1
t: 265
xxx after update is x: -3.56461000443
y: -89.0152587891
theta: 4.89903688431
speed: 14.060915947
id: 1
t: 266
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.8222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.56461000443
y: measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:265


xxx before update is x: -58.1260108948
y: 3.03799986839
theta: 3.07070422173
speed: 13.9329910278
id: 0
t: 264
xxx after update is x: -59.2458343506
y: 3.6759352684
theta: 3.11098217964
speed: 13.9733428955
id: 0
t: 265
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.7777777778






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:266


xxx before update is x: -59.2458343506
y: 3.6759352684
theta: 3.11098217964
speed: 13.9733428955
id: 0
t: 265
xxx after update is x: -59.2511863708
y: 3.13411164284
theta: 3.03478336334
speed: 14.197353363
id: 0
t: 266
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:267


xxx before update is x: -59.2511863708
y: 3.13411164284
theta: 3.03478336334
speed: 14.197353363
id: 0
t: 266
xxx after update is x: -60.2043228149
y: 3.33930301666
theta: 3.11826610565
speed: 13.8691644669
id: 0
t: 267
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:268


xxx before update is x: -60.2043228149
y: 3.33930301666
theta: 3.11826610565
speed: 13.8691644669
id: 0
t: 267
xxx after update is x: -60.8216247559
y: 3.5276684761
theta: 3.2926774025
speed: 14.1408987045
id: 0
t: 268
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:269


xxx before update is x: -60.8216247559
y: 3.5276684761
theta: 3.2926774025
speed: 14.1408987045
id: 0
t: 268
xxx after update is x: -61.2098197937
y: 2.84237408638
theta: 3.04463577271
speed: 13.8776769638
id: 0
t: 269
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.969588279724121, -91.15495300292969, 4.658987522125244, 13.852917671203613)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -61.2098197937
y: 2.84237408638
theta: 3.04463577271
speed: 13.8776769638
id: 0
t: 269
xxx after update is x: -62.0470619202
y: 3.30780172348
theta: 2.9649772644
speed: 13.9043464661
id: 0
t: 270
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:270




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:271


xxx before update is x: -62.0470619202
y: 3.30780172348
theta: 2.9649772644
speed: 13.9043464661
id: 0
t: 270
xxx after update is x: -62.823890686
y: 3.34023022652
theta: 3.07244992256
speed: 13.9532747269
id: 0
t: 271
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxx-89.0152587891
theta: 4.89903688431
speed: 14.060915947
id: 1
t: 266
xxx after update is x: -3.74885249138
y: -89.5634155273
theta: 4.76558208466
speed: 13.7283382416
id: 1
t: 267
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:267




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:268


xxx before update is x: -3.74885249138
y: -89.5634155273
theta: 4.76558208466
speed: 13.7283382416
id: 1
t: 267
xxx after update is x: -3.2157099247
y: -90.74559021
theta: 4.74664258957
speed: 14.2687320709
id: 1
t: 268
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5327999999999988]
222 self.state_dicts[msg.id][msg.t] is (-60.821624755859375, 3.5276684761047363, 3.292677402496338, 14.140898704528809)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:269


xxx before update is x: -3.2157099247
y: -90.74559021
theta: 4.74664258957
speed: 14.2687320709
id: 1
t: 268
xxx after update is x: -2.96958827972
y: -91.1549530029
theta: 4.65898752213
speed: 13.8529176712
id: 1
t: 269
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:270


xxx before update is x: -2.96958827972
y: -91.1549530029
theta: 4.65898752213
speed: 13.8529176712
id: 1
t: 269
xxx after update is x: -3.18696928024
y: -91.4591445923
theta: 4.89466953278
speed: 13.9984874725
id: 1
t: 270
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:271


xxx before update is x: -3.18696928024
y: -91.4591445923
theta: 4.89466953278
speed: 13.9984874725
id: 1
t: 270
xxx after update is x: -3.41925406456
y: -92.1851654053
theta: 4.66314220428
speed: 14.0929899216
id: 1
t: 271
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:272


xxx before update is x: -3.41925406456
y: -92.1851654053
theta: 4.66314220428
speed: 14.0929899216
id: 1
t: 271
xxx after update is x: -2.90316557884
y: -92.7971115112
theta: 4.84796619415
speed: 14.0573444366
id: 1
t: 272
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.503999999999998]
222 self.state_dicts[msg.id][msg.t] is (-63.24617385864258, 3.3793089389801025, 3.1854336261749268, 14.050487518310547)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:273


xxx before update is x: -2.90316557884
y: -92.7971115112
theta: 4.84796619415
speed: 14.0573444366
id: 1
t: 272
xxx after update is x: -2.88606977463
y: -93.632194519
theta: 4.72519159317
speed: 13.8774356842
id: 1
t: 273
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before upxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:272


xxx before update is x: -62.823890686
y: 3.34023022652
theta: 3.07244992256
speed: 13.9532747269
id: 0
t: 271
xxx after update is x: -63.2461738586
y: 3.37930893898
theta: 3.18543362617
speed: 14.0504875183
id: 0
t: 272
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.0888888889






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:273


xxx before update is x: -63.2461738586
y: 3.37930893898
theta: 3.18543362617
speed: 14.0504875183
id: 0
t: 272
xxx after update is x: -63.6507530212
y: 3.5896229744
theta: 3.23359704018
speed: 13.7528715134
id: 0
t: 273
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.8860697746276855, -93.63219451904297, 4.725191593170166, 13.877435684204102)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:274


xxx before update is x: -63.6507530212
y: 3.5896229744
theta: 3.23359704018
speed: 13.7528715134
id: 0
t: 273
xxx after update is x: -63.87342453
y: 3.33369326591
theta: 3.13984179497
speed: 14.1299009323
id: 0
t: 274
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:275


xxx before update is x: -63.87342453
y: 3.33369326591
theta: 3.13984179497
speed: 14.1299009323
id: 0
t: 274
xxx after update is x: -64.7051010132
y: 3.58759045601
theta: 3.1166574955
speed: 13.8784418106
id: 0
t: 275
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:276


xxx before update is x: -64.7051010132
y: 3.58759045601
theta: 3.1166574955
speed: 13.8784418106
id: 0
t: 275
xxx after update is x: -65.3753356934
y: 3.10352301598
theta: 3.25348520279
speed: 13.7444658279
id: 0
t: 276
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:277


xxx before update is x: -65.3753356934
y: 3.10352301598
theta: 3.25348520279
speed: 13.7444658279
id: 0
t: 276
xxx after update is x: -66.3188018799
y: 3.20418167114
theta: 3.10420489311
speed: 13.9020833969
id: 0
t: 277
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:278


xxx before update is x: -66.3188018799
y: 3.20418167114
theta: 3.10420489311
speed: 13.9020833969
id: 0
t: 277
xxx after update is x: -67.4239959717
y: 3.04265618324
theta: 3.13544559479
speed: 13.870215416
id: 0
t: 278
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0309886932373047, -96.19596099853516, 4.627384662628174, 13.854048728942871)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py idate is x: -2.88606977463
y: -93.632194519
theta: 4.72519159317
speed: 13.8774356842
id: 1
t: 273
xxx after update is x: -3.09101057053
y: -94.458732605
theta: 4.76197242737
speed: 13.9560937881
id: 1
t: 274
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:274


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.1777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.09101057053
y: -94.458732605
theta: 4.76197242737
speed: 13.9560937881
id: 1
t: 274
xxx after update is x: -3.13806605339
y: -95.206489563
theta: 4.69278097153
speed: 13.8478040695
id: 1
t: 275
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:275


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:276


xxx before update is x: -3.13806605339
y: -95.206489563
theta: 4.69278097153
speed: 13.8478040695
id: 1
t: 275
xxx after update is x: -3.51467299461
y: -95.0014801025
theta: 4.82113313675
speed: 13.6651172638
id: 1
t: 276
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.478399999999998]
222 self.state_dicts[msg.id][msg.t] is (-65.37533569335938, 3.103523015975952, 3.2534852027893066, 13.744465827941895)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:277


xxx before update is x: -3.51467299461
y: -95.0014801025
theta: 4.82113313675
speed: 13.6651172638
id: 1
t: 276
xxx after update is x: -3.31605529785
y: -95.60572052
theta: 4.57972335815
speed: 13.8634634018
id: 1
t: 277
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:278


xxx before update is x: -3.31605529785
y: -95.60572052
theta: 4.57972335815
speed: 13.8634634018
id: 1
t: 277
xxx after update is x: -3.03098869324
y: -96.1959609985
theta: 4.62738466263
speed: 13.8540487289
id: 1
t: 278
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:279


xxx before update is x: -3.03098869324
y: -96.1959609985
theta: 4.62738466263
speed: 13.8540487289
id: 1
t: 278
xxx after update is x: -3.21651005745
y: -97.3191375732
theta: 4.63628292084
speed: 13.6158161163
id: 1
t: 279
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-67.29910278320312, 3.3700404167175293, 2.9840755462646484, 13.60360336303711)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:280


xxx before update is x: -3.21651005745
y: -97.3191375732
theta: 4.63628292084
speed: 13.6158161163
id: 1
t: 279
xxx after update is x: -3.46317839622
y: -97.1576538086
theta: 4.6866774559
speed: 1n the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:279


xxx before update is x: -67.4239959717
y: 3.04265618324
theta: 3.13544559479
speed: 13.870215416
id: 0
t: 278
xxx after update is x: -67.2991027832
y: 3.37004041672
theta: 2.98407554626
speed: 13.603603363
id: 0
t: 279
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:280


xxx before update is x: -67.2991027832
y: 3.37004041672
theta: 2.98407554626
speed: 13.603603363
id: 0
t: 279
xxx after update is x: -68.4832229614
y: 3.18164467812
theta: 3.3435189724
speed: 14.0237865448
id: 0
t: 280
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.4444444444






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:281


xxx before update is x: -68.4832229614
y: 3.18164467812
theta: 3.3435189724
speed: 14.0237865448
id: 0
t: 280
xxx after update is x: -68.8027267456
y: 3.76145100594
theta: 3.19023656845
speed: 14.103843689
id: 0
t: 281
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:282


xxx before update is x: -68.8027267456
y: 3.76145100594
theta: 3.19023656845
speed: 14.103843689
id: 0
t: 281
xxx after update is x: -69.371635437
y: 3.25657725334
theta: 3.03490257263
speed: 13.7553405762
id: 0
t: 282
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -69.371635437
y: 3.25657725334
theta: 3.03490257263
speed: 13.7553405762
id: 0
t: 282
xxx after update is x: -69.4636535645
y: 3.04587030411
theta: 3.05694842339
speed: 14.0473423004
id: 0
t: 283
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:283




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:284


xxx before update is x: -69.4636535645
y: 3.04587030411
theta: 3.05694842339
speed: 14.0473423004
id: 0
t: 283
xxx after update is x: -70.763999939
y: 3.57425189018
theta: 3.13574790955
speed: 13.737704277
id: 0
t: 284
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0190372467041016, -99.9980697631836, 4.575107574462891, 13.894067764282227)
if we have all measurements for a certain time-stamp perform risk estimation


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:285


xxx before update is x: -70.763999939
y: 3.57425189018
theta: 3.13574790955
speed: 13.737704277
id: 0
t: 284
xxx after update is x: -71.3821868896
y: 2.65568065643
theta: 3.1895005703
speed: 13.9279270172
id: 0
t: 285
maneuver_negotiatir.py finish the update agent state from ros funtion
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:286


xxx before update is x: -71.3821868896
y: 2.65568065643
theta: 3.1894.1031141281
id: 1
t: 280
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.46317839622
y: -97.1576538086
theta: 4.6866774559
speed: 14.1031141281
id: 1
t: 280
xxx after update is x: -3.55773758888
y: -98.7635726929
theta: 4.5131688118
speed: 14.040019989
id: 1
t: 281
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:281




going to the update function
sim.py in the sim.py update function 
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.4888888889






self.maneuver_requested None
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.55773758888
y: -98.7635726929
theta: 4.5131688118
speed: 14.040019989
id: 1
t: 281
xxx after update is x: -3.69944119453
y: -99.1648025513
theta: 4.76994991302
speed: 13.7084350586
id: 1
t: 282
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:282


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.69944119453
y: -99.1648025513
theta: 4.76994991302
speed: 13.7084350586
id: 1
t: 282
xxx after update is x: -3.48435521126
y: -99.4224243164
theta: 4.62382173538
speed: 13.5547380447
id: 1
t: 283
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:283




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:284


xxx before update is x: -3.48435521126
y: -99.4224243164
theta: 4.62382173538
speed: 13.5547380447
id: 1
t: 283
xxx after update is x: -3.0190372467
y: -99.9980697632
theta: 4.57510757446
speed: 13.8940677643
id: 1
t: 284
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (-70.76399993896484, 3.574251890182495, 3.1357479095458984, 13.737704277038574)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:285


xxx before update is x: -3.0190372467
y: -99.9980697632
theta: 4.57510757446
speed: 13.8940677643
id: 1
t: 284
xxx after update is x: -3.09223270416
y: -100.713394165
theta: 4.6242723465
speed: 13.5656442642
id: 1
t: 285
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:286


xxx before update is x: -3.09223270416
y: -100.713394165
theta: 4.6242723465
speed: 13.5656442642
id: 1
t: 285
xxx after update is x: -3.37436103821
y: -101.164428711
theta: 4.62730169296
speed: 13.8078584671
id: 1
t: 286
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:287


xxx before update is x: -3.37436103821
y: -101.164428711
theta: 4.62730169296
speed: 13.8078584671
id: 1
t: 286
xxx after update is x: -3.61234617233
y: -101.677314758
theta: 4.79875421524
speed: 13.6774501801
id: 1
t: 287
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight***5005703
speed: 13.9279270172
id: 0
t: 285
xxx after update is x: -71.7088241577
y: 3.55204701424
theta: 3.25266051292
speed: 14.0372333527
id: 0
t: 286
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:287


xxx before update is x: -71.7088241577
y: 3.55204701424
theta: 3.25266051292
speed: 14.0372333527
id: 0
t: 286
xxx after update is x: -72.0767364502
y: 3.46293306351
theta: 3.08029174805
speed: 13.9048557281
id: 0
t: 287
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -72.0767364502
y: 3.46293306351
theta: 3.08029174805
speed: 13.9048557281
id: 0
t: 287
xxx after update is x: -72.6852493286
y: 3.38035416603
theta: 3.13723039627
speed: 13.6291427612
id: 0
t: 288
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:288


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.8






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:289


xxx before update is x: -72.6852493286
y: 3.38035416603
theta: 3.13723039627
speed: 13.6291427612
id: 0
t: 288
xxx after update is x: -73.4646987915
y: 3.23214530945
theta: 3.15148019791
speed: 13.9281320572
id: 0
t: 289
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:290


xxx before update is x: -73.4646987915
y: 3.23214530945
theta: 3.15148019791
speed: 13.9281320572
id: 0
t: 289
xxx after update is x: -74.6094589233
y: 2.7192595005
theta: 3.06810593605
speed: 13.9114532471
id: 0
t: 290
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2771618366241455, -104.29114532470703, 4.740536689758301, 14.106505393981934)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -74.6094589233
y: 2.7192595005
theta: 3.06810593605
speed: 13.9114532471
id: 0
t: 290
xxx after update is x: -75.5262908936
y: 3.5499420166
theta: 3.10011124611
speed: 13.7485303879
id: 0
t: 291
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:291




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:292


xxx before update is x: -75.5262908936
y: 3.5499420166
theta: 3.10011124611
speed: 13.7485303879
id: 0
t: 291
xxx after update is x: -75.526802063
y: 3.32626652718
theta: 2.98973989487
speed: 13.8049077988
id: 0
t: 292
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:293


xxx before update is x: -75.526802063
y: 3.32626652718
theta: 2.98973989487
speed: 13.8049077988
id: 0
t: 292
xxx after update is x: -76.1967697144
y: 2.72655797005
theta: 3.15780806541
speed: 13.7039270401
id: 0
t: 293
maneuver_negotiatir.py finish the update agent state from ros funtion

*******************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.61234617233
y: -101.677314758
theta: 4.79875421524
speed: 13.6774501801
id: 1
t: 287
xxx after update is x: -3.70890140533
y: -103.029121399
theta: 4.70414590836
speed: 14.1698560715
id: 1
t: 288
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:288


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4943999999999979]
222 self.state_dicts[msg.id][msg.t] is (-72.68524932861328, 3.380354166030884, 3.137230396270752, 13.629142761230469)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.70890140533
y: -103.029121399
theta: 4.70414590836
speed: 14.1698560715
id: 1
t: 288
xxx after update is x: -3.38481426239
y: -103.637878418
theta: 4.7656121254
speed: 14.0666179657
id: 1
t: 289
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:289


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.8444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.38481426239
y: -103.637878418
theta: 4.7656121254
speed: 14.0666179657
id: 1
t: 289
xxx after update is x: -3.27716183662
y: -104.291145325
theta: 4.74053668976
speed: 14.106505394
id: 1
t: 290
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:290




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:291


xxx before update is x: -3.27716183662
y: -104.291145325
theta: 4.74053668976
speed: 14.106505394
id: 1
t: 290
xxx after update is x: -3.04491662979
y: -104.31023407
theta: 4.68844223022
speed: 14.0287218094
id: 1
t: 291
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:292


xxx before update is x: -3.04491662979
y: -104.31023407
theta: 4.68844223022
speed: 14.0287218094
id: 1
t: 291
xxx after update is x: -3.40277481079
y: -105.204101562
theta: 4.76876783371
speed: 14.0084171295
id: 1
t: 292
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.539199999999999]
222 self.state_dicts[msg.id][msg.t] is (-75.52680206298828, 3.3262665271759033, 2.9897398948669434, 13.80490779876709)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:293


xxx before update is x: -3.40277481079
y: -105.204101562
theta: 4.76876783371
speed: 14.0084171295
id: 1
t: 292
xxx after update is x: -3.03493332863
y: -105.913078308
theta: 4.68868303299
speed: 13.6417226791
id: 1
t: 293
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:294


xxx before update is x: -3.03493332863
y: -105.913078308
theta: 4.68868303299
speed: 13.6417
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -76.1967697144
y: 2.72655797005
theta: 3.15780806541
speed: 13.7039270401
id: 0
t: 293
xxx after update is x: -76.713508606
y: 3.4130012989
theta: 3.2444653511
speed: 13.9155216217
id: 0
t: 294
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:294




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:295


xxx before update is x: -76.713508606
y: 3.4130012989
theta: 3.2444653511
speed: 13.9155216217
id: 0
t: 294
xxx after update is x: -77.6293487549
y: 3.16104722023
theta: 3.14037585258
speed: 14.0949497223
id: 0
t: 295
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.91499400138855, -107.48048400878906, 4.858665943145752, 13.763996124267578)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.1111111111






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:296


xxx before update is x: -77.6293487549
y: 3.16104722023
theta: 3.14037585258
speed: 14.0949497223
id: 0
t: 295
xxx after update is x: -77.9505310059
y: 3.10249686241
theta: 3.10157108307
speed: 13.9384889603
id: 0
t: 296
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:297


xxx before update is x: -77.9505310059
y: 3.10249686241
theta: 3.10157108307
speed: 13.9384889603
id: 0
t: 296
xxx after update is x: -78.9490509033
y: 2.87147641182
theta: 3.33610701561
speed: 13.8804397583
id: 0
t: 297
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:298


xxx before update is x: -78.9490509033
y: 2.87147641182
theta: 3.33610701561
speed: 13.8804397583
id: 0
t: 297
xxx after update is x: -79.7339096069
y: 3.01904821396
theta: 3.21271467209
speed: 13.7709474564
id: 0
t: 298
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:299


xxx before update is x: -79.7339096069
y: 3.01904821396
theta: 3.21271467209
speed: 13.7709474564
id: 0
t: 298
xxx after update is x: -79.2979812622
y: 3.31993031502
theta: 3.27970957756
speed: 14.327050209
id: 0
t: 299
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:300


xxx before update is x: -79.2979812622
y: 3.31993031502
theta: 3.27970957756
speed: 14.327050209
id: 0
t: 299
xxx after update is x: -80.5792617798
y: 3.16007494926
theta: 3.15626549721
speed: 13.4500541687
id: 0
t: 300
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:301


xxx before update is x: 226791
id: 1
t: 293
xxx after update is x: -3.07034540176
y: -106.223701477
theta: 4.75892734528
speed: 13.7362852097
id: 1
t: 294
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:295


xxx before update is x: -3.07034540176
y: -106.223701477
theta: 4.75892734528
speed: 13.7362852097
id: 1
t: 294
xxx after update is x: -2.91499400139
y: -107.480484009
theta: 4.85866594315
speed: 13.7639961243
id: 1
t: 295
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:296


xxx before update is x: -2.91499400139
y: -107.480484009
theta: 4.85866594315
speed: 13.7639961243
id: 1
t: 295
xxx after update is x: -3.0847966671
y: -107.540008545
theta: 4.75437116623
speed: 14.1167993546
id: 1
t: 296
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5151999999999983]
222 self.state_dicts[msg.id][msg.t] is (-77.95053100585938, 3.102496862411499, 3.1015710830688477, 13.938488960266113)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:297


xxx before update is x: -3.0847966671
y: -107.540008545
theta: 4.75437116623
speed: 14.1167993546
id: 1
t: 296
xxx after update is x: -3.20250630379
y: -108.347473145
theta: 4.57182168961
speed: 13.9621934891
id: 1
t: 297
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.2






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:298


xxx before update is x: -3.20250630379
y: -108.347473145
theta: 4.57182168961
speed: 13.9621934891
id: 1
t: 297
xxx after update is x: -3.16360354424
y: -107.890281677
theta: 4.5704240799
speed: 13.8159952164
id: 1
t: 298
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:299


xxx before update is x: -3.16360354424
y: -107.890281677
theta: 4.5704240799
speed: 13.8159952164
id: 1
t: 298
xxx after update is x: -3.10379743576
y: -109.359367371
theta: 4.59258460999
speed: 14.1248579025
id: 1
t: 299
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:300


xxx before update is x: -3.10379743576
y: -109.359367371
theta: 4.59258460999
speed: 14.1248579025
id: 1
t: 299
xxx after update is x: -3.28918123245
y: -109.943954468
theta: 4.83125925064
speed: 13.843164444
id: 1
t: 300
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:301


xxx before update is x: -3.28918123245
y: -109.943954468
theta: 4.83125925064
speed: 13.843164444
id: 1
t: 300
xxx after update is x: -2.85954737663
y: -110.637123108
theta: 4.69381856918
speed: 13.8869285583
id: 1
t: 301
ma-80.5792617798
y: 3.16007494926
theta: 3.15626549721
speed: 13.4500541687
id: 0
t: 300
xxx after update is x: -80.927482605
y: 3.43565797806
theta: 2.93891429901
speed: 13.6581707001
id: 0
t: 301
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.8595473766326904, -110.63712310791016, 4.69381856918335, 13.88692855834961)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -80.927482605
y: 3.43565797806
theta: 2.93891429901
speed: 13.6581707001
id: 0
t: 301
xxx after update is x: -81.9051742554
y: 3.11784315109
theta: 3.33315753937
speed: 14.3177022934
id: 0
t: 302
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:302




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:303


xxx before update is x: -81.9051742554
y: 3.11784315109
theta: 3.33315753937
speed: 14.3177022934
id: 0
t: 302
xxx after update is x: -81.9541931152
y: 3.37865924835
theta: 3.19857382774
speed: 14.0006523132
id: 0
t: 303
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.4666666667






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:304


xxx before update is x: -81.9541931152
y: 3.37865924835
theta: 3.19857382774
speed: 14.0006523132
id: 0
t: 303
xxx after update is x: -82.8414535522
y: 3.47090768814
theta: 3.39388942719
speed: 14.2595739365
id: 0
t: 304
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:305


xxx before update is x: -82.8414535522
y: 3.47090768814
theta: 3.39388942719
speed: 14.2595739365
id: 0
t: 304
xxx after update is x: -83.5132064819
y: 3.17038369179
theta: 3.11105012894
speed: 13.815196991
id: 0
t: 305
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:306


xxx before update is x: -83.5132064819
y: 3.17038369179
theta: 3.11105012894
speed: 13.815196991
id: 0
t: 305
xxx after update is x: -84.3105926514
y: 3.35667490959
theta: 3.05539441109
speed: 14.1076688766
id: 0
t: 306
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.276374101638794, -114.5096435546875, 4.665551662445068, 13.877710342407227)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:307


xxx before update is x: -84.3105926514
y: 3.35667490959
theta: 3.05539441109
speed: 14.1076688766
id: 0
t: 306
xxx after update is x: -84.697555542
y: 3.77735328674
theta: 3.16533637047
speed: 13.7607660294
id: 0
t: 307
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spinneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (-80.92748260498047, 3.4356579780578613, 2.9389142990112305, 13.658170700073242)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:302


xxx before update is x: -2.85954737663
y: -110.637123108
theta: 4.69381856918
speed: 13.8869285583
id: 1
t: 301
xxx after update is x: -3.3176305294
y: -111.324577332
theta: 4.57352209091
speed: 13.47605896
id: 1
t: 302
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:303


xxx before update is x: -3.3176305294
y: -111.324577332
theta: 4.57352209091
speed: 13.47605896
id: 1
t: 302
xxx after update is x: -2.64877033234
y: -112.419303894
theta: 4.72466278076
speed: 13.9049386978
id: 1
t: 303
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:304


xxx before update is x: -2.64877033234
y: -112.419303894
theta: 4.72466278076
speed: 13.9049386978
id: 1
t: 303
xxx after update is x: -3.7486166954
y: -113.065086365
theta: 4.76201725006
speed: 13.6756782532
id: 1
t: 304
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:305


xxx before update is x: -3.7486166954
y: -113.065086365
theta: 4.76201725006
speed: 13.6756782532
id: 1
t: 304
xxx after update is x: -3.55632567406
y: -113.39956665
theta: 4.60011768341
speed: 13.7819280624
id: 1
t: 305
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.5555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:306


xxx before update is x: -3.55632567406
y: -113.39956665
theta: 4.60011768341
speed: 13.7819280624
id: 1
t: 305
xxx after update is x: -3.27637410164
y: -114.509643555
theta: 4.66555166245
speed: 13.8777103424
id: 1
t: 306
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5135999999999983]
222 self.state_dicts[msg.id][msg.t] is (-84.31059265136719, 3.356674909591675, 3.055394411087036, 14.10766887664795)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.27637410164
y: -114.509643555
theta: 4.66555166245
speed: 13.8777103424
id: 1
t: 306
xxx after update is x: -2.92912125587
y: -114.388168335
theta: 4.71340179443
speed: 13.8114376068
id: 1
t: 307
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:307




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:308

xxx before update is x: -2.92912125587
y: -114.388168335
theta: 4.71340179443
speed: 13.8114376068
id: 1
t: 307
xxx after update is x: -2.82411026955
y: -115.282722473
theta: 4.66888046265
speed: 14.1629552841
id: 1
t: 308
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:309


xxx before update is x: -2.82411026955
y: -115.282722473
theta: 4.66888046265
speed: 14.1629552841
id: 1
t: 308
xxx after update is x: -2.97606658936
y: -115.894187927
theta: 4.60696172714
speed: 13.9934196472
id: 1
t: 309
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (-86.26134490966797, 2.7405638694763184, 3.1271655559539795, 13.891188621520996)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:310


xxx before update is x: -2.97606658936
y: -115.894187927
theta: 4.60696172714
speed: 13.9934196472
id: 1
t: 309
xxx after update is x: -2.99643063545
y: -116.033432007
theta: 4.61342287064
speed: 14.0421276093
id: 1
t: 310
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:311


xxx before update is x: -2.99643063545
y: -116.033432007
theta: 4.61342287064
speed: 14.0421276093
id: 1
t: 310
xxx after update is x: -3.69214272499
y: -116.658256531
theta: 4.56525087357
speed: 14.0934944153
id: 1
t: 311
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:312


xxx before update is x: -3.69214272499
y: -116.658256531
theta: 4.56525087357
speed: 14.0934944153
id: 1
t: 311
xxx after update is x: -3.42549014091
y: -117.46068573
theta: 4.79228544235
speed: 13.9303770065
id: 1
t: 312
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.8666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:313


xxx before update is x: -3.42549014091
y: -117.46068573
theta: 4.79228544235
speed: 13.9303770065
id: 1
t: 312
xxx after update is x: -2.90020298958
y: -117.805915833
theta: 4.71170425415
speed: 13.8692855835
id: 1
t: 313
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:314


xxx before update is x: -2.90020298958
y: -117.805915833
theta: 4.71170425415
speed: 13.8692855835
id: 1
t: 313
xxx after update is x: -3.09539842606
y: -118.645011902
theta: 4.72880983353
speed: 14.0702772141
id: 1
t: 314
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.481599999999998]
222 self.state_dicts[msg.id][msg.t] is (-89.17056274414062, 3.0242977142333984, 3.171109914779663, 14.003289222717285)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:Fal function, finish the n times spin:308

xxx before update is x: -84.697555542
y: 3.77735328674
theta: 3.16533637047
speed: 13.7607660294
id: 0
t: 307
xxx after update is x: -85.1406784058
y: 3.21378397942
theta: 3.08796048164
speed: 13.8577852249
id: 0
t: 308
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:309


xxx before update is x: -85.1406784058
y: 3.21378397942
theta: 3.08796048164
speed: 13.8577852249
id: 0
t: 308
xxx after update is x: -86.2613449097
y: 2.74056386948
theta: 3.12716555595
speed: 13.8911886215
id: 0
t: 309
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:310


xxx before update is x: -86.2613449097
y: 2.74056386948
theta: 3.12716555595
speed: 13.8911886215
id: 0
t: 309
xxx after update is x: -87.1591262817
y: 3.20751714706
theta: 3.13905405998
speed: 13.9296274185
id: 0
t: 310
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.9964306354522705, -116.03343200683594, 4.613422870635986, 14.04212760925293)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:311


xxx before update is x: -87.1591262817
y: 3.20751714706
theta: 3.13905405998
speed: 13.9296274185
id: 0
t: 310
xxx after update is x: -87.1957473755
y: 3.07853960991
theta: 3.26851844788
speed: 13.8768644333
id: 0
t: 311
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.8222222222






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:312


xxx before update is x: -87.1957473755
y: 3.07853960991
theta: 3.26851844788
speed: 13.8768644333
id: 0
t: 311
xxx after update is x: -88.200668335
y: 3.31522917747
theta: 2.98972010612
speed: 13.571723938
id: 0
t: 312
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -88.200668335
y: 3.31522917747
theta: 2.98972010612
speed: 13.571723938
id: 0
t: 312
xxx after update is x: -88.3364944458
y: 3.36008262634
theta: 3.06269860268
speed: 13.9322986603
id: 0
t: 313
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:313




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:314


xxx before update is x: -88.3364944458
y: 3.36008262634
theta: 3.06269860268
speed: 13.9322986603
id: 0
t: 313
xxx after update is x: -89.1705627441
y: 3.02429771423
theta: 3.17110991478
speed: 14.0032892227
id: 0
t: 314
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:315


xxx before update is x: -89.1705627441
y: 3.02429771423
theta: 3.17110991478
speed: 14.0032892227
id: 0
t: 314
xxx after update is x: -89.8580627441
y: 3.39047384262
theta: 3.17900681496
speed: 14.0773162842
id: 0
t: 315
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:316


xxx before update is x: -89.8580627441
y: 3.39047384262
theta: 3.17900681496
speed: 14.0773162842
id: 0
t: 315
xxx after update is x: -90.4672775269
y: 3.21602249146
theta: 3.1166343689
speed: 13.5882472992
id: 0
t: 316
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.6216607093811035, -120.81723022460938, 4.738056659698486, 13.81767749786377)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:317


xxx before update is x: -90.4672775269
y: 3.21602249146
theta: 3.1166343689
speed: 13.5882472992
id: 0
t: 316
xxx after update is x: -91.3503494263
y: 3.2363922596
theta: 3.11221647263
speed: 13.7441663742
id: 0
t: 317
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:318


xxx before update is x: -91.3503494263
y: 3.2363922596
theta: 3.11221647263
speed: 13.7441663742
id: 0
t: 317
xxx after update is x: -92.0606155396
y: 3.06209731102
theta: 3.10925793648
speed: 13.8511667252
id: 0
t: 318
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:319


xxx before update is x: -92.0606155396
y: 3.06209731102
theta: 3.10925793648
speed: 13.8511667252
id: 0
t: 318
xxx after update is x: -92.1544036865
y: 3.55232954025
theta: 3.09638404846
speed: 13.67000103
id: 0
t: 319
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.1777777778






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.0, 0.0]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:320


xxx before update is x: -92.1544036865
y: 3.55232954025
theta: 3.09638404846
speed: 13.67000103
id: 0
t: 319
xxx after update is x: -92.7351608276
y: 2.94584989548
theta: 3.23703527451
speed: 14.3451356888
id: 0
t: 320
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -92.7351608276
y: 2.94584989548
theta: 3.23703527451
speed: 14.3451356888
id: 0
t: 320
xxx after update is x: -93.3556213379
y: 3.34868621826
theta: 2.9755589962
speed: 14.0721645355
id: 0
t: 321
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:321




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -93.3556213379
y: 3.34868621826
theta: 2.9755589962
speed: 14.0721645355
id: 0
t: 321
xxx after update is x: -94.4745864868
y: 2.45938754082
theta: 3.05908536911
speed: 13.7766056061
id: 0
t: 322
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:322




going to the update function
sim.py in the sim.py update function 
targetse
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.09539842606
y: -118.645011902
theta: 4.72880983353
speed: 14.0702772141
id: 1
t: 314
xxx after update is x: -2.80237317085
y: -119.556350708
theta: 4.83041667938
speed: 13.9614067078
id: 1
t: 315
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:315




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:316


xxx before update is x: -2.80237317085
y: -119.556350708
theta: 4.83041667938
speed: 13.9614067078
id: 1
t: 315
xxx after update is x: -3.62166070938
y: -120.817230225
theta: 4.7380566597
speed: 13.8176774979
id: 1
t: 316
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:317


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:318


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.46719999999999806]
222 self.state_dicts[msg.id][msg.t] is (-92.06061553955078, 3.0620973110198975, 3.109257936477661, 13.851166725158691)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:319


222 self.state_dicts[msg.id][msg.t] is (-92.15440368652344, 3.5523295402526855, 3.096384048461914, 13.670001029968262)
222 self.state_dicts[msg.id][msg.t] is (-92.73516082763672, 2.945849895477295, 3.2370352745056152, 14.345135688781738)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:320


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:321


222 self.state_dicts[msg.id][msg.t] is (-93.35562133789062, 3.3486862182617188, 2.9755589962005615, 14.072164535522461)
222 self.state_dicts[msg.id][msg.t] is (-94.4745864868164, 2.4593875408172607, 3.0590853691101074, 13.776605606079102)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:322




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:323


222 self.state_dicts[msg.id][msg.t] is (-94.8342056274414, 3.2190091609954834, 3.3156754970550537, 13.737984657287598)
222 self.state_dicts[msg.id][msg.t] is (-95.43726348876953, 3.22273850440979, 3.0654914379119873, 13.651382446289062)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:324




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:325


222 self.state_dicts[msg.id][msg.t] is (-96.0302505493164, 2.7699573040008545, 3.2054991722106934, 13.944809913635254)
222 self.state_dicts[msg.id][msg.t] is (-96.11140441894531, 3.205871343612671, 3.139977216720581, 14.302603721618652)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:326




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:327


222 self.state_dicts[msg.id][msg.t] is (-96.91664123535156, 3.0000247955322266, 3.1429965496063232, 14.26835060speed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -94.4745864868
y: 2.45938754082
theta: 3.05908536911
speed: 13.7766056061
id: 0
t: 322
xxx after update is x: -94.8342056274
y: 3.219009161
theta: 3.31567549706
speed: 13.7379846573
id: 0
t: 323
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:323




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -94.8342056274
y: 3.219009161
theta: 3.31567549706
speed: 13.7379846573
id: 0
t: 323
xxx after update is x: -95.4372634888
y: 3.22273850441
theta: 3.06549143791
speed: 13.6513824463
id: 0
t: 324
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:324




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -95.4372634888
y: 3.22273850441
theta: 3.06549143791
speed: 13.6513824463
id: 0
t: 324
xxx after update is x: -96.0302505493
y: 2.769957304
theta: 3.20549917221
speed: 13.9448099136
id: 0
t: 325
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:325




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -96.0302505493
y: 2.769957304
theta: 3.20549917221
speed: 13.9448099136
id: 0
t: 325
xxx after update is x: -96.1114044189
y: 3.20587134361
theta: 3.13997721672
speed: 14.3026037216
id: 0
t: 326
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:326


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.4888888889






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -96.1114044189
y: 3.20587134361
theta: 3.13997721672
speed: 14.3026037216
id: 0
t: 326
xxx after update is x: -96.9166412354
y: 3.00002479553
theta: 3.14299654961
speed: 14.2683506012
id: 0
t: 327
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:327




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -96.9166412354
y: 3.00002479553
theta: 3.14299654961
speed: 14.2683506012
id: 0
t: 327
xxx after update is x: -97.7499389648
y: 3.69870638847
theta: 3.09631156921
speed: 13.9139251709
id: 0
t: 328
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:328




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -97.7499389648
y: 3.69870638847
theta: 3.09631156921
speed: 13.9139251709
id: 0
t: 328
xxx after update is x: -98.138092041
y: 3.16777849197
theta: 3.19389724731
speed: 13.5434188843
id: 0
t: 329
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:329




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -98.138092041
y: 3.16777849197
theta: 3.19389724731
speed: 13.5434188843
id: 0
t: 329
xxx after update is x: -99.30884552
y: 3.43784451485
theta: 3.07932734489
speed: 13.8253545761
id: 0
t: 330
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:330




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -99.30884552
y: 3.43784451485
theta: 3.07932734489
speed: 13.8253545761
id: 0
t: 330
xxx after update is x: -99.9651260376
y: 3.09339213371
theta: 3.15280652046
speed: 13.6421279907
id: 0
t: 331
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:331




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -99.9651260376
y: 3.09339213371
theta: 3.15280652046
speed: 13.6421279907
id: 0
t: 331
xxx after update is x: -100.129554749
y: 3.58680176735
theta: 3.0529294014
speed: 13.6444206238
id: 0
t: 332
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:332




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -100.129554749
y: 3.58680176735
theta: 3.0529294014
speed: 13.6444206238
id: 0
t: 332
xxx after update is x: -101.150596619
y: 3.38250112534
theta: 3.23053956032
speed: 13.245973587
id: 0
t: 333
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:333




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -101.150596619
y: 3.38250112534
theta: 3.23053956032
speed: 13.245973587
id: 0
t: 333
xxx after update is x: -101.614021301
y: 3.04610919952
theta: 3.01367092133
speed: 12.7510280609
id: 0
t: 334
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:334


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.8444444444






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -101.614021301
y: 3.04610919952
theta: 3.01367092133
speed: 12.7510280609
id: 0
t: 334
xxx after update is x: -101.471237183
y: 3.03721952438
theta: 3.23931765556
speed: 13.3515901566
id: 0
t: 335
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:335




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -101.471237183
y: 3.03721952438
theta: 3.23931765556
speed: 13.3515901566
id: 0
t: 335
xxx after update is x: -102.987327576
y: 3.26562142372
theta: 3.20627570152
speed: 12.4537668228
id: 0
t: 336
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:336




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -102.987327576
y: 3.26562142372
theta: 3.20627570152
speed: 12.4537668228
id: 0
t: 336
xxx after update is x: -102.730407715
y: 3.3312163353
theta: 3.13810563087
speed: 12.377289772
id: 0
t: 337
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:337




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -102.730407715
y: 3.3312163353
theta: 3.13810563087
speed: 12.377289772
id: 0
t: 337
xxx after update is x: -104.150840759
y: 3.07665967941
theta: 3.22112226486
speed: 12.1529846191
id: 0
t: 338
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:338




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -104.150840759
y: 3.07665967941
t1196289)
222 self.state_dicts[msg.id][msg.t] is (-97.74993896484375, 3.6987063884735107, 3.096311569213867, 13.913925170898438)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:328


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:329


222 self.state_dicts[msg.id][msg.t] is (-98.13809204101562, 3.167778491973877, 3.193897247314453, 13.543418884277344)
222 self.state_dicts[msg.id][msg.t] is (-99.30884552001953, 3.4378445148468018, 3.079327344894409, 13.82535457611084)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:330




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:331


222 self.state_dicts[msg.id][msg.t] is (-99.96512603759766, 3.0933921337127686, 3.152806520462036, 13.642127990722656)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:332


222 self.state_dicts[msg.id][msg.t] is (-100.12955474853516, 3.586801767349243, 3.052929401397705, 13.644420623779297)


going to the update function
sim.py in the sim.py update function 
leave the update function 
222 self.state_dicts[msg.id][msg.t] is (-101.15059661865234, 3.3825011253356934, 3.230539560317993, 13.245973587036133)
in spin function, finish the n times spin:333


222 self.state_dicts[msg.id][msg.t] is (-101.61402130126953, 3.046109199523926, 3.0136709213256836, 12.751028060913086)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:334




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:335


222 self.state_dicts[msg.id][msg.t] is (-101.47123718261719, 3.037219524383545, 3.2393176555633545, 13.351590156555176)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-102.9873275756836, 3.2656214237213135, 3.206275701522827, 12.453766822814941)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:336




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:337


222 self.state_dicts[msg.id][msg.t] is (-102.73040771484375, 3.331216335296631, 3.138105630874634, 12.377289772033691)
222 self.state_dicts[msg.id][msg.t] is (-104.15084075927734, 3.076659679412842, 3.2211222648620605, 12.152984619140625)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:338


222 self.state_dicts[msg.id][msg.t] is (-103.95165252685547, 2.823404312133789, 3.063607692718506, 11.581202507019043)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:339


222 self.state_dicts[msg.id][msg.t] is (-104.25469970703125, 3.4664289951324463, 3.2274961471557617, 11.27896499633789)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:340




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:341


222 self.state_dicts[msg.id][msg.t] is (-105.53642272949219, 3.0253658294677734, 3.300269365310669, 11.5918874740heta: 3.22112226486
speed: 12.1529846191
id: 0
t: 338
xxx after update is x: -103.951652527
y: 2.82340431213
theta: 3.06360769272
speed: 11.581202507
id: 0
t: 339
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:339




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -103.951652527
y: 2.82340431213
theta: 3.06360769272
speed: 11.581202507
id: 0
t: 339
xxx after update is x: -104.254699707
y: 3.46642899513
theta: 3.22749614716
speed: 11.2789649963
id: 0
t: 340
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:340




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -104.254699707
y: 3.46642899513
theta: 3.22749614716
speed: 11.2789649963
id: 0
t: 340
xxx after update is x: -105.536422729
y: 3.02536582947
theta: 3.30026936531
speed: 11.5918874741
id: 0
t: 341
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:341


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 15.1555555556






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -105.536422729
y: 3.02536582947
theta: 3.30026936531
speed: 11.5918874741
id: 0
t: 341
xxx after update is x: -105.400093079
y: 2.92065477371
theta: 3.11719751358
speed: 11.2526330948
id: 0
t: 342
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:342




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -105.400093079
y: 2.92065477371
theta: 3.11719751358
speed: 11.2526330948
id: 0
t: 342
xxx after update is x: -105.920448303
y: 3.50717997551
theta: 3.07393693924
speed: 10.7778711319
id: 0
t: 343
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:343




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -105.920448303
y: 3.50717997551
theta: 3.07393693924
speed: 10.7778711319
id: 0
t: 343
xxx after update is x: -106.284225464
y: 3.38391280174
theta: 3.29703974724
speed: 10.1264400482
id: 0
t: 344
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:344




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -106.284225464
y: 3.38391280174
theta: 3.29703974724
speed: 10.1264400482
id: 0
t: 344
xxx after update is x: -107.114479065
y: 2.68891763687
theta: 3.0225982666
speed: 10.1187944412
id: 0
t: 345
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:345




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -107.114479065
y: 2.68891763687
theta: 3.0225982666
speed: 10.1187944412
id: 0
t: 345
xxx after update is x: -107.691253662
y: 3.34365272522
theta: 3.21244692802
speed: 10.0700111389
id: 0
t: 346
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:346




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -107.691253662
y: 3.34365272522
theta: 3.21244692802
speed: 10.0700111389
id: 0
t: 346
xxx after update is x: -1060059)
222 self.state_dicts[msg.id][msg.t] is (-105.40009307861328, 2.920654773712158, 3.1171975135803223, 11.252633094787598)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:342




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:343


222 self.state_dicts[msg.id][msg.t] is (-105.92044830322266, 3.5071799755096436, 3.073936939239502, 10.777871131896973)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:344


222 self.state_dicts[msg.id][msg.t] is (-106.28422546386719, 3.3839128017425537, 3.297039747238159, 10.126440048217773)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:345


222 self.state_dicts[msg.id][msg.t] is (-107.1144790649414, 2.688917636871338, 3.0225982666015625, 10.118794441223145)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:346


222 self.state_dicts[msg.id][msg.t] is (-107.69125366210938, 3.3436527252197266, 3.212446928024292, 10.070011138916016)
222 self.state_dicts[msg.id][msg.t] is (-108.06631469726562, 3.5433743000030518, 3.089186906814575, 9.451754570007324)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:347


222 self.state_dicts[msg.id][msg.t] is (-108.28289031982422, 3.0600411891937256, 3.141300678253174, 9.646592140197754)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:348


222 self.state_dicts[msg.id][msg.t] is (-109.7857666015625, 3.3118462562561035, 3.0558578968048096, 9.111217498779297)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:349


222 self.state_dicts[msg.id][msg.t] is (-109.1813735961914, 3.1524205207824707, 3.2609262466430664, 8.868156433105469)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:350


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-109.85491943359375, 3.5988686084747314, 3.0591375827789307, 8.745220184326172)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:351


222 self.state_dicts[msg.id][msg.t] is (-110.2066421508789, 2.838292121887207, 3.218485116958618, 7.813754558563232)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:352


222 self.state_dicts[msg.id][msg.t] is (-110.15559387207031, 3.427715301513672, 3.01495623588562, 8.181708335876465)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:353


222 self.state_dicts[msg.id][msg.t] is (-110.64472961425781, 2.8297948837280273, 3.080549716949463, 7.956872940063477)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:354




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:355


222 self.state_dicts[msg.id][msg.t] is (-110.85614013671875, 2.7361907958984375, 3.2838246822357178, 7.409506797790528.066314697
y: 3.5433743
theta: 3.08918690681
speed: 9.45175457001
id: 0
t: 347
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:347




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -108.066314697
y: 3.5433743
theta: 3.08918690681
speed: 9.45175457001
id: 0
t: 347
xxx after update is x: -108.28289032
y: 3.06004118919
theta: 3.14130067825
speed: 9.6465921402
id: 0
t: 348
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:348




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -108.28289032
y: 3.06004118919
theta: 3.14130067825
speed: 9.6465921402
id: 0
t: 348
xxx after update is x: -109.785766602
y: 3.31184625626
theta: 3.0558578968
speed: 9.11121749878
id: 0
t: 349
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:349


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 15.5111111111






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -109.785766602
y: 3.31184625626
theta: 3.0558578968
speed: 9.11121749878
id: 0
t: 349
xxx after update is x: -109.181373596
y: 3.15242052078
theta: 3.26092624664
speed: 8.86815643311
id: 0
t: 350
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:350




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -109.181373596
y: 3.15242052078
theta: 3.26092624664
speed: 8.86815643311
id: 0
t: 350
xxx after update is x: -109.854919434
y: 3.59886860847
theta: 3.05913758278
speed: 8.74522018433
id: 0
t: 351
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:351




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -109.854919434
y: 3.59886860847
theta: 3.05913758278
speed: 8.74522018433
id: 0
t: 351
xxx after update is x: -110.206642151
y: 2.83829212189
theta: 3.21848511696
speed: 7.81375455856
id: 0
t: 352
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:352




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -110.206642151
y: 2.83829212189
theta: 3.21848511696
speed: 7.81375455856
id: 0
t: 352
xxx after update is x: -110.155593872
y: 3.42771530151
theta: 3.01495623589
speed: 8.18170833588
id: 0
t: 353
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:353




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -110.155593872
y: 3.42771530151
theta: 3.01495623589
speed: 8.18170833588
id: 0
t: 353
xxx after update is x: -110.644729614
y: 2.82979488373
theta: 3.08054971695
speed: 7.95687294006
id: 0
t: 354
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:354




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -110.644729614
y: 2.82979488373
theta: 3.08054971695
speed: 7.95687294006
id: 0
t: 354
xxx after update is x: -110.856140137
y: 2.7361907959
theta: 3.28382468224
speed: 7.40950679779
id: 0
t: 355
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:355




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -110.856140137
y: 2.7361907959
theta: 3.28382468224
speed: 7.40950679779
id: 0
t: 355
xxx after update is x: -111.82775116
y: 3.45968747139
theta: 2.86795043945
speed: 7.34938955307
id: 0
t: 356
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:356




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -111.82775116
y: 3.45968747139
theta: 2.86795043945
speed: 7.34938955307
id: 0
t: 356
xxx after update is x: -111.580001831
y: 3.04181838036
theta: 3.21838998795
speed: 6.67621660233
id: 0
t: 357
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 15.8666666667






self.maneuver_requested left
leave the update function 
in spin function, finish the n times spin:357


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -111.580001831
y: 3.04181838036
theta: 3.21838998795
speed: 6.67621660233
id: 0
t: 357
xxx after update is x: -112.551948547
y: 3.1989030838
theta: 3.22567677498
speed: 6.756980896
id: 0
t: 358
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:358




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -112.551948547
y: 3.1989030838
theta: 3.22567677498
speed: 6.756980896
id: 0
t: 358
xxx after update is x: -112.89641571
y: 3.37444090843
theta: 3.08175945282
speed: 6.21709299088
id: 0
t: 359
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:359




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -112.89641571
y: 3.37444090843
theta: 3.08175945282
speed: 6.21709299088
id: 0
t: 359
xxx after update is x: -113.174758911
y: 2.88827800751
theta: 3.08464884758
speed: 6.09238624573
id: 0
t: 360
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:360




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -113.174758911
y: 2.88827800751
theta: 3.08464884758
speed: 6.09238624573
id: 0
t: 360
xxx after update is x: -113.242362976
y: 3.25131797791
theta: 3.18533277512
speed: 5.9976644516
id: 0
t: 361
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:361




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -113.242362976
y: 3.25131797791
theta: 3.18533277512
speed: 5.9976644516
id: 0
t: 361
xxx after update is x: -113.171073914
y: 3.43133926392
theta: 3.31153297424
speed: 5.45903205872
id: 0
t: 362
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:362




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -113.171073914
y: 3.43133926392
theta: 3.31153297424
speed: 5.45903205872
id: 0
t: 362
xxx after update is x: -113.426254272
y: 2.9140996933
theta: 2.98634839058
speed: 5.37407398224
id: 0
t: 363
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
7)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:356


222 self.state_dicts[msg.id][msg.t] is (-111.82775115966797, 3.4596874713897705, 2.867950439453125, 7.349389553070068)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:357


222 self.state_dicts[msg.id][msg.t] is (-111.58000183105469, 3.041818380355835, 3.2183899879455566, 6.6762166023254395)
222 self.state_dicts[msg.id][msg.t] is (-112.55194854736328, 3.1989030838012695, 3.2256767749786377, 6.756980895996094)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:358


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:359


222 self.state_dicts[msg.id][msg.t] is (-112.89641571044922, 3.374440908432007, 3.081759452819824, 6.217092990875244)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:360


222 self.state_dicts[msg.id][msg.t] is (-113.17475891113281, 2.888278007507324, 3.084648847579956, 6.092386245727539)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:361


222 self.state_dicts[msg.id][msg.t] is (-113.24236297607422, 3.2513179779052734, 3.185332775115967, 5.997664451599121)
222 self.state_dicts[msg.id][msg.t] is (-113.17107391357422, 3.4313392639160156, 3.311532974243164, 5.45903205871582)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:362


222 self.state_dicts[msg.id][msg.t] is (-113.42625427246094, 2.91409969329834, 2.9863483905792236, 5.3740739822387695)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:363


222 self.state_dicts[msg.id][msg.t] is (-113.49478912353516, 3.37839937210083, 3.2046234607696533, 4.800768852233887)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:364




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:365


222 self.state_dicts[msg.id][msg.t] is (-114.0483627319336, 3.537754774093628, 3.1725525856018066, 4.769923210144043)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:366


222 self.state_dicts[msg.id][msg.t] is (-114.08534240722656, 2.8105742931365967, 3.088822841644287, 4.49843692779541)
222 self.state_dicts[msg.id][msg.t] is (-114.35647583007812, 2.795121431350708, 3.258141040802002, 4.091235160827637)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:367


222 self.state_dicts[msg.id][msg.t] is (-114.83515930175781, 3.3655283451080322, 3.159135580062866, 3.992866277694702)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:368




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:369


222 self.state_dicts[msg.id][msg.t] is (-115.29087829589844, 2.8115243911743164, 3.1351335048675537, 3.56125807762146)


going in spin function, finish the n times spin:363




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -113.426254272
y: 2.9140996933
theta: 2.98634839058
speed: 5.37407398224
id: 0
t: 363
xxx after update is x: -113.494789124
y: 3.3783993721
theta: 3.20462346077
speed: 4.80076885223
id: 0
t: 364
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:364


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 16.1777777778






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -113.494789124
y: 3.3783993721
theta: 3.20462346077
speed: 4.80076885223
id: 0
t: 364
xxx after update is x: -114.048362732
y: 3.53775477409
theta: 3.1725525856
speed: 4.76992321014
id: 0
t: 365
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:365




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -114.048362732
y: 3.53775477409
theta: 3.1725525856
speed: 4.76992321014
id: 0
t: 365
xxx after update is x: -114.085342407
y: 2.81057429314
theta: 3.08882284164
speed: 4.4984369278
id: 0
t: 366
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:366




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -114.085342407
y: 2.81057429314
theta: 3.08882284164
speed: 4.4984369278
id: 0
t: 366
xxx after update is x: -114.35647583
y: 2.79512143135
theta: 3.2581410408
speed: 4.09123516083
id: 0
t: 367
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:367




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -114.35647583
y: 2.79512143135
theta: 3.2581410408
speed: 4.09123516083
id: 0
t: 367
xxx after update is x: -114.835159302
y: 3.36552834511
theta: 3.15913558006
speed: 3.99286627769
id: 0
t: 368
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:368




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -114.835159302
y: 3.36552834511
theta: 3.15913558006
speed: 3.99286627769
id: 0
t: 368
xxx after update is x: -115.290878296
y: 2.81152439117
theta: 3.13513350487
speed: 3.56125807762
id: 0
t: 369
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:369




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -115.290878296
y: 2.81152439117
theta: 3.13513350487
speed: 3.56125807762
id: 0
t: 369
xxx after update is x: -115.031661987
y: 3.03486347198
theta: 3.25750637054
speed: 3.67610740662
id: 0
t: 370
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:370




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -115.031661987
y: 3.03486347198
theta: 3.25750637054
speed: 3.67610740662
id: 0
t: 370
xxx after update is x: -114.979232788
y: 3.04002952576
theta: 3.07577037811
speed: 3.15935873985
id: 0
t: 371
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:371




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -114.979232788
y: 3.04002952576
theta: 3.07577037811
speed: 3.15935873985
id: 0
t: 371
xxx after update is x: -114.828430176
y: 2.86305904388
theta: 3.10615849495
speed: 2.92505431175
id: 0
t: 372
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:372


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 16.5333333333






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:373


xxx before update is x: -114.828430176
y: 2.86305904388
theta: 3.10615849495
speed: 2.92505431175
id: 0
t: 372
xxx after update is x: -115.093673706
y: 3.05324864388
theta: 3.02896952629
speed: 2.87398648262
id: 0
t: 373
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -115.093673706
y: 3.05324864388
theta: 3.02896952629
speed: 2.87398648262
id: 0
t: 373
xxx after update is x: -115.583587646
y: 3.17951631546
theta: 3.13796067238
speed: 2.18200445175
id: 0
t: 374
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:374




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -115.583587646
y: 3.17951631546
theta: 3.13796067238
speed: 2.18200445175
id: 0
t: 374
xxx after update is x: -116.07232666
y: 3.27005791664
theta: 3.23442864418
speed: 2.15196585655
id: 0
t: 375
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:375




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -116.07232666
y: 3.27005791664
theta: 3.23442864418
speed: 2.15196585655
id: 0
t: 375
xxx after update is x: -115.544456482
y: 3.4645049572
theta: 3.10895252228
speed: 1.9542491436
id: 0
t: 376
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:376




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -115.544456482
y: 3.4645049572
theta: 3.10895252228
speed: 1.9542491436
id: 0
t: 376
xxx after update is x: -115.405677795
y: 3.32344865799
theta: 3.17776536942
speed: 1.64023971558
id: 0
t: 377
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:377




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -115.405677795
y: 3.32344865799
theta: 3.17776536942
speed: 1.64023971558
id: 0
t: 377
xxx after update is x: -115.962211609
y: 2.75280332565
theta: 2.95400857925
speed: 1.11302053928
id: 0
t: 378
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:378




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -115.962211609
y: 2.75280332565
theta: 2.95400857925
speed: 1.11302053928
id: 0
t: 378
xxx after update is x: -116.248825073
y: 3.19322919846
theta: 3.20760202408
speed: 1.00150334835
id: 0
t: 379
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:379


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 16.8444444444






self.maneuver_reto the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:370


222 self.state_dicts[msg.id][msg.t] is (-115.03166198730469, 3.0348634719848633, 3.2575063705444336, 3.676107406616211)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:371


222 self.state_dicts[msg.id][msg.t] is (-114.97923278808594, 3.040029525756836, 3.075770378112793, 3.1593587398529053)
222 self.state_dicts[msg.id][msg.t] is (-114.82843017578125, 2.8630590438842773, 3.106158494949341, 2.9250543117523193)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:372


222 self.state_dicts[msg.id][msg.t] is (-115.09367370605469, 3.053248643875122, 3.0289695262908936, 2.8739864826202393)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:373


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-115.58358764648438, 3.179516315460205, 3.13796067237854, 2.182004451751709)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:374




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:375


222 self.state_dicts[msg.id][msg.t] is (-116.07232666015625, 3.2700579166412354, 3.234428644180298, 2.151965856552124)
222 self.state_dicts[msg.id][msg.t] is (-115.5444564819336, 3.4645049571990967, 3.108952522277832, 1.9542491436004639)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:376


222 self.state_dicts[msg.id][msg.t] is (-115.40567779541016, 3.323448657989502, 3.177765369415283, 1.6402397155761719)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:377




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:378


222 self.state_dicts[msg.id][msg.t] is (-115.96221160888672, 2.752803325653076, 2.9540085792541504, 1.1130205392837524)
222 self.state_dicts[msg.id][msg.t] is (-116.24882507324219, 3.1932291984558105, 3.207602024078369, 1.001503348350525)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:379




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:380


222 self.state_dicts[msg.id][msg.t] is (-115.6729507446289, 3.127821922302246, 3.176600217819214, 1.13853120803833)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:381


222 self.state_dicts[msg.id][msg.t] is (-115.57539367675781, 3.607917308807373, 3.056004047393799, 0.4698091149330139)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:382


222 self.state_dicts[msg.id][msg.t] is (-115.77238464355469, 3.8558552265167236, 3.0236926078796387, 0.3089359700679779)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:383


222 self.state_dicts[msg.id][msg.t] is (-116.6071548461914, 3.1429426670074463, 3.1484358310699463, -0.11048383265733719)


going toquested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:380


xxx before update is x: -116.248825073
y: 3.19322919846
theta: 3.20760202408
speed: 1.00150334835
id: 0
t: 379
xxx after update is x: -115.672950745
y: 3.1278219223
theta: 3.17660021782
speed: 1.13853120804
id: 0
t: 380
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -115.672950745
y: 3.1278219223
theta: 3.17660021782
speed: 1.13853120804
id: 0
t: 380
xxx after update is x: -115.575393677
y: 3.60791730881
theta: 3.05600404739
speed: 0.469809114933
id: 0
t: 381
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:381




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -115.575393677
y: 3.60791730881
theta: 3.05600404739
speed: 0.469809114933
id: 0
t: 381
xxx after update is x: -115.772384644
y: 3.85585522652
theta: 3.02369260788
speed: 0.308935970068
id: 0
t: 382
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:382




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -115.772384644
y: 3.85585522652
theta: 3.02369260788
speed: 0.308935970068
id: 0
t: 382
xxx after update is x: -116.607154846
y: 3.14294266701
theta: 3.14843583107
speed: -0.110483832657
id: 0
t: 383
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:383




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -116.607154846
y: 3.14294266701
theta: 3.14843583107
speed: -0.110483832657
id: 0
t: 383
xxx after update is x: -116.040496826
y: 3.1929037571
theta: 2.89769268036
speed: 0.0773818716407
id: 0
t: 384
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:384




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -116.040496826
y: 3.1929037571
theta: 2.89769268036
speed: 0.0773818716407
id: 0
t: 384
xxx after update is x: -115.564704895
y: 3.48537421227
theta: 3.23821854591
speed: -0.278487175703
id: 0
t: 385
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:385




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -115.564704895
y: 3.48537421227
theta: 3.23821854591
speed: -0.278487175703
id: 0
t: 385
xxx after update is x: -115.96484375
y: 3.00097465515
theta: 3.29942369461
speed: -0.158174201846
id: 0
t: 386
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:386




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -115.96484375
y: 3.00097465515
theta: 3.29942369461
speed: -0.158174201846
id: 0
t: 386
xxx after update is x: -116.364639282
y: 3.55266594887
theta: 3.03792333603
speed: -0.0507434718311
id: 0
t: 387
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:387


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 17.2






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -116.364639282
y: 3.55266594887
theta: 3.03792333603
speed: -0.0507434718311
id: 0
t: 387
xxx after update is x: -115.837226868
y: 3.40389728546
theta: 2.99657773972
speed: -0.431127339602
id: 0
t: 388
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:388




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -115.837226868
y: 3.40389728546
theta: 2.99657773972
speed: -0.431127339602
id: 0
t: 388
xxx after update is x: -115.755508423
y: 2.93748402596
theta: 3.11779522896
speed: 0.0509452335536
id: 0
t: 389
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:389




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -115.755508423
y: 2.93748402596
theta: 3.11779522896
speed: 0.0509452335536
id: 0
t: 389
xxx after update is x: -115.948677063
y: 3.49057245255
theta: 2.96032881737
speed: 0.151243984699
id: 0
t: 390
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:390




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -115.948677063
y: 3.49057245255
theta: 2.96032881737
speed: 0.151243984699
id: 0
t: 390
xxx after update is x: -115.986923218
y: 3.2526743412
theta: 3.22075533867
speed: 0.143780574203
id: 0
t: 391
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:391




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -115.986923218
y: 3.2526743412
theta: 3.22075533867
speed: 0.143780574203
id: 0
t: 391
xxx after update is x: -116.24546051
y: 2.96624302864
theta: 3.01471018791
speed: 0.562506854534
id: 0
t: 392
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:392




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -116.24546051
y: 2.96624302864
theta: 3.01471018791
speed: 0.562506854534
id: 0
t: 392
xxx after update is x: -116.208206177
y: 3.13474941254
theta: 3.09608817101
speed: -0.277875691652
id: 0
t: 393
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:393




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -116.208206177
y: 3.13474941254
theta: 3.09608817101
speed: -0.277875691652
id: 0
t: 393
xxx after update is x: -115.67678833
y: 3.31986403465
theta: 3.04159832001
speed: 0.233958661556
id: 0
t: 394
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:394


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 17.5111111111






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -115.67678833
y: 3.31986403465
theta: 3.04159832001
speed: 0.233958661556
id: 0
t: 394
xxx after update is x: -115.893791199
y: 3.22659897804
theta: 3.40263581276
speed: -0.0900149643421
id: 0
t: 395
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update  the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:384


222 self.state_dicts[msg.id][msg.t] is (-116.04049682617188, 3.192903757095337, 2.8976926803588867, 0.07738187164068222)
222 self.state_dicts[msg.id][msg.t] is (-115.56470489501953, 3.4853742122650146, 3.2382185459136963, -0.2784871757030487)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:385




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:386


222 self.state_dicts[msg.id][msg.t] is (-115.96484375, 3.000974655151367, 3.2994236946105957, -0.15817420184612274)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:387


222 self.state_dicts[msg.id][msg.t] is (-116.36463928222656, 3.552665948867798, 3.0379233360290527, -0.0507434718310833)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:388


222 self.state_dicts[msg.id][msg.t] is (-115.83722686767578, 3.403897285461426, 2.996577739715576, -0.4311273396015167)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:389


222 self.state_dicts[msg.id][msg.t] is (-115.75550842285156, 2.9374840259552, 3.11779522895813, 0.050945233553647995)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:390


222 self.state_dicts[msg.id][msg.t] is (-115.94867706298828, 3.490572452545166, 2.9603288173675537, 0.15124398469924927)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:391


222 self.state_dicts[msg.id][msg.t] is (-115.98692321777344, 3.2526743412017822, 3.2207553386688232, 0.14378057420253754)
222 self.state_dicts[msg.id][msg.t] is (-116.2454605102539, 2.966243028640747, 3.0147101879119873, 0.5625068545341492)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:392




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:393


222 self.state_dicts[msg.id][msg.t] is (-116.20820617675781, 3.134749412536621, 3.096088171005249, -0.277875691652298)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:394


222 self.state_dicts[msg.id][msg.t] is (-115.67678833007812, 3.31986403465271, 3.041598320007324, 0.2339586615562439)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:395


222 self.state_dicts[msg.id][msg.t] is (-115.89379119873047, 3.2265989780426025, 3.4026358127593994, -0.09001496434211731)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested222 self.state_dicts[msg.id][msg.t] is (-116.36078643798828, 2.774057626724243, 3.2398242950439453, 0.07269294559955597)
 None


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:396


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:397


222 self.state_dicts[msg.id][msg.t] is (-115.53289794921875, 3.2223353385925293, 2.904536247253418, 0.22335000336170197)
function 
in spin function, finish the n times spin:395




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -115.893791199
y: 3.22659897804
theta: 3.40263581276
speed: -0.0900149643421
id: 0
t: 395
xxx after update is x: -116.360786438
y: 2.77405762672
theta: 3.23982429504
speed: 0.0726929455996
id: 0
t: 396
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:396




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -116.360786438
y: 2.77405762672
theta: 3.23982429504
speed: 0.0726929455996
id: 0
t: 396
xxx after update is x: -115.532897949
y: 3.22233533859
theta: 2.90453624725
speed: 0.223350003362
id: 0
t: 397
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:397




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -115.532897949
y: 3.22233533859
theta: 2.90453624725
speed: 0.223350003362
id: 0
t: 397
xxx after update is x: -115.559410095
y: 3.8705701828
theta: 3.06096887589
speed: 0.0678654238582
id: 0
t: 398
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:398




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -115.559410095
y: 3.8705701828
theta: 3.06096887589
speed: 0.0678654238582
id: 0
t: 398
xxx after update is x: -115.848968506
y: 3.41423344612
theta: 3.15094709396
speed: 0.445230662823
id: 0
t: 399
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:399




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -115.848968506
y: 3.41423344612
theta: 3.15094709396
speed: 0.445230662823
id: 0
t: 399
xxx after update is x: -116.566864014
y: 3.10506439209
theta: 3.14278316498
speed: -0.146789327264
id: 0
t: 400
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:400




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -116.566864014
y: 3.10506439209
theta: 3.14278316498
speed: -0.146789327264
id: 0
t: 400
xxx after update is x: -115.90713501
y: 3.63166165352
theta: 3.16768503189
speed: 0.243478834629
id: 0
t: 401
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:401


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 17.8222222222






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 17.8222222222






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:402




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:398


222 self.state_dicts[msg.id][msg.t] is (-115.55941009521484, 3.870570182800293, 3.0609688758850098, 0.06786542385816574)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:399


222 self.state_dicts[msg.id][msg.t] is (-115.84896850585938, 3.414233446121216, 3.150947093963623, 0.4452306628227234)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:400


222 self.state_dicts[msg.id][msg.t] is (-116.56686401367188, 3.1050643920898438, 3.1427831649780273, -0.1467893272638321)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:401


222 self.state_dicts[msg.id][msg.t] is (-115.90713500976562, 3.6316616535186768, 3.167685031890869, 0.24347883462905884)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:402


... logging to /home/lu/.ros/log/0b1fb2c8-ffa2-11e8-9ca8-000c291801fc/roslaunch-ubuntu-77410.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch
[1mstarted roslaunch server http://ubuntu:46111/[0m

SUMMARY
========

PARAMETERS
 * /enable_negotiator: True
 * /file_prefix: 
 * /nr_cars: 2
 * /plot: False
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /save: False

NODES
  /
    car0 (virtual_blinker/sim.py)
    car1 (virtual_blinker/sim.py)
    cloud (virtual_blinker/cloud.py)
    rviz (rviz/rviz)
    visualization (virtual_blinker/visualization.py)

auto-starting new master
[1mprocess[master]: started with pid [77421][0m
[1mROS_MASTER_URI=http://localhost:11311[0m
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch http://localhost:11311
[1msetting /run_id to 0b1fb2c8-ffa2-11e8-9ca8-000c291801fc[0m
[1mprocess[rosout-1]: started with pid [77441][0m
started core service [/rosout]
[1mprocess[visualization-2]: started with pid [77446][0m
[1mprocess[rviz-3]: started with pid [77460][0m
[1mprocess[car0-4]: started with pid [77461][0m
[1mprocess[car1-5]: started with pid [77462][0m
[1mprocess[cloud-6]: started with pid [77463][0m
[cloud-6] killing on exit
[car1-5] killing on exit
[car0-4] killing on exit
[rviz-3] killing on exit
[visualization-2] killing on exit
[rosout-1] killing on exit
[master] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
[1mdone[0m
