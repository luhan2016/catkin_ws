sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 1
s is car_state0
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 1.67674207687


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:1


222 self.state_dicts[msg.id][msg.t] is (3.025493860244751, -104.78557586669922, 1.5106604099273682, 13.808123588562012)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7f8768367cb0>
self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f8768388098>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9001)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:2


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
1546688106135
xxx after update is x: -2.99468278885
y: 73.6056594849
theta: 4.53044557571
speed: 13.9347438812
id: 1
t: 2
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.1618945598602295, -103.63480377197266, 1.6105072498321533, 13.541695594787598)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:3


xxx before update is x: -2.99468278885
y: 73.6056594849
theta: 4.53044557571
speed: 13.9347438812
id: 1
t: 2
1546688106210
xxx after update is x: -2.8569920063
y: 72.8898544312
theta: 4.93329524994
speed: 13.7425861359
id: 1
t: 3
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:4


xxx before update is x: -2.8569920063
y: 72.8898544312
theta: 4.93329524994
speed: 13.7425861359
id: 1
t: 3
1546688106269
xxx after update is x: -3.31392121315
y: 72.56590271
theta: 4.61030626297
speed: 13.6431922913
id: 1
t: 4
maneuver_negotiatir.py finish the update agent state from ros funtion
rissim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 0
s is car_state1
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 1.84099006653
222 self.state_dicts[msg.id][msg.t] is (-3.150524377822876, 74.35967254638672, 4.720256805419922, 14.186188697814941)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:1


222 self.state_dicts[msg.id][msg.t] is (-2.994682788848877, 73.60565948486328, 4.530445575714111, 13.934743881225586)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:2


222 self.state_dicts[msg.id][msg.t] is (-2.85699200630188, 72.88985443115234, 4.933295249938965, 13.742586135864258)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:3


222 self.state_dicts[msg.id][msg.t] is (-3.3139212131500244, 72.56590270996094, 4.610306262969971, 13.643192291259766)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:4


222 self.state_dicts[msg.id][msg.t] is (-3.588935613632202, 71.90797424316406, 4.797914028167725, 13.613812446594238)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:5


222 self.state_dicts[msg.id][msg.t] is (-3.2034406661987305, 71.7567367553711, 4.712984085083008, 14.024394989013672)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:6




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:7


222 self.state_dicts[msg.id][msg.t] is (-3.350390911102295, 70.21147155761719, 4.725124359130859, 13.76154613494873)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7f5fc943f998>
self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f5fc945a908>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:8




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:9


maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setik is [0.3516793323539295, 0.301782015644485]
222 self.state_dicts[msg.id][msg.t] is (3.18770694732666, -102.52957153320312, 1.4933301210403442, 13.621378898620605)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:5


xxx before update is x: -3.31392121315
y: 72.56590271
theta: 4.61030626297
speed: 13.6431922913
id: 1
t: 4
1546688106335
xxx after update is x: -3.58893561363
y: 71.9079742432
theta: 4.79791402817
speed: 13.6138124466
id: 1
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: -3.58893561363
y: 71.9079742432
theta: 4.79791402817
speed: 13.6138124466
id: 1
t: 5
1546688106408
xxx after update is x: -3.2034406662
y: 71.7567367554
theta: 4.71298408508
speed: 14.024394989
id: 1
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.35783142536900914, 0]
222 self.state_dicts[msg.id][msg.t] is (2.803466320037842, -101.49874114990234, 1.7273975610733032, 13.669087409973145)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.2034406662
y: 71.7567367554
theta: 4.71298408508
speed: 14.024394989
id: 1
t: 6
1546688106480
xxx after update is x: -3.3503909111
y: 70.2114715576
theta: 4.72512435913
speed: 13.7615461349
id: 1
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:7


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.311111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:8




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: -3.3503909111
y: 70.2114715576
theta: 4.72512435913
speed: 13.7615461349
id: 1
t: 7
1546688106634
xxx after update is x: -3.04796075821
y: 68.8951873779
theta: 4.81790399551
speed: 13.9960222244
id: 1
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.04796075821
y: 68.8951873779
theta: 4.81790399551
speed: 13.9960222244
id: 1
t: 8
1546688106635
xxx after update is x: -3.69736933708
y: 69.047706604
theta: 4.61800193787
speed: 13.9020051956
id: 1
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.69736933708
y: 69.047706604
theta: 4.61800193787
speed: 13.9020051956
id: 1
t: 9
1546688106673
xxx after update is x: -4.00807571411
y: 68.7068786621
theta: 4.73664665222
speed: 14.1170978546
id: 1
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:10




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: -4.00807571411
y: 68.7068786621
theta: 4.73664665222
speed: 14.1170978546
id: 1
t: 10
1546688106750
xxx after update is x: -3.29848575592
y: 67.5559539795
theta: 4.71034574509
speed: 13.7749013901
id: 1
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.29848575592
y: 67.5559539795
theta: 4.71034574509
speed: 13.7749013901
id: 1
t: 11
1546688106818
xxx after update is x: -3.07344174385
y: 67.4311904907
theta: 4.69012022018
speed: 13.7473983765
id: 1
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:12


aaaaaa
aaaaaabbbbb
risk is [0.3515454850551482, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1781797409057617, -97.0810317993164, 1.4174154996871948, 14.112510681152344)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: -3.07344174385
y: 67.4311904907
theta: 4.69012022018
speed: 13.7473983765
id: 1
t: 12
1546688106882
xxx after update is x: -3.11515235901
y: 66.7861557007
theta: 4.56100511551
speed: 13.6052436829
id: 1
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: -3.11515235901
y: 66.7861557007
theta: 4.56100511551
speed: 13.6052436829
id: 1
t: 13
1546688106942
xxx after update is x: -2.95920538902
y: 65.929397583
theta: 4.62499046326
speed: 13.8366250992
id: 1
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.95920538902
y: 65.929397583
theta: 4.62499046326
speed: 13.8366250992
id: 1
t: 14
1546688107006
xxx after update is x: -3.31953334808
y: 65.7900085449
theta: 4.81025791168
speed: 13.5768280029
id: 1
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:15


aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmp_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9000)
222 self.state_dicts[msg.id][msg.t] is (-3.697369337081909, 69.0477066040039, 4.618001937866211, 13.902005195617676)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:10




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
1546688106747
xxx after update is x: 3.30675292015
y: -97.9428787231
theta: 1.54028832912
speed: 13.7429389954
id: 0
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: 3.30675292015
y: -97.9428787231
theta: 1.54028832912
speed: 13.7429389954
id: 0
t: 11
1546688106817
xxx after update is x: 3.17817974091
y: -97.0810317993
theta: 1.41741549969
speed: 14.1125106812
id: 0
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: 3.17817974091
y: -97.0810317993
theta: 1.41741549969
speed: 14.1125106812
id: 0
t: 12
1546688106880
xxx after update is x: 3.47622990608
y: -97.6307220459
theta: 1.67220687866
speed: 14.1212444305
id: 0
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.47622990608
y: -97.6307220459
theta: 1.67220687866
speed: 14.1212444305
id: 0
t: 13
1546688106946
xxx after update is x: 3.73067951202
y: -95.8873443604
theta: 1.56019425392
speed: 13.7826690674
id: 0
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:14


aaaaaa
risk is [0.09579872579622473, 0.36445700671659104]
222 self.state_dicts[msg.id][msg.t] is (-2.959205389022827, 65.92939758300781, 4.624990463256836, 13.836625099182129)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.73067951202
y: -95.8873443604
theta: 1.56019425392
speed: 13.7826690674
id: 0
t: 14
1546688107006
xxx after update is x: 3.40935325623
y: -95.3553085327
theta: 1.45615696907
speed: 13.926815033
id: 0
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:15




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.40935325623
y: -95.3553085327
theta: 1.45615696907
speed: 13.92681mmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: -3.31953334808
y: 65.7900085449
theta: 4.81025791168
speed: 13.5768280029
id: 1
t: 15
1546688107078
xxx after update is x: -2.94407653809
y: 64.6130828857
theta: 4.77870559692
speed: 13.6289491653
id: 1
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.31032756561161884, 0]
222 self.state_dicts[msg.id][msg.t] is (2.8838491439819336, -95.33223724365234, 1.3836382627487183, 14.055800437927246)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.94407653809
y: 64.6130828857
theta: 4.77870559692
speed: 13.6289491653
id: 1
t: 16
1546688107142
xxx after update is x: -3.22905778885
y: 64.0862121582
theta: 4.59904670715
speed: 13.7293796539
id: 1
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:17


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.755555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: -3.22905778885
y: 64.0862121582
theta: 4.59904670715
speed: 13.7293796539
id: 1
t: 17
1546688107206
xxx after update is x: -3.13585591316
y: 64.5437316895
theta: 4.67751979828
speed: 13.8179693222
id: 1
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: -3.13585591316
y: 64.5437316895
theta: 4.67751979828
speed: 13.8179693222
id: 1
t: 18
1546688107276
xxx after update is x: -3.09910416603
y: 63.3369064331
theta: 4.70730876923
speed: 14.035867691
id: 1
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: -3.09910416603
y: 63.3369064331
theta: 4.70730876923
speed: 14.035867691
id: 1
t: 19
1546688107336
xxx after update is x: -3.05281496048
y: 62.4835662842
theta: 4.81564188004
speed: 13.8590431213
id: 1
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.2591781399177267, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3471131324768066, -92.10012817382812, 1.5029951333999634, 13.921930313110352)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:21


xxx before 5033
id: 0
t: 15leave the update function 
in spin function, finish the n times spin:16



1546688107076
xxx after update is x: 2.88384914398
y: -95.3322372437
theta: 1.38363826275
speed: 14.0558004379
id: 0
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.711111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: 2.88384914398
y: -95.3322372437
theta: 1.38363826275
speed: 14.0558004379
id: 0
t: 16
1546688107140
xxx after update is x: 3.21729922295
y: -94.6772384644
theta: 1.5751760006
speed: 13.5830974579
id: 0
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.21729922295
y: -94.6772384644
theta: 1.5751760006
speed: 13.5830974579
id: 0
t: 17
1546688107214
xxx after update is x: 3.20843029022
y: -94.2973403931
theta: 1.5706653595
speed: 13.8234987259
id: 0
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:18




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: 3.20843029022
y: -94.2973403931
theta: 1.5706653595
speed: 13.8234987259
id: 0
t: 18
1546688107275
xxx after update is x: 3.30532193184
y: -93.1788787842
theta: 1.49758470058
speed: 13.6822757721
id: 0
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.34648271737567093, 0.351750108821589]
222 self.state_dicts[msg.id][msg.t] is (-3.099104166030884, 63.33690643310547, 4.707308769226074, 14.035867691040039)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: 3.30532193184
y: -93.1788787842
theta: 1.49758470058
speed: 13.6822757721
id: 0
t: 19
1546688107346
xxx after update is x: 3.34711313248
y: -92.1001281738
theta: 1.5029951334
speed: 13.9219303131
id: 0
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: 3.34711313248
y: -92.1001281738
theta: 1.5029951334
speed: 13.9219303131
id: 0
t: 20
1546688107408
xxx after update is x: 2.32326483727
y: -91.5985488892
theta: 1.47793781757
speed: 13.7006816864
id: 0
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 2.32326483727
y: -91.5985488892
theta: 1.47793781757
speed: 13.7006816864
id: 0
t: 21
1546688107475
xxx after update is x: 2.89488244057
y: -91.5912628174
theta: 1.52624440193
speed: 14.1923084259
id: 0
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:22




going to the update function
sim.py in the sim.py update function 
targetspeed < update is x: -3.05281496048
y: 62.4835662842
theta: 4.81564188004
speed: 13.8590431213
id: 1
t: 20
1546688107405
xxx after update is x: -2.8702955246
y: 61.9834823608
theta: 4.80950784683
speed: 13.804807663
id: 1
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.8702955246
y: 61.9834823608
theta: 4.80950784683
speed: 13.804807663
id: 1
t: 21
1546688107480
xxx after update is x: -2.93820023537
y: 60.7850952148
theta: 4.63656234741
speed: 14.0851840973
id: 1
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:22




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.93820023537
y: 60.7850952148
theta: 4.63656234741
speed: 14.0851840973
id: 1
t: 22
1546688107548
xxx after update is x: -3.47308969498
y: 61.1604881287
theta: 4.549284935
speed: 13.9247484207
id: 1
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:23


aaaaaa
aaaaaabbbbb
risk is [0.2829906872459084, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2936906814575195, -91.34452819824219, 1.7274388074874878, 13.690408706665039)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.47308969498
y: 61.1604881287
theta: 4.549284935
speed: 13.9247484207
id: 1
t: 23
1546688107613
xxx after update is x: -3.70264840126
y: 60.1493911743
theta: 4.82743120193
speed: 13.8890523911
id: 1
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:24




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: -3.70264840126
y: 60.1493911743
theta: 4.82743120193
speed: 13.8890523911
id: 1
t: 24
1546688107673
xxx after update is x: -3.23684883118
y: 59.2817497253
theta: 4.61354112625
speed: 14.1597042084
id: 1
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.11111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.23684883118
y: 59.2817497253
theta: 4.61354112625
speed: 14.1597042084
id: 1
t: 25
1546688107743
xxx after update is x: -3.29738616943
y: 58.620262146
theta: 4.61271524429
speed: 13.7376775742
id: 1
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:26




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmself.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: 2.89488244057
y: -91.5912628174
theta: 1.52624440193
speed: 14.1923084259
id: 0
t: 22
1546688107538
xxx after update is x: 3.29369068146
y: -91.3445281982
theta: 1.72743880749
speed: 13.6904087067
id: 0
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: 3.29369068146
y: -91.3445281982
theta: 1.72743880749
speed: 13.6904087067
id: 0
t: 23
1546688107615
xxx after update is x: 2.98471188545
y: -89.8351593018
theta: 1.51828813553
speed: 13.8489923477
id: 0
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.06666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: 2.98471188545
y: -89.8351593018
theta: 1.51828813553
speed: 13.8489923477
id: 0
t: 24
1546688107686
xxx after update is x: 3.16820478439
y: -89.1994400024
theta: 1.69018411636
speed: 13.7417707443
id: 0
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.16820478439
y: -89.1994400024
theta: 1.69018411636
speed: 13.7417707443
id: 0
t: 25
1546688107742
xxx after update is x: 2.88986253738
y: -88.8357162476
theta: 1.74962484837
speed: 13.8474979401
id: 0
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:26


aaaaaa
risk is [0.41663361838158075, 0.35925326103356425]
222 self.state_dicts[msg.id][msg.t] is (-3.2973861694335938, 58.620262145996094, 4.612715244293213, 13.737677574157715)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 2.88986253738
y: -88.8357162476
theta: 1.74962484837
speed: 13.8474979401
id: 0
t: 26
1546688107810
xxx after update is x: 3.06418919563
y: -87.9852218628
theta: 1.59761106968
speed: 14.1361980438
id: 0
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:27




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.06418919563
y: -87.9852218628
theta: 1.59761106968
speed: 14.1361980438
id: 0
t: 27
1546688107877
xxx after update is x: 3.18998432159
y: -87.69165802
theta: 1.43740165234
speed: 14.028758049
id: 0
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:28




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.18998432159
y: -87.69165802
theta: 1.43740165234
speed: 14.028758049
id: 0
t: 28
1546688107947
xxx after update is x: 3.49230980873
y: -86.6296920776
theta: 1.5687674284
speed: 14.1189928055
id: 0
t: 29
maneuver_negotiatir.py finish the update agent mmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: -3.29738616943
y: 58.620262146
theta: 4.61271524429
speed: 13.7376775742
id: 1
t: 26
1546688107807
xxx after update is x: -3.3131070137
y: 58.39320755
theta: 4.71878004074
speed: 13.9628305435
id: 1
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3277332560574347, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0641891956329346, -87.98522186279297, 1.5976110696792603, 14.136198043823242)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: -3.3131070137
y: 58.39320755
theta: 4.71878004074
speed: 13.9628305435
id: 1
t: 27
1546688107870
xxx after update is x: -3.4772040844
y: 58.1458892822
theta: 4.73420095444
speed: 14.2184915543
id: 1
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.4772040844
y: 58.1458892822
theta: 4.73420095444
speed: 14.2184915543
id: 1
t: 28
1546688107940
xxx after update is x: -3.72612047195
y: 56.8596496582
theta: 4.88969373703
speed: 13.627114296
id: 1
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:29




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: -3.72612047195
y: 56.8596496582
theta: 4.88969373703
speed: 13.627114296
id: 1
t: 29
1546688108005
xxx after update is x: -2.78114748001
y: 56.5814208984
theta: 4.78187704086
speed: 13.5632925034
id: 1
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.23016840716661024, 0]
222 self.state_dicts[msg.id][msg.t] is (3.621018648147583, -86.80194854736328, 1.516965389251709, 13.682174682617188)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: -2.78114748001
y: 56.5814208984
theta: 4.78187704086
speed: 13.5632925034
id: 1
t: 30
1546688108071
xxx after update is x: -2.93301987648
y: 55.0370292664
theta: 4.79337453842
speed: 13.7137947083
id: 1
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: -2.93301987648
y: 55.0370292664
theta: 4.79337453842
speed: 13.7137947083
id: 1
t: 31
1546688108150
xxx after update is x: -2.96155452728
y: 55.2832794189
theta: 4.695757state from ros funtion
leave the update function 
in spin function, finish the n times spin:29




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.49230980873
y: -86.6296920776
theta: 1.5687674284
speed: 14.1189928055
id: 0
t: 29
1546688108009
xxx after update is x: 3.62101864815
y: -86.8019485474
theta: 1.51696538925
speed: 13.6821746826
id: 0
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:30




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: 3.62101864815
y: -86.8019485474
theta: 1.51696538925
speed: 13.6821746826
id: 0
t: 30
1546688108075
xxx after update is x: 3.42407822609
y: -86.2132339478
theta: 1.53375649452
speed: 13.6931505203
id: 0
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.30423862222261794, 0.32825525950924117]
222 self.state_dicts[msg.id][msg.t] is (-2.9330198764801025, 55.03702926635742, 4.793374538421631, 13.713794708251953)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.42407822609
y: -86.2132339478
theta: 1.53375649452
speed: 13.6931505203
id: 0
t: 31
1546688108142
xxx after update is x: 3.16148781776
y: -85.3933792114
theta: 1.50683367252
speed: 14.3139533997
id: 0
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:32


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.42222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.16148781776
y: -85.3933792114
theta: 1.50683367252
speed: 14.3139533997
id: 0
t: 32
1546688108206
xxx after update is x: 2.99205756187
y: -84.6447143555
theta: 1.54284870625
speed: 13.8495826721
id: 0
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:33




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: 2.99205756187
y: -84.6447143555
theta: 1.54284870625
speed: 13.8495826721
id: 0
t: 33
1546688108274
xxx after update is x: 3.54105186462
y: -83.7678756714
theta: 1.5420114994
speed: 13.9305200577
id: 0
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.54105186462
y: -83.7678756714
theta: 1.5420114994
speed: 13.9305200577
id: 0
t: 34
1546688108347
xxx after update is x: 2.84611392021
y: -83.5120391846
theta: 1.46804511547
speed: 13.8094730377
id: 0
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:35




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x:86591
speed: 14.029001236
id: 1
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.42222222222






self.maneuver_requested None
xxx before update is x: -2.96155452728
y: 55.2832794189
theta: 4.69575786591
speed: 14.029001236
id: 1
t: 32
1546688108208
xxx after update is x: -2.97404241562
y: 54.7872772217
theta: 4.85776424408
speed: 13.9349727631
id: 1
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:33


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: -2.97404241562
y: 54.7872772217
theta: 4.85776424408
speed: 13.9349727631
id: 1
t: 33
1546688108281
xxx after update is x: -3.55182480812
y: 53.9842300415
theta: 4.64656448364
speed: 14.0433807373
id: 1
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.40562213679280806, 0]
222 self.state_dicts[msg.id][msg.t] is (3.5410518646240234, -83.76787567138672, 1.5420114994049072, 13.930520057678223)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: -3.55182480812
y: 53.9842300415
theta: 4.64656448364
speed: 14.0433807373
id: 1
t: 34
1546688108349
xxx after update is x: -3.29021406174
y: 53.3376502991
theta: 4.63707256317
speed: 13.7771425247
id: 1
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: -3.29021406174
y: 53.3376502991
theta: 4.63707256317
speed: 13.7771425247
id: 1
t: 35
1546688108414
xxx after update is x: -3.35955142975
y: 52.9030570984
theta: 4.80591011047
speed: 13.9836540222
id: 1
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: -3.35955142975
y: 52.9030570984
theta: 4.80591011047
speed: 13.9836540222
id: 1
t: 36
1546688108476
xxx after update is x: -3.54644298553
y: 51.6446495056
theta: 4.51290512085
speed: 14.0960302353
id: 1
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: -3.54644298553
y: 51.6446495056
theta: 4.51290512085
speed: 14.0960302353
id: 1
t: 37
1546688108537
xxx after update is x: -2.73786234856
y: 51.4215812683
theta: 4.60549068451
speed: 13.7624521255
id: 1
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3771270030096965, 0]
222 self.state_dicts[msg.id][msg.t] is (3.468090295791626, -81.60845947265625, 1.5827196836471558, 14.007440567016602)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.73786234856
y: 51.4215812683
theta: 4.60549068451
speed: 13.7624521255
id: 1
t: 38
1546688108609
xxx after update is x: -2.8071372509
y: 50.9269866943
theta: 4.82126617432
speed: 13.898856163
id: 1
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:39




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.8071372509
y: 50.9269866943
theta: 4.82126617432
speed: 13.898856163
id: 1
t: 39
1546688108673
xxx after update is x: -2.95788812637
y: 50.7037353516
theta: 4.66790771484
speed: 13.7709846497
id: 1
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:40


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.77777777778






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.95788812637
y: 50.7037353516
theta: 4.66790771484
speed: 13.7709846497
id: 1
t: 40
1546688108742
xxx after update is x: -2.64666223526
y: 49.2866821289
theta: 4.65980386734
speed: 13.7277526855
id: 1
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:41


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: -2.64666223526
y: 49.2866821289
theta: 4.65980386734
speed: 13.7277526855
id: 1
t: 41
1546688108806
xxx after update is x: -3.08072280884
y: 48.6557617188
theta: 4.69883203506
speed: 13.8497619629
id: 1
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.32893682142446046, 0]
222 self.state_dicts[msg.id][msg.t] is (3.5129191875457764, -78.89185333251953, 1.5537195205688477, 13.865896224975586)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: -3.08072280884
y: 48.6557617188
theta: 4.69883203506
speed: 13.8497619629
id: 1
t: 42
1546688108872
xxx after update is x: -3.3170735 2.84611392021
y: -83.5120391846
theta: 1.46804511547
speed: 13.8094730377
id: 0
t: 35
1546688108408
xxx after update is x: 3.499563694
y: -82.4580459595
theta: 1.46240842342
speed: 14.2058610916
id: 0
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: 3.499563694
y: -82.4580459595
theta: 1.46240842342
speed: 14.2058610916
id: 0
t: 36
1546688108471
xxx after update is x: 3.08140444756
y: -81.6447906494
theta: 1.66436398029
speed: 13.6287813187
id: 0
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: 3.08140444756
y: -81.6447906494
theta: 1.66436398029
speed: 13.6287813187
id: 0
t: 37
1546688108544
xxx after update is x: 3.46809029579
y: -81.6084594727
theta: 1.58271968365
speed: 14.007440567
id: 0
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.331061044260189, 0.27668192709032907]
222 self.state_dicts[msg.id][msg.t] is (-2.7378623485565186, 51.42158126831055, 4.605490684509277, 13.762452125549316)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.46809029579
y: -81.6084594727
theta: 1.58271968365
speed: 14.007440567
id: 0
t: 38
1546688108610
xxx after update is x: 3.43988347054
y: -81.0589828491
theta: 1.71112167835
speed: 13.8011646271
id: 0
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:39


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.73333333333






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: 3.43988347054
y: -81.0589828491
theta: 1.71112167835
speed: 13.8011646271
id: 0
t: 39
1546688108677
xxx after update is x: 3.49522161484
y: -80.406867981
theta: 1.40659546852
speed: 13.7163314819
id: 0
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: 3.49522161484
y: -80.406867981
theta: 1.40659546852
speed: 13.7163314819
id: 0
t: 40
1546688108745
xxx after update is x: 2.75264549255
y: -79.1682510376
theta: 1.65568304062
speed: 14.0544786453
id: 0
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: 2.75264549255
y: -79.1682510376
theta: 1.65568304062
speed: 14.0544786453
id: 0
t: 41
1546688108807
xxx after update is x: 3.51291918755
y: -78.8918533325
theta: 1.55371952057
speed: 13.865896225
id: 0
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < 836
y: 48.0840873718
theta: 4.74023675919
speed: 13.584941864
id: 1
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.3170735836
y: 48.0840873718
theta: 4.74023675919
speed: 13.584941864
id: 1
t: 43
1546688108953
xxx after update is x: -3.06355381012
y: 47.995136261
theta: 4.77388143539
speed: 14.0625047684
id: 1
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:44




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: -3.06355381012
y: 47.995136261
theta: 4.77388143539
speed: 14.0625047684
id: 1
t: 44
1546688109007
xxx after update is x: -2.84495663643
y: 47.3187828064
theta: 4.59938049316
speed: 13.6234092712
id: 1
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.84495663643
y: 47.3187828064
theta: 4.59938049316
speed: 13.6234092712
id: 1
t: 45
1546688109073
xxx after update is x: -3.42161870003
y: 46.6238670349
theta: 4.87393426895
speed: 13.8379678726
id: 1
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:46


aaaaaa
aaaaaabbbbb
risk is [0.3394560196948819, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1739490032196045, -76.39624786376953, 1.5066109895706177, 13.969459533691406)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: -3.42161870003
y: 46.6238670349
theta: 4.87393426895
speed: 13.8379678726
id: 1
t: 46
1546688109138
xxx after update is x: -2.94430208206
y: 45.930393219
theta: 4.78922462463
speed: 13.8815345764
id: 1
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: -2.94430208206
y: 45.930393219
theta: 4.78922462463
speed: 13.8815345764
id: 1
t: 47
1546688109202
xxx after update is x: -3.46412301064
y: 45.1407928467
theta: 4.87186288834
speed: 13.7444229126
id: 1
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.13333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the nself.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.51291918755
y: -78.8918533325
theta: 1.55371952057
speed: 13.865896225
id: 0
t: 42
1546688108880
xxx after update is x: 3.41494417191
y: -78.6167602539
theta: 1.56104767323
speed: 14.0406951904
id: 0
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:43


aaaaaa
risk is [0.3001671561894888, 0.33294744605640064]
222 self.state_dicts[msg.id][msg.t] is (-3.3170735836029053, 48.08408737182617, 4.740236759185791, 13.584941864013672)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.41494417191
y: -78.6167602539
theta: 1.56104767323
speed: 14.0406951904
id: 0
t: 43
1546688108942
xxx after update is x: 3.070540905
y: -77.8550796509
theta: 1.57867443562
speed: 14.1095762253
id: 0
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:44




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: 3.070540905
y: -77.8550796509
theta: 1.57867443562
speed: 14.1095762253
id: 0
t: 44
1546688109005
xxx after update is x: 3.31871962547
y: -77.5749206543
theta: 1.76492011547
speed: 13.9397907257
id: 0
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.31871962547
y: -77.5749206543
theta: 1.76492011547
speed: 13.9397907257
id: 0
t: 45
1546688109081
xxx after update is x: 3.17394900322
y: -76.3962478638
theta: 1.50661098957
speed: 13.9694595337
id: 0
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:46




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: 3.17394900322
y: -76.3962478638
theta: 1.50661098957
speed: 13.9694595337
id: 0
t: 46
1546688109154
xxx after update is x: 3.27091288567
y: -75.6616210938
theta: 1.65325391293
speed: 14.2396373749
id: 0
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.08888888889






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.27091288567
y: -75.6616210938
theta: 1.65325391293
speed: 14.2396373749
id: 0
t: 47
1546688109214
xxx after update is x: 3.48586320877
y: -75.8096237183
theta: 1.60473132133
speed: 13.8879203796
id: 0
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:48


aaaaaa
risk is [0.2734623493014931, 0.3749542745155034]
222 self.state_dicts[msg.id][msg.t] is (-3.464123010635376, 45.14079284667969, 4.871862888336182, 13.744422912597656)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiii times spin:49

xxx before update is x: -3.46412301064
y: 45.1407928467
theta: 4.87186288834
speed: 13.7444229126
id: 1
t: 48
1546688109276
xxx after update is x: -2.40995335579
y: 44.6511917114
theta: 4.66027975082
speed: 14.0617399216
id: 1
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.40995335579
y: 44.6511917114
theta: 4.66027975082
speed: 14.0617399216
id: 1
t: 49
1546688109343
xxx after update is x: -3.16227889061
y: 43.876411438
theta: 4.81253910065
speed: 13.8705463409
id: 1
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:50


aaaaaa
aaaaaabbbbb
risk is [0.3354519910593684, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1673190593719482, -74.30270385742188, 1.6404409408569336, 13.748224258422852)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: -3.16227889061
y: 43.876411438
theta: 4.81253910065
speed: 13.8705463409
id: 1
t: 50
1546688109416
xxx after update is x: -3.10138726234
y: 43.1936378479
theta: 4.78694868088
speed: 13.8295288086
id: 1
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: -3.10138726234
y: 43.1936378479
theta: 4.78694868088
speed: 13.8295288086
id: 1
t: 51
1546688109471
xxx after update is x: -3.17567133904
y: 43.1017684937
theta: 4.54972553253
speed: 14.171204567
id: 1
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:53


xxx before update is x: -3.17567133904
y: 43.1017684937
theta: 4.54972553253
speed: 14.171204567
id: 1
t: 52
1546688109544
xxx after update is x: -3.21281790733
y: 42.1061820984
theta: 4.84872674942
speed: 14.0184745789
id: 1
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: -3.21281790733
y: 42.1061820984
theta: 4.84872674942
speed: 14.0184745789
id: 1
t: 53
1546688109604
xxx after update is x: -3.33430218697
y: 41.543598175
theta: 4.49408721924
speed: 13.8197393417
id: 1
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:55


xxx beforeiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.48586320877
y: -75.8096237183
theta: 1.60473132133
speed: 13.8879203796
id: 0
t: 48
1546688109281
xxx after update is x: 3.37360167503
y: -74.9271697998
theta: 1.52418243885
speed: 13.8853387833
id: 0
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:49




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: 3.37360167503
y: -74.9271697998
theta: 1.52418243885
speed: 13.8853387833
id: 0
t: 49
1546688109338
xxx after update is x: 3.16731905937
y: -74.3027038574
theta: 1.64044094086
speed: 13.7482242584
id: 0
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: 3.16731905937
y: -74.3027038574
theta: 1.64044094086
speed: 13.7482242584
id: 0
t: 50
1546688109413
xxx after update is x: 3.17555093765
y: -73.4073181152
theta: 1.5537596941
speed: 13.6947031021
id: 0
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: 3.17555093765
y: -73.4073181152
theta: 1.5537596941
speed: 13.6947031021
id: 0
t: 51
1546688109486
xxx after update is x: 3.45322179794
y: -73.1435470581
theta: 1.63079583645
speed: 13.771194458
id: 0
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.45322179794
y: -73.1435470581
theta: 1.63079583645
speed: 13.771194458
id: 0
t: 52
1546688109546
xxx after update is x: 3.41617226601
y: -72.7586669922
theta: 1.60128772259
speed: 13.8715801239
id: 0
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:53




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: 3.41617226601
y: -72.7586669922
theta: 1.60128772259
speed: 13.8715801239
id: 0
t: 53
1546688109613
xxx after update is x: 3.33496069908
y: -71.1486358643
theta: 1.7500859499
speed: 13.5524768829
id: 0
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3255179867954003, 0.3620893142643012]
222 self.state_dicts[msg.id][msg.t] is (-3.3343021869659424, 41.54359817504883, 4.494087219238281, 13.81973934173584)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: 3.33496069908
y: -71.1486358643
theta: 1.7500859499
speed: 13.5524768829
id: 0
t: 54
1546688109682
xxx after update is x: 3.27154016495
y: -70.4515762329
theta: 1.61505281925
speed: 13.7695789337
id: 0
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.44444444444






self.maneuver_requested None
maneuver_negotiatir.py in update is x: -3.33430218697
y: 41.543598175
theta: 4.49408721924
speed: 13.8197393417
id: 1
t: 54
1546688109678
xxx after update is x: -2.97904443741
y: 41.2825126648
theta: 4.79732704163
speed: 14.2702846527
id: 1
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3700791825671607, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2715401649475098, -70.45157623291016, 1.6150528192520142, 13.76957893371582)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.97904443741
y: 41.2825126648
theta: 4.79732704163
speed: 14.2702846527
id: 1
t: 55
1546688109743
xxx after update is x: -3.34559035301
y: 39.8800239563
theta: 4.81645107269
speed: 13.8744726181
id: 1
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:56


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.48888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.34559035301
y: 39.8800239563
theta: 4.81645107269
speed: 13.8744726181
id: 1
t: 56
1546688109804
xxx after update is x: -3.28305363655
y: 39.5828132629
theta: 4.72058534622
speed: 13.5816764832
id: 1
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:57


Received -->>: 
current clock is 2.53333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 2.53333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '2.53333333333', 'Sender': '0', 'Time': '2.53333333333', 'IntendedCourse': 'left', 'Position': ['3.5400891304016113', ' -69.51610565185547', ' 1.6896847486495972'], 'TagID': '0', 'Type': 'GET', 'Velocity': '13'}
car 1 received GET,0,2.53333333333,(3.5400891304016113, -69.51610565185547, 1.6896847486495972),13,1,2.53333333333,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.112592592592
sender travel direction is:  north
sender earliest entering time is:  5.4158262736
sender last entering time is:  5.4158262736
sender last leaving time is:  10.4348563115
my entering time is:  2.42611070308
my leaving time is:  5.81962881357
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 2.53333333333
self.communication_details == 0
sending DENY,1,2.53333333333,(-3.345590353012085, 39.88002395629883, 4.816451072692871),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.28305363655
y: 39.5828132629
theta: 4.7205853462 the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.27154016495
y: -70.4515762329
theta: 1.61505281925
speed: 13.7695789337
id: 0
t: 55
1546688109746
xxx after update is x: 2.91051435471
y: -70.4637069702
theta: 1.56991899014
speed: 13.7367696762
id: 0
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:56




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:
1546688109805
initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$


hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: 2.91051435471
y: -70.4637069702
theta: 1.56991899014
speed: 13.7367696762
id: 0
t: 56
1546688109819
xxx after update is x: 3.5400891304
y: -69.5161056519
theta: 1.68968474865
speed: 13.7244787216
id: 0
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 1
current clock is 2.53333333333
!!!!after check statue the self.tag is [2.533333333333333, 0, 'left']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 2.53333333333

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [2.488888888888889, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,2.53333333333,(3.5400891304016113, -69.51610565185547, 1.6896847486495972),13,1,2.53333333333,0,left
!!!!change state to get
GET,0,2.53333333333,(3.5400891304016113, -69.51610565185547, 1.6896847486495972),13,1,2.53333333333,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 2.53333333333
self.communication_details == 0
sending GET,0,2.53333333333,(3.5400891304016113, -69.51610565185547, 1.6896847486495972),13,1,2.53333333333,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
Received -->>: 
current clock is 2.53333333333




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 2.53333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '2.53333333333', 'Position': ['(-3.345590353012085', ' 39.88002395629883', ' 4.816451072692871)'], 'Type': 'DENY'}
car 0 received DENY,1,2.53333333333,(-3.345590353012085, 39.88002395629883, 4.816451072692871),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [2.488888888888889, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [2.488888888888889, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




finish try maneuver


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: 3.5400891304
y: -69.5161056519
theta: 1.68968474865
speed: 13.7244787216
id: 0
t: 57
1546688109888
xxx after update is x: 3.50244092941
y: -68.8318557739
theta: 1.46593105793
speed: 14.0115480423
id: 0
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: 3.50244092941
y: -68.8318557739
theta: 1.46593105793
speed: 14.0115480423
id: 0
t: 58
1546688109939
xxx after update is x: 2.81163072586
y: -68.8297119141
theta: 1.48938238621
speed: 13.7476606369
id: 0
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: 2.81163072586
y: -68.8297119141
theta: 1.48938238621
speed: 13.7476606369
id: 0
t: 59
1546688110010
xxx after update is x: 3.93122553825
y: -67.8987350464
theta: 1.513266325
speed: 13.6094017029
id: 0
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: 3.93122553825
y: -67.8987350464
theta: 1.513266325
speed: 13.6094017029
id: 0
t: 60
1546688110073
xxx after update is x: 2.60975933075
y: -66.8502426147
theta: 1.61269783974
speed: 13.5673818588
id: 0
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.363244809010688, 0.3397122444716651]
222 self.state_dicts[msg.id][msg.t] is (-3.2965826988220215, 37.50221252441406, 4.8113250732421875, 13.919973373413086)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: 2.60975933075
y: -66.8502426147
theta: 1.61269783974
speed: 13.5673818588
id: 0
t: 61
1546688110146
xxx after update is x: 3.31567454338
y: -66.2959594727
theta: 1.59274256229
speed: 13.9429636002
id: 0
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: 3.31567454338
y: -66.2959594727
theta: 1.59274256229
speed: 13.9429636002
id: 0
t: 62
1546688110214
xxx after update is x: 2.97145199776
y: -65.9908676147
theta: 1.79739618301
speed: 13.4339637756
id: 0
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.8






self.maneuver_requested left
maneuver_negotiatir.py in the last function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [2.7555555555555555, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 2.8
(RATE*SLOWDOWN) is 22.5
MR[0] is 2.75555555556
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,2.8,(2.971451997756958, -65.9908676147461, 2
speed: 13.5816764832
id: 1
t: 57
1546688109873
xxx after update is x: -3.46546649933
y: 38.7205734253
theta: 4.4774723053
speed: 13.6951618195
id: 1
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:58




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: -3.46546649933
y: 38.7205734253
theta: 4.4774723053
speed: 13.6951618195
id: 1
t: 58
1546688109937
xxx after update is x: -2.93806791306
y: 38.5634841919
theta: 4.78810882568
speed: 13.8339338303
id: 1
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: -2.93806791306
y: 38.5634841919
theta: 4.78810882568
speed: 13.8339338303
id: 1
t: 59
1546688110008
xxx after update is x: -3.50454473495
y: 37.1728286743
theta: 4.72386980057
speed: 13.6623334885
id: 1
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.35746832227442293, 0]
222 self.state_dicts[msg.id][msg.t] is (3.931225538253784, -67.89873504638672, 1.5132663249969482, 13.60940170288086)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: -3.50454473495
y: 37.1728286743
theta: 4.72386980057
speed: 13.6623334885
id: 1
t: 60
1546688110078
xxx after update is x: -3.29658269882
y: 37.5022125244
theta: 4.81132507324
speed: 13.9199733734
id: 1
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: -3.29658269882
y: 37.5022125244
theta: 4.81132507324
speed: 13.9199733734
id: 1
t: 61
1546688110139
xxx after update is x: -3.15264749527
y: 36.9037742615
theta: 4.60081291199
speed: 13.7917222977
id: 1
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: -3.15264749527
y: 36.9037742615
theta: 4.60081291199
speed: 13.7917222977
id: 1
t: 62
1546688110208
xxx after update is x: -2.98638272285
y: 36.0057754517
theta: 4.72956180573
speed: 14.0151109695
id: 1
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 2.8




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 2.8
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '2.8', 'Position': ['(2.971451997756958', ' -65.9908676147461', ' 1.797396183013916)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,2.8,(2.971451997756958, -65.9908676147461, 1.797396183013916),13,1,2.53333333333,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:64


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.8






self.maneuver_requested None
xxx before update is x: -2.98638272285
y: 36.0057754517
theta: 4.72956180573
speed: 14.0151109695
id: 1
t: 63
1546688110273
xxx after update is x: -3.41990232468
y: 35.605091095
theta: 4.69100856781
speed: 13.9055395126
id: 1
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.42315090603846617, 0]
222 self.state_dicts[msg.id][msg.t] is (3.58742618560791, -65.84657287597656, 1.4435113668441772, 13.583568572998047)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.41990232468
y: 35.605091095
theta: 4.69100856781
speed: 13.9055395126
id: 1
t: 64
1546688110337
xxx after update is x: -2.86193871498
y: 35.106678009
theta: 4.71733808517
speed: 13.9265680313
id: 1
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:65




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.86193871498
y: 35.106678009
theta: 4.71733808517
speed: 13.9265680313
id: 1
t: 65
1546688110408
xxx after update is x: -3.09448122978
y: 33.9315567017
theta: 4.69049453735
speed: 13.7040119171
id: 1
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:66




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: -3.09448122978
y: 33.9315567017
theta: 4.69049453735
speed: 13.7040119171
id: 1
t: 66
1546688110469
xxx after update is x: -2.78436636925
y: 33.6772842407
theta: 4.79397964478
speed: 13.7459621429
id: 1
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: -2.78436636925
y: 33.6772842407
theta: 4.79397964478
speed: 13.7459621429
id: 1
t: 67
1546688110537
xxx after update is x: -3.7252664566
y: 32.7406654358
theta: 4.84045314789
speed: 14.2039966583
id: 1
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.34693405923421655, 0]
222 self.state_dicts[msg.id][msg.t] is (3.696830034251.797396183013916),13,1,2.53333333333,0
maneuver_negotiatir.py start the update_agent_message
current clock is 2.8
self.communication_details == 0
sending RELEASE,0,2.8,(2.971451997756958, -65.9908676147461, 1.797396183013916),13,1,2.53333333333,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: 2.97145199776
y: -65.9908676147
theta: 1.79739618301
speed: 13.4339637756
id: 0
t: 63
1546688110276
xxx after update is x: 3.58742618561
y: -65.846572876
theta: 1.44351136684
speed: 13.583568573
id: 0
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: 3.58742618561
y: -65.846572876
theta: 1.44351136684
speed: 13.583568573
id: 0
t: 64
1546688110339
xxx after update is x: 3.3403365612
y: -64.0954208374
theta: 1.52549409866
speed: 14.2237548828
id: 0
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.3403365612
y: -64.0954208374
theta: 1.52549409866
speed: 14.2237548828
id: 0
t: 65
1546688110411
xxx after update is x: 3.38565540314
y: -64.1566467285
theta: 1.50779485703
speed: 13.9650058746
id: 0
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:66


aaaaaa
risk is [0.2904136091225122, 0.345401268525007]
222 self.state_dicts[msg.id][msg.t] is (-3.0944812297821045, 33.931556701660156, 4.690494537353516, 13.704011917114258)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: 3.38565540314
y: -64.1566467285
theta: 1.50779485703
speed: 13.9650058746
id: 0
t: 66
1546688110471
xxx after update is x: 2.50542831421
y: -63.4156265259
theta: 1.68222522736
speed: 14.0568571091
id: 0
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: 2.50542831421
y: -63.4156265259
theta: 1.68222522736
speed: 14.0568571091
id: 0
t: 67
1546688110539
xxx after update is x: 3.69683003426
y: -62.846282959
theta: 1.70448589325
speed: 13.7775192261
id: 0
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: 3.69683003426
y: -62.846282959
theta: 1.70448589325
speed: 13.7775192261
id: 0
t: 68
1546688110604
xxx after update is x: 3.67143821716
y: -62.1274986267
theta: 1.37064301968
speed: 13.6618337631
id: 0
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: 3.67143821716
y: -62.1274986267
theta: 1.37064301968
speed: 13.6618337631
id: 0
t: 69
1546688110680
xxx after update is x: 3.47303414345
y: -61.5202713013
theta: 1.62947893143
speed: 13.6309747696
id: 0
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.29577716869143433, 0.43600010440354475]
222 self.state_dicts[msg.id][msg.t] is (-3.147063970565796, 32.48598861694336, 4.745065212249756, 13.965912818908691)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.11111111111

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.111111111111111, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.11111111111,(3.473034143447876, -61.52027130126953, 1.629478931427002),13,1,2.53333333333,0,left
!!!!change state to get
GET,0,3.11111111111,(3.473034143447876, -61.52027130126953, 1.629478931427002),13,1,2.53333333333,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.11111111111
self.communication_details == 0
sending GET,0,3.11111111111,(3.473034143447876, -61.52027130126953, 1.629478931427002),13,1,2.53333333333,0,left to car 1 from car 0
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.11111111111






self.maneuver_requested left
maneuver_negotiatir.py in the last function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0
maneuver_negotiatir.py finish the update_agent_messagetargetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp

xxx before update is x: 3.47303414345
y: -61.5202713013
theta: 1.62947893143
speed: 13.6309747696
id: 0
t: 70
1546688110769
xxx after update is x: 3.94330787659
y: -61.497013092
theta: 1.57315146923
speed: 13.7792768478
id: 0
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:71


Received -->>: 
current clock is 3.15555555556




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.15555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GRANT, meaasge dict is {'TagTime': '14', 'Sender': '1', 'TagID': '1', 'Time': '3.15555555556', 'Position': ['(-2.9863827228546143', ' 36.005775451660156', ' 4.729561805725098)'], 'Type': 'GRANT'}
car 0 received GRANT,1,3.15555555556,(-2.9863827228546143, 36.005775451660156, 4.729561805725098),14,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.111111111111111, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.111111111111111, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver59814, -62.846282958984375, 1.7044858932495117, 13.777519226074219)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.7252664566
y: 32.7406654358
theta: 4.84045314789
speed: 14.2039966583
id: 1
t: 68
1546688110611
xxx after update is x: -3.03133201599
y: 32.5840568542
theta: 4.71770048141
speed: 13.9422035217
id: 1
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:69




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.03133201599
y: 32.5840568542
theta: 4.71770048141
speed: 13.9422035217
id: 1
t: 69
1546688110679
xxx after update is x: -3.14706397057
y: 32.4859886169
theta: 4.74506521225
speed: 13.9659128189
id: 1
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:70




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: -3.14706397057
y: 32.4859886169
theta: 4.74506521225
speed: 13.9659128189
id: 1
t: 70
1546688110737
xxx after update is x: -3.47896361351
y: 31.1862792969
theta: 4.85868120193
speed: 13.7067012787
id: 1
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.15555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.15555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '2.53333333333', 'Sender': '0', 'Time': '3.11111111111', 'IntendedCourse': 'left', 'Position': ['3.473034143447876', ' -61.52027130126953', ' 1.629478931427002'], 'TagID': '0', 'Type': 'GET', 'Velocity': '13'}
car 1 received GET,0,3.11111111111,(3.473034143447876, -61.52027130126953, 1.629478931427002),13,1,2.53333333333,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.138271604938
sender travel direction is:  north
sender earliest entering time is:  4.8658052127
sender last entering time is:  4.8658052127
sender last leaving time is:  9.30913517741
my entering time is:  1.84723926987
my leaving time is:  4.6362069348
i have left the intersection:  False
not conflicted because sender enters after i leave
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, not conlicted
maneuver_negotiatir.py message_processing,!!dd342 change status to GRANT
self.grantID is 0
GRANT,1,3.15555555556,(-2.9863827228546143, 36.005775451660156, 4.729561805725098),14,1,0,0
added car with id 0 to grantlist. current grantlist:  {0: [7.844444444444445, 'left']}
maneuver_negotiatir.py start the update_agent_message
current clock is 3.15555555556
self.communication_details == 0
sending GRANT,1,3.15555555556,(-2.9863827228546143, 36.005775451660156, 4.729561805725098),14,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
current clock is 3.15555555556
maneuver_negotiatir.py in the try maneuver function update -. strat



maneuver_negotiatir.py in the message processing function, it's a long code, finish1





current clock is 3.15555555556






self.maneuver_requested None
aaaaaa
aaaaaabbbbb
risk is [0.3163679601589209, 0]
222 self.state_dicts[msg.id][msg.t] is (3.943307876586914, -61.497013092041016, 1.5731514692306519, 13.779276847839355)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: -3.47896361351
y: 31.1862792969
theta: 4.85868120193
speed: 13.7067012787
id: 1
t: 71
1546688110803
xxx after update is x: -3.16650414467
y: 30.0614643097
theta: 4.56543493271
speed: 13.8030052185
id: 1
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: -3.16650414467
y: 30.0614643097
theta: 4.56543493271
speed: 13.8030052185
id: 1
t: 72
1546688110877
xxx after update is x: -3.60038161278
y: 29.4400310516
theta: 4.52965688705
speed: 13.5855102539
id: 1
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: -3.60038161278
y: 29.4400310516
theta: 4.52965688705
speed: 13.5855102539
id: 1
t: 73
1546688110936
xxx after update is x: -3.49312782288
y: 29.130569458
theta: 4.72658205032
speed: 14.0853633881
id: 1
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: -3.49312782288
y: 29.130569458
theta: 4.72658205032
speed: 14.0853633881
id: 1
t: 74
1546688111012
xxx after update is x: -3.02508997917
y: 28.7718410492
theta: 4.76797771454
speed: 13.4977903366
id: 1
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3155798833708429, 0.9417070408602198]
222 self.state_dicts[msg.id][msg.t] is (3.358515977859497, -58.21712112426758, 1.5573562383651733, 13.890021324157715)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: -3.02508997917
y: 28.7718410492
theta: 4.76797771454
speed: 13.4977903366
id: 1
t: 75
1546688111071
xxx after update is x: -3.05171442032
y: 28.1492652893
theta: 4.85491514206
speed: 13.7898292542
id: 1
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxx_negotiatir.py in the message processing function, it's a long code, finish0




finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.94330787659
y: -61.497013092
theta: 1.57315146923
speed: 13.7792768478
id: 0
t: 71
1546688110817
xxx after update is x: 3.4080862999
y: -60.6771316528
theta: 1.46079683304
speed: 13.9780054092
id: 0
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:72




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: 3.4080862999
y: -60.6771316528
theta: 1.46079683304
speed: 13.9780054092
id: 0
t: 72
1546688110882
xxx after update is x: 2.73342299461
y: -59.9564056396
theta: 1.60529875755
speed: 14.1638317108
id: 0
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: 2.73342299461
y: -59.9564056396
theta: 1.60529875755
speed: 14.1638317108
id: 0
t: 73
1546688110951
xxx after update is x: 3.12666463852
y: -59.5443611145
theta: 1.69142770767
speed: 14.1873512268
id: 0
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: 3.12666463852
y: -59.5443611145
theta: 1.69142770767
speed: 14.1873512268
id: 0
t: 74
1546688111017
xxx after update is x: 3.35851597786
y: -58.2171211243
theta: 1.55735623837
speed: 13.8900213242
id: 0
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: 3.35851597786
y: -58.2171211243
theta: 1.55735623837
speed: 13.8900213242
id: 0
t: 75
1546688111079
xxx after update is x: 2.77901959419
y: -57.5835723877
theta: 1.68237614632
speed: 13.6689720154
id: 0
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: 2.77901959419
y: -57.5835723877
theta: 1.68237614632
speed: 13.6689720154
id: 0
t: 76
1546688111140
xxx after update is x: 2.9240834713
y: -57.7851829529
theta: 1.65762543678
speed: 13.7240247726
id: 0
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.31775562682810654, 0.354241898946247]
222 self.state_dicts[msg.id][msg.t] is (-3.2806336879730225, 27.275630950927734, 4.7291436195373535, 13.799539566040039)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update fxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.05171442032
y: 28.1492652893
theta: 4.85491514206
speed: 13.7898292542
id: 1
t: 76
1546688111140
xxx after update is x: -3.28063368797
y: 27.2756309509
theta: 4.72914361954
speed: 13.799539566
id: 1
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:77




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:78


xxx before update is x: -3.28063368797
y: 27.2756309509
theta: 4.72914361954
speed: 13.799539566
id: 1
t: 77
1546688111210
xxx after update is x: -2.75919055939
y: 26.8502578735
theta: 4.73703098297
speed: 13.8663959503
id: 1
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: -2.75919055939
y: 26.8502578735
theta: 4.73703098297
speed: 13.8663959503
id: 1
t: 78
1546688111282
xxx after update is x: -3.07365012169
y: 26.3041286469
theta: 4.63318634033
speed: 13.6119508743
id: 1
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.51111111111






self.maneuver_requested None
risk is [0.33255311066695525, 0.9840482168276065]
222 self.state_dicts[msg.id][msg.t] is (3.4058008193969727, -56.71854782104492, 1.6559994220733643, 13.643108367919922)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:80


xxx before update is x: -3.07365012169
y: 26.3041286469
theta: 4.63318634033
speed: 13.6119508743
id: 1
t: 79
1546688111338
xxx after update is x: -3.55143976212
y: 25.326210022
theta: 4.75698137283
speed: 13.8906698227
id: 1
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.55143976212
y: 25.326210022
theta: 4.75698137283
speed: 13.8906698227
id: 1
t: 80
1546688111406
xxx after update is x: -3.29168558121
y: 24.9068126678
theta: 4.75206327438
speed: 14.3133955002
id: 1
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:81




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: -3.29168558121
y: 24.9068126678
theta: 4.75206327438
speed: 14.3133955002
id: 1
t: 81
1546688111473
xxx after update is x: -3.02459001541
y: 24.4876594543
theta: 4.94158935547
speed: 13.8677053452
id:unction xxx before update is x: 2.9240834713
y: -57.7851829529
theta: 1.65762543678
speed: 13.7240247726
id: 0
t: 77
1546688111205
xxx after update is x: 3.38970160484
y: -57.4811935425
theta: 1.71157240868
speed: 13.9014005661
id: 0
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:78




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: 3.38970160484
y: -57.4811935425
theta: 1.71157240868
speed: 13.9014005661
id: 0
t: 78
1546688111271
xxx after update is x: 3.4058008194
y: -56.718547821
theta: 1.65599942207
speed: 13.6431083679
id: 0
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.51111111111






self.maneuver_requested left
maneuver_negotiatir.py in the last function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.422222222222222, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 3.51111111111
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.42222222222
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
deny not in message
maneuver_negotiatir.py in the domaneuver function - start
added car with id 0 to grantlist. current grantlist:  {0: [8.11111111111111, 'left']}
Doing maneuver
maneuver_negotiatir.py finish the do maneuver function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.4058008194
y: -56.718547821
theta: 1.65599942207
speed: 13.6431083679
id: 0
t: 79
1546688111343
xxx after update is x: 3.28506112099
y: -55.3974304199
theta: 1.75526809692
speed: 14.0586986542
id: 0
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:80




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: 3.28506112099
y: -55.3974304199
theta: 1.75526809692
speed: 14.0586986542
id: 0
t: 80
1546688111407
xxx after update is x: 3.11252975464
y: -55.091468811
theta: 1.48905777931
speed: 13.8393192291
id: 0
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: 3.11252975464
y: -55.091468811
theta: 1.48905777931
speed: 13.8393192291
id: 0
t: 81
1546688111473
xxx after update is x: 3.16461086273
y: -54.4390296936
theta: 1.68475210667
speed: 13.4403610229
id: 0
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.16461086273
y: -54.4390296936
theta: 1.68475210667
speed: 13.4403610229
id: 0
t: 82
1546688111557
xxx after update is x: 3.37844991684
y: -53.7691879272
theta: 1.51658332348
speed: 13.8237276077
id: 0
t: 83
maneuver_negotiatir.py finish the update agent state from ro 1
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:83


xxx before update is x: -3.02459001541
y: 24.4876594543
theta: 4.94158935547
speed: 13.8677053452
id: 1
t: 82
1546688111546
xxx after update is x: -3.06793880463
y: 23.2577610016
theta: 4.67344474792
speed: 13.8394927979
id: 1
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
aaaaaaxxxxxx
risk is [0.36919141476004214, 0.9398552018718048]
222 self.state_dicts[msg.id][msg.t] is (3.3784499168395996, -53.769187927246094, 1.5165833234786987, 13.82372760772705)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: -3.06793880463
y: 23.2577610016
theta: 4.67344474792
speed: 13.8394927979
id: 1
t: 83
1546688111602
xxx after update is x: -3.20309329033
y: 22.692615509
theta: 4.81804466248
speed: 13.688867569
id: 1
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: -3.20309329033
y: 22.692615509
theta: 4.81804466248
speed: 13.688867569
id: 1
t: 84
1546688111679
xxx after update is x: -3.04199028015
y: 22.6311035156
theta: 4.66243457794
speed: 13.915348053
id: 1
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: -3.04199028015
y: 22.6311035156
theta: 4.66243457794
speed: 13.915348053
id: 1
t: 85
1546688111737
xxx after update is x: -3.765812397
y: 21.6177864075
theta: 4.73034334183
speed: 13.9795923233
id: 1
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: -3.765812397
y: 21.6177864075
theta: 4.73034334183
speed: 13.9795923233
id: 1
t: 86
1546688111807
xxx after update is x: -3.12206959724
y: 20.951625824
theta: 4.75287437439
speed: 14.2733278275
id: 1
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.86666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaazzzzz
aaaaaaxxxxxx
risk is [0.3371062150437782, 0.023370086853605018]
222 self.state_dicts[msg.id][msg.t] is (3.4060750007629395, -50.955223083496094, 1.5686742067337036, 13.836156845092773)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
s funtion
leave the update function 
in spin function, finish the n times spin:83


aaaaaa
risk is [0.31234020990209366, 0.4628670761298539]
222 self.state_dicts[msg.id][msg.t] is (-3.067938804626465, 23.257761001586914, 4.673444747924805, 13.839492797851562)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: 3.37844991684
y: -53.7691879272
theta: 1.51658332348
speed: 13.8237276077
id: 0
t: 83
1546688111613
xxx after update is x: 3.49719262123
y: -52.5165519714
theta: 1.47172546387
speed: 14.0391902924
id: 0
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.49719262123
y: -52.5165519714
theta: 1.47172546387
speed: 14.0391902924
id: 0
t: 84
1546688111681
xxx after update is x: 3.0767583847
y: -52.2081718445
theta: 1.63224947453
speed: 13.977807045
id: 0
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:85




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.0767583847
y: -52.2081718445
theta: 1.63224947453
speed: 13.977807045
id: 0
t: 85
1546688111745
xxx after update is x: 2.84915208817
y: -52.2417831421
theta: 1.62556540966
speed: 14.0905065536
id: 0
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:86




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: 2.84915208817
y: -52.2417831421
theta: 1.62556540966
speed: 14.0905065536
id: 0
t: 86
1546688111812
xxx after update is x: 3.40607500076
y: -50.9552230835
theta: 1.56867420673
speed: 13.8361568451
id: 0
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.86666666667






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: 3.40607500076
y: -50.9552230835
theta: 1.56867420673
speed: 13.8361568451
id: 0
t: 87
1546688111882
xxx after update is x: 3.1961774826
y: -50.1837120056
theta: 1.53224909306
speed: 14.0743732452
id: 0
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.33929799424022217, 0.46974055378217483]
222 self.state_dicts[msg.id][msg.t] is (-2.458406925201416, 20.14408302307129, 4.627397060394287, 13.485391616821289)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: -3.12206959724
y: 20.951625824
theta: 4.75287437439
speed: 14.2733278275
id: 1
t: 87
1546688111876
xxx after update is x: -2.4584069252
y: 20.1440830231
theta: 4.62739706039
speed: 13.4853916168
id: 1
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.4584069252
y: 20.1440830231
theta: 4.62739706039
speed: 13.4853916168
id: 1
t: 88
1546688111937
xxx after update is x: -3.81245589256
y: 20.2942066193
theta: 4.76933813095
speed: 13.910068512
id: 1
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:89




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:90


xxx before update is x: -3.81245589256
y: 20.2942066193
theta: 4.76933813095
speed: 13.910068512
id: 1
t: 89
1546688112011
xxx after update is x: -3.93160748482
y: 20.1374645233
theta: 4.6854724884
speed: 14.0163545609
id: 1
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: -3.93160748482
y: 20.1374645233
theta: 4.6854724884
speed: 14.0163545609
id: 1
t: 90
1546688112069
xxx after update is x: -3.49438071251
y: 19.4860839844
theta: 4.59693431854
speed: 13.7975130081
id: 1
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
aaaaaaxxxxxx
risk is [0.3914984847143339, 6.469529105364609e-10]
222 self.state_dicts[msg.id][msg.t] is (3.330181360244751, -48.39572525024414, 1.6172877550125122, 13.827966690063477)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:92


xxx before update is x: -3.49438071251
y: 19.4860839844
theta: 4.59693431854
speed: 13.7975130081
id: 1
t: 91
1546688112143
xxx after update is x: -3.13793992996
y: 17.9283351898
theta: 4.69012498856
speed: 13.3622817993
id: 1
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.13793992996
y: 17.9283351898
theta: 4.69012498856
speed: 13.3622817993
id: 1
t: 92
1546688112214
xxx after update is x: -3.50707936287
y: 17.9702701569
theta: 4.57704591751
speed: 13.688129425
id: 1
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:93




going to the update function
sim.py in the sim.py upspin:89

xxx before update is x: 3.1961774826
y: -50.1837120056
theta: 1.53224909306
speed: 14.0743732452
id: 0
t: 88
1546688111940
xxx after update is x: 3.21712374687
y: -50.3112411499
theta: 1.50245857239
speed: 13.9104766846
id: 0
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:90


xxx before update is x: 3.21712374687
y: -50.3112411499
theta: 1.50245857239
speed: 13.9104766846
id: 0
t: 89
1546688112016
xxx after update is x: 3.17615509033
y: -49.4625205994
theta: 1.45235955715
speed: 13.7542505264
id: 0
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: 3.17615509033
y: -49.4625205994
theta: 1.45235955715
speed: 13.7542505264
id: 0
t: 90
1546688112078
xxx after update is x: 3.33018136024
y: -48.3957252502
theta: 1.61728775501
speed: 13.8279666901
id: 0
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.33018136024
y: -48.3957252502
theta: 1.61728775501
speed: 13.8279666901
id: 0
t: 91
1546688112146
xxx after update is x: 2.91077756882
y: -48.2163505554
theta: 1.57416248322
speed: 13.7075901031
id: 0
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:92




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 2.91077756882
y: -48.2163505554
theta: 1.57416248322
speed: 13.7075901031
id: 0
t: 92
1546688112208
xxx after update is x: 3.59700727463
y: -47.0524635315
theta: 1.61347365379
speed: 13.8746824265
id: 0
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:93




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: 3.59700727463
y: -47.0524635315
theta: 1.61347365379
speed: 13.8746824265
id: 0
t: 93
1546688112279
xxx after update is x: 3.76586008072
y: -47.2561607361
theta: 1.48830616474
speed: 14.3038797379
id: 0
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3053798098713076, 0.8980428166178727]
222 self.state_dicts[msg.id][msg.t] is (-3.509847402572632, 17.1626033782959, 4.664210319519043, 14.06091594696045)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.17777777778






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: 3.76586008072
y: -47.2561607361
theta: 1.4883061date function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: -3.50707936287
y: 17.9702701569
theta: 4.57704591751
speed: 13.688129425
id: 1
t: 93
1546688112272
xxx after update is x: -3.50984740257
y: 17.1626033783
theta: 4.66421031952
speed: 14.060915947
id: 1
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
aaaaaaxxxxxx
risk is [0.3387806010527845, 0.0633349165816115]
222 self.state_dicts[msg.id][msg.t] is (3.765860080718994, -47.256160736083984, 1.4883061647415161, 14.303879737854004)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.17777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: -3.50984740257
y: 17.1626033783
theta: 4.66421031952
speed: 14.060915947
id: 1
t: 94
1546688112337
xxx after update is x: -2.97979927063
y: 16.6245555878
theta: 4.56572532654
speed: 13.390455246
id: 1
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.97979927063
y: 16.6245555878
theta: 4.56572532654
speed: 13.390455246
id: 1
t: 95
1546688112410
xxx after update is x: -2.38478660583
y: 16.091085434
theta: 4.86983776093
speed: 13.7281780243
id: 1
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:96




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:97


xxx before update is x: -2.38478660583
y: 16.091085434
theta: 4.86983776093
speed: 13.7281780243
id: 1
t: 96
1546688112481
xxx after update is x: -2.82343411446
y: 14.6742277145
theta: 4.60600805283
speed: 13.931063652
id: 1
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: -2.82343411446
y: 14.6742277145
theta: 4.60600805283
speed: 13.931063652
id: 1
t: 97
1546688112542
xxx after update is x: -2.9864628315
y: 14.1044359207
theta: 4.84803962708
speed: 14.2086000443
id: 1
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
aaaaaaxxxxxx
risk is [0.2583353106540399, 2.3952645258160292e-08]
222 self.state_dicts[msg.id][msg.t] is (3.366898536682129, -44.59947204589844, 1.6906592845916748, 13.724224090576172)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmm6474
speed: 14.3038797379
id: 0
t: 94
1546688112344
xxx after update is x: 3.18438982964
y: -46.1806526184
theta: 1.48388755322
speed: 13.6072511673
id: 0
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: 3.18438982964
y: -46.1806526184
theta: 1.48388755322
speed: 13.6072511673
id: 0
t: 95
1546688112414
xxx after update is x: 3.58782410622
y: -46.1874847412
theta: 1.51249682903
speed: 13.6555681229
id: 0
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:97


xxx before update is x: 3.58782410622
y: -46.1874847412
theta: 1.51249682903
speed: 13.6555681229
id: 0
t: 96
1546688112477
xxx after update is x: 3.44569683075
y: -44.8718490601
theta: 1.45849561691
speed: 13.8750610352
id: 0
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.44569683075
y: -44.8718490601
theta: 1.45849561691
speed: 13.8750610352
id: 0
t: 97
1546688112546
xxx after update is x: 3.36689853668
y: -44.5994720459
theta: 1.69065928459
speed: 13.7242240906
id: 0
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:98


aaaaaa
risk is [0.321516779105839, 0.9956637854898345]
222 self.state_dicts[msg.id][msg.t] is (-2.9864628314971924, 14.104435920715332, 4.848039627075195, 14.208600044250488)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: 3.36689853668
y: -44.5994720459
theta: 1.69065928459
speed: 13.7242240906
id: 0
t: 98
1546688112614
xxx after update is x: 2.98885059357
y: -43.6175880432
theta: 1.49809110165
speed: 14.0193433762
id: 0
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: 2.98885059357
y: -43.6175880432
theta: 1.49809110165
speed: 14.0193433762
id: 0
t: 99
1546688112677
xxx after update is x: 3.50635766983
y: -43.489402771
theta: 1.48021137714
speed: 14.0685720444
id: 0
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.50635766983
y: -43.489402771
theta: 1.48021137714
speed: 14.0685720444
id: 0
t: 100
1546688112743
xxx after update is x: 2.97958278656
y: -43.0832557678
theta: 1.45708858967
speed: 13.8257369995
id: 0
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:101




going to the update function
sim.py in the simmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function xxx before update is x: -2.9864628315
y: 14.1044359207
theta: 4.84803962708
speed: 14.2086000443
id: 1
t: 98
1546688112608
xxx after update is x: -3.60284852982
y: 13.9828691483
theta: 4.70084381104
speed: 13.2931022644
id: 1
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:99




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.60284852982
y: 13.9828691483
theta: 4.70084381104
speed: 13.2931022644
id: 1
t: 99
1546688112673
xxx after update is x: -3.67215442657
y: 13.1603879929
theta: 4.59715747833
speed: 13.78038311
id: 1
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:100


aaaaaazzzzz
aaaaaaxxxxxx
risk is [0.43715398570409264, 5.160136922998685e-20]
222 self.state_dicts[msg.id][msg.t] is (3.5063576698303223, -43.489402770996094, 1.4802113771438599, 14.068572044372559)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: -3.67215442657
y: 13.1603879929
theta: 4.59715747833
speed: 13.78038311
id: 1
t: 100
1546688112739
xxx after update is x: -3.56424736977
y: 12.9222774506
theta: 4.84915971756
speed: 13.7350387573
id: 1
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.56424736977
y: 12.9222774506
theta: 4.84915971756
speed: 13.7350387573
id: 1
t: 101
1546688112804
xxx after update is x: -3.37998104095
y: 11.83344841
theta: 4.83886098862
speed: 13.8508415222
id: 1
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:102


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.53333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: -3.37998104095
y: 11.83344841
theta: 4.83886098862
speed: 13.8508415222
id: 1
t: 102
1546688112869
xxx after update is x: -2.76402235031
y: 11.5423927307
theta: 4.84740447998
speed: 13.8575363159
id: 1
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
aaaaaaxxxxxx
risk is [0.3380668177273014, 3.325538755075745e-18]
222 self.state_dicts[msg.id][msg.t] is (3.125910997390747, -41.08627700805664, 1.645329475402832, 14.131685256958008)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function .py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: 2.97958278656
y: -43.0832557678
theta: 1.45708858967
speed: 13.8257369995
id: 0
t: 101
1546688112809
xxx after update is x: 3.62755322456
y: -41.9687385559
theta: 1.44012701511
speed: 13.8226776123
id: 0
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.37051314215301484, 0.967995849299968]
222 self.state_dicts[msg.id][msg.t] is (-3.37998104095459, 11.83344841003418, 4.838860988616943, 13.850841522216797)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.53333333333






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: 3.62755322456
y: -41.9687385559
theta: 1.44012701511
speed: 13.8226776123
id: 0
t: 102
1546688112872
xxx after update is x: 3.12591099739
y: -41.0862770081
theta: 1.6453294754
speed: 14.131685257
id: 0
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: 3.12591099739
y: -41.0862770081
theta: 1.6453294754
speed: 14.131685257
id: 0
t: 103
1546688112942
xxx after update is x: 3.57161068916
y: -40.4908180237
theta: 1.36065149307
speed: 14.0189466476
id: 0
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:105


xxx before update is x: 3.57161068916
y: -40.4908180237
theta: 1.36065149307
speed: 14.0189466476
id: 0
t: 104
1546688113009
xxx after update is x: 3.28533315659
y: -39.9933319092
theta: 1.56012904644
speed: 14.1026382446
id: 0
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: 3.28533315659
y: -39.9933319092
theta: 1.56012904644
speed: 14.1026382446
id: 0
t: 105
1546688113082
xxx after update is x: 2.87627005577
y: -39.078754425
theta: 1.53460609913
speed: 13.5792579651
id: 0
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3023789506944831, 0.9795227006379245]
222 self.state_dicts[msg.id][msg.t] is (-2.90504789352417, 9.075737953186035, 4.824136734008789, 13.678488731384277)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 2.87627005577
y: -39.078754425
theta: 1.53460609913
speed: 13.5792579651
id: 0
t: 106
1546688113151
xxx after update is x: 3.45363306999
y: -38.9762649536
theta: 1
in spin function, finish the n times spin:104


 xxx before update is x: -2.76402235031
y: 11.5423927307
theta: 4.84740447998
speed: 13.8575363159
id: 1
t: 103
1546688112938
xxx after update is x: -3.64893579483
y: 10.7886343002
theta: 4.56735754013
speed: 13.3110609055
id: 1
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:105


xxx before update is x: -3.64893579483
y: 10.7886343002
theta: 4.56735754013
speed: 13.3110609055
id: 1
t: 104
1546688113003
xxx after update is x: -3.47056865692
y: 10.4537086487
theta: 4.69627475739
speed: 13.629609108
id: 1
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: -3.47056865692
y: 10.4537086487
theta: 4.69627475739
speed: 13.629609108
id: 1
t: 105
1546688113134
xxx after update is x: -2.90504789352
y: 9.07573795319
theta: 4.82413673401
speed: 13.6784887314
id: 1
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: -2.90504789352
y: 9.07573795319
theta: 4.82413673401
speed: 13.6784887314
id: 1
t: 106
1546688113138
xxx after update is x: -3.2968943119
y: 9.18351745605
theta: 4.64069604874
speed: 14.1318178177
id: 1
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.2968943119
y: 9.18351745605
theta: 4.64069604874
speed: 14.1318178177
id: 1
t: 107
1546688113213
xxx after update is x: -3.24211764336
y: 8.52517700195
theta: 4.81409263611
speed: 14.1258172989
id: 1
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:108


aaaaaazzzzz
aaaaaaxxxxxx
risk is [0.32713422612425763, 3.1429060241843214e-38]
222 self.state_dicts[msg.id][msg.t] is (3.326639175415039, -38.08591079711914, 1.5433731079101562, 14.276230812072754)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.24211764336
y: 8.52517700195
theta: 4.81409263611
speed: 14.1258172989
id: 1
t: 108
1546688113280
xxx after update is x: -3.43751120567
y: 8.06070327759
theta: 4.81100940704
speed: 13.2861938477
id: 1
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:109




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before upda.53805148602
speed: 14.1501264572
id: 0
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:107




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: 3.45363306999
y: -38.9762649536
theta: 1.53805148602
speed: 14.1501264572
id: 0
t: 107
1546688113210
xxx after update is x: 3.32663917542
y: -38.0859107971
theta: 1.54337310791
speed: 14.2762308121
id: 0
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: 3.32663917542
y: -38.0859107971
theta: 1.54337310791
speed: 14.2762308121
id: 0
t: 108
1546688113276
xxx after update is x: 2.99329376221
y: -37.8739547729
theta: 1.72748291492
speed: 14.0582542419
id: 0
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:110


xxx before update is x: 2.99329376221
y: -37.8739547729
theta: 1.72748291492
speed: 14.0582542419
id: 0
t: 109
1546688113343
xxx after update is x: 3.27257728577
y: -37.5632591248
theta: 1.64771282673
speed: 14.1569824219
id: 0
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.88888888889






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.27257728577
y: -37.5632591248
theta: 1.64771282673
speed: 14.1569824219
id: 0
t: 110
1546688113417
xxx after update is x: 3.39351987839
y: -36.7189025879
theta: 1.58914494514
speed: 13.9074411392
id: 0
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:111


aaaaaa
risk is [0.3775232362111611, 0.9534352785242001]
222 self.state_dicts[msg.id][msg.t] is (-3.599126100540161, 6.759375095367432, 4.906558513641357, 13.935229301452637)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:112


xxx before update is x: 3.39351987839
y: -36.7189025879
theta: 1.58914494514
speed: 13.9074411392
id: 0
t: 111
1546688113480
xxx after update is x: 3.10202240944
y: -35.5398979187
theta: 1.67498087883
speed: 13.9529361725
id: 0
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:113


xxx before update is x: 3.10202240944
y: -35.5398979187
theta: 1.67498087883
speed: 13.9529361725
id: 0
t: 112
1546688113545
xxx after update is x: 2.86147880554
y: -35.26658te is x: -3.43751120567
y: 8.06070327759
theta: 4.81100940704
speed: 13.2861938477
id: 1
t: 109maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.84444444444






self.maneuver_requested None

1546688113354
xxx after update is x: -3.35395789146
y: 7.24745082855
theta: 4.60414886475
speed: 14.1541538239
id: 1
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:110


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.35395789146
y: 7.24745082855
theta: 4.60414886475
speed: 14.1541538239
id: 1
t: 110
1546688113413
xxx after update is x: -3.59912610054
y: 6.75937509537
theta: 4.90655851364
speed: 13.9352293015
id: 1
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:111


aaaaaazzzzz
aaaaaaxxxxxx
risk is [0.2884779153759582, 2.38700050590974e-49]
222 self.state_dicts[msg.id][msg.t] is (3.393519878387451, -36.718902587890625, 1.5891449451446533, 13.907441139221191)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:112


xxx before update is x: -3.59912610054
y: 6.75937509537
theta: 4.90655851364
speed: 13.9352293015
id: 1
t: 111
1546688113476
xxx after update is x: -2.9388551712
y: 6.25650596619
theta: 4.65223550797
speed: 13.4451284409
id: 1
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.9388551712
y: 6.25650596619
theta: 4.65223550797
speed: 13.4451284409
id: 1
t: 112
1546688113541
xxx after update is x: -3.48020648956
y: 5.68810272217
theta: 4.70639801025
speed: 14.1021757126
id: 1
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:113




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: -3.48020648956
y: 5.68810272217
theta: 4.70639801025
speed: 14.1021757126
id: 1
t: 113
1546688113603
xxx after update is x: -3.61125612259
y: 4.78574180603
theta: 4.71042251587
speed: 14.1562843323
id: 1
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3164231790426564, 0.0]
222 self.state_dicts[msg.id][msg.t] is (3.2596511840820312, -34.82687759399414, 1.5489752292633057, 14.065577507019043)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.61125612259
y: 4.78574180603
theta: 4.71042251587
speed: 14.1562843323
id: 1
t: 114
15466881136712489
theta: 1.52781355381
speed: 13.4887914658
id: 0
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: 2.86147880554
y: -35.266582489
theta: 1.52781355381
speed: 13.4887914658
id: 0
t: 113
1546688113610
xxx after update is x: 3.25965118408
y: -34.826877594
theta: 1.54897522926
speed: 14.065577507
id: 0
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.25965118408
y: -34.826877594
theta: 1.54897522926
speed: 14.065577507
id: 0
t: 114
1546688113677
xxx after update is x: 2.78919911385
y: -34.2196159363
theta: 1.63382768631
speed: 13.8280477524
id: 0
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:115




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:116




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: 2.78919911385
y: -34.2196159363
theta: 1.63382768631
speed: 13.8280477524
id: 0
t: 115
1546688113808
xxx after update is x: 2.87740945816
y: -32.3832817078
theta: 1.77782988548
speed: 13.9529285431
id: 0
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 2.87740945816
y: -32.3832817078
theta: 1.77782988548
speed: 13.9529285431
id: 0
t: 116
1546688113808
xxx after update is x: 3.00339865685
y: -32.3322982788
theta: 1.57069730759
speed: 13.9569540024
id: 0
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.2744884593833284, 0.9951980273473204]
222 self.state_dicts[msg.id][msg.t] is (-3.627290964126587, 2.816356658935547, 4.59303617477417, 13.94509506225586)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: 3.00339865685
y: -32.3322982788
theta: 1.57069730759
speed: 13.9569540024
id: 0
t: 117
1546688113871
xxx after update is x: 3.80620908737
y: -31.934885025
theta: 1.61933326721
speed: 13.9793567657
id: 0
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.24444444444






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.80620908737
y: -31.934885025
theta: 1.61933326721
speed: 13.9793567657
id: 0
t: 118
1546688113952
xxx after update is x: 3.16454124451
y: -31.0900154114
theta: 1.62460291386
speed: 13.5367126465
id: 0
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the updat
xxx after update is x: -3.27528238297
y: 4.61687707901
theta: 4.77067899704
speed: 13.7493066788
id: 1
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:115




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: -3.27528238297
y: 4.61687707901
theta: 4.77067899704
speed: 13.7493066788
id: 1
t: 115
1546688113743
xxx after update is x: -3.22607183456
y: 3.2161552906
theta: 4.93475389481
speed: 13.8479919434
id: 1
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.22607183456
y: 3.2161552906
theta: 4.93475389481
speed: 13.8479919434
id: 1
t: 116
1546688113811
xxx after update is x: -3.62729096413
y: 2.81635665894
theta: 4.59303617477
speed: 13.9450950623
id: 1
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:117


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.2






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: -3.62729096413
y: 2.81635665894
theta: 4.59303617477
speed: 13.9450950623
id: 1
t: 117
1546688113875
xxx after update is x: -3.48362755775
y: 1.6005012989
theta: 4.77762126923
speed: 14.2789564133
id: 1
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.24288350801475866, 0.48639999999999795]
222 self.state_dicts[msg.id][msg.t] is (3.806209087371826, -31.934885025024414, 1.619333267211914, 13.97935676574707)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: -3.48362755775
y: 1.6005012989
theta: 4.77762126923
speed: 14.2789564133
id: 1
t: 118
1546688113938
xxx after update is x: -3.96213173866
y: 1.94818973541
theta: 4.70622968674
speed: 14.1280288696
id: 1
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:120


xxx before update is x: -3.96213173866
y: 1.94818973541
theta: 4.70622968674
speed: 14.1280288696
id: 1
t: 119
1546688114004
xxx after update is x: -3.25421261787
y: 1.03698408604
theta: 4.55263519287
speed: 13.9460878372
id: 1
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiie function 
in spin function, finish the n times spin:119




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:120


xxx before update is x: 3.16454124451
y: -31.0900154114
theta: 1.62460291386
speed: 13.5367126465
id: 0
t: 119
1546688114014
xxx after update is x: 3.42898178101
y: -31.250120163
theta: 1.71042299271
speed: 13.8223571777
id: 0
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:121


xxx before update is x: 3.42898178101
y: -31.250120163
theta: 1.71042299271
speed: 13.8223571777
id: 0
t: 120
1546688114078
xxx after update is x: 3.23152089119
y: -30.9972515106
theta: 1.65905570984
speed: 13.9644498825
id: 0
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3189151920366298, 0.9955885595807361]
222 self.state_dicts[msg.id][msg.t] is (-4.011117935180664, 0.6328714489936829, 4.984543800354004, 13.77025032043457)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.23152089119
y: -30.9972515106
theta: 1.65905570984
speed: 13.9644498825
id: 0
t: 121
1546688114148
xxx after update is x: 2.63842844963
y: -29.4692306519
theta: 1.60952723026
speed: 13.7649402618
id: 0
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:122




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: 2.63842844963
y: -29.4692306519
theta: 1.60952723026
speed: 13.7649402618
id: 0
t: 122
1546688114218
xxx after update is x: 3.03832626343
y: -28.7748947144
theta: 1.39836680889
speed: 13.9369697571
id: 0
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: 3.03832626343
y: -28.7748947144
theta: 1.39836680889
speed: 13.9369697571
id: 0
t: 123
1546688114276
xxx after update is x: 3.10444831848
y: -28.6171092987
theta: 1.60985553265
speed: 13.9971342087
id: 0
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.10444831848
y: -28.6171092987
theta: 1.60985553265
speed: 13.9971342087
id: 0
t: 124
1546688114342
xxx after update is x: 2.81990861893
y: -28.0941505432
theta: 1.51451098919
speed: 13.9096412659
id: 0
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:125


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.55555555556






self.maneuver_requested left
aaaaaa
risk is [0.3237257371421443, 0.9954310468581212]
222 self.state_diiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.25421261787
y: 1.03698408604
theta: 4.55263519287
speed: 13.9460878372
id: 1
t: 120
1546688114079
xxx after update is x: -4.01111793518
y: 0.632871448994
theta: 4.98454380035
speed: 13.7702503204
id: 1
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:121




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: -4.01111793518
y: 0.632871448994
theta: 4.98454380035
speed: 13.7702503204
id: 1
t: 121
1546688114141
xxx after update is x: -3.02175140381
y: -0.28450807929
theta: 4.71253395081
speed: 13.7664289474
id: 1
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: -3.02175140381
y: -0.28450807929
theta: 4.71253395081
speed: 13.7664289474
id: 1
t: 122
1546688114215
xxx after update is x: -3.08814334869
y: -1.06735658646
theta: 4.5471124649
speed: 14.0416164398
id: 1
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.08814334869
y: -1.06735658646
theta: 4.5471124649
speed: 14.0416164398
id: 1
t: 123
1546688114271
xxx after update is x: -3.53190779686
y: -1.55760800838
theta: 4.4818687439
speed: 13.7812232971
id: 1
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:124


aaaaaa
aaaaaabbbbb
risk is [0.29682064895502536, 0.49919999999999787]
222 self.state_dicts[msg.id][msg.t] is (3.1044483184814453, -28.617109298706055, 1.6098555326461792, 13.9971342086792)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.53190779686
y: -1.55760800838
theta: 4.4818687439
speed: 13.7812232971
id: 1
t: 124
1546688114343
xxx after update is x: -3.44676327705
y: -2.42103862762
theta: 4.60238218307
speed: 13.7990703583
id: 1
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:125


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.55555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: -3.44676327705
y: -2.42103862762
theta: 4.60238218307
speed: 13.7990703583
id: 1
t: 125
1546688114409
xxx after update is x: -2.9595015049
y: -2.34695315361
theta: 4.64511728287
speed: 13.9665241241
id: 1
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: -2.9595015049
y: -2.34695315361
theta: 4.64511728287
speed: 13.9665241241
id: 1
t: 126
1546688114469
xxx after update is x: -3.15268850327
y: -3.37854647636
theta: 4.77996683121
speed: 13.9872722626
id: 1
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: -3.15268850327
y: -3.37854647636
theta: 4.77996683121
speed: 13.9872722626
id: 1
t: 127
1546688114537
xxx after update is x: -3.21141433716
y: -3.84158802032
theta: 4.81711912155
speed: 14.0946302414
id: 1
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.3166207372168858, 0.4895999999999979]
222 self.state_dicts[msg.id][msg.t] is (3.9996097087860107, -25.469863891601562, 1.588333010673523, 13.844939231872559)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:129


xxx before update is x: -3.21141433716
y: -3.84158802032
theta: 4.81711912155
speed: 14.0946302414
id: 1
t: 128
1546688114602
xxx after update is x: -3.06739497185
y: -4.01036977768
theta: 4.7984623909
speed: 14.0837287903
id: 1
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
!!! change status from grant to normal
current clock is 5.73333333333
!!!threading.Timer
tgarnt done


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: -3.06739497185
y: -4.01036977768
theta: 4.7984623909
speed: 14.0837287903
id: 1
t: 129
1546688114675
xxx after update is x: -3.20803976059
y: -4.82743215561
theta: 4.68711948395
speed: 14.1956529617
id: 1
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:131


xxx before update is x: -3.20803976059
y: -4.82743215561
theta: 4.68711948395
speed: 14.1956529617
id: 1
t: 130
1546688114743
xxx after update is x: -3.57525992393
y: -6.0279340744
theta: 4.64851760864
speed: 14.2971029282
id: 1
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not cts[msg.id][msg.t] is (-3.446763277053833, -2.4210386276245117, 4.602382183074951, 13.799070358276367)

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: 2.81990861893
y: -28.0941505432
theta: 1.51451098919
speed: 13.9096412659
id: 0
t: 125
1546688114409
xxx after update is x: 3.45102787018
y: -26.7637233734
theta: 1.42492365837
speed: 14.1245880127
id: 0
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish

if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: 3.45102787018
y: -26.7637233734
theta: 1.42492365837
speed: 14.1245880127
id: 0
t: 126
1546688114471
xxx after update is x: 2.87208104134
y: -26.804605484
theta: 1.59679806232
speed: 13.9936628342
id: 0
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: 2.87208104134
y: -26.804605484
theta: 1.59679806232
speed: 13.9936628342
id: 0
t: 127
1546688114545
xxx after update is x: 3.99960970879
y: -25.4698638916
theta: 1.58833301067
speed: 13.8449392319
id: 0
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:129


xxx before update is x: 3.99960970879
y: -25.4698638916
theta: 1.58833301067
speed: 13.8449392319
id: 0
t: 128
1546688114609
xxx after update is x: 3.48234272003
y: -25.1394367218
theta: 1.38996374607
speed: 13.5498476028
id: 0
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3983851201188527, 0.9664218403390116]
222 self.state_dicts[msg.id][msg.t] is (-3.067394971847534, -4.010369777679443, 4.798462390899658, 14.083728790283203)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: 3.48234272003
y: -25.1394367218
theta: 1.38996374607
speed: 13.5498476028
id: 0
t: 129
1546688114673
xxx after update is x: 3.36232233047
y: -24.6666603088
theta: 1.48496234417
speed: 13.2170505524
id: 0
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.36232233047
y: -24.6666603088
theta: 1.48496234417
speed: 13.2170505524
id: 0
t: 130
1546688114744
xxx after update is x: 3.23374772072
y: -25.0583534241
theta: 1.53629505634
speed: 12.7424249649
id: 0
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:131




ggoing go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: -3.57525992393
y: -6.0279340744
theta: 4.64851760864
speed: 14.2971029282
id: 1
t: 131
1546688114802
xxx after update is x: -3.97075152397
y: -6.50765228271
theta: 4.77824831009
speed: 14.2957801819
id: 1
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.263393311051788, 0.5151999999999983]
222 self.state_dicts[msg.id][msg.t] is (3.480252504348755, -23.075977325439453, 1.5794459581375122, 12.63963508605957)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:133


xxx before update is x: -3.97075152397
y: -6.50765228271
theta: 4.77824831009
speed: 14.2957801819
id: 1
t: 132
1546688114879
xxx after update is x: -3.33455920219
y: -6.98711490631
theta: 4.70039558411
speed: 13.9094161987
id: 1
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.91111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: -3.33455920219
y: -6.98711490631
theta: 4.70039558411
speed: 13.9094161987
id: 1
t: 133
1546688114943
xxx after update is x: -3.41868424416
y: -7.61656713486
theta: 4.71032857895
speed: 13.971906662
id: 1
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.41868424416
y: -7.61656713486
theta: 4.71032857895
speed: 13.971906662
id: 1
t: 134
1546688115006
xxx after update is x: -2.9188580513
y: -8.12780666351
theta: 4.71695232391
speed: 13.4951820374
id: 1
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:135




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: -2.9188580513
y: -8.12780666351
theta: 4.71695232391
speed: 13.4951820374
id: 1
t: 135
1546688115074
xxx after update is x: -3.58411216736
y: -8.66375827789
theta: 4.74597167969
speed: 14.1219406128
id: 1
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.5676882292901506, 0.478399999999998]
222 self.state_dicts[msg.id][msg.t] is (2.6964409351348877, -21.29157257080078, 1.5093095302581787, 12.248708724975586)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender Falsoing to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: 3.23374772072
y: -25.0583534241
theta: 1.53629505634
speed: 12.7424249649
id: 0
t: 131
1546688114818
xxx after update is x: 3.48025250435
y: -23.0759773254
theta: 1.57944595814
speed: 12.6396350861
id: 0
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.48025250435
y: -23.0759773254
theta: 1.57944595814
speed: 12.6396350861
id: 0
t: 132
1546688114874
xxx after update is x: 3.23750829697
y: -23.4383640289
theta: 1.59502625465
speed: 12.3842287064
id: 0
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:133


aaaaaa
risk is [0.31443349992553316, 0.8583210052383734]
222 self.state_dicts[msg.id][msg.t] is (-3.334559202194214, -6.987114906311035, 4.700395584106445, 13.909416198730469)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.91111111111






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.23750829697
y: -23.4383640289
theta: 1.59502625465
speed: 12.3842287064
id: 0
t: 133
1546688114947
xxx after update is x: 3.57964229584
y: -22.4144535065
theta: 1.53731608391
speed: 12.2363147736
id: 0
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:134




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.57964229584
y: -22.4144535065
theta: 1.53731608391
speed: 12.2363147736
id: 0
t: 134
1546688115008
xxx after update is x: 3.96821880341
y: -22.0478878021
theta: 1.5889159441
speed: 11.7936887741
id: 0
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:135




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: 3.96821880341
y: -22.0478878021
theta: 1.5889159441
speed: 11.7936887741
id: 0
t: 135
1546688115075
xxx after update is x: 2.69644093513
y: -21.2915725708
theta: 1.50930953026
speed: 12.248708725
id: 0
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 2.69644093513
y: -21.2915725708
theta: 1.50930953026
speed: 12.248708725
id: 0
t: 136
1546688115140
xxx after update is x: 3.36630916595
y: -21.2478580475
theta: 1.65622210503
speed: 11.715719223
id: 0
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:137




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiie
sender_not going go finish False
gooooooo
xxx before update is x: -3.58411216736
y: -8.66375827789
theta: 4.74597167969
speed: 14.1219406128
id: 1
t: 136
1546688115143
xxx after update is x: -3.59218025208
y: -9.36554431915
theta: 4.85397911072
speed: 13.7943315506
id: 1
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:137




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: -3.59218025208
y: -9.36554431915
theta: 4.85397911072
speed: 13.7943315506
id: 1
t: 137
1546688115208
xxx after update is x: -3.63145303726
y: -10.3520851135
theta: 4.78579998016
speed: 13.9502468109
id: 1
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:139


xxx before update is x: -3.63145303726
y: -10.3520851135
theta: 4.78579998016
speed: 13.9502468109
id: 1
t: 138
1546688115270
xxx after update is x: -3.46425461769
y: -10.5589160919
theta: 4.77097988129
speed: 14.0044946671
id: 1
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.26442065010900534, 0.5343999999999989]
222 self.state_dicts[msg.id][msg.t] is (3.6027112007141113, -19.765663146972656, 1.5958489179611206, 11.148377418518066)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: -3.46425461769
y: -10.5589160919
theta: 4.77097988129
speed: 14.0044946671
id: 1
t: 139
1546688115335
xxx after update is x: -3.59206700325
y: -11.9209833145
theta: 4.82911205292
speed: 13.8900318146
id: 1
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: -3.59206700325
y: -11.9209833145
theta: 4.82911205292
speed: 13.8900318146
id: 1
t: 140
1546688115402
xxx after update is x: -3.43603444099
y: -11.4095478058
theta: 4.60043621063
speed: 13.9781847
id: 1
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.26666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: -3.43603444099
y: -11.4095478058
theta: 4.60043621063
speed: 13.9781847
id: 1
t: 141
1546688115470
xxx after update is x: -3.29965519905
y: -12.7918224335
theta: 4.65202331543
speed: 14.0652227402
id: 1
t: 142
miiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.36630916595
y: -21.2478580475
theta: 1.65622210503
speed: 11.715719223
id: 0
t: 137
1546688115213
xxx after update is x: 3.20835351944
y: -20.64037323
theta: 1.70615100861
speed: 11.2871007919
id: 0
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:138


aaaaaa
risk is [0.36438116159482103, 0.9501166788934372]
222 self.state_dicts[msg.id][msg.t] is (-3.631453037261963, -10.35208511352539, 4.785799980163574, 13.950246810913086)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.20835351944
y: -20.64037323
theta: 1.70615100861
speed: 11.2871007919
id: 0
t: 138
1546688115274
xxx after update is x: 3.60271120071
y: -19.765663147
theta: 1.59584891796
speed: 11.1483774185
id: 0
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:139




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: 3.60271120071
y: -19.765663147
theta: 1.59584891796
speed: 11.1483774185
id: 0
t: 139
1546688115341
xxx after update is x: 3.08482265472
y: -19.5861663818
theta: 1.64399778843
speed: 11.1389131546
id: 0
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: 3.08482265472
y: -19.5861663818
theta: 1.64399778843
speed: 11.1389131546
id: 0
t: 140
1546688115420
xxx after update is x: 2.68981480598
y: -19.1667900085
theta: 1.54449164867
speed: 10.4587535858
id: 0
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.35787715124068165, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4360344409942627, -11.409547805786133, 4.600436210632324, 13.978184700012207)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.26666666667






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: 2.68981480598
y: -19.1667900085
theta: 1.54449164867
speed: 10.4587535858
id: 0
t: 141
1546688115474
xxx after update is x: 3.04092025757
y: -18.6868972778
theta: 1.60983347893
speed: 10.2825078964
id: 0
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: 3.04092025757
y: -18.6868972778
theta: 1.60983347893
speed: 10.2825078964
id: 0
t: 142
1546688115544
xxx after update is x: 2.95748782158
y: -17.6924343109
theta: 1.64320135117
speed: 10.1380939484
id: 0
t: 143
maneuver_negoaneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.29965519905
y: -12.7918224335
theta: 4.65202331543
speed: 14.0652227402
id: 1
t: 142
1546688115539
xxx after update is x: -3.34712862968
y: -13.8893756866
theta: 4.61722326279
speed: 13.8895540237
id: 1
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:143


aaaaaa
aaaaaabbbbb
risk is [0.33526993933722377, 0.4943999999999979]
222 self.state_dicts[msg.id][msg.t] is (2.9574878215789795, -17.692434310913086, 1.6432013511657715, 10.138093948364258)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: -3.34712862968
y: -13.8893756866
theta: 4.61722326279
speed: 13.8895540237
id: 1
t: 143
1546688115611
xxx after update is x: -2.7413880825
y: -13.44526577
theta: 4.75291633606
speed: 13.719121933
id: 1
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: -2.7413880825
y: -13.44526577
theta: 4.75291633606
speed: 13.719121933
id: 1
t: 144
1546688115673
xxx after update is x: -3.28330850601
y: -14.2499771118
theta: 4.81411027908
speed: 14.0617895126
id: 1
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:146


xxx before update is x: -3.28330850601
y: -14.2499771118
theta: 4.81411027908
speed: 14.0617895126
id: 1
t: 145
1546688115741
xxx after update is x: -3.56513929367
y: -15.2035312653
theta: 4.9588098526
speed: 14.2673177719
id: 1
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
removed car with id 0 from grantlist. currentgrantlist: {}
aaaaaa
aaaaaabbbbb
risk is [0.4083153170273918, 0.475199999999998]
222 self.state_dicts[msg.id][msg.t] is (3.206686019897461, -16.420921325683594, 1.5555548667907715, 9.703472137451172)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.56513929367
y: -15.2035312653
theta: 4.9588098526
speed: 14.2673177719
id: 1
t: 146
1546688115813
xxx after update is x: -2.89236497879
y: -15.5078744888
theta: 4.7909579277
speed: 13.9591941833
id: 1
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:147




going to the update function
sim.py in the sim.py update functiotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 2.95748782158
y: -17.6924343109
theta: 1.64320135117
speed: 10.1380939484
id: 0
t: 143
1546688115615
xxx after update is x: 2.96195936203
y: -18.097738266
theta: 1.63094341755
speed: 9.46739292145
id: 0
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:144




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: 2.96195936203
y: -18.097738266
theta: 1.63094341755
speed: 9.46739292145
id: 0
t: 144
1546688115679
xxx after update is x: 3.45050573349
y: -16.5584621429
theta: 1.62794685364
speed: 9.77814865112
id: 0
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.7116364553724157, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.283308506011963, -14.249977111816406, 4.814110279083252, 14.061789512634277)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.45050573349
y: -16.5584621429
theta: 1.62794685364
speed: 9.77814865112
id: 0
t: 145
1546688115749
xxx after update is x: 3.2066860199
y: -16.4209213257
theta: 1.55555486679
speed: 9.70347213745
id: 0
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:146




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.2066860199
y: -16.4209213257
theta: 1.55555486679
speed: 9.70347213745
id: 0
t: 146
1546688115809
xxx after update is x: 2.80970835686
y: -15.7497587204
theta: 1.57201945782
speed: 9.61802864075
id: 0
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:147




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 2.80970835686
y: -15.7497587204
theta: 1.57201945782
speed: 9.61802864075
id: 0
t: 147
1546688115875
xxx after update is x: 3.14969754219
y: -15.729757309
theta: 1.6793615818
speed: 9.11619377136
id: 0
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:148


aaaaaa
risk is [0.5271268863913032, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.719705104827881, -16.72411346435547, 4.557246208190918, 13.79273796081543)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: 3.14969754219
y: -15.729757309
theta: 1.6793615818
speed: 9.11619377136
id: 0
t: 148
1546688115941
xxx after update is x: 3.21691417694
y: -14.8265838623
theta: 1.58876156807
speed: 8.51825141907
id: 0
t: 149
maneuver_negotiatir.py finish the update agent state from rn 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.89236497879
y: -15.5078744888
theta: 4.7909579277
speed: 13.9591941833
id: 1
t: 147
1546688115878
xxx after update is x: -2.71970510483
y: -16.7241134644
theta: 4.55724620819
speed: 13.7927379608
id: 1
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:148


maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
tgarnt done
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.57777777778






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: -2.71970510483
y: -16.7241134644
theta: 4.55724620819
speed: 13.7927379608
id: 1
t: 148
1546688115936
xxx after update is x: -2.99760937691
y: -16.8645191193
theta: 4.71267175674
speed: 14.1218881607
id: 1
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.99760937691
y: -16.8645191193
theta: 4.71267175674
speed: 14.1218881607
id: 1
t: 149
1546688116005
xxx after update is x: -3.22623515129
y: -17.0522689819
theta: 4.57505559921
speed: 13.6249723434
id: 1
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:150


aaaaaa
aaaaaabbbbb
risk is [0.2477652365603142, 0.5247999999999986]
222 self.state_dicts[msg.id][msg.t] is (3.085888385772705, -14.634012222290039, 1.3282970190048218, 8.850428581237793)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: -3.22623515129
y: -17.0522689819
theta: 4.57505559921
speed: 13.6249723434
id: 1
t: 150
1546688116075
xxx after update is x: -3.13867282867
y: -17.7294158936
theta: 4.51331710815
speed: 13.7348747253
id: 1
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.13867282867
y: -17.7294158936
theta: 4.51331710815
speed: 13.7348747253
id: 1
t: 151
1546688116151
xxx after update is x: -3.51350474358
y: -18.6154689789
theta: 4.74435520172
speed: 13.6463823318
id: 1
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:152




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.51350474358
y: -18.6154689789
theta: 4.744355os funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.62222222222






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: 3.21691417694
y: -14.8265838623
theta: 1.58876156807
speed: 8.51825141907
id: 0
t: 149
1546688116007
xxx after update is x: 3.08588838577
y: -14.6340122223
theta: 1.328297019
speed: 8.85042858124
id: 0
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: 3.08588838577
y: -14.6340122223
theta: 1.328297019
speed: 8.85042858124
id: 0
t: 150
1546688116081
xxx after update is x: 2.81981635094
y: -13.9855203629
theta: 1.57898759842
speed: 8.07064819336
id: 0
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 2.81981635094
y: -13.9855203629
theta: 1.57898759842
speed: 8.07064819336
id: 0
t: 151
1546688116141
xxx after update is x: 3.70446181297
y: -14.5522880554
theta: 1.56106114388
speed: 8.18302249908
id: 0
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:152


aaaaaa
risk is [0.4553132221054335, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.51350474357605, -18.615468978881836, 4.744355201721191, 13.646382331848145)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:153


xxx before update is x: 3.70446181297
y: -14.5522880554
theta: 1.56106114388
speed: 8.18302249908
id: 0
t: 152
1546688116209
xxx after update is x: 2.30413460732
y: -13.6594743729
theta: 1.49076032639
speed: 7.88172292709
id: 0
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 2.30413460732
y: -13.6594743729
theta: 1.49076032639
speed: 7.88172292709
id: 0
t: 153
1546688116285
xxx after update is x: 2.71283173561
y: -13.6609687805
theta: 1.68653106689
speed: 8.00593757629
id: 0
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:154


removed car with id 0 from grantlist. currentgrantlist: {}


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 2.71283173561
y: -13.6609687805
theta: 1.68653106689
speed: 8.00593757629
id: 0
t: 154
1546688116339
xxx after update is x: 3.51357579231
y: -12.8047618866
theta: 1.60917150974
speed: 7.60364818573
id: 0
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:155




going to the update function
sim.py in the sim.py update func20172
speed: 13.6463823318
id: 1
t: 152
1546688116211
xxx after update is x: -2.84097361565
y: -18.8416099548
theta: 4.76697921753
speed: 13.9980077744
id: 1
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:153


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.84097361565
y: -18.8416099548
theta: 4.76697921753
speed: 13.9980077744
id: 1
t: 153
1546688116273
xxx after update is x: -3.12587165833
y: -20.1630840302
theta: 4.56775569916
speed: 13.7823534012
id: 1
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:154


aaaaaa
aaaaaabbbbb
risk is [0.40323868361271337, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (2.712831735610962, -13.660968780517578, 1.6865310668945312, 8.005937576293945)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.12587165833
y: -20.1630840302
theta: 4.56775569916
speed: 13.7823534012
id: 1
t: 154
1546688116344
xxx after update is x: -3.32835769653
y: -20.6970367432
theta: 4.7820148468
speed: 14.0989198685
id: 1
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:155




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: -3.32835769653
y: -20.6970367432
theta: 4.7820148468
speed: 14.0989198685
id: 1
t: 155
1546688116420
xxx after update is x: -3.34347295761
y: -21.5945472717
theta: 4.69322443008
speed: 13.8982877731
id: 1
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.93333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.34347295761
y: -21.5945472717
theta: 4.69322443008
speed: 13.8982877731
id: 1
t: 156
1546688116485
xxx after update is x: -3.50478053093
y: -21.6943130493
theta: 4.73117637634
speed: 13.495265007
id: 1
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:157


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: -3.50478053093
y: -21.6943130493
theta: 4.73117637634
speed: 13.495265007
id: 1
t: 157
1546688116549
xxx after update is x: -2.79586148262
y: -22.8876590729
theta: 4.84226226807
speed: 13.9195308685
id: 1
t: 158
maneuver_negotiatir.py finish the update agent state from ros funttion 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: 3.51357579231
y: -12.8047618866
theta: 1.60917150974
speed: 7.60364818573
id: 0
t: 155
1546688116413
xxx after update is x: 3.23151946068
y: -12.567076683
theta: 1.54300141335
speed: 7.45876264572
id: 0
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: 3.23151946068
y: -12.567076683
theta: 1.54300141335
speed: 7.45876264572
id: 0
t: 156
1546688116477
xxx after update is x: 3.2800681591
y: -12.4328613281
theta: 1.6539324522
speed: 6.76459217072
id: 0
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.97777777778






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.34228419432970253, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5047805309295654, -21.694313049316406, 4.731176376342773, 13.495265007019043)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: 3.2800681591
y: -12.4328613281
theta: 1.6539324522
speed: 6.76459217072
id: 0
t: 157
1546688116546
xxx after update is x: 3.32325935364
y: -12.0887918472
theta: 1.6964840889
speed: 7.05867195129
id: 0
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:159


xxx before update is x: 3.32325935364
y: -12.0887918472
theta: 1.6964840889
speed: 7.05867195129
id: 0
t: 158
1546688116608
xxx after update is x: 2.84006690979
y: -11.1824226379
theta: 1.60166931152
speed: 6.83941888809
id: 0
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:160


xxx before update is x: 2.84006690979
y: -11.1824226379
theta: 1.60166931152
speed: 6.83941888809
id: 0
t: 159
1546688116675
xxx after update is x: 2.93115830421
y: -11.3794355392
theta: 1.59058213234
speed: 6.68055582047
id: 0
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: 2.93115830421
y: -11.3794355392
theta: 1.59058213234
speed: 6.68055582047
id: 0
t: 160
1546688116743
xxx after update is x: 3.63549256325
y: -10.8792963028
theta: 1.63086783886
speed: 6.22763586044
id: 0
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.631916356454083, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2717807292938232, -24.292015075683594, 4.796885013580322, 13.78619384765625)
if we have all measurements for a cerion
aaaaaa
aaaaaabbbbb
risk is [0.3473404916008573, 0.48799999999999794]
222 self.state_dicts[msg.id][msg.t] is (3.3232593536376953, -12.088791847229004, 1.696484088897705, 7.058671951293945)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.79586148262
y: -22.8876590729
theta: 4.84226226807
speed: 13.9195308685
id: 1
t: 158
1546688116611
xxx after update is x: -3.36874628067
y: -22.9419898987
theta: 4.63575363159
speed: 13.9490747452
id: 1
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:159




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:160


xxx before update is x: -3.36874628067
y: -22.9419898987
theta: 4.63575363159
speed: 13.9490747452
id: 1
t: 159
1546688116671
xxx after update is x: -3.34322428703
y: -23.5295524597
theta: 4.83692216873
speed: 13.8758382797
id: 1
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.34322428703
y: -23.5295524597
theta: 4.83692216873
speed: 13.8758382797
id: 1
t: 160
1546688116740
xxx after update is x: -3.27178072929
y: -24.2920150757
theta: 4.79688501358
speed: 13.7861938477
id: 1
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:161


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.5260274218776634, 0.5135999999999983]
222 self.state_dicts[msg.id][msg.t] is (3.6354925632476807, -10.87929630279541, 1.630867838859558, 6.227635860443115)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: -3.27178072929
y: -24.2920150757
theta: 4.79688501358
speed: 13.7861938477
id: 1
t: 161
1546688116814
xxx after update is x: -3.04880428314
y: -24.4383792877
theta: 4.71478939056
speed: 13.7604799271
id: 1
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:163


xxx before update is x: -3.04880428314
y: -24.4383792877
theta: 4.71478939056
speed: 13.7604799271
id: 1
t: 162
1546688116879
xxx after update is x: -3.63163781166
y: -25.2591247559
theta: 4.72574472427
speed: 13.8881559372
id: 1
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go fintain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: 3.63549256325
y: -10.8792963028
theta: 1.63086783886
speed: 6.22763586044
id: 0
t: 161
1546688116806
xxx after update is x: 3.14208245277
y: -10.997469902
theta: 1.58740115166
speed: 5.77439594269
id: 0
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:163


xxx before update is x: 3.14208245277
y: -10.997469902
theta: 1.58740115166
speed: 5.77439594269
id: 0
t: 162
1546688116882
xxx after update is x: 3.26376152039
y: -10.6235265732
theta: 1.70726501942
speed: 5.73583889008
id: 0
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.26376152039
y: -10.6235265732
theta: 1.70726501942
speed: 5.73583889008
id: 0
t: 163
1546688116951
xxx after update is x: 2.99920701981
y: -10.7289104462
theta: 1.55963766575
speed: 5.61213207245
id: 0
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:164


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.28888888889






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:165


maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: 2.99920701981
y: -10.7289104462
theta: 1.55963766575
speed: 5.61213207245
id: 0
t: 164
1546688117012
xxx after update is x: 3.51435279846
y: -10.6565217972
theta: 1.68871748447
speed: 5.47381544113
id: 0
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.433477851769425, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.6149191856384277, -26.62428092956543, 4.750487327575684, 13.660173416137695)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:166


xxx before update is x: 3.51435279846
y: -10.6565217972
theta: 1.68871748447
speed: 5.47381544113
id: 0
t: 165
1546688117073
xxx after update is x: 3.14622759819
y: -10.3494138718
theta: 1.56777954102
speed: 5.62699317932
id: 0
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: 3.14622759819
y: -10.3494138718
theta: 1.56777954102
speed: 5.62699317932
id: 0
t: 166
1546688117145
xxx after update is x: 4.04917526245
y: -9.87939357758
theta: 1.56056833267
speed: 6.10384130478
id: 0
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion


goinish False
gooooooo
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: -3.63163781166
y: -25.2591247559
theta: 4.72574472427
speed: 13.8881559372
id: 1
t: 163
1546688116939
xxx after update is x: -3.60122966766
y: -26.0588932037
theta: 4.74687957764
speed: 13.7987794876
id: 1
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.28888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.60122966766
y: -26.0588932037
theta: 4.74687957764
speed: 13.7987794876
id: 1
t: 164
1546688117011
xxx after update is x: -3.61491918564
y: -26.6242809296
theta: 4.75048732758
speed: 13.6601734161
id: 1
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:165


aaaaaa
aaaaaabbbbb
risk is [0.48865314431017276, 0.48799999999999794]
222 self.state_dicts[msg.id][msg.t] is (3.514352798461914, -10.656521797180176, 1.6887174844741821, 5.473815441131592)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.61491918564
y: -26.6242809296
theta: 4.75048732758
speed: 13.6601734161
id: 1
t: 165
1546688117074
xxx after update is x: -3.34910440445
y: -27.507144928
theta: 4.65563869476
speed: 14.0253477097
id: 1
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:166




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: -3.34910440445
y: -27.507144928
theta: 4.65563869476
speed: 14.0253477097
id: 1
t: 166
1546688117142
xxx after update is x: -3.36743068695
y: -27.5178947449
theta: 4.76242351532
speed: 13.6881055832
id: 1
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.36743068695
y: -27.5178947449
theta: 4.76242351532
speed: 13.6881055832
id: 1
t: 167
1546688117217
xxx after update is x: -2.97087192535
y: -28.3193645477
theta: 4.63138818741
speed: 13.7829837799
id: 1
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:168


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: -2.97087192535
y: -28.3193645477
theta: 4.63138818741
speed: 13.7829837799
id: 1
t: 168
1546688117279
xxx after update is x: -3.89346623421
y: -29.4571170807
theta: 4.88094425201
speed:g to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: 4.04917526245
y: -9.87939357758
theta: 1.56056833267
speed: 6.10384130478
id: 0
t: 167
1546688117215
xxx after update is x: 3.08654284477
y: -9.6334695816
theta: 1.40459656715
speed: 5.6465010643
id: 0
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: 3.08654284477
y: -9.6334695816
theta: 1.40459656715
speed: 5.6465010643
id: 0
t: 168
1546688117274
xxx after update is x: 3.13598489761
y: -8.77808666229
theta: 1.53450202942
speed: 5.40431928635
id: 0
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
xxx before update is x: 3.13598489761
y: -8.77808666229
theta: 1.53450202942
speed: 5.40431928635
id: 0
t: 169
1546688117346
xxx after update is x: 4.02420091629
y: -8.74464416504
theta: 1.6736484766
speed: 5.2569565773
id: 0
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:170




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:171


xxx before update is x: 4.02420091629
y: -8.74464416504
theta: 1.6736484766
speed: 5.2569565773
id: 0
t: 170
1546688117408
xxx after update is x: 3.41315174103
y: -8.65726280212
theta: 1.43143010139
speed: 5.31894874573
id: 0
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.55112782300685, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.455349922180176, -30.08811378479004, 4.742086887359619, 13.588874816894531)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: 3.41315174103
y: -8.65726280212
theta: 1.43143010139
speed: 5.31894874573
id: 0
t: 171
1546688117471
xxx after update is x: 3.4210267067
y: -8.37028312683
theta: 1.52879929543
speed: 5.55283355713
id: 0
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.64444444444






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:173


xxx before update is x: 3.4210267067
y: -8.37028312683
theta: 1.52879929543
speed: 5.55283355713
id: 0
t: 172
1546688117539
xxx after update is x: 3.46525263786
y: -8.49245262146
theta: 1.4979981184
speed: 5.35712862015
id: 0
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed: 13.770942688
id: 1
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.47031357897336973, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (3.1359848976135254, -8.77808666229248, 1.5345020294189453, 5.4043192863464355)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: -3.89346623421
y: -29.4571170807
theta: 4.88094425201
speed: 13.770942688
id: 1
t: 169
1546688117348
xxx after update is x: -2.97527384758
y: -30.3805809021
theta: 4.67890071869
speed: 14.1022453308
id: 1
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.97527384758
y: -30.3805809021
theta: 4.67890071869
speed: 14.1022453308
id: 1
t: 170
1546688117407
xxx after update is x: -3.45534992218
y: -30.0881137848
theta: 4.74208688736
speed: 13.5888748169
id: 1
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:171




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:172


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.6






self.maneuver_requested None
xxx before update is x: -3.45534992218
y: -30.0881137848
theta: 4.74208688736
speed: 13.5888748169
id: 1
t: 171
1546688117475
xxx after update is x: -3.45854187012
y: -31.1471595764
theta: 4.62400627136
speed: 13.7477664948
id: 1
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.11865134609539274, 0.5279999999999987]
222 self.state_dicts[msg.id][msg.t] is (3.4210267066955566, -8.370283126831055, 1.528799295425415, 5.552833557128906)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:173


xxx before update is x: -3.45854187012
y: -31.1471595764
theta: 4.62400627136
speed: 13.7477664948
id: 1
t: 172
1546688117540
xxx after update is x: -3.28023457527
y: -31.6362094879
theta: 4.76066350937
speed: 13.7717599869
id: 1
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: -3.28023457527
y: -31.6362094879
theta: 4.76066350937
speed: 13.7717599869
id: 1
t: 173
1546688117610
xxx after update is x: -3.23421859741
y: -32.5377349854
theta: 4.66148662567
speed: 13.8731641769
id: 1
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: -3.23421859741
y: -32.5377349854
theta: 4.66148662567
speed: 13.8731641769
id: 1
t: 174
1546688117676
xxx after update is x: -3.00975894928
y: -32.6227836609
theta: 4.77626276016
speed: 14.0839624405
id: 1
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.00975894928
y: -32.6227836609
theta: 4.77626276016
speed: 14.0839624405
id: 1
t: 175
1546688117739
xxx after update is x: -3.45425009727
y: -33.2348365784
theta: 4.7490067482
speed: 13.8336544037
id: 1
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:176


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.45425009727
y: -33.2348365784
theta: 4.7490067482
speed: 13.8336544037
id: 1
t: 176
1546688117807
xxx after update is x: -3.35545301437
y: -34.1958999634
theta: 4.65035057068
speed: 14.0753517151
id: 1
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:177


aaaaaa
aaaaaabbbbb
risk is [0.034970695888922015, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (3.683058500289917, -7.379516124725342, 1.611330270767212, 5.740133762359619)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.35545301437
y: -34.1958999634
theta: 4.65035057068
speed: 14.0753517151
id: 1
t: 177
1546688117875
xxx after update is x: -3.32472968102
y: -35.0773963928
theta: 4.67076063156
speed: 14.065580368
id: 1
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:178




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: -3.32472968102
y: -35.0773963928
theta: 4.67076063156
speed: 14.065580368
id: 1
t: 178
1546688117938
xxx after update is x: -3.43631601334
y: -35.3822097778
theta: 4.54373073578
speed: 14.314994812
id: 1
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.95555555556






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:180


maneuver_negotiatir.py in the try maneuver functxxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: 3.46525263786
y: -8.49245262146
theta: 1.4979981184
speed: 5.35712862015
id: 0
t: 173
1546688117607
xxx after update is x: 2.83072590828
y: -7.84150600433
theta: 1.49116539955
speed: 5.27386760712
id: 0
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: 2.83072590828
y: -7.84150600433
theta: 1.49116539955
speed: 5.27386760712
id: 0
t: 174
1546688117673
xxx after update is x: 3.58506774902
y: -8.29657745361
theta: 1.54303956032
speed: 5.30055856705
id: 0
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.04145729933022841, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.009758949279785, -32.62278366088867, 4.7762627601623535, 14.083962440490723)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
north
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: 3.58506774902
y: -8.29657745361
theta: 1.54303956032
speed: 5.30055856705
id: 0
t: 175
1546688117744
xxx after update is x: 3.39603853226
y: -7.73997497559
theta: 1.63465857506
speed: 6.03096628189
id: 0
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 3.39603853226
y: -7.73997497559
theta: 1.63465857506
speed: 6.03096628189
id: 0
t: 176
1546688117806
xxx after update is x: 3.68305850029
y: -7.37951612473
theta: 1.61133027077
speed: 5.74013376236
id: 0
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:177




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 3.68305850029
y: -7.37951612473
theta: 1.61133027077
speed: 5.74013376236
id: 0
t: 177
1546688117876
xxx after update is x: 3.48965668678
y: -6.97834396362
theta: 1.60433590412
speed: 6.03622245789
id: 0
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:178




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: 3.48965668678
y: -6.97834396362
theta: 1.60433590412
speed: 6.03622245789
id: 0
t: 178
1546688117950
xxx after update is x: 3.76971960068
y: -6.47083187103
theta: 1.55153739452
speed: 6.17692661285
id: 0
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 3.76971960068
y: -6.47083187103
theta: 1.55153739452
speed: 6.17692661285
id: 0
t: 179
1546688118017
xxx after update is x: 3.47183394432ion update -. sfinish
xxx before update is x: -3.43631601334
y: -35.3822097778
theta: 4.54373073578
speed: 14.314994812
id: 1
t: 179
1546688118015
xxx after update is x: -3.26630687714
y: -36.3427810669
theta: 4.79506731033
speed: 13.6154870987
id: 1
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:181


xxx before update is x: -3.26630687714
y: -36.3427810669
theta: 4.79506731033
speed: 13.6154870987
id: 1
t: 180
1546688118079
xxx after update is x: -3.36501407623
y: -36.5509681702
theta: 4.75081205368
speed: 13.8518476486
id: 1
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.07378310949799417, 0.49919999999999787]
222 self.state_dicts[msg.id][msg.t] is (3.302159070968628, -7.189999580383301, 1.6441426277160645, 6.944049835205078)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:182


xxx before update is x: -3.36501407623
y: -36.5509681702
theta: 4.75081205368
speed: 13.8518476486
id: 1
t: 181
1546688118140
xxx after update is x: -3.39269399643
y: -36.990688324
theta: 4.68896055222
speed: 13.6203975677
id: 1
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:183


xxx before update is x: -3.39269399643
y: -36.990688324
theta: 4.68896055222
speed: 13.6203975677
id: 1
t: 182
1546688118218
xxx after update is x: -3.34964179993
y: -38.6937026978
theta: 4.70751047134
speed: 13.8075237274
id: 1
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: -3.34964179993
y: -38.6937026978
theta: 4.70751047134
speed: 13.8075237274
id: 1
t: 183
1546688118277
xxx after update is x: -3.15375781059
y: -39.0082626343
theta: 4.67672300339
speed: 13.9655818939
id: 1
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.15375781059
y: -39.0082626343
theta: 4.67672300339
speed: 13.9655818939
id: 1
t: 184
1546688118340
xxx after update is x: -3.02407932281
y: -38.9798164368
theta: 4.78318738937
speed: 13.9020462036
id: 1
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:185


aaaaaa
aaaaaabbbbb
risk is [0.008679216940055754, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (3.0097978115081787, -4.881824493408203, 1.7720928192138672, 7.40070962
y: -6.25684118271
theta: 1.47626948357
speed: 6.28389930725
id: 0
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:180


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.0






self.maneuver_requested left
aaaaaa
risk is [0.0008022217206108349, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2663068771362305, -36.34278106689453, 4.795067310333252, 13.615487098693848)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:181


xxx before update is x: 3.47183394432
y: -6.25684118271
theta: 1.47626948357
speed: 6.28389930725
id: 0
t: 180
1546688118074
xxx after update is x: 3.30215907097
y: -7.18999958038
theta: 1.64414262772
speed: 6.94404983521
id: 0
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 3.30215907097
y: -7.18999958038
theta: 1.64414262772
speed: 6.94404983521
id: 0
t: 181
1546688118144
xxx after update is x: 2.98085975647
y: -5.94601678848
theta: 1.70999991894
speed: 6.86780881882
id: 0
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:182




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:183


xxx before update is x: 2.98085975647
y: -5.94601678848
theta: 1.70999991894
speed: 6.86780881882
id: 0
t: 182
1546688118211
xxx after update is x: 3.88430023193
y: -5.40545654297
theta: 1.53025460243
speed: 6.84271097183
id: 0
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 3.88430023193
y: -5.40545654297
theta: 1.53025460243
speed: 6.84271097183
id: 0
t: 183
1546688118276
xxx after update is x: 2.82707953453
y: -5.37769937515
theta: 1.75643527508
speed: 7.09773731232
id: 0
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:184




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 2.82707953453
y: -5.37769937515
theta: 1.75643527508
speed: 7.09773731232
id: 0
t: 184
1546688118341
xxx after update is x: 3.00979781151
y: -4.88182449341
theta: 1.77209281921
speed: 7.40070962906
id: 0
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:185


aaaaaa
risk is [1.1981570305742897e-51, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0240793228149414, -38.97981643676758, 4.783187389373779, 13.902046203613281)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii9058838)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: -3.02407932281
y: -38.9798164368
theta: 4.78318738937
speed: 13.9020462036
id: 1
t: 185
1546688118405
xxx after update is x: -3.45769762993
y: -39.8762321472
theta: 4.57590389252
speed: 13.7173566818
id: 1
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: -3.45769762993
y: -39.8762321472
theta: 4.57590389252
speed: 13.7173566818
id: 1
t: 186
1546688118471
xxx after update is x: -3.56580734253
y: -40.7091178894
theta: 4.64028644562
speed: 13.5123243332
id: 1
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.31111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:188


maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: -3.56580734253
y: -40.7091178894
theta: 4.64028644562
speed: 13.5123243332
id: 1
t: 187
1546688118539
xxx after update is x: -3.70472145081
y: -41.0936698914
theta: 4.82176351547
speed: 13.78495121
id: 1
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.025323048310951328, 0.46879999999999805]
222 self.state_dicts[msg.id][msg.t] is (2.3092784881591797, -3.642380475997925, 1.8894942998886108, 8.339116096496582)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: -3.70472145081
y: -41.0936698914
theta: 4.82176351547
speed: 13.78495121
id: 1
t: 188
1546688118606
xxx after update is x: -3.39758467674
y: -41.6773986816
theta: 4.42587661743
speed: 13.7693309784
id: 1
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.39758467674
y: -41.6773986816
theta: 4.42587661743
speed: 13.7693309784
id: 1
t: 189
1546688118672
xxx after update is x: -2.90236735344
y: -42.4269332886
theta: 4.69914197922
speed: 13.6265287399
id: 1
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:190


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.539199999999999]
222 self.state_dicts[msg.id][msg.t] is (2.760067939758301, -3.959937334060669, 2.106661558151245, 8.31940841iiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: 3.00979781151
y: -4.88182449341
theta: 1.77209281921
speed: 7.40070962906
id: 0
t: 185
1546688118407
xxx after update is x: 3.41353988647
y: -4.5413775444
theta: 1.70866298676
speed: 7.52862024307
id: 0
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: 3.41353988647
y: -4.5413775444
theta: 1.70866298676
speed: 7.52862024307
id: 0
t: 186
1546688118475
xxx after update is x: 3.19884824753
y: -4.43327474594
theta: 1.64215552807
speed: 8.36525154114
id: 0
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:188


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.31111111111






self.maneuver_requested left
xxx before update is x: 3.19884824753
y: -4.43327474594
theta: 1.64215552807
speed: 8.36525154114
id: 0
t: 187
1546688118542
xxx after update is x: 2.30927848816
y: -3.642380476
theta: 1.88949429989
speed: 8.3391160965
id: 0
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: 2.30927848816
y: -3.642380476
theta: 1.88949429989
speed: 8.3391160965
id: 0
t: 188
1546688118608
xxx after update is x: 2.59413051605
y: -3.76591181755
theta: 1.86226284504
speed: 7.95886468887
id: 0
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [3.9440681712e-313, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3975846767425537, -41.677398681640625, 4.425876617431641, 13.769330978393555)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: 2.59413051605
y: -3.76591181755
theta: 1.86226284504
speed: 7.95886468887
id: 0
t: 189
1546688118682
xxx after update is x: 2.76006793976
y: -3.95993733406
theta: 2.10666155815
speed: 8.31940841675
id: 0
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: 2.76006793976
y: -3.95993733406
theta: 2.10666155815
speed: 8.31940841675
id: 0
t: 190
1546688118744
xxx after update is x: 2.19795107841
y: -2.59315299988
theta: 1.97665286064
speed: 8.84361076355
id: 0
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the up6748047)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -2.90236735344
y: -42.4269332886
theta: 4.69914197922
speed: 13.6265287399
id: 1
t: 190
1546688118739
xxx after update is x: -3.40381813049
y: -42.96118927
theta: 4.66967868805
speed: 13.8572826385
id: 1
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:192


xxx before update is x: -3.40381813049
y: -42.96118927
theta: 4.66967868805
speed: 13.8572826385
id: 1
t: 191
1546688118817
xxx after update is x: -3.17898845673
y: -43.2944259644
theta: 4.59368419647
speed: 14.0598630905
id: 1
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.17898845673
y: -43.2944259644
theta: 4.59368419647
speed: 14.0598630905
id: 1
t: 192
1546688118881
xxx after update is x: -3.25425195694
y: -43.8428039551
theta: 4.76463365555
speed: 13.8990831375
id: 1
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:193


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4607999999999981]
222 self.state_dicts[msg.id][msg.t] is (2.3842625617980957, -2.64945125579834, 2.0390913486480713, 9.266885757446289)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.25425195694
y: -43.8428039551
theta: 4.76463365555
speed: 13.8990831375
id: 1
t: 193
1546688118939
xxx after update is x: -3.45679926872
y: -44.3946685791
theta: 4.76233577728
speed: 13.9392757416
id: 1
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:194




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:195


xxx before update is x: -3.45679926872
y: -44.3946685791
theta: 4.76233577728
speed: 13.9392757416
id: 1
t: 194
1546688119012
xxx after update is x: -3.28950190544
y: -45.478313446
theta: 4.79653263092
speed: 13.8136949539
id: 1
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.66666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go fidate function xxx before update is x: 2.19795107841
y: -2.59315299988
theta: 1.97665286064
speed: 8.84361076355
id: 0
t: 191
1546688118821
xxx after update is x: 1.99291837215
y: -2.7919178009
theta: 2.11690974236
speed: 8.87065124512
id: 0
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:192


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.178988456726074, -43.29442596435547, 4.593684196472168, 14.059863090515137)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:193


xxx before update is x: 1.99291837215
y: -2.7919178009
theta: 2.11690974236
speed: 8.87065124512
id: 0
t: 192
1546688118876
xxx after update is x: 2.3842625618
y: -2.6494512558
theta: 2.03909134865
speed: 9.26688575745
id: 0
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:194


xxx before update is x: 2.3842625618
y: -2.6494512558
theta: 2.03909134865
speed: 9.26688575745
id: 0
t: 193
1546688118946
xxx after update is x: 1.7038962841
y: -1.78101408482
theta: 2.09658169746
speed: 9.33363056183
id: 0
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:195


xxx before update is x: 1.7038962841
y: -1.78101408482
theta: 2.09658169746
speed: 9.33363056183
id: 0
t: 194
1546688119014
xxx after update is x: 1.60449182987
y: -0.980151534081
theta: 2.40896916389
speed: 9.80793380737
id: 0
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.66666666667






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: 1.60449182987
y: -0.980151534081
theta: 2.40896916389
speed: 9.80793380737
id: 0
t: 195
1546688119075
xxx after update is x: 2.13211607933
y: -1.17069470882
theta: 2.190751791
speed: 10.0254573822
id: 0
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:196


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.447049856185913, -46.198543548583984, 4.670118808746338, 13.868078231811523)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 2.13211607933
y: -1.17069470882
theta: 2.190751791
speed: 10.0254573822
id: 0
t: 196
1546688119138
xxx after update is x: 0.697389900684
y: -1.14062690735
theta: 2.18103933334
speed: 9.95237636566
id: 0
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:197




going to the update function
snish False
gooooooo
xxx before update is x: -3.28950190544
y: -45.478313446
theta: 4.79653263092
speed: 13.8136949539
id: 1
t: 195
1546688119075
xxx after update is x: -3.44704985619
y: -46.1985435486
theta: 4.67011880875
speed: 13.8680782318
id: 1
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:196


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5247999999999986]
222 self.state_dicts[msg.id][msg.t] is (2.1321160793304443, -1.1706947088241577, 2.190751791000366, 10.025457382202148)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.44704985619
y: -46.1985435486
theta: 4.67011880875
speed: 13.8680782318
id: 1
t: 196
1546688119139
xxx after update is x: -3.40872192383
y: -46.2247886658
theta: 4.92216682434
speed: 13.982749939
id: 1
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:197




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.40872192383
y: -46.2247886658
theta: 4.92216682434
speed: 13.982749939
id: 1
t: 197
1546688119214
xxx after update is x: -3.47911262512
y: -46.6687316895
theta: 4.77737998962
speed: 13.942150116
id: 1
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:198




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.47911262512
y: -46.6687316895
theta: 4.77737998962
speed: 13.942150116
id: 1
t: 198
1546688119275
xxx after update is x: -2.96076226234
y: -48.0277862549
theta: 4.87086343765
speed: 14.0918674469
id: 1
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:199


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.537599999999999]
222 self.state_dicts[msg.id][msg.t] is (1.1512688398361206, -0.3062392771244049, 2.282681703567505, 10.662222862243652)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: -2.96076226234
y: -48.0277862549
theta: 4.87086343765
speed: 14.0918674469
id: 1
t: 199
1546688119338
xxx after update is x: -3.21766972542
y: -47.8207435608
theta: 4.67693758011
speed: 13.871673584
id: 1
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.21766972542
y: -47.8207435608
theta: 4.67693758011
speed: 13.871673584
id: 1
t: 200
1546688119408
xxx after update is x: -3.05870008469
y: -48.991355896
theta: 4.78191804886im.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:198


xxx before update is x: 0.697389900684
y: -1.14062690735
theta: 2.18103933334
speed: 9.95237636566
id: 0
t: 197
1546688119206
xxx after update is x: 0.872475087643
y: -0.160670846701
theta: 2.42565965652
speed: 10.1388950348
id: 0
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:199


xxx before update is x: 0.872475087643
y: -0.160670846701
theta: 2.42565965652
speed: 10.1388950348
id: 0
t: 198
1546688119271
xxx after update is x: 1.15126883984
y: -0.306239277124
theta: 2.28268170357
speed: 10.6622228622
id: 0
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.9607622623443604, -48.02778625488281, 4.870863437652588, 14.091867446899414)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: 1.15126883984
y: -0.306239277124
theta: 2.28268170357
speed: 10.6622228622
id: 0
t: 199
1546688119345
xxx after update is x: 0.253319740295
y: 0.154195308685
theta: 2.51952910423
speed: 10.7229604721
id: 0
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: 0.253319740295
y: 0.154195308685
theta: 2.51952910423
speed: 10.7229604721
id: 0
t: 200
1546688119406
xxx after update is x: 0.0436656065285
y: 0.461653620005
theta: 2.44944310188
speed: 10.7392549515
id: 0
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:202


xxx before update is x: 0.0436656065285
y: 0.461653620005
theta: 2.44944310188
speed: 10.7392549515
id: 0
t: 201
1546688119496
xxx after update is x: -0.628467082977
y: 1.15404522419
theta: 2.51676750183
speed: 11.2112722397
id: 0
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: -0.628467082977
y: 1.15404522419
theta: 2.51676750183
speed: 11.2112722397
id: 0
t: 202
1546688119543
xxx after update is x: -1.30393338203
y: 1.39602947235
theta: 2.46565961838
speed: 11.7543525696
id: 0
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:203


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.153186082839966, -49.96071243286133, 4.528911113739014, 13.41147232055664)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in
speed: 14.067527771
id: 1
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:201


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.478399999999998]
222 self.state_dicts[msg.id][msg.t] is (0.043665606528520584, 0.46165362000465393, 2.4494431018829346, 10.73925495147705)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:202


xxx before update is x: -3.05870008469
y: -48.991355896
theta: 4.78191804886
speed: 14.067527771
id: 1
t: 201
1546688119471
xxx after update is x: -3.38922452927
y: -49.3721427917
theta: 4.92537975311
speed: 13.9540643692
id: 1
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.38922452927
y: -49.3721427917
theta: 4.92537975311
speed: 13.9540643692
id: 1
t: 202
1546688119539
xxx after update is x: -3.15318608284
y: -49.9607124329
theta: 4.52891111374
speed: 13.4114723206
id: 1
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:203


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.02222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:204


xxx before update is x: -3.15318608284
y: -49.9607124329
theta: 4.52891111374
speed: 13.4114723206
id: 1
t: 203
1546688119607
xxx after update is x: -3.13168764114
y: -50.6980819702
theta: 4.66605138779
speed: 14.057472229
id: 1
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4943999999999979]
222 self.state_dicts[msg.id][msg.t] is (-1.5996073484420776, 1.2294762134552002, 2.74822735786438, 11.424718856811523)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:205


xxx before update is x: -3.13168764114
y: -50.6980819702
theta: 4.66605138779
speed: 14.057472229
id: 1
t: 204
1546688119682
xxx after update is x: -3.30983376503
y: -52.0316810608
theta: 4.84695386887
speed: 14.2328939438
id: 1
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.30983376503
y: -52.0316810608
theta: 4.84695386887
speed: 14.2328939438
id: 1
t: 205
1546688119745
xxx after update is x: -3.42733550072
y: -52.3356323242
theta: 4.75750207901
speed: 14.040 the try maneuver function update -. strat
current clock is 9.02222222222






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:204


xxx before update is x: -1.30393338203
y: 1.39602947235
theta: 2.46565961838
speed: 11.7543525696
id: 0
t: 203
1546688119610
xxx after update is x: -1.59960734844
y: 1.22947621346
theta: 2.74822735786
speed: 11.4247188568
id: 0
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:205


xxx before update is x: -1.59960734844
y: 1.22947621346
theta: 2.74822735786
speed: 11.4247188568
id: 0
t: 204
1546688119686
xxx after update is x: -1.75248026848
y: 1.87910234928
theta: 2.59509801865
speed: 11.7449674606
id: 0
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:206


xxx before update is x: -1.75248026848
y: 1.87910234928
theta: 2.59509801865
speed: 11.7449674606
id: 0
t: 205
1546688119743
xxx after update is x: -2.29921770096
y: 2.09620451927
theta: 2.64658737183
speed: 11.8845071793
id: 0
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.427335500717163, -52.33563232421875, 4.75750207901001, 14.040586471557617)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:207


xxx before update is x: -2.29921770096
y: 2.09620451927
theta: 2.64658737183
speed: 11.8845071793
id: 0
t: 206
1546688119811
xxx after update is x: -2.9480471611
y: 2.29503583908
theta: 2.72854399681
speed: 12.4391565323
id: 0
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: -2.9480471611
y: 2.29503583908
theta: 2.72854399681
speed: 12.4391565323
id: 0
t: 207
1546688119878
xxx after update is x: -3.2715742588
y: 2.09293699265
theta: 2.77481937408
speed: 12.4323568344
id: 0
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:208


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.634660482406616, -53.367977142333984, 4.723998546600342, 13.750828742980957)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -3.2715742588
y: 2.09293699265
theta: 2.77481937408
speed: 12.4323568344
id: 0
t: 208
1546688119948
xxx after upd5864716
id: 1
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:206




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.42733550072
y: -52.3356323242
theta: 4.75750207901
speed: 14.0405864716
id: 1
t: 206
1546688119808
xxx after update is x: -3.49786996841
y: -52.7201728821
theta: 4.82186794281
speed: 14.0294446945
id: 1
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:207


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:208


xxx before update is x: -3.49786996841
y: -52.7201728821
theta: 4.82186794281
speed: 14.0294446945
id: 1
t: 207
1546688119877
xxx after update is x: -3.63466048241
y: -53.3679771423
theta: 4.7239985466
speed: 13.750828743
id: 1
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.46719999999999806]
222 self.state_dicts[msg.id][msg.t] is (-3.2715742588043213, 2.0929369926452637, 2.7748193740844727, 12.432356834411621)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -3.63466048241
y: -53.3679771423
theta: 4.7239985466
speed: 13.750828743
id: 1
t: 208
1546688119940
xxx after update is x: -2.99732756615
y: -53.8087081909
theta: 4.72219228745
speed: 14.0214729309
id: 1
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -2.99732756615
y: -53.8087081909
theta: 4.72219228745
speed: 14.0214729309
id: 1
t: 209
1546688120002
xxx after update is x: -3.04991436005
y: -54.630645752
theta: 4.57943296432
speed: 13.8438711166
id: 1
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.33333333333






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:211


xxx before update is x: -3.04991436005
y: -54.630645752
theta: 4.57943296432
speed: 13.8438711166
id: 1
t: 210
1546688120082
xxx after update is x: -3.42453193665
y: -55.1431999207
theta: 4.86806249619
speed: 14.0586853027
id: 1
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiate is x: -4.12478065491
y: 2.39480805397
theta: 2.86266994476
speed: 12.8443756104
id: 0
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -4.12478065491
y: 2.39480805397
theta: 2.86266994476
speed: 12.8443756104
id: 0
t: 209
1546688120005
xxx after update is x: -4.12764358521
y: 2.84785699844
theta: 2.78381085396
speed: 12.6107215881
id: 0
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:211


xxx before update is x: -4.12764358521
y: 2.84785699844
theta: 2.78381085396
speed: 12.6107215881
id: 0
t: 210
1546688120072
xxx after update is x: -4.67946910858
y: 3.3107624054
theta: 2.94104838371
speed: 13.4227781296
id: 0
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.37777777778






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:212


xxx before update is x: -4.67946910858
y: 3.3107624054
theta: 2.94104838371
speed: 13.4227781296
id: 0
t: 211
1546688120141
xxx after update is x: -5.60679626465
y: 3.1780693531
theta: 2.96923160553
speed: 13.2634553909
id: 0
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.240936279296875, -55.92176055908203, 4.560564041137695, 13.883037567138672)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -5.60679626465
y: 3.1780693531
theta: 2.96923160553
speed: 13.2634553909
id: 0
t: 212
1546688120210
xxx after update is x: -5.90050363541
y: 2.90280628204
theta: 3.06425666809
speed: 13.5256872177
id: 0
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:214


xxx before update is x: -5.90050363541
y: 2.90280628204
theta: 3.06425666809
speed: 13.5256872177
id: 0
t: 213
1546688120281
xxx after update is x: -6.34575653076
y: 3.98851275444
theta: 2.99626994133
speed: 14.0479516983
id: 0
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:215


xxx before update is x: -6.34575653076
y: 3.98851275444
theta: 2.99626994133
speed: 14.0479516983
id: 0
t: 214
1546688120338
xxx after update is x: -6.62395095825
y: 2.92607474327
theta: 3.12877058983
speed: 13.9791307449
id: iiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:212


xxx before update is x: -3.42453193665
y: -55.1431999207
theta: 4.86806249619
speed: 14.0586853027
id: 1
t: 211
1546688120136
xxx after update is x: -3.2409362793
y: -55.9217605591
theta: 4.56056404114
speed: 13.8830375671
id: 1
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4639999999999981]
222 self.state_dicts[msg.id][msg.t] is (-5.6067962646484375, 3.1780693531036377, 2.969231605529785, 13.263455390930176)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.2409362793
y: -55.9217605591
theta: 4.56056404114
speed: 13.8830375671
id: 1
t: 212
1546688120220
xxx after update is x: -3.50511336327
y: -56.7789344788
theta: 4.72998094559
speed: 14.0985822678
id: 1
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:213




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:214


xxx before update is x: -3.50511336327
y: -56.7789344788
theta: 4.72998094559
speed: 14.0985822678
id: 1
t: 213
1546688120271
xxx after update is x: -3.51247143745
y: -56.9925575256
theta: 4.75173616409
speed: 13.8248968124
id: 1
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5279999999999987]
222 self.state_dicts[msg.id][msg.t] is (-6.345756530761719, 3.9885127544403076, 2.996269941329956, 14.047951698303223)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.51247143745
y: -56.9925575256
theta: 4.75173616409
speed: 13.8248968124
id: 1
t: 214
1546688120338
xxx after update is x: -3.53604626656
y: -57.4843254089
theta: 4.82913303375
speed: 13.6550893784
id: 1
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:215




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:216


xxx before update is x: -3.53604626656
y: -57.4843254089
theta: 4.82913303375
speed: 13.6550893784
id: 1
t: 215
1546688120411
xxx after update is x: -2.88886213303
y: -58.1612854004
theta: 4.53754663467
speed: 13.9762601852
id: 1
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48479999999999795]
222 self.state_dicts[msg.id][msg.t] is (-8.364516258239746, 4.081151962280273, 2.926560878753662, 14.15838623046875)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:217


xxx before update is x: -2.88886213303
y: -58.1612854004
theta: 4.53754663467
speed: 13.9762601852
id: 1
t: 216
1546688120473
xxx after update is x: -3.22858667374
y: -58.9811172485
theta: 4.64272260666
speed: 13.4682321548
id: 1
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:218


xxx before update is x: -3.22858667374
y: -58.9811172485
theta: 4.64272260666
speed: 13.4682321548
id: 1
t: 217
1546688120541
xxx after update is x: -3.1388502121
y: -59.1722755432
theta: 4.65321683884
speed: 13.8178548813
id: 1
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.68888888889






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -3.1388502121
y: -59.1722755432
theta: 4.65321683884
speed: 13.8178548813
id: 1
t: 218
1546688120604
xxx after update is x: -4.13762617111
y: -59.8338241577
theta: 4.68258905411
speed: 14.1247444153
id: 1
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48799999999999794]
222 self.state_dicts[msg.id][msg.t] is (-9.650754928588867, 3.7790560722351074, 3.163668632507324, 13.786253929138184)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
current clock is 9.73333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 9.73333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '9.73333333333', 'Position': ['(-9.650754928588867', ' 3.7790560722351074', ' 3.163668632507324)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,9.73333333333,(-9.650754928588867, 3.7790560722351074, 3.163668632507324),13,1,2.53333333333,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:220


xxx before update is x: -4.13762617111
y: -59.8338241577
theta: 4.68258905411
speed: 14.1247444153
id: 1
t: 219
1546688120683
xxx after update is x: -3.57072114944
y: -60.6009674072
theta: 4.60179328918
speed: 13.8185920715
id: 1
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times s0
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:216


xxx before update is x: -6.62395095825
y: 2.92607474327
theta: 3.12877058983
speed: 13.9791307449
id: 0
t: 215
1546688120416
xxx after update is x: -8.36451625824
y: 4.08115196228
theta: 2.92656087875
speed: 14.1583862305
id: 0
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:217


xxx before update is x: -8.36451625824
y: 4.08115196228
theta: 2.92656087875
speed: 14.1583862305
id: 0
t: 216
1546688120472
xxx after update is x: -8.5552854538
y: 3.52291846275
theta: 3.15545296669
speed: 13.8135538101
id: 0
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2285866737365723, -58.981117248535156, 4.6427226066589355, 13.468232154846191)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:218


xxx before update is x: -8.5552854538
y: 3.52291846275
theta: 3.15545296669
speed: 13.8135538101
id: 0
t: 217
1546688120546
xxx after update is x: -9.42186069489
y: 3.53170990944
theta: 3.00221204758
speed: 14.0124368668
id: 0
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -9.42186069489
y: 3.53170990944
theta: 3.00221204758
speed: 14.0124368668
id: 0
t: 218
1546688120608
xxx after update is x: -9.65075492859
y: 3.77905607224
theta: 3.16366863251
speed: 13.7862539291
id: 0
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.73333333333






self.maneuver_requested left
RELEASE,0,9.73333333333,(-9.650754928588867, 3.7790560722351074, 3.163668632507324),13,1,2.53333333333,0
maneuver_negotiatir.py start the update_agent_message
current clock is 9.73333333333
self.communication_details == 0
sending RELEASE,0,9.73333333333,(-9.650754928588867, 3.7790560722351074, 3.163668632507324),13,1,2.53333333333,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:220


xxx before update is x: -9.65075492859
y: 3.77905607224
theta: 3.16366863251
speed: 13.7862539291
id: 0
t: 219
1546688120674
xxx after update is x: -10.3584709167
y: 3.5300693512
theta: 3.26746273041
speed: 14.2855234146
id: 0
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogopin:221

xxx before update is x: -3.57072114944
y: -60.6009674072
theta: 4.60179328918
speed: 13.8185920715
id: 1
t: 220
1546688120737
xxx after update is x: -3.19035363197
y: -60.6152992249
theta: 4.64044189453
speed: 14.2121953964
id: 1
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:222


xxx before update is x: -3.19035363197
y: -60.6152992249
theta: 4.64044189453
speed: 14.2121953964
id: 1
t: 221
1546688120803
xxx after update is x: -3.56005167961
y: -61.7582168579
theta: 4.70132923126
speed: 14.0816230774
id: 1
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5215999999999985]
222 self.state_dicts[msg.id][msg.t] is (-11.761184692382812, 3.520988941192627, 3.0734431743621826, 13.939432144165039)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -3.56005167961
y: -61.7582168579
theta: 4.70132923126
speed: 14.0816230774
id: 1
t: 222
1546688120872
xxx after update is x: -3.42347502708
y: -62.7699050903
theta: 4.73959350586
speed: 13.5879487991
id: 1
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:224


xxx before update is x: -3.42347502708
y: -62.7699050903
theta: 4.73959350586
speed: 13.5879487991
id: 1
t: 223
1546688120947
xxx after update is x: -3.58276581764
y: -63.2380409241
theta: 4.7408657074
speed: 13.6072473526
id: 1
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.58276581764
y: -63.2380409241
theta: 4.7408657074
speed: 13.6072473526
id: 1
t: 224
1546688121010
xxx after update is x: -2.80985426903
y: -63.9513664246
theta: 4.53647994995
speed: 13.9438419342
id: 1
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:225


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.473599999999998]
222 self.state_dicts[msg.id][msg.t] is (-13.162432670593262, 3.5941896438598633, 2.968916416168213, 13.840108871459961)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:226


xxx before update is x: -2.80985426903
y: -63.9513664246
theta: 4.53647994995
speed: 13.9438419342
id: 1
t: 225
1546688121078
xxx after update is x: -3.11684155464
y: -64.6547317505
theta: 4.68190479279
speogogoogo
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -10.3584709167
y: 3.5300693512
theta: 3.26746273041
speed: 14.2855234146
id: 0
t: 220
1546688120742
xxx after update is x: -10.9920310974
y: 2.84394288063
theta: 3.29680848122
speed: 13.6590280533
id: 0
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:222


xxx before update is x: -10.9920310974
y: 2.84394288063
theta: 3.29680848122
speed: 13.6590280533
id: 0
t: 221
1546688120811
xxx after update is x: -11.7611846924
y: 3.52098894119
theta: 3.07344317436
speed: 13.9394321442
id: 0
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.560051679611206, -61.758216857910156, 4.701329231262207, 14.081623077392578)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -11.7611846924
y: 3.52098894119
theta: 3.07344317436
speed: 13.9394321442
id: 0
t: 222
1546688120873
xxx after update is x: -12.5361652374
y: 3.31699514389
theta: 3.05112838745
speed: 13.9317817688
id: 0
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:224


xxx before update is x: -12.5361652374
y: 3.31699514389
theta: 3.05112838745
speed: 13.9317817688
id: 0
t: 223
1546688120937
xxx after update is x: -11.8858642578
y: 3.50265336037
theta: 3.08445334435
speed: 14.0655708313
id: 0
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -11.8858642578
y: 3.50265336037
theta: 3.08445334435
speed: 14.0655708313
id: 0
t: 224
1546688121009
xxx after update is x: -13.1624326706
y: 3.59418964386
theta: 2.96891641617
speed: 13.8401088715
id: 0
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:225




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -13.1624326706
y: 3.59418964386
theta: 2.96891641617
speed: 13.8401088715
id: 0
t: 225
1546688121084
xxx after update is x: -13.3796329498
y: 3.5714097023
theta: 3.16976213455
speed: 13.9532489777
id: 0
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:226


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1168415546417236, -64.65473175048828, 4.6819047927856445, 13.858434677124023)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the ed: 13.8584346771
id: 1
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.0444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -3.11684155464
y: -64.6547317505
theta: 4.68190479279
speed: 13.8584346771
id: 1
t: 226
1546688121142
xxx after update is x: -2.80053734779
y: -64.7577667236
theta: 4.68950366974
speed: 14.0432014465
id: 1
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 10.0888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 10.0888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '10.0888888889', 'Position': ['(-14.833287239074707', ' 3.793264150619507', ' 3.304056406021118)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,10.0888888889,(-14.833287239074707, 3.793264150619507, 3.304056406021118),13,1,2.53333333333,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:228


xxx before update is x: -2.80053734779
y: -64.7577667236
theta: 4.68950366974
speed: 14.0432014465
id: 1
t: 227
1546688121207
xxx after update is x: -3.27530145645
y: -66.4504013062
theta: 4.71859121323
speed: 13.8912220001
id: 1
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -3.27530145645
y: -66.4504013062
theta: 4.71859121323
speed: 13.8912220001
id: 1
t: 228
1546688121277
xxx after update is x: -3.33448767662
y: -66.3015594482
theta: 4.71058368683
speed: 13.9295377731
id: 1
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5183999999999984]
222 self.state_dicts[msg.id][msg.t] is (-16.42959976196289, 3.3522934913635254, 2.987614870071411, 13.60702133178711)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -3.33448767662
y: -66.3015594482
theta: 4.71058368683
speed: 13.9295377731
id: 1
t: 229
1546688121346
xxx after update is x: -2.94533634186
y: -67.5363845825
theta: 4.65512466431
speed: 13.8033771515
id: 1
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiupdate function xxx before update is x: -13.3796329498
y: 3.5714097023
theta: 3.16976213455
speed: 13.9532489777
id: 0
t: 226
1546688121146
xxx after update is x: -14.8332872391
y: 3.79326415062
theta: 3.30405640602
speed: 13.8922815323
id: 0
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:227


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.0888888889






self.maneuver_requested left
RELEASE,0,10.0888888889,(-14.833287239074707, 3.793264150619507, 3.304056406021118),13,1,2.53333333333,0
maneuver_negotiatir.py start the update_agent_message
current clock is 10.0888888889
self.communication_details == 0
sending RELEASE,0,10.0888888889,(-14.833287239074707, 3.793264150619507, 3.304056406021118),13,1,2.53333333333,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -14.8332872391
y: 3.79326415062
theta: 3.30405640602
speed: 13.8922815323
id: 0
t: 227
1546688121220
xxx after update is x: -14.7691745758
y: 3.21767306328
theta: 3.20820188522
speed: 14.1710062027
id: 0
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:228




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -14.7691745758
y: 3.21767306328
theta: 3.20820188522
speed: 14.1710062027
id: 0
t: 228
1546688121273
xxx after update is x: -16.429599762
y: 3.35229349136
theta: 2.98761487007
speed: 13.6070213318
id: 0
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -16.429599762
y: 3.35229349136
theta: 2.98761487007
speed: 13.6070213318
id: 0
t: 229
1546688121342
xxx after update is x: -16.6192493439
y: 3.3801548481
theta: 3.35354232788
speed: 14.0021095276
id: 0
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.94533634185791, -67.53638458251953, 4.655124664306641, 13.803377151489258)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:231


xxx before update is x: -16.6192493439
y: 3.3801548481
theta: 3.35354232788
speed: 14.0021095276
id: 0
t: 230
1546688121410
xxx after update is x: -16.8619060516
y: 3.06884551048
theta: 3.07617712021
speed: 13.9544668198
id: 0
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:232


xxx before update is x: -16.8619060516
y: 3.06884551048
theta: 3.07617712021
speed: 13.9544668198
id: 0
t: 231
1546688121473
xxx after update is x: -17.6106472015
y: 3.09490442276
theta: 3.19376587868
speed: 13.70iiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.94533634186
y: -67.5363845825
theta: 4.65512466431
speed: 13.8033771515
id: 1
t: 230
1546688121409
xxx after update is x: -2.90832042694
y: -67.306312561
theta: 4.83869695663
speed: 13.9130153656
id: 1
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:231


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:232


xxx before update is x: -2.90832042694
y: -67.306312561
theta: 4.83869695663
speed: 13.9130153656
id: 1
t: 231
1546688121485
xxx after update is x: -3.16037631035
y: -68.6284103394
theta: 4.71010780334
speed: 13.7666826248
id: 1
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.473599999999998]
222 self.state_dicts[msg.id][msg.t] is (-17.610647201538086, 3.0949044227600098, 3.193765878677368, 13.701593399047852)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -3.16037631035
y: -68.6284103394
theta: 4.71010780334
speed: 13.7666826248
id: 1
t: 232
1546688121540
xxx after update is x: -3.52596688271
y: -69.0054321289
theta: 4.72607088089
speed: 13.8888607025
id: 1
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.52596688271
y: -69.0054321289
theta: 4.72607088089
speed: 13.8888607025
id: 1
t: 233
1546688121603
xxx after update is x: -2.84403657913
y: -69.5670318604
theta: 4.79005670547
speed: 13.6004934311
id: 1
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:234


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.4






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:235


Received -->>: 
current clock is 10.4




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 10.4
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '10.4', 'Position': ['(-18.638994216918945', ' 3.4020864963531494', ' 3.257108688354492)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,10.4,(-18.638994216918945, 3.4020864963531494, 3.257108688354492),13,1,2.53333333333,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




xxx before update is x: -2.84403657913
y: -69.5670318604
theta: 4.79005670547
speed: 13.6004934311
id: 1
t: 234
15466881593399
id: 0
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -17.6106472015
y: 3.09490442276
theta: 3.19376587868
speed: 13.701593399
id: 0
t: 232
1546688121547
xxx after update is x: -18.7734031677
y: 2.88747000694
theta: 3.10608315468
speed: 14.253364563
id: 0
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:233




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -18.7734031677
y: 2.88747000694
theta: 3.10608315468
speed: 14.253364563
id: 0
t: 233
1546688121607
xxx after update is x: -18.6389942169
y: 3.40208649635
theta: 3.25710868835
speed: 13.5465717316
id: 0
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.4






self.maneuver_requested left
RELEASE,0,10.4,(-18.638994216918945, 3.4020864963531494, 3.257108688354492),13,1,2.53333333333,0
maneuver_negotiatir.py start the update_agent_message
current clock is 10.4
self.communication_details == 0
sending RELEASE,0,10.4,(-18.638994216918945, 3.4020864963531494, 3.257108688354492),13,1,2.53333333333,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.84403657913208, -69.56703186035156, 4.7900567054748535, 13.600493431091309)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -18.6389942169
y: 3.40208649635
theta: 3.25710868835
speed: 13.5465717316
id: 0
t: 234
1546688121677
xxx after update is x: -18.9894447327
y: 3.01990628242
theta: 3.09771800041
speed: 13.7085294724
id: 0
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:236


xxx before update is x: -18.9894447327
y: 3.01990628242
theta: 3.09771800041
speed: 13.7085294724
id: 0
t: 235
1546688121741
xxx after update is x: -21.0488262177
y: 3.41469573975
theta: 3.01307916641
speed: 13.9785270691
id: 0
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -21.0488262177
y: 3.41469573975
theta: 3.01307916641
speed: 13.9785270691
id: 0
t: 236
1546688121810
xxx after update is x: -20.5303726196
y: 3.23587298393
theta: 3.24054908752
speed: 13.6846437454
id: 0
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the up121672
xxx after update is x: -3.18008732796
y: -69.6772766113
theta: 4.67352056503
speed: 13.8577127457
id: 1
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48639999999999795]
222 self.state_dicts[msg.id][msg.t] is (-18.989444732666016, 3.0199062824249268, 3.0977180004119873, 13.708529472351074)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:236


xxx before update is x: -3.18008732796
y: -69.6772766113
theta: 4.67352056503
speed: 13.8577127457
id: 1
t: 235
1546688121739
xxx after update is x: -2.98207974434
y: -70.2104034424
theta: 4.62730073929
speed: 13.677567482
id: 1
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -2.98207974434
y: -70.2104034424
theta: 4.62730073929
speed: 13.677567482
id: 1
t: 236
1546688121805
xxx after update is x: -3.5673353672
y: -70.8263549805
theta: 4.72378015518
speed: 13.7856731415
id: 1
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (-20.530372619628906, 3.235872983932495, 3.240549087524414, 13.684643745422363)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -3.5673353672
y: -70.8263549805
theta: 4.72378015518
speed: 13.7856731415
id: 1
t: 237
1546688121869
xxx after update is x: -3.67021489143
y: -72.0633544922
theta: 4.78293848038
speed: 13.655500412
id: 1
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:239


xxx before update is x: -3.67021489143
y: -72.0633544922
theta: 4.78293848038
speed: 13.655500412
id: 1
t: 238
1546688121942
xxx after update is x: -3.48086690903
y: -71.8793106079
theta: 4.79968690872
speed: 14.0128583908
id: 1
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:240


xxx before update is x: -3.48086690903
y: -71.8793106079
theta: 4.79968690872
speed: 14.0128583908
id: 1
t: 239
1546688122003
xxx after update is x: -3.31859946251
y: -73.0160598755
theta: 4.79261445999
speed: 13.7599382401
id: 1
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**date function xxx before update is x: -20.5303726196
y: 3.23587298393
theta: 3.24054908752
speed: 13.6846437454
id: 0
t: 237
1546688121872
xxx after update is x: -21.4504966736
y: 3.35051083565
theta: 2.97950720787
speed: 14.0718536377
id: 0
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:238


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.670214891433716, -72.0633544921875, 4.782938480377197, 13.655500411987305)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:239


xxx before update is x: -21.4504966736
y: 3.35051083565
theta: 2.97950720787
speed: 14.0718536377
id: 0
t: 238
1546688121945
xxx after update is x: -22.1762008667
y: 2.80534720421
theta: 3.08988714218
speed: 14.0591373444
id: 0
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:240


xxx before update is x: -22.1762008667
y: 2.80534720421
theta: 3.08988714218
speed: 14.0591373444
id: 0
t: 239
1546688122013
xxx after update is x: -22.3987751007
y: 3.43044447899
theta: 3.02058720589
speed: 13.6886482239
id: 0
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:241


xxx before update is x: -22.3987751007
y: 3.43044447899
theta: 3.02058720589
speed: 13.6886482239
id: 0
t: 240
1546688122074
xxx after update is x: -23.458234787
y: 3.26702928543
theta: 3.08349490166
speed: 13.7054080963
id: 0
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -23.458234787
y: 3.26702928543
theta: 3.08349490166
speed: 13.7054080963
id: 0
t: 241
1546688122143
xxx after update is x: -23.7386646271
y: 3.57792592049
theta: 3.2386469841
speed: 14.2409706116
id: 0
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2951982021331787, -74.78498077392578, 4.639405250549316, 13.732149124145508)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.7555555556






self.maneuver_requested left
RELEASE,0,10.7555555556,(-23.738664627075195, 3.57792592048645, 3.238646984100342),14,1,2.53333333333,0
maneuver_negotiatir.py start the update_agent_message
current clock is 10.7555555556
self.communication_details == 0
sending RELEASE,0,10.7555555556,(-23.738664627075195, 3.57792592048645, 3.238646984100342),14,1,2.53333333333,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx befor********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (-22.398775100708008, 3.4304444789886475, 3.020587205886841, 13.688648223876953)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.31859946251
y: -73.0160598755
theta: 4.79261445999
speed: 13.7599382401
id: 1
t: 240
1546688122081
xxx after update is x: -3.09464406967
y: -73.8584823608
theta: 4.53488206863
speed: 13.9882164001
id: 1
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:241




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -3.09464406967
y: -73.8584823608
theta: 4.53488206863
speed: 13.9882164001
id: 1
t: 241
1546688122148
xxx after update is x: -3.29519820213
y: -74.7849807739
theta: 4.63940525055
speed: 13.7321491241
id: 1
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.7555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 10.7555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 10.7555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '10.7555555556', 'Position': ['(-23.738664627075195', ' 3.57792592048645', ' 3.238646984100342)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,10.7555555556,(-23.738664627075195, 3.57792592048645, 3.238646984100342),14,1,2.53333333333,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:243


xxx before update is x: -3.29519820213
y: -74.7849807739
theta: 4.63940525055
speed: 13.7321491241
id: 1
t: 242
1546688122206
xxx after update is x: -3.0908536911
y: -74.91771698
theta: 4.66797685623
speed: 13.7635650635
id: 1
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.479999999999998]
222 self.state_dicts[msg.id][msg.t] is (-24.926490783691406, 3.527909278869629, 3.2861621379852295, 13.601258277893066)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:244


xxx before update is x: -3.0908536911
y: -74.91771698
theta: 4.66797685623
speed: 13.7635650635
id: 1
t: 243
1546688122272
xxx after update is x: -3.70440626144
y: -75.4609222412
theta: 4.53577184677
speed: 13.5843296051
id: 1
t: 244e update is x: -23.7386646271
y: 3.57792592049
theta: 3.2386469841
speed: 14.2409706116
id: 0
t: 242
1546688122210
xxx after update is x: -24.9264907837
y: 3.52790927887
theta: 3.28616213799
speed: 13.6012582779
id: 0
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:243




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:244


xxx before update is x: -24.9264907837
y: 3.52790927887
theta: 3.28616213799
speed: 13.6012582779
id: 0
t: 243
1546688122277
xxx after update is x: -24.6368980408
y: 3.05539321899
theta: 3.20296406746
speed: 13.9575185776
id: 0
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:245


xxx before update is x: -24.6368980408
y: 3.05539321899
theta: 3.20296406746
speed: 13.9575185776
id: 0
t: 244
1546688122354
xxx after update is x: -25.8269824982
y: 3.14201378822
theta: 3.06350803375
speed: 13.583694458
id: 0
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:246


xxx before update is x: -25.8269824982
y: 3.14201378822
theta: 3.06350803375
speed: 13.583694458
id: 0
t: 245
1546688122412
xxx after update is x: -26.4596004486
y: 2.81911993027
theta: 3.11117076874
speed: 13.7938957214
id: 0
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.842822551727295, -76.2406997680664, 4.684185028076172, 14.06439208984375)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -26.4596004486
y: 2.81911993027
theta: 3.11117076874
speed: 13.7938957214
id: 0
t: 246
1546688122476
xxx after update is x: -27.3383674622
y: 3.25934410095
theta: 3.04423904419
speed: 14.1416454315
id: 0
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -27.3383674622
y: 3.25934410095
theta: 3.04423904419
speed: 14.1416454315
id: 0
t: 247
1546688122547
xxx after update is x: -27.0697727203
y: 3.64107608795
theta: 3.07676053047
speed: 13.7685861588
id: 0
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -27.0697727203
y: 3.64107608795
theta: 3.07676053047
speed: 13.7685861588
id: 0
t: 248
1546688122608
xxx after update is x: -27.9391918182
y: 3.02480530739
theta: 3.01700115204
speed: 13.8310127258
id: 0
t: 249
mane
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:245


xxx before update is x: -3.70440626144
y: -75.4609222412
theta: 4.53577184677
speed: 13.5843296051
id: 1
t: 244
1546688122339
xxx after update is x: -3.35684585571
y: -75.5343322754
theta: 4.71632194519
speed: 13.8728876114
id: 1
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:246


xxx before update is x: -3.35684585571
y: -75.5343322754
theta: 4.71632194519
speed: 13.8728876114
id: 1
t: 245
1546688122419
xxx after update is x: -3.84282255173
y: -76.2406997681
theta: 4.68418502808
speed: 14.0643920898
id: 1
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -3.84282255173
y: -76.2406997681
theta: 4.68418502808
speed: 14.0643920898
id: 1
t: 246
1546688122470
xxx after update is x: -3.25579190254
y: -77.1626052856
theta: 4.67278385162
speed: 13.8701591492
id: 1
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.25579190254
y: -77.1626052856
theta: 4.67278385162
speed: 13.8701591492
id: 1
t: 247
1546688122553
xxx after update is x: -3.63476967812
y: -78.0303573608
theta: 4.68197011948
speed: 13.7951908112
id: 1
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:248


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5199999999999985]
222 self.state_dicts[msg.id][msg.t] is (-27.069772720336914, 3.64107608795166, 3.0767605304718018, 13.768586158752441)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.63476967812
y: -78.0303573608
theta: 4.68197011948
speed: 13.7951908112
id: 1
t: 248
1546688122608
xxx after update is x: -2.8988263607
y: -78.4440689087
theta: 4.89522171021
speed: 13.8870706558
id: 1
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:249


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.0666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function  xxx before update is x: -2.8988263607
y: -78.4440689087
theta: 4.89522171021
speed: 13.8870706558
id: 1
t: 249
1546688122674
xxx after update is x: -3.08053803444
y: -78.7566680908
theta: 4.78316879272
speed: 13.8440475464
id: 1
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:250


Received -->>: 
current clock is 11.1111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 11.1111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '11.1111111111', 'Position': ['(-28.427093505859375', ' 3.4309303760528564', ' 3.0099945068359375)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,11.1111111111,(-28.427093505859375, 3.4309303760528564, 3.0099945068359375),13,1,2.53333333333,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4895999999999979]
222 self.state_dicts[msg.id][msg.t] is (-28.427093505859375, 3.4309303760528564, 3.0099945068359375, 13.894601821899414)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.08053803444
y: -78.7566680908
theta: 4.78316879272
speed: 13.8440475464
id: 1
t: 250
1546688122743
xxx after update is x: -2.36882472038
y: -79.4504623413
theta: 4.79392004013
speed: 14.2051391602
id: 1
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:251




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.36882472038
y: -79.4504623413
theta: 4.79392004013
speed: 14.2051391602
id: 1
t: 251
1546688122807
xxx after update is x: -2.81695914268
y: -80.4398422241
theta: 4.87349081039
speed: 14.0671548843
id: 1
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:252




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:253


xxx before update is x: -2.81695914268
y: -80.4398422241
theta: 4.87349081039
speed: 14.0671548843
id: 1
t: 252
1546688122871
xxx after update is x: -3.40968251228
y: -80.6125488281
theta: 4.61218070984
speed: 13.8753271103
id: 1
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.47199999999999803]
222 self.state_dicts[msg.id][msg.t] is (-30.438596725463867, 2.999643087387085, 3.2488110065460205, 14.016276359558105)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:254


xxx before update is x: -3.40968251228
y: -80.6125488281
thetuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:250


xxx before update is x: -27.9391918182
y: 3.02480530739
theta: 3.01700115204
speed: 13.8310127258
id: 0
t: 249
1546688122678
xxx after update is x: -28.4270935059
y: 3.43093037605
theta: 3.00999450684
speed: 13.8946018219
id: 0
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.1111111111






self.maneuver_requested left
RELEASE,0,11.1111111111,(-28.427093505859375, 3.4309303760528564, 3.0099945068359375),13,1,2.53333333333,0
maneuver_negotiatir.py start the update_agent_message
current clock is 11.1111111111
self.communication_details == 0
sending RELEASE,0,11.1111111111,(-28.427093505859375, 3.4309303760528564, 3.0099945068359375),13,1,2.53333333333,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -28.4270935059
y: 3.43093037605
theta: 3.00999450684
speed: 13.8946018219
id: 0
t: 250
1546688122745
xxx after update is x: -30.0135288239
y: 3.09348654747
theta: 3.14051270485
speed: 13.7183036804
id: 0
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:251


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.3688247203826904, -79.4504623413086, 4.793920040130615, 14.20513916015625)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:252


xxx before update is x: -30.0135288239
y: 3.09348654747
theta: 3.14051270485
speed: 13.7183036804
id: 0
t: 251
1546688122808
xxx after update is x: -30.0940265656
y: 3.03324747086
theta: 3.22857952118
speed: 13.6708984375
id: 0
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -30.0940265656
y: 3.03324747086
theta: 3.22857952118
speed: 13.6708984375
id: 0
t: 252
1546688122881
xxx after update is x: -30.4385967255
y: 2.99964308739
theta: 3.24881100655
speed: 14.0162763596
id: 0
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:253




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -30.4385967255
y: 2.99964308739
theta: 3.24881100655
speed: 14.0162763596
id: 0
t: 253
1546688122945
xxx after update is x: -31.3462142944
y: 3.61691188812
theta: 3.15504360199
speed: 13.6290206909
id: 0
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:254


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.028414726257324, -82.20220947265625, 4.66408634185791, 13.897849082946777)
if we have all measurements for a certain time-stamp perfora: 4.61218070984
speed: 13.8753271103
id: 1
t: 253
1546688122943
xxx after update is x: -3.02841472626
y: -82.2022094727
theta: 4.66408634186
speed: 13.8978490829
id: 1
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:255


xxx before update is x: -3.02841472626
y: -82.2022094727
theta: 4.66408634186
speed: 13.8978490829
id: 1
t: 254
1546688123009
xxx after update is x: -3.54599618912
y: -82.6100311279
theta: 4.85276842117
speed: 13.4831705093
id: 1
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:256


xxx before update is x: -3.54599618912
y: -82.6100311279
theta: 4.85276842117
speed: 13.4831705093
id: 1
t: 255
1546688123077
xxx after update is x: -2.97338604927
y: -83.1069107056
theta: 4.64152479172
speed: 13.7373428345
id: 1
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 0.49919999999999787]
222 self.state_dicts[msg.id][msg.t] is (-32.85435104370117, 3.2112343311309814, 3.237943410873413, 14.312453269958496)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.3777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 11.3777777778




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 11.3777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '11.3777777778', 'Position': ['(-32.85435104370117', ' 3.2112343311309814', ' 3.237943410873413)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,11.3777777778,(-32.85435104370117, 3.2112343311309814, 3.237943410873413),14,1,2.53333333333,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.505599999999998]
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.3777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 11.3777777778




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 11.3777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '11.3777777778', 'Position': ['(-32.85435104370117', ' 3.2112343311309814', ' 3.237943410873413)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,11.3777777778,(-32.85435104370117, 3.2112343311309814, 3.237943410873413),14,1,2.53333333333,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sm risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -31.3462142944
y: 3.61691188812
theta: 3.15504360199
speed: 13.6290206909
id: 0
t: 254
1546688123011
xxx after update is x: -31.8183479309
y: 3.04471611977
theta: 3.04113554955
speed: 13.7895278931
id: 0
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:255




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
xxx before update is x: -31.8183479309
y: 3.04471611977
theta: 3.04113554955
speed: 13.7895278931
id: 0
t: 255
1546688123078
xxx after update is x: -32.8543510437
y: 3.21123433113
theta: 3.23794341087
speed: 14.31245327
id: 0
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:256


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.3777777778






self.maneuver_requested left
RELEASE,0,11.3777777778,(-32.85435104370117, 3.2112343311309814, 3.237943410873413),14,1,2.53333333333,0
maneuver_negotiatir.py start the update_agent_message
current clock is 11.3777777778
self.communication_details == 0
sending RELEASE,0,11.3777777778,(-32.85435104370117, 3.2112343311309814, 3.237943410873413),14,1,2.53333333333,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.0, 0.0]
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.3777777778






self.maneuver_requested left
RELEASE,0,11.3777777778,(-32.85435104370117, 3.2112343311309814, 3.237943410873413),14,1,2.53333333333,0
maneuver_negotiatir.py start the update_agent_message
current clock is 11.3777777778
self.communication_details == 0
sending RELEASE,0,11.3777777778,(-32.85435104370117, 3.2112343311309814, 3.237943410873413),14,1,2.53333333333,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:257


ender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:257


... logging to /home/lu/.ros/log/eeea4ac6-10dd-11e9-bb7c-000c291801fc/roslaunch-ubuntu-57079.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch
[1mstarted roslaunch server http://ubuntu:42977/[0m

SUMMARY
========

PARAMETERS
 * /enable_negotiator: True
 * /file_prefix: 
 * /nr_cars: 2
 * /plot: False
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /save: False

NODES
  /
    car0 (virtual_blinker/sim.py)
    car1 (virtual_blinker/sim.py)
    cloud (virtual_blinker/cloud.py)
    rviz (rviz/rviz)
    visualization (virtual_blinker/visualization.py)

auto-starting new master
[1mprocess[master]: started with pid [57089][0m
[1mROS_MASTER_URI=http://localhost:11311[0m
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch http://localhost:11311
[1msetting /run_id to eeea4ac6-10dd-11e9-bb7c-000c291801fc[0m
[1mprocess[rosout-1]: started with pid [57105][0m
started core service [/rosout]
[1mprocess[visualization-2]: started with pid [57119][0m
[1mprocess[rviz-3]: started with pid [57121][0m
[1mprocess[car0-4]: started with pid [57129][0m
[1mprocess[car1-5]: started with pid [57130][0m
[1mprocess[cloud-6]: started with pid [57131][0m
[cloud-6] killing on exit
[car1-5] killing on exit
[car0-4] killing on exit
[rviz-3] killing on exit
[visualization-2] killing on exit
[rosout-1] killing on exit
[master] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
[1mdone[0m
