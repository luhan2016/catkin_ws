sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 1
s is car_state0
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 1.68346810341


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:1 


222 self.state_dicts[msg.id][msg.t] is (3.2145466804504395, -74.10831451416016, 1.6632471084594727, 14.145193099975586)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7f674af57f80>
self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f674af7b368>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9001)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:2


222 self.state_dicts[msg.id][msg.t] is (3.6718626022338867, -73.84283447265625, 1.5255746841430664, 13.855424880981445)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:3


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: -2.9531185627
y: 63.006401062
theta: 4.59413909912
speed: 14.1472549438
id: 1
t: 3
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:4


xxx before update is x: -2.9531185627
y: 63.006401062
theta: 4.59413909912
speed: 14.1472549438
id: 1
t: 3
xxx after update is x: -3.25451660156
y: 62.5295143127
theta: 4.7356595993
speed: 14.0099315643
id: 1
t: 4
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:5


xxx before update is x: -3.25451660156
y: 62.5295143127
theta: 4.7356595993
speed: 14.0099315643
id: 1
t: 4
xxx after update is x: -3.26347398758
y: 62.0712242126
theta: 4.69716453552
speed: 13.9743995667
id: 1
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: -3.26347398758
y: 62.0712242126
theta: 4.69716453552
speed: 13.9743995667
id: 1
t: 5
xxx after update is x: -3.00139355659
y: 61.159866333
theta: 4.78464126587
spsim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 0
s is car_state1
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 1.6782310009
222 self.state_dicts[msg.id][msg.t] is (-2.9604296684265137, 64.10610961914062, 4.782834529876709, 14.109540939331055)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:1


222 self.state_dicts[msg.id][msg.t] is (-3.500096321105957, 63.44735336303711, 4.513153553009033, 13.45926284790039)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:2




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:3


222 self.state_dicts[msg.id][msg.t] is (-2.9531185626983643, 63.00640106201172, 4.594139099121094, 14.147254943847656)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7fc3c09efb00>
self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7fc3c0a10878>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:4


maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (-3.2545166015625, 62.52951431274414, 4.735659599304199, 14.009931564331055)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9000)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:5




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: 3.4496922493
y: -71.0950317383
theta: 1.55233120918
speed: 13.7993612289
id: 0
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.4496922493
y: -71.0950317383
theta: 1.55233120918
speed: 13.7993612289
id: 0
t: 6
xxx after update is x: 3.63239359856
y: -70.646697998
theta: 1.47848892212
speed: 13.5390892029
id: 0
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:7




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish theeed: 13.8761434555
id: 1
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3698967367305804, 0.32904536876022267]
222 self.state_dicts[msg.id][msg.t] is (3.4496922492980957, -71.09503173828125, 1.5523312091827393, 13.799361228942871)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:7


xxx before update is x: -3.00139355659
y: 61.159866333
theta: 4.78464126587
speed: 13.8761434555
id: 1
t: 6
xxx after update is x: -3.06457972527
y: 60.976474762
theta: 4.80239915848
speed: 13.882938385
id: 1
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: -3.06457972527
y: 60.976474762
theta: 4.80239915848
speed: 13.882938385
id: 1
t: 7
xxx after update is x: -3.15774583817
y: 59.8220405579
theta: 4.68427467346
speed: 14.0099201202
id: 1
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: -3.15774583817
y: 59.8220405579
theta: 4.68427467346
speed: 14.0099201202
id: 1
t: 8
xxx after update is x: -3.20940995216
y: 59.4250602722
theta: 4.74359798431
speed: 13.6564474106
id: 1
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.4






self.maneuver_requested None
maneuver_negotiatir.py in the lat function
0
self.agents_to_ask is  []
self.D.intersection(self.agents_to_ask)) is  set([])
self.R.intersection(self.D.intersection(self.agents_to_ask)) is  set([])
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.39364220752149853, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2739317417144775, -69.47606658935547, 1.7303731441497803, 14.108183860778809)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: -3.20940995216
y: 59.4250602722
theta: 4.74359798431
speed: 13.6564474106
id: 1
t: 9
xxx after update is x: -3.17023730278
y: 58.9117546082
theta: 4.75196504593
speed: 13.681344986
id: 1
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: -3.17023730278
y: 58.9117546082
theta: 4.75196504593
speed: 13.681344986
id: 1
t: 10
xxx after update is x: -2.96479034424
y: 58.1304779053
theta: 4.70434379578
speed: 13.6753311157
id: 1
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: -2.96479034424
y: 58.1304779053
theta: 4.70434379578
speed: 13.6753311157
id: 1
t: 11
xxx after update is x: -3.06339788437
y: 57.274105072
theta: 4.78637456894
speed: 13.6693401337
id: 1
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion


going to th n times spin:8

xxx before update is x: 3.63239359856
y: -70.646697998
theta: 1.47848892212
speed: 13.5390892029
id: 0
t: 7
xxx after update is x: 3.18141722679
y: -70.3334197998
theta: 1.4902215004
speed: 13.8616514206
id: 0
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion

risk is [0.4121873937489881, 0.36307560041947506]
222 self.state_dicts[msg.id][msg.t] is (-3.157745838165283, 59.82204055786133, 4.684274673461914, 14.009920120239258)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: 3.18141722679
y: -70.3334197998
theta: 1.4902215004
speed: 13.8616514206
id: 0
t: 8
xxx after update is x: 3.27393174171
y: -69.4760665894
theta: 1.73037314415
speed: 14.1081838608
id: 0
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: 3.27393174171
y: -69.4760665894
theta: 1.73037314415
speed: 14.1081838608
id: 0
t: 9
xxx after update is x: 3.0934419632
y: -68.4314422607
theta: 1.61640667915
speed: 13.8901100159
id: 0
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: 3.0934419632
y: -68.4314422607
theta: 1.61640667915
speed: 13.8901100159
id: 0
t: 10
xxx after update is x: 2.84310984612
y: -68.2711715698
theta: 1.61345517635
speed: 13.8668842316
id: 0
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.488888888889






self.maneuver_requested None
maneuver_negotiatir.py in the lat function
0
self.agents_to_ask is  []
self.D.intersection(self.agents_to_ask)) is  set([])
self.R.intersection(self.D.intersection(self.agents_to_ask)) is  set([])
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: 2.84310984612
y: -68.2711715698
theta: 1.61345517635
speed: 13.8668842316
id: 0
t: 11
xxx after update is x: 3.0973739624
y: -67.3388061523
theta: 1.70155024529
speed: 13.7773828506
id: 0
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.4024644746420492, 0.3083840983388906]
222 self.state_dicts[msg.id][msg.t] is (-3.0633978843688965, 57.274105072021484, 4.786374568939209, 13.669340133666992)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: 3.0973739624
y: -67.3388061523
theta: 1.70155024529
speed: 13.7773828506
id: 0
t: 12
xxx after update is x: 3.77180981636
y: -67.3709411621
theta: 1.40632355213
speed: 14.4106998444
id: 0
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: 3.77180981636
y: -67.3709411621
theta: 1.40632355213
speed: 14.4106998444
id: 0
t: 13
xxx after update is x: 3.46078062057
y: -66.3631896973
theta: 1.570725e update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: -3.06339788437
y: 57.274105072
theta: 4.78637456894
speed: 13.6693401337
id: 1
t: 12
xxx after update is x: -2.82463312149
y: 57.4551086426
theta: 4.65165281296
speed: 13.9179811478
id: 1
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.29926379114347684, 0]
222 self.state_dicts[msg.id][msg.t] is (3.7718098163604736, -67.37094116210938, 1.4063235521316528, 14.410699844360352)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: -2.82463312149
y: 57.4551086426
theta: 4.65165281296
speed: 13.9179811478
id: 1
t: 13
xxx after update is x: -3.16244077682
y: 55.9510383606
theta: 4.64098930359
speed: 13.7087697983
id: 1
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: -3.16244077682
y: 55.9510383606
theta: 4.64098930359
speed: 13.7087697983
id: 1
t: 14
xxx after update is x: -3.1198091507
y: 55.5706825256
theta: 4.70737838745
speed: 13.6828279495
id: 1
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: -3.1198091507
y: 55.5706825256
theta: 4.70737838745
speed: 13.6828279495
id: 1
t: 15
xxx after update is x: -2.78274512291
y: 54.7195358276
theta: 4.82298946381
speed: 13.7680807114
id: 1
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.16991316024434233, 0]
222 self.state_dicts[msg.id][msg.t] is (3.014570474624634, -64.85392761230469, 1.6085662841796875, 13.754722595214844)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: -2.78274512291
y: 54.7195358276
theta: 4.82298946381
speed: 13.7680807114
id: 1
t: 16
xxx after update is x: -3.62646555901
y: 54.3168907166
theta: 4.67936944962
speed: 13.7226352692
id: 1
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: -3.62646555901
y: 54.3168907166
theta: 4.67936944962
speed: 13.7226352692
id: 1
t: 17
xxx after update is x: -3.34819245338
y: 53.701007843
theta: 4.6875629425
speed: 13.7396841049
id: 1
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: -3.34819245338
y: 53.701007843
theta: 4.6875629425
speed: 13.7396841049
id: 1
t: 18
xxx after update is x: -2.767111063
y: 52.9063682556
theta: 4.73644638062
speed: 13.4470062256
id: 1
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.2738049866161698, 0]
222 self.state_dicts[msg.id][msg.t] is (3.4955201148986816, -63.16790008532177
speed: 13.9128160477
id: 0
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: 3.46078062057
y: -66.3631896973
theta: 1.57072532177
speed: 13.9128160477
id: 0
t: 14
xxx after update is x: 3.21885824203
y: -65.7784957886
theta: 1.43960893154
speed: 14.0410737991
id: 0
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.21885824203
y: -65.7784957886
theta: 1.43960893154
speed: 14.0410737991
id: 0
t: 15
xxx after update is x: 3.01457047462
y: -64.8539276123
theta: 1.60856628418
speed: 13.7547225952
id: 0
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:16


aaaaaa
risk is [0.40680226585193496, 0.3817067430781473]
222 self.state_dicts[msg.id][msg.t] is (-2.782745122909546, 54.71953582763672, 4.822989463806152, 13.768080711364746)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.01457047462
y: -64.8539276123
theta: 1.60856628418
speed: 13.7547225952
id: 0
t: 16
xxx after update is x: 2.85967135429
y: -64.7428588867
theta: 1.40118956566
speed: 13.9528417587
id: 0
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:17




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: 2.85967135429
y: -64.7428588867
theta: 1.40118956566
speed: 13.9528417587
id: 0
t: 17
xxx after update is x: 3.04995727539
y: -63.8900375366
theta: 1.66319131851
speed: 13.6175117493
id: 0
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: 3.04995727539
y: -63.8900375366
theta: 1.66319131851
speed: 13.6175117493
id: 0
t: 18
xxx after update is x: 3.4955201149
y: -63.1679000854
theta: 1.54901599884
speed: 13.7022886276
id: 0
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: 3.4955201149
y: -63.1679000854
theta: 1.54901599884
speed: 13.7022886276
id: 0
t: 19
xxx after update is x: 3.42043733597
y: -62.7092781067
theta: 1.57097625732
speed: 13.814078331
id: 0
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: 3.42043733597
y: -62.7092781067
theta: 1.57097625732
speed: 13.814078331
id: 0
t: 20
xxx after update is x: 3.15821218491
y: -62.2748260498
theta: 1.67040395737
speed: 13.9227285385
id: 0
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: 3.15821218491
y: -62.2748260498
theta: 1.67040395737
speed: 13.9227285385
id: 0
t: 21
xxx after update is x: 2.93924188614
y: -61.5205726624
theta: 1.5094717741
speed: 13.9061880112
id: 0
t: 22
maneuver_44922, 1.549015998840332, 13.702288627624512)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: -2.767111063
y: 52.9063682556
theta: 4.73644638062
speed: 13.4470062256
id: 1
t: 19
xxx after update is x: -3.00072026253
y: 53.0162239075
theta: 4.63730287552
speed: 14.0302696228
id: 1
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: -3.00072026253
y: 53.0162239075
theta: 4.63730287552
speed: 14.0302696228
id: 1
t: 20
xxx after update is x: -3.06876730919
y: 51.9387130737
theta: 4.70645999908
speed: 13.7562770844
id: 1
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: -3.06876730919
y: 51.9387130737
theta: 4.70645999908
speed: 13.7562770844
id: 1
t: 21
xxx after update is x: -3.6951751709
y: 51.6408615112
theta: 4.88375806808
speed: 13.9719295502
id: 1
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.38543833974507896, 0]
222 self.state_dicts[msg.id][msg.t] is (2.939241886138916, -61.520572662353516, 1.5094717741012573, 13.906188011169434)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: -3.6951751709
y: 51.6408615112
theta: 4.88375806808
speed: 13.9719295502
id: 1
t: 22
xxx after update is x: -2.72659254074
y: 50.7445716858
theta: 4.80392122269
speed: 13.9390325546
id: 1
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: -2.72659254074
y: 50.7445716858
theta: 4.80392122269
speed: 13.9390325546
id: 1
t: 23
xxx after update is x: -3.32653236389
y: 50.1465682983
theta: 4.57759237289
speed: 14.0592079163
id: 1
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: -3.32653236389
y: 50.1465682983
theta: 4.57759237289
speed: 14.0592079163
id: 1
t: 24
xxx after update is x: -2.64643001556
y: 49.9708595276
theta: 4.79934692383
speed: 13.882188797
id: 1
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: -2.64643001556
y: 49.9708595276
theta: 4.79934692383
speed: 13.882188797
id: 1
t: 25
xxx after update is x: -2.96727275848
y: 48.6992492676
theta: 4.79758787155
speed: 13.7321443558
id: 1
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3297865387321292, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2892580032348633, -58.71379089355469, 1.5667039155960083, 13.90916919708252)
if we have all measurements for a certain time-stamp perform rinegotiatir.py finish the update agent state from ros funtion
risk is [0.43210253470168447, 0.31375628002051736]
222 self.state_dicts[msg.id][msg.t] is (-3.6951751708984375, 51.64086151123047, 4.883758068084717, 13.971929550170898)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: 2.93924188614
y: -61.5205726624
theta: 1.5094717741
speed: 13.9061880112
id: 0
t: 22
xxx after update is x: 3.11806774139
y: -60.7221221924
theta: 1.65580689907
speed: 13.9441633224
id: 0
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: 3.11806774139
y: -60.7221221924
theta: 1.65580689907
speed: 13.9441633224
id: 0
t: 23
xxx after update is x: 3.22309041023
y: -60.2845573425
theta: 1.67126858234
speed: 14.0639400482
id: 0
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: 3.22309041023
y: -60.2845573425
theta: 1.67126858234
speed: 14.0639400482
id: 0
t: 24
xxx after update is x: 2.83681249619
y: -59.166179657
theta: 1.48847544193
speed: 13.7794189453
id: 0
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: 2.83681249619
y: -59.166179657
theta: 1.48847544193
speed: 13.7794189453
id: 0
t: 25
xxx after update is x: 3.28925800323
y: -58.7137908936
theta: 1.5667039156
speed: 13.9091691971
id: 0
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: 3.28925800323
y: -58.7137908936
theta: 1.5667039156
speed: 13.9091691971
id: 0
t: 26
xxx after update is x: 3.29885315895
y: -58.5556259155
theta: 1.64877104759
speed: 13.8979082108
id: 0
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3348803928227, 0.4013138109719237]
222 self.state_dicts[msg.id][msg.t] is (-3.504791259765625, 48.307796478271484, 4.70197057723999, 13.658626556396484)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.29885315895
y: -58.5556259155
theta: 1.64877104759
speed: 13.8979082108
id: 0
t: 27
xxx after update is x: 3.4287378788
y: -57.551235199
theta: 1.43258333206
speed: 14.0054187775
id: 0
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:28




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: 3.4287378788
y: -57.551235199
theta: 1.43258333206
speed: 14.0054187775
id: 0
t: 28
xxx after update is x: 2.67952275276
y: -56.6674919128
theta: 1.51179039478
speed: 13.8271045685
id: 0
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n tisk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: -2.96727275848
y: 48.6992492676
theta: 4.79758787155
speed: 13.7321443558
id: 1
t: 26
xxx after update is x: -3.50479125977
y: 48.3077964783
theta: 4.70197057724
speed: 13.6586265564
id: 1
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.50479125977
y: 48.3077964783
theta: 4.70197057724
speed: 13.6586265564
id: 1
t: 27
xxx after update is x: -3.06486916542
y: 47.401008606
theta: 4.67565250397
speed: 14.1169672012
id: 1
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:28




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: -3.06486916542
y: 47.401008606
theta: 4.67565250397
speed: 14.1169672012
id: 1
t: 28
xxx after update is x: -3.54859256744
y: 46.7894096375
theta: 4.70633363724
speed: 14.0143156052
id: 1
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: -3.54859256744
y: 46.7894096375
theta: 4.70633363724
speed: 14.0143156052
id: 1
t: 29
xxx after update is x: -3.46057128906
y: 46.3556900024
theta: 4.82424926758
speed: 14.0053834915
id: 1
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3878771991798293, 0]
222 self.state_dicts[msg.id][msg.t] is (3.350188970565796, -56.68098449707031, 1.5824484825134277, 14.046075820922852)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: -3.46057128906
y: 46.3556900024
theta: 4.82424926758
speed: 14.0053834915
id: 1
t: 30
xxx after update is x: -3.08668613434
y: 45.7685394287
theta: 4.62921094894
speed: 13.9441728592
id: 1
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.08668613434
y: 45.7685394287
theta: 4.62921094894
speed: 13.9441728592
id: 1
t: 31
xxx after update is x: -3.32897281647
y: 44.7340278625
theta: 4.78686666489
speed: 13.6247987747
id: 1
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:32




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: -3.32897281647
y: 44.7340278625
theta: 4.78686666489
speed: 13.6247987747
id: 1
t: 32
xxx after update is x: -3.36244249344
y: 44.4967269897
theta: 4.69594812393
speed: 14.0373477936
id: 1
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: -3.36244249344
y: 44.4967269897
theta: 4.69594812393
speed: 14.0373477936
id: 1
t: 33
xxx after update is x: -2.7924282550mes spin:30

xxx before update is x: 2.67952275276
y: -56.6674919128
theta: 1.51179039478
speed: 13.8271045685
id: 0
t: 29
xxx after update is x: 3.35018897057
y: -56.6809844971
theta: 1.58244848251
speed: 14.0460758209
id: 0
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: 3.35018897057
y: -56.6809844971
theta: 1.58244848251
speed: 14.0460758209
id: 0
t: 30
xxx after update is x: 3.20619916916
y: -56.2403450012
theta: 1.34547483921
speed: 13.702507019
id: 0
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.35531653376303746, 0.3696298988690254]
222 self.state_dicts[msg.id][msg.t] is (-3.086686134338379, 45.76853942871094, 4.629210948944092, 13.944172859191895)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: 3.20619916916
y: -56.2403450012
theta: 1.34547483921
speed: 13.702507019
id: 0
t: 31
xxx after update is x: 2.80259656906
y: -55.304058075
theta: 1.48282563686
speed: 14.0186872482
id: 0
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: 2.80259656906
y: -55.304058075
theta: 1.48282563686
speed: 14.0186872482
id: 0
t: 32
xxx after update is x: 3.15238618851
y: -54.5566368103
theta: 1.46392714977
speed: 13.8163957596
id: 0
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: 3.15238618851
y: -54.5566368103
theta: 1.46392714977
speed: 13.8163957596
id: 0
t: 33
xxx after update is x: 3.2180993557
y: -53.9171447754
theta: 1.49303734303
speed: 13.8934822083
id: 0
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: 3.2180993557
y: -53.9171447754
theta: 1.49303734303
speed: 13.8934822083
id: 0
t: 34
xxx after update is x: 3.51859617233
y: -53.039024353
theta: 1.77784061432
speed: 14.0294370651
id: 0
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: 3.51859617233
y: -53.039024353
theta: 1.77784061432
speed: 14.0294370651
id: 0
t: 35
xxx after update is x: 2.96560239792
y: -51.8521537781
theta: 1.66368675232
speed: 13.7767133713
id: 0
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: 2.96560239792
y: -51.8521537781
theta: 1.66368675232
speed: 13.7767133713
id: 0
t: 36
xxx after update is x: 2.39405918121
y: -52.722076416
theta: 1.61520767212
speed: 14.1619749069
id: 0
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3665422581305052, 0.34067092252321785]
222 self.state_dicts[msg.id][msg.t] is (-3.5369839668273926, 41.97406768798828, 4.696694374084473, 13.801942825317383)
if we have all measurements for a certain time-8
y: 43.7845993042
theta: 4.62840557098
speed: 13.9199991226
id: 1
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3664807953684199, 0]
222 self.state_dicts[msg.id][msg.t] is (3.218099355697632, -53.917144775390625, 1.4930373430252075, 13.893482208251953)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: -2.79242825508
y: 43.7845993042
theta: 4.62840557098
speed: 13.9199991226
id: 1
t: 34
xxx after update is x: -3.16792702675
y: 43.816368103
theta: 4.77166414261
speed: 13.5655975342
id: 1
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: -3.16792702675
y: 43.816368103
theta: 4.77166414261
speed: 13.5655975342
id: 1
t: 35
xxx after update is x: -2.95596909523
y: 43.1488304138
theta: 4.74011564255
speed: 13.9052476883
id: 1
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: -2.95596909523
y: 43.1488304138
theta: 4.74011564255
speed: 13.9052476883
id: 1
t: 36
xxx after update is x: -3.53698396683
y: 41.974067688
theta: 4.69669437408
speed: 13.8019428253
id: 1
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3353232991828793, 0]
222 self.state_dicts[msg.id][msg.t] is (2.394059181213379, -52.722076416015625, 1.6152076721191406, 14.161974906921387)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: -3.53698396683
y: 41.974067688
theta: 4.69669437408
speed: 13.8019428253
id: 1
t: 37
xxx after update is x: -3.74270224571
y: 41.3094787598
theta: 4.78697013855
speed: 13.8748044968
id: 1
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: -3.74270224571
y: 41.3094787598
theta: 4.78697013855
speed: 13.8748044968
id: 1
t: 38
xxx after update is x: -3.63262915611
y: 41.1136245728
theta: 4.81563282013
speed: 14.0666685104
id: 1
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.63262915611
y: 41.1136245728
theta: 4.81563282013
speed: 14.0666685104
id: 1
t: 39
xxx after update is x: -3.32217860222
y: 40.0047531128
theta: 4.70985937119
speed: 14.2315940857
id: 1
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:40




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: -3.32217860222
y: 40.0047531128
theta: 4.70985937119
speed: 14.2315940857
id: 1
t: 40
xxx after update is x: -3.30880999565
y: 39.2167549133
theta: 4.41843414307
speed: 13.5357713699
id: 1
t: 41
maneuver_negotiatir.py finish the stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: 2.39405918121
y: -52.722076416
theta: 1.61520767212
speed: 14.1619749069
id: 0
t: 37
xxx after update is x: 3.30741906166
y: -51.8215255737
theta: 1.60134887695
speed: 13.8272657394
id: 0
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.30741906166
y: -51.8215255737
theta: 1.60134887695
speed: 13.8272657394
id: 0
t: 38
xxx after update is x: 2.8756043911
y: -50.4656486511
theta: 1.53548765182
speed: 13.7637500763
id: 0
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:39




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.8756043911
y: -50.4656486511
theta: 1.53548765182
speed: 13.7637500763
id: 0
t: 39
xxx after update is x: 3.05124187469
y: -50.7278671265
theta: 1.68852555752
speed: 13.9631404877
id: 0
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:40




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: 3.05124187469
y: -50.7278671265
theta: 1.68852555752
speed: 13.9631404877
id: 0
t: 40
xxx after update is x: 3.00387096405
y: -49.7339935303
theta: 1.51547241211
speed: 13.8151063919
id: 0
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.00387096405
y: -49.7339935303
theta: 1.51547241211
speed: 13.8151063919
id: 0
t: 41
xxx after update is x: 3.17123389244
y: -48.9199829102
theta: 1.63030767441
speed: 13.9697055817
id: 0
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:42


aaaaaa
risk is [0.17383250692476543, 0.3751771968401719]
222 self.state_dicts[msg.id][msg.t] is (-3.169182538986206, 39.412620544433594, 4.655717849731445, 14.030470848083496)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: 3.17123389244
y: -48.9199829102
theta: 1.63030767441
speed: 13.9697055817
id: 0
t: 42
xxx after update is x: 3.50623941422
y: -48.2589683533
theta: 1.66970074177
speed: 14.1227827072
id: 0
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: 3.50623941422
y: -48.2589683533
theta: 1.66970074177
speed: 14.1227827072
id: 0
t: 43
xxx after update is x: 3.29753112793
y: -47.7402648926
theta: 1.61526381969
speed: 13.8701162338
id: 0
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: 3.29753112793
y: -47.7402648926
theta: 1.61526381969
speed: 13.8701162338
id: 0
t: 44
xxx after update is x: 3.14945054054
y: -46.8541870117
theta: 1.39959490299
speed: 13.8664522171
id: 0
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: -3.30880999565
y: 39.2167549133
theta: 4.41843414307
speed: 13.5357713699
id: 1
t: 41
xxx after update is x: -3.16918253899
y: 39.4126205444
theta: 4.65571784973
speed: 14.0304708481
id: 1
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4513645678940324, 0]
222 self.state_dicts[msg.id][msg.t] is (3.171233892440796, -48.91998291015625, 1.630307674407959, 13.969705581665039)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: -3.16918253899
y: 39.4126205444
theta: 4.65571784973
speed: 14.0304708481
id: 1
t: 42
xxx after update is x: -2.95098638535
y: 38.2614479065
theta: 4.85178041458
speed: 13.8148088455
id: 1
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: -2.95098638535
y: 38.2614479065
theta: 4.85178041458
speed: 13.8148088455
id: 1
t: 43
xxx after update is x: -3.92181921005
y: 38.046913147
theta: 4.71191835403
speed: 13.9574775696
id: 1
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.37938318701181806, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2975311279296875, -47.740264892578125, 1.615263819694519, 13.870116233825684)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.92181921005
y: 38.046913147
theta: 4.71191835403
speed: 13.9574775696
id: 1
t: 44
xxx after update is x: -3.50679755211
y: 36.823764801
theta: 4.79235315323
speed: 13.8223190308
id: 1
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:45




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: -3.50679755211
y: 36.823764801
theta: 4.79235315323
speed: 13.8223190308
id: 1
t: 45
xxx after update is x: -3.29300904274
y: 36.85729599
theta: 4.83771419525
speed: 13.8553066254
id: 1
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: -3.29300904274
y: 36.85729599
theta: 4.83771419525
speed: 13.8553066254
id: 1
t: 46
xxx after update is x: -3.61808419228
y: 35.965473175
theta: 4.5894742012
speed: 13.8939886093
id: 1
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.35668351993329256, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3922324180603027, -45.656314849853516, 1.5438560247421265, 14.033236503601074)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: -3.61808419228
y: 35.965473175
thetupdate agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: 3.14945054054
y: -46.8541870117
theta: 1.39959490299
speed: 13.8664522171
id: 0
t: 45
xxx after update is x: 3.32822132111
y: -46.5082626343
theta: 1.53381621838
speed: 13.7727518082
id: 0
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.36007580482650814, 0.3811146329256888]
222 self.state_dicts[msg.id][msg.t] is (-3.293009042739868, 36.857295989990234, 4.837714195251465, 13.855306625366211)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: 3.32822132111
y: -46.5082626343
theta: 1.53381621838
speed: 13.7727518082
id: 0
t: 46
xxx after update is x: 3.39223241806
y: -45.6563148499
theta: 1.54385602474
speed: 14.0332365036
id: 0
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: 3.39223241806
y: -45.6563148499
theta: 1.54385602474
speed: 14.0332365036
id: 0
t: 47
xxx after update is x: 3.20801186562
y: -45.4063682556
theta: 1.67954206467
speed: 13.8656625748
id: 0
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: 3.20801186562
y: -45.4063682556
theta: 1.67954206467
speed: 13.8656625748
id: 0
t: 48
xxx after update is x: 3.31813979149
y: -44.9217529297
theta: 1.68178987503
speed: 13.7638597488
id: 0
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: 3.31813979149
y: -44.9217529297
theta: 1.68178987503
speed: 13.7638597488
id: 0
t: 49
xxx after update is x: 3.36969971657
y: -44.1045570374
theta: 1.66977250576
speed: 13.7997407913
id: 0
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: 3.36969971657
y: -44.1045570374
theta: 1.66977250576
speed: 13.7997407913
id: 0
t: 50
xxx after update is x: 3.00321793556
y: -43.0284118652
theta: 1.6383856535
speed: 13.7387695312
id: 0
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3461030176054019, 0.3631666811480009]
222 self.state_dicts[msg.id][msg.t] is (-2.9579367637634277, 33.13158416748047, 4.752015590667725, 14.055604934692383)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: 3.00321793556
y: -43.0284118652
theta: 1.6383856535
speed: 13.7387695312
id: 0
t: 51
xxx after update is x: 3.57233428955
y: -42.9282264709
theta: 1.55992913246
speed: 13.8463659286
id: 0
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spina: 4.5894742012
speed: 13.8939886093
id: 1
t: 47
xxx after update is x: -3.23066544533
y: 35.2006111145
theta: 4.84395742416
speed: 13.7303876877
id: 1
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: -3.23066544533
y: 35.2006111145
theta: 4.84395742416
speed: 13.7303876877
id: 1
t: 48
xxx after update is x: -3.57300686836
y: 34.5827140808
theta: 4.73877286911
speed: 13.7541732788
id: 1
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: -3.57300686836
y: 34.5827140808
theta: 4.73877286911
speed: 13.7541732788
id: 1
t: 49
xxx after update is x: -3.30443572998
y: 33.8111457825
theta: 4.82076883316
speed: 13.6602039337
id: 1
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: -3.30443572998
y: 33.8111457825
theta: 4.82076883316
speed: 13.6602039337
id: 1
t: 50
xxx after update is x: -2.95793676376
y: 33.1315841675
theta: 4.75201559067
speed: 14.0556049347
id: 1
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4041847277039088, 0]
222 self.state_dicts[msg.id][msg.t] is (3.003217935562134, -43.028411865234375, 1.6383856534957886, 13.73876953125)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: -2.95793676376
y: 33.1315841675
theta: 4.75201559067
speed: 14.0556049347
id: 1
t: 51
xxx after update is x: -3.91685009003
y: 32.8982276917
theta: 4.74939727783
speed: 13.9019241333
id: 1
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.91685009003
y: 32.8982276917
theta: 4.74939727783
speed: 13.9019241333
id: 1
t: 52
xxx after update is x: -3.16175889969
y: 32.4856758118
theta: 4.62211179733
speed: 13.8556728363
id: 1
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:53




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: -3.16175889969
y: 32.4856758118
theta: 4.62211179733
speed: 13.8556728363
id: 1
t: 53
xxx after update is x: -3.02739810944
y: 31.6954536438
theta: 4.9489274025
speed: 14.1649074554
id: 1
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: -3.02739810944
y: 31.6954536438
theta: 4.9489274025
speed: 14.1649074554
id: 1
t: 54
xxx after update is x: -3.29825186729
y: 31.5395565033
theta: 4.66189050674
speed: 14.0534687042
id: 1
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.37074061635284894, 0]
222 self.state_dicts[msg.id][msg.t] is (3.456193685531616, -41.45990753173828, 1.5951013565063477, 13.728899002075195)
if we have all m:53

xxx before update is x: 3.57233428955
y: -42.9282264709
theta: 1.55992913246
speed: 13.8463659286
id: 0
t: 52
xxx after update is x: 3.39895343781
y: -42.3733634949
theta: 1.62455189228
speed: 14.2411441803
id: 0
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: 3.39895343781
y: -42.3733634949
theta: 1.62455189228
speed: 14.2411441803
id: 0
t: 53
xxx after update is x: 3.93619966507
y: -42.0285797119
theta: 1.51521658897
speed: 14.2321920395
id: 0
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: 3.93619966507
y: -42.0285797119
theta: 1.51521658897
speed: 14.2321920395
id: 0
t: 54
xxx after update is x: 3.45619368553
y: -41.4599075317
theta: 1.59510135651
speed: 13.7288990021
id: 0
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: 3.45619368553
y: -41.4599075317
theta: 1.59510135651
speed: 13.7288990021
id: 0
t: 55
xxx after update is x: 2.97721171379
y: -40.2893447876
theta: 1.63242101669
speed: 13.9515399933
id: 0
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: 2.97721171379
y: -40.2893447876
theta: 1.63242101669
speed: 13.9515399933
id: 0
t: 56
xxx after update is x: 3.70226693153
y: -40.212978363
theta: 1.56967425346
speed: 14.0768795013
id: 0
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.37812802666968576, 0.35892181612372914]
222 self.state_dicts[msg.id][msg.t] is (-2.5830116271972656, 29.838218688964844, 4.780666828155518, 13.681061744689941)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: 3.70226693153
y: -40.212978363
theta: 1.56967425346
speed: 14.0768795013
id: 0
t: 57
xxx after update is x: 3.2266907692
y: -39.17786026
theta: 1.50438594818
speed: 13.8558654785
id: 0
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: 3.2266907692
y: -39.17786026
theta: 1.50438594818
speed: 13.8558654785
id: 0
t: 58
xxx after update is x: 3.63754081726
y: -38.4768829346
theta: 1.45807647705
speed: 13.7121658325
id: 0
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.63754081726
y: -38.4768829346
theta: 1.45807647705
speed: 13.7121658325
id: 0
t: 59
xxx after update is x: 3.52540206909
y: -38.1641387939
theta: 1.52704679966
speed: 14.3006896973
id: 0
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:60




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: 3.52540206909
y: -38.1641easurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: -3.29825186729
y: 31.5395565033
theta: 4.66189050674
speed: 14.0534687042
id: 1
t: 55
xxx after update is x: -3.2384095192
y: 30.6220569611
theta: 4.64436721802
speed: 13.8346424103
id: 1
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: -3.2384095192
y: 30.6220569611
theta: 4.64436721802
speed: 13.8346424103
id: 1
t: 56
xxx after update is x: -2.5830116272
y: 29.838218689
theta: 4.78066682816
speed: 13.6810617447
id: 1
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: -2.5830116272
y: 29.838218689
theta: 4.78066682816
speed: 13.6810617447
id: 1
t: 57
xxx after update is x: -2.53328704834
y: 29.4127044678
theta: 4.72103738785
speed: 13.8567390442
id: 1
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: -2.53328704834
y: 29.4127044678
theta: 4.72103738785
speed: 13.8567390442
id: 1
t: 58
xxx after update is x: -3.52355146408
y: 27.9146652222
theta: 4.68265724182
speed: 14.0767946243
id: 1
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.36849767329321886, 0]
222 self.state_dicts[msg.id][msg.t] is (3.637540817260742, -38.47688293457031, 1.4580764770507812, 13.712165832519531)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: -3.52355146408
y: 27.9146652222
theta: 4.68265724182
speed: 14.0767946243
id: 1
t: 59
xxx after update is x: -3.35709738731
y: 27.6719074249
theta: 4.79910898209
speed: 13.9309482574
id: 1
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: -3.35709738731
y: 27.6719074249
theta: 4.79910898209
speed: 13.9309482574
id: 1
t: 60
xxx after update is x: -3.36659836769
y: 27.7354698181
theta: 4.70141363144
speed: 13.9197568893
id: 1
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: -3.36659836769
y: 27.7354698181
theta: 4.70141363144
speed: 13.9197568893
id: 1
t: 61
xxx after update is x: -3.69202399254
y: 26.6903095245
theta: 4.82363462448
speed: 14.1511240005
id: 1
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.38942006231583837, 0]
222 self.state_dicts[msg.id][msg.t] is (3.552605152130127, -36.61995315551758, 1.4907606840133667, 13.454838752746582)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state387939
theta: 1.52704679966
speed: 14.3006896973
id: 0
t: 60
xxx after update is x: 3.04135990143
y: -37.4802513123
theta: 1.67338848114
speed: 13.7966718674
id: 0
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: 3.04135990143
y: -37.4802513123
theta: 1.67338848114
speed: 13.7966718674
id: 0
t: 61
xxx after update is x: 3.55260515213
y: -36.6199531555
theta: 1.49076068401
speed: 13.4548387527
id: 0
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3217854795601723, 0.33069693899419444]
222 self.state_dicts[msg.id][msg.t] is (-3.692023992538452, 26.690309524536133, 4.823634624481201, 14.151124000549316)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: 3.55260515213
y: -36.6199531555
theta: 1.49076068401
speed: 13.4548387527
id: 0
t: 62
xxx after update is x: 3.30081582069
y: -35.8983268738
theta: 1.55502533913
speed: 13.6000909805
id: 0
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: 3.30081582069
y: -35.8983268738
theta: 1.55502533913
speed: 13.6000909805
id: 0
t: 63
xxx after update is x: 3.5741546154
y: -35.5394020081
theta: 1.43462622166
speed: 13.7968263626
id: 0
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: 3.5741546154
y: -35.5394020081
theta: 1.43462622166
speed: 13.7968263626
id: 0
t: 64
xxx after update is x: 3.10475730896
y: -34.9998016357
theta: 1.58569526672
speed: 13.7306909561
id: 0
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: 3.10475730896
y: -34.9998016357
theta: 1.58569526672
speed: 13.7306909561
id: 0
t: 65
xxx after update is x: 3.1883649826
y: -34.1625442505
theta: 1.41327702999
speed: 13.5895729065
id: 0
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.4733739421444525, 0.3787442999542138]
222 self.state_dicts[msg.id][msg.t] is (-3.1377434730529785, 24.2049560546875, 4.658679962158203, 13.993232727050781)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.1883649826
y: -34.1625442505
theta: 1.41327702999
speed: 13.5895729065
id: 0
t: 66
xxx after update is x: 2.99005556107
y: -33.8594703674
theta: 1.49391293526
speed: 14.0581455231
id: 0
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:67




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: 2.99005556107
y: -33.8594703674
theta: 1.49391293526
speed: 14.0581455231
id: 0
t: 67
xxx after update is x: 3.59391522408
y: -32.9402122498
theta: 1.51641380787
speed: 13.8055381775
id: 0
t: 68
maneuver_negotiatir.py finish the update  function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: -3.69202399254
y: 26.6903095245
theta: 4.82363462448
speed: 14.1511240005
id: 1
t: 62
xxx after update is x: -3.37236046791
y: 26.081911087
theta: 4.61279630661
speed: 13.7417068481
id: 1
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: -3.37236046791
y: 26.081911087
theta: 4.61279630661
speed: 13.7417068481
id: 1
t: 63
xxx after update is x: -3.78041100502
y: 25.7647380829
theta: 4.70282316208
speed: 13.9957122803
id: 1
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: -3.78041100502
y: 25.7647380829
theta: 4.70282316208
speed: 13.9957122803
id: 1
t: 64
xxx after update is x: -2.97988176346
y: 24.9096317291
theta: 4.82699537277
speed: 14.6276140213
id: 1
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3669315638953073, 0]
222 self.state_dicts[msg.id][msg.t] is (3.104757308959961, -34.99980163574219, 1.5856952667236328, 13.730690956115723)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: -2.97988176346
y: 24.9096317291
theta: 4.82699537277
speed: 14.6276140213
id: 1
t: 65
xxx after update is x: -3.13774347305
y: 24.2049560547
theta: 4.65867996216
speed: 13.9932327271
id: 1
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: -3.13774347305
y: 24.2049560547
theta: 4.65867996216
speed: 13.9932327271
id: 1
t: 66
xxx after update is x: -3.33570885658
y: 23.4052715302
theta: 4.70436859131
speed: 13.4504318237
id: 1
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: -3.33570885658
y: 23.4052715302
theta: 4.70436859131
speed: 13.4504318237
id: 1
t: 67
xxx after update is x: -3.76114392281
y: 23.3018951416
theta: 4.64379501343
speed: 13.6672153473
id: 1
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.38991387065505245, 0]
222 self.state_dicts[msg.id][msg.t] is (3.5939152240753174, -32.94021224975586, 1.5164138078689575, 13.805538177490234)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: -3.76114392281
y: 23.3018951416
theta: 4.64379501343
speed: 13.6672153473
id: 1
t: 68
xxx after update is x: -3.33428263664
y: 22.1839046478
theta: 4.6663069725
speed: 13.943479538
id: 1
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxagent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.59391522408
y: -32.9402122498
theta: 1.51641380787
speed: 13.8055381775
id: 0
t: 68
xxx after update is x: 3.16540360451
y: -32.7902412415
theta: 1.60422456264
speed: 13.6499633789
id: 0
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:69




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: 3.16540360451
y: -32.7902412415
theta: 1.60422456264
speed: 13.6499633789
id: 0
t: 69
xxx after update is x: 3.22412276268
y: -31.362493515
theta: 1.48100602627
speed: 13.757982254
id: 0
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: 3.22412276268
y: -31.362493515
theta: 1.48100602627
speed: 13.757982254
id: 0
t: 70
xxx after update is x: 3.88640260696
y: -31.484910965
theta: 1.53138577938
speed: 13.9759778976
id: 0
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.4633471973064475, 0.42323355807900026]
222 self.state_dicts[msg.id][msg.t] is (-3.581305980682373, 20.950937271118164, 4.4794602394104, 13.772892951965332)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: 3.88640260696
y: -31.484910965
theta: 1.53138577938
speed: 13.9759778976
id: 0
t: 71
xxx after update is x: 3.39772343636
y: -29.9584903717
theta: 1.44267058372
speed: 13.9061641693
id: 0
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: 3.39772343636
y: -29.9584903717
theta: 1.44267058372
speed: 13.9061641693
id: 0
t: 72
xxx after update is x: 3.43408274651
y: -29.6510715485
theta: 1.46535670757
speed: 14.2636823654
id: 0
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: 3.43408274651
y: -29.6510715485
theta: 1.46535670757
speed: 14.2636823654
id: 0
t: 73
xxx after update is x: 2.96143722534
y: -28.8539352417
theta: 1.75787234306
speed: 13.8092002869
id: 0
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: 2.96143722534
y: -28.8539352417
theta: 1.75787234306
speed: 13.8092002869
id: 0
t: 74
xxx after update is x: 2.8888156414
y: -28.5151424408
theta: 1.52550017834
speed: 14.1614675522
id: 0
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: 2.8888156414
y: -28.5151424408
theta: 1.52550017834
speed: 14.1614675522
id: 0
t: 75
xxx after update is x: 3.16171503067
y: -28.2135047913
theta: 1.51899540424
speed: 13.7954330444
id: 0
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.348928574613xxxxxx
(self.id == 1):
xxx before update is x: -3.33428263664
y: 22.1839046478
theta: 4.6663069725
speed: 13.943479538
id: 1
t: 69
xxx after update is x: -3.05859208107
y: 21.7761611938
theta: 4.73990631104
speed: 13.7122116089
id: 1
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:70




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: -3.05859208107
y: 21.7761611938
theta: 4.73990631104
speed: 13.7122116089
id: 1
t: 70
xxx after update is x: -3.58130598068
y: 20.9509372711
theta: 4.47946023941
speed: 13.772892952
id: 1
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: -3.58130598068
y: 20.9509372711
theta: 4.47946023941
speed: 13.772892952
id: 1
t: 71
xxx after update is x: -3.41324663162
y: 20.926076889
theta: 4.79662418365
speed: 13.9355154037
id: 1
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4186475395185472, 0]
222 self.state_dicts[msg.id][msg.t] is (3.397723436355591, -29.9584903717041, 1.4426705837249756, 13.906164169311523)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: -3.41324663162
y: 20.926076889
theta: 4.79662418365
speed: 13.9355154037
id: 1
t: 72
xxx after update is x: -3.34415411949
y: 20.4178714752
theta: 4.65105342865
speed: 13.8598613739
id: 1
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: -3.34415411949
y: 20.4178714752
theta: 4.65105342865
speed: 13.8598613739
id: 1
t: 73
xxx after update is x: -3.82951974869
y: 19.3673934937
theta: 4.75413751602
speed: 13.9135065079
id: 1
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: -3.82951974869
y: 19.3673934937
theta: 4.75413751602
speed: 13.9135065079
id: 1
t: 74
xxx after update is x: -2.96833705902
y: 18.7160129547
theta: 4.71485519409
speed: 13.8578596115
id: 1
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3726327255503618, 0]
222 self.state_dicts[msg.id][msg.t] is (2.8888156414031982, -28.5151424407959, 1.5255001783370972, 14.161467552185059)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: -2.96833705902
y: 18.7160129547
theta: 4.71485519409
speed: 13.8578596115
id: 1
t: 75
xxx after update is x: -3.27235770226
y: 18.0239849091
theta: 4.76184415817
speed: 14.1086950302
id: 1
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:77


xxx before upda4322, 0.030250411035152636]
222 self.state_dicts[msg.id][msg.t] is (-3.272357702255249, 18.023984909057617, 4.761844158172607, 14.108695030212402)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: 3.16171503067
y: -28.2135047913
theta: 1.51899540424
speed: 13.7954330444
id: 0
t: 76
xxx after update is x: 3.1015868187
y: -27.6188831329
theta: 1.38981378078
speed: 13.8566303253
id: 0
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:78


xxx before update is x: 3.1015868187
y: -27.6188831329
theta: 1.38981378078
speed: 13.8566303253
id: 0
t: 77
xxx after update is x: 3.29535412788
y: -26.6407299042
theta: 1.38397705555
speed: 13.9214849472
id: 0
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: 3.29535412788
y: -26.6407299042
theta: 1.38397705555
speed: 13.9214849472
id: 0
t: 78
xxx after update is x: 3.18669867516
y: -26.2781410217
theta: 1.68745732307
speed: 13.6137895584
id: 0
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:80


xxx before update is x: 3.18669867516
y: -26.2781410217
theta: 1.68745732307
speed: 13.6137895584
id: 0
t: 79
xxx after update is x: 3.41353058815
y: -25.4756298065
theta: 1.60305440426
speed: 13.2372770309
id: 0
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.37579374747269007, 0.04403182908593362]
222 self.state_dicts[msg.id][msg.t] is (-3.277151346206665, 15.424072265625, 4.737720489501953, 14.138251304626465)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: 3.41353058815
y: -25.4756298065
theta: 1.60305440426
speed: 13.2372770309
id: 0
t: 80
xxx after update is x: 2.75607228279
y: -25.4611740112
theta: 1.78659534454
speed: 13.2367076874
id: 0
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: 2.75607228279
y: -25.4611740112
theta: 1.78659534454
speed: 13.2367076874
id: 0
t: 81
xxx after update is x: 3.43354010582
y: -24.1362133026
theta: 1.56107461452
speed: 12.989648819
id: 0
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:83


xxx before update is x: 3.43354010582
y: -24.1362133026
theta: 1.56107461452
speed: 12.989648819
id: 0
t: 82
xxx after update is x: 3.38416361809
y: -23.7291107178
theta: 1.58463311195
speed: 12.686501503
id: 0
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: 3.38416361809
y: -23.7291107178
theta: 1.58463311195
speed: 12.686501503
id: 0
t: 83
xxx after update te is x: -3.27235770226
y: 18.0239849091
theta: 4.76184415817
speed: 14.1086950302
id: 1
t: 76
xxx after update is x: -3.25417542458
y: 17.8220729828
theta: 4.65489959717
speed: 13.7596073151
id: 1
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:78


xxx before update is x: -3.25417542458
y: 17.8220729828
theta: 4.65489959717
speed: 13.7596073151
id: 1
t: 77
xxx after update is x: -3.86914777756
y: 16.8312740326
theta: 4.64632987976
speed: 13.6853246689
id: 1
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.36749124777245573, 0]
222 self.state_dicts[msg.id][msg.t] is (3.295354127883911, -26.640729904174805, 1.3839770555496216, 13.92148494720459)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: -3.86914777756
y: 16.8312740326
theta: 4.64632987976
speed: 13.6853246689
id: 1
t: 78
xxx after update is x: -3.60100793839
y: 16.0652103424
theta: 4.68615102768
speed: 14.2296953201
id: 1
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:80


xxx before update is x: -3.60100793839
y: 16.0652103424
theta: 4.68615102768
speed: 14.2296953201
id: 1
t: 79
xxx after update is x: -3.27715134621
y: 15.4240722656
theta: 4.7377204895
speed: 14.1382513046
id: 1
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: -3.27715134621
y: 15.4240722656
theta: 4.7377204895
speed: 14.1382513046
id: 1
t: 80
xxx after update is x: -3.70970225334
y: 14.9939756393
theta: 4.79393005371
speed: 14.0681257248
id: 1
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.36081429065264686, 0]
222 self.state_dicts[msg.id][msg.t] is (2.7560722827911377, -25.46117401123047, 1.786595344543457, 13.23670768737793)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: -3.70970225334
y: 14.9939756393
theta: 4.79393005371
speed: 14.0681257248
id: 1
t: 81
xxx after update is x: -3.591101408
y: 14.5194997787
theta: 4.86450099945
speed: 13.949464798
id: 1
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:83


xxx before update is x: -3.591101408
y: 14.5194997787
theta: 4.86450099945
speed: 13.949464798
id: 1
t: 82
xxx after update is x: -2.98920106888
y: 13.4592418671
theta: 4.69051980972
speed: 13.8819770813
id: 1
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: -2.98920106888
y: 13.4592418671
theta: 4.69051980972
speed: 13.8819770813
id: 1
t: 83
xxx after update is x: -3.11791443825
y: 13.2976951599
theta: 4.67284536362
speed: 13.3914766312
id: 1
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: -3.11791443825
y: 13.2976951599
theta: 4.67284536362
speed: 13.3914766312
id: 1
t: 84
xxx after update is x: -3.12776327133
y: 12.5394411087
theta: 4.67331838608
speed: 13.8443393707
id: 1
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.21730812114271458, 0]
222 self.state_dicts[msg.id][msg.t] is (3.134289503097534, -22.906850814819336, 1.6574203968048096, 12.295088768005371)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: -3.12776327133
y: 12.5394411087
theta: 4.67331838608
speed: 13.8443393707
id: 1
t: 85
xxx after update is x: -3.19685339928
y: 12.4281797409
theta: 4.66250181198
speed: 13.8146495819
id: 1
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: -3.19685339928
y: 12.4281797409
theta: 4.66250181198
speed: 13.8146495819
id: 1
t: 86
xxx after update is x: -3.4819290638
y: 11.2814369202
theta: 4.60989141464
speed: 13.996711731
id: 1
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3444299674172703, 0]
222 self.state_dicts[msg.id][msg.t] is (3.474656105041504, -21.679346084594727, 1.5560041666030884, 12.080422401428223)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: -3.4819290638
y: 11.2814369202
theta: 4.60989141464
speed: 13.996711731
id: 1
t: 87
xxx after update is x: -3.0476026535
y: 10.5353546143
theta: 4.67252731323
speed: 13.7513008118
id: 1
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: -3.0476026535
y: 10.5353546143
theta: 4.67252731323
speed: 13.7513008118
id: 1
t: 88
xxx after update is x: -3.07669234276
y: 9.48912334442
theta: 4.6895699501
speed: 13.9427146912
id: 1
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:90


xxx before update is x: -3.07669234276
y: 9.48912334442
theta: 4.6895699501
speed: 13.9427146912
id: 1
t: 89
xxx after update is x: -3.15758180618
y: 9.30126953125
theta: 4.6465473175
speed: 13.7522773743
id: 1
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.29318264161190855, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1932764053344727, -20.60880470275879, 1.6494896411895752, 11.49413013458252)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx beis x: 2.79060292244
y: -23.0936737061
theta: 1.64375662804
speed: 12.9147586823
id: 0
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.40524994322708585, 0.09669768579203344]
222 self.state_dicts[msg.id][msg.t] is (-3.1179144382476807, 13.29769515991211, 4.672845363616943, 13.39147663116455)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: 2.79060292244
y: -23.0936737061
theta: 1.64375662804
speed: 12.9147586823
id: 0
t: 84
xxx after update is x: 3.1342895031
y: -22.9068508148
theta: 1.6574203968
speed: 12.295088768
id: 0
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: 3.1342895031
y: -22.9068508148
theta: 1.6574203968
speed: 12.295088768
id: 0
t: 85
xxx after update is x: 3.00595402718
y: -22.0227947235
theta: 1.66976475716
speed: 12.0357561111
id: 0
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: 3.00595402718
y: -22.0227947235
theta: 1.66976475716
speed: 12.0357561111
id: 0
t: 86
xxx after update is x: 3.47465610504
y: -21.6793460846
theta: 1.5560041666
speed: 12.0804224014
id: 0
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: 3.47465610504
y: -21.6793460846
theta: 1.5560041666
speed: 12.0804224014
id: 0
t: 87
xxx after update is x: 3.25635647774
y: -21.4761104584
theta: 1.43714773655
speed: 12.026471138
id: 0
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: 3.25635647774
y: -21.4761104584
theta: 1.43714773655
speed: 12.026471138
id: 0
t: 88
xxx after update is x: 3.3129401207
y: -20.59141922
theta: 1.69914996624
speed: 11.5650234222
id: 0
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.36000902769551346, 0.10076029324845358]
222 self.state_dicts[msg.id][msg.t] is (-3.0766923427581787, 9.489123344421387, 4.68956995010376, 13.94271469116211)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:90


xxx before update is x: 3.3129401207
y: -20.59141922
theta: 1.69914996624
speed: 11.5650234222
id: 0
t: 89
xxx after update is x: 3.19327640533
y: -20.6088047028
theta: 1.64948964119
speed: 11.4941301346
id: 0
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:


-----------------------------------------------------------------------------------------------------------------------------


initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$


maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 1
current clock is 4.0
!!!!after check statue the self.tag is [4.0, 0, 'left']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)


current clock is 4.0
maneuver_negotiatir.py get membership, in the get_MR function, start self.man_init:
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: 3.19327640533
y: -20.6088047028
theta: 1.64948964119
speed: 11.4941301346
id: 0
t: 90
xxx after update is x: 3.24339532852
y: -20.1222133636
theta: 1.5809623003
speed: 11.0745944977
id: 0
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion

maneuver_negotiatir.py intended_course
left
membership is [4.0, True, ['1']]
4.0
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish


( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1

self.agents_to_ask is ['1']

message is :GET,0,4.0,(3.1932764053344727, -20.60880470275879, 1.6494896411895752),11,1,4.0,0,left
!!!!change state to get










GET,0,4.0,(3.1932764053344727, -20.60880470275879, 1.6494896411895752),11,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 4.04444444444
self.communication_details == 0

sending GET,0,4.0,(3.1932764053344727, -20.60880470275879, 1.6494896411895752),11,1,4.0,0,left to car 1 from car 0


maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
Received -->>: 
current clock is 4.04444444444




maneuver_negotiatir.py message_processing, it's a long code, start...




current clock is 4.04444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1


maneuver_negotiatir.py message_processing,message type is GRANT, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '4.04444444444', 'Position': ['(-3.2094099521636963', ' 59.4250602722168', ' 4.743597984313965)'], 'Type': 'GRANT'}


car 0 received GRANT,1,4.04444444444,(-3.2094099521636963, 59.4250602722168, 4.743597984313965),13,1,0,0 from  car1
status: 2


maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.0, True, ['1']]
4.0
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish


maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 

maneuver_negotiatir.py message_processing,in request processing, new membership =  [4.0, True, '1']

maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])





maneuver_negotiatir.py in the message processing function, it's a long code, finish






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:92


xxx before update is x: 3.24339532852
y: -20.1222133636
theta: 1.5809623003
speed: 11.0745944977
id: 0
t: 91
xxx after update is x: 3.27737236023
y: -19.1831665039
theta: 1.43371975422
speed: 10.7410516739
id: 0
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: 3.27737236023
y: -19.1831665039
theta: 1.43371975422
speed: 10.7410516739
id: 0
t: 92
xxx after update is x: 3.65342617035
y: -18.1809711456
theta: 1.59708034992
speed: 10.4593019485
id: 0
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.40660264219995246, 0.14712898743131367]
222 self.state_dicts[msg.id][msg.t] is (-2.925835132598877, 7.624162673950195, 4.675329208374023, 13.769335746765137)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: 3.65342617035
y: -18.1809711456
theta: 1.59708034992
speed: 10.4593019485
id: 0
t: 93
xxx after update is x: 3.19909405708
y: -18.112577438fore update is x: -3.15758180618
y: 9.30126953125
theta: 4.6465473175
speed: 13.7522773743
id: 1
t: 90
xxx after update is x: -3.6063079834
y: 8.48441410065
theta: 4.8360543251
speed: 14.0111150742
id: 1
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:91


Received -->>: 
current clock is 4.04444444444




maneuver_negotiatir.py message_processing, it's a long code, start...




current clock is 4.04444444444



maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1



maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '4.0', 'Sender': '0', 'Time': '4.0', 'IntendedCourse': 'left', 'Position': ['3.1932764053344727', ' -20.60880470275879', ' 1.6494896411895752'], 'TagID': '0', 'Type': 'GET', 'Velocity': '11'}



car 1 received GET,0,4.0,(3.1932764053344727, -20.60880470275879, 1.6494896411895752),11,1,4.0,0,left from  car0
status: 1



maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.177777777778
sender travel direction is:  north
sender earliest entering time is:  1.91209599191
sender last entering time is:  1.91209599191
sender last leaving time is:  4.36221056298
my entering time is:  0.248655593024
my leaving time is:  1.39953340827
i have left the intersection:  False
not conflicted because sender enters after i leave
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, not conlicted
maneuver_negotiatir.py message_processing,!!dd342 change status to GRANT
self.grantID is 0
GRANT,1,4.04444444444,(-3.2094099521636963, 59.4250602722168, 4.743597984313965),13,1,0,0
added car with id 0 to grantlist. current grantlist:  {0: [8.866666666666667, 'left']}
maneuver_negotiatir.py start the update_agent_message
current clock is 4.04444444444
self.communication_details == 0
sending GRANT,1,4.04444444444,(-3.2094099521636963, 59.4250602722168, 4.743597984313965),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
current clock is 4.04444444444




maneuver_negotiatir.py in the message processing function, it's a long code, finish






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:92


xxx before update is x: -3.6063079834
y: 8.48441410065
theta: 4.8360543251
speed: 14.0111150742
id: 1
t: 91
xxx after update is x: -3.39687848091
y: 8.26400184631
theta: 4.68668460846
speed: 13.9755973816
id: 1
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: -3.39687848091
y: 8.26400184631
theta: 4.68668460846
speed: 13.9755973816
id: 1
t: 92
xxx after update is x: -2.9258351326
y: 7.62416267395
theta: 4.67532920837
speed: 13.7693357468
id: 1
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: -2.9258351326
y: 7.62416267395
theta: 4.67532920837
speed: 13.7693357468
id: 1
t: 93
xxx after update is x: -3.19032907486
y: 7.11438655853
theta: 4.70411300659
speed: 13.8692808151
id: 1
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3870724110586544, 0.9817835196159513]
222 self.state_dicts[msg.id][msg.t] is (3.19909405708313, -18.112577438354492, 1.4861801862716675, 10.302834510803223)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
ca4
theta: 1.48618018627
speed: 10.3028345108
id: 0
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: 3.19909405708
y: -18.1125774384
theta: 1.48618018627
speed: 10.3028345108
id: 0
t: 94
xxx after update is x: 3.34935188293
y: -17.2368297577
theta: 1.50141453743
speed: 10.1282978058
id: 0
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.437246020880731, 5.844972522186281e-05]
222 self.state_dicts[msg.id][msg.t] is (-2.932114839553833, 6.2583160400390625, 4.813519477844238, 14.092435836791992)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: 3.34935188293
y: -17.2368297577
theta: 1.50141453743
speed: 10.1282978058
id: 0
t: 95
xxx after update is x: 3.38201236725
y: -16.4232387543
theta: 1.61730718613
speed: 9.42491054535
id: 0
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:97


xxx before update is x: 3.38201236725
y: -16.4232387543
theta: 1.61730718613
speed: 9.42491054535
id: 0
t: 96
xxx after update is x: 3.35568976402
y: -16.7143535614
theta: 1.59146380424
speed: 9.57470417023
id: 0
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: 3.35568976402
y: -16.7143535614
theta: 1.59146380424
speed: 9.57470417023
id: 0
t: 97
xxx after update is x: 3.90455818176
y: -16.351934433
theta: 1.64727377892
speed: 9.25226306915
id: 0
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: 3.90455818176
y: -16.351934433
theta: 1.64727377892
speed: 9.25226306915
id: 0
t: 98
xxx after update is x: 3.86326360703
y: -15.4606380463
theta: 1.47749483585
speed: 8.97553253174
id: 0
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: 3.86326360703
y: -15.4606380463
theta: 1.47749483585
speed: 8.97553253174
id: 0
t: 99
xxx after update is x: 2.70609903336
y: -15.798333168
theta: 1.61518907547
speed: 8.88862895966
id: 0
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3371391870574534, 0.005474697707962968]
222 self.state_dicts[msg.id][msg.t] is (-2.9679505825042725, 3.1142539978027344, 4.690330982208252, 14.298810005187988)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: 2.70609903336
y: -15.798333168
theta: 1.61518907547
speed: 8.88862895966
id: 0
t: 100
xxx after update is x: 3.41707921028
y: -15.1780223846
theta: 1.52549922466
speed: 8.54389667511
id: 0
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py inll update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: -3.19032907486
y: 7.11438655853
theta: 4.70411300659
speed: 13.8692808151
id: 1
t: 94
xxx after update is x: -2.93211483955
y: 6.25831604004
theta: 4.81351947784
speed: 14.0924358368
id: 1
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: -2.93211483955
y: 6.25831604004
theta: 4.81351947784
speed: 14.0924358368
id: 1
t: 95
xxx after update is x: -3.76989340782
y: 5.87147474289
theta: 4.72261142731
speed: 13.9254999161
id: 1
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:97


xxx before update is x: -3.76989340782
y: 5.87147474289
theta: 4.72261142731
speed: 13.9254999161
id: 1
t: 96
xxx after update is x: -3.15526175499
y: 4.92600154877
theta: 4.81968069077
speed: 13.7119216919
id: 1
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.39243924694629295, 0.9846186693428064]
222 self.state_dicts[msg.id][msg.t] is (3.355689764022827, -16.714353561401367, 1.5914638042449951, 9.57470417022705)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: -3.15526175499
y: 4.92600154877
theta: 4.81968069077
speed: 13.7119216919
id: 1
t: 97
xxx after update is x: -2.51119637489
y: 4.18857097626
theta: 4.78130149841
speed: 13.9984102249
id: 1
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.51119637489
y: 4.18857097626
theta: 4.78130149841
speed: 13.9984102249
id: 1
t: 98
xxx after update is x: -2.91891145706
y: 3.19212007523
theta: 4.76645088196
speed: 13.7751874924
id: 1
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:99


aaaaaa
aaaaaabbbbb
risk is [0.4266377571624558, 0.9919293599190615]
222 self.state_dicts[msg.id][msg.t] is (3.8632636070251465, -15.460638046264648, 1.4774948358535767, 8.975532531738281)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: -2.91891145706
y: 3.19212007523
theta: 4.76645088196
speed: 13.7751874924
id: 1
t: 99
xxx after update is x: -2.9679505825
y: 3.1142539978
theta: 4.69033098221
speed: 14.2988100052
id: 1
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: -2.9679505825
y: 3.1142539978
theta: 4.69033098221
speed: 14.2988100052
id: 1
t: 100
xxx after update is x: -3.51509094238
y: 2.76979017258
theta: 4.67002391815
speed: 13.9954862595
id: 1
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: 3.41707921028
y: -15.1780223846
theta: 1.52549922466
speed: 8.54389667511
id: 0
t: 101
xxx after update is x: 3.90083479881
y: -14.5679998398
theta: 1.58676755428
speed: 8.70558643341
id: 0
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: 3.90083479881
y: -14.5679998398
theta: 1.58676755428
speed: 8.70558643341
id: 0
t: 102
xxx after update is x: 3.24822497368
y: -14.7277431488
theta: 1.54931080341
speed: 7.98764419556
id: 0
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: 3.24822497368
y: -14.7277431488
theta: 1.54931080341
speed: 7.98764419556
id: 0
t: 103
xxx after update is x: 3.19337296486
y: -13.7355079651
theta: 1.65017402172
speed: 7.80681467056
id: 0
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.2847958631634303, 0.014430850071536612]
222 self.state_dicts[msg.id][msg.t] is (-2.9449312686920166, 1.1830813884735107, 4.756831645965576, 13.811683654785156)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:105


xxx before update is x: 3.19337296486
y: -13.7355079651
theta: 1.65017402172
speed: 7.80681467056
id: 0
t: 104
xxx after update is x: 2.90851736069
y: -13.3946342468
theta: 1.63477706909
speed: 7.59011363983
id: 0
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: 2.90851736069
y: -13.3946342468
theta: 1.63477706909
speed: 7.59011363983
id: 0
t: 105
xxx after update is x: 3.0698223114
y: -13.1976251602
theta: 1.60958576202
speed: 7.62704133987
id: 0
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.0,(3.1932764053344727, -20.60880470275879, 1.6494896411895752),11,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 4.71111111111
self.communication_details == 0
sending RELEASE,0,4.0,(3.1932764053344727, -20.60880470275879, 1.6494896411895752),11,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 4.71111111111
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.666666666666667, True, ['1']]
4.66666666667
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.71111111111,(3.069822311401367, -13.197625160217285, 1.6095857620239258),7,1,4.0,0,left
!!!!change state to get
GET,0 sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: -3.51509094238
y: 2.76979017258
theta: 4.67002391815
speed: 13.9954862595
id: 1
t: 101
xxx after update is x: -3.56067633629
y: 1.49197030067
theta: 4.77036857605
speed: 14.1764812469
id: 1
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.45363820829355783, 0.9947608062691681]
222 self.state_dicts[msg.id][msg.t] is (3.900834798812866, -14.567999839782715, 1.586767554283142, 8.705586433410645)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: -3.56067633629
y: 1.49197030067
theta: 4.77036857605
speed: 14.1764812469
id: 1
t: 102
xxx after update is x: -3.49214053154
y: 1.7449555397
theta: 4.65417432785
speed: 14.0351762772
id: 1
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: -3.49214053154
y: 1.7449555397
theta: 4.65417432785
speed: 14.0351762772
id: 1
t: 103
xxx after update is x: -2.94493126869
y: 1.18308138847
theta: 4.75683164597
speed: 13.8116836548
id: 1
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.20143171703287416, 0.9827727992561455]
222 self.state_dicts[msg.id][msg.t] is (3.193372964859009, -13.73550796508789, 1.6501740217208862, 7.806814670562744)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:105


xxx before update is x: -2.94493126869
y: 1.18308138847
theta: 4.75683164597
speed: 13.8116836548
id: 1
t: 104
xxx after update is x: -3.42349410057
y: 0.108341157436
theta: 4.78806829453
speed: 13.8698329926
id: 1
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: -3.42349410057
y: 0.108341157436
theta: 4.78806829453
speed: 13.8698329926
id: 1
t: 105
xxx after update is x: -3.16841125488
y: -0.682153880596
theta: 4.7182469368
speed: 13.7172288895
id: 1
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.71111111111




maneuver_negotiatir.py message_processing, it's a long code, start...




current clock is 4.71111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '11', 'Sender': '0', 'TagID': '1', 'Time': '4.0', 'Position': ['(3.1932764053344727', ' -20.60880470275879', ' 1.6494896411895752)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.0,(3.1932764053344727, -20.60880470275879, 1.6494896411895752),11,1,4.0,0 from  car0
status: 4




maneuver_negotiatir.py in the message processing function, it's a long code, finish




Received -->>: 
current clock is 4.71111111111




maneuver_negotiatir.py message_processing, it's a long code, start...




current clock is 4.71111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,4.71111111111,(3.069822311401367, -13.197625160217285, 1.6095857620239258),7,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 4.71111111111
self.communication_details == 0
sending GET,0,4.71111111111,(3.069822311401367, -13.197625160217285, 1.6095857620239258),7,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
Received -->>: 
current clock is 4.71111111111




maneuver_negotiatir.py message_processing, it's a long code, start...




current clock is 4.71111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '4.71111111111', 'Position': ['(-3.2094099521636963', ' 59.4250602722168', ' 4.743597984313965)'], 'Type': 'DENY'}

car 0 received DENY,1,4.71111111111,(-3.2094099521636963, 59.4250602722168, 4.743597984313965),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.711111111111111, True, ['1']]
4.71111111111
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [4.711111111111111, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: 3.0698223114
y: -13.1976251602
theta: 1.60958576202
speed: 7.62704133987
id: 0
t: 106
xxx after update is x: 3.30160665512
y: -13.2078533173
theta: 1.69230210781
speed: 7.29934692383
id: 0
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.4614135693100551, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.937495231628418, -1.0086394548416138, 4.600390434265137, 13.352812767028809)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: 3.30160665512
y: -13.2078533173
theta: 1.69230210781
speed: 7.29934692383
id: 0
t: 107
xxx after update is x: 3.43386507034
y: -12.5169887543
theta: 1.65077590942
speed: 7.21092510223
id: 0
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.43386507034
y: -12.5169887543
theta: 1.65077590942
speed: 7.21092510223
id: 0
t: 108
xxx after update is x: 3.02937984467
y: -12.415760994
theta: 1.46590590477
speed: 6.85164356232
id: 0
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:109




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:110


xxx before update is x: 3.02937984467
y: -12.415760994
theta: 1.46590590477
speed: 6.85164356232
id: 0
t: 109
xxx after update is x: 3.19301557541
y: -12.228014946
theta: 1.49292862415
speed: 6.76572608948
id: 0
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.28484659073236196, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.123913526535034, -3.4578187465667725, 4.723089694976807, 13.625282287597656)
if we have ,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '4.0', 'Sender': '0', 'Time': '4.71111111111', 'IntendedCourse': 'left', 'Position': ['3.069822311401367', ' -13.197625160217285', ' 1.6095857620239258'], 'TagID': '0', 'Type': 'GET', 'Velocity': '7'}
car 1 received GET,0,4.71111111111,(3.069822311401367, -13.197625160217285, 1.6095857620239258),7,1,4.0,0,left from  car0
status: 4
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.209382716049
sender travel direction is:  north
sender earliest entering time is:  1.16382552065
sender last entering time is:  1.41537312506
sender last leaving time is:  3.46131282755
my entering time is:  0.209382716049
my leaving time is:  0.703823192202
i have left the intersection:  False
not conflicted because sender enters after i leave
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 4.71111111111
self.communication_details == 0
sending DENY,1,4.71111111111,(-3.2094099521636963, 59.4250602722168, 4.743597984313965),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: -3.16841125488
y: -0.682153880596
theta: 4.7182469368
speed: 13.7172288895
id: 1
t: 106
xxx after update is x: -2.93749523163
y: -1.00863945484
theta: 4.60039043427
speed: 13.352812767
id: 1
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.519700864301774, 0.9968738541310739]
222 self.state_dicts[msg.id][msg.t] is (3.3016066551208496, -13.207853317260742, 1.6923021078109741, 7.299346923828125)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: -2.93749523163
y: -1.00863945484
theta: 4.60039043427
speed: 13.352812767
id: 1
t: 107
xxx after update is x: -3.47305703163
y: -1.59287118912
theta: 4.66080617905
speed: 14.0030384064
id: 1
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: -3.47305703163
y: -1.59287118912
theta: 4.66080617905
speed: 14.0030384064
id: 1
t: 108
xxx after update is x: -3.29567837715
y: -1.87883210182
theta: 4.6370382309
speed: 13.8148393631
id: 1
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:110


xxx before update is x: -3.29567837715
y: -1.87883210182
theta: 4.6370382309
speed: 13.8148393631
id: 1
t: 109
xxx after update is x: -3.12391352654
y: -3.45781874657
theta: 4.72308969498
speed: 13.6252822876
id: 1
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.5088076940710451, 0.9955484765383447]
222 self.state_dicts[msg.id][msg.t] is (3.1930155754089355, -12.228014945983887, 1.4929286241531372, 6.765726089477539)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxall measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:111


xxx before update is x: 3.19301557541
y: -12.228014946
theta: 1.49292862415
speed: 6.76572608948
id: 0
t: 110
xxx after update is x: 2.65349578857
y: -11.367934227
theta: 1.58746767044
speed: 6.37697410583
id: 0
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:112


xxx before update is x: 2.65349578857
y: -11.367934227
theta: 1.58746767044
speed: 6.37697410583
id: 0
t: 111
xxx after update is x: 3.16807150841
y: -11.4916934967
theta: 1.50949645042
speed: 6.44352674484
id: 0
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:113


xxx before update is x: 3.16807150841
y: -11.4916934967
theta: 1.50949645042
speed: 6.44352674484
id: 0
t: 112
xxx after update is x: 3.92754817009
y: -11.2715797424
theta: 1.59139084816
speed: 6.03442811966
id: 0
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.92754817009
y: -11.2715797424
theta: 1.59139084816
speed: 6.03442811966
id: 0
t: 113
xxx after update is x: 3.38982915878
y: -11.1788635254
theta: 1.5928311348
speed: 5.7355389595
id: 0
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:114


aaaaaazzzzz
risk is [0.4390379800302426, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.9342241287231445, -5.776973247528076, 4.675475120544434, 14.247201919555664)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:115


xxx before update is x: 3.38982915878
y: -11.1788635254
theta: 1.5928311348
speed: 5.7355389595
id: 0
t: 114
xxx after update is x: 3.93087887764
y: -10.9316692352
theta: 1.64122056961
speed: 5.38382911682
id: 0
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: 3.93087887764
y: -10.9316692352
theta: 1.64122056961
speed: 5.38382911682
id: 0
t: 115
xxx after update is x: 3.17067933083
y: -10.2594604492
theta: 1.58599495888
speed: 5.35696935654
id: 0
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: 3.17067933083
y: -10.2594604492
theta: 1.58599495888
speed: 5.35696935654
id: 0
t: 116
xxx after update is x: 3.132771492
y: -9.6612739563
theta: 1.71195244789
speed: 5.00276660919
id: 0
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.2944622054783089, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0547802448272705, -7.525108814239502, 4.770251274108887, 13.796615600585938)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in x
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:111


xxx before update is x: -3.12391352654
y: -3.45781874657
theta: 4.72308969498
speed: 13.6252822876
id: 1
t: 110
xxx after update is x: -3.50867843628
y: -3.39737081528
theta: 4.48309469223
speed: 14.0207223892
id: 1
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:112


xxx before update is x: -3.50867843628
y: -3.39737081528
theta: 4.48309469223
speed: 14.0207223892
id: 1
t: 111
xxx after update is x: -3.58451223373
y: -4.24172687531
theta: 4.80277395248
speed: 14.1788797379
id: 1
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:113


xxx before update is x: -3.58451223373
y: -4.24172687531
theta: 4.80277395248
speed: 14.1788797379
id: 1
t: 112
xxx after update is x: -2.32456421852
y: -4.74393796921
theta: 4.56536388397
speed: 14.0299263
id: 1
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.42545798044328886, 0.9995122645197253]
222 self.state_dicts[msg.id][msg.t] is (3.9275481700897217, -11.27157974243164, 1.59139084815979, 6.034428119659424)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: -2.32456421852
y: -4.74393796921
theta: 4.56536388397
speed: 14.0299263
id: 1
t: 113
xxx after update is x: -3.93422412872
y: -5.77697324753
theta: 4.67547512054
speed: 14.2472019196
id: 1
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:115


xxx before update is x: -3.93422412872
y: -5.77697324753
theta: 4.67547512054
speed: 14.2472019196
id: 1
t: 114
xxx after update is x: -3.23352622986
y: -6.09292602539
theta: 4.67337369919
speed: 13.6473588943
id: 1
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4683695732744641, 0.9971470815017979]
222 self.state_dicts[msg.id][msg.t] is (3.9308788776397705, -10.931669235229492, 1.6412205696105957, 5.383829116821289)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: -3.23352622986
y: -6.09292602539
theta: 4.67337369919
speed: 13.6473588943
id: 1
t: 115
xxx after update is x: -3.05905437469
y: -6.41431331635
theta: 4.76361370087
speed: 13.5958080292
id: 1
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: -3.05905437469
y: -6.41431331635
theta: 4.76361370087
speed: 13.5958080292
id: 1
t: 116
xxx after update is x: -3.05478024483
y: -7.52510881424
theta: 4.77025127411
speed: 13.7966156006
id: 1
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: 3.132771492
y: -9.6612739563
theta: 1.71195244789
speed: 5.00276660919
id: 0
t: 117
xxx after update is x: 3.43492794037
y: -9.61591720581
theta: 1.3345041275
speed: 5.00454568863
id: 0
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: 3.43492794037
y: -9.61591720581
theta: 1.3345041275
speed: 5.00454568863
id: 0
t: 118
xxx after update is x: 3.25360870361
y: -9.39082050323
theta: 1.6082559824
speed: 4.48080778122
id: 0
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.25360870361
y: -9.39082050323
theta: 1.6082559824
speed: 4.48080778122
id: 0
t: 119
xxx after update is x: 3.45341825485
y: -9.35125637054
theta: 1.5015296936
speed: 4.42609882355
id: 0
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:120




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:121


xxx before update is x: 3.45341825485
y: -9.35125637054
theta: 1.5015296936
speed: 4.42609882355
id: 0
t: 120
xxx after update is x: 3.51039481163
y: -9.46262359619
theta: 1.49211776257
speed: 4.76561069489
id: 0
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.7783166234924882, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.647372245788574, -9.710436820983887, 4.628211498260498, 13.821815490722656)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.71111111111,(3.069822311401367, -13.197625160217285, 1.6095857620239258),7,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 5.37777777778
self.communication_details == 0
sending RELEASE,0,4.71111111111,(3.069822311401367, -13.197625160217285, 1.6095857620239258),7,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 5.37777777778
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [5.377777777777778, True, ['1']]
5.37777777778
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,5.37777777778,(3.510394811630249, -9.462623596191406, 1.4921177625656128),4,1,4.0,0,left
!!!!change state to get
GET,0,5.37777777778,(3.510394811630249, -9.462623596191406, 1.4921177625656128),4,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 5.37777777778
self.communication_details == 0
sending GET,0,5.37777777778,(3.510394811630249, -9.462623596191406, 1.4921177625656128),4,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py fini-3.05478024483
y: -7.52510881424
theta: 4.77025127411
speed: 13.7966156006
id: 1
t: 117
xxx after update is x: -3.63478589058
y: -8.18751716614
theta: 4.67699623108
speed: 14.0294208527
id: 1
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:118


aaaaaa
aaaaaabbbbb
risk is [0.6372546281408967, 0.721610721873617]
222 self.state_dicts[msg.id][msg.t] is (3.4349279403686523, -9.615917205810547, 1.3345041275024414, 5.00454568862915)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: -3.63478589058
y: -8.18751716614
theta: 4.67699623108
speed: 14.0294208527
id: 1
t: 118
xxx after update is x: -3.03513884544
y: -8.32881546021
theta: 4.7556681633
speed: 13.7992372513
id: 1
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:120


xxx before update is x: -3.03513884544
y: -8.32881546021
theta: 4.7556681633
speed: 13.7992372513
id: 1
t: 119
xxx after update is x: -3.43237113953
y: -8.89857769012
theta: 5.01823472977
speed: 13.6769590378
id: 1
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.72103633169912, 0]
222 self.state_dicts[msg.id][msg.t] is (3.453418254852295, -9.351256370544434, 1.5015296936035156, 4.426098823547363)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:121


xxx before update is x: -3.43237113953
y: -8.89857769012
theta: 5.01823472977
speed: 13.6769590378
id: 1
t: 120
xxx after update is x: -3.64737224579
y: -9.71043682098
theta: 4.62821149826
speed: 13.8218154907
id: 1
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
!!! change status from grant to normal
current clock is 5.37777777778
!!!threading.Timer
tgarnt done
Received -->>: 
current clock is 5.37777777778




maneuver_negotiatir.py message_processing, it's a long code, start...




current clock is 5.37777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '7', 'Sender': '0', 'TagID': '1', 'Time': '4.71111111111', 'Position': ['(3.069822311401367', ' -13.197625160217285', ' 1.6095857620239258)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.71111111111,(3.069822311401367, -13.197625160217285, 1.6095857620239258),7,1,4.0,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish




Received -->>: 
current clock is 5.37777777778




maneuver_negotiatir.py message_processing, it's a long code, start...




current clock is 5.37777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '4.0', 'Sender': '0', 'Time': '5.37777777778', 'IntendedCourse': 'left', 'Position': ['3.510394811630249', ' -9.462623596191406', ' 1.4921177625656128'], 'TagID': '0', 'Type': 'GET', 'Velocity': '4'}
car 1 received GET,0,5.37777777778,(3.510394811630249, -9.462623596191406, 1.4921177625656128),4,1,4.0,0,left from  car0
status: 1
maneush the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: 3.51039481163
y: -9.46262359619
theta: 1.49211776257
speed: 4.76561069489
id: 0
t: 121
xxx after update is x: 3.28652191162
y: -9.70003223419
theta: 1.6531085968
speed: 3.90832233429
id: 0
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 5.42222222222




maneuver_negotiatir.py message_processing, it's a long code, start...




current clock is 5.42222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GRANT, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '5.37777777778', 'Position': ['(-3.2094099521636963', ' 59.4250602722168', ' 4.743597984313965)'], 'Type': 'GRANT'}
car 0 received GRANT,1,5.37777777778,(-3.2094099521636963, 59.4250602722168, 4.743597984313965),13,1,0,0 from  car1
status: 2
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [5.377777777777778, True, ['1']]
5.37777777778
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [5.377777777777778, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: 3.28652191162
y: -9.70003223419
theta: 1.6531085968
speed: 3.90832233429
id: 0
t: 122
xxx after update is x: 3.45641636848
y: -9.10825920105
theta: 1.51320064068
speed: 3.59205245972
id: 0
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: 3.45641636848
y: -9.10825920105
theta: 1.51320064068
speed: 3.59205245972
id: 0
t: 123
xxx after update is x: 2.89855718613
y: -9.0508556366
theta: 1.42933988571
speed: 3.32578277588
id: 0
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.44359768009791206, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1527469158172607, -11.674847602844238, 4.799999237060547, 13.434233665466309)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:125


xxx before update is x: 2.89855718613
y: -9.0508556366
theta: 1.42933988571
speed: 3.32578277588
id: 0
t: 124
xxx after update is x: 3.11189222336
y: -9.27280044556
theta: 1.49767303467
speed: 3.25505399704
id: 0
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: 3.11189222336
y: -9.27280044556
theta: 1.49767303467
speed: 3.25505399704
id: 0
t: 125
xxx after update is x: 3.37910914421
y: -8.21866703033
theta: 1.47044229507
speed: 2.98ver_negotiatir.py message_processing, (m_dict[Type] == GET)

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: -3.64737224579
y: -9.71043682098
theta: 4.62821149826
speed: 13.8218154907
id: 1
t: 121
xxx after update is x: -3.53789615631
y: -10.6202802658
theta: 4.74219560623
speed: 13.6823272705
id: 1
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion

maneuver_negotiatir.py in no conflict funtion , start
current time is  0.239012345679
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, not conlicted
maneuver_negotiatir.py message_processing,!!dd342 change status to GRANT
self.grantID is 0
GRANT,1,5.37777777778,(-3.2094099521636963, 59.4250602722168, 4.743597984313965),13,1,0,0
added car with id 0 to grantlist. current grantlist:  {0: [10.244444444444444, 'left']}
maneuver_negotiatir.py start the update_agent_message
current clock is 5.42222222222
self.communication_details == 0
sending GRANT,1,5.37777777778,(-3.2094099521636963, 59.4250602722168, 4.743597984313965),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
current clock is 5.42222222222




maneuver_negotiatir.py in the message processing function, it's a long code, finish






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: -3.53789615631
y: -10.6202802658
theta: 4.74219560623
speed: 13.6823272705
id: 1
t: 122
xxx after update is x: -3.00692796707
y: -11.1205348969
theta: 4.96615934372
speed: 13.7451858521
id: 1
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.9053759499280732, 0]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.456416368484497, -9.108259201049805, 1.5132006406784058, 3.592052459716797)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: -3.00692796707
y: -11.1205348969
theta: 4.96615934372
speed: 13.7451858521
id: 1
t: 123
xxx after update is x: -3.15274691582
y: -11.6748476028
theta: 4.79999923706
speed: 13.4342336655
id: 1
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:125


xxx before update is x: -3.15274691582
y: -11.6748476028
theta: 4.79999923706
speed: 13.4342336655
id: 1
t: 124
xxx after update is x: -3.33512449265
y: -12.1485853195
theta: 4.68192672729
speed: 13.7122154236
id: 1
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: -3.33512449265
y: -12.1485853195
theta: 4.68192672729
speed: 13.7122154236
id: 1
t: 125
xxx after update is x: -3.46652984619
y: -12.8979158401
theta: 4.62086725235
speed: 13.8161001205
id: 1
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.9341129286588526, 0.4911999999999979]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.3791091442108154, -8.218667030334473, 1.470442295074463, 2.983518600463867)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: -3.46652984619
y: -12.8979158401
theta: 4.62086725235
speed: 13.8161001205
id: 1
t: 126
xxx after update is x: -2.94039773941
y: -13.3838090897
theta: 4.78687095642
speed: 13.3235235214
id: 1
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: -2.94039773941
y: -13.3838090897
theta: 4.78687095642
speed: 13.3235235214
id: 1
t: 127
xxx after update is x: -3.29834580421
y: -14.0041360855
theta: 4.8319144249
speed: 13.9448661804
id: 1
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.8711146781736653, 0.4927999999999979]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.8109772205352783, -7.996651649475098, 1.5066782236099243, 2.6065688133239746)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:129


xxx before update is x: -3.29834580421
y: -14.0041360855
theta: 4.8319144249
speed: 13.9448661804
id: 1
t: 128
xxx after update is x: -3.26907610893
y: -14.4914236069
theta: 4.80339860916
speed: 13.1122732162
id: 1
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: -3.26907610893
y: -14.4914236069
theta: 4.80339860916
speed: 13.1122732162
id: 1
t: 129
xxx after update is x: -3.22053623199
y: -15.2235746384
theta: 4.69036245346
speed: 13.5560808182
id: 1
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
!!! change status from grant to normal
current clock is 5.77777777778
!!!threading.Timer
tgarnt done


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:131


maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
tgarnt done
xxx before update is x: -3.22053623199
y: -15.2235746384
theta: 4.69036245346
speed: 13.5560808182
id: 1
t: 130
xxx after update is x: -3.43770384789
y: -16.0176143646
theta: 4.72654819489
speed: 13.9651222229
id: 1
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.759854395952655, 0.4575999999999981]
222 self.state_dicts[msg.id][msg.t] is (3.321586847305298, -7.495687007904053, 1.6150550842285156, 1.7371232509613037)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: -3.43770384789
y: -16.0176143646
theta: 4.72654819489
speed: 13.9651222229
id: 1
t: 131
xxx after update is x: -3.16027069092
y: -16.1129264832
theta: 4.67624330521
speed: 13.925450325
id: 1
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times sp351860046
id: 0
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: 3.37910914421
y: -8.21866703033
theta: 1.47044229507
speed: 2.98351860046
id: 0
t: 126
xxx after update is x: 3.30653691292
y: -8.03172683716
theta: 1.75405216217
speed: 2.66160798073
id: 0
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.9974121980290535, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.9403977394104004, -13.383809089660645, 4.786870956420898, 13.32352352142334)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: 3.30653691292
y: -8.03172683716
theta: 1.75405216217
speed: 2.66160798073
id: 0
t: 127
xxx after update is x: 3.81097722054
y: -7.99665164948
theta: 1.50667822361
speed: 2.60656881332
id: 0
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:129


xxx before update is x: 3.81097722054
y: -7.99665164948
theta: 1.50667822361
speed: 2.60656881332
id: 0
t: 128
xxx after update is x: 2.83484196663
y: -8.28751659393
theta: 1.69067704678
speed: 2.34140610695
id: 0
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: 2.83484196663
y: -8.28751659393
theta: 1.69067704678
speed: 2.34140610695
id: 0
t: 129
xxx after update is x: 3.08371543884
y: -7.95575618744
theta: 1.59665179253
speed: 2.12461233139
id: 0
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:131


xxx before update is x: 3.08371543884
y: -7.95575618744
theta: 1.59665179253
speed: 2.12461233139
id: 0
t: 130
xxx after update is x: 3.32158684731
y: -7.4956870079
theta: 1.61505508423
speed: 1.73712325096
id: 0
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.8556282058005584, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.437703847885132, -16.017614364624023, 4.726548194885254, 13.96512222290039)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: 3.32158684731
y: -7.4956870079
theta: 1.61505508423
speed: 1.73712325096
id: 0
t: 131
xxx after update is x: 3.01939558983
y: -7.38277196884
theta: 1.7995994091
speed: 1.84047055244
id: 0
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:133


xxx before update is x: 3.01939558983
y: -7.38277196884
theta: 1.7995994091
speed: 1.84047055244
id: 0
t: 132
xxx after update is x: 2.57216453552
y: -7.40102338791
theta: 1.62468266487
speed: 1.74487769604
id: 0
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspin:133

xxx before update is x: -3.16027069092
y: -16.1129264832
theta: 4.67624330521
speed: 13.925450325
id: 1
t: 132
xxx after update is x: -3.34595894814
y: -17.1248703003
theta: 4.76649999619
speed: 14.0370254517
id: 1
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:134


maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
tgarnt done
xxx before update is x: -3.34595894814
y: -17.1248703003
theta: 4.76649999619
speed: 14.0370254517
id: 1
t: 133
xxx after update is x: -2.66132307053
y: -17.6034469604
theta: 4.71154737473
speed: 14.1635789871
id: 1
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.8282281567309573, 0.5103999999999982]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.273923873901367, -7.158134937286377, 1.576004981994629, 1.0455107688903809)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:135


xxx before update is x: -2.66132307053
y: -17.6034469604
theta: 4.71154737473
speed: 14.1635789871
id: 1
t: 134
xxx after update is x: -3.47411489487
y: -18.0430412292
theta: 4.48251342773
speed: 13.52780056
id: 1
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: -3.47411489487
y: -18.0430412292
theta: 4.48251342773
speed: 13.52780056
id: 1
t: 135
xxx after update is x: -3.3105032444
y: -18.6207866669
theta: 4.86236953735
speed: 13.6936721802
id: 1
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:137


xxx before update is x: -3.3105032444
y: -18.6207866669
theta: 4.86236953735
speed: 13.6936721802
id: 1
t: 136
xxx after update is x: -2.93416881561
y: -19.9572868347
theta: 4.86434984207
speed: 13.9872159958
id: 1
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 6.08888888889




maneuver_negotiatir.py message_processing, it's a long code, start...




current clock is 6.08888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '4', 'Sender': '0', 'TagID': '1', 'Time': '5.37777777778', 'Position': ['(3.510394811630249', ' -9.462623596191406', ' 1.4921177625656128)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,5.37777777778,(3.510394811630249, -9.462623596191406, 1.4921177625656128),4,1,4.0,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish




Received -->>: 
current clock is 6.08888888889




maneuver_negotiatir.py message_processing, it's a long code, start...




current clock is 6.08888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '4.0', 'Sender': '0', 'Time': '6.04444444444', 'IntendedCourse': 'left', 'Position': ['3.5375540256500244', ' -7.83396053314209', ' 1.617181658744812'], 'TagID': '0', 'Type': 'GET', 'Velocity': '0'}
car 1 received GET,0,6.04444444444,(3.5eed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: 2.57216453552
y: -7.40102338791
theta: 1.62468266487
speed: 1.74487769604
id: 0
t: 133
xxx after update is x: 3.2739238739
y: -7.15813493729
theta: 1.57600498199
speed: 1.04551076889
id: 0
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.8543213847405967, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.661323070526123, -17.60344696044922, 4.711547374725342, 14.163578987121582)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:135


xxx before update is x: 3.2739238739
y: -7.15813493729
theta: 1.57600498199
speed: 1.04551076889
id: 0
t: 134
xxx after update is x: 3.581782341
y: -7.43620872498
theta: 1.53343057632
speed: 0.734288215637
id: 0
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: 3.581782341
y: -7.43620872498
theta: 1.53343057632
speed: 0.734288215637
id: 0
t: 135
xxx after update is x: 3.53755402565
y: -7.83396053314
theta: 1.61718165874
speed: 0.6766705513
id: 0
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,5.37777777778,(3.510394811630249, -9.462623596191406, 1.4921177625656128),4,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 6.04444444444
self.communication_details == 0
sending RELEASE,0,5.37777777778,(3.510394811630249, -9.462623596191406, 1.4921177625656128),4,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 6.04444444444
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [6.044444444444444, True, ['1']]
6.04444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,6.04444444444,(3.5375540256500244, -7.83396053314209, 1.617181658744812),0,1,4.0,0,left
!!!!change state to get
GET,0,6.04444444444,(3.5375540256500244, -7.83396053314209, 1.617181658744812),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 6.04444444444
self.communication_details == 0
sending GET,0,6.04444444444,(3.5375540256500244, -7.83396053314209, 1.617181658744812),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:137


xxx before update is x: 3.53755402565
y: -7.83396053314
theta: 1.61718165874
speed: 0.6766705513
id: 0
t: 136
xxx after update is x: 3.17772054672
y: -6.84265565872
theta: 1.59546434879
speed: 0.232692718506
id: 0
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
finish tr375540256500244, -7.83396053314209, 1.617181658744812),0,1,4.0,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.268641975308
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, not conlicted
maneuver_negotiatir.py message_processing,!!dd342 change status to GRANT
self.grantID is 0
GRANT,1,6.08888888889,(-3.2094099521636963, 59.4250602722168, 4.743597984313965),13,1,0,0
************normalize weight**********************
added car with id 0 to grantlist. current grantlist:  {0: [10.822222222222223, 'left']}
maneuver_negotiatir.py start the update_agent_message
current clock is 6.08888888889
self.communication_details == 0
sending GRANT,1,6.08888888889,(-3.2094099521636963, 59.4250602722168, 4.743597984313965),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
current clock is 6.08888888889




maneuver_negotiatir.py in the message processing function, it's a long code, finish




maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
!!! change status from grant to normal
current clock is 6.08888888889
aaaaaa
aaaaaabbbbb
risk is [0.7054285378851894, 0.4943999999999979]
222 self.state_dicts[msg.id][msg.t] is (3.177720546722412, -6.842655658721924, 1.5954643487930298, 0.23269271850585938)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
!!!threading.Timer
tgarnt done
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
tgarnt done


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: -2.93416881561
y: -19.9572868347
theta: 4.86434984207
speed: 13.9872159958
id: 1
t: 137
xxx after update is x: -3.14566349983
y: -19.8892917633
theta: 4.56107902527
speed: 14.1890563965
id: 1
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.14566349983
y: -19.8892917633
theta: 4.56107902527
speed: 14.1890563965
id: 1
t: 138
xxx after update is x: -3.14100527763
y: -21.091293335
theta: 4.73198986053
speed: 14.035449028
id: 1
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:139


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: -3.14100527763
y: -21.091293335
theta: 4.73198986053
speed: 14.035449028
id: 1
t: 139
xxx after update is x: -3.10867404938
y: -21.4570426941
theta: 4.75510978699
speed: 13.7816104889
id: 1
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.7306720366117058, 0.4623999999999981]
222 self.state_dicts[msg.id][msg.t] is (2.947415351867676, -7.179535865783691, 1.6239080429077148, 0.3649207055568695)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: -3.10867404938
y: -21.4570426941
theta: 4.75510978699
speed: 13.7816104889
id: 1
t: 140
xxx after update is x: -3.63103508949
y: -21.6004257202
theta: 4.88670301437
speed: 13.7968416214
id: 1
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeedy maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
Received -->>: 
current clock is 6.08888888889




maneuver_negotiatir.py message_processing, it's a long code, start...




current clock is 6.08888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GRANT, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '6.08888888889', 'Position': ['(-3.2094099521636963', ' 59.4250602722168', ' 4.743597984313965)'], 'Type': 'GRANT'}
car 0 received GRANT,1,6.08888888889,(-3.2094099521636963, 59.4250602722168, 4.743597984313965),13,1,0,0 from  car1
status: 2
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [6.044444444444444, True, ['1']]
6.04444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [6.044444444444444, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish




aaaaaa
risk is [0.7161202690536758, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.934168815612793, -19.957286834716797, 4.864349842071533, 13.987215995788574)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: 3.17772054672
y: -6.84265565872
theta: 1.59546434879
speed: 0.232692718506
id: 0
t: 137
xxx after update is x: 3.300989151
y: -7.74022293091
theta: 1.55466353893
speed: 0.213293686509
id: 0
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:139


xxx before update is x: 3.300989151
y: -7.74022293091
theta: 1.55466353893
speed: 0.213293686509
id: 0
t: 138
xxx after update is x: 3.26757073402
y: -7.41884088516
theta: 1.54568839073
speed: -0.0678095370531
id: 0
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: 3.26757073402
y: -7.41884088516
theta: 1.54568839073
speed: -0.0678095370531
id: 0
t: 139
xxx after update is x: 2.94741535187
y: -7.17953586578
theta: 1.62390804291
speed: 0.364920705557
id: 0
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: 2.94741535187
y: -7.17953586578
theta: 1.62390804291
speed: 0.364920705557
id: 0
t: 140
xxx after update is x: 3.57892298698
y: -7.15171766281
theta: 1.65586149693
speed: 0.353348344564
id: 0
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.5953420747284808, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.631035089492798, -21.600425720214844, 4.886703014373779, 13.796841621398926)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxx < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: -3.63103508949
y: -21.6004257202
theta: 4.88670301437
speed: 13.7968416214
id: 1
t: 141
xxx after update is x: -3.39942955971
y: -22.0921478271
theta: 4.7518157959
speed: 13.8196430206
id: 1
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.4250134724458753, 0.5087999999999981]
222 self.state_dicts[msg.id][msg.t] is (3.35768985748291, -7.572581768035889, 1.532047152519226, -0.24576912820339203)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: -3.39942955971
y: -22.0921478271
theta: 4.7518157959
speed: 13.8196430206
id: 1
t: 142
xxx after update is x: -3.07600188255
y: -23.3016777039
theta: 4.65874576569
speed: 13.6814603806
id: 1
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: -3.07600188255
y: -23.3016777039
theta: 4.65874576569
speed: 13.6814603806
id: 1
t: 143
xxx after update is x: -3.26390314102
y: -23.4860687256
theta: 4.70172977448
speed: 13.9803285599
id: 1
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: -3.26390314102
y: -23.4860687256
theta: 4.70172977448
speed: 13.9803285599
id: 1
t: 144
xxx after update is x: -3.78994417191
y: -24.2695217133
theta: 4.55754375458
speed: 13.8080320358
id: 1
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.8048253219203131, 0.47199999999999803]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.538762331008911, -7.304534435272217, 1.3382772207260132, 0.3090897798538208)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:146


xxx before update is x: -3.78994417191
y: -24.2695217133
theta: 4.55754375458
speed: 13.8080320358
id: 1
t: 145
xxx after update is x: -2.98747634888
y: -25.1163463593
theta: 4.76728582382
speed: 13.5223331451
id: 1
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.98747634888
y: -25.1163463593
theta: 4.76728582382
speed: 13.5223331451
id: 1
t: 146
xxx after update is x: -2.9045882225
y: -26.0118408203
theta: 4.74013900757
speed: 13.8490848541
id: 1
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:147




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.9045882225
y: -26.0118408203
theta: 4.74013900757
speed: 13.8490848541
id: 1
t: 147
xxx after update is x: -2.89168071747
y: -26.1004562378
theta: 4.8691239357
speed: 14.1102323532
id: 1
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:148


************normalizxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: 3.57892298698
y: -7.15171766281
theta: 1.65586149693
speed: 0.353348344564
id: 0
t: 141
xxx after update is x: 3.35768985748
y: -7.57258176804
theta: 1.53204715252
speed: -0.245769128203
id: 0
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: 3.35768985748
y: -7.57258176804
theta: 1.53204715252
speed: -0.245769128203
id: 0
t: 142
xxx after update is x: 2.8581199646
y: -7.86673593521
theta: 1.54048788548
speed: 0.174010261893
id: 0
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: 2.8581199646
y: -7.86673593521
theta: 1.54048788548
speed: 0.174010261893
id: 0
t: 143
xxx after update is x: 3.32701730728
y: -7.48383665085
theta: 1.51539635658
speed: 0.196129024029
id: 0
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.5087508212140529, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2639031410217285, -23.486068725585938, 4.701729774475098, 13.980328559875488)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: 3.32701730728
y: -7.48383665085
theta: 1.51539635658
speed: 0.196129024029
id: 0
t: 144
xxx after update is x: 3.53876233101
y: -7.30453443527
theta: 1.33827722073
speed: 0.309089779854
id: 0
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:146


xxx before update is x: 3.53876233101
y: -7.30453443527
theta: 1.33827722073
speed: 0.309089779854
id: 0
t: 145
xxx after update is x: 3.00156950951
y: -7.45441532135
theta: 1.51654863358
speed: 0.111544147134
id: 0
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: 3.00156950951
y: -7.45441532135
theta: 1.51654863358
speed: 0.111544147134
id: 0
t: 146
xxx after update is x: 2.98205709457
y: -6.53804540634
theta: 1.6984142065
speed: 0.171047270298
id: 0
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: 2.98205709457
y: -6.53804540634
theta: 1.6984142065
speed: 0.171047270298
id: 0
t: 147
xxx after update is x: 3.12559723854
y: -7.34814167023
theta: 1.78666293621
speed: 0.00809484813362
id: 0
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.8621561033351972, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.8916807174682617, -26.10045623779297, 4.869123935699463, 14.11023235321045)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times se weight**********************
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.89168071747
y: -26.1004562378
theta: 4.8691239357
speed: 14.1102323532
id: 1
t: 148
xxx after update is x: -3.4471051693
y: -27.6931858063
theta: 4.77861642838
speed: 13.2554893494
id: 1
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:149


risk is [0.6593907041334027, 0.475199999999998]
222 self.state_dicts[msg.id][msg.t] is (3.106297492980957, -7.673731803894043, 1.681115984916687, -0.056568242609500885)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: -3.4471051693
y: -27.6931858063
theta: 4.77861642838
speed: 13.2554893494
id: 1
t: 149
xxx after update is x: -3.22871112823
y: -27.2952651978
theta: 4.66452169418
speed: 14.059928894
id: 1
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:151




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:152


xxx before update is x: -3.22871112823
y: -27.2952651978
theta: 4.66452169418
speed: 14.059928894
id: 1
t: 150
xxx after update is x: -3.05100011826
y: -29.8229732513
theta: 4.7160358429
speed: 13.8134765625
id: 1
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.05100011826
y: -29.8229732513
theta: 4.7160358429
speed: 13.8134765625
id: 1
t: 151
xxx after update is x: -3.15697479248
y: -29.4058704376
theta: 4.59469795227
speed: 14.2184581757
id: 1
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 6.75555555556




maneuver_negotiatir.py message_processing, it's a long code, start...




current clock is 6.75555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '6.04444444444', 'Position': ['(3.5375540256500244', ' -7.83396053314209', ' 1.617181658744812)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,6.04444444444,(3.5375540256500244, -7.83396053314209, 1.617181658744812),0,1,4.0,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.15697479248
y: -29.4058704376
theta: 4.59469795227
speed: 14.2184581757
id: 1
t: 152
xxx after update is x: -3.2621588707
y: -29.3744544983
theta: 4.69808721542
speed: 14.2756271362
id: 1
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:153




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.2621588707
y: -29.3744544983
theta: 4.69808721542
speed: 14.2756271362
id: 1
t: 153
xxx after update is x: -2.85749602318
y: -29.7094745636
theta: 4.55948448181
speed: 14.0773954391
id: 1
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:154


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.956097pin:149

xxx before update is x: 3.12559723854
y: -7.34814167023
theta: 1.78666293621
speed: 0.00809484813362
id: 0
t: 148
xxx after update is x: 3.10629749298
y: -7.67373180389
theta: 1.68111598492
speed: -0.0565682426095
id: 0
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: 3.10629749298
y: -7.67373180389
theta: 1.68111598492
speed: -0.0565682426095
id: 0
t: 149
xxx after update is x: 2.90610718727
y: -7.68108034134
theta: 1.74308788776
speed: 0.0374337248504
id: 0
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: 2.90610718727
y: -7.68108034134
theta: 1.74308788776
speed: 0.0374337248504
id: 0
t: 150
xxx after update is x: 3.52952051163
y: -7.95840454102
theta: 1.48270237446
speed: -0.29717862606
id: 0
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,6.04444444444,(3.5375540256500244, -7.83396053314209, 1.617181658744812),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 6.71111111111
self.communication_details == 0
sending RELEASE,0,6.04444444444,(3.5375540256500244, -7.83396053314209, 1.617181658744812),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 6.71111111111
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [6.666666666666667, True, ['1']]
6.66666666667
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,6.71111111111,(3.5295205116271973, -7.958404541015625, 1.482702374458313),0,1,4.0,0,left
!!!!change state to get
GET,0,6.71111111111,(3.5295205116271973, -7.958404541015625, 1.482702374458313),0,1,4.0,0,left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:152




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:153




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:154


xxx before update is x: 3.52952051163
y: -7.95840454102
theta: 1.48270237446
speed: -0.29717862606
id: 0
t: 151
xxx after update is x: 2.98455166817
y: -7.45827054977
theta: 1.56363630295
speed: 0.186200335622
id: 0
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 2.98455166817
y: -7.45827054977
theta: 1.56363630295
speed: 0.186200335622
id: 0
t: 152
xxx after update is x: 3.25713467598
y: -7.98981380463
theta: 1.60280883312
speed: 0.23594635725
id: 0
t: 153
maneuver_negotiatir.py finish the upd5586733145, 0.4927999999999979]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.3935129642486572, -7.532402038574219, 1.6709462404251099, -0.16534431278705597)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
current clock is 6.84444444444




maneuver_negotiatir.py message_processing, it's a long code, start...




current clock is 6.84444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1




maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '4.0', 'Sender': '0', 'Time': '6.71111111111', 'IntendedCourse': 'left', 'Position': ['3.5295205116271973', ' -7.958404541015625', ' 1.482702374458313'], 'TagID': '0', 'Type': 'GET', 'Velocity': '0'}




car 1 received GET,0,6.71111111111,(3.5295205116271973, -7.958404541015625, 1.482702374458313),0,1,4.0,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.298271604938
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, not conlicted
maneuver_negotiatir.py message_processing,!!dd342 change status to GRANT
self.grantID is 0
GRANT,1,6.84444444444,(-3.2094099521636963, 59.4250602722168, 4.743597984313965),13,1,0,0


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:155


xxx before update is x: -2.85749602318
y: -29.7094745636
theta: 4.55948448181
speed: 14.0773954391
id: 1
t: 154
xxx after update is x: -3.15692615509
y: -30.8669929504
theta: 4.61632156372
speed: 13.5271549225
id: 1
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
added car with id 0 to grantlist. current grantlist:  {0: [11.622222222222222, 'left']}
maneuver_negotiatir.py start the update_agent_message
current clock is 6.88888888889
self.communication_details == 0
sending GRANT,1,6.84444444444,(-3.2094099521636963, 59.4250602722168, 4.743597984313965),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
current clock is 6.88888888889




maneuver_negotiatir.py in the message processing function, it's a long code, finish




maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
!!! change status from grant to normal
current clock is 6.88888888889
!!!threading.Timer
tgarnt done
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
tgarnt done


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: -3.15692615509
y: -30.8669929504
theta: 4.61632156372
speed: 13.5271549225
id: 1
t: 155
xxx after update is x: -3.34072041512
y: -31.7081127167
theta: 4.69112825394
speed: 13.7960805893
id: 1
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: -3.34072041512
y: -31.7081127167
theta: 4.69112825394
speed: 13.7960805893
id: 1
t: 156
xxx after update is x: -3.3127412796
y: -31.7546920776
theta: 4.55958271027
speed: 13.6250324249
id: 1
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.9126033083860083, 0.481599999999998]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.0880582332611084, -7.870540142059326, 1.5628830194473267, 0.21448925137519836)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state functionate agent state from ros funtion
xxx before update is x: 3.25713467598
y: -7.98981380463
theta: 1.60280883312
speed: 0.23594635725
id: 0
t: 153
xxx after update is x: 3.39351296425
y: -7.53240203857
theta: 1.67094624043
speed: -0.165344312787
id: 0
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py start the update_agent_message
current clock is 6.84444444444
self.communication_details == 0
sending GET,0,6.71111111111,(3.5295205116271973, -7.958404541015625, 1.482702374458313),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:155


xxx before update is x: 3.39351296425
y: -7.53240203857
theta: 1.67094624043
speed: -0.165344312787
id: 0
t: 154
xxx after update is x: 3.35756516457
y: -7.92690134048
theta: 1.51543390751
speed: 0.185095906258
id: 0
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 6.88888888889




maneuver_negotiatir.py message_processing, it's a long code, start...




current clock is 6.88888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GRANT, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '6.84444444444', 'Position': ['(-3.2094099521636963', ' 59.4250602722168', ' 4.743597984313965)'], 'Type': 'GRANT'}
car 0 received GRANT,1,6.84444444444,(-3.2094099521636963, 59.4250602722168, 4.743597984313965),13,1,0,0 from  car1
status: 2
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [6.844444444444444, True, ['1']]
6.84444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [6.844444444444444, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: 3.35756516457
y: -7.92690134048
theta: 1.51543390751
speed: 0.185095906258
id: 0
t: 155
xxx after update is x: 3.24842977524
y: -7.36114931107
theta: 1.73565161228
speed: 0.124716244638
id: 0
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.8701593481270536, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3407204151153564, -31.708112716674805, 4.691128253936768, 13.796080589294434)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: 3.24842977524
y: -7.36114931107
theta: 1.73565161228
speed: 0.124716244638
id: 0
t: 156
xxx after update is x: 3.08805823326
y: -7.87054014206
theta: 1.56288301945
speed: 0.214489251375
id: 0
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: 3.0880582332


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: -3.3127412796
y: -31.7546920776
theta: 4.55958271027
speed: 13.6250324249
id: 1
t: 157
xxx after update is x: -3.01960659027
y: -31.9860515594
theta: 4.71203756332
speed: 13.5347042084
id: 1
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:159


xxx before update is x: -3.01960659027
y: -31.9860515594
theta: 4.71203756332
speed: 13.5347042084
id: 1
t: 158
xxx after update is x: -3.36288428307
y: -32.8975524902
theta: 4.8214468956
speed: 13.8240909576
id: 1
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:160


xxx before update is x: -3.36288428307
y: -32.8975524902
theta: 4.8214468956
speed: 13.8240909576
id: 1
t: 159
xxx after update is x: -2.84102487564
y: -34.0639533997
theta: 4.65849685669
speed: 13.983092308
id: 1
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.8265582594304752, 0.476799999999998]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.092723846435547, -6.990293025970459, 1.6224702596664429, 0.1690346896648407)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: -2.84102487564
y: -34.0639533997
theta: 4.65849685669
speed: 13.983092308
id: 1
t: 160
xxx after update is x: -3.45044970512
y: -33.7074165344
theta: 4.70583534241
speed: 13.343378067
id: 1
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: -3.45044970512
y: -33.7074165344
theta: 4.70583534241
speed: 13.343378067
id: 1
t: 161
xxx after update is x: -2.90684103966
y: -35.0962371826
theta: 4.81454181671
speed: 13.632273674
id: 1
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:163


xxx before update is x: -2.90684103966
y: -35.0962371826
theta: 4.81454181671
speed: 13.632273674
id: 1
t: 162
xxx after update is x: -3.56061673164
y: -35.9407844543
theta: 4.80992364883
speed: 14.0269937515
id: 1
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.7223276490310085, 0.49919999999999787]
222 self.state_dicts[msg.id][msg.t] is (3.184030294418335, -7.861306190490723, 1.383386492729187, 0.06543449312448502)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: -3.56061673164
y: -35.9407844543
theta: 4.80992364883
speed: 14.0269937515
id: 1
t: 163
xxx after update is x: -3.02078151703
y: -36.6327095032
theta: 4.54579210281
speed: 13.9148178101
id: 1
t: 164
maneuver_negotiatir.py 6
y: -7.87054014206
theta: 1.56288301945
speed: 0.214489251375
id: 0
t: 157
xxx after update is x: 3.06375622749
y: -7.89103507996
theta: 1.55569708347
speed: -0.00671073328704
id: 0
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:159


xxx before update is x: 3.06375622749
y: -7.89103507996
theta: 1.55569708347
speed: -0.00671073328704
id: 0
t: 158
xxx after update is x: 3.0627644062
y: -7.2591958046
theta: 1.52431225777
speed: 0.146715983748
id: 0
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.0627644062
y: -7.2591958046
theta: 1.52431225777
speed: 0.146715983748
id: 0
t: 159
xxx after update is x: 3.09272384644
y: -6.99029302597
theta: 1.62247025967
speed: 0.169034689665
id: 0
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:160


aaaaaa
risk is [0.9114023475477683, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.841024875640869, -34.0639533996582, 4.658496856689453, 13.983092308044434)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.09272384644
y: -6.99029302597
theta: 1.62247025967
speed: 0.169034689665
id: 0
t: 160
xxx after update is x: 3.56319570541
y: -7.41788434982
theta: 1.64121353626
speed: -0.340825349092
id: 0
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:161




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: 3.56319570541
y: -7.41788434982
theta: 1.64121353626
speed: -0.340825349092
id: 0
t: 161
xxx after update is x: 3.59555268288
y: -7.63464021683
theta: 1.32228600979
speed: 0.442167073488
id: 0
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:163


xxx before update is x: 3.59555268288
y: -7.63464021683
theta: 1.32228600979
speed: 0.442167073488
id: 0
t: 162
xxx after update is x: 3.18403029442
y: -7.86130619049
theta: 1.38338649273
speed: 0.0654344931245
id: 0
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.7549438926196474, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5606167316436768, -35.9407844543457, 4.8099236488342285, 14.026993751525879)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: 3.18403029442
y: -7.86130619049
theta: 1.38338649273
speed: 0.0654344931245
id: 0
t: 163
xxx after update is x: 2.46114134789
y: -7.54161024094
theta: 1.58897542953
speed: -0.19816018641
id: 0
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:165


xxx before update is x: 2.46114134789
y: -7.54161024094
theta: 1.58897542953
speed: -0.19816018641
id: 0
t: 164
xxx after update is x: 3.64569067955
y: -7.54446268082
theta: 1.61235618591
speed: -0.258031874895
id: 0
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:166


xxx before update is x: 3.64569067955
y: -7.54446268082
theta: 1.61235618591
speed: -0.258031874895
id: 0
t: 165
xxx after update is x: 3.50406503677
y: -7.51683616638
theta: 1.39233231544
speed: -0.244692742825
id: 0
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: 3.50406503677
y: -7.51683616638
theta: 1.39233231544
speed: -0.244692742825
id: 0
t: 166
xxx after update is x: 2.65755176544
y: -7.37936162949
theta: 1.50727164745
speed: -0.0801195576787
id: 0
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: 2.65755176544
y: -7.37936162949
theta: 1.50727164745
speed: -0.0801195576787
id: 0
t: 167
xxx after update is x: 3.22617506981
y: -7.26925611496
theta: 1.48140692711
speed: 0.00720393424854
id: 0
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.8648746346006958, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.801321268081665, -38.224769592285156, 4.7433247566223145, 13.933591842651367)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: 3.22617506981
y: -7.26925611496
theta: 1.48140692711
speed: 0.00720393424854
id: 0
t: 168
xxx after update is x: 3.13385510445
y: -7.34223175049
theta: 1.46955442429
speed: -0.412627249956
id: 0
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,6.71111111111,(3.5295205116271973, -7.958404541015625, 1.482702374458313),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.51111111111
self.communication_details == 0
sending RELEASE,0,6.71111111111,(3.5295205116271973, -7.958404541015625, 1.482702374458313),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.51111111111
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.511111111111111, True, ['1']]
7.51111111111
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.51111111111,(3.133855104446411, -7.342231750488281, 1.4695544242858887),0,1,4.0,0,left
!!!!change state to get
GET,0,7.51111111111,(3.133855104446411, -7.342231750488281, 1.4695544242858887),0,finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:165


xxx before update is x: -3.02078151703
y: -36.6327095032
theta: 4.54579210281
speed: 13.9148178101
id: 1
t: 164
xxx after update is x: -2.99305057526
y: -36.4694099426
theta: 4.76531219482
speed: 13.9742059708
id: 1
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:166


xxx before update is x: -2.99305057526
y: -36.4694099426
theta: 4.76531219482
speed: 13.9742059708
id: 1
t: 165
xxx after update is x: -2.99823188782
y: -37.4474945068
theta: 4.73167085648
speed: 13.8485279083
id: 1
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
removed car with id 0 from grantlist. currentgrantlist: {}
aaaaaa
aaaaaabbbbb
risk is [0.9019943206913883, 0.5247999999999986]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.5040650367736816, -7.516836166381836, 1.3923323154449463, -0.24469274282455444)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: -2.99823188782
y: -37.4474945068
theta: 4.73167085648
speed: 13.8485279083
id: 1
t: 166
xxx after update is x: -3.55796217918
y: -37.9508171082
theta: 4.61160755157
speed: 13.5573759079
id: 1
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: -3.55796217918
y: -37.9508171082
theta: 4.61160755157
speed: 13.5573759079
id: 1
t: 167
xxx after update is x: -2.80132126808
y: -38.2247695923
theta: 4.74332475662
speed: 13.9335918427
id: 1
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: -2.80132126808
y: -38.2247695923
theta: 4.74332475662
speed: 13.9335918427
id: 1
t: 168
xxx after update is x: -3.1465344429
y: -39.0563201904
theta: 4.70105695724
speed: 13.6992292404
id: 1
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
Received -->>: 
current clock is 7.51111111111




maneuver_negotiatir.py message_processing, it's a long code, start...




current clock is 7.51111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '6.71111111111', 'Position': ['(3.5295205116271973', ' -7.958404541015625', ' 1.482702374458313)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,6.71111111111,(3.5295205116271973, -7.958404541015625, 1.482702374458313),0,1,4.0,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish




Received -->>: 
current clock is 7.51111111111




maneuver_negotiatir.py message_processing, it's a long code, start...




current clock is 7.51111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '4.0', 'Sender': '0', 'Time': '7.51111111111', 'IntendedCourse': 'left', 'Position': ['3.133855104446411', ' -7.342231750488281', ' 1.4695544242858887'], 'TagID': '0', 'Type': 'GET', 'Velocity': '0'}

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: -3.1465344429
y: -39.0563201904
theta: 4.70105695724
speed: 13.6992292404
id: 1
t: 169
xxx after update is x: -3.47502493858
y: -39.8651275635
theta: 4.81289958954
speed: 13.4390487671
id: 1
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion

car 1 received GET,0,7.51111111111,(3.133855104446411, -7.342231750488281, 1.4695544242858887),0,1,4.0,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.333827160494
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, not conlicted
maneuver_negotiatir.py message_processing,!!dd342 change status to GRANT
self.grantID is 0
GRANT,1,7.51111111111,(-3.2094099521636963, 59.4250602722168, 4.743597984313965),13,1,0,0
added car with id 0 to grantlist. current grantlist:  {0: [12.244444444444444, 'left']}
maneuver_negotiatir.py start the update_agent_message
current clock is 7.55555555556
self.communication_details == 0
sending GRANT,1,7.51111111111,(-3.2094099521636963, 59.4250602722168, 4.743597984313965),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
current clock is 7.55555555556




maneuver_negotiatir.py in the message processing function, it's a long code, finish




maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
!!! change status from grant to normal
current clock is 7.55555555556
aaaaaa
aaaaaabbbbb
risk is [0.6599771394342655, 0.5119999999999982]
222 self.state_dicts[msg.id][msg.t] is (3.2888166904449463, -7.790619850158691, 1.5169973373413086, -0.022053001448512077)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
!!!threading.Timer
tgarnt done
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
tgarnt done


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:171


xxx before update is x: -3.47502493858
y: -39.8651275635
theta: 4.81289958954
speed: 13.4390487671
id: 1
t: 170
xxx after update is x: -3.28785228729
y: -40.4267616272
theta: 4.70610904694
speed: 13.7411661148
id: 1
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: -3.28785228729
y: -40.4267616272
theta: 4.70610904694
speed: 13.7411661148
id: 1
t: 171
xxx after update is x: -3.40939593315
y: -40.7641677856
theta: 4.896068573
speed: 13.8291740417
id: 1
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.92543021014076, 0.505599999999998]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.403794288635254, -6.860755443572998, 1.658238410949707, 0.14831404387950897)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:173


xxx before update is x: -3.40939593315
y: -40.7641677856
theta: 4.896068573
speed: 13.8291740417
id: 1
t: 172
xxx after update is x: -2.90978312492
y: -42.0722846985
th1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.51111111111
self.communication_details == 0
sending GET,0,7.51111111111,(3.133855104446411, -7.342231750488281, 1.4695544242858887),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: 3.13385510445
y: -7.34223175049
theta: 1.46955442429
speed: -0.412627249956
id: 0
t: 169
xxx after update is x: 3.28881669044
y: -7.79061985016
theta: 1.51699733734
speed: -0.0220530014485
id: 0
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
Received -->>: 
current clock is 7.55555555556




maneuver_negotiatir.py message_processing, it's a long code, start...




current clock is 7.55555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GRANT, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '7.51111111111', 'Position': ['(-3.2094099521636963', ' 59.4250602722168', ' 4.743597984313965)'], 'Type': 'GRANT'}
car 0 received GRANT,1,7.51111111111,(-3.2094099521636963, 59.4250602722168, 4.743597984313965),13,1,0,0 from  car1
status: 2
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.511111111111111, True, ['1']]
7.51111111111
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [7.511111111111111, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:171


xxx before update is x: 3.28881669044
y: -7.79061985016
theta: 1.51699733734
speed: -0.0220530014485
id: 0
t: 170
xxx after update is x: 3.4201157093
y: -7.69099092484
theta: 1.51420247555
speed: -0.0642307326198
id: 0
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: 3.4201157093
y: -7.69099092484
theta: 1.51420247555
speed: -0.0642307326198
id: 0
t: 171
xxx after update is x: 3.40379428864
y: -6.86075544357
theta: 1.65823841095
speed: 0.14831404388
id: 0
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.8899416439372915, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.409395933151245, -40.76416778564453, 4.896068572998047, 13.829174041748047)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:173


xxx before update is x: 3.40379428864
y: -6.86075544357
theta: 1.65823841095
speed: 0.14831404388
id: 0
t: 172
xxx after update is x: 3.27034091949
y: -7.77674293518
theta: 1.46378934383
speed: -0.021575409919
id: 0
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py ueta: 4.74971103668
speed: 13.3326511383
id: 1
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.90978312492
y: -42.0722846985
theta: 4.74971103668
speed: 13.3326511383
id: 1
t: 173
xxx after update is x: -3.47629904747
y: -41.821182251
theta: 4.55691242218
speed: 13.7710828781
id: 1
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:174




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: -3.47629904747
y: -41.821182251
theta: 4.55691242218
speed: 13.7710828781
id: 1
t: 174
xxx after update is x: -3.13878917694
y: -42.6828346252
theta: 4.52482366562
speed: 13.9271230698
id: 1
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.7974303275764585, 0.5231999999999986]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: -3.13878917694
y: -42.6828346252
theta: 4.52482366562
speed: 13.9271230698
id: 1
t: 175
xxx after update is x: -3.41963863373
y: -43.0373649597
theta: 4.7239112854
speed: 14.0115594864
id: 1
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.6207656860351562, -7.5220136642456055, 1.556306004524231, 0.3200088441371918)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:177


pdate function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: 3.27034091949
y: -7.77674293518
theta: 1.46378934383
speed: -0.021575409919
id: 0
t: 173
xxx after update is x: 3.08585262299
y: -6.93551206589
theta: 1.61615455151
speed: 0.0903933793306
id: 0
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: 3.08585262299
y: -6.93551206589
theta: 1.61615455151
speed: 0.0903933793306
id: 0
t: 174
xxx after update is x: 2.9620885849
y: -7.37955141068
theta: 1.60847187042
speed: 0.124148271978
id: 0
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.7998714649563519, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.138789176940918, -42.68283462524414, 4.5248236656188965, 13.927123069763184)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: 2.9620885849
y: -7.37955141068
theta: 1.60847187042
speed: 0.124148271978
id: 0
t: 175
xxx after update is x: 3.62076568604
y: -7.52201366425
theta: 1.55630600452
speed: 0.320008844137
id: 0
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:177


aaaaaa
risk is [0.9041330038055512, 0.0]
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.51111111111,(3.133855104446411, -7.342231750488281, 1.4695544242858887),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.51111111111,(3.133855104446411, -7.342231750488281, 1.4695544242858887),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
maneuver_negotiatir.py intended_coursemaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reachedmaneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver

reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_messagemaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver

finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,leftmaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
self.agents_to_ask is ['1']maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reachedmaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuvermaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,leftmaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 7.82222222222
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [7.822222222222222, True, ['1']]
7.82222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
!!!!change state to get
GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending GET,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0
maneuver_negotiatir.py start the update_agent_message
current clock is 7.82222222222
self.communication_details == 0
sending RELEASE,0,7.82222222222,(3.6207656860351562, -7.5220136642456055, 1.556306004524231),0,1,4.0,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it ... logging to /home/lu/.ros/log/fbaf717c-ff1d-11e8-af00-000c291801fc/roslaunch-ubuntu-19439.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch
[1mstarted roslaunch server http://ubuntu:39437/[0m

SUMMARY
========

PARAMETERS
 * /enable_negotiator: True
 * /file_prefix: 
 * /nr_cars: 2
 * /plot: False
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /save: False

NODES
  /
    car0 (virtual_blinker/sim.py)
    car1 (virtual_blinker/sim.py)
    cloud (virtual_blinker/cloud.py)
    rviz (rviz/rviz)
    visualization (virtual_blinker/visualization.py)

auto-starting new master
[1mprocess[master]: started with pid [19449][0m
[1mROS_MASTER_URI=http://localhost:11311[0m
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch http://localhost:11311
[1msetting /run_id to fbaf717c-ff1d-11e8-af00-000c291801fc[0m
[1mprocess[rosout-1]: started with pid [19462][0m
started core service [/rosout]
[1mprocess[visualization-2]: started with pid [19479][0m
[1mprocess[rviz-3]: started with pid [19480][0m
[1mprocess[car0-4]: started with pid [19481][0m
[1mprocess[car1-5]: started with pid [19482][0m
[1mprocess[cloud-6]: started with pid [19484][0m
[cloud-6] killing on exit
[car1-5] killing on exit
[car0-4] killing on exit
[rviz-3] killing on exit
[visualization-2] killing on exit
[rosout-1] killing on exit
[master] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
[1mdone[0m
