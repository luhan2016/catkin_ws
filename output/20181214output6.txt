sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 0
s is car_state1
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.598009109497
222 self.state_dicts[msg.id][msg.t] is (-2.97363018989563, 73.77599334716797, 4.665749549865723, 13.484781265258789)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:1




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:2


222 self.state_dicts[msg.id][msg.t] is (-3.075599431991577, 73.50343322753906, 4.716074466705322, 13.819412231445312)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7f1ab90d5830>


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:3


self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f1ab90f45f0>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (-3.17210054397583, 73.5311279296875, 4.83900260925293, 14.026351928710938)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:4


maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9000)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:5


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: 3.62597846985
y: -61.5638580322
theta: 1.35632359982
speed: 13.8537282944
id: 0
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: 3.62597846985
y: -61.5638580322
theta: 1.35632359982
speed: 13.8537282944
id: 0
t: 5
xxx after update is x: 2.93422031403
y: -61.2315101624
theta: 1.43094038963
speed: 14.0408315659
id: 0
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:7


xxx before update is x: 2.93422031403
y: -61.2315101624
theta: 1.43094038963
speed: 14.0408315659
id: 0
t: 6
xxx after update is x: 2.81281447411
y: -61.0886688232
theta: 1.66351783276
speed: 13.8717288971
id: 0
t: 7
maneuver_negotiatir.py finish the update agent state from sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 1
s is car_state0
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.572993993759


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:1


222 self.state_dicts[msg.id][msg.t] is (3.1994452476501465, -64.32466888427734, 1.5925283432006836, 14.053476333618164)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7f11e8a74998>


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:2


self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f11e8a93d40>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:3


maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (2.7239301204681396, -63.316619873046875, 1.6072686910629272, 13.46478271484375)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9001)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:4


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: -3.22767782211
y: 72.6509094238
theta: 4.69778013229
speed: 14.0235071182
id: 1
t: 4
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:5


xxx before update is x: -3.22767782211
y: 72.6509094238
theta: 4.69778013229
speed: 14.0235071182
id: 1
t: 4
xxx after update is x: -3.28704786301
y: 72.0125274658
theta: 4.82449960709
speed: 13.8189334869
id: 1
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: -3.28704786301
y: 72.0125274658
theta: 4.82449960709
speed: 13.8189334869
id: 1
t: 5
xxx after update is x: -3.23764777184
y: 71.1610031128
theta: 4.86803722382
speed: 13.9302082062
id: 1
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:7


xxx before update is x: -3.23764777184
y: 71.1610031128
theta: 4.86803722382
speed: 13.9302082062
id: 1
t: 6
xxx after update is x: -3.05211091042
y: 70.5489349365
theta: 4.84578132629
speed: 14.1150484085
id: 1
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.05211091042
y: 70.5489349365
theta: 4.84578132629
speed: 14.1150484085
id: 1
t: 7
xxx after update is x: -3.05547642708
y: 69.946937561
theta: 4.62642765045
speed: 13.6436862946
id: 1
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:8




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: -3.05547642708
y: 69.946937561
theta: 4.62642765045
speed: 13.6436862946
id: 1
t: 8
xxx after update is x: -4.05349397659
y: 69.7730178833
theta: 4.64806604385
speed: 13.7122211456
id: 1
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.43654136982094255, 0.756159549680124]
222 self.state_dicts[msg.id][msg.t] is (3.591416120529175, -59.53438186645508, 1.571940302848816, 13.843631744384766)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: -4.05349397659
y: 69.7730178833
theta: 4.64806604385
speed: 13.7122211456
id: 1
t: 9
xxx after update is x: -3.11578679085
y: 68.4478530884
theta: 4.76817178726
speed: 13.5174026489
id: 1
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.444444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: -3.11578679085
y: 68.4478530884
theta: 4.76817178726
speed: 13.5174026489
id: 1
t: 10
xxx after update is x: -2.76124119759
y: 68.1921005249
theta: 4.7811422348
speed: 13.7185087204
id: 1
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: -2.76124119759
y: 68.1921005249
theta: 4.7811422348
speed: 13.7185087204
id: 1
t: 11
xxx after update is x: -3.502140522
y: 67.2941207886
theta: 4.69160461426
speed: 13.9925251007
id: 1
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: -3.502140522
y: 67.2941207886
theta: 4.69160461426
speed: 13.9925251007
id: 1
t: 12
xxx after update is x: -2.97354531288
y: 66.8856964111
theta: 4.7723069191
speed: 13.7337970734
id: 1
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3289343989910368, 0.9999999999999992]
222 self.state_dicts[msg.id][msg.t] is (2.8880112171173096, -56.3813591003418, 1.6816728115081787, 13.950826644897461)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: -2.97354531288
y: 66.8856964111
theta: 4.7723069191
speed: 13.7337970734
id: 1
t: 13
xxx aros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: 2.81281447411
y: -61.0886688232
theta: 1.66351783276
speed: 13.8717288971
id: 0
t: 7
xxx after update is x: 3.5030272007
y: -59.9820365906
theta: 1.5302464962
speed: 13.7211112976
id: 0
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: 3.5030272007
y: -59.9820365906
theta: 1.5302464962
speed: 13.7211112976
id: 0
t: 8
xxx after update is x: 3.59141612053
y: -59.5343818665
theta: 1.57194030285
speed: 13.8436317444
id: 0
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: 3.59141612053
y: -59.5343818665
theta: 1.57194030285
speed: 13.8436317444
id: 0
t: 9
xxx after update is x: 3.02355980873
y: -58.61561203
theta: 1.53202605247
speed: 13.5397157669
id: 0
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: 3.02355980873
y: -58.61561203
theta: 1.53202605247
speed: 13.5397157669
id: 0
t: 10
xxx after update is x: 2.94209671021
y: -57.9424324036
theta: 1.57411408424
speed: 13.8167734146
id: 0
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.42057205797311975, 0.36486309007491025]
222 self.state_dicts[msg.id][msg.t] is (-2.7612411975860596, 68.19210052490234, 4.781142234802246, 13.71850872039795)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.488888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: 2.94209671021
y: -57.9424324036
theta: 1.57411408424
speed: 13.8167734146
id: 0
t: 11
xxx after update is x: 3.51348829269
y: -57.5596504211
theta: 1.51688754559
speed: 13.7334165573
id: 0
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: 3.51348829269
y: -57.5596504211
theta: 1.51688754559
speed: 13.7334165573
id: 0
t: 12
xxx after update is x: 2.88801121712
y: -56.3813591003
theta: 1.68167281151
speed: 13.9508266449
id: 0
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: 2.88801121712
y: -56.3813591003
theta: 1.68167281151
speed: 13.9508266449
id: 0
t: 13
xxx after update is x: 4.07665300369
y: -55.9722251892
theta: 1.62344408035
speed: 13.9961605072
id: 0
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: 4.07665300369
y: -55.9722251892
theta: 1.62344408035
speed: 13.9961605072
id: 0
t: 14
xxx after update is x: 3.48155593fter update is x: -2.8231408596
y: 65.9971466064
theta: 4.78711986542
speed: 13.429807663
id: 1
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: -2.8231408596
y: 65.9971466064
theta: 4.78711986542
speed: 13.429807663
id: 1
t: 14
xxx after update is x: -3.23002505302
y: 65.4842147827
theta: 4.66290569305
speed: 14.0510559082
id: 1
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: -3.23002505302
y: 65.4842147827
theta: 4.66290569305
speed: 14.0510559082
id: 1
t: 15
xxx after update is x: -3.35765504837
y: 65.2759552002
theta: 4.68183040619
speed: 13.8059549332
id: 1
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: -3.35765504837
y: 65.2759552002
theta: 4.68183040619
speed: 13.8059549332
id: 1
t: 16
xxx after update is x: -3.55679249763
y: 64.2168121338
theta: 4.78865003586
speed: 13.9803495407
id: 1
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.55679249763
y: 64.2168121338
theta: 4.78865003586
speed: 13.9803495407
id: 1
t: 17
xxx after update is x: -3.46964836121
y: 64.3479995728
theta: 4.61700057983
speed: 13.893453598
id: 1
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.8






self.maneuver_requested None
leave the update function 
in spin function, finish the n times spin:18


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: -3.46964836121
y: 64.3479995728
theta: 4.61700057983
speed: 13.893453598
id: 1
t: 18
xxx after update is x: -3.11329579353
y: 62.9880905151
theta: 4.64561986923
speed: 14.1329755783
id: 1
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4032523098611164, 0]
222 self.state_dicts[msg.id][msg.t] is (3.256596088409424, -52.95693588256836, 1.7918769121170044, 13.946524620056152)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: -3.11329579353
y: 62.9880905151
theta: 4.64561986923
speed: 14.1329755783
id: 1
t: 19
xxx after update is x: -3.45739769936
y: 62.5761795044
theta: 4.61454248428
speed: 13.8458404541
id: 1
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.45739769936
y: 62.5761795044
theta: 4.61454248428
speed: 13.8458404541
id: 1
t: 20
xxx after update is x: -3.38140392303
y: 61.9527626038
theta: 4.72812175751
speed: 13.9822845459
id: 1
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:21




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the 872
y: -56.3335876465
theta: 1.48411679268
speed: 13.7683792114
id: 0
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: 3.48155593872
y: -56.3335876465
theta: 1.48411679268
speed: 13.7683792114
id: 0
t: 15
xxx after update is x: 2.97190785408
y: -55.2541465759
theta: 1.70726883411
speed: 13.7839708328
id: 0
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: 2.97190785408
y: -55.2541465759
theta: 1.70726883411
speed: 13.7839708328
id: 0
t: 16
xxx after update is x: 3.49021148682
y: -54.1944389343
theta: 1.70364558697
speed: 13.8711442947
id: 0
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.4069864140590425, 0.36681962843983373]
222 self.state_dicts[msg.id][msg.t] is (-3.5567924976348877, 64.21681213378906, 4.788650035858154, 13.98034954071045)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: 3.49021148682
y: -54.1944389343
theta: 1.70364558697
speed: 13.8711442947
id: 0
t: 17
xxx after update is x: 3.08161759377
y: -54.1311569214
theta: 1.54602122307
speed: 13.8323202133
id: 0
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.8






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: 3.08161759377
y: -54.1311569214
theta: 1.54602122307
speed: 13.8323202133
id: 0
t: 18
xxx after update is x: 3.25659608841
y: -52.9569358826
theta: 1.79187691212
speed: 13.9465246201
id: 0
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: 3.25659608841
y: -52.9569358826
theta: 1.79187691212
speed: 13.9465246201
id: 0
t: 19
xxx after update is x: 2.69514465332
y: -52.7588615417
theta: 1.53926038742
speed: 14.1944122314
id: 0
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: 2.69514465332
y: -52.7588615417
theta: 1.53926038742
speed: 14.1944122314
id: 0
t: 20
xxx after update is x: 3.52842783928
y: -51.6358528137
theta: 1.52720856667
speed: 14.0074567795
id: 0
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: 3.52842783928
y: -51.6358528137
theta: 1.52720856667
speed: 14.0074567795
id: 0
t: 21
xxx after update is x: 3.01052284241
y: -51.6339492798
theta: 1.77154743671
speed: 13.9838237762
id: 0
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:23


xxx ben times spin:22

xxx before update is x: -3.38140392303
y: 61.9527626038
theta: 4.72812175751
speed: 13.9822845459
id: 1
t: 21
xxx after update is x: -2.77660250664
y: 61.0625724792
theta: 4.88682842255
speed: 13.8233718872
id: 1
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: -2.77660250664
y: 61.0625724792
theta: 4.88682842255
speed: 13.8233718872
id: 1
t: 22
xxx after update is x: -3.25715851784
y: 60.7594337463
theta: 4.73088932037
speed: 13.8026008606
id: 1
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: -3.25715851784
y: 60.7594337463
theta: 4.73088932037
speed: 13.8026008606
id: 1
t: 23
xxx after update is x: -3.31329298019
y: 60.0720825195
theta: 4.71383237839
speed: 13.940571785
id: 1
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: -3.31329298019
y: 60.0720825195
theta: 4.71383237839
speed: 13.940571785
id: 1
t: 24
xxx after update is x: -3.1755797863
y: 59.2287330627
theta: 4.71275615692
speed: 13.6642999649
id: 1
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3929192755282237, 0]
222 self.state_dicts[msg.id][msg.t] is (2.9626011848449707, -50.31871795654297, 1.5125833749771118, 14.000324249267578)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:26


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.11111111111






self.maneuver_requested None
xxx before update is x: -3.1755797863
y: 59.2287330627
theta: 4.71275615692
speed: 13.6642999649
id: 1
t: 25
xxx after update is x: -3.02043414116
y: 58.8893089294
theta: 4.74120664597
speed: 13.8446416855
id: 1
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: -3.02043414116
y: 58.8893089294
theta: 4.74120664597
speed: 13.8446416855
id: 1
t: 26
xxx after update is x: -3.57907581329
y: 58.7179069519
theta: 4.86291360855
speed: 13.8248071671
id: 1
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: -3.57907581329
y: 58.7179069519
theta: 4.86291360855
speed: 13.8248071671
id: 1
t: 27
xxx after update is x: -3.25064396858
y: 57.4314193726
theta: 4.64088821411
speed: 13.8603372574
id: 1
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.25064396858
y: 57.4314193726
theta: 4.64088821411
speed: 13.8603372574
id: 1
t: 28
xxx after update is x: -2.81656742096
y: 57.4649543762
theta: 4.83391141891
speed: 13.9331655502
id: 1
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:29




going to thefore update is x: 3.01052284241
y: -51.6339492798
theta: 1.77154743671
speed: 13.9838237762
id: 0
t: 22
xxx after update is x: 3.45337319374
y: -51.0080795288
theta: 1.54928708076
speed: 14.1625041962
id: 0
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: 3.45337319374
y: -51.0080795288
theta: 1.54928708076
speed: 14.1625041962
id: 0
t: 23
xxx after update is x: 3.71811389923
y: -50.5447654724
theta: 1.5022662878
speed: 13.7060232162
id: 0
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: 3.71811389923
y: -50.5447654724
theta: 1.5022662878
speed: 13.7060232162
id: 0
t: 24
xxx after update is x: 2.96260118484
y: -50.3187179565
theta: 1.51258337498
speed: 14.0003242493
id: 0
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: 2.96260118484
y: -50.3187179565
theta: 1.51258337498
speed: 14.0003242493
id: 0
t: 25
xxx after update is x: 3.3658490181
y: -48.7315216064
theta: 1.47365427017
speed: 14.2413330078
id: 0
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.15555555556






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.3658490181
y: -48.7315216064
theta: 1.47365427017
speed: 14.2413330078
id: 0
t: 26
xxx after update is x: 3.47011733055
y: -48.2545471191
theta: 1.63331246376
speed: 13.777100563
id: 0
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:27


aaaaaa
risk is [0.3933777202898892, 0.35512118720397107]
222 self.state_dicts[msg.id][msg.t] is (-3.579075813293457, 58.7179069519043, 4.862913608551025, 13.824807167053223)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.47011733055
y: -48.2545471191
theta: 1.63331246376
speed: 13.777100563
id: 0
t: 27
xxx after update is x: 3.48228144646
y: -47.4872169495
theta: 1.5576877594
speed: 14.0920763016
id: 0
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:28




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: 3.48228144646
y: -47.4872169495
theta: 1.5576877594
speed: 14.0920763016
id: 0
t: 28
xxx after update is x: 3.29752993584
y: -46.5735549927
theta: 1.72171354294
speed: 13.6816320419
id: 0
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.29752993584
y: -46.5735549927
theta: 1.72171354294
speed: 13.6816320419
id: 0
t: 29
xxx after update is x: 3.46726155281
y: -46.8305168152
theta: 1.81373357773
speed: 13.620010376
id: 0
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:30




going to the update function
sim.py in update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: -2.81656742096
y: 57.4649543762
theta: 4.83391141891
speed: 13.9331655502
id: 1
t: 29
xxx after update is x: -3.16054677963
y: 56.3413009644
theta: 4.46178245544
speed: 13.9212293625
id: 1
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3808348350216246, 0]
222 self.state_dicts[msg.id][msg.t] is (3.467261552810669, -46.83051681518555, 1.8137335777282715, 13.620010375976562)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: -3.16054677963
y: 56.3413009644
theta: 4.46178245544
speed: 13.9212293625
id: 1
t: 30
xxx after update is x: -3.46746516228
y: 55.635307312
theta: 4.75805330276
speed: 13.9757432938
id: 1
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: -3.46746516228
y: 55.635307312
theta: 4.75805330276
speed: 13.9757432938
id: 1
t: 31
xxx after update is x: -3.39627695084
y: 54.9486427307
theta: 4.88394069672
speed: 14.0874633789
id: 1
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: -3.39627695084
y: 54.9486427307
theta: 4.88394069672
speed: 14.0874633789
id: 1
t: 32
xxx after update is x: -3.42334151268
y: 54.4452857971
theta: 4.67180967331
speed: 13.7977275848
id: 1
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.46666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: -3.42334151268
y: 54.4452857971
theta: 4.67180967331
speed: 13.7977275848
id: 1
t: 33
xxx after update is x: -3.65377211571
y: 54.1906280518
theta: 4.65682458878
speed: 13.9686613083
id: 1
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: -3.65377211571
y: 54.1906280518
theta: 4.65682458878
speed: 13.9686613083
id: 1
t: 34
xxx after update is x: -3.3634493351
y: 53.3241882324
theta: 4.72919464111
speed: 13.9397144318
id: 1
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.33322433536322704, 0]
222 self.state_dicts[msg.id][msg.t] is (3.142038106918335, -43.533023834228516, 1.456979751586914, 13.749710083007812)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: -3.3634493351
y: 53.3241882324
theta: 4.72919464111
speed: 13.9397144318
id: 1
t: 35
xxx after update is x: -3.26712679863
y: 52.6494598389
theta: 4.72415590286
speed: 13.6884841919
id: 1
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: 3.46726155281
y: -46.8305168152
theta: 1.81373357773
speed: 13.620010376
id: 0
t: 30
xxx after update is x: 2.85796046257
y: -45.8912849426
theta: 1.61665165424
speed: 14.0858249664
id: 0
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: 2.85796046257
y: -45.8912849426
theta: 1.61665165424
speed: 14.0858249664
id: 0
t: 31
xxx after update is x: 3.1108417511
y: -45.3702049255
theta: 1.51417732239
speed: 13.7606840134
id: 0
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: 3.1108417511
y: -45.3702049255
theta: 1.51417732239
speed: 13.7606840134
id: 0
t: 32
xxx after update is x: 3.29246020317
y: -44.5760383606
theta: 1.57104241848
speed: 14.1030607224
id: 0
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.29246020317
y: -44.5760383606
theta: 1.57104241848
speed: 14.1030607224
id: 0
t: 33
xxx after update is x: 2.9073882103
y: -43.6075706482
theta: 1.52594065666
speed: 13.9368162155
id: 0
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:34


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.51111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: 2.9073882103
y: -43.6075706482
theta: 1.52594065666
speed: 13.9368162155
id: 0
t: 34
xxx after update is x: 3.14203810692
y: -43.5330238342
theta: 1.45697975159
speed: 13.749710083
id: 0
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.3737878791340346, 0.3243384622377099]
222 self.state_dicts[msg.id][msg.t] is (-3.3634493350982666, 53.324188232421875, 4.729194641113281, 13.939714431762695)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: 3.14203810692
y: -43.5330238342
theta: 1.45697975159
speed: 13.749710083
id: 0
t: 35
xxx after update is x: 3.22121238708
y: -43.1241569519
theta: 1.40299940109
speed: 13.8656692505
id: 0
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: 3.22121238708
y: -43.1241569519
theta: 1.40299940109
speed: 13.8656692505
id: 0
t: 36
xxx after update is x: 3.47215032578
y: -42.3551483154
theta: 1.46967446804
speed: 13.7861452103
id: 0
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: 3.47215032578
y: -42.3551483154
theta: 1.46967446804
speed: 13.7861452103
id: 0
t: 37
xxx after update is x: 3.3999042511
y: -41.4365730286
theta: 1.57041084
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: -3.26712679863
y: 52.6494598389
theta: 4.72415590286
speed: 13.6884841919
id: 1
t: 36
xxx after update is x: -3.23526549339
y: 52.1773910522
theta: 4.68711328506
speed: 14.2698974609
id: 1
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: -3.23526549339
y: 52.1773910522
theta: 4.68711328506
speed: 14.2698974609
id: 1
t: 37
xxx after update is x: -3.47311854362
y: 51.244304657
theta: 4.55757856369
speed: 14.1268033981
id: 1
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: -3.47311854362
y: 51.244304657
theta: 4.55757856369
speed: 14.1268033981
id: 1
t: 38
xxx after update is x: -3.19331097603
y: 50.8883857727
theta: 4.85812997818
speed: 14.0306663513
id: 1
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3554104537980958, 0]
222 self.state_dicts[msg.id][msg.t] is (2.9506876468658447, -40.6306266784668, 1.5681488513946533, 13.935457229614258)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.19331097603
y: 50.8883857727
theta: 4.85812997818
speed: 14.0306663513
id: 1
t: 39
xxx after update is x: -3.4693710804
y: 50.2973442078
theta: 4.67060136795
speed: 13.9854269028
id: 1
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:40




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: -3.4693710804
y: 50.2973442078
theta: 4.67060136795
speed: 13.9854269028
id: 1
t: 40
xxx after update is x: -3.06338953972
y: 50.0070991516
theta: 4.87819480896
speed: 13.8268117905
id: 1
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.82222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: -3.06338953972
y: 50.0070991516
theta: 4.87819480896
speed: 13.8268117905
id: 1
t: 41
xxx after update is x: -2.6606991291
y: 49.2435417175
theta: 4.70155239105
speed: 13.7367372513
id: 1
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: -2.6606991291
y: 49.2435417175
theta: 4.70155239105
speed: 13.7367372513
id: 1
t: 42
xxx after update is x: -3.38498449326
y: 48.7735290527
theta: 4.518201828
speed: 14.07924366
id: 1
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3592105660475535, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2881436347961426, -39.144874572753906, 1.7042608261108398, 13.874584197998047)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py766
speed: 13.8684778214
id: 0
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: 3.3999042511
y: -41.4365730286
theta: 1.57041084766
speed: 13.8684778214
id: 0
t: 38
xxx after update is x: 2.95068764687
y: -40.6306266785
theta: 1.56814885139
speed: 13.9354572296
id: 0
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: 2.95068764687
y: -40.6306266785
theta: 1.56814885139
speed: 13.9354572296
id: 0
t: 39
xxx after update is x: 2.58087921143
y: -40.0753059387
theta: 1.38334572315
speed: 13.9444723129
id: 0
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: 2.58087921143
y: -40.0753059387
theta: 1.38334572315
speed: 13.9444723129
id: 0
t: 40
xxx after update is x: 2.7239716053
y: -39.814201355
theta: 1.5618853569
speed: 13.6136579514
id: 0
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: 2.7239716053
y: -39.814201355
theta: 1.5618853569
speed: 13.6136579514
id: 0
t: 41
xxx after update is x: 3.56273913383
y: -39.1894226074
theta: 1.57538425922
speed: 13.6644144058
id: 0
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.86666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: 3.56273913383
y: -39.1894226074
theta: 1.57538425922
speed: 13.6644144058
id: 0
t: 42
xxx after update is x: 3.2881436348
y: -39.1448745728
theta: 1.70426082611
speed: 13.874584198
id: 0
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.362716881307462, 0.37891403064388385]
222 self.state_dicts[msg.id][msg.t] is (-3.3849844932556152, 48.773529052734375, 4.51820182800293, 14.079243659973145)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: 3.2881436348
y: -39.1448745728
theta: 1.70426082611
speed: 13.874584198
id: 0
t: 43
xxx after update is x: 3.20842075348
y: -38.3230018616
theta: 1.49356937408
speed: 14.0368928909
id: 0
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: 3.20842075348
y: -38.3230018616
theta: 1.49356937408
speed: 14.0368928909
id: 0
t: 44
xxx after update is x: 3.21780514717
y: -37.4335174561
theta: 1.50192832947
speed: 13.5084962845
id: 0
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.21780514717
y: -37.4335174561
theta: 1.50192832947
speed: 13.5084962845
id: 0
t: 45
xxx update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: -3.38498449326
y: 48.7735290527
theta: 4.518201828
speed: 14.07924366
id: 1
t: 43
xxx after update is x: -3.35603022575
y: 48.0153083801
theta: 4.82610988617
speed: 13.7618541718
id: 1
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: -3.35603022575
y: 48.0153083801
theta: 4.82610988617
speed: 13.7618541718
id: 1
t: 44
xxx after update is x: -3.44518947601
y: 46.7874069214
theta: 4.73326969147
speed: 14.1093215942
id: 1
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: -3.44518947601
y: 46.7874069214
theta: 4.73326969147
speed: 14.1093215942
id: 1
t: 45
xxx after update is x: -3.7858839035
y: 46.6107368469
theta: 4.70907115936
speed: 13.6977624893
id: 1
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: -3.7858839035
y: 46.6107368469
theta: 4.70907115936
speed: 13.6977624893
id: 1
t: 46
xxx after update is x: -3.35501337051
y: 45.7081565857
theta: 4.52319717407
speed: 13.6783723831
id: 1
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.35501337051
y: 45.7081565857
theta: 4.52319717407
speed: 13.6783723831
id: 1
t: 47
xxx after update is x: -3.47914624214
y: 45.4075584412
theta: 4.68087863922
speed: 13.6092157364
id: 1
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:48




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: -3.47914624214
y: 45.4075584412
theta: 4.68087863922
speed: 13.6092157364
id: 1
t: 48
xxx after update is x: -3.97102594376
y: 44.3498916626
theta: 4.81295156479
speed: 14.0933895111
id: 1
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.17777777778






self.maneuver_requested None
aaaaaa
aaaaaabbbbb
risk is [0.274432206074986, 0]
222 self.state_dicts[msg.id][msg.t] is (2.924163341522217, -34.8788948059082, 1.605072259902954, 13.732606887817383)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.97102594376
y: 44.3498916626
theta: 4.81295156479
speed: 14.0933895111
id: 1
t: 49
xxx after update is x: -3.31882357597
y: 43.7257575989
theta: 4.74787330627
speed: 13.7903518677
id: 1
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:50




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: -3.31882357597
y: 43.7257575989
theta: 4.74787330627
speed: 13.7903518677
id: 1
t: 50
xxx after update is x: -3.28810191154
y: 43.4131584167
theta: 4.69468736649
speed: 13.6316 after update is x: 3.46152305603
y: -36.7051429749
theta: 1.34466314316
speed: 13.773276329
id: 0
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:46




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: 3.46152305603
y: -36.7051429749
theta: 1.34466314316
speed: 13.773276329
id: 0
t: 46
xxx after update is x: 3.38918328285
y: -35.96925354
theta: 1.45921885967
speed: 13.8612289429
id: 0
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: 3.38918328285
y: -35.96925354
theta: 1.45921885967
speed: 13.8612289429
id: 0
t: 47
xxx after update is x: 3.11423635483
y: -35.3391571045
theta: 1.60651385784
speed: 13.8133153915
id: 0
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: 3.11423635483
y: -35.3391571045
theta: 1.60651385784
speed: 13.8133153915
id: 0
t: 48
xxx after update is x: 2.92416334152
y: -34.8788948059
theta: 1.6050722599
speed: 13.7326068878
id: 0
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: 2.92416334152
y: -34.8788948059
theta: 1.6050722599
speed: 13.7326068878
id: 0
t: 49
xxx after update is x: 3.2143201828
y: -34.1492729187
theta: 1.4937942028
speed: 13.6778450012
id: 0
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.22222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: 3.2143201828
y: -34.1492729187
theta: 1.4937942028
speed: 13.6778450012
id: 0
t: 50
xxx after update is x: 3.20424795151
y: -33.2245903015
theta: 1.44131505489
speed: 13.3965473175
id: 0
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: 3.20424795151
y: -33.2245903015
theta: 1.44131505489
speed: 13.3965473175
id: 0
t: 51
xxx after update is x: 2.83378005028
y: -32.1794204712
theta: 1.66174042225
speed: 13.657957077
id: 0
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.35043628523207254, 0.3365926265790329]
222 self.state_dicts[msg.id][msg.t] is (-3.3176510334014893, 42.63550567626953, 4.684169292449951, 13.865655899047852)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:53


xxx before update is x: 2.83378005028
y: -32.1794204712
theta: 1.66174042225
speed: 13.657957077
id: 0
t: 52
xxx after update is x: 3.1891336441
y: -32.666179657
theta: 1.53405928612
speed: 13.9980831146
id: 0
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspe318512
id: 1
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: -3.28810191154
y: 43.4131584167
theta: 4.69468736649
speed: 13.6316318512
id: 1
t: 51
xxx after update is x: -3.3176510334
y: 42.6355056763
theta: 4.68416929245
speed: 13.865655899
id: 1
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:53


xxx before update is x: -3.3176510334
y: 42.6355056763
theta: 4.68416929245
speed: 13.865655899
id: 1
t: 52
xxx after update is x: -3.11765098572
y: 42.338470459
theta: 4.70737075806
speed: 13.9110994339
id: 1
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: -3.11765098572
y: 42.338470459
theta: 4.70737075806
speed: 13.9110994339
id: 1
t: 53
xxx after update is x: -3.18031263351
y: 41.6643295288
theta: 4.73005580902
speed: 13.7111206055
id: 1
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.32855821945639824, 0]
222 self.state_dicts[msg.id][msg.t] is (2.7067689895629883, -31.406064987182617, 1.5994101762771606, 13.872647285461426)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: -3.18031263351
y: 41.6643295288
theta: 4.73005580902
speed: 13.7111206055
id: 1
t: 54
xxx after update is x: -3.23386836052
y: 40.9352760315
theta: 4.85478591919
speed: 14.2614402771
id: 1
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: -3.23386836052
y: 40.9352760315
theta: 4.85478591919
speed: 14.2614402771
id: 1
t: 55
xxx after update is x: -3.86029696465
y: 40.322429657
theta: 4.75720024109
speed: 14.0346307755
id: 1
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.48888888889






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: -3.86029696465
y: 40.322429657
theta: 4.75720024109
speed: 14.0346307755
id: 1
t: 56
xxx after update is x: -3.48868489265
y: 39.5779685974
theta: 4.71648454666
speed: 14.069439888
id: 1
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: -3.48868489265
y: 39.5779685974
theta: 4.71648454666
speed: 14.069439888
id: 1
t: 57
xxx after update is x: -2.82786488533
y: 39.0145149231
theta: 4.58009433746
speed: 14.1771430969
id: 1
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: -2.82786488533
y: 39.0145149231
thed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: 3.1891336441
y: -32.666179657
theta: 1.53405928612
speed: 13.9980831146
id: 0
t: 53
xxx after update is x: 2.70676898956
y: -31.4060649872
theta: 1.59941017628
speed: 13.8726472855
id: 0
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 2.70676898956
y: -31.4060649872
theta: 1.59941017628
speed: 13.8726472855
id: 0
t: 54
xxx after update is x: 3.18714094162
y: -31.1074848175
theta: 1.62058532238
speed: 13.8119935989
id: 0
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:55




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: 3.18714094162
y: -31.1074848175
theta: 1.62058532238
speed: 13.8119935989
id: 0
t: 55
xxx after update is x: 3.18618679047
y: -29.907087326
theta: 1.4487746954
speed: 13.6194705963
id: 0
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: 3.18618679047
y: -29.907087326
theta: 1.4487746954
speed: 13.6194705963
id: 0
t: 56
xxx after update is x: 3.33143925667
y: -29.6229324341
theta: 1.5153055191
speed: 13.9225215912
id: 0
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: 3.33143925667
y: -29.6229324341
theta: 1.5153055191
speed: 13.9225215912
id: 0
t: 57
xxx after update is x: 3.379301548
y: -28.5491809845
theta: 1.56028449535
speed: 13.9446907043
id: 0
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.57777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.36784944369157035, 0.3893920702584048]
222 self.state_dicts[msg.id][msg.t] is (-2.8278648853302, 39.0145149230957, 4.580094337463379, 14.177143096923828)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.379301548
y: -28.5491809845
theta: 1.56028449535
speed: 13.9446907043
id: 0
t: 58
xxx after update is x: 3.32172894478
y: -28.6486301422
theta: 1.48842906952
speed: 13.7663488388
id: 0
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:59




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: 3.32172894478
y: -28.6486301422
theta: 1.48842906952
speed: 13.7663488388
id: 0
t: 59
xxx after update is x: 3.23125576973
y: -27.7952594757
theta: 1.49745059013
speed: 13.6316757202
id: 0
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: 3.23125576973
y: -27.7952594757
theta: 1.49745059013
speed: 13.6316757202
id: 0
t: 60
xxx after update is x: 3.02369165421
y: -26.8584423065
theta: 1.55727684498
speed: 13.8756351471
id: 0
t: 61
maneuver_eta: 4.58009433746
speed: 14.1771430969
id: 1
t: 58
xxx after update is x: -3.17476415634
y: 38.4258422852
theta: 4.43631792068
speed: 13.8756732941
id: 1
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3063769303401474, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3217289447784424, -28.648630142211914, 1.488429069519043, 13.766348838806152)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: -3.17476415634
y: 38.4258422852
theta: 4.43631792068
speed: 13.8756732941
id: 1
t: 59
xxx after update is x: -3.16590380669
y: 37.67811203
theta: 4.671667099
speed: 13.8660097122
id: 1
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: -3.16590380669
y: 37.67811203
theta: 4.671667099
speed: 13.8660097122
id: 1
t: 60
xxx after update is x: -3.37130832672
y: 36.8784561157
theta: 4.72983121872
speed: 14.042057991
id: 1
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: -3.37130832672
y: 36.8784561157
theta: 4.72983121872
speed: 14.042057991
id: 1
t: 61
xxx after update is x: -2.97836256027
y: 36.5889129639
theta: 4.72660970688
speed: 14.069483757
id: 1
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: -2.97836256027
y: 36.5889129639
theta: 4.72660970688
speed: 14.069483757
id: 1
t: 62
xxx after update is x: -3.32083058357
y: 35.9244155884
theta: 4.70262670517
speed: 14.3305463791
id: 1
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: -3.32083058357
y: 35.9244155884
theta: 4.70262670517
speed: 14.3305463791
id: 1
t: 63
xxx after update is x: -2.9768269062
y: 35.4052200317
theta: 4.61340093613
speed: 13.7306966782
id: 1
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3671483773143221, 0]
222 self.state_dicts[msg.id][msg.t] is (3.5735557079315186, -25.464248657226562, 1.68996262550354, 13.606635093688965)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.84444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: -2.9768269062
y: 35.4052200317
theta: 4.61340093613
speed: 13.7306966782
id: 1
t: 64
xxx after update is x: -3.3543150425
y: 34.8067245483
theta: 4.70062875748
speed: 13.6668729782
id: 1
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: -3.3543150425
y: 34.8067245483
theta: 4.70062875748
speed: 13negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: 3.02369165421
y: -26.8584423065
theta: 1.55727684498
speed: 13.8756351471
id: 0
t: 61
xxx after update is x: 3.10933709145
y: -27.5511760712
theta: 1.56155431271
speed: 13.9933452606
id: 0
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 3.10933709145
y: -27.5511760712
theta: 1.56155431271
speed: 13.9933452606
id: 0
t: 62
xxx after update is x: 3.08486628532
y: -26.1588802338
theta: 1.42345893383
speed: 13.5691747665
id: 0
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:63




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: 3.08486628532
y: -26.1588802338
theta: 1.42345893383
speed: 13.5691747665
id: 0
t: 63
xxx after update is x: 3.57355570793
y: -25.4642486572
theta: 1.6899626255
speed: 13.6066350937
id: 0
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3445902991537213, 0.32461120010787514]
222 self.state_dicts[msg.id][msg.t] is (-2.9768269062042236, 35.40522003173828, 4.613400936126709, 13.730696678161621)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: 3.57355570793
y: -25.4642486572
theta: 1.6899626255
speed: 13.6066350937
id: 0
t: 64
xxx after update is x: 3.13757562637
y: -24.4894371033
theta: 1.48018288612
speed: 13.3323717117
id: 0
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.88888888889






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: 3.13757562637
y: -24.4894371033
theta: 1.48018288612
speed: 13.3323717117
id: 0
t: 65
xxx after update is x: 2.88648962975
y: -24.3300476074
theta: 1.53455018997
speed: 12.5497741699
id: 0
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: 2.88648962975
y: -24.3300476074
theta: 1.53455018997
speed: 12.5497741699
id: 0
t: 66
xxx after update is x: 3.58504366875
y: -23.3236579895
theta: 1.72991108894
speed: 12.8216934204
id: 0
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 3.58504366875
y: -23.3236579895
theta: 1.72991108894
speed: 12.8216934204
id: 0
t: 67
xxx after update is x: 2.72408699989
y: -23.0665092468
theta: 1.50342750549
speed: 12.5843601227
id: 0
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:68




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: 2.72408699989
y: -23.0665092468
theta: 1.50342750549
speed: 12.5843601227
id: 0
t: 68
xxx after update is x: 3.59304022789
y: -22..6668729782
id: 1
t: 65
xxx after update is x: -3.27652144432
y: 34.4748649597
theta: 4.8885717392
speed: 14.0260734558
id: 1
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: -3.27652144432
y: 34.4748649597
theta: 4.8885717392
speed: 14.0260734558
id: 1
t: 66
xxx after update is x: -3.20565700531
y: 33.962184906
theta: 4.62689208984
speed: 13.5882024765
id: 1
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.20565700531
y: 33.962184906
theta: 4.62689208984
speed: 13.5882024765
id: 1
t: 67
xxx after update is x: -2.93876981735
y: 33.0946273804
theta: 4.54711198807
speed: 13.9947319031
id: 1
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:68




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: -2.93876981735
y: 33.0946273804
theta: 4.54711198807
speed: 13.9947319031
id: 1
t: 68
xxx after update is x: -3.32372403145
y: 32.2402648926
theta: 4.62527942657
speed: 13.7822275162
id: 1
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.32372403145
y: 32.2402648926
theta: 4.62527942657
speed: 13.7822275162
id: 1
t: 69
xxx after update is x: -3.00913977623
y: 31.6827888489
theta: 4.69604253769
speed: 13.9093837738
id: 1
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:70




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: -3.00913977623
y: 31.6827888489
theta: 4.69604253769
speed: 13.9093837738
id: 1
t: 70
xxx after update is x: -3.70123147964
y: 31.559595108
theta: 4.57965373993
speed: 13.5998344421
id: 1
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3459813078110625, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1912245750427246, -21.634822845458984, 1.5757663249969482, 11.9100923538208)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: -3.70123147964
y: 31.559595108
theta: 4.57965373993
speed: 13.5998344421
id: 1
t: 71
xxx after update is x: -3.21082568169
y: 30.425239563
theta: 4.77350568771
speed: 13.8880681992
id: 1
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.2






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: -3.21082568169
y: 30.425239563
theta: 4.77350568771
speed: 13.8880681992
id: 1
t: 72
xxx after update is x: -3.42342329025
y: 30.0980625153
theta: 4.98194169998
speed: 13.9496870041
id: 1
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in6353549957
theta: 1.56499671936
speed: 12.5317678452
id: 0
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 3.59304022789
y: -22.6353549957
theta: 1.56499671936
speed: 12.5317678452
id: 0
t: 69
xxx after update is x: 3.48879432678
y: -21.943523407
theta: 1.63630378246
speed: 11.9755134583
id: 0
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:70




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: 3.48879432678
y: -21.943523407
theta: 1.63630378246
speed: 11.9755134583
id: 0
t: 70
xxx after update is x: 3.19122457504
y: -21.6348228455
theta: 1.575766325
speed: 11.9100923538
id: 0
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: 3.19122457504
y: -21.6348228455
theta: 1.575766325
speed: 11.9100923538
id: 0
t: 71
xxx after update is x: 2.7771730423
y: -20.3245048523
theta: 1.70732998848
speed: 11.4426250458
id: 0
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: 2.7771730423
y: -20.3245048523
theta: 1.70732998848
speed: 11.4426250458
id: 0
t: 72
xxx after update is x: 3.10002422333
y: -20.6305122375
theta: 1.4962233305
speed: 11.6711406708
id: 0
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.24444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:
initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$


 self.man_init:
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: 3.10002422333
y: -20.6305122375
theta: 1.4962233305
speed: 11.6711406708
id: 0
t: 73
xxx after update is x: 3.37454938889
y: -19.9245872498
theta: 1.63289749622
speed: 11.0392131805
id: 0
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 1
current clock is 3.28888888889
!!!!after check statue the self.tag is [3.2888888888888888, 0, 'left']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.28888888889

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.2444444444444445, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.28888888889,(3.374549388885498, -19.92458724975586, 1.6328974962234497),11,1,3.28888888889,0,left
!!!!change state to get
GET,0,3.28888888889,(3.374549388885498, -19.92458724975586, 1.6328974962234497),11,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.28888888889
self.communication_details == 0
sending GET,0,3.28888888889,(3.374549388885498, -19.92458724975586, 1.6328974962234497),11,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
Received -->>: 
current clock is 3.28888888889




maneuver_negotiatir.py message_processing, it's a long spin function, finish the n times spin:74

xxx before update is x: -3.42342329025
y: 30.0980625153
theta: 4.98194169998
speed: 13.9496870041
id: 1
t: 73
xxx after update is x: -2.96799492836
y: 28.6008625031
theta: 4.62423801422
speed: 13.7105798721
id: 1
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion

Received -->>: 
current clock is 3.28888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.28888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '3.28888888889', 'IntendedCourse': 'left', 'Position': ['3.374549388885498', ' -19.92458724975586', ' 1.6328974962234497'], 'TagID': '0', 'Type': 'GET', 'Velocity': '11'}
car 1 received GET,0,3.28888888889,(3.374549388885498, -19.92458724975586, 1.6328974962234497),11,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.146172839506
sender travel direction is:  north
sender earliest entering time is:  1.81992993585
sender last entering time is:  2.2385169866
sender last leaving time is:  4.43879195267
my entering time is:  1.66899049528
my leaving time is:  4.27180815106
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.28888888889
self.communication_details == 0
sending DENY,1,3.28888888889,(-3.2108256816864014, 30.42523956298828, 4.773505687713623),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: -2.96799492836
y: 28.6008625031
theta: 4.62423801422
speed: 13.7105798721
id: 1
t: 74
xxx after update is x: -3.32742190361
y: 28.4017543793
theta: 4.93043613434
speed: 13.8114080429
id: 1
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.32742190361
y: 28.4017543793
theta: 4.93043613434
speed: 13.8114080429
id: 1
t: 75
xxx after update is x: -3.28871512413
y: 28.4794998169
theta: 4.62961530685
speed: 13.659201622
id: 1
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:76




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: -3.28871512413
y: 28.4794998169
theta: 4.62961530685
speed: 13.659201622
id: 1
t: 76
xxx after update is x: -3.4723303318
y: 27.6605644226
theta: 4.84384155273
speed: 13.7681150436
id: 1
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.4723303318
y: 27.6605644226
theta: 4.84384155273
speed: 13.7681150436
id: 1
t: 77
xxx after update is x: -2.69936561584
y: 26.5377922058
theta: 4.54262304306
speed: 13.775680542
id: 1
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:78


aaaaaa
aaaaaabbbbb
risk is [0.6363462110723964, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3190994262695312, -17.938793182373047, 1.6258807182312012, 10.008183479309082)
if we have all code, start...0




current clock is 3.28888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '3.28888888889', 'Position': ['(-3.2108256816864014', ' 30.42523956298828', ' 4.773505687713623)'], 'Type': 'DENY'}
car 0 received DENY,1,3.28888888889,(-3.2108256816864014, 30.42523956298828, 4.773505687713623),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.2444444444444445, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.2444444444444445, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




finish try maneuver
risk is [0.44814369413138305, 0.39804114472502716]
222 self.state_dicts[msg.id][msg.t] is (-2.9679949283599854, 28.600862503051758, 4.624238014221191, 13.710579872131348)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: 3.37454938889
y: -19.9245872498
theta: 1.63289749622
speed: 11.0392131805
id: 0
t: 74
xxx after update is x: 3.4256632328
y: -19.6072711945
theta: 1.58071208
speed: 10.7299613953
id: 0
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: 3.4256632328
y: -19.6072711945
theta: 1.58071208
speed: 10.7299613953
id: 0
t: 75
xxx after update is x: 2.7834277153
y: -19.3364753723
theta: 1.46921408176
speed: 10.4154434204
id: 0
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.7834277153
y: -19.3364753723
theta: 1.46921408176
speed: 10.4154434204
id: 0
t: 76
xxx after update is x: 2.79500865936
y: -18.3132953644
theta: 1.66815209389
speed: 10.4493341446
id: 0
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:77




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.79500865936
y: -18.3132953644
theta: 1.66815209389
speed: 10.4493341446
id: 0
t: 77
xxx after update is x: 3.31909942627
y: -17.9387931824
theta: 1.62588071823
speed: 10.0081834793
id: 0
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:78




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: 3.31909942627
y: -17.9387931824
theta: 1.62588071823
speed: 10.0081834793
id: 0
t: 78
xxx after update is x: 2.77888703346
y: -17.9701442719
theta: 1.48114991188
speed: 10.0466442108
id: 0
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.77888703346
y: -17.9701442719
theta: 1.48114991188
speed: 10.0466442108
id: 0
t: 79
xxx after update is x: 2.73030495 measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: -2.69936561584
y: 26.5377922058
theta: 4.54262304306
speed: 13.775680542
id: 1
t: 78
xxx after update is x: -3.24265885353
y: 26.2368354797
theta: 4.71500062943
speed: 13.6875371933
id: 1
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.51111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:80


xxx before update is x: -3.24265885353
y: 26.2368354797
theta: 4.71500062943
speed: 13.6875371933
id: 1
t: 79
xxx after update is x: -3.94347667694
y: 25.6177177429
theta: 4.65336179733
speed: 13.8188791275
id: 1
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: -3.94347667694
y: 25.6177177429
theta: 4.65336179733
speed: 13.8188791275
id: 1
t: 80
xxx after update is x: -3.70994400978
y: 24.3630142212
theta: 4.54868125916
speed: 13.5057926178
id: 1
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.6




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.6
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '9', 'Sender': '0', 'TagID': '1', 'Time': '3.6', 'Position': ['(3.802685022354126', ' -16.965177536010742', ' 1.6915870904922485)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,3.6,(3.802685022354126, -16.965177536010742, 1.6915870904922485),9,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.70994400978
y: 24.3630142212
theta: 4.54868125916
speed: 13.5057926178
id: 1
t: 81
xxx after update is x: -3.28795313835
y: 24.9675655365
theta: 4.67626810074
speed: 13.9876565933
id: 1
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:82




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:83


xxx before update is x: -3.28795313835
y: 24.9675655365
theta: 4.67626810074
speed: 13.9876565933
id: 1
t: 82
xxx after update is x: -2.98048067093
y: 23.6874771118
theta: 5.07052326202
speed: 13.8411512375
id: 1
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.5897059423266869, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2764031887054443, -15.96090030670166, 1.5879460573196411, 8.815686225891113)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: -2.98048067093
y: 23.6874771118
theta: 5.07052326202
speed: 13.8411512375
id: 1
t: 83
xxx after update is x: -3.18285155296
y: 22.7703990936
theta: 4.77255392075
speed: 13.6192893982
id: 1
t: 84
maneuver_negotiatir.py 644
y: -17.2114963531
theta: 1.42559874058
speed: 9.84961986542
id: 0
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:80




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: 2.73030495644
y: -17.2114963531
theta: 1.42559874058
speed: 9.84961986542
id: 0
t: 80
xxx after update is x: 3.80268502235
y: -16.965177536
theta: 1.69158709049
speed: 9.93694972992
id: 0
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.6






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.6, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 3.6
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.6
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,3.6,(3.802685022354126, -16.965177536010742, 1.6915870904922485),9,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 3.6
self.communication_details == 0
sending RELEASE,0,3.6,(3.802685022354126, -16.965177536010742, 1.6915870904922485),9,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.80268502235
y: -16.965177536
theta: 1.69158709049
speed: 9.93694972992
id: 0
t: 81
xxx after update is x: 3.47142076492
y: -16.6682224274
theta: 1.65278077126
speed: 9.21292495728
id: 0
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:82




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:83


xxx before update is x: 3.47142076492
y: -16.6682224274
theta: 1.65278077126
speed: 9.21292495728
id: 0
t: 82
xxx after update is x: 3.27640318871
y: -15.9609003067
theta: 1.58794605732
speed: 8.81568622589
id: 0
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: 3.27640318871
y: -15.9609003067
theta: 1.58794605732
speed: 8.81568622589
id: 0
t: 83
xxx after update is x: 3.88486146927
y: -15.5356807709
theta: 1.33115446568
speed: 8.88295936584
id: 0
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.5956883323014629, 0.4414734523686377]
222 self.state_dicts[msg.id][msg.t] is (-3.182851552963257, 22.77039909362793, 4.77255392074585, 13.61928939819336)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: 3.88486146927
y: -15.5356807709
theta: 1.33115446568
speed: 8.88295936584
id: 0
t: 84
xxx after update is x: 3.48666524887
y: -15.2096347809
theta: 1.44897067547
speed: 9.04133224487
id: 0
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: -3.18285155296
y: 22.7703990936
theta: 4.77255392075
speed: 13.6192893982
id: 1
t: 84
xxx after update is x: -3.3117814064
y: 22.5293140411
theta: 4.94286632538
speed: 13.8751239777
id: 1
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: -3.3117814064
y: 22.5293140411
theta: 4.94286632538
speed: 13.8751239777
id: 1
t: 85
xxx after update is x: -3.39234828949
y: 21.3423690796
theta: 4.76988649368
speed: 13.9337062836
id: 1
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: -3.39234828949
y: 21.3423690796
theta: 4.76988649368
speed: 13.9337062836
id: 1
t: 86
xxx after update is x: -3.50920319557
y: 21.1535129547
theta: 4.7475733757
speed: 13.8311443329
id: 1
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.19278347758347747, 0]
222 self.state_dicts[msg.id][msg.t] is (3.875209093093872, -13.90090274810791, 1.5796222686767578, 8.524826049804688)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.86666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.50920319557
y: 21.1535129547
theta: 4.7475733757
speed: 13.8311443329
id: 1
t: 87
xxx after update is x: -3.06268286705
y: 20.6565246582
theta: 4.80420827866
speed: 14.0531635284
id: 1
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:88




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: -3.06268286705
y: 20.6565246582
theta: 4.80420827866
speed: 14.0531635284
id: 1
t: 88
xxx after update is x: -3.22017550468
y: 19.7104187012
theta: 4.66289377213
speed: 13.7622261047
id: 1
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:89


Received -->>: 
current clock is 3.95555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.95555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '3.95555555556', 'IntendedCourse': 'left', 'Position': ['3.347848415374756', ' -13.389391899108887', ' 1.614588975906372'], 'TagID': '0', 'Type': 'GET', 'Velocity': '8'}
car 1 received GET,0,3.95555555556,(3.347848415374756, -13.389391899108887, 1.614588975906372),8,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.175802469136
sender travel direction is:  north
sender earliest entering time is:  1.15509438471
sender last entering time is:  2.17580246914
sender last leaving time is:  4.54910072556
my entering time is:  1.05850817118
my leaving time is:  3.02121387322
i have left the intersection:  False
finish not_conflictefinish the n times spin:86

xxx before update is x: 3.48666524887
y: -15.2096347809
theta: 1.44897067547
speed: 9.04133224487
id: 0
t: 85
xxx after update is x: 2.90725231171
y: -14.5242013931
theta: 1.48538208008
speed: 8.48848056793
id: 0
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: 2.90725231171
y: -14.5242013931
theta: 1.48538208008
speed: 8.48848056793
id: 0
t: 86
xxx after update is x: 3.87520909309
y: -13.9009027481
theta: 1.57962226868
speed: 8.5248260498
id: 0
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.87520909309
y: -13.9009027481
theta: 1.57962226868
speed: 8.5248260498
id: 0
t: 87
xxx after update is x: 2.80795359612
y: -13.9384021759
theta: 1.55727481842
speed: 7.97910833359
id: 0
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:88




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: 2.80795359612
y: -13.9384021759
theta: 1.55727481842
speed: 7.97910833359
id: 0
t: 88
xxx after update is x: 3.34784841537
y: -13.3893918991
theta: 1.61458897591
speed: 8.06964588165
id: 0
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.95555555556

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.911111111111111, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.95555555556,(3.347848415374756, -13.389391899108887, 1.614588975906372),8,1,3.28888888889,0,left
!!!!change state to get
GET,0,3.95555555556,(3.347848415374756, -13.389391899108887, 1.614588975906372),8,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.95555555556
self.communication_details == 0
sending GET,0,3.95555555556,(3.347848415374756, -13.389391899108887, 1.614588975906372),8,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.95555555556






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0
Received -->>: 
current clock is 3.95555555556




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.95555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '3.95555555556', 'Position': ['(-3.5092031955718994', ' 21.153512954711914', ' 4.747573375701904)'], 'Type': 'DENY'}
car 0 received DENY,1,3.95555555556,(-3.5092031955718994, 21.153512954711914, 4.747573375701904),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.911111111111111, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py messagd
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.95555555556
self.communication_details == 0
sending DENY,1,3.95555555556,(-3.5092031955718994, 21.153512954711914, 4.747573375701904),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:
initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$


 self.man_init:
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 1
current clock is 3.95555555556
!!!!after check statue the self.tag is [3.9555555555555557, 1, 'straight']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.95555555556

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.911111111111111, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
Empty
self.agents_to_ask is []
message is :GET,1,3.95555555556,(-3.2201755046844482, 19.710418701171875, 4.662893772125244),13,1,3.95555555556,1,straight
!!!!change state to get
finish try maneuver
leave the update function 
in spin function, finish the n times spin:90




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: -3.22017550468
y: 19.7104187012
theta: 4.66289377213
speed: 13.7622261047
id: 1
t: 89
xxx after update is x: -3.57426571846
y: 19.1862106323
theta: 4.72445440292
speed: 13.5820350647
id: 1
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.57426571846
y: 19.1862106323
theta: 4.72445440292
speed: 13.5820350647
id: 1
t: 90
xxx after update is x: -2.82296967506
y: 18.1944065094
theta: 4.84640264511
speed: 13.8787326813
id: 1
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.32910957504225724, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2465219497680664, -12.86982250213623, 1.4762059450149536, 7.359325408935547)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.04444444444






self.maneuver_requested straight
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.044444444444444, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.04444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.04444444444
self.TMan is 5
Empty
self.agents_to_ask is []
stopped retry timer
deny not in message
maneuver_negotiatir.py in the domaneuver function - start
added car with id 1 to grantlist. current grantlist:  {1: [8.866666666666667, 'straight']}
Doing maneuver
maneuver_negotiatir.py finish the do maneuver function
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:92




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: -2.82296967506
y: 18.1e_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.911111111111111, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:90


xxx before update is x: 3.34784841537
y: -13.3893918991
theta: 1.61458897591
speed: 8.06964588165
id: 0
t: 89
xxx after update is x: 3.28288531303
y: -13.3944358826
theta: 1.48173832893
speed: 7.76323747635
id: 0
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: 3.28288531303
y: -13.3944358826
theta: 1.48173832893
speed: 7.76323747635
id: 0
t: 90
xxx after update is x: 3.24652194977
y: -12.8698225021
theta: 1.47620594501
speed: 7.35932540894
id: 0
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.2388729329571051, 0.368844443359896]
222 self.state_dicts[msg.id][msg.t] is (-2.822969675064087, 18.194406509399414, 4.846402645111084, 13.878732681274414)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:92


xxx before update is x: 3.24652194977
y: -12.8698225021
theta: 1.47620594501
speed: 7.35932540894
id: 0
t: 91
xxx after update is x: 3.24501276016
y: -12.2995710373
theta: 1.68936622143
speed: 7.19155740738
id: 0
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: 3.24501276016
y: -12.2995710373
theta: 1.68936622143
speed: 7.19155740738
id: 0
t: 92
xxx after update is x: 2.47923064232
y: -12.1927652359
theta: 1.56155824661
speed: 6.39877557755
id: 0
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.47923064232
y: -12.1927652359
theta: 1.56155824661
speed: 6.39877557755
id: 0
t: 93
xxx after update is x: 2.96000671387
y: -11.7201700211
theta: 1.48055481911
speed: 6.93290615082
id: 0
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:94




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: 2.96000671387
y: -11.7201700211
theta: 1.48055481911
speed: 6.93290615082
id: 0
t: 94
xxx after update is x: 2.80137276649
y: -11.0004472733
theta: 1.54255843163
speed: 6.54409646988
id: 0
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: 2.80137276649
y: -11.0004472733
theta: 1.54255843163
speed: 6.54409646988
id: 0
t: 95
xxx after update is x: 3.27401065826
y: -11.433763504
theta: 1.55668628216
speed: 5.83666801453
id: 0
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in944065094
theta: 4.84640264511
speed: 13.8787326813
id: 1
t: 91
xxx after update is x: -3.18619847298
y: 18.3271522522
theta: 4.76300287247
speed: 13.7112579346
id: 1
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.18619847298
y: 18.3271522522
theta: 4.76300287247
speed: 13.7112579346
id: 1
t: 92
xxx after update is x: -3.27912735939
y: 15.5335826874
theta: 4.64530801773
speed: 12.2952842712
id: 1
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.6109083386236713, 0]
222 self.state_dicts[msg.id][msg.t] is (2.4792306423187256, -12.192765235900879, 1.5615582466125488, 6.398775577545166)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
current clock is 4.13333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.13333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '5', 'Sender': '0', 'TagID': '1', 'Time': '4.26666666667', 'Position': ['(3.27401065826416', ' -11.43376350402832', ' 1.556686282157898)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.26666666667,(3.27401065826416, -11.43376350402832, 1.556686282157898),5,1,3.28888888889,0 from  car0
status: 5




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:94




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:95




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.27912735939
y: 15.5335826874
theta: 4.64530801773
speed: 12.2952842712
id: 1
t: 93
xxx after update is x: -2.18598508835
y: 15.4310922623
theta: 4.7120347023
speed: 12.6348590851
id: 1
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.18598508835
y: 15.4310922623
theta: 4.7120347023
speed: 12.6348590851
id: 1
t: 94
xxx after update is x: -3.48676967621
y: 13.5842962265
theta: 4.57646560669
speed: 13.7467422485
id: 1
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.48676967621
y: 13.5842962265
theta: 4.57646560669
speed: 13.7467422485
id: 1
t: 95
xxx after update is x: -3.36154866219
y: 13.7639904022
theta: 4.68285083771
speed: 13.6339235306
id: 1
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:96


aaaaaa
aaaaaabbbbb
risk is [0.0542464545247339, 0]
222 self.state_dicts[msg.id][msg.t] is (3.27401065826416, -11.43376350402832, 1.556686282157898, 5.836668014526367)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:97




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: -3.36154866219
y: 13.7639904022
theta: 4.68285083771
speed: 13.6339235306
id: 1
t: 96
xxx after update is x: -3.64999914169
y: 13.6707038879
theta: 4.56434440613
speed: 13.6992559433
id: 1
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.64999914169
y: 13.6707038879
theta: 4.56434440613
speed: 13 the try maneuver function update -. strat
current clock is 4.26666666667






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.088888888888889, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.26666666667
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.08888888889
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,4.26666666667,(3.27401065826416, -11.43376350402832, 1.556686282157898),5,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 4.26666666667
self.communication_details == 0
sending RELEASE,0,4.26666666667,(3.27401065826416, -11.43376350402832, 1.556686282157898),5,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:97


xxx before update is x: 3.27401065826
y: -11.433763504
theta: 1.55668628216
speed: 5.83666801453
id: 0
t: 96
xxx after update is x: 3.40929317474
y: -11.0794048309
theta: 1.34362781048
speed: 6.01714944839
id: 0
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.40929317474
y: -11.0794048309
theta: 1.34362781048
speed: 6.01714944839
id: 0
t: 97
xxx after update is x: 2.54831695557
y: -11.0441265106
theta: 1.44017970562
speed: 6.05132198334
id: 0
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:98


risk is [0.4821944835941987, 0.011860186984990476]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: 2.54831695557
y: -11.0441265106
theta: 1.44017970562
speed: 6.05132198334
id: 0
t: 98
xxx after update is x: 2.87725424767
y: -11.0819139481
theta: 1.64705812931
speed: 5.60429906845
id: 0
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: 2.87725424767
y: -11.0819139481
theta: 1.64705812931
speed: 5.60429906845
id: 0
t: 99
xxx after update is x: 2.57345843315
y: -10.3816328049
theta: 1.49647521973
speed: 5.78546333313
id: 0
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.57345843315
y: -10.3816328049
theta: 1.49647521973
speed: 5.78546333313
id: 0
t: 100
xxx after update is x: 3.31277394295
y: -10.5216207504
theta: 1.52878284454
speed: 4.61394166946
id: 0
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:101




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: 3.31277394295
y: -10.5216207504
theta: 1.52878284454
speed: 4.61394166946
id: 0
t: 101
xxx after update is x: 2.90296363831
y: -9.85573005676
theta: 1.53888869286
speed: 4.55502891541
id: 0
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 sel.6992559433
id: 1
t: 97
xxx after update is x: -3.53639340401
y: 12.5227708817
theta: 4.77155685425
speed: 13.973074913
id: 1
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.1572430052014421, 0]
222 self.state_dicts[msg.id][msg.t] is (2.5483169555664062, -11.044126510620117, 1.440179705619812, 6.051321983337402)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: -3.53639340401
y: 12.5227708817
theta: 4.77155685425
speed: 13.973074913
id: 1
t: 98
xxx after update is x: -2.89300751686
y: 12.4234762192
theta: 4.61162233353
speed: 13.945930481
id: 1
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.28263767474974055, 0]
222 self.state_dicts[msg.id][msg.t] is (2.8772542476654053, -11.081913948059082, 1.647058129310608, 5.604299068450928)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.4






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 4.4




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.4
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '4.62222222222', 'IntendedCourse': 'left', 'Position': ['2.5843427181243896', ' -9.633462905883789', ' 1.5597039461135864'], 'TagID': '0', 'Type': 'GET', 'Velocity': '4'}
car 1 received GET,0,4.62222222222,(2.5843427181243896, -9.633462905883789, 1.5597039461135864),4,1,3.28888888889,0,left from  car0
status: 5
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.205432098765
sender travel direction is:  north
sender earliest entering time is:  0.625751718121
sender last entering time is:  2.20543209877
sender last leaving time is:  4.57873035519
my entering time is:  0.563477942102
my leaving time is:  2.00152378544
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 4.4
self.communication_details == 0
sending DENY,1,4.4,(-2.893007516860962, 12.423476219177246, 4.611622333526611),13,1,3.95555555556,1 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




leave the update function 
in spin function, finish the n times spin:100




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:101




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: -2.89300751686
y: 12.4234762192
theta: 4.61162233353
speed: 13.945930481
id: 1
t: 99
xxx after update is x: -3.50163054466
y: 11.9808292389
theta: 4.7884554863
speed: 13.9142446518
id: 1
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.50163054466
y: 1f.man_init:
xxx before update is x: 2.90296363831
y: -9.85573005676
theta: 1.53888869286
speed: 4.55502891541
id: 0
t: 102
xxx after update is x: 2.93527674675
y: -9.308385849
theta: 1.5285949707
speed: 4.75408697128
id: 0
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:103




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.93527674675
y: -9.308385849
theta: 1.5285949707
speed: 4.75408697128
id: 0
t: 103
xxx after update is x: 2.58434271812
y: -9.63346290588
theta: 1.55970394611
speed: 4.44857501984
id: 0
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:104


maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 4.62222222222

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.4, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.62222222222,(2.5843427181243896, -9.633462905883789, 1.5597039461135864),4,1,3.28888888889,0,left
!!!!change state to get
GET,0,4.62222222222,(2.5843427181243896, -9.633462905883789, 1.5597039461135864),4,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 4.62222222222
self.communication_details == 0
sending GET,0,4.62222222222,(2.5843427181243896, -9.633462905883789, 1.5597039461135864),4,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.62222222222






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 4.62222222222




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 4.62222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '4.4', 'Position': ['(-2.893007516860962', ' 12.423476219177246', ' 4.611622333526611)'], 'Type': 'DENY'}
car 0 received DENY,1,4.4,(-2.893007516860962, 12.423476219177246, 4.611622333526611),13,1,3.95555555556,1 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.4, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [4.4, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.58434271812
y: -9.63346290588
theta: 1.55970394611
speed: 4.44857501984
id: 0
t: 104
xxx after update is x: 3.01248717308
y: -8.66736507416
theta: 1.61233353615
speed: 3.98930621147
id: 0
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:105




going t1.9808292389
theta: 4.7884554863
speed: 13.9142446518
id: 1
t: 100
xxx after update is x: -3.21806812286
y: 9.93424224854
theta: 4.63346195221
speed: 13.6116981506
id: 1
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.21806812286
y: 9.93424224854
theta: 4.63346195221
speed: 13.6116981506
id: 1
t: 101
xxx after update is x: -3.21479129791
y: 10.2959098816
theta: 4.70622301102
speed: 13.7988319397
id: 1
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.15026835136575192, 0]
222 self.state_dicts[msg.id][msg.t] is (2.902963638305664, -9.855730056762695, 1.538888692855835, 4.555028915405273)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:103




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: -3.21479129791
y: 10.2959098816
theta: 4.70622301102
speed: 13.7988319397
id: 1
t: 102
xxx after update is x: -3.33286857605
y: 10.0613861084
theta: 4.88644170761
speed: 13.9644346237
id: 1
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.33286857605
y: 10.0613861084
theta: 4.88644170761
speed: 13.9644346237
id: 1
t: 103
xxx after update is x: -3.45566701889
y: 8.82879638672
theta: 4.7334895134
speed: 14.0969295502
id: 1
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.010230811603171667, 0]
222 self.state_dicts[msg.id][msg.t] is (2.5843427181243896, -9.633462905883789, 1.5597039461135864, 4.448575019836426)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function  xxx before update is x: -3.45566701889
y: 8.82879638672
theta: 4.7334895134
speed: 14.0969295502
id: 1
t: 104
xxx after update is x: -3.27547097206
y: 8.21630764008
theta: 4.67038965225
speed: 13.9424982071
id: 1
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:105




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.27547097206
y: 8.21630764008
theta: 4.67038965225
speed: 13.9424982071
id: 1
t: 105
xxx after update is x: -3.10689353943
y: 7.4791841507
theta: 4.73938894272
speed: 13.8800554276
id: 1
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:106


aaaaaa
aaaaaabbbbb
risk is [0.07850524832537947, 0]
222 self.state_dicts[msg.id][msg.t] is (3.389883518218994, -8.67524528503418, 1.655870795249939, 3.9999632835388184)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.71111111111






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:107




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:108




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxxo the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.01248717308
y: -8.66736507416
theta: 1.61233353615
speed: 3.98930621147
id: 0
t: 105
xxx after update is x: 3.38988351822
y: -8.67524528503
theta: 1.65587079525
speed: 3.99996328354
id: 0
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:106




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.38988351822
y: -8.67524528503
theta: 1.65587079525
speed: 3.99996328354
id: 0
t: 106
xxx after update is x: 3.10925841331
y: -9.17998695374
theta: 1.61589610577
speed: 3.9618074894
id: 0
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:107




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.10925841331
y: -9.17998695374
theta: 1.61589610577
speed: 3.9618074894
id: 0
t: 107
xxx after update is x: 3.23647212982
y: -8.84658813477
theta: 1.56084167957
speed: 2.89677548409
id: 0
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:108




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.23647212982
y: -8.84658813477
theta: 1.56084167957
speed: 2.89677548409
id: 0
t: 108
xxx after update is x: 3.32299232483
y: -8.44040489197
theta: 1.53068709373
speed: 3.23493790627
id: 0
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:109




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.32299232483
y: -8.44040489197
theta: 1.53068709373
speed: 3.23493790627
id: 0
t: 109
xxx after update is x: 3.38702058792
y: -8.36438369751
theta: 1.64329719543
speed: 2.88693737984
id: 0
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:110




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.38702058792
y: -8.36438369751
theta: 1.64329719543
speed: 2.88693737984
id: 0
t: 110
xxx after update is x: 3.37019300461
y: -8.38689231873
theta: 1.70976448059
speed: 2.87806773186
id: 0
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:111




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.37019300461
y: -8.38689231873
theta: 1.70976448059
speed: 2.87806773186
id: 0
t: 111
xxx after update is x: 3.23903512955
y: -8.13031196594
theta: 1.50900733471
speed: 2.52002358437
id: 0
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:112


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.97777777778






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.711111111111111, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.97777777778
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.71111111111
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,4.97777777778,(3.239035129547119, -8.130311965942383, 1.5090073347091675),2,1,3.28888888889,0
maneuver_negotiati
 Received -->>: 
current clock is 4.71111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.71111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '2', 'Sender': '0', 'TagID': '1', 'Time': '4.97777777778', 'Position': ['(3.239035129547119', ' -8.130311965942383', ' 1.5090073347091675)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.97777777778,(3.239035129547119, -8.130311965942383, 1.5090073347091675),2,1,3.28888888889,0 from  car0
status: 5




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




xxx before update is x: -3.10689353943
y: 7.4791841507
theta: 4.73938894272
speed: 13.8800554276
id: 1
t: 106
xxx after update is x: -3.05434060097
y: 6.96354532242
theta: 4.76746702194
speed: 13.9324855804
id: 1
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.05434060097
y: 6.96354532242
theta: 4.76746702194
speed: 13.9324855804
id: 1
t: 107
xxx after update is x: -3.37719798088
y: 5.14257717133
theta: 4.7483921051
speed: 14.1573791504
id: 1
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion
 self.man_init:
xxx before update is x: -3.37719798088
y: 5.14257717133
theta: 4.7483921051
speed: 14.1573791504
id: 1
t: 108
xxx after update is x: -3.05651688576
y: 5.63677358627
theta: 4.61202335358
speed: 13.6723718643
id: 1
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:109


aaaaaa
aaaaaabbbbb
risk is [0.04851537397213754, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3229923248291016, -8.440404891967773, 1.5306870937347412, 3.234937906265259)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:110




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:111




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:112


xxx before update is x: -3.05651688576
y: 5.63677358627
theta: 4.61202335358
speed: 13.6723718643
id: 1
t: 109
xxx after update is x: -3.0202434063
y: 5.08951425552
theta: 4.65652418137
speed: 13.7422046661
id: 1
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.0202434063
y: 5.08951425552
theta: 4.65652418137
speed: 13.7422046661
id: 1
t: 110
xxx after update is x: -2.85762739182
y: 3.96591663361
theta: 4.79003143311
speed: 13.7631835938
id: 1
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.85762739182
y: 3.96591663361
theta: 4.79003143311
speed: 13.7631835938
id: 1
t: 111
xxx after update is x: -3.14062213898
y: 3.69667124748
theta: 4.73642492294
speed: 13.7945709229
id: 1
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.03805370411098155, 0]
222 self.state_dicts[msg.id][msg.t] is (3.239035129547119, -8.130311965942383, 1.5090073347091675, 2.5200235843658447)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.97777777778






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function updatr.py start the update_agent_message
current clock is 4.97777777778
self.communication_details == 0
sending RELEASE,0,4.97777777778,(3.239035129547119, -8.130311965942383, 1.5090073347091675),2,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:113


xxx before update is x: 3.23903512955
y: -8.13031196594
theta: 1.50900733471
speed: 2.52002358437
id: 0
t: 112
xxx after update is x: 3.23465228081
y: -8.55284881592
theta: 1.63790118694
speed: 2.07551765442
id: 0
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.23465228081
y: -8.55284881592
theta: 1.63790118694
speed: 2.07551765442
id: 0
t: 113
xxx after update is x: 3.27719116211
y: -7.76868200302
theta: 1.46429419518
speed: 2.04551315308
id: 0
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:114




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.27719116211
y: -7.76868200302
theta: 1.46429419518
speed: 2.04551315308
id: 0
t: 114
xxx after update is x: 3.47617912292
y: -7.98501825333
theta: 1.4557043314
speed: 2.04706788063
id: 0
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:115




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.47617912292
y: -7.98501825333
theta: 1.4557043314
speed: 2.04706788063
id: 0
t: 115
xxx after update is x: 2.59521389008
y: -7.81451892853
theta: 1.36195385456
speed: 1.79891753197
id: 0
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:116




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.59521389008
y: -7.81451892853
theta: 1.36195385456
speed: 1.79891753197
id: 0
t: 116
xxx after update is x: 3.17539739609
y: -7.48268222809
theta: 1.43599653244
speed: 1.1257609129
id: 0
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:117




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.17539739609
y: -7.48268222809
theta: 1.43599653244
speed: 1.1257609129
id: 0
t: 117
xxx after update is x: 4.0096321106
y: -7.84680509567
theta: 1.56864488125
speed: 1.24135994911
id: 0
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:118




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 4.0096321106
y: -7.84680509567
theta: 1.56864488125
speed: 1.24135994911
id: 0
t: 118
xxx after update is x: 3.63566327095
y: -7.4138584137
theta: 1.23183381557
speed: 1.02995598316
id: 0
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:119




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.63566327095
y: -7.4138584137
theta: 1.23183381557
speed: 1.02995598316
id: 0
t: 119
xxx after update is x: 3.49034452438
y: -7.91703796387
theta: 1.67470693588
speed: 0.581434488297
id: 0
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
leave e -. sfinish
leave the update function 
in spin function, finish the n times spin:113




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: -3.14062213898
y: 3.69667124748
theta: 4.73642492294
speed: 13.7945709229
id: 1
t: 112
xxx after update is x: -2.98803186417
y: 3.87156534195
theta: 4.96252441406
speed: 14.2654771805
id: 1
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.98803186417
y: 3.87156534195
theta: 4.96252441406
speed: 14.2654771805
id: 1
t: 113
xxx after update is x: -2.43038082123
y: 1.05142390728
theta: 4.78507947922
speed: 13.4811353683
id: 1
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.05484531755650445, 0]
222 self.state_dicts[msg.id][msg.t] is (3.277191162109375, -7.76868200302124, 1.464294195175171, 2.045513153076172)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
current clock is 5.06666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 5.06666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '5.33333333333', 'IntendedCourse': 'left', 'Position': ['3.490344524383545', ' -7.9170379638671875', ' 1.6747069358825684'], 'TagID': '0', 'Type': 'GET', 'Velocity': '0'}
car 1 received GET,0,5.33333333333,(3.490344524383545, -7.9170379638671875, 1.6747069358825684),0,1,3.28888888889,0,left from  car0
status: 5
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.237037037037
sender travel direction is:  north
sender earliest entering time is:  0.609881045467
sender last entering time is:  2.23703703704
sender last leaving time is:  4.61033529346
my entering time is:  0.237037037037
my leaving time is:  0.856295113917
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 5.06666666667
self.communication_details == 0
sending DENY,1,5.06666666667,(-3.140622138977051, 3.6966712474823, 4.736424922943115),13,1,3.95555555556,1 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:115




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: -2.43038082123
y: 1.05142390728
theta: 4.78507947922
speed: 13.4811353683
id: 1
t: 114
xxx after update is x: -3.39697599411
y: 0.617318570614
theta: 4.67856931686
speed: 14.4487686157
id: 1
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.39697599411
y: 0.617318570614
theta: 4.67856931686
speed: 14.4487686157
id: 1
t: 115
xxx after update is x: -3.23532533646
y: -0.329159885645
theta: 4.46626424789
speed: 13.9484767914
id: 1
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.10365234874208755, 0]
222 self.state_dicts[msg.id][msg.t] is (2.5952138900756836, -7.814518928527832, 1.361953854560852, 1.798917531967163)
if we have all measurements for a certain time-stamp perthe update function 
in spin function, finish the n times spin:120


maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 5.33333333333

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.977777777777778, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,5.33333333333,(3.490344524383545, -7.9170379638671875, 1.6747069358825684),0,1,3.28888888889,0,left
!!!!change state to get
GET,0,5.33333333333,(3.490344524383545, -7.9170379638671875, 1.6747069358825684),0,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 5.33333333333
self.communication_details == 0
sending GET,0,5.33333333333,(3.490344524383545, -7.9170379638671875, 1.6747069358825684),0,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.33333333333






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0
finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 5.33333333333




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 5.33333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '5.06666666667', 'Position': ['(-3.140622138977051', ' 3.6966712474823', ' 4.736424922943115)'], 'Type': 'DENY'}
car 0 received DENY,1,5.06666666667,(-3.140622138977051, 3.6966712474823, 4.736424922943115),13,1,3.95555555556,1 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.977777777777778, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [4.977777777777778, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.49034452438
y: -7.91703796387
theta: 1.67470693588
speed: 0.581434488297
id: 0
t: 120
xxx after update is x: 3.64973545074
y: -7.58556270599
theta: 1.56214535236
speed: 0.482869446278
id: 0
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:121




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.64973545074
y: -7.58556270599
theta: 1.56214535236
speed: 0.482869446278
id: 0
t: 121
xxx after update is x: 3.64763712883
y: -7.8445892334
theta: 1.43222296238
speed: 0.168719425797
id: 0
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:122




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.64763712883
y: -7.8445892334
theta: 1.43222296238
speed: 0.168719425797
id: 0
t: 122
xxx after update is x: 3.227403form risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:117




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: -3.23532533646
y: -0.329159885645
theta: 4.46626424789
speed: 13.9484767914
id: 1
t: 116
xxx after update is x: -3.34300470352
y: -1.10006022453
theta: 4.67576503754
speed: 13.8543510437
id: 1
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.34300470352
y: -1.10006022453
theta: 4.67576503754
speed: 13.8543510437
id: 1
t: 117
xxx after update is x: -3.78979730606
y: -1.57457149029
theta: 4.5624165535
speed: 14.0542697906
id: 1
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.07972943721576148, 0]
222 self.state_dicts[msg.id][msg.t] is (4.009632110595703, -7.846805095672607, 1.5686448812484741, 1.2413599491119385)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.24444444444






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:119




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:120


xxx before update is x: -3.78979730606
y: -1.57457149029
theta: 4.5624165535
speed: 14.0542697906
id: 1
t: 118
xxx after update is x: -2.83660340309
y: -1.90737879276
theta: 4.70768690109
speed: 14.2325735092
id: 1
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.83660340309
y: -1.90737879276
theta: 4.70768690109
speed: 14.2325735092
id: 1
t: 119
xxx after update is x: -3.06869840622
y: -2.87243175507
theta: 4.55203866959
speed: 13.8522691727
id: 1
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.07603609951789943, 0]
222 self.state_dicts[msg.id][msg.t] is (3.490344524383545, -7.9170379638671875, 1.6747069358825684, 0.5814344882965088)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
Received -->>: 
current clock is 5.33333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 5.33333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '5.64444444444', 'Position': ['(3.2103686332702637', ' -7.198678970336914', ' 1.7344334125518799)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,5.64444444444,(3.2103686332702637, -7.198678970336914, 1.7344334125518799),0,1,3.28888888889,0 from  car0
status: 5




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




leave the update function 
in spin function, finish the n times spin:121




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: -3.06869840622
y: -2.87243175507
theta: 4.55203866959
speed: 13.8522691727
id: 40233
y: -8.2559633255
theta: 1.6494332552
speed: 0.0273039024323
id: 0
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:123




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.22740340233
y: -8.2559633255
theta: 1.6494332552
speed: 0.0273039024323
id: 0
t: 123
xxx after update is x: 3.08010387421
y: -7.52835178375
theta: 1.65176928043
speed: -0.0719071626663
id: 0
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:124




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.08010387421
y: -7.52835178375
theta: 1.65176928043
speed: -0.0719071626663
id: 0
t: 124
xxx after update is x: 3.42224502563
y: -7.27277898788
theta: 1.42388188839
speed: -0.0576850697398
id: 0
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:125




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: 3.42224502563
y: -7.27277898788
theta: 1.42388188839
speed: -0.0576850697398
id: 0
t: 125
xxx after update is x: 3.12862825394
y: -7.72270441055
theta: 1.47324991226
speed: 0.183876544237
id: 0
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.12862825394
y: -7.72270441055
theta: 1.47324991226
speed: 0.183876544237
id: 0
t: 126
xxx after update is x: 3.21036863327
y: -7.19867897034
theta: 1.73443341255
speed: -0.325445115566
id: 0
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:127


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.64444444444






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.333333333333333, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 5.64444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 5.33333333333
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,5.64444444444,(3.2103686332702637, -7.198678970336914, 1.7344334125518799),0,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 5.64444444444
self.communication_details == 0
sending RELEASE,0,5.64444444444,(3.2103686332702637, -7.198678970336914, 1.7344334125518799),0,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: 3.21036863327
y: -7.19867897034
theta: 1.73443341255
speed: -0.325445115566
id: 0
t: 127
xxx after update is x: 3.21200013161
y: -6.78252983093
theta: 1.39632761478
speed: 0.0591984391212
id: 0
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.21200013161
y: -6.78252983093
theta: 1.39632761478
speed: 0.0591984391212
id: 0
t: 128
xxx after update is x: 3.43636775017
y: -7.89223814011
theta: 1.66857469082
speed: 0.336537748575
id: 0
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:129




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.43636775017
y: -7.89223814011
theta: 1.66857469082
speed: 0.336537748575
id: 0
t: 129
xxx after update is x: 3.94919514656
y: -7.66298723221
theta: 1.62087929249
speed: 0.0330327600241
id: 0
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:130




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.94919514656
y: -7.66298723221
theta: 1.62087929249
speed: 0.0330327600241
id: 0
t: 130
xxx after update is x: 3.39657759666
y: -7.671833992
theta: 1.58590805531
speed: 0.0133159253746
id: 0
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:131




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.39657759666
y: -7.671833992
theta: 1.58590805531
speed: 0.0133159253746
id: 0
t: 131
xxx after update is x: 3.6900639534
y: -7.16833782196
theta: 1.52413010597
speed: -0.0894233435392
id: 0
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:132




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.6900639534
y: -7.16833782196
theta: 1.52413010597
speed: -0.0894233435392
id: 0
t: 132
xxx after update is x: 3.0920085907
y: -7.05266141891
theta: 1.53758001328
speed: 0.15977191925
id: 0
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:133




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.0920085907
y: -7.05266141891
theta: 1.53758001328
speed: 0.15977191925
id: 0
t: 133
xxx after update is x: 3.24683117867
y: -7.71632575989
theta: 1.54627525806
speed: 0.0711917802691
id: 0
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:134




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.24683117867
y: -7.71632575989
theta: 1.54627525806
speed: 0.0711917802691
id: 0
t: 134
xxx after update is x: 3.15932250023
y: -8.0658788681
theta: 1.48911607265
speed: -0.0572668947279
id: 0
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:135


maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 6.0

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.6, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
Empty
self.agents_to_ask is []
message is :GET,0,6.0,(3.159322500228882, -8.065878868103027, 1.4891160726547241),0,1,3.28888888889,0,left
!!!!change state to get
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.0






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so retu1
t: 120
xxx after update is x: -3.39047122002
y: -2.51890254021
theta: 4.69062566757
speed: 14.253531456
id: 1
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.39047122002
y: -2.51890254021
theta: 4.69062566757
speed: 14.253531456
id: 1
t: 121
xxx after update is x: -2.53416085243
y: -3.91239547729
theta: 4.65344285965
speed: 13.9498329163
id: 1
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.10452961202487918, 0]
222 self.state_dicts[msg.id][msg.t] is (3.647637128829956, -7.8445892333984375, 1.4322229623794556, 0.16871942579746246)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: -2.53416085243
y: -3.91239547729
theta: 4.65344285965
speed: 13.9498329163
id: 1
t: 122
xxx after update is x: -2.79810833931
y: -3.8955180645
theta: 4.7005033493
speed: 13.9984531403
id: 1
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.79810833931
y: -3.8955180645
theta: 4.7005033493
speed: 13.9984531403
id: 1
t: 123
xxx after update is x: -2.47748041153
y: -4.76500844955
theta: 4.93473863602
speed: 13.9112281799
id: 1
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:124


aaaaaa
aaaaaabbbbb
risk is [0.12388039463270974, 0]
222 self.state_dicts[msg.id][msg.t] is (3.080103874206543, -7.528351783752441, 1.6517692804336548, -0.0719071626663208)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:125




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: -2.47748041153
y: -4.76500844955
theta: 4.93473863602
speed: 13.9112281799
id: 1
t: 124
xxx after update is x: -3.12436318398
y: -4.85899066925
theta: 4.86889886856
speed: 14.0062856674
id: 1
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.12436318398
y: -4.85899066925
theta: 4.86889886856
speed: 14.0062856674
id: 1
t: 125
xxx after update is x: -3.35070729256
y: -6.29438972473
theta: 4.55161046982
speed: 13.5795307159
id: 1
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.04723240567460069, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1286282539367676, -7.7227044105529785, 1.473249912261963, 0.18387654423713684)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.6






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:127




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: -3.35070729256
y: -6.29438972473
theta: 4.55161046982
speed: 13.5795307159
id: 1
t: 126
xxx after update is x: -2.68148970604
y: -6.37921857834
theta: 4.76371765137
speed: 13.8858289719
id: 1
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.68148970604
y: -6.37921857834
theta: 4.76371765137
speed: 13.8858289719
id: 1
t: 127
xxx after update is x: -3.45694732666
y: -8.90810489655
theta: 4.4805893898
speed: 13.8971500397
id: 1
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.11251384185207203, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2120001316070557, -6.782529830932617, 1.3963276147842407, 0.05919843912124634)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:129




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: -3.45694732666
y: -8.90810489655
theta: 4.4805893898
speed: 13.8971500397
id: 1
t: 128
xxx after update is x: -2.8660390377
y: -8.50671768188
theta: 4.7543129921
speed: 13.928858757
id: 1
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.8660390377
y: -8.50671768188
theta: 4.7543129921
speed: 13.928858757
id: 1
t: 129
xxx after update is x: -3.55517959595
y: -10.7048015594
theta: 4.70341777802
speed: 14.2506837845
id: 1
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.7909936519981329, 0]
222 self.state_dicts[msg.id][msg.t] is (3.949195146560669, -7.662987232208252, 1.6208792924880981, 0.03303276002407074)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.77777777778






self.maneuver_requested straight
leave the update function 
in spin function, finish the n times spin:131




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:132




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:133


xxx before update is x: -3.55517959595
y: -10.7048015594
theta: 4.70341777802
speed: 14.2506837845
id: 1
t: 130
xxx after update is x: -3.31180977821
y: -10.2806072235
theta: 4.66837072372
speed: 13.7175102234
id: 1
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.31180977821
y: -10.2806072235
theta: 4.66837072372
speed: 13.7175102234
id: 1
t: 131
xxx after update is x: -3.25301980972
y: -11.9900884628
theta: 4.83904504776
speed: 14.0238523483
id: 1
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.25301980972
y: -11.9900884628
theta: 4.83904504776
speed: 14.0238523483
id: 1
t: 132
xxx after update is x: -2.97225117683
y: -11.5054683685
theta: 4.54640007019
speed: 14.1580142975
id: 1
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.8685390821086671, 0]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.092008590698242, -7.052661418914795, 1.5375800132751465, 0.15977191925048828)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 selrn 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.6, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 6.0
(RATE*SLOWDOWN) is 22.5
MR[0] is 5.6
self.TMan is 5
Empty
self.agents_to_ask is []
stopped retry timer
deny not in message
maneuver_negotiatir.py in the domaneuver function - start
finish try maneuver
added car with id 0 to grantlist. current grantlist:  {0: [9.044444444444444, 'left']}
Doing maneuver
maneuver_negotiatir.py finish the do maneuver function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.15932250023
y: -8.0658788681
theta: 1.48911607265
speed: -0.0572668947279
id: 0
t: 135
xxx after update is x: 2.74300098419
y: -7.59695005417
theta: 1.53100240231
speed: 0.0112600177526
id: 0
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:136




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.74300098419
y: -7.59695005417
theta: 1.53100240231
speed: 0.0112600177526
id: 0
t: 136
xxx after update is x: 3.24045372009
y: -7.5389623642
theta: 1.51297271252
speed: 0.00801538303494
id: 0
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:137




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: 3.24045372009
y: -7.5389623642
theta: 1.51297271252
speed: 0.00801538303494
id: 0
t: 137
xxx after update is x: 2.89648723602
y: -7.39424991608
theta: 1.59748828411
speed: 0.0183675121516
id: 0
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.89648723602
y: -7.39424991608
theta: 1.59748828411
speed: 0.0183675121516
id: 0
t: 138
xxx after update is x: 2.80414962769
y: -7.10142421722
theta: 1.58523321152
speed: 0.233120962977
id: 0
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:139




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.80414962769
y: -7.10142421722
theta: 1.58523321152
speed: 0.233120962977
id: 0
t: 139
xxx after update is x: 3.40481829643
y: -7.44947814941
theta: 1.62039613724
speed: 0.116006076336
id: 0
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:140




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.40481829643
y: -7.44947814941
theta: 1.62039613724
speed: 0.116006076336
id: 0
t: 140
xxx after update is x: 3.0197634697
y: -8.2977514267
theta: 1.64105832577
speed: -0.163872867823
id: 0
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:141




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.0197634697
y: -8.2977514267
theta: 1.64105832577
speed: -0.163872867823
id: 0
t: 141
xxx after update is x: 3.31245684624
y: -7.65177106857
theta: 1.55586731434
speed: 0.190130904317
id: 0
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:142


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.31111111111






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.31245684624
y: -7.65177106857
theta: 1.55586731434
speed: 0.190130904317
id: 0
t: 142
xxx after update is x: 3.19085144997
y: -8.20302391052
theta: 1.40226447582
speed: 0.30984890461
id: 0
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:143




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.19085144997
y: -8.20302391052
theta: 1.40226447582
speed: 0.30984890461
id: 0
t: 143
xxx after update is x: 3.29497146606
y: -7.38324308395
theta: 1.70271360874
speed: 0.0170790702105
id: 0
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:144




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.29497146606
y: -7.38324308395
theta: 1.70271360874
speed: 0.0170790702105
id: 0
t: 144
xxx after update is x: 3.25663256645
y: -7.43918609619
theta: 1.52535068989
speed: -0.0743854790926
id: 0
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:145




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.25663256645
y: -7.43918609619
theta: 1.52535068989
speed: -0.0743854790926
id: 0
t: 145
xxx after update is x: 3.41702961922
y: -7.16870212555
theta: 1.53881502151
speed: -0.0479161813855
id: 0
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:146




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.41702961922
y: -7.16870212555
theta: 1.53881502151
speed: -0.0479161813855
id: 0
t: 146
xxx after update is x: 2.69358634949
y: -7.91956949234
theta: 1.42494654655
speed: 0.209685072303
id: 0
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:147




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.69358634949
y: -7.91956949234
theta: 1.42494654655
speed: 0.209685072303
id: 0
t: 147
xxx after update is x: 3.52755570412
y: -7.34511137009
theta: 1.52660524845
speed: 0.281232178211
id: 0
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:148




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.52755570412
y: -7.34511137009
theta: 1.52660524845
speed: 0.281232178211
id: 0
t: 148
xxx after update is x: 2.96640706062
y: -7.47843503952
theta: 1.52997255325
speed: -0.114690087736
id: 0
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:149




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.96640706062
y: -7.47843503952
theta: 1.52997255325
speed: -0.114690087736
id: 0
t: 149
xxx after update is x: 3.05353713036
y: -7.6442694664
theta: 1.56845891476
speed: 0.0198720600456
id: 0
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the f.man_init:
************normalize weight**********************
leave the update function 
in spin function, finish the n times spin:134




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:135




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: -2.97225117683
y: -11.5054683685
theta: 4.54640007019
speed: 14.1580142975
id: 1
t: 133
xxx after update is x: -3.15746927261
y: -12.2147932053
theta: 4.65242433548
speed: 13.7832479477
id: 1
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.15746927261
y: -12.2147932053
theta: 4.65242433548
speed: 13.7832479477
id: 1
t: 134
xxx after update is x: -3.22749209404
y: -14.0730056763
theta: 4.62981367111
speed: 13.9169511795
id: 1
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.22749209404
y: -14.0730056763
theta: 4.62981367111
speed: 13.9169511795
id: 1
t: 135
xxx after update is x: -2.39898562431
y: -13.3080978394
theta: 4.44105768204
speed: 14.2140493393
id: 1
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.7984779663678494, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (2.7430009841918945, -7.596950054168701, 1.531002402305603, 0.0112600177526474)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:137




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:138




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:139


xxx before update is x: -2.39898562431
y: -13.3080978394
theta: 4.44105768204
speed: 14.2140493393
id: 1
t: 136
xxx after update is x: -3.76984119415
y: -14.1103477478
theta: 4.93837070465
speed: 14.0179634094
id: 1
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.76984119415
y: -14.1103477478
theta: 4.93837070465
speed: 14.0179634094
id: 1
t: 137
xxx after update is x: -3.0167696476
y: -15.3377313614
theta: 4.7580370903
speed: 13.9477720261
id: 1
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.0167696476
y: -15.3377313614
theta: 4.7580370903
speed: 13.9477720261
id: 1
t: 138
xxx after update is x: -2.97344040871
y: -15.5822925568
theta: 4.81096458435
speed: 14.2983360291
id: 1
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.5145791851178946, 0]
222 self.state_dicts[msg.id][msg.t] is (2.804149627685547, -7.101424217224121, 1.585233211517334, 0.23312096297740936)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.17777777778






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:140




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:141


xxx n times spin:150


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.66666666667






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.05353713036
y: -7.6442694664
theta: 1.56845891476
speed: 0.0198720600456
id: 0
t: 150
xxx after update is x: 2.93743872643
y: -7.38794136047
theta: 1.4497641325
speed: -0.0295985005796
id: 0
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:151




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.93743872643
y: -7.38794136047
theta: 1.4497641325
speed: -0.0295985005796
id: 0
t: 151
xxx after update is x: 3.78151869774
y: -7.40216445923
theta: 1.60474407673
speed: -0.00494970614091
id: 0
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:152




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.78151869774
y: -7.40216445923
theta: 1.60474407673
speed: -0.00494970614091
id: 0
t: 152
xxx after update is x: 3.13833475113
y: -6.55666303635
theta: 1.80260503292
speed: -0.0178096015006
id: 0
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:153




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.13833475113
y: -6.55666303635
theta: 1.80260503292
speed: -0.0178096015006
id: 0
t: 153
xxx after update is x: 3.42049241066
y: -7.25604629517
theta: 1.5487498045
speed: -0.113928519189
id: 0
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:154




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.42049241066
y: -7.25604629517
theta: 1.5487498045
speed: -0.113928519189
id: 0
t: 154
xxx after update is x: 2.73872542381
y: -6.95819044113
theta: 1.58104920387
speed: -0.192606717348
id: 0
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:155




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.73872542381
y: -6.95819044113
theta: 1.58104920387
speed: -0.192606717348
id: 0
t: 155
xxx after update is x: 2.89452123642
y: -7.21933031082
theta: 1.60666334629
speed: 0.486361294985
id: 0
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:156




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.89452123642
y: -7.21933031082
theta: 1.60666334629
speed: 0.486361294985
id: 0
t: 156
xxx after update is x: 3.35020112991
y: -7.67203044891
theta: 1.68149363995
speed: 0.101235628128
id: 0
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:157


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.97777777778






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.35020112991
y: -7.67203044891
theta: 1.68149363995
speed: 0.101235628128
id: 0
t: 157
xxx aftbefore update is x: -2.97344040871
y: -15.5822925568
theta: 4.81096458435
speed: 14.2983360291
id: 1
t: 139
xxx after update is x: -3.42837548256
y: -15.3991346359
theta: 4.72356271744
speed: 13.6761274338
id: 1
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.42837548256
y: -15.3991346359
theta: 4.72356271744
speed: 13.6761274338
id: 1
t: 140
xxx after update is x: -3.68822050095
y: -19.5209732056
theta: 4.81328630447
speed: 13.7432756424
id: 1
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.7162886854565856, 0]
222 self.state_dicts[msg.id][msg.t] is (3.019763469696045, -8.297751426696777, 1.641058325767517, -0.1638728678226471)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.26666666667






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:142




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: -3.68822050095
y: -19.5209732056
theta: 4.81328630447
speed: 13.7432756424
id: 1
t: 141
xxx after update is x: -3.47017264366
y: -19.8944168091
theta: 4.7969045639
speed: 14.2730436325
id: 1
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.47017264366
y: -19.8944168091
theta: 4.7969045639
speed: 14.2730436325
id: 1
t: 142
xxx after update is x: -3.6098382473
y: -23.1479282379
theta: 4.75353622437
speed: 14.0153150558
id: 1
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.8372353765224164, 0]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.1908514499664307, -8.203023910522461, 1.4022644758224487, 0.3098489046096802)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
************normalize weight**********************
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: -3.6098382473
y: -23.1479282379
theta: 4.75353622437
speed: 14.0153150558
id: 1
t: 143
xxx after update is x: -3.55321455002
y: -23.9112663269
theta: 4.81477403641
speed: 13.6427717209
id: 1
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.5516937787917778, 0.5423999999999991]
222 self.state_dicts[msg.id][msg.t] is (3.294971466064453, -7.383243083953857, 1.7027136087417603, 0.017079070210456848)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:145




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:146




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: -3.55321455002
y: -23.9112663269
theta: 4.81477403641
speed: 13.6427717209
id: 1
t: 144
xxx after update is x: -3.15345025063
y: -24.7352676392
theta: 4.72404575348
speed: 13.9610185623
id: 1
t: 145
maneuver_negotiatir.py finish the update agent state fer update is x: 3.04211521149
y: -7.58870983124
theta: 1.38600182533
speed: 0.0375053323805
id: 0
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:158




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.04211521149
y: -7.58870983124
theta: 1.38600182533
speed: 0.0375053323805
id: 0
t: 158
xxx after update is x: 3.17376828194
y: -7.47894382477
theta: 1.51446449757
speed: 0.020054968074
id: 0
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:159




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.17376828194
y: -7.47894382477
theta: 1.51446449757
speed: 0.020054968074
id: 0
t: 159
xxx after update is x: 3.41661906242
y: -7.485683918
theta: 1.4818969965
speed: 0.265779435635
id: 0
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:160




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.41661906242
y: -7.485683918
theta: 1.4818969965
speed: 0.265779435635
id: 0
t: 160
xxx after update is x: 2.81914544106
y: -7.72145986557
theta: 1.51091396809
speed: 0.155425012112
id: 0
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:161




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: 2.81914544106
y: -7.72145986557
theta: 1.51091396809
speed: 0.155425012112
id: 0
t: 161
xxx after update is x: 2.94112014771
y: -7.47198629379
theta: 1.52313446999
speed: 0.287856727839
id: 0
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.94112014771
y: -7.47198629379
theta: 1.52313446999
speed: 0.287856727839
id: 0
t: 162
xxx after update is x: 3.00199389458
y: -7.54069232941
theta: 1.59827721119
speed: -0.244356617332
id: 0
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:163




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.00199389458
y: -7.54069232941
theta: 1.59827721119
speed: -0.244356617332
id: 0
t: 163
xxx after update is x: 3.35375213623
y: -7.76528072357
theta: 1.68455886841
speed: -0.473216474056
id: 0
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:164




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.35375213623
y: -7.76528072357
theta: 1.68455886841
speed: -0.473216474056
id: 0
t: 164
xxx after update is x: 3.15509295464
y: -7.55033159256
theta: 1.41410470009
speed: -0.0536595322192
id: 0
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:165


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.33333333333






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.15509295464
y: -7.55033159256
theta: 1.41410470009
speed: -0.0536595322192
id: rom ros funtion
xxx before update is x: -3.15345025063
y: -24.7352676392
theta: 4.72404575348
speed: 13.9610185623
id: 1
t: 145
xxx after update is x: -4.09688520432
y: -26.3235054016
theta: 4.78999328613
speed: 13.943107605
id: 1
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -4.09688520432
y: -26.3235054016
theta: 4.78999328613
speed: 13.943107605
id: 1
t: 146
xxx after update is x: -3.36947846413
y: -26.0987014771
theta: 4.73181867599
speed: 13.8862495422
id: 1
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4774046260497545, 0]
222 self.state_dicts[msg.id][msg.t] is (2.6935863494873047, -7.919569492340088, 1.4249465465545654, 0.2096850723028183)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.53333333333






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:148




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: -3.36947846413
y: -26.0987014771
theta: 4.73181867599
speed: 13.8862495422
id: 1
t: 147
xxx after update is x: -2.54991817474
y: -26.4242782593
theta: 4.89575624466
speed: 13.8876142502
id: 1
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.54991817474
y: -26.4242782593
theta: 4.89575624466
speed: 13.8876142502
id: 1
t: 148
xxx after update is x: -3.25632667542
y: -27.1929454803
theta: 4.82741546631
speed: 13.9142389297
id: 1
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.7775603526369776, 0]
222 self.state_dicts[msg.id][msg.t] is (3.35020112991333, -7.672030448913574, 1.6814936399459839, 0.10123562812805176)
222 self.state_dicts[msg.id][msg.t] is (3.0421152114868164, -7.588709831237793, 1.3860018253326416, 0.03750533238053322)
222 self.state_dicts[msg.id][msg.t] is (3.1737682819366455, -7.478943824768066, 1.5144644975662231, 0.02005496807396412)
222 self.state_dicts[msg.id][msg.t] is (3.416619062423706, -7.485683917999268, 1.481896996498108, 0.26577943563461304)
222 self.state_dicts[msg.id][msg.t] is (2.819145441055298, -7.721459865570068, 1.5109139680862427, 0.15542501211166382)
222 self.state_dicts[msg.id][msg.t] is (2.941120147705078, -7.471986293792725, 1.523134469985962, 0.28785672783851624)
222 self.state_dicts[msg.id][msg.t] is (3.0019938945770264, -7.540692329406738, 1.59827721118927, -0.24435661733150482)
222 self.state_dicts[msg.id][msg.t] is (3.3537521362304688, -7.765280723571777, 1.6845588684082031, -0.4732164740562439)
222 self.state_dicts[msg.id][msg.t] is (3.15509295463562, -7.5503315925598145, 1.414104700088501, -0.053659532219171524)
222 self.state_dicts[msg.id][msg.t] is (2.4580330848693848, -7.872642517089844, 1.6452820301055908, -0.07504145056009293)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: -3.25632667542
y: -27.1929454803
theta: 4.82741546631
speed: 13.9142389297
id: 1
t: 149
xxx after update is x: -3.30620574951
y: -27.6620998383
theta: 4.80656147003
speed: 14.4195842743
id: 1
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.227682113647461, -7.263796329498291, 1.5763659477233887, -0.15195074677467346)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: -3.30620574951
y: -27.6620998383
theta: 4.80656147003
speed: 14.4195842743
id: 1
t: 150
xxx after update is x: -3.46163797379
y: -28.2263202667
theta: 4.58602237701
speed: 13.5804843903
id: 1
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.275031089782715, -6.980175495147705, 1.4882773160934448, -0.1925445944070816)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.46163797379
y: -28.2263202667
theta: 4.58602237701
speed: 13.5804843903
id: 1
t: 151
xxx after update is x: -2.91111516953
y: -29.3119773865
theta: 4.71868944168
speed: 13.7340173721
id: 1
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:152


222 self.state_dicts[msg.id][msg.t] is (3.458545446395874, -7.504204750061035, 1.4456475973129272, -0.19401893019676208)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.91111516953
y: -29.3119773865
theta: 4.71868944168
speed: 13.7340173721
id: 1
t: 152
xxx after update is x: -2.45894050598
y: -29.5542488098
theta: 4.74599027634
speed: 14.0005483627
id: 1
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:153


222 self.state_dicts[msg.id][msg.t] is (3.1359758377075195, -7.389484405517578, 1.368216872215271, -0.563965380191803)
removed car with id 1 from grantlist. currentgrantlist: {}


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.45894050598
y: -29.5542488098
theta: 4.74599027634
speed: 14.0005483627
id: 1
t: 153
xxx after update is x: -3.53142929077
y: -29.8063259125
theta: 4.57042503357
speed: 13.9148054123
id: 1
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:154


222 self.state_dicts[msg.id][msg.t] is (3.1408255100250244, -7.056771278381348, 1.6999059915542603, -0.0023866528645157814)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.53142929077
y: -29.8063259125
theta: 4.57042503357
speed: 13.9148054123
id: 1
t: 154
xxx after update is x: -3.07578754425
y: -30.6100463867
theta: 4.62352323532
speed: 13.8411970139
id: 1
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:155


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.88888888889






self.maneuver_requested straight
222 self.state_dicts[msg.id][msg.t] is (3.5969672203063965, -7.465758323669434, 1.5808866024017334, -0.13614583015441895)
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.07578754425
y: -30.6100463867
theta: 4.62352323532
speed: 13.8411970139
id: 1
t: 155
xxx after update is x: -3.50078010559
y: -31.7292442322
theta: 4.72817659378
speed: 13.9703989029
id: 1
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:156


222 self.state_dicts[msg.id][msg.t] is (3.4795708656311035, -7.39982271194458, 1.4998092651367188, 0.43742886185646057)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.50078010559
y: -31.7292442322
theta: 4.72817659378
speed: 13.9703989029
id: 1
t: 156
xxx after update is x: -3.14675831795
y: -32.1693382263
theta: 4.63880109787
speed: 130
t: 165
xxx after update is x: 2.45803308487
y: -7.87264251709
theta: 1.64528203011
speed: -0.0750414505601
id: 0
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:166




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.45803308487
y: -7.87264251709
theta: 1.64528203011
speed: -0.0750414505601
id: 0
t: 166
xxx after update is x: 3.22768211365
y: -7.2637963295
theta: 1.57636594772
speed: -0.151950746775
id: 0
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:167




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.22768211365
y: -7.2637963295
theta: 1.57636594772
speed: -0.151950746775
id: 0
t: 167
xxx after update is x: 3.27503108978
y: -6.98017549515
theta: 1.48827731609
speed: -0.192544594407
id: 0
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:168




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.27503108978
y: -6.98017549515
theta: 1.48827731609
speed: -0.192544594407
id: 0
t: 168
xxx after update is x: 3.4585454464
y: -7.50420475006
theta: 1.44564759731
speed: -0.194018930197
id: 0
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:169




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.4585454464
y: -7.50420475006
theta: 1.44564759731
speed: -0.194018930197
id: 0
t: 169
xxx after update is x: 3.13597583771
y: -7.38948440552
theta: 1.36821687222
speed: -0.563965380192
id: 0
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:170




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.13597583771
y: -7.38948440552
theta: 1.36821687222
speed: -0.563965380192
id: 0
t: 170
xxx after update is x: 3.14082551003
y: -7.05677127838
theta: 1.69990599155
speed: -0.00238665286452
id: 0
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:171




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.14082551003
y: -7.05677127838
theta: 1.69990599155
speed: -0.00238665286452
id: 0
t: 171
xxx after update is x: 3.59696722031
y: -7.46575832367
theta: 1.5808866024
speed: -0.136145830154
id: 0
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:172


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.64444444444






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.59696722031
y: -7.46575832367
theta: 1.5808866024
speed: -0.136145830154
id: 0
t: 172
xxx after update is x: 3.47957086563
y: -7.39982271194
theta: 1.49980926514
speed: 0.437428861856
id: 0
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:173




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.47957086563
y: -7.39982271194
theta: 1.49980926514
.7092657089
id: 1
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:157


222 self.state_dicts[msg.id][msg.t] is (3.2990946769714355, -7.910364627838135, 1.4567232131958008, 0.38355332612991333)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.14675831795
y: -32.1693382263
theta: 4.63880109787
speed: 13.7092657089
id: 1
t: 157
xxx after update is x: -3.30814576149
y: -32.6419944763
theta: 4.79577684402
speed: 14.0392217636
id: 1
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:158


222 self.state_dicts[msg.id][msg.t] is (3.5373480319976807, -7.867748260498047, 1.5675592422485352, 0.41996026039123535)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.30814576149
y: -32.6419944763
theta: 4.79577684402
speed: 14.0392217636
id: 1
t: 158
xxx after update is x: -3.77867126465
y: -33.1122627258
theta: 4.81223106384
speed: 13.7802972794
id: 1
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:159


222 self.state_dicts[msg.id][msg.t] is (3.4838743209838867, -7.830479621887207, 1.6465342044830322, -0.1171814426779747)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.77867126465
y: -33.1122627258
theta: 4.81223106384
speed: 13.7802972794
id: 1
t: 159
xxx after update is x: -2.98283648491
y: -33.9918708801
theta: 4.81353521347
speed: 14.1417579651
id: 1
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:160


222 self.state_dicts[msg.id][msg.t] is (2.922107696533203, -6.937877178192139, 1.656099796295166, 0.038513943552970886)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.98283648491
y: -33.9918708801
theta: 4.81353521347
speed: 14.1417579651
id: 1
t: 160
xxx after update is x: -3.01875686646
y: -34.4983520508
theta: 4.70318508148
speed: 13.49467659
id: 1
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:161


222 self.state_dicts[msg.id][msg.t] is (3.0489819049835205, -7.148107528686523, 1.5050755739212036, 0.23560406267642975)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.01875686646
y: -34.4983520508
theta: 4.70318508148
speed: 13.49467659
id: 1
t: 161
xxx after update is x: -2.82110786438
y: -34.7481765747
theta: 4.64790058136
speed: 13.8381786346
id: 1
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:162


222 self.state_dicts[msg.id][msg.t] is (3.733351230621338, -7.332075595855713, 1.393880844116211, -0.17051008343696594)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.2






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -2.82110786438
y: -34.7481765747
theta: 4.64790058136
speed: 13.8381786346
id: 1
t: 162
xxx after update is x: -3.16674423218
y: -35.886920929
theta: 4.83083963394
speed: 13.2832794189
id: 1
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:163


222 self.state_dicts[msg.id][msg.t] is (3.000312328338623, -7.593295574188232, 1.558621048speed: 0.437428861856
id: 0
t: 173
xxx after update is x: 3.29909467697
y: -7.91036462784
theta: 1.4567232132
speed: 0.38355332613
id: 0
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:174




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.29909467697
y: -7.91036462784
theta: 1.4567232132
speed: 0.38355332613
id: 0
t: 174
xxx after update is x: 3.537348032
y: -7.8677482605
theta: 1.56755924225
speed: 0.419960260391
id: 0
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:175




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.537348032
y: -7.8677482605
theta: 1.56755924225
speed: 0.419960260391
id: 0
t: 175
xxx after update is x: 3.48387432098
y: -7.83047962189
theta: 1.64653420448
speed: -0.117181442678
id: 0
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:176




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.48387432098
y: -7.83047962189
theta: 1.64653420448
speed: -0.117181442678
id: 0
t: 176
xxx after update is x: 2.92210769653
y: -6.93787717819
theta: 1.6560997963
speed: 0.038513943553
id: 0
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:177




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.92210769653
y: -6.93787717819
theta: 1.6560997963
speed: 0.038513943553
id: 0
t: 177
xxx after update is x: 3.04898190498
y: -7.14810752869
theta: 1.50507557392
speed: 0.235604062676
id: 0
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:178




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.04898190498
y: -7.14810752869
theta: 1.50507557392
speed: 0.235604062676
id: 0
t: 178
xxx after update is x: 3.73335123062
y: -7.33207559586
theta: 1.39388084412
speed: -0.170510083437
id: 0
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:179




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.73335123062
y: -7.33207559586
theta: 1.39388084412
speed: -0.170510083437
id: 0
t: 179
xxx after update is x: 3.00031232834
y: -7.59329557419
theta: 1.55862104893
speed: -0.233060836792
id: 0
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:180


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.0






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.00031232834
y: -7.59329557419
theta: 1.55862104893
speed: -0.233060836792
id: 0
t: 180
xxx after update is x: 2.98082184792
y: -7.43603086472
theta: 1.34852147102
speed: 0.0546537972987
id: 0
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:181




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.98082184792
y: -7.43603086472
theta: 1.34852147102
spe9273071, -0.2330608367919922)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.16674423218
y: -35.886920929
theta: 4.83083963394
speed: 13.2832794189
id: 1
t: 163
xxx after update is x: -3.39989566803
y: -35.9296951294
theta: 4.61878824234
speed: 13.2054824829
id: 1
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:164


222 self.state_dicts[msg.id][msg.t] is (2.9808218479156494, -7.436030864715576, 1.3485214710235596, 0.054653797298669815)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.39989566803
y: -35.9296951294
theta: 4.61878824234
speed: 13.2054824829
id: 1
t: 164
xxx after update is x: -3.07919430733
y: -36.9515113831
theta: 4.7344288826
speed: 12.4679689407
id: 1
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:165


222 self.state_dicts[msg.id][msg.t] is (3.401439666748047, -7.304360389709473, 1.565191388130188, 0.027503501623868942)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.07919430733
y: -36.9515113831
theta: 4.7344288826
speed: 12.4679689407
id: 1
t: 165
xxx after update is x: -3.11244916916
y: -37.6349067688
theta: 4.89999198914
speed: 12.4419746399
id: 1
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:166


222 self.state_dicts[msg.id][msg.t] is (3.1491870880126953, -7.517561435699463, 1.4319722652435303, -0.2609310448169708)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.11244916916
y: -37.6349067688
theta: 4.89999198914
speed: 12.4419746399
id: 1
t: 166
xxx after update is x: -2.68517518044
y: -38.3162117004
theta: 4.57829666138
speed: 12.129281044
id: 1
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:167


222 self.state_dicts[msg.id][msg.t] is (3.094536066055298, -7.693184852600098, 1.691514015197754, 0.2276998609304428)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -2.68517518044
y: -38.3162117004
theta: 4.57829666138
speed: 12.129281044
id: 1
t: 167
xxx after update is x: -3.1205599308
y: -38.7959403992
theta: 4.5350689888
speed: 11.5122041702
id: 1
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:168


222 self.state_dicts[msg.id][msg.t] is (3.327592611312866, -7.385634422302246, 1.618053913116455, 0.06551602482795715)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.1205599308
y: -38.7959403992
theta: 4.5350689888
speed: 11.5122041702
id: 1
t: 168
xxx after update is x: -3.01711559296
y: -39.2131080627
theta: 4.82660388947
speed: 11.1875219345
id: 1
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:169


222 self.state_dicts[msg.id][msg.t] is (3.6964235305786133, -7.810286998748779, 1.5777446031570435, 0.04567616060376167)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.01711559296
y: -39.2131080627
theta: 4.82660388947
speed: 11.1875219345
id: 1
t: 169
xxx after update is x: -2.72502303123
y: -39.3908538818
theta: 4.61967563629
speed: 10.4699077606
id: 1
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:170


2ed: 0.0546537972987
id: 0
t: 181
xxx after update is x: 3.40143966675
y: -7.30436038971
theta: 1.56519138813
speed: 0.0275035016239
id: 0
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:182




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.40143966675
y: -7.30436038971
theta: 1.56519138813
speed: 0.0275035016239
id: 0
t: 182
xxx after update is x: 3.14918708801
y: -7.5175614357
theta: 1.43197226524
speed: -0.260931044817
id: 0
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:183




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.14918708801
y: -7.5175614357
theta: 1.43197226524
speed: -0.260931044817
id: 0
t: 183
xxx after update is x: 3.09453606606
y: -7.6931848526
theta: 1.6915140152
speed: 0.22769986093
id: 0
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:184




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.09453606606
y: -7.6931848526
theta: 1.6915140152
speed: 0.22769986093
id: 0
t: 184
xxx after update is x: 3.32759261131
y: -7.3856344223
theta: 1.61805391312
speed: 0.065516024828
id: 0
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:185




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.32759261131
y: -7.3856344223
theta: 1.61805391312
speed: 0.065516024828
id: 0
t: 185
xxx after update is x: 3.69642353058
y: -7.81028699875
theta: 1.57774460316
speed: 0.0456761606038
id: 0
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:186




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.69642353058
y: -7.81028699875
theta: 1.57774460316
speed: 0.0456761606038
id: 0
t: 186
xxx after update is x: 3.20220160484
y: -7.39354562759
theta: 1.47541689873
speed: -0.156651228666
id: 0
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:187




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.20220160484
y: -7.39354562759
theta: 1.47541689873
speed: -0.156651228666
id: 0
t: 187
xxx after update is x: 3.22456598282
y: -7.67889976501
theta: 1.6392595768
speed: -0.0604570694268
id: 0
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:188


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.35555555556






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.22456598282
y: -7.67889976501
theta: 1.6392595768
speed: -0.0604570694268
id: 0
t: 188
xxx after update is x: 3.73112487793
y: -7.3840303421
theta: 1.69827520847
speed: 0.152439966798
id: 0
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:189




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.73112487793
y: -7.3840303421
theta: 1.698222 self.state_dicts[msg.id][msg.t] is (3.2022016048431396, -7.393545627593994, 1.475416898727417, -0.15665122866630554)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.55555555556






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -2.72502303123
y: -39.3908538818
theta: 4.61967563629
speed: 10.4699077606
id: 1
t: 170
xxx after update is x: -3.26631259918
y: -40.0629081726
theta: 4.78499746323
speed: 10.3823814392
id: 1
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:171


222 self.state_dicts[msg.id][msg.t] is (3.2245659828186035, -7.678899765014648, 1.6392595767974854, -0.06045706942677498)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.26631259918
y: -40.0629081726
theta: 4.78499746323
speed: 10.3823814392
id: 1
t: 171
xxx after update is x: -3.59034061432
y: -40.2900466919
theta: 4.77085590363
speed: 10.3162593842
id: 1
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:172


222 self.state_dicts[msg.id][msg.t] is (3.7311248779296875, -7.384030342102051, 1.6982752084732056, 0.15243996679782867)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.59034061432
y: -40.2900466919
theta: 4.77085590363
speed: 10.3162593842
id: 1
t: 172
xxx after update is x: -3.83547401428
y: -40.9639663696
theta: 4.79808330536
speed: 9.49489402771
id: 1
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:173


222 self.state_dicts[msg.id][msg.t] is (2.835592031478882, -7.608630657196045, 1.5172016620635986, 0.29921436309814453)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.83547401428
y: -40.9639663696
theta: 4.79808330536
speed: 9.49489402771
id: 1
t: 173
xxx after update is x: -2.58628129959
y: -41.4117088318
theta: 4.67152261734
speed: 8.94653224945
id: 1
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:174


222 self.state_dicts[msg.id][msg.t] is (3.3737716674804688, -8.009506225585938, 1.54377019405365, -0.10551772266626358)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -2.58628129959
y: -41.4117088318
theta: 4.67152261734
speed: 8.94653224945
id: 1
t: 174
xxx after update is x: -3.23047709465
y: -41.2354431152
theta: 4.7586607933
speed: 8.56688499451
id: 1
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:175


222 self.state_dicts[msg.id][msg.t] is (3.595832109451294, -7.641487121582031, 1.5286239385604858, 0.27985841035842896)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.23047709465
y: -41.2354431152
theta: 4.7586607933
speed: 8.56688499451
id: 1
t: 175
xxx after update is x: -3.70001506805
y: -42.3542022705
theta: 4.65817451477
speed: 8.11137485504
id: 1
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:176


222 self.state_dicts[msg.id][msg.t] is (3.0509750843048096, -7.6425089836120605, 1.5014084577560425, -0.15859322249889374)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.70001506805
y: -42.3542022705
th7520847
speed: 0.152439966798
id: 0
t: 189
xxx after update is x: 2.83559203148
y: -7.6086306572
theta: 1.51720166206
speed: 0.299214363098
id: 0
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:190




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.83559203148
y: -7.6086306572
theta: 1.51720166206
speed: 0.299214363098
id: 0
t: 190
xxx after update is x: 3.37377166748
y: -8.00950622559
theta: 1.54377019405
speed: -0.105517722666
id: 0
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:191




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.37377166748
y: -8.00950622559
theta: 1.54377019405
speed: -0.105517722666
id: 0
t: 191
xxx after update is x: 3.59583210945
y: -7.64148712158
theta: 1.52862393856
speed: 0.279858410358
id: 0
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:192




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.59583210945
y: -7.64148712158
theta: 1.52862393856
speed: 0.279858410358
id: 0
t: 192
xxx after update is x: 3.0509750843
y: -7.64250898361
theta: 1.50140845776
speed: -0.158593222499
id: 0
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:193




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.0509750843
y: -7.64250898361
theta: 1.50140845776
speed: -0.158593222499
id: 0
t: 193
xxx after update is x: 3.4242913723
y: -7.85767269135
theta: 1.59989452362
speed: -0.281547427177
id: 0
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:194




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.4242913723
y: -7.85767269135
theta: 1.59989452362
speed: -0.281547427177
id: 0
t: 194
xxx after update is x: 3.20562648773
y: -7.65429353714
theta: 1.55134487152
speed: -0.0104097155854
id: 0
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:195


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.66666666667






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.20562648773
y: -7.65429353714
theta: 1.55134487152
speed: -0.0104097155854
id: 0
t: 195
xxx after update is x: 3.65239596367
y: -7.90250062943
theta: 1.69174408913
speed: 0.302052527666
id: 0
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:196




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.65239596367
y: -7.90250062943
theta: 1.69174408913
speed: 0.302052527666
id: 0
t: 196
xxx after update is x: 3.58316159248
y: -7.72849273682
theta: 1.52998781204
speed: -0.015082902275
id: 0
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:197




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.58316159248
y: -7.72849273eta: 4.65817451477
speed: 8.11137485504
id: 1
t: 176
xxx after update is x: -3.42396831512
y: -42.4483146667
theta: 4.69954538345
speed: 7.94871997833
id: 1
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:177


222 self.state_dicts[msg.id][msg.t] is (3.4242913722991943, -7.857672691345215, 1.5998945236206055, -0.2815474271774292)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.86666666667






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.42396831512
y: -42.4483146667
theta: 4.69954538345
speed: 7.94871997833
id: 1
t: 177
xxx after update is x: -3.09382081032
y: -42.4958190918
theta: 4.80321884155
speed: 7.40231513977
id: 1
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:178


222 self.state_dicts[msg.id][msg.t] is (3.2056264877319336, -7.654293537139893, 1.551344871520996, -0.010409715585410595)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.09382081032
y: -42.4958190918
theta: 4.80321884155
speed: 7.40231513977
id: 1
t: 178
xxx after update is x: -3.03058815002
y: -43.1634902954
theta: 4.85799980164
speed: 7.1403260231
id: 1
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:179


222 self.state_dicts[msg.id][msg.t] is (3.6523959636688232, -7.902500629425049, 1.691744089126587, 0.3020525276660919)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.03058815002
y: -43.1634902954
theta: 4.85799980164
speed: 7.1403260231
id: 1
t: 179
xxx after update is x: -2.808614254
y: -43.0605201721
theta: 4.85582447052
speed: 6.9870300293
id: 1
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:180


222 self.state_dicts[msg.id][msg.t] is (3.5831615924835205, -7.728492736816406, 1.5299878120422363, -0.015082902275025845)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -2.808614254
y: -43.0605201721
theta: 4.85582447052
speed: 6.9870300293
id: 1
t: 180
xxx after update is x: -3.00293183327
y: -43.624332428
theta: 4.7780380249
speed: 6.46276092529
id: 1
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:181


222 self.state_dicts[msg.id][msg.t] is (3.1105988025665283, -7.655993938446045, 1.5586804151535034, -0.1594417542219162)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.00293183327
y: -43.624332428
theta: 4.7780380249
speed: 6.46276092529
id: 1
t: 181
xxx after update is x: -3.30665874481
y: -44.3638114929
theta: 4.67551326752
speed: 5.95180988312
id: 1
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:182


222 self.state_dicts[msg.id][msg.t] is (3.249762535095215, -7.304683208465576, 1.4606010913848877, -0.026605479419231415)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.30665874481
y: -44.3638114929
theta: 4.67551326752
speed: 5.95180988312
id: 1
t: 182
xxx after update is x: -3.24212956429
y: -43.9974365234
theta: 4.81748962402
speed: 5.30198144913
id: 1
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times 682
theta: 1.52998781204
speed: -0.015082902275
id: 0
t: 197
xxx after update is x: 3.11059880257
y: -7.65599393845
theta: 1.55868041515
speed: -0.159441754222
id: 0
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:198




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.11059880257
y: -7.65599393845
theta: 1.55868041515
speed: -0.159441754222
id: 0
t: 198
xxx after update is x: 3.2497625351
y: -7.30468320847
theta: 1.46060109138
speed: -0.0266054794192
id: 0
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:199




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.2497625351
y: -7.30468320847
theta: 1.46060109138
speed: -0.0266054794192
id: 0
t: 199
xxx after update is x: 3.36684131622
y: -7.1700463295
theta: 1.53813123703
speed: 0.196169510484
id: 0
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:200




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.36684131622
y: -7.1700463295
theta: 1.53813123703
speed: 0.196169510484
id: 0
t: 200
xxx after update is x: 3.38631796837
y: -7.42061853409
theta: 1.46386778355
speed: -0.012930162251
id: 0
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:201




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.38631796837
y: -7.42061853409
theta: 1.46386778355
speed: -0.012930162251
id: 0
t: 201
xxx after update is x: 3.50193858147
y: -7.48782396317
theta: 1.64419412613
speed: -0.0958985164762
id: 0
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:202




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.50193858147
y: -7.48782396317
theta: 1.64419412613
speed: -0.0958985164762
id: 0
t: 202
xxx after update is x: 3.59786629677
y: -7.81242752075
theta: 1.56007397175
speed: -0.100301109254
id: 0
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:203


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.02222222222






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.59786629677
y: -7.81242752075
theta: 1.56007397175
speed: -0.100301109254
id: 0
t: 203
xxx after update is x: 3.44967365265
y: -7.61391401291
theta: 1.65187323093
speed: 0.106887996197
id: 0
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:204




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.44967365265
y: -7.61391401291
theta: 1.65187323093
speed: 0.106887996197
id: 0
t: 204
xxx after update is x: 3.3441991806
y: -7.82129049301
theta: 1.5567356348
speed: 0.144717216492
id: 0
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:205




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.34419spin:183


222 self.state_dicts[msg.id][msg.t] is (3.3668413162231445, -7.170046329498291, 1.5381312370300293, 0.19616951048374176)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.24212956429
y: -43.9974365234
theta: 4.81748962402
speed: 5.30198144913
id: 1
t: 183
xxx after update is x: -3.33595657349
y: -43.7987785339
theta: 4.870616436
speed: 5.04728603363
id: 1
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:184


222 self.state_dicts[msg.id][msg.t] is (3.3863179683685303, -7.420618534088135, 1.4638677835464478, -0.012930162250995636)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.33595657349
y: -43.7987785339
theta: 4.870616436
speed: 5.04728603363
id: 1
t: 184
xxx after update is x: -3.51371788979
y: -44.7089996338
theta: 4.6329035759
speed: 4.59833431244
id: 1
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:185


222 self.state_dicts[msg.id][msg.t] is (3.501938581466675, -7.487823963165283, 1.6441941261291504, -0.09589851647615433)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.22222222222






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.51371788979
y: -44.7089996338
theta: 4.6329035759
speed: 4.59833431244
id: 1
t: 185
xxx after update is x: -3.3437640667
y: -45.1232223511
theta: 4.6632976532
speed: 4.32932186127
id: 1
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:186


222 self.state_dicts[msg.id][msg.t] is (3.5978662967681885, -7.812427520751953, 1.560073971748352, -0.1003011092543602)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.3437640667
y: -45.1232223511
theta: 4.6632976532
speed: 4.32932186127
id: 1
t: 186
xxx after update is x: -3.15491533279
y: -45.129234314
theta: 4.75251436234
speed: 3.52798557281
id: 1
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:187


222 self.state_dicts[msg.id][msg.t] is (3.449673652648926, -7.6139140129089355, 1.651873230934143, 0.10688799619674683)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.15491533279
y: -45.129234314
theta: 4.75251436234
speed: 3.52798557281
id: 1
t: 187
xxx after update is x: -3.57219314575
y: -45.4222717285
theta: 4.64383459091
speed: 3.38169240952
id: 1
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:188


222 self.state_dicts[msg.id][msg.t] is (3.3441991806030273, -7.821290493011475, 1.556735634803772, 0.14471721649169922)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.57219314575
y: -45.4222717285
theta: 4.64383459091
speed: 3.38169240952
id: 1
t: 188
xxx after update is x: -3.60130429268
y: -45.2893447876
theta: 4.55636978149
speed: 2.88880467415
id: 1
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:189


222 self.state_dicts[msg.id][msg.t] is (3.666367769241333, -7.635775566101074, 1.6622685194015503, 0.13161137700080872)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.60130429268
y: -45.2893447876
theta: 4.55636978149
speed: 2.88880467415
id: 1
t: 189
xxx after update is x: -2.93343997002
y: -45.8353500366
theta: 4.63386297226
speed: 2.374355793
id: 1
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:190


222 self.state_dicts[msg.id][msg.t] is (3.639477014541626, -7.59790563583374, 1.4621087312698364, -0.09636756777763367)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -2.93343997002
y: -45.8353500366
theta: 4.63386297226
speed: 2.374355793
id: 1
t: 190
xxx after update is x: -2.83952975273
y: -45.5203132629
theta: 4.76085853577
speed: 2.42870163918
id: 1
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:191


222 self.state_dicts[msg.id][msg.t] is (3.4907143115997314, -7.205749034881592, 1.4787812232971191, -0.19427256286144257)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -2.83952975273
y: -45.5203132629
theta: 4.76085853577
speed: 2.42870163918
id: 1
t: 191
xxx after update is x: -3.61000323296
y: -45.2943572998
theta: 4.9028301239
speed: 2.11307668686
id: 1
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:192


222 self.state_dicts[msg.id][msg.t] is (3.775179624557495, -7.416433811187744, 1.3175435066223145, -0.02799447439610958)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.53333333333






self.maneuver_requested straight


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.61000323296
y: -45.2943572998
theta: 4.9028301239
speed: 2.11307668686
id: 1
t: 192
xxx after update is x: -3.30610775948
y: -46.0423660278
theta: 4.71255683899
speed: 1.91555154324
id: 1
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (3.2508058547973633, -7.347124099731445, 1.3930410146713257, 0.05154236778616905)
leave the update function 
in spin function, finish the n times spin:193




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.30610775948
y: -46.0423660278
theta: 4.71255683899
speed: 1.91555154324
id: 1
t: 193
xxx after update is x: -3.24944472313
y: -45.8612823486
theta: 4.82487869263
speed: 0.904280900955
id: 1
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:194


222 self.state_dicts[msg.id][msg.t] is (3.464285135269165, -7.697082042694092, 1.649735689163208, 0.014310535974800587)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.24944472313
y: -45.8612823486
theta: 4.82487869263
speed: 0.904280900955
id: 1
t: 194
xxx after update is x: -3.1898598671
y: -45.6915893555
theta: 4.67763853073
speed: 0.678217291832
id: 1
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:195


222 self.state_dicts[msg.id][msg.t] is (3.3871028423309326, -7.3484930992126465, 1.7062791585922241, -0.33684268593788147)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.1898598671
y: -45.6915893555
theta: 4.67763853073
speed: 0.678217291832
id: 1
t: 195
xxx after update is x: -3.50957965851
y: -45.9024238586
theta: 4.76122665405
speed: 0.298092842102
id: 1
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the 91806
y: -7.82129049301
theta: 1.5567356348
speed: 0.144717216492
id: 0
t: 205
xxx after update is x: 3.66636776924
y: -7.6357755661
theta: 1.6622685194
speed: 0.131611377001
id: 0
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:206




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.66636776924
y: -7.6357755661
theta: 1.6622685194
speed: 0.131611377001
id: 0
t: 206
xxx after update is x: 3.63947701454
y: -7.59790563583
theta: 1.46210873127
speed: -0.0963675677776
id: 0
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:207




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.63947701454
y: -7.59790563583
theta: 1.46210873127
speed: -0.0963675677776
id: 0
t: 207
xxx after update is x: 3.4907143116
y: -7.20574903488
theta: 1.4787812233
speed: -0.194272562861
id: 0
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:208




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.4907143116
y: -7.20574903488
theta: 1.4787812233
speed: -0.194272562861
id: 0
t: 208
xxx after update is x: 3.77517962456
y: -7.41643381119
theta: 1.31754350662
speed: -0.0279944743961
id: 0
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:209




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.77517962456
y: -7.41643381119
theta: 1.31754350662
speed: -0.0279944743961
id: 0
t: 209
xxx after update is x: 3.2508058548
y: -7.34712409973
theta: 1.39304101467
speed: 0.0515423677862
id: 0
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:210


removed car with id 0 from grantlist. currentgrantlist: {}
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.33333333333






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.2508058548
y: -7.34712409973
theta: 1.39304101467
speed: 0.0515423677862
id: 0
t: 210
xxx after update is x: 3.46428513527
y: -7.69708204269
theta: 1.64973568916
speed: 0.0143105359748
id: 0
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:211




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.46428513527
y: -7.69708204269
theta: 1.64973568916
speed: 0.0143105359748
id: 0
t: 211
xxx after update is x: 3.38710284233
y: -7.34849309921
theta: 1.70627915859
speed: -0.336842685938
id: 0
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:212




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.38710284233
y: -7.34849309921
theta: 1.70627915859
speed: -0.336842685938
id: 0
t: 212
xxx after update is x: 2.71990847588
y: -7.80074548721
theta: 1.59905076027
speed: 0.222485139966
id: 0
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:213




going to the update function
sim.py in the sim.py update function 
targetsn times spin:196


222 self.state_dicts[msg.id][msg.t] is (2.7199084758758545, -7.800745487213135, 1.599050760269165, 0.22248513996601105)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: -3.50957965851
y: -45.9024238586
theta: 4.76122665405
speed: 0.298092842102
id: 1
t: 196
xxx after update is x: -2.99198460579
y: -46.5456924438
theta: 4.79561090469
speed: -0.120191127062
id: 1
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:197


222 self.state_dicts[msg.id][msg.t] is (3.410127878189087, -7.765637397766113, 1.5560495853424072, 0.1421435922384262)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.99198460579
y: -46.5456924438
theta: 4.79561090469
speed: -0.120191127062
id: 1
t: 197
xxx after update is x: -3.35125255585
y: -46.2834777832
theta: 4.77110385895
speed: 0.805375397205
id: 1
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:198


222 self.state_dicts[msg.id][msg.t] is (3.2651898860931396, -7.110943794250488, 1.6577577590942383, -0.11753851175308228)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.35125255585
y: -46.2834777832
theta: 4.77110385895
speed: 0.805375397205
id: 1
t: 198
xxx after update is x: -3.3931863308
y: -46.7016601562
theta: 4.60602331161
speed: 0.0261424127966
id: 1
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:199


222 self.state_dicts[msg.id][msg.t] is (3.2053937911987305, -7.651599407196045, 1.4840749502182007, -0.19729696214199066)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.3931863308
y: -46.7016601562
theta: 4.60602331161
speed: 0.0261424127966
id: 1
t: 199
xxx after update is x: -3.28252696991
y: -46.1910362244
theta: 4.76921749115
speed: 0.188891589642
id: 1
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:200


222 self.state_dicts[msg.id][msg.t] is (2.932544469833374, -7.158006191253662, 1.7285135984420776, -0.08139260113239288)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.88888888889






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.28252696991
y: -46.1910362244
theta: 4.76921749115
speed: 0.188891589642
id: 1
t: 200
xxx after update is x: -3.16658234596
y: -46.6443862915
theta: 4.63420820236
speed: 0.126431673765
id: 1
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:201


222 self.state_dicts[msg.id][msg.t] is (3.385817527770996, -7.4271392822265625, 1.699147343635559, -0.08926992118358612)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.16658234596
y: -46.6443862915
theta: 4.63420820236
speed: 0.126431673765
id: 1
t: 201
xxx after update is x: -3.3114733696
y: -46.3195075989
theta: 4.64812517166
speed: 0.306341379881
id: 1
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:202


222 self.state_dicts[msg.id][msg.t] is (3.104792833328247, -8.146198272705078, 1.605772614479065, -0.08036068081855774)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speepeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.71990847588
y: -7.80074548721
theta: 1.59905076027
speed: 0.222485139966
id: 0
t: 213
xxx after update is x: 3.41012787819
y: -7.76563739777
theta: 1.55604958534
speed: 0.142143592238
id: 0
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:214




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.41012787819
y: -7.76563739777
theta: 1.55604958534
speed: 0.142143592238
id: 0
t: 214
xxx after update is x: 3.26518988609
y: -7.11094379425
theta: 1.65775775909
speed: -0.117538511753
id: 0
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:215




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.26518988609
y: -7.11094379425
theta: 1.65775775909
speed: -0.117538511753
id: 0
t: 215
xxx after update is x: 3.2053937912
y: -7.6515994072
theta: 1.48407495022
speed: -0.197296962142
id: 0
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:216




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.2053937912
y: -7.6515994072
theta: 1.48407495022
speed: -0.197296962142
id: 0
t: 216
xxx after update is x: 2.93254446983
y: -7.15800619125
theta: 1.72851359844
speed: -0.0813926011324
id: 0
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:217




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.93254446983
y: -7.15800619125
theta: 1.72851359844
speed: -0.0813926011324
id: 0
t: 217
xxx after update is x: 3.38581752777
y: -7.42713928223
theta: 1.69914734364
speed: -0.0892699211836
id: 0
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:218


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.68888888889






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.38581752777
y: -7.42713928223
theta: 1.69914734364
speed: -0.0892699211836
id: 0
t: 218
xxx after update is x: 3.10479283333
y: -8.14619827271
theta: 1.60577261448
speed: -0.0803606808186
id: 0
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:219




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.10479283333
y: -8.14619827271
theta: 1.60577261448
speed: -0.0803606808186
id: 0
t: 219
xxx after update is x: 2.81206560135
y: -7.1197013855
theta: 1.63354635239
speed: 0.0377610661089
id: 0
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:220




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.81206560135
y: -7.1197013855
theta: 1.63354635239
speed: 0.0377610661089
id: 0
t: 220
xxx after update is x: 3.01383566856
y: -7.75188589096
theta: 1.83848059177
speed: 0.29405400157
id: 0
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:221




going to the update function
sim.py in the sim.py ud:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.3114733696
y: -46.3195075989
theta: 4.64812517166
speed: 0.306341379881
id: 1
t: 202
xxx after update is x: -2.9996073246
y: -46.1322631836
theta: 4.83040761948
speed: 0.214986667037
id: 1
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:203


222 self.state_dicts[msg.id][msg.t] is (2.812065601348877, -7.119701385498047, 1.6335463523864746, 0.03776106610894203)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.9996073246
y: -46.1322631836
theta: 4.83040761948
speed: 0.214986667037
id: 1
t: 203
xxx after update is x: -2.76027965546
y: -45.8731155396
theta: 4.56816911697
speed: 0.234335824847
id: 1
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:204


222 self.state_dicts[msg.id][msg.t] is (3.0138356685638428, -7.751885890960693, 1.8384805917739868, 0.2940540015697479)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.76027965546
y: -45.8731155396
theta: 4.56816911697
speed: 0.234335824847
id: 1
t: 204
xxx after update is x: -3.11816191673
y: -45.9603652954
theta: 4.53956222534
speed: 0.031949531287
id: 1
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:205


222 self.state_dicts[msg.id][msg.t] is (3.086749792098999, -7.3019022941589355, 1.4973180294036865, 0.010998561047017574)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.11816191673
y: -45.9603652954
theta: 4.53956222534
speed: 0.031949531287
id: 1
t: 205
xxx after update is x: -3.30365991592
y: -46.2293739319
theta: 4.78701686859
speed: -0.0478087812662
id: 1
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:206


222 self.state_dicts[msg.id][msg.t] is (3.0297958850860596, -7.350101470947266, 1.4827121496200562, 0.0907987654209137)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.30365991592
y: -46.2293739319
theta: 4.78701686859
speed: -0.0478087812662
id: 1
t: 206
xxx after update is x: -3.12959623337
y: -45.696018219
theta: 4.80098247528
speed: 0.138333529234
id: 1
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:207


222 self.state_dicts[msg.id][msg.t] is (3.4329915046691895, -7.4917802810668945, 1.4434565305709839, 0.013257752172648907)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.12959623337
y: -45.696018219
theta: 4.80098247528
speed: 0.138333529234
id: 1
t: 207
xxx after update is x: -3.4221971035
y: -46.3738746643
theta: 4.59509706497
speed: 0.276204109192
id: 1
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:208


222 self.state_dicts[msg.id][msg.t] is (3.7097866535186768, -7.533113956451416, 1.6145083904266357, 0.10414250940084457)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.24444444444






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.4221971035
y: -46.3738746643
theta: 4.59509706497
speed: 0.276204109192
id: 1
t: 208
xxx after update is x: -3.55539321899
y: -45.7819252014
theta: 4.70326948166
speed: pdate function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.01383566856
y: -7.75188589096
theta: 1.83848059177
speed: 0.29405400157
id: 0
t: 221
xxx after update is x: 3.0867497921
y: -7.30190229416
theta: 1.4973180294
speed: 0.010998561047
id: 0
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:222




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.0867497921
y: -7.30190229416
theta: 1.4973180294
speed: 0.010998561047
id: 0
t: 222
xxx after update is x: 3.02979588509
y: -7.35010147095
theta: 1.48271214962
speed: 0.0907987654209
id: 0
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:223




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.02979588509
y: -7.35010147095
theta: 1.48271214962
speed: 0.0907987654209
id: 0
t: 223
xxx after update is x: 3.43299150467
y: -7.49178028107
theta: 1.44345653057
speed: 0.0132577521726
id: 0
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:224




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.43299150467
y: -7.49178028107
theta: 1.44345653057
speed: 0.0132577521726
id: 0
t: 224
xxx after update is x: 3.70978665352
y: -7.53311395645
theta: 1.61450839043
speed: 0.104142509401
id: 0
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:225


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.0






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.70978665352
y: -7.53311395645
theta: 1.61450839043
speed: 0.104142509401
id: 0
t: 225
xxx after update is x: 2.96508932114
y: -7.66023111343
theta: 1.58902740479
speed: 0.0167690292001
id: 0
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:226


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.96508932114
y: -7.66023111343
theta: 1.58902740479
speed: 0.0167690292001
id: 0
t: 226
xxx after update is x: 2.83325171471
y: -7.54844665527
theta: 1.65026628971
speed: -0.162572324276
id: 0
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:227




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.83325171471
y: -7.54844665527
theta: 1.65026628971
speed: -0.162572324276
id: 0
t: 227
xxx after update is x: 3.39424109459
y: -7.85659790039
theta: 1.49144494534
speed: -0.0316703543067
id: 0
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:228




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.39424109459
y: -7.85659790039
theta: 1.49144494534
speed: -0.0316703543067
id: 0
t: 228
xxx after update is x: 2.73793411255
y: -7.65467786789
theta: 1.53773784637
speed: 0.0798182487488
id: 0
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:229




going to the update function
sim.py in t-0.161961823702
id: 1
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (2.9650893211364746, -7.660231113433838, 1.5890274047851562, 0.016769029200077057)
leave the update function 
in spin function, finish the n times spin:209




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.55539321899
y: -45.7819252014
theta: 4.70326948166
speed: -0.161961823702
id: 1
t: 209
xxx after update is x: -2.84613037109
y: -45.9566001892
theta: 4.7100982666
speed: 0.190149143338
id: 1
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:210


222 self.state_dicts[msg.id][msg.t] is (2.833251714706421, -7.5484466552734375, 1.6502662897109985, -0.16257232427597046)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.84613037109
y: -45.9566001892
theta: 4.7100982666
speed: 0.190149143338
id: 1
t: 210
xxx after update is x: -3.2379758358
y: -46.3326873779
theta: 4.68926095963
speed: -0.0557627826929
id: 1
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:211


222 self.state_dicts[msg.id][msg.t] is (3.3942410945892334, -7.856597900390625, 1.4914449453353882, -0.031670354306697845)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.2379758358
y: -46.3326873779
theta: 4.68926095963
speed: -0.0557627826929
id: 1
t: 211
xxx after update is x: -2.94748449326
y: -45.7895126343
theta: 4.75404119492
speed: 0.0227033756673
id: 1
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:212


222 self.state_dicts[msg.id][msg.t] is (2.737934112548828, -7.654677867889404, 1.5377378463745117, 0.0798182487487793)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.94748449326
y: -45.7895126343
theta: 4.75404119492
speed: 0.0227033756673
id: 1
t: 212
xxx after update is x: -2.84288358688
y: -46.6641120911
theta: 4.68217039108
speed: 0.153015583754
id: 1
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:213


222 self.state_dicts[msg.id][msg.t] is (2.9920918941497803, -7.103828430175781, 1.649886965751648, -0.06114543229341507)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.84288358688
y: -46.6641120911
theta: 4.68217039108
speed: 0.153015583754
id: 1
t: 213
xxx after update is x: -3.05782413483
y: -45.9434242249
theta: 4.55150175095
speed: 0.413567274809
id: 1
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:214


222 self.state_dicts[msg.id][msg.t] is (3.3144359588623047, -6.8306684494018555, 1.620509147644043, -0.0725896880030632)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.05782413483
y: -45.9434242249
theta: 4.55150175095
speed: 0.413567274809
id: 1
t: 214
xxx after update is x: -3.09882616997
y: -46.1387023926
theta: 4.69115686417
speed: -0.0872400403023
id: 1
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:215


222 self.state_dicts[msg.id][msg.t] is (3.3958559036254883, -7.590126991271973, 1.4862110614776611, -0.0596449039876461)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.55555555556






self.maneuver_requestedhe sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.73793411255
y: -7.65467786789
theta: 1.53773784637
speed: 0.0798182487488
id: 0
t: 229
xxx after update is x: 2.99209189415
y: -7.10382843018
theta: 1.64988696575
speed: -0.0611454322934
id: 0
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:230




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.99209189415
y: -7.10382843018
theta: 1.64988696575
speed: -0.0611454322934
id: 0
t: 230
xxx after update is x: 3.31443595886
y: -6.8306684494
theta: 1.62050914764
speed: -0.0725896880031
id: 0
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:231




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.31443595886
y: -6.8306684494
theta: 1.62050914764
speed: -0.0725896880031
id: 0
t: 231
xxx after update is x: 3.39585590363
y: -7.59012699127
theta: 1.48621106148
speed: -0.0596449039876
id: 0
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:232




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.39585590363
y: -7.59012699127
theta: 1.48621106148
speed: -0.0596449039876
id: 0
t: 232
xxx after update is x: 3.23921775818
y: -7.54341411591
theta: 1.44446015358
speed: -0.00429719593376
id: 0
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:233


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.3555555556






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.23921775818
y: -7.54341411591
theta: 1.44446015358
speed: -0.00429719593376
id: 0
t: 233
xxx after update is x: 3.54399800301
y: -6.92479038239
theta: 1.62439978123
speed: 0.134197607636
id: 0
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:234




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.54399800301
y: -6.92479038239
theta: 1.62439978123
speed: 0.134197607636
id: 0
t: 234
xxx after update is x: 3.43368530273
y: -7.15206193924
theta: 1.6887396574
speed: -0.116661503911
id: 0
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:235




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.43368530273
y: -7.15206193924
theta: 1.6887396574
speed: -0.116661503911
id: 0
t: 235
xxx after update is x: 3.01044821739
y: -7.27802467346
theta: 1.45679545403
speed: -0.0690324008465
id: 0
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:236




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.01044821739
y: -7.27802467346
theta: 1.45679545403
speed: -0.0690324008465
id: 0
t: 236
xxx after update is x: 3.34241700172
y: -7.89286756516
theta: 1.54710149765
speed: 0.140067517757
id: 0
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:237




going t straight


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.09882616997
y: -46.1387023926
theta: 4.69115686417
speed: -0.0872400403023
id: 1
t: 215
xxx after update is x: -2.88954234123
y: -46.3700904846
theta: 4.6226849556
speed: 0.111254177988
id: 1
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:216


222 self.state_dicts[msg.id][msg.t] is (3.239217758178711, -7.543414115905762, 1.444460153579712, -0.0042971959337592125)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.88954234123
y: -46.3700904846
theta: 4.6226849556
speed: 0.111254177988
id: 1
t: 216
xxx after update is x: -3.11878967285
y: -45.9914207458
theta: 4.61774301529
speed: -0.0304325763136
id: 1
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:217


222 self.state_dicts[msg.id][msg.t] is (3.5439980030059814, -6.924790382385254, 1.6243997812271118, 0.13419760763645172)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.11878967285
y: -45.9914207458
theta: 4.61774301529
speed: -0.0304325763136
id: 1
t: 217
xxx after update is x: -3.20449137688
y: -46.1929206848
theta: 4.71647024155
speed: 0.00393473124132
id: 1
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:218


222 self.state_dicts[msg.id][msg.t] is (3.433685302734375, -7.152061939239502, 1.6887396574020386, -0.11666150391101837)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.20449137688
y: -46.1929206848
theta: 4.71647024155
speed: 0.00393473124132
id: 1
t: 218
xxx after update is x: -2.9718606472
y: -46.4223632812
theta: 4.65757513046
speed: -0.220289513469
id: 1
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:219


222 self.state_dicts[msg.id][msg.t] is (3.0104482173919678, -7.278024673461914, 1.4567954540252686, -0.06903240084648132)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.9718606472
y: -46.4223632812
theta: 4.65757513046
speed: -0.220289513469
id: 1
t: 219
xxx after update is x: -3.46819019318
y: -46.0381622314
theta: 4.63266324997
speed: 0.13498878479
id: 1
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:220


222 self.state_dicts[msg.id][msg.t] is (3.342417001724243, -7.892867565155029, 1.5471014976501465, 0.14006751775741577)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.46819019318
y: -46.0381622314
theta: 4.63266324997
speed: 0.13498878479
id: 1
t: 220
xxx after update is x: -2.98472690582
y: -46.0568618774
theta: 4.68052768707
speed: 0.139145240188
id: 1
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:221


222 self.state_dicts[msg.id][msg.t] is (2.8477275371551514, -8.052665710449219, 1.526790738105774, 0.2828998565673828)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.98472690582
y: -46.0568618774
theta: 4.68052768707
speed: 0.139145240188
id: 1
t: 221
xxx after update is x: -2.98937606812
y: -45.8898658752
theta: 4.68007659912
speed: -0.0418228395283
id: 1
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:222


222 self.state_dicts[msg.id][msg.t] is (3.2966055870056152, -7.71970796585083, 1.684728980064392, 0.05932553857564926)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.98937606812
y: -45.8898658752
theta: 4.68007659912
speed: -0.0418228395283
id: 1
t: 222
xxx after update is x: -3.1456694603
y: -46.1765708923
theta: 4.68116855621
speed: -0.00893035065383
id: 1
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:223


222 self.state_dicts[msg.id][msg.t] is (3.4460701942443848, -7.519894599914551, 1.4229302406311035, 0.1505395472049713)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.91111111111






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.1456694603
y: -46.1765708923
theta: 4.68116855621
speed: -0.00893035065383
id: 1
t: 223
xxx after update is x: -3.23257756233
y: -46.0450553894
theta: 4.79343605042
speed: 0.159481778741
id: 1
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:224


222 self.state_dicts[msg.id][msg.t] is (2.972090482711792, -7.083154678344727, 1.6743788719177246, -0.37462013959884644)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.23257756233
y: -46.0450553894
theta: 4.79343605042
speed: 0.159481778741
id: 1
t: 224
xxx after update is x: -2.76141405106
y: -45.855922699
theta: 4.62037658691
speed: 0.0747040361166
id: 1
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:225


222 self.state_dicts[msg.id][msg.t] is (3.317373275756836, -7.440921783447266, 1.5197850465774536, 0.10374794900417328)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.76141405106
y: -45.855922699
theta: 4.62037658691
speed: 0.0747040361166
id: 1
t: 225
xxx after update is x: -2.90384340286
y: -45.7254257202
theta: 4.84187507629
speed: -0.0549045950174
id: 1
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:226


222 self.state_dicts[msg.id][msg.t] is (2.878575563430786, -6.71186637878418, 1.7344528436660767, 0.24935279786586761)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.90384340286
y: -45.7254257202
theta: 4.84187507629
speed: -0.0549045950174
id: 1
t: 226
xxx after update is x: -3.36677694321
y: -45.7807235718
theta: 4.70551729202
speed: -0.171304658055
id: 1
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:227


222 self.state_dicts[msg.id][msg.t] is (3.1128990650177, -7.293279647827148, 1.6435019969940186, -0.34138578176498413)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.36677694321
y: -45.7807235718
theta: 4.70551729202
speed: -0.171304658055
id: 1
t: 227
xxx after update is x: -3.65147471428
y: -46.5019302368
theta: 4.62312555313
speed: 0.0910631418228
id: 1
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:228


222 self.state_dicts[msg.id][msg.t] is (3.4358022212982178, -7.1824722o the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.34241700172
y: -7.89286756516
theta: 1.54710149765
speed: 0.140067517757
id: 0
t: 237
xxx after update is x: 2.84772753716
y: -8.05266571045
theta: 1.52679073811
speed: 0.282899856567
id: 0
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:238




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.84772753716
y: -8.05266571045
theta: 1.52679073811
speed: 0.282899856567
id: 0
t: 238
xxx after update is x: 3.29660558701
y: -7.71970796585
theta: 1.68472898006
speed: 0.0593255385756
id: 0
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:239




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.29660558701
y: -7.71970796585
theta: 1.68472898006
speed: 0.0593255385756
id: 0
t: 239
xxx after update is x: 3.44607019424
y: -7.51989459991
theta: 1.42293024063
speed: 0.150539547205
id: 0
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:240




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.44607019424
y: -7.51989459991
theta: 1.42293024063
speed: 0.150539547205
id: 0
t: 240
xxx after update is x: 2.97209048271
y: -7.08315467834
theta: 1.67437887192
speed: -0.374620139599
id: 0
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:241


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.7111111111






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.97209048271
y: -7.08315467834
theta: 1.67437887192
speed: -0.374620139599
id: 0
t: 241
xxx after update is x: 3.31737327576
y: -7.44092178345
theta: 1.51978504658
speed: 0.103747949004
id: 0
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:242




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.31737327576
y: -7.44092178345
theta: 1.51978504658
speed: 0.103747949004
id: 0
t: 242
xxx after update is x: 2.87857556343
y: -6.71186637878
theta: 1.73445284367
speed: 0.249352797866
id: 0
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:243




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.87857556343
y: -6.71186637878
theta: 1.73445284367
speed: 0.249352797866
id: 0
t: 243
xxx after update is x: 3.11289906502
y: -7.29327964783
theta: 1.64350199699
speed: -0.341385781765
id: 0
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:244




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.11289906502
y: -7.29327964783
theta: 1.64350199699
speed: -0.341385781765
id: 0
t: 244
xxx after update is x: 3.4358022213
y: -7.182472229
theta: 1.65980470181
speed: 0.365058809519
id: 0
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:29003906, 1.6598047018051147, 0.3650588095188141)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.65147471428
y: -46.5019302368
theta: 4.62312555313
speed: 0.0910631418228
id: 1
t: 228
xxx after update is x: -3.22429847717
y: -46.7325592041
theta: 4.75279855728
speed: 0.0161111988127
id: 1
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:229


222 self.state_dicts[msg.id][msg.t] is (3.509962320327759, -7.160241603851318, 1.460415005683899, -0.14801615476608276)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.22429847717
y: -46.7325592041
theta: 4.75279855728
speed: 0.0161111988127
id: 1
t: 229
xxx after update is x: -3.74106407166
y: -46.4995231628
theta: 4.61027193069
speed: -0.0453599914908
id: 1
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:230


222 self.state_dicts[msg.id][msg.t] is (3.3190410137176514, -7.2425079345703125, 1.7004002332687378, 0.2586701512336731)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.74106407166
y: -46.4995231628
theta: 4.61027193069
speed: -0.0453599914908
id: 1
t: 230
xxx after update is x: -3.73785853386
y: -46.1672210693
theta: 4.59024381638
speed: -0.0769013091922
id: 1
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:231


222 self.state_dicts[msg.id][msg.t] is (3.2465169429779053, -7.179074287414551, 1.7191232442855835, -0.05398814380168915)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.2666666667






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:232


xxx before update is x: -3.73785853386
y: -46.1672210693
theta: 4.59024381638
speed: -0.0769013091922
id: 1
t: 231
xxx after update is x: -3.09709024429
y: -45.5637893677
theta: 4.93514347076
speed: -0.0389037244022
id: 1
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.4432053565979004, -7.930107593536377, 1.7267701625823975, -0.2862618565559387)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.09709024429
y: -45.5637893677
theta: 4.93514347076
speed: -0.0389037244022
id: 1
t: 232
xxx after update is x: -3.20314621925
y: -45.9020347595
theta: 4.66951227188
speed: 0.0666229426861
id: 1
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:233


222 self.state_dicts[msg.id][msg.t] is (3.299403429031372, -7.074524402618408, 1.4096778631210327, 0.2405812293291092)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.20314621925
y: -45.9020347595
theta: 4.66951227188
speed: 0.0666229426861
id: 1
t: 233
xxx after update is x: -3.35324454308
y: -46.4358596802
theta: 4.70321369171
speed: -0.00839268695563
id: 1
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:234


222 self.state_dicts[msg.id][msg.t] is (3.6044819355010986, -7.343780517578125, 1.4016673564910889, -0.2697286307811737)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.3532445245




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.4358022213
y: -7.182472229
theta: 1.65980470181
speed: 0.365058809519
id: 0
t: 245
xxx after update is x: 3.50996232033
y: -7.16024160385
theta: 1.46041500568
speed: -0.148016154766
id: 0
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:246




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.50996232033
y: -7.16024160385
theta: 1.46041500568
speed: -0.148016154766
id: 0
t: 246
xxx after update is x: 3.31904101372
y: -7.24250793457
theta: 1.70040023327
speed: 0.258670151234
id: 0
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:247




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.31904101372
y: -7.24250793457
theta: 1.70040023327
speed: 0.258670151234
id: 0
t: 247
xxx after update is x: 3.24651694298
y: -7.17907428741
theta: 1.71912324429
speed: -0.0539881438017
id: 0
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:248


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.0222222222






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.24651694298
y: -7.17907428741
theta: 1.71912324429
speed: -0.0539881438017
id: 0
t: 248
xxx after update is x: 3.4432053566
y: -7.93010759354
theta: 1.72677016258
speed: -0.286261856556
id: 0
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:249




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.4432053566
y: -7.93010759354
theta: 1.72677016258
speed: -0.286261856556
id: 0
t: 249
xxx after update is x: 3.29940342903
y: -7.07452440262
theta: 1.40967786312
speed: 0.240581229329
id: 0
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:250




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.29940342903
y: -7.07452440262
theta: 1.40967786312
speed: 0.240581229329
id: 0
t: 250
xxx after update is x: 3.6044819355
y: -7.34378051758
theta: 1.40166735649
speed: -0.269728630781
id: 0
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:251




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.6044819355
y: -7.34378051758
theta: 1.40166735649
speed: -0.269728630781
id: 0
t: 251
xxx after update is x: 2.92346525192
y: -7.3126115799
theta: 1.67629814148
speed: -0.352305203676
id: 0
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:252




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.92346525192
y: -7.3126115799
theta: 1.67629814148
speed: -0.352305203676
id: 0
t: 252
xxx after update is x: 3.66897416115
y: -7.41216182709
theta: 1.60701739788
speed: 0.136658236384
id: 0
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish th4308
y: -46.4358596802
theta: 4.70321369171
speed: -0.00839268695563
id: 1
t: 234
xxx after update is x: -3.6429848671
y: -45.7783966064
theta: 4.8162021637
speed: 0.052662152797
id: 1
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:235


222 self.state_dicts[msg.id][msg.t] is (2.9234652519226074, -7.3126115798950195, 1.6762981414794922, -0.35230520367622375)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.6429848671
y: -45.7783966064
theta: 4.8162021637
speed: 0.052662152797
id: 1
t: 235
xxx after update is x: -3.15987539291
y: -45.8754997253
theta: 4.6160402298
speed: -0.30457341671
id: 1
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:236


222 self.state_dicts[msg.id][msg.t] is (3.6689741611480713, -7.412161827087402, 1.6070173978805542, 0.13665823638439178)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.15987539291
y: -45.8754997253
theta: 4.6160402298
speed: -0.30457341671
id: 1
t: 236
xxx after update is x: -3.32676553726
y: -45.6954078674
theta: 4.78805351257
speed: -0.232968524098
id: 1
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:237


222 self.state_dicts[msg.id][msg.t] is (3.8685109615325928, -7.566667079925537, 1.5296754837036133, -0.12745068967342377)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.32676553726
y: -45.6954078674
theta: 4.78805351257
speed: -0.232968524098
id: 1
t: 237
xxx after update is x: -3.66728401184
y: -46.3504753113
theta: 4.7370839119
speed: -0.185908377171
id: 1
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:238


222 self.state_dicts[msg.id][msg.t] is (3.6509974002838135, -7.7755961418151855, 1.640074610710144, -0.18439731001853943)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.5777777778






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.66728401184
y: -46.3504753113
theta: 4.7370839119
speed: -0.185908377171
id: 1
t: 238
xxx after update is x: -3.29443383217
y: -45.9557151794
theta: 4.65144109726
speed: -0.201351359487
id: 1
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:239


222 self.state_dicts[msg.id][msg.t] is (3.5223491191864014, -7.58089017868042, 1.8428683280944824, 0.05399001017212868)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.29443383217
y: -45.9557151794
theta: 4.65144109726
speed: -0.201351359487
id: 1
t: 239
xxx after update is x: -3.2583129406
y: -46.3881187439
theta: 4.58366346359
speed: 0.149635106325
id: 1
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:240


222 self.state_dicts[msg.id][msg.t] is (3.177049398422241, -7.256002426147461, 1.6229627132415771, 0.46130239963531494)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.2583129406
y: -46.3881187439
theta: 4.58366346359
speed: 0.149635106325
id: 1
t: 240
xxx after update is x: -2.64736914635
y: -45.4941139221
theta: 4.62211751938
speed: -0.228968635201
id: 1
t: 241
maneuver_negotiatir.py finishe n times spin:253




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.66897416115
y: -7.41216182709
theta: 1.60701739788
speed: 0.136658236384
id: 0
t: 253
xxx after update is x: 3.86851096153
y: -7.56666707993
theta: 1.5296754837
speed: -0.127450689673
id: 0
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:254




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.86851096153
y: -7.56666707993
theta: 1.5296754837
speed: -0.127450689673
id: 0
t: 254
xxx after update is x: 3.65099740028
y: -7.77559614182
theta: 1.64007461071
speed: -0.184397310019
id: 0
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:255




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.65099740028
y: -7.77559614182
theta: 1.64007461071
speed: -0.184397310019
id: 0
t: 255
xxx after update is x: 3.52234911919
y: -7.58089017868
theta: 1.84286832809
speed: 0.0539900101721
id: 0
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:256


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.3777777778






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.52234911919
y: -7.58089017868
theta: 1.84286832809
speed: 0.0539900101721
id: 0
t: 256
xxx after update is x: 3.17704939842
y: -7.25600242615
theta: 1.62296271324
speed: 0.461302399635
id: 0
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:257




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.17704939842
y: -7.25600242615
theta: 1.62296271324
speed: 0.461302399635
id: 0
t: 257
xxx after update is x: 3.28890037537
y: -7.06802177429
theta: 1.53179991245
speed: 0.139826834202
id: 0
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:258




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.28890037537
y: -7.06802177429
theta: 1.53179991245
speed: 0.139826834202
id: 0
t: 258
xxx after update is x: 3.14609074593
y: -7.65165948868
theta: 1.49394345284
speed: 0.375071495771
id: 0
t: 259
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:259




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.14609074593
y: -7.65165948868
theta: 1.49394345284
speed: 0.375071495771
id: 0
t: 259
xxx after update is x: 3.31556153297
y: -7.25051832199
theta: 1.62009477615
speed: -0.0846144035459
id: 0
t: 260
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:260




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.31556153297
y: -7.25051832199
theta: 1.62009477615
speed: -0.0846144035459
id: 0
t: 260
xxx after update is x: 3.37930369377
y: -7.63124513626
theta: 1.56384849548
speed: -0.0875100046396
id: 0
t: 261
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in sp the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:241


222 self.state_dicts[msg.id][msg.t] is (3.288900375366211, -7.068021774291992, 1.5317999124526978, 0.13982683420181274)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.64736914635
y: -45.4941139221
theta: 4.62211751938
speed: -0.228968635201
id: 1
t: 241
xxx after update is x: -3.05120754242
y: -46.1133842468
theta: 4.93520545959
speed: 0.299649357796
id: 1
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:242


222 self.state_dicts[msg.id][msg.t] is (3.1460907459259033, -7.6516594886779785, 1.493943452835083, 0.3750714957714081)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.05120754242
y: -46.1133842468
theta: 4.93520545959
speed: 0.299649357796
id: 1
t: 242
xxx after update is x: -3.26698350906
y: -46.8155441284
theta: 4.64066505432
speed: 0.00312951859087
id: 1
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:243


222 self.state_dicts[msg.id][msg.t] is (3.315561532974243, -7.250518321990967, 1.6200947761535645, -0.08461440354585648)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.26698350906
y: -46.8155441284
theta: 4.64066505432
speed: 0.00312951859087
id: 1
t: 243
xxx after update is x: -3.40439987183
y: -46.1731567383
theta: 4.71777248383
speed: 0.150010824203
id: 1
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:244


222 self.state_dicts[msg.id][msg.t] is (3.3793036937713623, -7.631245136260986, 1.5638484954833984, -0.08751000463962555)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.40439987183
y: -46.1731567383
theta: 4.71777248383
speed: 0.150010824203
id: 1
t: 244
xxx after update is x: -2.82542681694
y: -45.9918670654
theta: 4.74859619141
speed: 0.478371530771
id: 1
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:245


222 self.state_dicts[msg.id][msg.t] is (3.0032668113708496, -8.079865455627441, 1.3870476484298706, 0.17730717360973358)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.82542681694
y: -45.9918670654
theta: 4.74859619141
speed: 0.478371530771
id: 1
t: 245
xxx after update is x: -3.06012415886
y: -46.2347068787
theta: 4.61667251587
speed: -0.479252874851
id: 1
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:246


222 self.state_dicts[msg.id][msg.t] is (3.107069969177246, -6.894511699676514, 1.6241989135742188, -0.060826756060123444)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.9333333333






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.06012415886
y: -46.2347068787
theta: 4.61667251587
speed: -0.479252874851
id: 1
t: 246
xxx after update is x: -3.4459900856
y: -45.8478240967
theta: 4.68214941025
speed: -0.112478002906
id: 1
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:247


222 self.state_dicts[msg.id][msg.t] is (3.1075944900512695, -7.439940929412842, 1.521700382232666, in function, finish the n times spin:261




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.37930369377
y: -7.63124513626
theta: 1.56384849548
speed: -0.0875100046396
id: 0
t: 261
xxx after update is x: 3.00326681137
y: -8.07986545563
theta: 1.38704764843
speed: 0.17730717361
id: 0
t: 262
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:262




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.00326681137
y: -8.07986545563
theta: 1.38704764843
speed: 0.17730717361
id: 0
t: 262
xxx after update is x: 3.10706996918
y: -6.89451169968
theta: 1.62419891357
speed: -0.0608267560601
id: 0
t: 263
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:263


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.6888888889






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.10706996918
y: -6.89451169968
theta: 1.62419891357
speed: -0.0608267560601
id: 0
t: 263
xxx after update is x: 3.10759449005
y: -7.43994092941
theta: 1.52170038223
speed: -0.187613248825
id: 0
t: 264
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:264




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.10759449005
y: -7.43994092941
theta: 1.52170038223
speed: -0.187613248825
id: 0
t: 264
xxx after update is x: 3.33528923988
y: -7.88268566132
theta: 1.4996753931
speed: -0.0881495028734
id: 0
t: 265
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:265




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.33528923988
y: -7.88268566132
theta: 1.4996753931
speed: -0.0881495028734
id: 0
t: 265
xxx after update is x: 3.11273097992
y: -7.63084316254
theta: 1.65881109238
speed: 0.183657377958
id: 0
t: 266
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:266




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.11273097992
y: -7.63084316254
theta: 1.65881109238
speed: 0.183657377958
id: 0
t: 266
xxx after update is x: 3.04096770287
y: -7.8434920311
theta: 1.56324851513
speed: -0.021560581401
id: 0
t: 267
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:267




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.04096770287
y: -7.8434920311
theta: 1.56324851513
speed: -0.021560581401
id: 0
t: 267
xxx after update is x: 3.46470046043
y: -7.66730070114
theta: 1.58056616783
speed: -0.168489307165
id: 0
t: 268
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:268




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.46470046043
y: -7.66730070114
theta: 1.58056616783
speed: -0.168489307165
id: 0
t: 268
xxx after update is x: 3.27272200584
y: -8.08222866058
theta: 1.54602074623
speed: 0.196615561843
id: 0
t: 269
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the -0.18761324882507324)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.4459900856
y: -45.8478240967
theta: 4.68214941025
speed: -0.112478002906
id: 1
t: 247
xxx after update is x: -3.24721217155
y: -46.3777351379
theta: 4.6106762886
speed: 0.518913865089
id: 1
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.335289239883423, -7.882685661315918, 1.4996753931045532, -0.08814950287342072)
leave the update function 
in spin function, finish the n times spin:248




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.24721217155
y: -46.3777351379
theta: 4.6106762886
speed: 0.518913865089
id: 1
t: 248
xxx after update is x: -3.55569005013
y: -45.9923820496
theta: 4.78758335114
speed: -0.477140694857
id: 1
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:249


222 self.state_dicts[msg.id][msg.t] is (3.1127309799194336, -7.630843162536621, 1.658811092376709, 0.18365737795829773)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.55569005013
y: -45.9923820496
theta: 4.78758335114
speed: -0.477140694857
id: 1
t: 249
xxx after update is x: -3.16817688942
y: -45.9080123901
theta: 4.83221483231
speed: 0.020343631506
id: 1
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.0409677028656006, -7.843492031097412, 1.5632485151290894, -0.021560581400990486)
leave the update function 
in spin function, finish the n times spin:250




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.16817688942
y: -45.9080123901
theta: 4.83221483231
speed: 0.020343631506
id: 1
t: 250
xxx after update is x: -3.26311659813
y: -46.0593299866
theta: 4.8692073822
speed: 0.170218139887
id: 1
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:251


222 self.state_dicts[msg.id][msg.t] is (3.46470046043396, -7.667300701141357, 1.580566167831421, -0.16848930716514587)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (3.272722005844116, -8.082228660583496, 1.546020746231079, 0.1966155618429184)
xxx before update is x: -3.26311659813
y: -46.0593299866
theta: 4.8692073822
speed: 0.170218139887
id: 1
t: 251
xxx after update is x: -3.47926330566
y: -46.4745101929
theta: 4.59044265747
speed: -0.046605926007
id: 1
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:252




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.47926330566
y: -46.4745101929
theta: 4.59044265747
speed: -0.046605926007
id: 1
t: 252
xxx after update is x: -3.10050535202
y: -46.2472648621
theta: 4.77504730225
speed: -0.00505399797112
id: 1
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:253


222 self.state_dicts[msg.id][msg.t] is (3.9685685634613037, -6.9603424072265625, 1.5633974075317383, -0.15753182768821716)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.2444444444






self.maneuver_requested straight


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: -3.10050535202
y: -46.2472648621
theta: 4.77504730225
supdate function 
in spin function, finish the n times spin:269




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.27272200584
y: -8.08222866058
theta: 1.54602074623
speed: 0.196615561843
id: 0
t: 269
xxx after update is x: 3.96856856346
y: -6.96034240723
theta: 1.56339740753
speed: -0.157531827688
id: 0
t: 270
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:270




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.96856856346
y: -6.96034240723
theta: 1.56339740753
speed: -0.157531827688
id: 0
t: 270
xxx after update is x: 3.13210940361
y: -7.10150432587
theta: 1.34010231495
speed: 0.0869894176722
id: 0
t: 271
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:271


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.0444444444






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:272


xxx before update is x: 3.13210940361
y: -7.10150432587
theta: 1.34010231495
speed: 0.0869894176722
id: 0
t: 271
xxx after update is x: 2.63172221184
y: -7.30094003677
theta: 1.75055003166
speed: -0.132586359978
id: 0
t: 272
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.63172221184
y: -7.30094003677
theta: 1.75055003166
speed: -0.132586359978
id: 0
t: 272
xxx after update is x: 4.05336666107
y: -7.57483959198
theta: 1.71931374073
speed: -0.263031303883
id: 0
t: 273
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:273




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 4.05336666107
y: -7.57483959198
theta: 1.71931374073
speed: -0.263031303883
id: 0
t: 273
xxx after update is x: 3.39947414398
y: -7.03243875504
theta: 1.50144588947
speed: 0.126998603344
id: 0
t: 274
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:274




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.39947414398
y: -7.03243875504
theta: 1.50144588947
speed: 0.126998603344
id: 0
t: 274
xxx after update is x: 3.4213321209
y: -7.65665245056
theta: 1.58061599731
speed: 0.0882841721177
id: 0
t: 275
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:275




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.4213321209
y: -7.65665245056
theta: 1.58061599731
speed: 0.0882841721177
id: 0
t: 275
xxx after update is x: 2.99382042885
y: -7.60505723953
theta: 1.67121207714
speed: 0.0413031987846
id: 0
t: 276
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:276




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.99382042885
y: -7.60505723953
theta: 1.67121207714
speed: 0.0413031987846
id: 0
t: 276
xxx after update is x: 3.16951084137
y: -7.36675834656
theta: 1.62228393555
speed: 0.171709209681
id: 0
t: 277
maneuver_negotiatir.py finish the update agent state from peed: -0.00505399797112
id: 1
t: 253222 self.state_dicts[msg.id][msg.t] is (3.1321094036102295, -7.101504325866699, 1.3401023149490356, 0.08698941767215729)

xxx after update is x: -3.3803768158
y: -46.240272522
theta: 4.79995012283
speed: -0.185871332884
id: 1
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:254




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.3803768158
y: -46.240272522
theta: 4.79995012283
speed: -0.185871332884
id: 1
t: 254
xxx after update is x: -3.0754635334
y: -46.3659095764
theta: 4.72400617599
speed: -0.155210420489
id: 1
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:255


222 self.state_dicts[msg.id][msg.t] is (2.6317222118377686, -7.300940036773682, 1.7505500316619873, -0.13258635997772217)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.0754635334
y: -46.3659095764
theta: 4.72400617599
speed: -0.155210420489
id: 1
t: 255
xxx after update is x: -3.75562667847
y: -46.3307228088
theta: 4.79834127426
speed: -0.454166829586
id: 1
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:256


222 self.state_dicts[msg.id][msg.t] is (4.053366661071777, -7.5748395919799805, 1.7193137407302856, -0.2630313038825989)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.75562667847
y: -46.3307228088
theta: 4.79834127426
speed: -0.454166829586
id: 1
t: 256
xxx after update is x: -3.32755756378
y: -46.0942726135
theta: 4.68161201477
speed: 0.0901866182685
id: 1
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:257


222 self.state_dicts[msg.id][msg.t] is (3.3994741439819336, -7.0324387550354, 1.5014458894729614, 0.12699860334396362)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.32755756378
y: -46.0942726135
theta: 4.68161201477
speed: 0.0901866182685
id: 1
t: 257
xxx after update is x: -3.10527896881
y: -46.2060928345
theta: 4.75640916824
speed: 0.118474014103
id: 1
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:258


222 self.state_dicts[msg.id][msg.t] is (3.4213321208953857, -7.656652450561523, 1.5806159973144531, 0.08828417211771011)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.10527896881
y: -46.2060928345
theta: 4.75640916824
speed: 0.118474014103
id: 1
t: 258
xxx after update is x: -3.22716522217
y: -46.3807258606
theta: 4.61100244522
speed: -0.0476787686348
id: 1
t: 259
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:259


222 self.state_dicts[msg.id][msg.t] is (2.9938204288482666, -7.605057239532471, 1.671212077140808, 0.04130319878458977)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.22716522217
y: -46.3807258606
theta: 4.61100244522
speed: -0.0476787686348
id: 1
t: 259
xxx after update is x: -3.29482769966
y: -46.1701393127
theta: 4.67443656921
speed: 0.304540604353
id: 1
t: 260
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:260


222 self.state_dicts[msg.id][msg.t] is (3.169510841369629, -7.366758346557617, 1.622283935546875, 0.17170920968055725)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.29482769966
y: -46.1701393127
theta: 4.67443656921
speed: 0.304540604353
id: 1
t: 260
xxx after update is x: -3.32040548325
y: -45.8953895569
theta: 4.63619375229
speed: -0.246384814382
id: 1
t: 261
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:261


222 self.state_dicts[msg.id][msg.t] is (3.524984836578369, -7.204721450805664, 1.6685528755187988, 0.23926012217998505)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.6






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.32040548325
y: -45.8953895569
theta: 4.63619375229
speed: -0.246384814382
id: 1
t: 261
xxx after update is x: -3.51298737526
y: -45.9009170532
theta: 4.61250066757
speed: 0.0447559580207
id: 1
t: 262
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:262


222 self.state_dicts[msg.id][msg.t] is (3.2710556983947754, -7.399506092071533, 1.5835309028625488, 0.1734926700592041)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.51298737526
y: -45.9009170532
theta: 4.61250066757
speed: 0.0447559580207
id: 1
t: 262
xxx after update is x: -3.09078502655
y: -45.8683891296
theta: 4.75227355957
speed: -0.0511759333313
id: 1
t: 263
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:263


222 self.state_dicts[msg.id][msg.t] is (3.07973313331604, -7.635383605957031, 1.5897424221038818, 0.1390412449836731)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.09078502655
y: -45.8683891296
theta: 4.75227355957
speed: -0.0511759333313
id: 1
t: 263
xxx after update is x: -3.02354812622
y: -46.0430984497
theta: 4.73548412323
speed: 0.0883861631155
id: 1
t: 264
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:264


222 self.state_dicts[msg.id][msg.t] is (3.2034478187561035, -7.647234916687012, 1.6014381647109985, 0.09912057965993881)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.02354812622
y: -46.0430984497
theta: 4.73548412323
speed: 0.0883861631155
id: 1
t: 264
xxx after update is x: -2.95488405228
y: -46.2596549988
theta: 4.91965484619
speed: -0.276378154755
id: 1
t: 265
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:265


222 self.state_dicts[msg.id][msg.t] is (3.3649044036865234, -7.540985107421875, 1.6168516874313354, -0.06073230132460594)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.95488405228
y: -46.2596549988
theta: 4.91965484619
speed: -0.276378154755
id: 1
t: 265
xxx after update is x: -3.23721408844
y: -46.1119003296
theta: 4.7285118103
speed: 0.471837371588
id: 1
t: 266
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:266


222 self.state_dicts[msg.id][msg.t] is (3.197479486465454, -7.5067949295043945, 1.6460936069488525, 0.08932863175868988)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.23721408844
y: -46.1119003296
theta: 4.7285118103
speed: 0.471837371588
id: 1
t: 266
xxx aros funtion
leave the update function 
in spin function, finish the n times spin:277




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.16951084137
y: -7.36675834656
theta: 1.62228393555
speed: 0.171709209681
id: 0
t: 277
xxx after update is x: 3.52498483658
y: -7.20472145081
theta: 1.66855287552
speed: 0.23926012218
id: 0
t: 278
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:278


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.3555555556






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.52498483658
y: -7.20472145081
theta: 1.66855287552
speed: 0.23926012218
id: 0
t: 278
xxx after update is x: 3.27105569839
y: -7.39950609207
theta: 1.58353090286
speed: 0.173492670059
id: 0
t: 279
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:279


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.27105569839
y: -7.39950609207
theta: 1.58353090286
speed: 0.173492670059
id: 0
t: 279
xxx after update is x: 3.07973313332
y: -7.63538360596
theta: 1.5897424221
speed: 0.139041244984
id: 0
t: 280
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:280




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.07973313332
y: -7.63538360596
theta: 1.5897424221
speed: 0.139041244984
id: 0
t: 280
xxx after update is x: 3.20344781876
y: -7.64723491669
theta: 1.60143816471
speed: 0.0991205796599
id: 0
t: 281
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:281




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.20344781876
y: -7.64723491669
theta: 1.60143816471
speed: 0.0991205796599
id: 0
t: 281
xxx after update is x: 3.36490440369
y: -7.54098510742
theta: 1.61685168743
speed: -0.0607323013246
id: 0
t: 282
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:282




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.36490440369
y: -7.54098510742
theta: 1.61685168743
speed: -0.0607323013246
id: 0
t: 282
xxx after update is x: 3.19747948647
y: -7.5067949295
theta: 1.64609360695
speed: 0.0893286317587
id: 0
t: 283
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:283




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.19747948647
y: -7.5067949295
theta: 1.64609360695
speed: 0.0893286317587
id: 0
t: 283
xxx after update is x: 3.12040281296
y: -7.08996582031
theta: 1.70836639404
speed: 0.009766086936
id: 0
t: 284
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:284




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.12040281296
y: -7.08996582031
theta: 1.70836639404
speed: 0.009766086936
id: 0
t: 284
xxx after update is x: 3.37772345543
y: -7.49791240692
theta: 1.56254267693
speed: -0.207387328148
id: 0
t: 285
maneuver_negotiatir.py finish the update agfter update is x: -3.44335722923
y: -46.3146476746
theta: 4.87676000595
speed: 0.239163339138
id: 1
t: 267
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:267


222 self.state_dicts[msg.id][msg.t] is (3.1204028129577637, -7.0899658203125, 1.7083663940429688, 0.00976608693599701)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.44335722923
y: -46.3146476746
theta: 4.87676000595
speed: 0.239163339138
id: 1
t: 267
xxx after update is x: -3.5818874836
y: -46.4188156128
theta: 4.70549058914
speed: -0.0289365276694
id: 1
t: 268
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:268


222 self.state_dicts[msg.id][msg.t] is (3.377723455429077, -7.497912406921387, 1.5625426769256592, -0.20738732814788818)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.5818874836
y: -46.4188156128
theta: 4.70549058914
speed: -0.0289365276694
id: 1
t: 268
xxx after update is x: -3.74156355858
y: -46.5843162537
theta: 4.70716285706
speed: -0.0407017357647
id: 1
t: 269
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:269


222 self.state_dicts[msg.id][msg.t] is (3.6411170959472656, -7.148326873779297, 1.432538628578186, -0.1008710265159607)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.9555555556






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.74156355858
y: -46.5843162537
theta: 4.70716285706
speed: -0.0407017357647
id: 1
t: 269
xxx after update is x: -3.43075418472
y: -46.3558006287
theta: 4.70353889465
speed: 0.237640917301
id: 1
t: 270
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:270


222 self.state_dicts[msg.id][msg.t] is (2.9409875869750977, -7.668808460235596, 1.5787627696990967, 0.36601829528808594)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
222 self.state_dicts[msg.id][msg.t] is (3.2965753078460693, -8.003460884094238, 1.394206166267395, -0.05630426108837128)
xxx before update is x: -3.43075418472
y: -46.3558006287
theta: 4.70353889465
speed: 0.237640917301
id: 1
t: 270
xxx after update is x: -3.56881546974
y: -46.0067367554
theta: 4.74151754379
speed: -0.360066473484
id: 1
t: 271
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:271




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.56881546974
y: -46.0067367554
theta: 4.74151754379
speed: -0.360066473484
id: 1
t: 271
xxx after update is x: -3.76465916634
y: -46.4238433838
theta: 4.77981519699
speed: 0.0379766412079
id: 1
t: 272
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:272


222 self.state_dicts[msg.id][msg.t] is (3.0904455184936523, -7.892402648925781, 1.6014580726623535, -0.07662583887577057)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.76465916634
y: -46.4238433838
theta: 4.77981519699
speed: 0.0379766412079
id: 1
t: 272
xxx after update is x: -2.72605657578
y: -45.9287872314
theta: 4.79839468002
speed: 0.589669167995
id: 1
t: 273
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin fuent state from ros funtion
leave the update function 
in spin function, finish the n times spin:285




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.37772345543
y: -7.49791240692
theta: 1.56254267693
speed: -0.207387328148
id: 0
t: 285
xxx after update is x: 3.64111709595
y: -7.14832687378
theta: 1.43253862858
speed: -0.100871026516
id: 0
t: 286
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:286


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.7111111111






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.64111709595
y: -7.14832687378
theta: 1.43253862858
speed: -0.100871026516
id: 0
t: 286
xxx after update is x: 2.94098758698
y: -7.66880846024
theta: 1.5787627697
speed: 0.366018295288
id: 0
t: 287
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:287




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.94098758698
y: -7.66880846024
theta: 1.5787627697
speed: 0.366018295288
id: 0
t: 287
xxx after update is x: 3.29657530785
y: -8.00346088409
theta: 1.39420616627
speed: -0.0563042610884
id: 0
t: 288
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:288




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.29657530785
y: -8.00346088409
theta: 1.39420616627
speed: -0.0563042610884
id: 0
t: 288
xxx after update is x: 3.09044551849
y: -7.89240264893
theta: 1.60145807266
speed: -0.0766258388758
id: 0
t: 289
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:289




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.09044551849
y: -7.89240264893
theta: 1.60145807266
speed: -0.0766258388758
id: 0
t: 289
xxx after update is x: 3.19544696808
y: -6.91747617722
theta: 1.36911153793
speed: -0.266339808702
id: 0
t: 290
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:290




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.19544696808
y: -6.91747617722
theta: 1.36911153793
speed: -0.266339808702
id: 0
t: 290
xxx after update is x: 3.53791284561
y: -7.2369260788
theta: 1.67889845371
speed: -0.327386885881
id: 0
t: 291
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:291




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.53791284561
y: -7.2369260788
theta: 1.67889845371
speed: -0.327386885881
id: 0
t: 291
xxx after update is x: 3.06889915466
y: -7.45631885529
theta: 1.55051088333
speed: 0.0776024982333
id: 0
t: 292
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:292




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.06889915466
y: -7.45631885529
theta: 1.55051088333
speed: 0.0776024982333
id: 0
t: 292
xxx after update is x: 3.20422005653
y: -7.79788637161
theta: 1.6124932766
speed: 0.208809286356
id: 0
t: 293
maneuver_negotiatirnction, finish the n times spin:273


222 self.state_dicts[msg.id][msg.t] is (3.1954469680786133, -6.917476177215576, 1.3691115379333496, -0.26633980870246887)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.72605657578
y: -45.9287872314
theta: 4.79839468002
speed: 0.589669167995
id: 1
t: 273
xxx after update is x: -3.68035125732
y: -46.0681037903
theta: 4.78835248947
speed: 0.275748580694
id: 1
t: 274
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:274


222 self.state_dicts[msg.id][msg.t] is (3.5379128456115723, -7.236926078796387, 1.6788984537124634, -0.32738688588142395)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.68035125732
y: -46.0681037903
theta: 4.78835248947
speed: 0.275748580694
id: 1
t: 274
xxx after update is x: -3.12433433533
y: -45.9515838623
theta: 4.67114639282
speed: 0.13869060576
id: 1
t: 275
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.068899154663086, -7.4563188552856445, 1.5505108833312988, 0.07760249823331833)
leave the update function 
in spin function, finish the n times spin:275




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.12433433533
y: -45.9515838623
theta: 4.67114639282
speed: 0.13869060576
id: 1
t: 275
xxx after update is x: -3.12000465393
y: -45.3077278137
theta: 4.68219280243
speed: 0.178784310818
id: 1
t: 276
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.2042200565338135, -7.797886371612549, 1.6124932765960693, 0.2088092863559723)
leave the update function 
in spin function, finish the n times spin:276


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.2666666667






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.12000465393
y: -45.3077278137
theta: 4.68219280243
speed: 0.178784310818
id: 1
t: 276
xxx after update is x: -3.22148323059
y: -46.4382209778
theta: 4.76192522049
speed: 0.108603812754
id: 1
t: 277
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.4351913928985596, -7.801874160766602, 1.4948692321777344, -0.21307958662509918)
leave the update function 
in spin function, finish the n times spin:277




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.22148323059
y: -46.4382209778
theta: 4.76192522049
speed: 0.108603812754
id: 1
t: 277
xxx after update is x: -3.38142108917
y: -46.1167221069
theta: 4.63343763351
speed: 0.399180710316
id: 1
t: 278
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.695418119430542, -7.232985496520996, 1.4912556409835815, 0.20546050369739532)
leave the update function 
in spin function, finish the n times spin:278




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.38142108917
y: -46.1167221069
theta: 4.63343763351
speed: 0.399180710316
id: 1
t: 278
xxx after update is x: -3.26938009262
y: -46.2721672058
theta: 4.92721509933
speed: -0.00223103747703
id: 1
t: 279
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:279


222 self.state_dicts[msg.id][msg.t] is (2.8588831424713135, -7.33025598526001, 1.6135003566741943, 0.14039377868175507)


going to the update function
sim.py in the sim.py update fun.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:293




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.20422005653
y: -7.79788637161
theta: 1.6124932766
speed: 0.208809286356
id: 0
t: 293
xxx after update is x: 3.4351913929
y: -7.80187416077
theta: 1.49486923218
speed: -0.213079586625
id: 0
t: 294
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:294


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.0666666667






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.4351913929
y: -7.80187416077
theta: 1.49486923218
speed: -0.213079586625
id: 0
t: 294
xxx after update is x: 3.69541811943
y: -7.23298549652
theta: 1.49125564098
speed: 0.205460503697
id: 0
t: 295
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:295




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.69541811943
y: -7.23298549652
theta: 1.49125564098
speed: 0.205460503697
id: 0
t: 295
xxx after update is x: 2.85888314247
y: -7.33025598526
theta: 1.61350035667
speed: 0.140393778682
id: 0
t: 296
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:296




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.85888314247
y: -7.33025598526
theta: 1.61350035667
speed: 0.140393778682
id: 0
t: 296
xxx after update is x: 3.5612745285
y: -7.48464298248
theta: 1.50749897957
speed: 0.0226420778781
id: 0
t: 297
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:297




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.5612745285
y: -7.48464298248
theta: 1.50749897957
speed: 0.0226420778781
id: 0
t: 297
xxx after update is x: 3.47023177147
y: -7.71004962921
theta: 1.41997647285
speed: 0.186751022935
id: 0
t: 298
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:298




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.47023177147
y: -7.71004962921
theta: 1.41997647285
speed: 0.186751022935
id: 0
t: 298
xxx after update is x: 2.87467741966
y: -7.56197071075
theta: 1.66797828674
speed: -0.0601884424686
id: 0
t: 299
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:299




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.87467741966
y: -7.56197071075
theta: 1.66797828674
speed: -0.0601884424686
id: 0
t: 299
xxx after update is x: 3.37255811691
y: -7.79453325272
theta: 1.43508470058
speed: 0.0987813994288
id: 0
t: 300
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:300




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.37255811691
y: -7.79453325272
theta: 1.43508470058
speed: 0.0987813994288
id: 0
t: 300
xxx after update is x: 3.48311924934
y: -7.27683210373
theta: 1.33320772648
speed: 0.192878693342
id: 0
t: 301
maction 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.26938009262
y: -46.2721672058
theta: 4.92721509933
speed: -0.00223103747703
id: 1
t: 279
xxx after update is x: -2.81543827057
y: -46.2014312744
theta: 4.80131340027
speed: 0.100784145296
id: 1
t: 280
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:280


222 self.state_dicts[msg.id][msg.t] is (3.561274528503418, -7.48464298248291, 1.5074989795684814, 0.02264207787811756)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.81543827057
y: -46.2014312744
theta: 4.80131340027
speed: 0.100784145296
id: 1
t: 280
xxx after update is x: -3.26216673851
y: -46.125617981
theta: 4.87387275696
speed: -0.117802813649
id: 1
t: 281
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:281


222 self.state_dicts[msg.id][msg.t] is (3.470231771469116, -7.710049629211426, 1.4199764728546143, 0.18675102293491364)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.26216673851
y: -46.125617981
theta: 4.87387275696
speed: -0.117802813649
id: 1
t: 281
xxx after update is x: -3.57499527931
y: -46.0334129333
theta: 4.88793849945
speed: 0.0153011446819
id: 1
t: 282
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:282


222 self.state_dicts[msg.id][msg.t] is (2.8746774196624756, -7.5619707107543945, 1.667978286743164, -0.06018844246864319)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.57499527931
y: -46.0334129333
theta: 4.88793849945
speed: 0.0153011446819
id: 1
t: 282
xxx after update is x: -3.17977166176
y: -46.2090148926
theta: 4.6030755043
speed: -0.130101919174
id: 1
t: 283
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:283


222 self.state_dicts[msg.id][msg.t] is (3.372558116912842, -7.7945332527160645, 1.4350847005844116, 0.09878139942884445)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.17977166176
y: -46.2090148926
theta: 4.6030755043
speed: -0.130101919174
id: 1
t: 283
xxx after update is x: -3.49843931198
y: -45.7470016479
theta: 4.7666220665
speed: 0.151697263122
id: 1
t: 284
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:284


222 self.state_dicts[msg.id][msg.t] is (3.483119249343872, -7.276832103729248, 1.3332077264785767, 0.19287869334220886)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.6222222222






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:285


xxx before update is x: -3.49843931198
y: -45.7470016479
theta: 4.7666220665
speed: 0.151697263122
id: 1
t: 284
xxx after update is x: -3.17697811127
y: -45.9633827209
theta: 4.82193946838
speed: 0.116674929857
id: 1
t: 285
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.0383055210113525, -7.996091365814209, 1.4739524126052856, -0.15696284174919128)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.17697811127
y: -45.9633827209
theta: 4.82193946838
speed: 0.116674929857
id: 1
t: 285
xxx after update is x: -3.10732126236
y: -46.08819neuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:301


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3777777778






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.48311924934
y: -7.27683210373
theta: 1.33320772648
speed: 0.192878693342
id: 0
t: 301
xxx after update is x: 3.03830552101
y: -7.99609136581
theta: 1.47395241261
speed: -0.156962841749
id: 0
t: 302
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:302




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.03830552101
y: -7.99609136581
theta: 1.47395241261
speed: -0.156962841749
id: 0
t: 302
xxx after update is x: 3.5604352951
y: -7.24375295639
theta: 1.65324604511
speed: -0.216231688857
id: 0
t: 303
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:303




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.5604352951
y: -7.24375295639
theta: 1.65324604511
speed: -0.216231688857
id: 0
t: 303
xxx after update is x: 3.42009902
y: -7.83397483826
theta: 1.5971930027
speed: -0.0498250126839
id: 0
t: 304
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:304




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.42009902
y: -7.83397483826
theta: 1.5971930027
speed: -0.0498250126839
id: 0
t: 304
xxx after update is x: 3.03392219543
y: -7.13118171692
theta: 1.64996170998
speed: -0.226444780827
id: 0
t: 305
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:305




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.03392219543
y: -7.13118171692
theta: 1.64996170998
speed: -0.226444780827
id: 0
t: 305
xxx after update is x: 3.03568983078
y: -7.11811828613
theta: 1.59814190865
speed: -0.279567986727
id: 0
t: 306
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:306




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.03568983078
y: -7.11811828613
theta: 1.59814190865
speed: -0.279567986727
id: 0
t: 306
xxx after update is x: 3.01812982559
y: -7.74901914597
theta: 1.62392175198
speed: -0.271039694548
id: 0
t: 307
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:307




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.01812982559
y: -7.74901914597
theta: 1.62392175198
speed: -0.271039694548
id: 0
t: 307
xxx after update is x: 3.00730752945
y: -7.60899925232
theta: 1.41324162483
speed: 0.0510309562087
id: 0
t: 308
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:308




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.00730752945
y: -7.60899925232
theta: 1.41324162483
speed: 0.0510309562087
id: 0
t: 308
xxx after update is x: 2.995002985
y: -7.21947336197
theta: 1.45436394215
speed: 0.21009910106758008
theta: 4.61520767212
speed: -0.0481874383986
id: 1
t: 286
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:286


222 self.state_dicts[msg.id][msg.t] is (3.5604352951049805, -7.243752956390381, 1.6532460451126099, -0.21623168885707855)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.10732126236
y: -46.0881958008
theta: 4.61520767212
speed: -0.0481874383986
id: 1
t: 286
xxx after update is x: -3.4835767746
y: -45.8270339966
theta: 4.81672859192
speed: -0.0854442864656
id: 1
t: 287
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:287


222 self.state_dicts[msg.id][msg.t] is (3.4200990200042725, -7.833974838256836, 1.5971930027008057, -0.04982501268386841)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.4835767746
y: -45.8270339966
theta: 4.81672859192
speed: -0.0854442864656
id: 1
t: 287
xxx after update is x: -3.49801421165
y: -46.4928207397
theta: 4.61348056793
speed: -0.112749524415
id: 1
t: 288
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:288


222 self.state_dicts[msg.id][msg.t] is (3.0339221954345703, -7.131181716918945, 1.6499617099761963, -0.2264447808265686)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.49801421165
y: -46.4928207397
theta: 4.61348056793
speed: -0.112749524415
id: 1
t: 288
xxx after update is x: -3.02591848373
y: -46.5874137878
theta: 4.80798482895
speed: 0.10628528893
id: 1
t: 289
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.0356898307800293, -7.1181182861328125, 1.5981419086456299, -0.27956798672676086)
leave the update function 
in spin function, finish the n times spin:289




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.02591848373
y: -46.5874137878
theta: 4.80798482895
speed: 0.10628528893
id: 1
t: 289
xxx after update is x: -3.2044301033
y: -46.0389251709
theta: 4.90361166
speed: -0.0157446805388
id: 1
t: 290
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:290


222 self.state_dicts[msg.id][msg.t] is (3.018129825592041, -7.749019145965576, 1.6239217519760132, -0.2710396945476532)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.2044301033
y: -46.0389251709
theta: 4.90361166
speed: -0.0157446805388
id: 1
t: 290
xxx after update is x: -2.93500351906
y: -45.9688911438
theta: 4.80331420898
speed: -0.0631228089333
id: 1
t: 291
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:291


222 self.state_dicts[msg.id][msg.t] is (3.007307529449463, -7.608999252319336, 1.4132416248321533, 0.0510309562087059)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.9333333333






self.maneuver_requested straight


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.93500351906
y: -45.9688911438
theta: 4.80331420898
speed: -0.0631228089333
id: 1
t: 291
xxx after update is x: -3.47174429893
y: -45.904548645
theta: 4.88041543961
speed: 0.0178743321449
id: 1
t: 292
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:292


222 self.state_dicts[msg.id][msg.t] is (2.9950029850006104, -7.219473361968994, 1.4543639421463013, 0.21009910106658936)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.47174429893
y: -45.904548645
theta: 4.88041543961
speed: 0.0178743321449
id: 1
t: 292
xxx after update is x: -3.68795800209
y: -46.2116584778
theta: 4.6570315361
speed: -0.125388473272
id: 1
t: 293
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:293


222 self.state_dicts[msg.id][msg.t] is (3.4629807472229004, -8.045602798461914, 1.550068974494934, 0.24154500663280487)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.68795800209
y: -46.2116584778
theta: 4.6570315361
speed: -0.125388473272
id: 1
t: 293
xxx after update is x: -2.96268939972
y: -45.6197090149
theta: 4.51565551758
speed: 0.0608108863235
id: 1
t: 294
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:294


222 self.state_dicts[msg.id][msg.t] is (3.5505287647247314, -7.114116191864014, 1.576308250427246, 0.005445914342999458)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.96268939972
y: -45.6197090149
theta: 4.51565551758
speed: 0.0608108863235
id: 1
t: 294
xxx after update is x: -3.14267206192
y: -46.340877533
theta: 4.66826486588
speed: -0.289936006069
id: 1
t: 295
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:295


222 self.state_dicts[msg.id][msg.t] is (3.30181622505188, -7.659342288970947, 1.575119972229004, 0.5750308632850647)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.14267206192
y: -46.340877533
theta: 4.66826486588
speed: -0.289936006069
id: 1
t: 295
xxx after update is x: -3.84786272049
y: -46.0770568848
theta: 4.81092405319
speed: 0.00886415876448
id: 1
t: 296
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:296


222 self.state_dicts[msg.id][msg.t] is (3.0652737617492676, -7.38312292098999, 1.5273700952529907, 0.2865363657474518)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.84786272049
y: -46.0770568848
theta: 4.81092405319
speed: 0.00886415876448
id: 1
t: 296
xxx after update is x: -3.46356749535
y: -46.4058647156
theta: 4.62117099762
speed: 0.107204794884
id: 1
t: 297
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:297


222 self.state_dicts[msg.id][msg.t] is (3.617642641067505, -7.654258728027344, 1.4761464595794678, 0.29796063899993896)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.46356749535
y: -46.4058647156
theta: 4.62117099762
speed: 0.107204794884
id: 1
t: 297
xxx after update is x: -2.93369269371
y: -45.9718055725
theta: 4.60944652557
speed: -0.0414403043687
id: 1
t: 298
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:298


222 self.state_dicts[msg.id][msg.t] is (3.1515090465545654, -7.366154670715332, 1.3431543111801147, 0.5958543419837952)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.93369269371
y: -45.9718055725
theta: 4.60944652557
speed: -0.0414403043687
id: 1
t: 298
xxx after update is x: -2.89950108528
y: -46.2496986389
theta: 4.79030704498
speed:
id: 0
t: 309
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:309


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.7333333333






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.995002985
y: -7.21947336197
theta: 1.45436394215
speed: 0.210099101067
id: 0
t: 309
xxx after update is x: 3.46298074722
y: -8.04560279846
theta: 1.55006897449
speed: 0.241545006633
id: 0
t: 310
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:310




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.46298074722
y: -8.04560279846
theta: 1.55006897449
speed: 0.241545006633
id: 0
t: 310
xxx after update is x: 3.55052876472
y: -7.11411619186
theta: 1.57630825043
speed: 0.005445914343
id: 0
t: 311
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:311




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.55052876472
y: -7.11411619186
theta: 1.57630825043
speed: 0.005445914343
id: 0
t: 311
xxx after update is x: 3.30181622505
y: -7.65934228897
theta: 1.57511997223
speed: 0.575030863285
id: 0
t: 312
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:312




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.30181622505
y: -7.65934228897
theta: 1.57511997223
speed: 0.575030863285
id: 0
t: 312
xxx after update is x: 3.06527376175
y: -7.38312292099
theta: 1.52737009525
speed: 0.286536365747
id: 0
t: 313
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:313




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.06527376175
y: -7.38312292099
theta: 1.52737009525
speed: 0.286536365747
id: 0
t: 313
xxx after update is x: 3.61764264107
y: -7.65425872803
theta: 1.47614645958
speed: 0.297960639
id: 0
t: 314
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:314




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.61764264107
y: -7.65425872803
theta: 1.47614645958
speed: 0.297960639
id: 0
t: 314
xxx after update is x: 3.15150904655
y: -7.36615467072
theta: 1.34315431118
speed: 0.595854341984
id: 0
t: 315
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:315




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.15150904655
y: -7.36615467072
theta: 1.34315431118
speed: 0.595854341984
id: 0
t: 315
xxx after update is x: 2.77788639069
y: -7.68920898438
theta: 1.49080371857
speed: 0.512209296227
id: 0
t: 316
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:316


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.0444444444






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
x -0.149107173085
id: 1
t: 299
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:299


222 self.state_dicts[msg.id][msg.t] is (2.777886390686035, -7.689208984375, 1.4908037185668945, 0.5122092962265015)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.2888888889






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.89950108528
y: -46.2496986389
theta: 4.79030704498
speed: -0.149107173085
id: 1
t: 299
xxx after update is x: -3.19539189339
y: -46.068977356
theta: 4.80757522583
speed: -0.0115664759651
id: 1
t: 300
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (2.934831380844116, -7.22520637512207, 1.7224814891815186, -0.12516553699970245)
leave the update function 
in spin function, finish the n times spin:300




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.19539189339
y: -46.068977356
theta: 4.80757522583
speed: -0.0115664759651
id: 1
t: 300
xxx after update is x: -2.98147892952
y: -45.7024383545
theta: 4.710521698
speed: 0.162121370435
id: 1
t: 301
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:301


222 self.state_dicts[msg.id][msg.t] is (3.3170201778411865, -7.896160125732422, 1.4202719926834106, -0.2900056540966034)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.98147892952
y: -45.7024383545
theta: 4.710521698
speed: 0.162121370435
id: 1
t: 301
xxx after update is x: -3.13418197632
y: -46.091796875
theta: 4.64912033081
speed: -0.430764436722
id: 1
t: 302
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:302


222 self.state_dicts[msg.id][msg.t] is (3.718806743621826, -7.644490718841553, 1.6607660055160522, -0.09005044400691986)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.13418197632
y: -46.091796875
theta: 4.64912033081
speed: -0.430764436722
id: 1
t: 302
xxx after update is x: -3.04272389412
y: -46.649394989
theta: 4.81274032593
speed: -0.073169246316
id: 1
t: 303
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:303


222 self.state_dicts[msg.id][msg.t] is (3.177077531814575, -7.766435623168945, 1.660829782485962, 0.14424318075180054)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.04272389412
y: -46.649394989
theta: 4.81274032593
speed: -0.073169246316
id: 1
t: 303
xxx after update is x: -3.34111070633
y: -46.4185943604
theta: 4.88115978241
speed: -0.0060637332499
id: 1
t: 304
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:304


222 self.state_dicts[msg.id][msg.t] is (3.7580883502960205, -7.0269999504089355, 1.5706403255462646, -0.06078469008207321)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.34111070633
y: -46.4185943604
theta: 4.88115978241
speed: -0.0060637332499
id: 1
t: 304
xxx after update is x: -2.87390470505
y: -46.1178894043
theta: 4.85260248184
speed: 0.106977842748
id: 1
t: 305
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:305


222 self.state_dicts[msg.id][msg.t] is (3.38114953xx before update is x: 2.77788639069
y: -7.68920898438
theta: 1.49080371857
speed: 0.512209296227
id: 0
t: 316
xxx after update is x: 2.93483138084
y: -7.22520637512
theta: 1.72248148918
speed: -0.125165537
id: 0
t: 317
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:317




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.93483138084
y: -7.22520637512
theta: 1.72248148918
speed: -0.125165537
id: 0
t: 317
xxx after update is x: 3.31702017784
y: -7.89616012573
theta: 1.42027199268
speed: -0.290005654097
id: 0
t: 318
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:318




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.31702017784
y: -7.89616012573
theta: 1.42027199268
speed: -0.290005654097
id: 0
t: 318
xxx after update is x: 3.71880674362
y: -7.64449071884
theta: 1.66076600552
speed: -0.0900504440069
id: 0
t: 319
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:319




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.71880674362
y: -7.64449071884
theta: 1.66076600552
speed: -0.0900504440069
id: 0
t: 319
xxx after update is x: 3.17707753181
y: -7.76643562317
theta: 1.66082978249
speed: 0.144243180752
id: 0
t: 320
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:320




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.17707753181
y: -7.76643562317
theta: 1.66082978249
speed: 0.144243180752
id: 0
t: 320
xxx after update is x: 3.7580883503
y: -7.02699995041
theta: 1.57064032555
speed: -0.0607846900821
id: 0
t: 321
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:321




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.7580883503
y: -7.02699995041
theta: 1.57064032555
speed: -0.0607846900821
id: 0
t: 321
xxx after update is x: 3.38114953041
y: -7.47666072845
theta: 1.62463092804
speed: 0.0831845998764
id: 0
t: 322
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:322




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.38114953041
y: -7.47666072845
theta: 1.62463092804
speed: 0.0831845998764
id: 0
t: 322
xxx after update is x: 3.66489577293
y: -7.78199195862
theta: 1.46529209614
speed: -0.467389583588
id: 0
t: 323
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:323




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.66489577293
y: -7.78199195862
theta: 1.46529209614
speed: -0.467389583588
id: 0
t: 323
xxx after update is x: 3.24480986595
y: -7.81861543655
theta: 1.50889647007
speed: 0.104271493852
id: 0
t: 324
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:324


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.4






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.04107666, -7.47666072845459, 1.6246309280395508, 0.08318459987640381)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.87390470505
y: -46.1178894043
theta: 4.85260248184
speed: 0.106977842748
id: 1
t: 305
xxx after update is x: -3.0520772934
y: -46.3862266541
theta: 4.56830787659
speed: 0.0155608281493
id: 1
t: 306
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:306


222 self.state_dicts[msg.id][msg.t] is (3.66489577293396, -7.781991958618164, 1.4652920961380005, -0.4673895835876465)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.0520772934
y: -46.3862266541
theta: 4.56830787659
speed: 0.0155608281493
id: 1
t: 306
xxx after update is x: -2.72379374504
y: -46.7835540771
theta: 4.91794347763
speed: -0.246118202806
id: 1
t: 307
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:307


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.6444444444






self.maneuver_requested straight
222 self.state_dicts[msg.id][msg.t] is (3.244809865951538, -7.818615436553955, 1.5088964700698853, 0.10427149385213852)
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.72379374504
y: -46.7835540771
theta: 4.91794347763
speed: -0.246118202806
id: 1
t: 307
xxx after update is x: -3.62903261185
y: -47.0050430298
theta: 4.71678733826
speed: -0.26265719533
id: 1
t: 308
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:308


222 self.state_dicts[msg.id][msg.t] is (3.698145627975464, -7.624072074890137, 1.583729863166809, 0.09870123118162155)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.62903261185
y: -47.0050430298
theta: 4.71678733826
speed: -0.26265719533
id: 1
t: 308
xxx after update is x: -3.304438591
y: -46.0543937683
theta: 4.85599088669
speed: -0.19456538558
id: 1
t: 309
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:309


222 self.state_dicts[msg.id][msg.t] is (3.0342116355895996, -7.7578325271606445, 1.5115737915039062, 0.14182613790035248)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.304438591
y: -46.0543937683
theta: 4.85599088669
speed: -0.19456538558
id: 1
t: 309
xxx after update is x: -3.43643307686
y: -46.0906028748
theta: 4.70029163361
speed: 0.197596251965
id: 1
t: 310
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:310


222 self.state_dicts[msg.id][msg.t] is (3.0363099575042725, -7.499497890472412, 1.7874677181243896, -0.24555037915706635)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.43643307686
y: -46.0906028748
theta: 4.70029163361
speed: 0.197596251965
id: 1
t: 310
xxx after update is x: -3.64752244949
y: -46.306930542
theta: 4.74937772751
speed: 0.08240763098
id: 1
t: 311
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:311


222 self.state_dicts[msg.id][msg.t] is (2.738154649734497, -7.722816467285156, 1.5203444957733154, 0.15539953112602234)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.64752244949
yman_init:
xxx before update is x: 3.24480986595
y: -7.81861543655
theta: 1.50889647007
speed: 0.104271493852
id: 0
t: 324
xxx after update is x: 3.69814562798
y: -7.62407207489
theta: 1.58372986317
speed: 0.0987012311816
id: 0
t: 325
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:325




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.69814562798
y: -7.62407207489
theta: 1.58372986317
speed: 0.0987012311816
id: 0
t: 325
xxx after update is x: 3.03421163559
y: -7.75783252716
theta: 1.5115737915
speed: 0.1418261379
id: 0
t: 326
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:326




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.03421163559
y: -7.75783252716
theta: 1.5115737915
speed: 0.1418261379
id: 0
t: 326
xxx after update is x: 3.0363099575
y: -7.49949789047
theta: 1.78746771812
speed: -0.245550379157
id: 0
t: 327
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:327




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.0363099575
y: -7.49949789047
theta: 1.78746771812
speed: -0.245550379157
id: 0
t: 327
xxx after update is x: 2.73815464973
y: -7.72281646729
theta: 1.52034449577
speed: 0.155399531126
id: 0
t: 328
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:328




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.73815464973
y: -7.72281646729
theta: 1.52034449577
speed: 0.155399531126
id: 0
t: 328
xxx after update is x: 3.16977500916
y: -7.66261577606
theta: 1.6826351881
speed: 0.118821680546
id: 0
t: 329
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:329




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.16977500916
y: -7.66261577606
theta: 1.6826351881
speed: 0.118821680546
id: 0
t: 329
xxx after update is x: 3.27249646187
y: -6.85235977173
theta: 1.4715461731
speed: 0.0541569814086
id: 0
t: 330
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:330




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.27249646187
y: -6.85235977173
theta: 1.4715461731
speed: 0.0541569814086
id: 0
t: 330
xxx after update is x: 2.79445004463
y: -7.83954715729
theta: 1.55098998547
speed: -0.0929326042533
id: 0
t: 331
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:331


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.7111111111






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.79445004463
y: -7.83954715729
theta: 1.55098998547
speed: -0.0929326042533
id: 0
t: 331
xxx after update is x: 3.19854426384
y: -8.07123565674
theta: 1.70768463612
speed: -0.0709332302213
id: 0
t: 332
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:332


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxx: -46.306930542
theta: 4.74937772751
speed: 0.08240763098
id: 1
t: 311
xxx after update is x: -3.73618149757
y: -46.4038047791
theta: 4.50212287903
speed: 0.330576956272
id: 1
t: 312
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:312


222 self.state_dicts[msg.id][msg.t] is (3.1697750091552734, -7.662615776062012, 1.6826351881027222, 0.11882168054580688)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.73618149757
y: -46.4038047791
theta: 4.50212287903
speed: 0.330576956272
id: 1
t: 312
xxx after update is x: -2.73097634315
y: -46.7599029541
theta: 4.78084468842
speed: 0.239011108875
id: 1
t: 313
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:313


222 self.state_dicts[msg.id][msg.t] is (3.272496461868286, -6.852359771728516, 1.4715461730957031, 0.05415698140859604)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.73097634315
y: -46.7599029541
theta: 4.78084468842
speed: 0.239011108875
id: 1
t: 313
xxx after update is x: -3.63834285736
y: -46.1405792236
theta: 4.72378635406
speed: 0.00520030735061
id: 1
t: 314
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:314


222 self.state_dicts[msg.id][msg.t] is (2.794450044631958, -7.839547157287598, 1.5509899854660034, -0.09293260425329208)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.9555555556






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.63834285736
y: -46.1405792236
theta: 4.72378635406
speed: 0.00520030735061
id: 1
t: 314
xxx after update is x: -3.66530656815
y: -46.412651062
theta: 4.79051685333
speed: 0.00724502140656
id: 1
t: 315
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:315


222 self.state_dicts[msg.id][msg.t] is (3.1985442638397217, -8.071235656738281, 1.7076846361160278, -0.07093323022127151)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.66530656815
y: -46.412651062
theta: 4.79051685333
speed: 0.00724502140656
id: 1
t: 315
xxx after update is x: -3.4320538044
y: -46.4058380127
theta: 4.61283016205
speed: 0.530680060387
id: 1
t: 316
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:316


222 self.state_dicts[msg.id][msg.t] is (3.1853091716766357, -7.478546142578125, 1.647510051727295, -0.021083267405629158)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.4320538044
y: -46.4058380127
theta: 4.61283016205
speed: 0.530680060387
id: 1
t: 316
xxx after update is x: -3.34114766121
y: -46.1943321228
theta: 4.9092040062
speed: -0.0622048564255
id: 1
t: 317
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:317


222 self.state_dicts[msg.id][msg.t] is (3.0219194889068604, -7.617986679077148, 1.5791935920715332, -0.2000993937253952)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.34114766121
y: -46.1943321228
theta: 4.9092040062
speed: -0.0622048564255
id: 1
t: 317
xxx after update is x: -3.4428422451
y: -46.4621543884
theta: 4.76634168625
speed: 0.319350242615
id: 1
t: 318
maneuver_negotiatir.py finish thexxxxx
 self.man_init:
xxx before update is x: 3.19854426384
y: -8.07123565674
theta: 1.70768463612
speed: -0.0709332302213
id: 0
t: 332
xxx after update is x: 3.18530917168
y: -7.47854614258
theta: 1.64751005173
speed: -0.0210832674056
id: 0
t: 333
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:333




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.18530917168
y: -7.47854614258
theta: 1.64751005173
speed: -0.0210832674056
id: 0
t: 333
xxx after update is x: 3.02191948891
y: -7.61798667908
theta: 1.57919359207
speed: -0.200099393725
id: 0
t: 334
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:334




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.02191948891
y: -7.61798667908
theta: 1.57919359207
speed: -0.200099393725
id: 0
t: 334
xxx after update is x: 3.10407686234
y: -7.69929075241
theta: 1.48025500774
speed: 0.212450668216
id: 0
t: 335
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:335




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.10407686234
y: -7.69929075241
theta: 1.48025500774
speed: 0.212450668216
id: 0
t: 335
xxx after update is x: 3.73067045212
y: -7.68183135986
theta: 1.6603628397
speed: -0.226569876075
id: 0
t: 336
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:336




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.73067045212
y: -7.68183135986
theta: 1.6603628397
speed: -0.226569876075
id: 0
t: 336
xxx after update is x: 3.16689491272
y: -6.94332265854
theta: 1.4970831871
speed: 0.0980975478888
id: 0
t: 337
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:337




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.16689491272
y: -6.94332265854
theta: 1.4970831871
speed: 0.0980975478888
id: 0
t: 337
xxx after update is x: 3.07849121094
y: -7.46257352829
theta: 1.50927054882
speed: -0.0992204546928
id: 0
t: 338
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:338




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.07849121094
y: -7.46257352829
theta: 1.50927054882
speed: -0.0992204546928
id: 0
t: 338
xxx after update is x: 3.68222975731
y: -7.62280225754
theta: 1.4122890234
speed: -0.367275625467
id: 0
t: 339
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:339


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 15.0666666667






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.68222975731
y: -7.62280225754
theta: 1.4122890234
speed: -0.367275625467
id: 0
t: 339
xxx after update is x: 3.40835118294
y: -7.03496694565
theta: 1.48780119419
speed: 0.260090112686
id: 0
t: 340
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:340




going to the update function
sim.py in the sim.py update function 
targe update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:318


222 self.state_dicts[msg.id][msg.t] is (3.104076862335205, -7.699290752410889, 1.4802550077438354, 0.21245066821575165)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.4428422451
y: -46.4621543884
theta: 4.76634168625
speed: 0.319350242615
id: 1
t: 318
xxx after update is x: -2.72506284714
y: -45.8764076233
theta: 4.73346185684
speed: -0.0414976626635
id: 1
t: 319
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:319


222 self.state_dicts[msg.id][msg.t] is (3.73067045211792, -7.681831359863281, 1.6603628396987915, -0.22656987607479095)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -2.72506284714
y: -45.8764076233
theta: 4.73346185684
speed: -0.0414976626635
id: 1
t: 319
xxx after update is x: -3.69244980812
y: -46.3112831116
theta: 4.78602790833
speed: 0.160842642188
id: 1
t: 320
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:320


222 self.state_dicts[msg.id][msg.t] is (3.1668949127197266, -6.943322658538818, 1.4970831871032715, 0.0980975478887558)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.69244980812
y: -46.3112831116
theta: 4.78602790833
speed: 0.160842642188
id: 1
t: 320
xxx after update is x: -3.49568462372
y: -46.6913108826
theta: 4.70476293564
speed: 0.286273390055
id: 1
t: 321
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:321


222 self.state_dicts[msg.id][msg.t] is (3.0784912109375, -7.462573528289795, 1.5092705488204956, -0.09922045469284058)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.49568462372
y: -46.6913108826
theta: 4.70476293564
speed: 0.286273390055
id: 1
t: 321
xxx after update is x: -3.42421650887
y: -46.1606941223
theta: 4.71342134476
speed: 0.107616916299
id: 1
t: 322
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:322


222 self.state_dicts[msg.id][msg.t] is (3.68222975730896, -7.622802257537842, 1.412289023399353, -0.3672756254673004)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.3111111111






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.42421650887
y: -46.1606941223
theta: 4.71342134476
speed: 0.107616916299
id: 1
t: 322
xxx after update is x: -3.16571426392
y: -46.3771705627
theta: 4.6554851532
speed: -0.323287069798
id: 1
t: 323
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:323


222 self.state_dicts[msg.id][msg.t] is (3.408351182937622, -7.034966945648193, 1.487801194190979, 0.2600901126861572)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.16571426392
y: -46.3771705627
theta: 4.6554851532
speed: -0.323287069798
id: 1
t: 323
xxx after update is x: -3.53645038605
y: -46.1909484863
theta: 4.67282533646
speed: -0.117493927479
id: 1
t: 324
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:324


222 self.state_dicts[msg.id][msg.t] is (2.508962392807007, -7.58859395980835, 1.5360666513442993, -0.057599522173404694)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.53645038605
y: -46.1909484863
theta: 4.67282533646
speed: -0.117493927479
id: 1
t: 324
xxx after update is x: -3.43356776237
y: -46.333026886
theta: 4.66976261139
speed: -0.268323034048
id: 1
t: 325
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:325


222 self.state_dicts[msg.id][msg.t] is (3.154423713684082, -7.625854015350342, 1.7394015789031982, 0.18174590170383453)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: -3.43356776237
y: -46.333026886
theta: 4.66976261139
speed: -0.268323034048
id: 1
t: 325
xxx after update is x: -3.38114690781
y: -46.2831535339
theta: 4.62008047104
speed: -0.139311149716
id: 1
t: 326
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (3.179077386856079, -7.230478763580322, 1.7274129390716553, 0.03594011813402176)
leave the update function 
in spin function, finish the n times spin:326


222 self.state_dicts[msg.id][msg.t] is (3.0511579513549805, -7.64106559753418, 1.6005610227584839, 0.11402222514152527)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.4888888889






self.maneuver_requested straight
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:327


tspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.40835118294
y: -7.03496694565
theta: 1.48780119419
speed: 0.260090112686
id: 0
t: 340
xxx after update is x: 2.50896239281
y: -7.58859395981
theta: 1.53606665134
speed: -0.0575995221734
id: 0
t: 341
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:341




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.50896239281
y: -7.58859395981
theta: 1.53606665134
speed: -0.0575995221734
id: 0
t: 341
xxx after update is x: 3.15442371368
y: -7.62585401535
theta: 1.7394015789
speed: 0.181745901704
id: 0
t: 342
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:342




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.15442371368
y: -7.62585401535
theta: 1.7394015789
speed: 0.181745901704
id: 0
t: 342
xxx after update is x: 3.17907738686
y: -7.23047876358
theta: 1.72741293907
speed: 0.035940118134
id: 0
t: 343
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:343




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.17907738686
y: -7.23047876358
theta: 1.72741293907
speed: 0.035940118134
id: 0
t: 343
xxx after update is x: 3.05115795135
y: -7.64106559753
theta: 1.60056102276
speed: 0.114022225142
id: 0
t: 344
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:344


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 15.2888888889






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:345


... logging to /home/lu/.ros/log/c2ed7884-ffa4-11e8-9ca8-000c291801fc/roslaunch-ubuntu-78272.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch
[1mstarted roslaunch server http://ubuntu:44083/[0m

SUMMARY
========

PARAMETERS
 * /enable_negotiator: True
 * /file_prefix: 
 * /nr_cars: 2
 * /plot: False
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /save: False

NODES
  /
    car0 (virtual_blinker/sim.py)
    car1 (virtual_blinker/sim.py)
    cloud (virtual_blinker/cloud.py)
    rviz (rviz/rviz)
    visualization (virtual_blinker/visualization.py)

auto-starting new master
[1mprocess[master]: started with pid [78285][0m
[1mROS_MASTER_URI=http://localhost:11311[0m
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch http://localhost:11311
[1msetting /run_id to c2ed7884-ffa4-11e8-9ca8-000c291801fc[0m
[1mprocess[rosout-1]: started with pid [78304][0m
started core service [/rosout]
[1mprocess[visualization-2]: started with pid [78312][0m
[1mprocess[rviz-3]: started with pid [78322][0m
[1mprocess[car0-4]: started with pid [78323][0m
[1mprocess[car1-5]: started with pid [78324][0m
[1mprocess[cloud-6]: started with pid [78325][0m
[cloud-6] killing on exit
[car1-5] killing on exit
[car0-4] killing on exit
[rviz-3] killing on exit
[visualization-2] killing on exit
[rosout-1] killing on exit
[master] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
[1mdone[0m
