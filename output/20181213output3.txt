sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 1
s is car_state0
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.765726089478
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
sim.py in the sim.py statecallback function, msg is

x: 3.54186964035
y: -34.7226982117
theta: 1.61754131317
speed: 13.852478981
id: 0
t: 1

222 self.state_dicts[msg.id][msg.t] is (3.541869640350342, -34.72269821166992, 1.6175413131713867, 13.852478981018066)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7f33b4a80b90>
leave the update function 
in spin function, finish the n times spin:1
self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f33b4aa1fc8>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
self.ros_measurements is None
self.ros_measurements is not empty
x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:2
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
sim.py in the sim.py statecallback function, msg is

x: 2.81083369255
y: -34.0128593445
theta: 1.52065074444
speed: 13.5816640854
id: 0
t: 2

222 self.state_dicts[msg.id][msg.t] is (2.810833692550659, -34.01285934448242, 1.5206507444381714, 13.581664085388184)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9001)
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:3
xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: -3.03672194481
y: 32.6328086853
theta: 4.78564500809
speed: 13.6735687256
id: 1
t: 3
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:4
xxx before update is x: -3.03672194481
y: 32.6328086853
theta: 4.78564500809
speed: 13.6735687256
id: 1
t: 3
xxx after update is x: -2.85244727135
y: 32.4019355774
theta: 4.61995315552
speed: 13.9448451996
id: 1
t: 4
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:5
xxx before update is x: -2.85244727135
y: 32.4019355774
theta: 4.61995315552
speed: 13.9448451996
id: 1
t: 4
xxx after update is x: -3.41125655174
y: 31.8360080719
theta: 4.68931865692
speed: 13.7063865662
id: 1
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion
risk issim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 0
s is car_state1
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.762062072754
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:1
sim.py in the sim.py statecallback function, msg is

x: -3.23351192474
y: 34.2903366089
theta: 4.72701740265
speed: 13.9746494293
id: 1
t: 1

222 self.state_dicts[msg.id][msg.t] is (-3.2335119247436523, 34.29033660888672, 4.727017402648926, 13.974649429321289)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7f76e94d7710>
self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f76e94f75f0>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
self.ros_measurements is None
self.ros_measurements is not empty
x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9000)
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:2
sim.py in the sim.py statecallback function, msg is

x: -3.60326552391
y: 33.9505157471
theta: 4.7910027504
speed: 14.1547451019
id: 1
t: 2

222 self.state_dicts[msg.id][msg.t] is (-3.6032655239105225, 33.95051574707031, 4.7910027503967285, 14.154745101928711)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:3
xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: 3.40751957893
y: -32.96352005
theta: 1.49048185349
speed: 14.1834554672
id: 0
t: 3
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:4
xxx before update is x: 3.40751957893
y: -32.96352005
theta: 1.49048185349
speed: 14.1834554672
id: 0
t: 3
xxx after update is x: 3.32369208336
y: -31.9174995422
theta: 1.71587407589
speed: 14.0835380554
id: 0
t: 4
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:5
xxx before update is x: 3.32369208336
y: -31.9174995422
theta: 1.71587407589
speed: 14.0835380554
id: 0
t: 4
xxx after update is x: 3.77090144157
y: -31.7198524475
theta: 1.44980192184
speed: 13.8775587082
id: 0
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.37332411692295137, 0.36718973338963534]
sim.py in the sim.py statecallback func [0.4186533985152986, 0.29338311055392235]
sim.py in the sim.py statecallback function, msg is

x: 3.40751957893
y: -32.96352005
theta: 1.49048185349
speed: 14.1834554672
id: 0
t: 3

sim.py in the sim.py statecallback function, msg is

x: 3.32369208336
y: -31.9174995422
theta: 1.71587407589
speed: 14.0835380554
id: 0
t: 4

sim.py in the sim.py statecallback function, msg is

x: 3.77090144157
y: -31.7198524475
theta: 1.44980192184
speed: 13.8775587082
id: 0
t: 5

222 self.state_dicts[msg.id][msg.t] is (3.7709014415740967, -31.719852447509766, 1.4498019218444824, 13.877558708190918)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:6
xxx before update is x: -3.41125655174
y: 31.8360080719
theta: 4.68931865692
speed: 13.7063865662
id: 1
t: 5
xxx after update is x: -2.93654847145
y: 31.6177845001
theta: 4.88600540161
speed: 13.866065979
id: 1
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:7
xxx before update is x: -2.93654847145
y: 31.6177845001
theta: 4.88600540161
speed: 13.866065979
id: 1
t: 6
xxx after update is x: -3.20598912239
y: 30.464969635
theta: 4.57912158966
speed: 14.0892915726
id: 1
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:8
xxx before update is x: -3.20598912239
y: 30.464969635
theta: 4.57912158966
speed: 14.0892915726
id: 1
t: 7
xxx after update is x: -3.16439938545
y: 29.6948223114
theta: 4.59400224686
speed: 13.6991329193
id: 1
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:9
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:10
xxx before update is x: -3.16439938545
y: 29.6948223114
theta: 4.59400224686
speed: 13.6991329193
id: 1
t: 8
xxx after update is x: -3.5661547184
y: 25.1706752777
theta: 4.76218080521
speed: 13.8567657471
id: 1
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.5661547184
y: 25.1706752777
theta: 4.76218080521
speed: 13.8567657471
id: 1
t: 9
xxx after update is x: -3.13675403595
y: 24.8326625824
theta: 4.76072311401
speed: 13.962600708
id: 1
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.13675403595
y: 24.8326625824
theta: 4.76072311401
speed: 13.962600708
id: 1
t: 10
current clock is 0.444444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration






self.maneuver_requested None
maneuver_negotiatir.py in the lat function
0
self.agents_to_ask is  []
self.D.intersection(self.agents_to_ask)) is  set([])
self.R.intersection(self.D.intersection(self.agents_to_ask)) is  set([])
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
maneuver_negotiatir.py in the try maneuver function update -. sfinish
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.136754035tion, msg is

x: -3.03672194481
y: 32.6328086853
theta: 4.78564500809
speed: 13.6735687256
id: 1
t: 3

sim.py in the sim.py statecallback function, msg is

x: -2.85244727135
y: 32.4019355774
theta: 4.61995315552
speed: 13.9448451996
id: 1
t: 4

sim.py in the sim.py statecallback function, msg is

x: -3.41125655174
y: 31.8360080719
theta: 4.68931865692
speed: 13.7063865662
id: 1
t: 5

222 self.state_dicts[msg.id][msg.t] is (-3.4112565517425537, 31.836008071899414, 4.689318656921387, 13.70638656616211)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:6
xxx before update is x: 3.77090144157
y: -31.7198524475
theta: 1.44980192184
speed: 13.8775587082
id: 0
t: 5
xxx after update is x: 3.45700144768
y: -31.1498508453
theta: 1.63833630085
speed: 13.7396125793
id: 0
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:7
xxx before update is x: 3.45700144768
y: -31.1498508453
theta: 1.63833630085
speed: 13.7396125793
id: 0
t: 6
xxx after update is x: 3.19181609154
y: -30.5829486847
theta: 1.66411697865
speed: 14.04226017
id: 0
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:8
xxx before update is x: 3.19181609154
y: -30.5829486847
theta: 1.66411697865
speed: 14.04226017
id: 0
t: 7
xxx after update is x: 3.43312048912
y: -30.0690879822
theta: 1.63961291313
speed: 13.799407959
id: 0
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.43312048912
y: -30.0690879822
theta: 1.63961291313
speed: 13.799407959
id: 0
t: 8
current clock is 0.355555555556
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration






self.maneuver_requested None
maneuver_negotiatir.py in the lat function
0
self.agents_to_ask is  []
self.D.intersection(self.agents_to_ask)) is  set([])
self.R.intersection(self.D.intersection(self.agents_to_ask)) is  set([])
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
maneuver_negotiatir.py in the try maneuver function update -. sfinish
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 3.43312048912
y: -30.0690879822
theta: 1.63961291313
speed: 13.799407959
id: 0
t: 8
xxx after update is x: 3.298807621
y: -24.3865184784
theta: 1.53441548347
speed: 12.708158493
id: 0
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:9
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 3.298807621
y: -24.3865184784
theta: 1.53441548347
speed: 12.708158493
id: 0
t: 9
xxx after update is x: 3.43210148811
y: -24.0930538177
theta: 1.32174479961
speed: 12.6879262924
id: 0
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:10
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:11
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:12
going to t95
y: 24.8326625824
theta: 4.76072311401
speed: 13.962600708
id: 1
t: 10
xxx after update is x: -3.09189867973
y: 24.437292099
theta: 4.67633581161
speed: 13.7566404343
id: 1
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:11
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:12
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:13
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:14
xxx before update is x: -3.09189867973
y: 24.437292099
theta: 4.67633581161
speed: 13.7566404343
id: 1
t: 11
xxx after update is x: -3.54349207878
y: 22.2693538666
theta: 4.6689748764
speed: 13.4682817459
id: 1
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.54349207878
y: 22.2693538666
theta: 4.6689748764
speed: 13.4682817459
id: 1
t: 12
xxx after update is x: -3.08072185516
y: 21.5264949799
theta: 4.62842512131
speed: 13.1036539078
id: 1
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.08072185516
y: 21.5264949799
theta: 4.62842512131
speed: 13.1036539078
id: 1
t: 13
xxx after update is x: -3.61690568924
y: 21.5823345184
theta: 4.79624176025
speed: 13.0579547882
id: 1
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:15
xxx before update is x: -3.61690568924
y: 21.5823345184
theta: 4.79624176025
speed: 13.0579547882
id: 1
t: 14
xxx after update is x: -2.91860532761
y: 21.3869991302
theta: 4.68016576767
speed: 13.1476068497
id: 1
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4036701253559546, 0]
sim.py in the sim.py statecallback function, msg is

x: 3.45700144768
y: -31.1498508453
theta: 1.63833630085
speed: 13.7396125793
id: 0
t: 6

sim.py in the sim.py statecallback function, msg is

x: 3.19181609154
y: -30.5829486847
theta: 1.66411697865
speed: 14.04226017
id: 0
t: 7

sim.py in the sim.py statecallback function, msg is

x: 3.43312048912
y: -30.0690879822
theta: 1.63961291313
speed: 13.799407959
id: 0
t: 8

sim.py in the sim.py statecallback function, msg is

x: 3.298807621
y: -24.3865184784
theta: 1.53441548347
speed: 12.708158493
id: 0
t: 9

sim.py in the sim.py statecallback function, msg is

x: 3.43210148811
y: -24.0930538177
theta: 1.32174479961
speed: 12.6879262924
id: 0
t: 10

sim.py in the sim.py statecallback function, msg is

x: 3.78360390663
y: -21.953710556
theta: 1.47519814968
speed: 11.9303121567
id: 0
t: 11

sim.py in the sim.py statecallback function, msg is

x: 3.48849368095
y: -23.1237258911
theta: 1.55696725845
speed: 12.1410102844
id: 0
t: 12

sim.py in the sim.py statecallback function, msg is

x: 3.23071026802
y: -21.4078865051
theta: 1.48552083969
speed: 11.9546165466
id: 0
t: 13

sim.py in the sim.py statecallback function, msg is

x: 3.51434826851
y: -21.7264499664
theta: 1.49674212933
speed: 12.1762008667
id: 0
t: 14

sim.py in the sim.py statecallback function, msg is

x: 3.87292528152
y: -21.5080986023
theta: 1.5725915432
speed: 12.1432638168
id: 0
t: 15

222 self.state_dicts[msg.id][msg.t] is (3.872925281524658, -21.508098602294922, 1.5725915431976318, 12.143263816833496)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish thhe update functionxxx before update is x: 3.43210148811
y: -24.0930538177
theta: 1.32174479961
speed: 12.6879262924
id: 0
t: 10
xxx after update is x: 3.78360390663
y: -21.953710556
theta: 1.47519814968
speed: 11.9303121567
id: 0
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.78360390663
y: -21.953710556
theta: 1.47519814968
speed: 11.9303121567
id: 0
t: 11
xxx after update is x: 3.48849368095
y: -23.1237258911
theta: 1.55696725845
speed: 12.1410102844
id: 0
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion

sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 3.48849368095
y: -23.1237258911
theta: 1.55696725845
speed: 12.1410102844
id: 0
t: 12
xxx after update is x: 3.23071026802
y: -21.4078865051
theta: 1.48552083969
speed: 11.9546165466
id: 0
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:13
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 3.23071026802
y: -21.4078865051
theta: 1.48552083969
speed: 11.9546165466
id: 0
t: 13
xxx after update is x: 3.51434826851
y: -21.7264499664
theta: 1.49674212933
speed: 12.1762008667
id: 0
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:14
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:15
xxx before update is x: 3.51434826851
y: -21.7264499664
theta: 1.49674212933
speed: 12.1762008667
id: 0
t: 14
xxx after update is x: 3.87292528152
y: -21.5080986023
theta: 1.5725915432
speed: 12.1432638168
id: 0
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:16
xxx before update is x: 3.87292528152
y: -21.5080986023
theta: 1.5725915432
speed: 12.1432638168
id: 0
t: 15
xxx after update is x: 2.95341706276
y: -21.2609710693
theta: 1.55486357212
speed: 11.7225608826
id: 0
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.35605571136857117, 0.335498386803276]
sim.py in the sim.py statecallback function, msg is

x: -3.20598912239
y: 30.464969635
theta: 4.57912158966
speed: 14.0892915726
id: 1
t: 7

sim.py in the sim.py statecallback function, msg is

x: -3.16439938545
y: 29.6948223114
theta: 4.59400224686
speed: 13.6991329193
id: 1
t: 8

sim.py in the sim.py statecallback function, msg is

x: -3.5661547184
y: 25.1706752777
theta: 4.76218080521
speed: 13.8567657471
id: 1
t: 9

sim.py in the sim.py statecallback function, msg is

x: -3.13675403595
y: 24.8326625824
theta: 4.76072311401
speed: 13.962600708
id: 1
t: 10

sim.py in the sim.py statecallback function, msg is

x: -3.09189867973
y: 24.437292099
theta: 4.67633581161
speed: 13.7566404343
id: 1
t: 11

sim.py in the sim.py statecallback function, msg is

x: -3.54349207878
y: 22.2693538666
theta: 4.6689748764
speed: 13.4682817459
id: 1
t: 12

sim.py in the sim.py statecallback function, msg is

x: -3.08072185516
y: 21.5264949799
theta: 4.62842512131
speed: 13.1036539078
id: 1
t: 13

sim.py in the sim.py statecallback function, msg is

x: -3.61690568924
y: 21.5823345184
theta: 4.79624176025
speed: 13.0579547882
id: 1
t: 14

sim.py in the sim.py statecallback function, msg is

x: -2.91860532761
y: 21.3869991302
theta: 4.68016576767
speed: 13.1476068497
id: 1
t: 15

sim.py in the sim.py statecallback function, msg is

x: -3.35499024391
y: 21.5348167419
theta: 4.74984359741
speed: 13.1847410202
id: 1
t: 16

222 self.state_dicts[msg.id][msg.t] is (-3.354990243911743, 21.53481674194336, 4.749843597412109, 13.184741020202637)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state fe n times spin:16xxx before update is x: -2.91860532761
y: 21.3869991302
theta: 4.68016576767
speed: 13.1476068497
id: 1
t: 15
xxx after update is x: -3.35499024391
y: 21.5348167419
theta: 4.74984359741
speed: 13.1847410202
id: 1
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.35499024391
y: 21.5348167419
theta: 4.74984359741
speed: 13.1847410202
id: 1
t: 16
xxx after update is x: -3.28154230118
y: 20.3622303009
theta: 4.70360279083
speed: 13.8402748108
id: 1
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:17
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:18
xxx before update is x: -3.28154230118
y: 20.3622303009
theta: 4.70360279083
speed: 13.8402748108
id: 1
t: 17
xxx after update is x: -2.90271186829
y: 20.6410942078
theta: 4.84984636307
speed: 13.8587799072
id: 1
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.002257441674812534, 0]
sim.py in the sim.py statecallback function, msg is

x: 2.95341706276
y: -21.2609710693
theta: 1.55486357212
speed: 11.7225608826
id: 0
t: 16

sim.py in the sim.py statecallback function, msg is

x: 3.45593571663
y: -20.0797920227
theta: 1.75355315208
speed: 11.4623060226
id: 0
t: 17

sim.py in the sim.py statecallback function, msg is

x: 3.22497987747
y: -20.3552131653
theta: 1.70507788658
speed: 11.0021839142
id: 0
t: 18

222 self.state_dicts[msg.id][msg.t] is (3.224979877471924, -20.355213165283203, 1.705077886581421, 11.00218391418457)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:19
xxx before update is x: -2.90271186829
y: 20.6410942078
theta: 4.84984636307
speed: 13.8587799072
id: 1
t: 18
xxx after update is x: -3.32610678673
y: 19.0624828339
theta: 4.76008415222
speed: 13.7268590927
id: 1
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.9960996106129274, 0]
Stops!
Received -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.32610678673
y: 19.0624828339
theta: 4.76008415222
speed: 13.7268590927
id: 1
t: 19
current clock is 0.844444444444
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.32610678673
y: 19.0624828339
theta: 4.76008415222
speed: 13.7268590927
id: 1
t: 19
current clock is 0.844444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '0.8', 'Sender': '0', 'Time': '0.8', 'IntendedCourse': 'left', 'Position': ['3.224979877471924', ' -20.355213165283203', ' 1.705077886581421'], 'TagID': '0', 'Type': 'GET', 'Velocity': '11'}
car 1 received GET,0,0.8,(3.224979877471924, -20.355213165283203, 1.705077886581421),11,1,0.8,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.0355555555556
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
sender travel direction is:  north
sender earliest entering time is:  1.74761664884
sender last entering time is:  1.74761664884
sender last leaving time is:  4.17547409907
my entering time is:  0.871609875149
my leaving time is:  2.787664194unction
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:17
xxx before update is x: 2.95341706276
y: -21.2609710693
theta: 1.55486357212
speed: 11.7225608826
id: 0
t: 16
xxx after update is x: 3.45593571663
y: -20.0797920227
theta: 1.75355315208
speed: 11.4623060226
id: 0
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:18
xxx before update is x: 3.45593571663
y: -20.0797920227
theta: 1.75355315208
speed: 11.4623060226
id: 0
t: 17
xxx after update is x: 3.22497987747
y: -20.3552131653
theta: 1.70507788658
speed: 11.0021839142
id: 0
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:
initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 1
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.22497987747
y: -20.3552131653
theta: 1.70507788658
speed: 11.0021839142
id: 0
t: 18
current clock is 0.8
!!!!after check statue the self.tag is [0.8, 0, 'left']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.22497987747
y: -20.3552131653
theta: 1.70507788658
speed: 11.0021839142
id: 0
t: 18
current clock is 0.8
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [0.8, True, ['1']]
0.8
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 0.8
(RATE*SLOWDOWN) is 22.5
MR[0] is 0.8
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,0.8,(3.224979877471924, -20.355213165283203, 1.705077886581421),11,1,0.8,0,left
!!!!change state to get
GET,0,0.8,(3.224979877471924, -20.355213165283203, 1.705077886581421),11,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.22497987747
y: -20.3552131653
theta: 1.70507788658
speed: 11.0021839142
id: 0
t: 18
current clock is 0.8
self.communication_details == 0
sending GET,0,0.8,(3.224979877471924, -20.355213165283203, 1.705077886581421),11,1,0.8,0,left to car 1 from car 0
Received -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.22497987747
y: -20.3552131653
theta: 1.70507788658
speed: 11.0021839142
id: 0
t: 18
current clock is 0.8
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.22497987747
y: -20.3552131653
theta: 1.70507788658
speed: 11.0021839142
id: 0
t: 18
current clock is 0.8
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '0.844444444444', 'Position': ['(-3.136754035949707', ' 24.83266258239746', ' 4.760723114013672)'], 'Type': 'DENY'}
car 0 received DENY,1,0.844444444444,(-3.136754035949707, 24.83266258239746, 4.760723114013672),13,1,0,0 from  car1
status: 2
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [0.8, True,74
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.32610678673
y: 19.0624828339
theta: 4.76008415222
speed: 13.7268590927
id: 1
t: 19
current clock is 0.844444444444
self.communication_details == 0
sending DENY,1,0.844444444444,(-3.136754035949707, 24.83266258239746, 4.760723114013672),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the message processing function, it's a long code, finish
sim.py in the sim.py statecallback function, msg is

x: 2.51730918884
y: -19.74168396
theta: 1.58144068718
speed: 11.0632410049
id: 0
t: 19

222 self.state_dicts[msg.id][msg.t] is (2.5173091888427734, -19.741683959960938, 1.5814406871795654, 11.063241004943848)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:20
xxx before update is x: -3.32610678673
y: 19.0624828339
theta: 4.76008415222
speed: 13.7268590927
id: 1
t: 19
xxx after update is x: -3.13781833649
y: 18.6816253662
theta: 4.71150112152
speed: 13.1540212631
id: 1
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.008537373686739756, 1.0000000000000016]
sim.py in the sim.py statecallback function, msg is

x: 3.50773739815
y: -18.9399166107
theta: 1.65416824818
speed: 10.6706809998
id: 0
t: 20

222 self.state_dicts[msg.id][msg.t] is (3.507737398147583, -18.939916610717773, 1.6541682481765747, 10.67068099975586)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:21
xxx before update is x: -3.13781833649
y: 18.6816253662
theta: 4.71150112152
speed: 13.1540212631
id: 1
t: 20
xxx after update is x: -3.75195837021
y: 17.5941181183
theta: 4.54445028305
speed: 14.0638055801
id: 1
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.002499430708730051, 1.0000000000000004]
sim.py in the sim.py statecallback function, msg is

x: 3.54832077026
y: -18.6332588196
theta: 1.62927818298
speed: 10.6562204361
id: 0
t: 21

222 self.state_dicts[msg.id][msg.t] is (3.548320770263672, -18.633258819580078, 1.6292781829833984, 10.656220436096191)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:22
xxx before update is x: -3.75195837021
y: 17.5941181183
theta: 4.54445028305
speed: 14.0638055801
id: 1
t: 21
xxx after update is x: -3.36857795715
y: 17.3579120636
theta: 4.79050254822
speed: 13.8444890976
id: 1
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.06553691420878792, 1.0000000000000009]
sim.py in the sim.py statecallback function, msg is

x: 3.21335172653
y: -18.263923645
theta: 1.47686517239
speed: 10.4457998276
id: 0
t: 22

222 self.state_dicts[msg.id][msg.t] is (3.2133517265319824, -18.26392364501953, 1.4768651723861694, 10.445799827575684)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.36857795715
y: 1 ['1']] self.man_init:
leave the update function 
in spin function, finish the n times spin:19
xxx before update is x: 3.22497987747
y: -20.3552131653
theta: 1.70507788658
speed: 11.0021839142
id: 0
t: 18
xxx after update is x: 2.51730918884
y: -19.74168396
theta: 1.58144068718
speed: 11.0632410049
id: 0
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion

0.8
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [0.8, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])
maneuver_negotiatir.py in the message processing function, it's a long code, finish
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:20
xxx before update is x: 2.51730918884
y: -19.74168396
theta: 1.58144068718
speed: 11.0632410049
id: 0
t: 19
xxx after update is x: 3.50773739815
y: -18.9399166107
theta: 1.65416824818
speed: 10.6706809998
id: 0
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.9894287287868786, 0.7234335355644163]
sim.py in the sim.py statecallback function, msg is

x: -3.28154230118
y: 20.3622303009
theta: 4.70360279083
speed: 13.8402748108
id: 1
t: 17

sim.py in the sim.py statecallback function, msg is

x: -2.90271186829
y: 20.6410942078
theta: 4.84984636307
speed: 13.8587799072
id: 1
t: 18

sim.py in the sim.py statecallback function, msg is

x: -3.32610678673
y: 19.0624828339
theta: 4.76008415222
speed: 13.7268590927
id: 1
t: 19

sim.py in the sim.py statecallback function, msg is

x: -3.13781833649
y: 18.6816253662
theta: 4.71150112152
speed: 13.1540212631
id: 1
t: 20

222 self.state_dicts[msg.id][msg.t] is (-3.1378183364868164, 18.681625366210938, 4.711501121520996, 13.154021263122559)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:21
xxx before update is x: 3.50773739815
y: -18.9399166107
theta: 1.65416824818
speed: 10.6706809998
id: 0
t: 20
xxx after update is x: 3.54832077026
y: -18.6332588196
theta: 1.62927818298
speed: 10.6562204361
id: 0
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [1.8079476965604296e-09, 0.9241988075333043]
sim.py in the sim.py statecallback function, msg is

x: -3.75195837021
y: 17.5941181183
theta: 4.54445028305
speed: 14.0638055801
id: 1
t: 21

222 self.state_dicts[msg.id][msg.t] is (-3.7519583702087402, 17.594118118286133, 4.544450283050537, 14.06380558013916)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:22
xxx before update is x: 3.54832077026
y: -18.6332588196
theta: 1.62927818298
speed: 10.6562204361
id: 0
t: 21
xxx after update is x: 3.21335172653
y: -18.263923645
theta: 1.47686517239
speed: 10.4457998276
id: 0
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:23
xxx before update is x: 3.21335172653
y: -18.263923645
theta: 1.47686517239
speed: 10.4457998276
id: 0
t: 22
xxx after update is x: 3.29747986794
y: -17.5483322144
theta: 1.54197764397
speed: 9.96381378174
id: 0
t: 23
maneuver_negotiatir.py finish the upda7.3579120636
theta: 4.79050254822
speed: 13.8444890976
id: 1
t: 22
xxx after update is x: -3.21364450455
y: 16.6595363617
theta: 4.68378448486
speed: 14.133181572
id: 1
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:23
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:24
xxx before update is x: -3.21364450455
y: 16.6595363617
theta: 4.68378448486
speed: 14.133181572
id: 1
t: 23
xxx after update is x: -3.26076292992
y: 15.9464149475
theta: 4.89466428757
speed: 13.8559093475
id: 1
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:25
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:26
xxx before update is x: -3.26076292992
y: 15.9464149475
theta: 4.89466428757
speed: 13.8559093475
id: 1
t: 24
xxx after update is x: -3.05390548706
y: 14.883728981
theta: 4.61277341843
speed: 13.8964004517
id: 1
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.05390548706
y: 14.883728981
theta: 4.61277341843
speed: 13.8964004517
id: 1
t: 25
xxx after update is x: -3.48982429504
y: 14.4815559387
theta: 4.65165042877
speed: 13.7703418732
id: 1
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:27
xxx before update is x: -3.48982429504
y: 14.4815559387
theta: 4.65165042877
speed: 13.7703418732
id: 1
t: 26
xxx after update is x: -3.12868618965
y: 14.5245370865
theta: 4.59728956223
speed: 13.6782646179
id: 1
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.051132944733998556, 1.0000000000000007]
sim.py in the sim.py statecallback function, msg is

x: 3.29747986794
y: -17.5483322144
theta: 1.54197764397
speed: 9.96381378174
id: 0
t: 23

sim.py in the sim.py statecallback function, msg is

x: 3.38346242905
y: -17.4258213043
theta: 1.54930186272
speed: 9.70740413666
id: 0
t: 24

sim.py in the sim.py statecallback function, msg is

x: 3.08963632584
y: -15.8074932098
theta: 1.47652447224
speed: 9.31526184082
id: 0
t: 25

sim.py in the sim.py statecallback function, msg is

x: 3.53070569038
y: -16.5135936737
theta: 1.76933777332
speed: 9.13237476349
id: 0
t: 26

sim.py in the sim.py statecallback function, msg is

x: 3.15429186821
y: -15.8540077209
theta: 1.63632535934
speed: 9.24580097198
id: 0
t: 27

222 self.state_dicts[msg.id][msg.t] is (3.154291868209839, -15.854007720947266, 1.6363253593444824, 9.245800971984863)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:28
xxx before update is x: -3.12868618965
y: 14.5245370865
theta: 4.59728956223
speed: 13.6782646179
id: 1
t: 27
xxx after update is x: -3.23151922226
y: 12.845574379
theta: 4.75393915176
speed: 13.9100513458
id: 1
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:29
xxx before update is x: -3.23151922226
y: 12.845574379
theta: 4.75393915176
speed: 13.9100513458
id: 1
t: 28
xxx after update is x: -3.8247153759
y: 12.4898462te agent state from ros funtion
risk is [0.33442408442524013, 7.666649985488861e-08]
sim.py in the sim.py statecallback function, msg is

x: -3.36857795715
y: 17.3579120636
theta: 4.79050254822
speed: 13.8444890976
id: 1
t: 22

sim.py in the sim.py statecallback function, msg is

x: -3.21364450455
y: 16.6595363617
theta: 4.68378448486
speed: 14.133181572
id: 1
t: 23

222 self.state_dicts[msg.id][msg.t] is (-3.213644504547119, 16.659536361694336, 4.683784484863281, 14.13318157196045)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:24
xxx before update is x: 3.29747986794
y: -17.5483322144
theta: 1.54197764397
speed: 9.96381378174
id: 0
t: 23
xxx after update is x: 3.38346242905
y: -17.4258213043
theta: 1.54930186272
speed: 9.70740413666
id: 0
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:25
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:26
xxx before update is x: 3.38346242905
y: -17.4258213043
theta: 1.54930186272
speed: 9.70740413666
id: 0
t: 24
xxx after update is x: 3.08963632584
y: -15.8074932098
theta: 1.47652447224
speed: 9.31526184082
id: 0
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.08963632584
y: -15.8074932098
theta: 1.47652447224
speed: 9.31526184082
id: 0
t: 25
xxx after update is x: 3.53070569038
y: -16.5135936737
theta: 1.76933777332
speed: 9.13237476349
id: 0
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:27
xxx before update is x: 3.53070569038
y: -16.5135936737
theta: 1.76933777332
speed: 9.13237476349
id: 0
t: 26
xxx after update is x: 3.15429186821
y: -15.8540077209
theta: 1.63632535934
speed: 9.24580097198
id: 0
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.15429186821
y: -15.8540077209
theta: 1.63632535934
speed: 9.24580097198
id: 0
t: 27
xxx after update is x: 3.68347024918
y: -14.7909860611
theta: 1.64884388447
speed: 9.04147815704
id: 0
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:28
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.68347024918
y: -14.7909860611
theta: 1.64884388447
speed: 9.04147815704
id: 0
t: 28
xxx after update is x: 3.78621792793
y: -14.6812486649
theta: 1.64393830299
speed: 8.70342445374
id: 0
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:29
aaaaaazzzzz
risk is [0.7967245375461164, 0.005411670064099138]
sim.py in the sim.py statecallback function, msg is

x: -3.26076292992
y: 15.9464149475
theta: 4.89466428757
speed: 13.8559093475
id: 1
t: 24

sim.py in the sim.py statecallback function, msg is

x: -3.05390548706
y: 14.883728981
theta: 4.61277341843
speed: 13.8964004517
id: 1
t: 25

sim.py in the sim.py statecallback function, msg is

x: -3.48982429504
y: 14.4815559387
theta: 4.65165042877
speed: 13.7703418732
id: 1
t: 26

sim.py in the sim.py statecallback function, msg is

x: -3.12868618965
y: 14.5245370865
theta: 4.59728956223
speed: 13.6782646179
id: 1
t: 27

sim.py in the sim.p296
theta: 4.77159118652
speed: 13.9303512573
id: 1
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.8247153759
y: 12.4898462296
theta: 4.77159118652
speed: 13.9303512573
id: 1
t: 29
xxx after update is x: -2.63458371162
y: 12.043182373
theta: 4.78044319153
speed: 14.0770263672
id: 1
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:30
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.63458371162
y: 12.043182373
theta: 4.78044319153
speed: 14.0770263672
id: 1
t: 30
xxx after update is x: -3.45814323425
y: 11.7320432663
theta: 4.71134138107
speed: 13.887096405
id: 1
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:31
aaaaaa
aaaaaabbbbb
risk is [0.051381519019071537, 0.9999999999999998]
sim.py in the sim.py statecallback function, msg is

x: 3.68347024918
y: -14.7909860611
theta: 1.64884388447
speed: 9.04147815704
id: 0
t: 28

sim.py in the sim.py statecallback function, msg is

x: 3.78621792793
y: -14.6812486649
theta: 1.64393830299
speed: 8.70342445374
id: 0
t: 29

sim.py in the sim.py statecallback function, msg is

x: 4.20548725128
y: -15.1054458618
theta: 1.33750295639
speed: 8.31479549408
id: 0
t: 30

sim.py in the sim.py statecallback function, msg is

x: 3.62726831436
y: -14.7570724487
theta: 1.58683311939
speed: 8.23159694672
id: 0
t: 31

222 self.state_dicts[msg.id][msg.t] is (3.6272683143615723, -14.757072448730469, 1.586833119392395, 8.231596946716309)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:32
xxx before update is x: -3.45814323425
y: 11.7320432663
theta: 4.71134138107
speed: 13.887096405
id: 1
t: 31
xxx after update is x: -2.81314229965
y: 10.3435554504
theta: 4.65291500092
speed: 13.987493515
id: 1
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.81314229965
y: 10.3435554504
theta: 4.65291500092
speed: 13.987493515
id: 1
t: 32
xxx after update is x: -3.31713151932
y: 9.01640510559
theta: 4.77842235565
speed: 13.8080835342
id: 1
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:33
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.31713151932
y: 9.01640510559
theta: 4.77842235565
speed: 13.8080835342
id: 1
t: 33
xxx after update is x: -3.4492430687
y: 9.40983200073
theta: 4.66599321365
speed: 13.8157329559
id: 1
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.4492430687
y: 9.40983200073
theta: 4.66599321365
speed: 13.8157329559
id: 1
t: 34
current clock is 1.51111111111
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.4492430687
y: 9.40983200073
theta: 4.66599321365
speed: 13.8157329559
id: 1
t: 34
current clock is 1.51111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '11', 'Sender': '0', 'TagID': '1', 'Time': '0.8', 'Position': ['(3.224979877471924', ' -20.3552131652832y statecallback function, msg is

x: -3.23151922226
y: 12.845574379
theta: 4.75393915176
speed: 13.9100513458
id: 1
t: 28

sim.py in the sim.py statecallback function, msg is

x: -3.8247153759
y: 12.4898462296
theta: 4.77159118652
speed: 13.9303512573
id: 1
t: 29

222 self.state_dicts[msg.id][msg.t] is (-3.8247153759002686, 12.489846229553223, 4.7715911865234375, 13.930351257324219)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:30
xxx before update is x: 3.78621792793
y: -14.6812486649
theta: 1.64393830299
speed: 8.70342445374
id: 0
t: 29
xxx after update is x: 4.20548725128
y: -15.1054458618
theta: 1.33750295639
speed: 8.31479549408
id: 0
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:31
xxx before update is x: 4.20548725128
y: -15.1054458618
theta: 1.33750295639
speed: 8.31479549408
id: 0
t: 30
xxx after update is x: 3.62726831436
y: -14.7570724487
theta: 1.58683311939
speed: 8.23159694672
id: 0
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:32
xxx before update is x: 3.62726831436
y: -14.7570724487
theta: 1.58683311939
speed: 8.23159694672
id: 0
t: 31
xxx after update is x: 2.84356093407
y: -13.7795572281
theta: 1.52406036854
speed: 8.01005458832
id: 0
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [4.808423013468482e-09, 2.4218776390459214e-05]
sim.py in the sim.py statecallback function, msg is

x: -2.63458371162
y: 12.043182373
theta: 4.78044319153
speed: 14.0770263672
id: 1
t: 30

sim.py in the sim.py statecallback function, msg is

x: -3.45814323425
y: 11.7320432663
theta: 4.71134138107
speed: 13.887096405
id: 1
t: 31

sim.py in the sim.py statecallback function, msg is

x: -2.81314229965
y: 10.3435554504
theta: 4.65291500092
speed: 13.987493515
id: 1
t: 32

222 self.state_dicts[msg.id][msg.t] is (-2.8131422996520996, 10.343555450439453, 4.652915000915527, 13.987493515014648)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:33
going to the update function
sim.py in the sim.py update function 
xxx before update is x: 2.84356093407
y: -13.7795572281
theta: 1.52406036854
speed: 8.01005458832
id: 0
t: 32
xxx after update is x: 2.63228201866
y: -13.27435112
theta: 1.60489451885
speed: 7.32887983322
id: 0
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,0.8,(3.224979877471924, -20.355213165283203, 1.705077886581421),11,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 2.63228201866
y: -13.27435112
theta: 1.60489451885
speed: 7.32887983322
id: 0
t: 33
current clock is 1.46666666667
self.communication_details == 0
sending RELEASE,0,0.8,(3.224979877471924, -20.355213165283203, 1.705077886581421),11,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 2.63228201866
y: -13.27435112
theta: 1.60489451885
speed: 7.32887983322
id: 0
t: 33
xxx after update is x: 3.08209586143
y: -12.7723808289
theta: 1.63864016533
speed: 6.9833073616
id: 0
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:34
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.08209586143
y: -12.7723808289
theta: 1.63864016533
speed: 6.9833073616
id: 0
t: 34
xxx after update is x: 3.04263949394
y: -12.4286031723
theta: 1.43806219101
speed: 7.3652920723
id: 0
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:35
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.04263949394
y: -12.4286031723
theta: 1.43806219101
speed: 7.3652920723
id: 0
t: 35
current clock is 1.55555555556
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [1.5555555555555556, True, ['1']]
1.55555555556
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 1.55555555556
(RATE*SLOWDOWN) is 22.5
MR[0] is 1.55555555556
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,1.55555555556,(3.0426394939422607, -12.428603172302246, 1.4380621910095215),7,1,0.8,0,left
!!!!change state to get
GET,0,1.55555555556,(3.0426394939422607, -12.428603172302246, 1.4380621910095215),7,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.04263949394
y: -12.4286031723
theta: 1.43806219101
speed: 7.3652920723
id: 0
t: 35
current clock is 1.55555555556
self.communication_details == 0
sending GET,0,1.55555555556,(3.0426394939422607, -12.428603172302246, 1.4380621910095215),7,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
Received -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.04263949394
y: -12.4286031723
theta: 1.43806219101
speed: 7.3652920723
id: 0
t: 35
current clock is 1.55555555556
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.04263949394
y: -12.4286031723
theta: 1.43806219101
speed: 7.3652920723
id: 0
t: 35
current clock is 1.55555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '1.55555555556', 'Position': ['(-3.136754035949707', ' 24.83266258239746', ' 4.760723114013672)'], 'Type': 'DENY'}
car 0 received DENY,1,1.55555555556,(-3.136754035949707, 24.83266258239746, 4.760723114013672),13,1,0,0 from  car1
status: 2
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [1.5555555555555556, True, ['1']]
1.55555555556
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [1.5555555555555556, True, '1']
maneuver_negotiatir.py message_processing,in request processing03', ' 1.705077886581421)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,0.8,(3.224979877471924, -20.355213165283203, 1.705077886581421),11,1,0.8,0 from  car0
status: 1
maneuver_negotiatir.py in the message processing function, it's a long code, finish
leave the update function 
in spin function, finish the n times spin:34
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.4492430687
y: 9.40983200073
theta: 4.66599321365
speed: 13.8157329559
id: 1
t: 34
xxx after update is x: -3.44836330414
y: 9.62120342255
theta: 4.67897367477
speed: 13.8959064484
id: 1
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:35
Received -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.44836330414
y: 9.62120342255
theta: 4.67897367477
speed: 13.8959064484
id: 1
t: 35
current clock is 1.55555555556
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.44836330414
y: 9.62120342255
theta: 4.67897367477
speed: 13.8959064484
id: 1
t: 35
current clock is 1.55555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '0.8', 'Sender': '0', 'Time': '1.55555555556', 'IntendedCourse': 'left', 'Position': ['3.0426394939422607', ' -12.428603172302246', ' 1.4380621910095215'], 'TagID': '0', 'Type': 'GET', 'Velocity': '7'}
car 1 received GET,0,1.55555555556,(3.0426394939422607, -12.428603172302246, 1.4380621910095215),7,1,0.8,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.0691358024693
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
sender travel direction is:  north
sender earliest entering time is:  0.917660468597
sender last entering time is:  1.23185880585
sender last leaving time is:  3.327229066
my entering time is:  0.225418004448
my leaving time is:  1.46170020643
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.44836330414
y: 9.62120342255
theta: 4.67897367477
speed: 13.8959064484
id: 1
t: 35
current clock is 1.55555555556
self.communication_details == 0
sending DENY,1,1.55555555556,(-3.136754035949707, 24.83266258239746, 4.760723114013672),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the message processing function, it's a long code, finish
aaaaaa
aaaaaabbbbb
risk is [0.27268381203762965, 1.0]
sim.py in the sim.py statecallback function, msg is

x: 2.84356093407
y: -13.7795572281
theta: 1.52406036854
speed: 8.01005458832
id: 0
t: 32

sim.py in the sim.py statecallback function, msg is

x: 2.63228201866
y: -13.27435112
theta: 1.60489451885
speed: 7.32887983322
id: 0
t: 33

sim.py in the sim.py statecallback function, msg is

x: 3.08209586143
y: -12.7723808289
theta: 1.63864016533
speed: 6.9833073616
id: 0
t: 34

sim.py in the sim.py statecallback function, msg is

x: 3.04263949394
y: -12.4286031723
theta: 1.43806219101
speed: 7.3652920723
id: 0
t: 35

222 self.state_dicts[msg.id][msg.t] is (3.0426394939422607, -12.428603172302246, 1.4380621910095215, 7.365292072296143)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before up, new R = set(['1'])
maneuver_negotiatir.py in the message processing function, it's a long code, finish
finish try maneuver
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.04263949394
y: -12.4286031723
theta: 1.43806219101
speed: 7.3652920723
id: 0
t: 35
xxx after update is x: 3.4380838871
y: -12.3991107941
theta: 1.54682445526
speed: 7.1714053154
id: 0
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:36
aaaaaa
risk is [0.06633518903994036, 2.119960933072479e-12]
sim.py in the sim.py statecallback function, msg is

x: -3.31713151932
y: 9.01640510559
theta: 4.77842235565
speed: 13.8080835342
id: 1
t: 33

sim.py in the sim.py statecallback function, msg is

x: -3.4492430687
y: 9.40983200073
theta: 4.66599321365
speed: 13.8157329559
id: 1
t: 34

sim.py in the sim.py statecallback function, msg is

x: -3.44836330414
y: 9.62120342255
theta: 4.67897367477
speed: 13.8959064484
id: 1
t: 35

sim.py in the sim.py statecallback function, msg is

x: -2.92961120605
y: 8.32820796967
theta: 4.61947488785
speed: 13.9336986542
id: 1
t: 36

222 self.state_dicts[msg.id][msg.t] is (-2.9296112060546875, 8.328207969665527, 4.6194748878479, 13.933698654174805)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:37
xxx before update is x: 3.4380838871
y: -12.3991107941
theta: 1.54682445526
speed: 7.1714053154
id: 0
t: 36
xxx after update is x: 3.32698822021
y: -11.6757850647
theta: 1.38679420948
speed: 7.07530832291
id: 0
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:38
xxx before update is x: 3.32698822021
y: -11.6757850647
theta: 1.38679420948
speed: 7.07530832291
id: 0
t: 37
xxx after update is x: 3.29116845131
y: -11.6861763
theta: 1.75986790657
speed: 6.69318389893
id: 0
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.42549250679786504, 9.305460287377994e-09]
sim.py in the sim.py statecallback function, msg is

x: -3.23198151588
y: 7.68538999557
theta: 4.5608997345
speed: 13.7845592499
id: 1
t: 37

sim.py in the sim.py statecallback function, msg is

x: -3.00466775894
y: 7.49342679977
theta: 4.70411634445
speed: 13.7898321152
id: 1
t: 38

222 self.state_dicts[msg.id][msg.t] is (-3.0046677589416504, 7.49342679977417, 4.704116344451904, 13.78983211517334)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.29116845131
y: -11.6861763
theta: 1.75986790657
speed: 6.69318389893
id: 0
t: 38
xxx after update is x: 3.04729294777
y: -10.6475286484
theta: 1.57758080959
speed: 5.38342857361
id: 0
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:39
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.04729294777
y: -10.6475286484
theta: 1.57758080959
speed: 5.38342857361
id: 0
t: 39
xxx after update is x: 2.99167490005
y: -10.0590085983
theta: 1.63947784901
speed: 5.18645143509
id: 0
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:40
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin functiondate is x: -3.44836330414
y: 9.62120342255
theta: 4.67897367477
speed: 13.8959064484
id: 1
t: 35
xxx after update is x: -2.92961120605
y: 8.32820796967
theta: 4.61947488785
speed: 13.9336986542
id: 1
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:36
aaaaaa
aaaaaabbbbb
risk is [0.29265017930772524, 1.0000000000000002]
sim.py in the sim.py statecallback function, msg is

x: 3.4380838871
y: -12.3991107941
theta: 1.54682445526
speed: 7.1714053154
id: 0
t: 36

222 self.state_dicts[msg.id][msg.t] is (3.4380838871002197, -12.399110794067383, 1.5468244552612305, 7.17140531539917)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:37
xxx before update is x: -2.92961120605
y: 8.32820796967
theta: 4.61947488785
speed: 13.9336986542
id: 1
t: 36
xxx after update is x: -3.23198151588
y: 7.68538999557
theta: 4.5608997345
speed: 13.7845592499
id: 1
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:38
xxx before update is x: -3.23198151588
y: 7.68538999557
theta: 4.5608997345
speed: 13.7845592499
id: 1
t: 37
xxx after update is x: -3.00466775894
y: 7.49342679977
theta: 4.70411634445
speed: 13.7898321152
id: 1
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.26952953045577177, 1.0]
sim.py in the sim.py statecallback function, msg is

x: 3.32698822021
y: -11.6757850647
theta: 1.38679420948
speed: 7.07530832291
id: 0
t: 37

sim.py in the sim.py statecallback function, msg is

x: 3.29116845131
y: -11.6861763
theta: 1.75986790657
speed: 6.69318389893
id: 0
t: 38

222 self.state_dicts[msg.id][msg.t] is (3.291168451309204, -11.686176300048828, 1.7598679065704346, 6.693183898925781)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:39
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:40
xxx before update is x: -3.00466775894
y: 7.49342679977
theta: 4.70411634445
speed: 13.7898321152
id: 1
t: 38
xxx after update is x: -3.3185479641
y: 3.3443031311
theta: 4.82700967789
speed: 14.2308578491
id: 1
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.3185479641
y: 3.3443031311
theta: 4.82700967789
speed: 14.2308578491
id: 1
t: 39
xxx after update is x: -3.30515313148
y: 3.3804795742
theta: 4.75663709641
speed: 14.0022649765
id: 1
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:41
xxx before update is x: -3.30515313148
y: 3.3804795742
theta: 4.75663709641
speed: 14.0022649765
id: 1
t: 40
xxx after update is x: -3.41480875015
y: 3.23300242424
theta: 4.57008361816
speed: 14.0390319824
id: 1
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:42
xxx before update is x: -3.41480875015
y: 3.23300242424
theta: 4.57008361816
speed: 14.0390319824
id: 1
t: 41
xxx af, finish the n times spin:41xxx before update is x: 2.99167490005
y: -10.0590085983
theta: 1.63947784901
speed: 5.18645143509
id: 0
t: 40
xxx after update is x: 3.32020282745
y: -9.90496635437
theta: 1.56380391121
speed: 4.75568246841
id: 0
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion

risk is [0.22377397847375002, 0.07622165174219805]
sim.py in the sim.py statecallback function, msg is

x: -3.3185479641
y: 3.3443031311
theta: 4.82700967789
speed: 14.2308578491
id: 1
t: 39

sim.py in the sim.py statecallback function, msg is

x: -3.30515313148
y: 3.3804795742
theta: 4.75663709641
speed: 14.0022649765
id: 1
t: 40

sim.py in the sim.py statecallback function, msg is

x: -3.41480875015
y: 3.23300242424
theta: 4.57008361816
speed: 14.0390319824
id: 1
t: 41

222 self.state_dicts[msg.id][msg.t] is (-3.414808750152588, 3.2330024242401123, 4.5700836181640625, 14.039031982421875)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:42
xxx before update is x: 3.32020282745
y: -9.90496635437
theta: 1.56380391121
speed: 4.75568246841
id: 0
t: 41
xxx after update is x: 3.23856782913
y: -9.62184810638
theta: 1.51068663597
speed: 4.83259725571
id: 0
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:43
xxx before update is x: 3.23856782913
y: -9.62184810638
theta: 1.51068663597
speed: 4.83259725571
id: 0
t: 42
xxx after update is x: 3.92755579948
y: -9.63715648651
theta: 1.50716400146
speed: 4.46740674973
id: 0
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:44
xxx before update is x: 3.92755579948
y: -9.63715648651
theta: 1.50716400146
speed: 4.46740674973
id: 0
t: 43
xxx after update is x: 2.78499889374
y: -9.24482440948
theta: 1.53155684471
speed: 4.5331864357
id: 0
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.6598873660796781, 5.207632436912752e-07]
sim.py in the sim.py statecallback function, msg is

x: -3.57767128944
y: 1.94673192501
theta: 4.72023916245
speed: 13.9578065872
id: 1
t: 42

sim.py in the sim.py statecallback function, msg is

x: -3.05743908882
y: 1.14932727814
theta: 4.79360580444
speed: 13.8922023773
id: 1
t: 43

sim.py in the sim.py statecallback function, msg is

x: -2.81980657578
y: 0.437110573053
theta: 4.69137620926
speed: 13.8386192322
id: 1
t: 44

222 self.state_dicts[msg.id][msg.t] is (-2.8198065757751465, 0.43711057305336, 4.691376209259033, 13.838619232177734)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:45
xxx before update is x: 2.78499889374
y: -9.24482440948
theta: 1.53155684471
speed: 4.5331864357
id: 0
t: 44
xxx after update is x: 3.2379386425
y: -8.90019989014
theta: 1.42707884312
speed: 3.94552612305
id: 0
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,1.55555555556,(3.0426394939422607, -12.428603172302246, 1.4380621910095215),7,1,0.8,0
maneuver_negotiatir.py start the update_ter update is x: -3.57767128944
y: 1.94673192501
theta: 4.72023916245
speed: 13.9578065872
id: 1
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3688864804191448, 0.9999999999999999]
sim.py in the sim.py statecallback function, msg is

x: 3.04729294777
y: -10.6475286484
theta: 1.57758080959
speed: 5.38342857361
id: 0
t: 39

sim.py in the sim.py statecallback function, msg is

x: 2.99167490005
y: -10.0590085983
theta: 1.63947784901
speed: 5.18645143509
id: 0
t: 40

sim.py in the sim.py statecallback function, msg is

x: 3.32020282745
y: -9.90496635437
theta: 1.56380391121
speed: 4.75568246841
id: 0
t: 41

sim.py in the sim.py statecallback function, msg is

x: 3.23856782913
y: -9.62184810638
theta: 1.51068663597
speed: 4.83259725571
id: 0
t: 42

222 self.state_dicts[msg.id][msg.t] is (3.23856782913208, -9.621848106384277, 1.5106866359710693, 4.832597255706787)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:43
xxx before update is x: -3.57767128944
y: 1.94673192501
theta: 4.72023916245
speed: 13.9578065872
id: 1
t: 42
xxx after update is x: -3.05743908882
y: 1.14932727814
theta: 4.79360580444
speed: 13.8922023773
id: 1
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:44
xxx before update is x: -3.05743908882
y: 1.14932727814
theta: 4.79360580444
speed: 13.8922023773
id: 1
t: 43
xxx after update is x: -2.81980657578
y: 0.437110573053
theta: 4.69137620926
speed: 13.8386192322
id: 1
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.051628872089706346, 1.0]
sim.py in the sim.py statecallback function, msg is

x: 3.92755579948
y: -9.63715648651
theta: 1.50716400146
speed: 4.46740674973
id: 0
t: 43

sim.py in the sim.py statecallback function, msg is

x: 2.78499889374
y: -9.24482440948
theta: 1.53155684471
speed: 4.5331864357
id: 0
t: 44

222 self.state_dicts[msg.id][msg.t] is (2.784998893737793, -9.244824409484863, 1.5315568447113037, 4.533186435699463)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:45
xxx before update is x: -2.81980657578
y: 0.437110573053
theta: 4.69137620926
speed: 13.8386192322
id: 1
t: 44
xxx after update is x: -3.40312170982
y: 0.418017417192
theta: 4.60715723038
speed: 13.9311265945
id: 1
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.19346509507673718, 1.0]
sim.py in the sim.py statecallback function, msg is

x: 3.2379386425
y: -8.90019989014
theta: 1.42707884312
speed: 3.94552612305
id: 0
t: 45

222 self.state_dicts[msg.id][msg.t] is (3.237938642501831, -8.900199890136719, 1.4270788431167603, 3.945526123046875)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:46
xxx before update is x: -3.40312170982
y: 0.418017417192
theta: 4.60715723038
speed: 13.9311265945
id: 1
t: 45
xxx after update is x: -3.61896300316
y: 0.121047824621
theta: 4.57919836044
speed: 13.8763742447
id: 1
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
self.ros_measurements is None
self.ros_measurements agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.2379386425
y: -8.90019989014
theta: 1.42707884312
speed: 3.94552612305
id: 0
t: 45
current clock is 2.0
self.communication_details == 0
sending RELEASE,0,1.55555555556,(3.0426394939422607, -12.428603172302246, 1.4380621910095215),7,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
risk is [0.09956659205540286, 1.997949456051453e-06]
sim.py in the sim.py statecallback function, msg is

x: -3.40312170982
y: 0.418017417192
theta: 4.60715723038
speed: 13.9311265945
id: 1
t: 45

222 self.state_dicts[msg.id][msg.t] is (-3.4031217098236084, 0.4180174171924591, 4.607157230377197, 13.931126594543457)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.2379386425
y: -8.90019989014
theta: 1.42707884312
speed: 3.94552612305
id: 0
t: 45
current clock is 2.0
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [2.0, True, ['1']]
2.0
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 2.0
(RATE*SLOWDOWN) is 22.5
MR[0] is 2.0
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,2.0,(3.237938642501831, -8.900199890136719, 1.4270788431167603),3,1,0.8,0,left
!!!!change state to get
GET,0,2.0,(3.237938642501831, -8.900199890136719, 1.4270788431167603),3,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.2379386425
y: -8.90019989014
theta: 1.42707884312
speed: 3.94552612305
id: 0
t: 45
current clock is 2.0
self.communication_details == 0
sending GET,0,2.0,(3.237938642501831, -8.900199890136719, 1.4270788431167603),3,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:46
xxx before update is x: 3.2379386425
y: -8.90019989014
theta: 1.42707884312
speed: 3.94552612305
id: 0
t: 45
xxx after update is x: 3.27570819855
y: -9.52721118927
theta: 1.58113753796
speed: 4.02751255035
id: 0
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
Received -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.27570819855
y: -9.52721118927
theta: 1.58113753796
speed: 4.02751255035
id: 0
t: 46
current clock is 2.04444444444
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.27570819855
y: -9.52721118927
theta: 1.58113753796
speed: 4.02751255035
id: 0
t: 46
current clock is 2.04444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '2.04444444444', 'Position': ['(-3.136754035949707', ' 24.8is not empty
x: -3.61896300316
y: 0.121047824621
theta: 4.57919836044
speed: 13.8763742447
id: 1
t: 46
current clock is 2.04444444444
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.61896300316
y: 0.121047824621
theta: 4.57919836044
speed: 13.8763742447
id: 1
t: 46
current clock is 2.04444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '7', 'Sender': '0', 'TagID': '1', 'Time': '1.55555555556', 'Position': ['(3.0426394939422607', ' -12.428603172302246', ' 1.4380621910095215)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,1.55555555556,(3.0426394939422607, -12.428603172302246, 1.4380621910095215),7,1,0.8,0 from  car0
status: 1
maneuver_negotiatir.py in the message processing function, it's a long code, finish
Received -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.61896300316
y: 0.121047824621
theta: 4.57919836044
speed: 13.8763742447
id: 1
t: 46
current clock is 2.04444444444
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.61896300316
y: 0.121047824621
theta: 4.57919836044
speed: 13.8763742447
id: 1
t: 46
current clock is 2.04444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '0.8', 'Sender': '0', 'Time': '2.0', 'IntendedCourse': 'left', 'Position': ['3.237938642501831', ' -8.900199890136719', ' 1.4270788431167603'], 'TagID': '0', 'Type': 'GET', 'Velocity': '3'}
car 1 received GET,0,2.0,(3.237938642501831, -8.900199890136719, 1.4270788431167603),3,1,0.8,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.0888888888889
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
sender travel direction is:  north
sender earliest entering time is:  0.435489914586
sender last entering time is:  1.08888888889
sender last leaving time is:  3.46218714531
my entering time is:  0.0888888888889
my leaving time is:  0.641159887817
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.61896300316
y: 0.121047824621
theta: 4.57919836044
speed: 13.8763742447
id: 1
t: 46
current clock is 2.04444444444
self.communication_details == 0
sending DENY,1,2.04444444444,(-3.136754035949707, 24.83266258239746, 4.760723114013672),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the message processing function, it's a long code, finish
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:47
xxx before update is x: -3.61896300316
y: 0.121047824621
theta: 4.57919836044
speed: 13.8763742447
id: 1
t: 46
xxx after update is x: -3.4080286026
y: -0.760927557945
theta: 4.68444299698
speed: 13.399553299
id: 1
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.4080286026
y: -0.760927557945
theta: 4.68444299698
speed: 13.399553299
id: 1
t: 47
xxx after update is x: -3.53303623199
y: -1.76779961586
theta: 4.83420324326
speed: 13.6623954773
id:3266258239746', ' 4.760723114013672)'], 'Type': 'DENY'}
car 0 received DENY,1,2.04444444444,(-3.136754035949707, 24.83266258239746, 4.760723114013672),13,1,0,0 from  car1
status: 2
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [2.0, True, ['1']]
2.0
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [2.0, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])
maneuver_negotiatir.py in the message processing function, it's a long code, finish
finish try maneuver
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
xxx before update is x: 3.27570819855
y: -9.52721118927
theta: 1.58113753796
speed: 4.02751255035
id: 0
t: 46
xxx after update is x: 3.32561779022
y: -8.36499214172
theta: 1.59471189976
speed: 3.4089577198
id: 0
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:47
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:48
xxx before update is x: 3.32561779022
y: -8.36499214172
theta: 1.59471189976
speed: 3.4089577198
id: 0
t: 47
xxx after update is x: 3.58425998688
y: -8.63031005859
theta: 1.56465613842
speed: 3.4041762352
id: 0
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.030529772614381077, 0.0]
sim.py in the sim.py statecallback function, msg is

x: -3.61896300316
y: 0.121047824621
theta: 4.57919836044
speed: 13.8763742447
id: 1
t: 46

sim.py in the sim.py statecallback function, msg is

x: -3.4080286026
y: -0.760927557945
theta: 4.68444299698
speed: 13.399553299
id: 1
t: 47

sim.py in the sim.py statecallback function, msg is

x: -3.53303623199
y: -1.76779961586
theta: 4.83420324326
speed: 13.6623954773
id: 1
t: 48

222 self.state_dicts[msg.id][msg.t] is (-3.533036231994629, -1.7677996158599854, 4.834203243255615, 13.662395477294922)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:49
xxx before update is x: 3.58425998688
y: -8.63031005859
theta: 1.56465613842
speed: 3.4041762352
id: 0
t: 48
xxx after update is x: 3.2572119236
y: -8.2577829361
theta: 1.75434088707
speed: 3.35100793839
id: 0
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.09817239247532566, 0.0]
sim.py in the sim.py statecallback function, msg is

x: -3.05997729301
y: -2.46918606758
theta: 4.91343545914
speed: 13.6934700012
id: 1
t: 49

222 self.state_dicts[msg.id][msg.t] is (-3.0599772930145264, -2.4691860675811768, 4.913435459136963, 13.693470001220703)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:50
xxx before update is x: 3.2572119236
y: -8.2577829361
theta: 1.75434088707
speed: 3.35100793839
id: 0
t: 49
xxx after update is x: 2.99577474594
y: -8.32136631012
theta: 1.48448872566
speed: 2.56064152718
id: 0
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:51
xxx before update is x: 2.99577474594
y: -8.32136631012
theta: 1.48448872566
s 1
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:48
aaaaaa
aaaaaabbbbb
risk is [0.49615111648391086, 0.4943999999999979]
sim.py in the sim.py statecallback function, msg is

x: 3.27570819855
y: -9.52721118927
theta: 1.58113753796
speed: 4.02751255035
id: 0
t: 46

sim.py in the sim.py statecallback function, msg is

x: 3.32561779022
y: -8.36499214172
theta: 1.59471189976
speed: 3.4089577198
id: 0
t: 47

sim.py in the sim.py statecallback function, msg is

x: 3.58425998688
y: -8.63031005859
theta: 1.56465613842
speed: 3.4041762352
id: 0
t: 48

222 self.state_dicts[msg.id][msg.t] is (3.5842599868774414, -8.63031005859375, 1.564656138420105, 3.4041762351989746)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:49
xxx before update is x: -3.53303623199
y: -1.76779961586
theta: 4.83420324326
speed: 13.6623954773
id: 1
t: 48
xxx after update is x: -3.05997729301
y: -2.46918606758
theta: 4.91343545914
speed: 13.6934700012
id: 1
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:50
xxx before update is x: -3.05997729301
y: -2.46918606758
theta: 4.91343545914
speed: 13.6934700012
id: 1
t: 49
xxx after update is x: -3.33359670639
y: -2.5268201828
theta: 4.59409189224
speed: 13.4608507156
id: 1
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.20586177380151355, 0.4975999999999979]
sim.py in the sim.py statecallback function, msg is

x: 3.2572119236
y: -8.2577829361
theta: 1.75434088707
speed: 3.35100793839
id: 0
t: 49

sim.py in the sim.py statecallback function, msg is

x: 2.99577474594
y: -8.32136631012
theta: 1.48448872566
speed: 2.56064152718
id: 0
t: 50

222 self.state_dicts[msg.id][msg.t] is (2.995774745941162, -8.321366310119629, 1.4844887256622314, 2.5606415271759033)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:51
xxx before update is x: -3.33359670639
y: -2.5268201828
theta: 4.59409189224
speed: 13.4608507156
id: 1
t: 50
xxx after update is x: -3.48024559021
y: -3.0486767292
theta: 4.88539505005
speed: 13.8734560013
id: 1
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:52
xxx before update is x: -3.48024559021
y: -3.0486767292
theta: 4.88539505005
speed: 13.8734560013
id: 1
t: 51
xxx after update is x: -3.51636958122
y: -3.63202381134
theta: 4.60195732117
speed: 13.7075080872
id: 1
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.51636958122
y: -3.63202381134
theta: 4.60195732117
speed: 13.7075080872
id: 1
t: 52
xxx after update is x: -3.15296626091
y: -4.51111841202
theta: 4.65306568146
speed: 13.7660074234
id: 1
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:53
aaaaaa
aaaaaabbbbb
risk is [0.4642287842873691, 0.46719999999999806]
sim.py in the simpeed: 2.56064152718
id: 0
t: 50
xxx after update is x: 3.07221007347
y: -8.44446468353
theta: 1.56042611599
speed: 2.5119831562
id: 0
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.6590820869838059, 0.0]
sim.py in the sim.py statecallback function, msg is

x: -3.33359670639
y: -2.5268201828
theta: 4.59409189224
speed: 13.4608507156
id: 1
t: 50

sim.py in the sim.py statecallback function, msg is

x: -3.48024559021
y: -3.0486767292
theta: 4.88539505005
speed: 13.8734560013
id: 1
t: 51

222 self.state_dicts[msg.id][msg.t] is (-3.480245590209961, -3.0486767292022705, 4.885395050048828, 13.873456001281738)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:52
xxx before update is x: 3.07221007347
y: -8.44446468353
theta: 1.56042611599
speed: 2.5119831562
id: 0
t: 51
xxx after update is x: 3.06912446022
y: -8.31153297424
theta: 1.61003792286
speed: 2.32511734962
id: 0
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:53
xxx before update is x: 3.06912446022
y: -8.31153297424
theta: 1.61003792286
speed: 2.32511734962
id: 0
t: 52
xxx after update is x: 3.14577770233
y: -8.07560920715
theta: 1.48133695126
speed: 2.1223154068
id: 0
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,2.0,(3.237938642501831, -8.900199890136719, 1.4270788431167603),3,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.14577770233
y: -8.07560920715
theta: 1.48133695126
speed: 2.1223154068
id: 0
t: 53
current clock is 2.35555555556
self.communication_details == 0
sending RELEASE,0,2.0,(3.237938642501831, -8.900199890136719, 1.4270788431167603),3,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.14577770233
y: -8.07560920715
theta: 1.48133695126
speed: 2.1223154068
id: 0
t: 53
current clock is 2.35555555556
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [2.3555555555555556, True, ['1']]
2.35555555556
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 2.35555555556
(RATE*SLOWDOWN) is 22.5
MR[0] is 2.35555555556
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,2.35555555556,(3.145777702331543, -8.07560920715332, 1.4813369512557983),2,1,0.8,0,left
!!!!change state to get
GET,0,2.35555555556,(3.145777702331543, -8.07560920715332, 1.4813369512557983),2,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measu.py statecallback function, msg is

x: 3.07221007347
y: -8.44446468353
theta: 1.56042611599
speed: 2.5119831562
id: 0
t: 51

sim.py in the sim.py statecallback function, msg is

x: 3.06912446022
y: -8.31153297424
theta: 1.61003792286
speed: 2.32511734962
id: 0
t: 52

sim.py in the sim.py statecallback function, msg is

x: 3.14577770233
y: -8.07560920715
theta: 1.48133695126
speed: 2.1223154068
id: 0
t: 53

222 self.state_dicts[msg.id][msg.t] is (3.145777702331543, -8.07560920715332, 1.4813369512557983, 2.1223154067993164)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:54
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:55
xxx before update is x: -3.15296626091
y: -4.51111841202
theta: 4.65306568146
speed: 13.7660074234
id: 1
t: 53
xxx after update is x: -3.27486371994
y: -10.336151123
theta: 4.62524747849
speed: 13.9947872162
id: 1
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.27486371994
y: -10.336151123
theta: 4.62524747849
speed: 13.9947872162
id: 1
t: 54
xxx after update is x: -3.55006217957
y: -10.3930749893
theta: 4.71273946762
speed: 14.120593071
id: 1
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.55006217957
y: -10.3930749893
theta: 4.71273946762
speed: 14.120593071
id: 1
t: 55
current clock is 2.44444444444
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.55006217957
y: -10.3930749893
theta: 4.71273946762
speed: 14.120593071
id: 1
t: 55
current clock is 2.44444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '3', 'Sender': '0', 'TagID': '1', 'Time': '2.0', 'Position': ['(3.237938642501831', ' -8.900199890136719', ' 1.4270788431167603)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,2.0,(3.237938642501831, -8.900199890136719, 1.4270788431167603),3,1,0.8,0 from  car0
status: 1
maneuver_negotiatir.py in the message processing function, it's a long code, finish
Received -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.55006217957
y: -10.3930749893
theta: 4.71273946762
speed: 14.120593071
id: 1
t: 55
current clock is 2.44444444444
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.55006217957
y: -10.3930749893
theta: 4.71273946762
speed: 14.120593071
id: 1
t: 55
current clock is 2.44444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '0.8', 'Sender': '0', 'Time': '2.35555555556', 'IntendedCourse': 'left', 'Position': ['3.145777702331543', ' -8.07560920715332', ' 1.4813369512557983'], 'TagID': '0', 'Type': 'GET', 'Velocity': '2'}
car 1 received GET,0,2.35555555556,(3.145777702331543, -8.07560920715332, 1.4813369512557983),2,1,0.8,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.104691358025
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, not conlicted
maneuver_negotiatir.pyrements is not emptygoing to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
leave the update function 
in spin function, finish the n times spin:54
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:55
xxx before update is x: 3.14577770233
y: -8.07560920715
theta: 1.48133695126
speed: 2.1223154068
id: 0
t: 53
xxx after update is x: 3.46536636353
y: -6.97064113617
theta: 1.53360366821
speed: 0.285995095968
id: 0
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.46536636353
y: -6.97064113617
theta: 1.53360366821
speed: 0.285995095968
id: 0
t: 54
xxx after update is x: 3.33357930183
y: -6.8139834404
theta: 1.38576567173
speed: 0.0276465918869
id: 0
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion

x: 3.33357930183
y: -6.8139834404
theta: 1.38576567173
speed: 0.0276465918869
id: 0
t: 55
current clock is 2.44444444444
self.communication_details == 0
sending GET,0,2.35555555556,(3.145777702331543, -8.07560920715332, 1.4813369512557983),2,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
Received -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.33357930183
y: -6.8139834404
theta: 1.38576567173
speed: 0.0276465918869
id: 0
t: 55
current clock is 2.44444444444
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.33357930183
y: -6.8139834404
theta: 1.38576567173
speed: 0.0276465918869
id: 0
t: 55
current clock is 2.44444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GRANT, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '2.44444444444', 'Position': ['(-3.136754035949707', ' 24.83266258239746', ' 4.760723114013672)'], 'Type': 'GRANT'}
car 0 received GRANT,1,2.44444444444,(-3.136754035949707, 24.83266258239746, 4.760723114013672),13,1,0,0 from  car1
status: 2
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [2.3555555555555556, True, ['1']]
2.35555555556
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [2.3555555555555556, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])
maneuver_negotiatir.py in the message processing function, it's a long code, finish
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.33357930183
y: -6.8139834404
theta: 1.38576567173
speed: 0.0276465918869
id: 0
t: 55
xxx after update is x: 2.99362850189
y: -7.62697267532
theta: 1.58970546722
speed: 0.233086228371
id: 0
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:56
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:57
xxx before update is x: 2.99362850189
y: -7.62697267532
theta: 1.58970546722
speed: 0.233086228371
id: 0
t: 56
xxx after update is x: 3.04959440231
y: -7.32365512848
theta: 1.51150751114
speed: -0.556746125221
id: 0
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.36519480174524 message_processing,!!dd342 change status to GRANT
self.grantID is 0
GRANT,1,2.44444444444,(-3.136754035949707, 24.83266258239746, 4.760723114013672),13,1,0,0
added car with id 0 to grantlist. current grantlist:  {0: [7.222222222222222, 'left']}
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.55006217957
y: -10.3930749893
theta: 4.71273946762
speed: 14.120593071
id: 1
t: 55
current clock is 2.44444444444
self.communication_details == 0
sending GRANT,1,2.44444444444,(-3.136754035949707, 24.83266258239746, 4.760723114013672),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.55006217957
y: -10.3930749893
theta: 4.71273946762
speed: 14.120593071
id: 1
t: 55
current clock is 2.44444444444
maneuver_negotiatir.py in the message processing function, it's a long code, finish
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:56
xxx before update is x: -3.55006217957
y: -10.3930749893
theta: 4.71273946762
speed: 14.120593071
id: 1
t: 55
xxx after update is x: -2.96299314499
y: -11.4079742432
theta: 4.51271438599
speed: 14.2017192841
id: 1
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:57
xxx before update is x: -2.96299314499
y: -11.4079742432
theta: 4.51271438599
speed: 14.2017192841
id: 1
t: 56
xxx after update is x: -3.72355604172
y: -11.4718933105
theta: 4.79431247711
speed: 13.6440858841
id: 1
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:58
xxx before update is x: -3.72355604172
y: -11.4718933105
theta: 4.79431247711
speed: 13.6440858841
id: 1
t: 57
xxx after update is x: -3.33385634422
y: -12.1261291504
theta: 4.66473340988
speed: 13.5665454865
id: 1
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.8785098628221144, 0.473599999999998]
Stops!
sim.py in the sim.py statecallback function, msg is

x: 3.46536636353
y: -6.97064113617
theta: 1.53360366821
speed: 0.285995095968
id: 0
t: 54

sim.py in the sim.py statecallback function, msg is

x: 3.33357930183
y: -6.8139834404
theta: 1.38576567173
speed: 0.0276465918869
id: 0
t: 55

sim.py in the sim.py statecallback function, msg is

x: 2.99362850189
y: -7.62697267532
theta: 1.58970546722
speed: 0.233086228371
id: 0
t: 56

sim.py in the sim.py statecallback function, msg is

x: 3.04959440231
y: -7.32365512848
theta: 1.51150751114
speed: -0.556746125221
id: 0
t: 57

sim.py in the sim.py statecallback function, msg is

x: 3.04745173454
y: -7.16965341568
theta: 1.68296861649
speed: 0.0116272624582
id: 0
t: 58

222 self.state_dicts[msg.id][msg.t] is (3.0474517345428467, -7.169653415679932, 1.6829686164855957, 0.011627262458205223)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:59
xxx before update is x: -3.33385634422
y: -12.1261291504
theta: 4.66473340988
speed: 13.5665454865
id: 1
t: 58
xxx after update is x: -3.32284474373
y: -12.9037218094
theta: 4.73896408081
speed: 13.435218811
id: 1
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
le17, 0.09436228891863095]
sim.py in the sim.py statecallback function, msg is

x: -3.51636958122
y: -3.63202381134
theta: 4.60195732117
speed: 13.7075080872
id: 1
t: 52

sim.py in the sim.py statecallback function, msg is

x: -3.15296626091
y: -4.51111841202
theta: 4.65306568146
speed: 13.7660074234
id: 1
t: 53

sim.py in the sim.py statecallback function, msg is

x: -3.27486371994
y: -10.336151123
theta: 4.62524747849
speed: 13.9947872162
id: 1
t: 54

sim.py in the sim.py statecallback function, msg is

x: -3.55006217957
y: -10.3930749893
theta: 4.71273946762
speed: 14.120593071
id: 1
t: 55

sim.py in the sim.py statecallback function, msg is

x: -2.96299314499
y: -11.4079742432
theta: 4.51271438599
speed: 14.2017192841
id: 1
t: 56

sim.py in the sim.py statecallback function, msg is

x: -3.72355604172
y: -11.4718933105
theta: 4.79431247711
speed: 13.6440858841
id: 1
t: 57

222 self.state_dicts[msg.id][msg.t] is (-3.7235560417175293, -11.471893310546875, 4.794312477111816, 13.644085884094238)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:58
xxx before update is x: 3.04959440231
y: -7.32365512848
theta: 1.51150751114
speed: -0.556746125221
id: 0
t: 57
xxx after update is x: 3.04745173454
y: -7.16965341568
theta: 1.68296861649
speed: 0.0116272624582
id: 0
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:59
xxx before update is x: 3.04745173454
y: -7.16965341568
theta: 1.68296861649
speed: 0.0116272624582
id: 0
t: 58
xxx after update is x: 3.23519301414
y: -7.05057430267
theta: 1.57760024071
speed: -0.1627702564
id: 0
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.5862712090643969, 0.0]
sim.py in the sim.py statecallback function, msg is

x: -3.33385634422
y: -12.1261291504
theta: 4.66473340988
speed: 13.5665454865
id: 1
t: 58

sim.py in the sim.py statecallback function, msg is

x: -3.32284474373
y: -12.9037218094
theta: 4.73896408081
speed: 13.435218811
id: 1
t: 59

222 self.state_dicts[msg.id][msg.t] is (-3.3228447437286377, -12.903721809387207, 4.738964080810547, 13.435218811035156)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.23519301414
y: -7.05057430267
theta: 1.57760024071
speed: -0.1627702564
id: 0
t: 59
xxx after update is x: 3.5045633316
y: -7.16485929489
theta: 1.58848249912
speed: -0.542576372623
id: 0
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:60
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.5045633316
y: -7.16485929489
theta: 1.58848249912
speed: -0.542576372623
id: 0
t: 60
xxx after update is x: 3.05622243881
y: -7.19977664948
theta: 1.64043200016
speed: 0.0238468963653
id: 0
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:61
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.05622243881
y: -7.19977664948
theta: 1.64043200016
speed: 0.0238468963653
id: 0
t: 61
xxx after update is x: 3.53924703598
y: -6.94274663925
theta: 1.66786408424
speed: -0.205945193768
id: 0
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin funcave the update function xxx before update is x: -3.32284474373
y: -12.9037218094
theta: 4.73896408081
speed: 13.435218811
id: 1
t: 59
xxx after update is x: -2.79806542397
y: -13.0625371933
theta: 4.81573200226
speed: 13.8985204697
id: 1
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:60
************normalize weight**********************
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:61
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:62
xxx before update is x: -2.79806542397
y: -13.0625371933
theta: 4.81573200226
speed: 13.8985204697
id: 1
t: 60
xxx after update is x: -3.37433290482
y: -15.6238069534
theta: 4.71199655533
speed: 13.8130960464
id: 1
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.37433290482
y: -15.6238069534
theta: 4.71199655533
speed: 13.8130960464
id: 1
t: 61
xxx after update is x: -2.99185562134
y: -15.8574066162
theta: 4.704226017
speed: 13.8846244812
id: 1
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.929289266659867, 0.4943999999999979]
Stops!
sim.py in the sim.py statecallback function, msg is

x: 3.23519301414
y: -7.05057430267
theta: 1.57760024071
speed: -0.1627702564
id: 0
t: 59

sim.py in the sim.py statecallback function, msg is

x: 3.5045633316
y: -7.16485929489
theta: 1.58848249912
speed: -0.542576372623
id: 0
t: 60

sim.py in the sim.py statecallback function, msg is

x: 3.05622243881
y: -7.19977664948
theta: 1.64043200016
speed: 0.0238468963653
id: 0
t: 61

sim.py in the sim.py statecallback function, msg is

x: 3.53924703598
y: -6.94274663925
theta: 1.66786408424
speed: -0.205945193768
id: 0
t: 62

222 self.state_dicts[msg.id][msg.t] is (3.5392470359802246, -6.942746639251709, 1.6678640842437744, -0.2059451937675476)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:63
xxx before update is x: -2.99185562134
y: -15.8574066162
theta: 4.704226017
speed: 13.8846244812
id: 1
t: 62
xxx after update is x: -3.64018750191
y: -16.9866027832
theta: 4.71023416519
speed: 13.3146123886
id: 1
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.64018750191
y: -16.9866027832
theta: 4.71023416519
speed: 13.3146123886
id: 1
t: 63
xxx after update is x: -3.67474389076
y: -17.9170398712
theta: 4.68431711197
speed: 13.442782402
id: 1
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:64
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.7090137726199393, 0.48319999999999796]
sim.py in the sim.py statecallback function, msg is

x: 3.29359340668
y: -7.09467935562
theta: 1.38867974281
speed: -0.0776475220919
id: 0
t: 63

sim.py in the sim.py statecallback function, msg is

x: 3.04891109467
y: -6.5314822197
theta: 1.40528523922
speed: 0.266127854586
id: 0
t: 64

222 self.state_dicts[msg.id][msg.t] is (3.0489110946655273, -6.531482219696045, 1.4052852392196655, 0.2661278545856476)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:65
xxx before updtion, finish the n times spin:62
risk is [0.5695562211697528, 1.0]
sim.py in the sim.py statecallback function, msg is

x: -2.79806542397
y: -13.0625371933
theta: 4.81573200226
speed: 13.8985204697
id: 1
t: 60

sim.py in the sim.py statecallback function, msg is

x: -3.37433290482
y: -15.6238069534
theta: 4.71199655533
speed: 13.8130960464
id: 1
t: 61

sim.py in the sim.py statecallback function, msg is

x: -2.99185562134
y: -15.8574066162
theta: 4.704226017
speed: 13.8846244812
id: 1
t: 62

222 self.state_dicts[msg.id][msg.t] is (-2.9918556213378906, -15.857406616210938, 4.704226016998291, 13.884624481201172)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:63
xxx before update is x: 3.53924703598
y: -6.94274663925
theta: 1.66786408424
speed: -0.205945193768
id: 0
t: 62
xxx after update is x: 3.29359340668
y: -7.09467935562
theta: 1.38867974281
speed: -0.0776475220919
id: 0
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:64
xxx before update is x: 3.29359340668
y: -7.09467935562
theta: 1.38867974281
speed: -0.0776475220919
id: 0
t: 63
xxx after update is x: 3.04891109467
y: -6.5314822197
theta: 1.40528523922
speed: 0.266127854586
id: 0
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:65
xxx before update is x: 3.04891109467
y: -6.5314822197
theta: 1.40528523922
speed: 0.266127854586
id: 0
t: 64
xxx after update is x: 3.40002274513
y: -7.33741474152
theta: 1.66085922718
speed: 0.401609122753
id: 0
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.5849066618962825, 0.0]
sim.py in the sim.py statecallback function, msg is

x: -3.64018750191
y: -16.9866027832
theta: 4.71023416519
speed: 13.3146123886
id: 1
t: 63

sim.py in the sim.py statecallback function, msg is

x: -3.67474389076
y: -17.9170398712
theta: 4.68431711197
speed: 13.442782402
id: 1
t: 64

sim.py in the sim.py statecallback function, msg is

x: -3.34386992455
y: -18.2645378113
theta: 4.75457048416
speed: 14.1485090256
id: 1
t: 65

222 self.state_dicts[msg.id][msg.t] is (-3.343869924545288, -18.264537811279297, 4.754570484161377, 14.14850902557373)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:66
xxx before update is x: 3.40002274513
y: -7.33741474152
theta: 1.66085922718
speed: 0.401609122753
id: 0
t: 65
xxx after update is x: 3.86833500862
y: -7.25521421432
theta: 1.42684519291
speed: -0.281977444887
id: 0
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:67
xxx before update is x: 3.86833500862
y: -7.25521421432
theta: 1.42684519291
speed: -0.281977444887
id: 0
t: 66
xxx after update is x: 2.93152761459
y: -7.09784650803
theta: 1.52667713165
speed: 0.24915535748
id: 0
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.5061312784849364, 0.0]
sim.py in the sim.py statecallback function, msg is

x: -3.62093186378
y: -18.5522193909
theta: 4.75537204742
speed: 13.8509025574
id: 1
t: 66

sim.py in the sim.py state is x: -3.67474389076
y: -17.9170398712
theta: 4.68431711197
speed: 13.442782402
id: 1
t: 64
xxx after update is x: -3.34386992455
y: -18.2645378113
theta: 4.75457048416
speed: 14.1485090256
id: 1
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:66
xxx before update is x: -3.34386992455
y: -18.2645378113
theta: 4.75457048416
speed: 14.1485090256
id: 1
t: 65
xxx after update is x: -3.62093186378
y: -18.5522193909
theta: 4.75537204742
speed: 13.8509025574
id: 1
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:67
xxx before update is x: -3.62093186378
y: -18.5522193909
theta: 4.75537204742
speed: 13.8509025574
id: 1
t: 66
xxx after update is x: -3.18868684769
y: -19.3007278442
theta: 4.74648571014
speed: 14.3212404251
id: 1
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.11343012415063115, 0.48479999999999795]
sim.py in the sim.py statecallback function, msg is

x: 3.40002274513
y: -7.33741474152
theta: 1.66085922718
speed: 0.401609122753
id: 0
t: 65

sim.py in the sim.py statecallback function, msg is

x: 3.86833500862
y: -7.25521421432
theta: 1.42684519291
speed: -0.281977444887
id: 0
t: 66

sim.py in the sim.py statecallback function, msg is

x: 2.93152761459
y: -7.09784650803
theta: 1.52667713165
speed: 0.24915535748
id: 0
t: 67

222 self.state_dicts[msg.id][msg.t] is (2.931527614593506, -7.097846508026123, 1.526677131652832, 0.24915535748004913)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:68
xxx before update is x: -3.18868684769
y: -19.3007278442
theta: 4.74648571014
speed: 14.3212404251
id: 1
t: 67
xxx after update is x: -3.28533864021
y: -20.0107192993
theta: 4.81883716583
speed: 14.1325550079
id: 1
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.28533864021
y: -20.0107192993
theta: 4.81883716583
speed: 14.1325550079
id: 1
t: 68
current clock is 3.02222222222
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.28533864021
y: -20.0107192993
theta: 4.81883716583
speed: 14.1325550079
id: 1
t: 68
current clock is 3.02222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '2', 'Sender': '0', 'TagID': '1', 'Time': '2.35555555556', 'Position': ['(3.145777702331543', ' -8.07560920715332', ' 1.4813369512557983)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,2.35555555556,(3.145777702331543, -8.07560920715332, 1.4813369512557983),2,1,0.8,0 from  car0
status: 4
maneuver_negotiatir.py in the message processing function, it's a long code, finish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.5957506791293218, 0.5247999999999986]
Received -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.28533864021
y: -20.0107192993
theta: 4.81883716583
speed: 14.1325550079
id: 1
t: 68
current clock is 3.02222222222
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.28533864021
y: -20.0107192993
theta: 4.81883716583
speed: 14.1325550079
id: 1
atecallback function, msg is

x: -3.18868684769
y: -19.3007278442
theta: 4.74648571014
speed: 14.3212404251
id: 1
t: 67

222 self.state_dicts[msg.id][msg.t] is (-3.1886868476867676, -19.30072784423828, 4.746485710144043, 14.321240425109863)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,2.35555555556,(3.145777702331543, -8.07560920715332, 1.4813369512557983),2,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 2.93152761459
y: -7.09784650803
theta: 1.52667713165
speed: 0.24915535748
id: 0
t: 67
current clock is 2.97777777778
self.communication_details == 0
sending RELEASE,0,2.35555555556,(3.145777702331543, -8.07560920715332, 1.4813369512557983),2,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 2.93152761459
y: -7.09784650803
theta: 1.52667713165
speed: 0.24915535748
id: 0
t: 67
current clock is 2.97777777778
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [2.6666666666666665, True, ['1']]
2.66666666667
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 2.97777777778
(RATE*SLOWDOWN) is 22.5
MR[0] is 2.66666666667
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,2.97777777778,(2.931527614593506, -7.097846508026123, 1.526677131652832),0,1,0.8,0,left
!!!!change state to get
GET,0,2.97777777778,(2.931527614593506, -7.097846508026123, 1.526677131652832),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 2.93152761459
y: -7.09784650803
theta: 1.52667713165
speed: 0.24915535748
id: 0
t: 67
current clock is 2.97777777778
self.communication_details == 0
sending GET,0,2.97777777778,(2.931527614593506, -7.097846508026123, 1.526677131652832),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:68
xxx before update is x: 2.93152761459
y: -7.09784650803
theta: 1.52667713165
speed: 0.24915535748
id: 0
t: 67
xxx after update is x: 3.42530012131
y: -7.04631376266
theta: 1.63587629795
speed: -0.127489253879
id: 0
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.42530012131
y: -7.04631376266
theta: 1.63587629795
speed: -0.127489253879
id: 0
t: 68
current clock is 3.02222222222
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.42530012131
y: -7.04631376266
theta: 1.63587629795
speed: -0.127489253879
id: 0
t: 68
current clock is 3.02222222222
maneuver_negotiatir.py message_procet: 68
current clock is 3.02222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '0.8', 'Sender': '0', 'Time': '2.97777777778', 'IntendedCourse': 'left', 'Position': ['2.931527614593506', ' -7.097846508026123', ' 1.526677131652832'], 'TagID': '0', 'Type': 'GET', 'Velocity': '0'}
car 1 received GET,0,2.97777777778,(2.931527614593506, -7.097846508026123, 1.526677131652832),0,1,0.8,0,left from  car0
status: 4
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.132345679012
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.28533864021
y: -20.0107192993
theta: 4.81883716583
speed: 14.1325550079
id: 1
t: 68
current clock is 3.02222222222
self.communication_details == 0
sending DENY,1,3.02222222222,(-3.136754035949707, 24.83266258239746, 4.760723114013672),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the message processing function, it's a long code, finish
sim.py in the sim.py statecallback function, msg is

x: 3.42530012131
y: -7.04631376266
theta: 1.63587629795
speed: -0.127489253879
id: 0
t: 68

222 self.state_dicts[msg.id][msg.t] is (3.425300121307373, -7.046313762664795, 1.6358762979507446, -0.12748925387859344)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.28533864021
y: -20.0107192993
theta: 4.81883716583
speed: 14.1325550079
id: 1
t: 68
xxx after update is x: -3.70422840118
y: -20.1266822815
theta: 4.66244363785
speed: 14.1421489716
id: 1
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:69
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:70
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:71
xxx before update is x: -3.70422840118
y: -20.1266822815
theta: 4.66244363785
speed: 14.1421489716
id: 1
t: 69
xxx after update is x: -3.38474011421
y: -21.5296669006
theta: 4.72650814056
speed: 14.0732679367
id: 1
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.38474011421
y: -21.5296669006
theta: 4.72650814056
speed: 14.0732679367
id: 1
t: 70
xxx after update is x: -3.28870677948
y: -22.0175514221
theta: 4.71146440506
speed: 13.9116010666
id: 1
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:72
xxx before update is x: -3.28870677948
y: -22.0175514221
theta: 4.71146440506
speed: 13.9116010666
id: 1
t: 71
xxx after update is x: -2.81671333313
y: -22.2635326385
theta: 4.66427516937
speed: 13.7558364868
id: 1
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:73
xxx before update is x: ssing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '3.02222222222', 'Position': ['(-3.136754035949707', ' 24.83266258239746', ' 4.760723114013672)'], 'Type': 'DENY'}
car 0 received DENY,1,3.02222222222,(-3.136754035949707, 24.83266258239746, 4.760723114013672),13,1,0,0 from  car1
status: 2
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [2.6666666666666665, True, ['1']]
2.66666666667
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [2.6666666666666665, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])
maneuver_negotiatir.py in the message processing function, it's a long code, finish
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:69
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.42530012131
y: -7.04631376266
theta: 1.63587629795
speed: -0.127489253879
id: 0
t: 68
xxx after update is x: 3.38891983032
y: -7.14204502106
theta: 1.55750286579
speed: -0.339815676212
id: 0
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.38891983032
y: -7.14204502106
theta: 1.55750286579
speed: -0.339815676212
id: 0
t: 69
xxx after update is x: 3.0758831501
y: -7.4771490097
theta: 1.47359597683
speed: -0.408523857594
id: 0
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:70
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.0758831501
y: -7.4771490097
theta: 1.47359597683
speed: -0.408523857594
id: 0
t: 70
xxx after update is x: 3.58722448349
y: -6.61419153214
theta: 1.67493236065
speed: 0.152848944068
id: 0
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:71
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:72
xxx before update is x: 3.58722448349
y: -6.61419153214
theta: 1.67493236065
speed: 0.152848944068
id: 0
t: 71
xxx after update is x: 3.14863562584
y: -7.17255926132
theta: 1.82867729664
speed: -0.182493537664
id: 0
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:73
xxx before update is x: 3.14863562584
y: -7.17255926132
theta: 1.82867729664
speed: -0.182493537664
id: 0
t: 72
xxx after update is x: 2.90838575363
y: -6.94559288025
theta: 1.54263901711
speed: 0.156211525202
id: 0
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:74
xxx before update is x: 2.90838575363
y: -6.94559288025
theta: 1.54263901711
speed: 0.156211525202
id: 0
t: 73
xxx after update is x: 3.40902066231
y: -6.95322942734
theta: 1.5372313261
spe-2.81671333313
y: -22.2635326385
theta: 4.66427516937
speed: 13.7558364868
id: 1
t: 72
xxx after update is x: -3.21499443054
y: -23.1459388733
theta: 4.57930707932
speed: 14.0950813293
id: 1
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.790418007371749, 0.4911999999999979]
sim.py in the sim.py statecallback function, msg is

x: 3.38891983032
y: -7.14204502106
theta: 1.55750286579
speed: -0.339815676212
id: 0
t: 69

sim.py in the sim.py statecallback function, msg is

x: 3.0758831501
y: -7.4771490097
theta: 1.47359597683
speed: -0.408523857594
id: 0
t: 70

sim.py in the sim.py statecallback function, msg is

x: 3.58722448349
y: -6.61419153214
theta: 1.67493236065
speed: 0.152848944068
id: 0
t: 71

sim.py in the sim.py statecallback function, msg is

x: 3.14863562584
y: -7.17255926132
theta: 1.82867729664
speed: -0.182493537664
id: 0
t: 72

sim.py in the sim.py statecallback function, msg is

x: 2.90838575363
y: -6.94559288025
theta: 1.54263901711
speed: 0.156211525202
id: 0
t: 73

222 self.state_dicts[msg.id][msg.t] is (2.908385753631592, -6.945592880249023, 1.5426390171051025, 0.15621152520179749)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:74
xxx before update is x: -3.21499443054
y: -23.1459388733
theta: 4.57930707932
speed: 14.0950813293
id: 1
t: 73
xxx after update is x: -2.8735833168
y: -23.0054569244
theta: 4.82963180542
speed: 14.1093921661
id: 1
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:75
xxx before update is x: -2.8735833168
y: -23.0054569244
theta: 4.82963180542
speed: 14.1093921661
id: 1
t: 74
xxx after update is x: -3.12334442139
y: -24.775806427
theta: 4.71576833725
speed: 13.8996725082
id: 1
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.12334442139
y: -24.775806427
theta: 4.71576833725
speed: 13.8996725082
id: 1
t: 75
xxx after update is x: -3.53772473335
y: -25.0057907104
theta: 4.69805192947
speed: 14.135594368
id: 1
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:76
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:77
xxx before update is x: -3.53772473335
y: -25.0057907104
theta: 4.69805192947
speed: 14.135594368
id: 1
t: 76
xxx after update is x: -3.05074524879
y: -24.8341903687
theta: 4.65664243698
speed: 14.0141839981
id: 1
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.764270465457201, 0.5247999999999986]
sim.py in the sim.py statecallback function, msg is

x: 3.40902066231
y: -6.95322942734
theta: 1.5372313261
speed: 0.377807527781
id: 0
t: 74

sim.py in the sim.py statecallback function, msg is

x: 3.24948644638
y: -6.95028686523
theta: 1.69007337093
speed: 0.264003485441
id: 0
t: 75

sim.py in the sim.py statecallback function, msg is

x: 3.15806818008
y: -7.59457111359
theta: 1.55569350719
speed: -0.131545931101
id: 0
t: 76

sim.py in the sim.py statecallback function, msg is

x: 2.94684004784
y: -7.72286891937
theta: 1.40320968628
speed: -0.272271364927
id: 0
t: 77

222 self.state_dicts[msg.id][msg.t] is (2.9468400478363037, -7.722868919372559, 1.4032096862792969, -0.27227136492729187)
ed: 0.377807527781
id: 0
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.4469249070874667, 0.0]
sim.py in the sim.py statecallback function, msg is

x: -3.28533864021
y: -20.0107192993
theta: 4.81883716583
speed: 14.1325550079
id: 1
t: 68

sim.py in the sim.py statecallback function, msg is

x: -3.70422840118
y: -20.1266822815
theta: 4.66244363785
speed: 14.1421489716
id: 1
t: 69

sim.py in the sim.py statecallback function, msg is

x: -3.38474011421
y: -21.5296669006
theta: 4.72650814056
speed: 14.0732679367
id: 1
t: 70

sim.py in the sim.py statecallback function, msg is

x: -3.28870677948
y: -22.0175514221
theta: 4.71146440506
speed: 13.9116010666
id: 1
t: 71

sim.py in the sim.py statecallback function, msg is

x: -2.81671333313
y: -22.2635326385
theta: 4.66427516937
speed: 13.7558364868
id: 1
t: 72

sim.py in the sim.py statecallback function, msg is

x: -3.21499443054
y: -23.1459388733
theta: 4.57930707932
speed: 14.0950813293
id: 1
t: 73

sim.py in the sim.py statecallback function, msg is

x: -2.8735833168
y: -23.0054569244
theta: 4.82963180542
speed: 14.1093921661
id: 1
t: 74

222 self.state_dicts[msg.id][msg.t] is (-2.8735833168029785, -23.005456924438477, 4.829631805419922, 14.109392166137695)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:75
xxx before update is x: 3.40902066231
y: -6.95322942734
theta: 1.5372313261
speed: 0.377807527781
id: 0
t: 74
xxx after update is x: 3.24948644638
y: -6.95028686523
theta: 1.69007337093
speed: 0.264003485441
id: 0
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:76
xxx before update is x: 3.24948644638
y: -6.95028686523
theta: 1.69007337093
speed: 0.264003485441
id: 0
t: 75
xxx after update is x: 3.15806818008
y: -7.59457111359
theta: 1.55569350719
speed: -0.131545931101
id: 0
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:77
xxx before update is x: 3.15806818008
y: -7.59457111359
theta: 1.55569350719
speed: -0.131545931101
id: 0
t: 76
xxx after update is x: 2.94684004784
y: -7.72286891937
theta: 1.40320968628
speed: -0.272271364927
id: 0
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.2976405080532941, 0.0]
sim.py in the sim.py statecallback function, msg is

x: -3.12334442139
y: -24.775806427
theta: 4.71576833725
speed: 13.8996725082
id: 1
t: 75

sim.py in the sim.py statecallback function, msg is

x: -3.53772473335
y: -25.0057907104
theta: 4.69805192947
speed: 14.135594368
id: 1
t: 76

sim.py in the sim.py statecallback function, msg is

x: -3.05074524879
y: -24.8341903687
theta: 4.65664243698
speed: 14.0141839981
id: 1
t: 77

222 self.state_dicts[msg.id][msg.t] is (-3.0507452487945557, -24.834190368652344, 4.656642436981201, 14.01418399810791)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 2.94684004784
y: -7.72286891937
theta: 1.40320968628
speed: -0.272271364927
id: 0
t: 77
xxx after update is x: 2.87611818314
y: -7.61489629745
theta: 1.64572894573
speed: 0.0525816716254
id: 0
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:78
going to the update function
sim.py iif we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:78
xxx before update is x: -3.05074524879
y: -24.8341903687
theta: 4.65664243698
speed: 14.0141839981
id: 1
t: 77
xxx after update is x: -3.1364440918
y: -25.876455307
theta: 4.83349657059
speed: 13.9942522049
id: 1
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:79
xxx before update is x: -3.1364440918
y: -25.876455307
theta: 4.83349657059
speed: 13.9942522049
id: 1
t: 78
xxx after update is x: -3.42899680138
y: -26.6650276184
theta: 4.75442695618
speed: 14.0342254639
id: 1
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.42899680138
y: -26.6650276184
theta: 4.75442695618
speed: 14.0342254639
id: 1
t: 79
xxx after update is x: -3.34656095505
y: -27.0768318176
theta: 4.75345373154
speed: 13.9748802185
id: 1
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:80
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
xxx before update is x: -3.34656095505
y: -27.0768318176
theta: 4.75345373154
speed: 13.9748802185
id: 1
t: 80
xxx after update is x: -2.9527759552
y: -37.8557052612
theta: 4.78731298447
speed: 7.55560398102
id: 1
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: -2.9527759552
y: -37.8557052612
theta: 4.78731298447
speed: 7.55560398102
id: 1
t: 81
current clock is 3.6
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: -2.9527759552
y: -37.8557052612
theta: 4.78731298447
speed: 7.55560398102
id: 1
t: 81
current clock is 3.6
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '2.97777777778', 'Position': ['(2.931527614593506', ' -7.097846508026123', ' 1.526677131652832)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,2.97777777778,(2.931527614593506, -7.097846508026123, 1.526677131652832),0,1,0.8,0 from  car0
status: 4
maneuver_negotiatir.py in the message processing function, it's a long code, finish
leave the update function 
in spin function, finish the n times spin:81
Received -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: -2.9527759552
y: -37.8557052612
theta: 4.78731298447
speed: 7.55560398102
id: 1
t: 81
current clock is 3.6
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: -2.9527759552
y: -37.8557052612
theta: 4.78731298447
speed: 7.55560398102
id: 1
t: 81
current clock is 3.6
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '0.8', 'Sender': '0', 'Time': '3.51111111111', 'IntendedCourse': 'left', 'Position': ['2.888934850692749', ' -6.758968830108643', ' 1.5761359930038452'], 'TagID': '0', 'Type': 'GET', 'Velocity': '0'}
car 1 received GET,0,3.51111111111,(2.888934850692749, -6.758968830108643, 1.5761359930038452),0,1,0.8,0,left from  car0
status: 4
maneuver_negotiatir.py messn the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:79
xxx before update is x: 2.87611818314
y: -7.61489629745
theta: 1.64572894573
speed: 0.0525816716254
id: 0
t: 78
xxx after update is x: 2.88893485069
y: -6.75896883011
theta: 1.576135993
speed: -0.170158654451
id: 0
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:80
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:81
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,2.97777777778,(2.931527614593506, -7.097846508026123, 1.526677131652832),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 2.88893485069
y: -6.75896883011
theta: 1.576135993
speed: -0.170158654451
id: 0
t: 79
current clock is 3.51111111111
self.communication_details == 0
sending RELEASE,0,2.97777777778,(2.931527614593506, -7.097846508026123, 1.526677131652832),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 2.88893485069
y: -6.75896883011
theta: 1.576135993
speed: -0.170158654451
id: 0
t: 79
current clock is 3.51111111111
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [3.5555555555555554, True, ['1']]
3.55555555556
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 3.51111111111
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.55555555556
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.51111111111,(2.888934850692749, -6.758968830108643, 1.5761359930038452),0,1,0.8,0,left
!!!!change state to get
GET,0,3.51111111111,(2.888934850692749, -6.758968830108643, 1.5761359930038452),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 2.88893485069
y: -6.75896883011
theta: 1.576135993
speed: -0.170158654451
id: 0
t: 79
current clock is 3.51111111111
self.communication_details == 0
sending GET,0,3.51111111111,(2.888934850692749, -6.758968830108643, 1.5761359930038452),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
xxx before update is x: 2.88893485069
y: -6.75896883011
theta: 1.576135993
speed: -0.170158654451
id: 0
t: 79
xxx after update is x: 3.21673202515
y: -7.00446033478
theta: 1.58507311344
speed: 0.0193406213075
id: 0
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.21673202515
y: -7.00446033478
theta: 1.58507311344
speed: 0.0193406213075
id: 0
t: 80
xxx after update is x: 3.24686217308
y: -7.02407979965
theta: 1.6105877161
speed: 0.156110212207
id: 0
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtionReceived -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.24686217308
y: -7.02407979965
theta: 1.6105877161
speed: 0.156110212207
id: 0
t: 81
current clock is 3.6
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.24686217308
y: -7.02407979965
theta: 1.6105877161
speed: 0.156110212207
id: 0
t: 81
current clock is 3.6
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '3.6', 'Position': ['(-3.136754035949707', ' 24.83266258239746', ' 4.760723114013672)'], 'Type': 'DENY'}
car 0 received DENY,1,3.6,(-3.136754035949707, 24.83266258239746, 4.760723114013672),13,1,0,0 from  car1
status: 2
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [3.5555555555555554, True, ['1']]
3.55555555556
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.5555555555555554, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])
maneuver_negotiatir.py in the message processing function, it's a long code, finish

maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.24686217308
y: -7.02407979965
theta: 1.6105877161
speed: 0.156110212207
id: 0
t: 81
xxx after update is x: 3.09059476852
y: -7.00292444229
theta: 1.61773705482
speed: 0.354636758566
id: 0
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:82
aaaaaa
risk is [0.9112079876666814, 0.0]
sim.py in the sim.py statecallback function, msg is

x: -3.1364440918
y: -25.876455307
theta: 4.83349657059
speed: 13.9942522049
id: 1
t: 78

sim.py in the sim.py statecallback function, msg is

x: -3.42899680138
y: -26.6650276184
theta: 4.75442695618
speed: 14.0342254639
id: 1
t: 79

sim.py in the sim.py statecallback function, msg is

x: -3.34656095505
y: -27.0768318176
theta: 4.75345373154
speed: 13.9748802185
id: 1
t: 80

sim.py in the sim.py statecallback function, msg is

x: -2.9527759552
y: -37.8557052612
theta: 4.78731298447
speed: 7.55560398102
id: 1
t: 81

sim.py in the sim.py statecallback function, msg is

x: -2.86905741692
y: -37.6249427795
theta: 4.88479709625
speed: 6.58863592148
id: 1
t: 82

222 self.state_dicts[msg.id][msg.t] is (-2.8690574169158936, -37.624942779541016, 4.884797096252441, 6.5886359214782715)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:83
xxx before update is x: 3.09059476852
y: -7.00292444229
theta: 1.61773705482
speed: 0.354636758566
id: 0
t: 82
xxx after update is x: 2.68661093712
y: -7.05387878418
theta: 1.69529294968
speed: 0.110242567956
id: 0
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:84
xxx before update is x: 2.68661093712
y: -7.05387878418
theta: 1.69529294968
speed: 0.110242567956
id: 0
t: 83
xxxage_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.156049382716
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: -2.9527759552
y: -37.8557052612
theta: 4.78731298447
speed: 7.55560398102
id: 1
t: 81
current clock is 3.6
self.communication_details == 0
sending DENY,1,3.6,(-3.136754035949707, 24.83266258239746, 4.760723114013672),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the message processing function, it's a long code, finish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.9016483419715, 0.47039999999999804]
Stops!
sim.py in the sim.py statecallback function, msg is

x: 2.87611818314
y: -7.61489629745
theta: 1.64572894573
speed: 0.0525816716254
id: 0
t: 78

sim.py in the sim.py statecallback function, msg is

x: 2.88893485069
y: -6.75896883011
theta: 1.576135993
speed: -0.170158654451
id: 0
t: 79

sim.py in the sim.py statecallback function, msg is

x: 3.21673202515
y: -7.00446033478
theta: 1.58507311344
speed: 0.0193406213075
id: 0
t: 80

sim.py in the sim.py statecallback function, msg is

x: 3.24686217308
y: -7.02407979965
theta: 1.6105877161
speed: 0.156110212207
id: 0
t: 81

222 self.state_dicts[msg.id][msg.t] is (3.2468621730804443, -7.0240797996521, 1.6105877161026, 0.15611021220684052)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:82
xxx before update is x: -2.9527759552
y: -37.8557052612
theta: 4.78731298447
speed: 7.55560398102
id: 1
t: 81
xxx after update is x: -2.86905741692
y: -37.6249427795
theta: 4.88479709625
speed: 6.58863592148
id: 1
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:83
xxx before update is x: -2.86905741692
y: -37.6249427795
theta: 4.88479709625
speed: 6.58863592148
id: 1
t: 82
xxx after update is x: -3.12068724632
y: -38.0727844238
theta: 4.80925130844
speed: 7.58392238617
id: 1
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:84
xxx before update is x: -3.12068724632
y: -38.0727844238
theta: 4.80925130844
speed: 7.58392238617
id: 1
t: 83
xxx after update is x: -2.93641781807
y: -38.8451271057
theta: 4.81622505188
speed: 7.18048334122
id: 1
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.7504997747236372, 0.503999999999998]
sim.py in the sim.py statecallback function, msg is

x: 3.09059476852
y: -7.00292444229
theta: 1.61773705482
speed: 0.354636758566
id: 0
t: 82

sim.py in the sim.py statecallback function, msg is

x: 2.68661093712
y: -7.05387878418
theta: 1.69529294968
speed: 0.110242567956
id: 0
t: 83

sim.py in the sim.py statecallback function, msg is

x: 2.98073554039
y: -6.68914747238
theta: 1.5723003149
speed: 0.167308241129
id: 0
t: 84

222 self.state_dicts[msg.id][msg.t] is (2.9807355403900146, -6.689147472381592, 1.5723003149032593, 0.1673082411289215)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -2.93641781807
y: -38.8451271057
theta: 4.81622505188
speed: 7.18048334122
id: 1
t: 84
xxx after update is x: -2.51099395752
y: -39.0422706604
theta: 4.69156551361
speed: 8.08762931824
id: 1
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:85
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:86
xxx before update is x: -2.51099395752
y: -39.0422706604
theta: 4.69156551361
speed: 8.08762931824
id: 1
t: 85
xxx after update is x: -3.40071630478
y: -38.9521179199
theta: 4.76014280319
speed: 8.36615467072
id: 1
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:87
xxx before update is x: -3.40071630478
y: -38.9521179199
theta: 4.76014280319
speed: 8.36615467072
id: 1
t: 86
xxx after update is x: -3.35268688202
y: -39.4462356567
theta: 4.74067735672
speed: 8.58360385895
id: 1
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.33950737588040497, 0.476799999999998]
sim.py in the sim.py statecallback function, msg is

x: 3.70048642159
y: -7.64232873917
theta: 1.50716924667
speed: -0.157857269049
id: 0
t: 85

sim.py in the sim.py statecallback function, msg is

x: 3.09739398956
y: -7.31030225754
theta: 1.65967226028
speed: -0.26417940855
id: 0
t: 86

sim.py in the sim.py statecallback function, msg is

x: 3.38818788528
y: -6.97581624985
theta: 1.5954914093
speed: 0.149048432708
id: 0
t: 87

222 self.state_dicts[msg.id][msg.t] is (3.388187885284424, -6.975816249847412, 1.5954914093017578, 0.14904843270778656)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:88
xxx before update is x: -3.35268688202
y: -39.4462356567
theta: 4.74067735672
speed: 8.58360385895
id: 1
t: 87
xxx after update is x: -3.44404292107
y: -39.7138710022
theta: 4.75751113892
speed: 8.74415683746
id: 1
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:89
xxx before update is x: -3.44404292107
y: -39.7138710022
theta: 4.75751113892
speed: 8.74415683746
id: 1
t: 88
xxx after update is x: -3.10365581512
y: -40.4589805603
theta: 4.71114301682
speed: 9.4353055954
id: 1
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.633506549783565, 0.478399999999998]
sim.py in the sim.py statecallback function, msg is

x: 3.49508786201
y: -7.14529514313
theta: 1.60780513287
speed: -0.0103832539171
id: 0
t: 88

sim.py in the sim.py statecallback function, msg is

x: 3.17005348206
y: -7.10977315903
theta: 1.53302168846
speed: 0.144676193595
id: 0
t: 89

222 self.state_dicts[msg.id][msg.t] is (3.170053482055664, -7.1097731590271, 1.5330216884613037, 0.14467619359493256)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:90
xxx before update is x: -3.10365581512
y: -40.4589 after update is x: 2.98073554039
y: -6.68914747238
theta: 1.5723003149
speed: 0.167308241129
id: 0
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:85
xxx before update is x: 2.98073554039
y: -6.68914747238
theta: 1.5723003149
speed: 0.167308241129
id: 0
t: 84
xxx after update is x: 3.70048642159
y: -7.64232873917
theta: 1.50716924667
speed: -0.157857269049
id: 0
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.6870490679086864, 0.0]
sim.py in the sim.py statecallback function, msg is

x: -3.12068724632
y: -38.0727844238
theta: 4.80925130844
speed: 7.58392238617
id: 1
t: 83

sim.py in the sim.py statecallback function, msg is

x: -2.93641781807
y: -38.8451271057
theta: 4.81622505188
speed: 7.18048334122
id: 1
t: 84

sim.py in the sim.py statecallback function, msg is

x: -2.51099395752
y: -39.0422706604
theta: 4.69156551361
speed: 8.08762931824
id: 1
t: 85

222 self.state_dicts[msg.id][msg.t] is (-2.5109939575195312, -39.04227066040039, 4.69156551361084, 8.087629318237305)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:86
xxx before update is x: 3.70048642159
y: -7.64232873917
theta: 1.50716924667
speed: -0.157857269049
id: 0
t: 85
xxx after update is x: 3.09739398956
y: -7.31030225754
theta: 1.65967226028
speed: -0.26417940855
id: 0
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:87
xxx before update is x: 3.09739398956
y: -7.31030225754
theta: 1.65967226028
speed: -0.26417940855
id: 0
t: 86
xxx after update is x: 3.38818788528
y: -6.97581624985
theta: 1.5954914093
speed: 0.149048432708
id: 0
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:88
xxx before update is x: 3.38818788528
y: -6.97581624985
theta: 1.5954914093
speed: 0.149048432708
id: 0
t: 87
xxx after update is x: 3.49508786201
y: -7.14529514313
theta: 1.60780513287
speed: -0.0103832539171
id: 0
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.8974087246549712, 0.0]
sim.py in the sim.py statecallback function, msg is

x: -3.40071630478
y: -38.9521179199
theta: 4.76014280319
speed: 8.36615467072
id: 1
t: 86

sim.py in the sim.py statecallback function, msg is

x: -3.35268688202
y: -39.4462356567
theta: 4.74067735672
speed: 8.58360385895
id: 1
t: 87

sim.py in the sim.py statecallback function, msg is

x: -3.44404292107
y: -39.7138710022
theta: 4.75751113892
speed: 8.74415683746
id: 1
t: 88

222 self.state_dicts[msg.id][msg.t] is (-3.444042921066284, -39.713871002197266, 4.757511138916016, 8.744156837463379)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:89
xxx before update is x: 3.49508786201
y: -7.14529514313
theta: 1.60780513287
speed: -0.0103832539171
id: 0
t: 88
xxx after update is x: 3.17005348206
y: -7.10977315903
theta: 1.53302168846
speed: 0.144676193595
id: 0
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.17005348206
y: -7.10977315903
theta: 1.53302168846
speed: 0.144676193595
id: 0
t: 89
xxx after update is x: 3.43898153305
y: -6.67803096771
theta: 1.5088031292
speed: -0.177611619234
id: 0
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:90
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:91
xxx before update is x: 3.43898153305
y: -6.67803096771
theta: 1.5088031292
speed: -0.177611619234
id: 0
t: 90
xxx after update is x: 3.59839630127
y: -7.08585643768
theta: 1.63377964497
speed: -0.00897172745317
id: 0
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.8407761749117219, 0.0]
sim.py in the sim.py statecallback function, msg is

x: -3.10365581512
y: -40.4589805603
theta: 4.71114301682
speed: 9.4353055954
id: 1
t: 89

sim.py in the sim.py statecallback function, msg is

x: -2.91410517693
y: -40.604888916
theta: 4.74849843979
speed: 9.45861530304
id: 1
t: 90

sim.py in the sim.py statecallback function, msg is

x: -3.37240219116
y: -41.1634788513
theta: 4.65862703323
speed: 10.2993364334
id: 1
t: 91

222 self.state_dicts[msg.id][msg.t] is (-3.3724021911621094, -41.16347885131836, 4.658627033233643, 10.299336433410645)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:92
xxx before update is x: 3.59839630127
y: -7.08585643768
theta: 1.63377964497
speed: -0.00897172745317
id: 0
t: 91
xxx after update is x: 2.93168544769
y: -6.52487516403
theta: 1.48653078079
speed: -0.0872863680124
id: 0
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:93
xxx before update is x: 2.93168544769
y: -6.52487516403
theta: 1.48653078079
speed: -0.0872863680124
id: 0
t: 92
xxx after update is x: 3.13637256622
y: -6.587433815
theta: 1.73398423195
speed: -0.320972263813
id: 0
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
xxx before update is x: 3.13637256622
y: -6.587433815
theta: 1.73398423195
speed: -0.320972263813
id: 0
t: 93
xxx after update is x: 3.01419758797
y: -7.38224172592
theta: 1.55549120903
speed: -0.0153590831906
id: 0
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:94
aaaaaa
risk is [0.8086926520164208, 0.0]
sim.py in the sim.py statecallback function, msg is

x: -3.41773366928
y: -40.9304008484
theta: 4.58427333832
speed: 10.5559616089
id: 1
t: 92

sim.py in the sim.py statecallback function, msg is

x: -3.58199167252
y: -42.0137786865
theta: 4.79128408432
speed: 10.8365869522
id: 1
t: 93

sim.py in the sim.py statecallback function, msg is

x: -3.01858592033
y: -42.3351325989
theta: 4.80454778671
speed: 11.3304176331
id: 1
t: 94

222 self.state_dicts[msg.id][msg.t] is (-3.0185859203338623, -42.33513259887695, 4.8045477867126465, 11.33041763305664)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:95
xxx before update is x: 3.01419758797
y: -7.38224172592
theta: 1.55549120903
speed: -0.015359083805603
theta: 4.71114301682
speed: 9.4353055954
id: 1
t: 89
xxx after update is x: -2.91410517693
y: -40.604888916
theta: 4.74849843979
speed: 9.45861530304
id: 1
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:91
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
!!! change status from grant to normal
self.ros_measurements is None
self.ros_measurements is not empty
x: -2.91410517693
y: -40.604888916
theta: 4.74849843979
speed: 9.45861530304
id: 1
t: 90
current clock is 4.0
xxx before update is x: -2.91410517693
y: -40.604888916
theta: 4.74849843979
speed: 9.45861530304
id: 1
t: 90
xxx after update is x: -3.37240219116
y: -41.1634788513
theta: 4.65862703323
speed: 10.2993364334
id: 1
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
!!!threading.Timer
tgarnt done
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:92
xxx before update is x: -3.37240219116
y: -41.1634788513
theta: 4.65862703323
speed: 10.2993364334
id: 1
t: 91
xxx after update is x: -3.41773366928
y: -40.9304008484
theta: 4.58427333832
speed: 10.5559616089
id: 1
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:93
xxx before update is x: -3.41773366928
y: -40.9304008484
theta: 4.58427333832
speed: 10.5559616089
id: 1
t: 92
xxx after update is x: -3.58199167252
y: -42.0137786865
theta: 4.79128408432
speed: 10.8365869522
id: 1
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.7217368112159412, 0.4943999999999979]
sim.py in the sim.py statecallback function, msg is

x: 3.43898153305
y: -6.67803096771
theta: 1.5088031292
speed: -0.177611619234
id: 0
t: 90

sim.py in the sim.py statecallback function, msg is

x: 3.59839630127
y: -7.08585643768
theta: 1.63377964497
speed: -0.00897172745317
id: 0
t: 91

sim.py in the sim.py statecallback function, msg is

x: 2.93168544769
y: -6.52487516403
theta: 1.48653078079
speed: -0.0872863680124
id: 0
t: 92

sim.py in the sim.py statecallback function, msg is

x: 3.13637256622
y: -6.587433815
theta: 1.73398423195
speed: -0.320972263813
id: 0
t: 93

222 self.state_dicts[msg.id][msg.t] is (3.1363725662231445, -6.587433815002441, 1.7339842319488525, -0.3209722638130188)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:94
xxx before update is x: -3.58199167252
y: -42.0137786865
theta: 4.79128408432
speed: 10.8365869522
id: 1
t: 93
xxx after update is x: -3.01858592033
y: -42.3351325989
theta: 4.80454778671
speed: 11.3304176331
id: 1
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:95
xxx before update is x: -3.01858592033
y: -42.3351325989
theta: 4.80454778671
speed: 11.3304176331
id: 1
t: 94
xxx after update is x: -3.39554357529
y: -43.0914115906
theta: 4.76590108871
speed: 11.3744764328
id: 1
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.39554357529
y: -43.0914115906
theta: 4.76590108871
speed: 11.3744764328
id: 1
t: 95
xxx after update is x: -3.15152335167
y: -43.2236671448
theta: 4.71697044373
speed: 11.9273176193
id: 1
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:96
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.24360504608062844, 0.5087999999999981]
sim.py in the sim.py statecallback function, msg is

x: 3.01419758797
y: -7.38224172592
theta: 1.55549120903
speed: -0.0153590831906
id: 0
t: 94

sim.py in the sim.py statecallback function, msg is

x: 3.38064336777
y: -7.27770423889
theta: 1.59352624416
speed: -0.136396467686
id: 0
t: 95

sim.py in the sim.py statecallback function, msg is

x: 3.23036789894
y: -7.48785305023
theta: 1.59038853645
speed: -0.0160858016461
id: 0
t: 96

222 self.state_dicts[msg.id][msg.t] is (3.23036789894104, -7.487853050231934, 1.590388536453247, -0.016085801646113396)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.15152335167
y: -43.2236671448
theta: 4.71697044373
speed: 11.9273176193
id: 1
t: 96
current clock is 4.26666666667
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.15152335167
y: -43.2236671448
theta: 4.71697044373
speed: 11.9273176193
id: 1
t: 96
current clock is 4.26666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '3.51111111111', 'Position': ['(2.888934850692749', ' -6.758968830108643', ' 1.5761359930038452)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,3.51111111111,(2.888934850692749, -6.758968830108643, 1.5761359930038452),0,1,0.8,0 from  car0
status: 1
maneuver_negotiatir.py in the message processing function, it's a long code, finish
Received -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.15152335167
y: -43.2236671448
theta: 4.71697044373
speed: 11.9273176193
id: 1
t: 96
current clock is 4.26666666667
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.15152335167
y: -43.2236671448
theta: 4.71697044373
speed: 11.9273176193
id: 1
t: 96
current clock is 4.26666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '0.8', 'Sender': '0', 'Time': '4.26666666667', 'IntendedCourse': 'left', 'Position': ['3.23036789894104', ' -7.487853050231934', ' 1.590388536453247'], 'TagID': '0', 'Type': 'GET', 'Velocity': '0'}
car 1 received GET,0,4.26666666667,(3.23036789894104, -7.487853050231934, 1.590388536453247),0,1,0.8,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.18962962963
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, not conlicted
maneuver_negotiatir.py message_processing,!!dd342 change status to GRANT
self.grantID is 0
GRANT,1,4.26666666667,(-3.136754035949707, 24.83266258239746, 4.760723114013672),13,1,0,0
added car with id 0 to grantlist. current grantlist:  {0: [9.133333333333333, 'left']}
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.15152335167
y: -43.2236671448
theta: 4.71697044373
speed: 11.9273176193
id: 1
t: 96
current clock is 4.21906
id: 0
t: 94
xxx after update is x: 3.38064336777
y: -7.27770423889
theta: 1.59352624416
speed: -0.136396467686
id: 0
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:96
xxx before update is x: 3.38064336777
y: -7.27770423889
theta: 1.59352624416
speed: -0.136396467686
id: 0
t: 95
xxx after update is x: 3.23036789894
y: -7.48785305023
theta: 1.59038853645
speed: -0.0160858016461
id: 0
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,3.51111111111,(2.888934850692749, -6.758968830108643, 1.5761359930038452),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.23036789894
y: -7.48785305023
theta: 1.59038853645
speed: -0.0160858016461
id: 0
t: 96
current clock is 4.26666666667
self.communication_details == 0
sending RELEASE,0,3.51111111111,(2.888934850692749, -6.758968830108643, 1.5761359930038452),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.23036789894
y: -7.48785305023
theta: 1.59038853645
speed: -0.0160858016461
id: 0
t: 96
current clock is 4.26666666667
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.222222222222222, True, ['1']]
4.22222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.26666666667
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.22222222222
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.26666666667,(3.23036789894104, -7.487853050231934, 1.590388536453247),0,1,0.8,0,left
!!!!change state to get
GET,0,4.26666666667,(3.23036789894104, -7.487853050231934, 1.590388536453247),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.23036789894
y: -7.48785305023
theta: 1.59038853645
speed: -0.0160858016461
id: 0
t: 96
current clock is 4.26666666667
self.communication_details == 0
sending GET,0,4.26666666667,(3.23036789894104, -7.487853050231934, 1.590388536453247),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
Received -->>: 
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.23036789894
y: -7.48785305023
theta: 1.59038853645
speed: -0.0160858016461
id: 0
t: 96
current clock is 4.26666666667
maneuver_negotiatir.py message_processing, it's a long code, start...
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.23036789894
y: -7.48785305023
theta: 1.59038853645
speed: -0.0160858016461
id: 0
t: 96
current clock is 4.26666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GRANT, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '4.26666666667', 'Position': ['(-3.136754035949707', ' 24.83266258239746', ' 4.760723114013672)'], 'Type': 'GRANT'}
car 0 received GRANT,1,4.26666666667,(-3.136754035949707, 24.83266258239746, 4.760723114013672),13,1,0,0 from  car1
status: 2
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.222222222222222, True, ['1']]
4.22222222222
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [4.222222222222222, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])
maneuver_negotiatir.py in the message processing function, it's a long code, finish
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:97
xxx before update is x: 3.23036789894
y: -7.48785305023
theta: 1.59038853645
speed: -0.0160858016461
id: 0
t: 96
xxx after update is x: 3.5171289444
y: -6.97679376602
theta: 1.572260499
speed: 0.143884003162
id: 0
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.8732491557446279, 0.0]
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:98
xxx before update is x: 3.5171289444
y: -6.97679376602
theta: 1.572260499
speed: 0.143884003162
id: 0
t: 97
xxx after update is x: 3.42010045052
y: -7.49232196808
theta: 1.49773335457
speed: 0.181668937206
id: 0
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
sim.py in the sim.py statecallback function, msg is

x: -3.39554357529
y: -43.0914115906
theta: 4.76590108871
speed: 11.3744764328
id: 1
t: 95

sim.py in the sim.py statecallback function, msg is

x: -3.15152335167
y: -43.2236671448
theta: 4.71697044373
speed: 11.9273176193
id: 1
t: 96

sim.py in the sim.py statecallback function, msg is

x: -3.14073634148
y: -44.0324363708
theta: 4.59115314484
speed: 12.4787740707
id: 1
t: 97

sim.py in the sim.py statecallback function, msg is

x: -2.9716527462
y: -44.4837417603
theta: 4.71107339859
speed: 12.5466976166
id: 1
t: 98

222 self.state_dicts[msg.id][msg.t] is (-2.9716527462005615, -44.483741760253906, 4.711073398590088, 12.546697616577148)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:99
xxx before update is x: 3.42010045052
y: -7.49232196808
theta: 1.49773335457
speed: 0.181668937206
id: 0
t: 98
xxx after update is x: 3.66559553146
y: -6.82059240341
theta: 1.51497399807
speed: -0.25630491972
id: 0
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
leave the update function 
in spin function, finish the n times spin:100
xxx before update is x: 3.66559553146
y: -6.82059240341
theta: 1.51497399807
speed: -0.25630491972
id: 0
t: 99
xxx after update is x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.8688362235043042, 0.0]
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
6666666667
self.communication_details == 0
sending GRANT,1,4.26666666667,(-3.136754035949707, 24.83266258239746, 4.760723114013672),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: -3.15152335167
y: -43.2236671448
theta: 4.71697044373
speed: 11.9273176193
id: 1
t: 96
current clock is 4.26666666667
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:97
xxx before update is x: -3.15152335167
y: -43.2236671448
theta: 4.71697044373
speed: 11.9273176193
id: 1
t: 96
xxx after update is x: -3.14073634148
y: -44.0324363708
theta: 4.59115314484
speed: 12.4787740707
id: 1
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the message processing function, it's a long code, finish
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
xxx before update is x: -3.14073634148
y: -44.0324363708
theta: 4.59115314484
speed: 12.4787740707
id: 1
t: 97
xxx after update is x: -2.9716527462
y: -44.4837417603
theta: 4.71107339859
speed: 12.5466976166
id: 1
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:98
************normalize weight**********************
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:99
xxx before update is x: -2.9716527462
y: -44.4837417603
theta: 4.71107339859
speed: 12.5466976166
id: 1
t: 98
xxx after update is x: -3.69966411591
y: -45.9576225281
theta: 4.61444807053
speed: 13.2801523209
id: 1
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.9105213776853879, 0.4895999999999979]
Stops!
sim.py in the sim.py statecallback function, msg is

x: 3.5171289444
y: -6.97679376602
theta: 1.572260499
speed: 0.143884003162
id: 0
t: 97

sim.py in the sim.py statecallback function, msg is

x: 3.42010045052
y: -7.49232196808
theta: 1.49773335457
speed: 0.181668937206
id: 0
t: 98

sim.py in the sim.py statecallback function, msg is

x: 3.66559553146
y: -6.82059240341
theta: 1.51497399807
speed: -0.25630491972
id: 0
t: 99

222 self.state_dicts[msg.id][msg.t] is (3.665595531463623, -6.820592403411865, 1.5149739980697632, -0.25630491971969604)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:100
xxx before update is x: -3.69966411591
y: -45.9576225281
theta: 4.61444807053
speed: 13.2801523209
id: 1
t: 99
xxx after update is x: -2.92298007011
y: -46.0915603638
theta: 4.53639745712
speed: 12.8915786743
id: 1
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.6613111485943158, 0.479999999999998]
going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
leave the update function 
in spin function, finish the n times spin:101
leave the update function 
in spin function, finish the n times spin:101
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.26666666667,(3.23036789894104, -7.487853050231934, 1.590388536453247),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.26666666667,(3.23036789894104, -7.487853050231934, 1.590388536453247),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
 maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, startmaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_messagemaneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
finish try maneuver
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_messagemaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,leftmaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
 maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,leftmaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,leftmaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is Nonemaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocitymaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not emptymaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the accelerationmaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1 maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not emptymaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reachedmaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not emptymaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_coursemaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
Truemaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not emptymaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reachedmaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not emptymaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our requestmaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,leftmaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0

current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reachedmaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
finish try maneuver
finish try maneuver
finish try maneuver
finish try maneuver
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
finish try maneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 2
2.self.status is 2
finish try maneuver
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,leftmaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
!!!!!!!!!!change status from get to tryget(tried get, already get), Some agents in the Safety Membership             set aren't reachable or have answered DENY to our request
RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
call tryManeuver from t_retry>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is Nonemaneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
maneuver_negotiatir.py this is get posotion function, it's important for me to read other car's location
maneuver_negotiatir.py get the velocity
maneuver_negotiatir.py get the acceleration
maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py intended_course
left
membership is [4.444444444444445, True, ['1']]
4.44444444444
True
1
maneuver_negotiatir.py get membership, in the get_MR function, finish
self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

maneuver_negotiatir.py start the update_agent_message
self.ros_measurements is None
self.ros_measurements is not empty
x: 3.47702550888
y: -6.4211101532
theta: 1.63039541245
speed: 0.192066818476
id: 0
t: 100
current clock is 4.44444444444
self.communication_details == 0
sending GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message

MR[0] is 4.44444444444
self.TMan is 5
( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.44444444444,(3.4770255088806152, -6.421110153198242, 1.6303954124450684),0,1,0.8,0,left
!!!!change state to get
GET,0,4.44444444444,(3.47... logging to /home/lu/.ros/log/3aba0cfc-ff13-11e8-af00-000c291801fc/roslaunch-ubuntu-14032.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch
[1mstarted roslaunch server http://ubuntu:35163/[0m

SUMMARY
========

PARAMETERS
 * /enable_negotiator: True
 * /file_prefix: 
 * /nr_cars: 2
 * /plot: False
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /save: False

NODES
  /
    car0 (virtual_blinker/sim.py)
    car1 (virtual_blinker/sim.py)
    cloud (virtual_blinker/cloud.py)
    rviz (rviz/rviz)
    visualization (virtual_blinker/visualization.py)

auto-starting new master
[1mprocess[master]: started with pid [14042][0m
[1mROS_MASTER_URI=http://localhost:11311[0m
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch http://localhost:11311
[1msetting /run_id to 3aba0cfc-ff13-11e8-af00-000c291801fc[0m
[1mprocess[rosout-1]: started with pid [14055][0m
started core service [/rosout]
[1mprocess[visualization-2]: started with pid [14059][0m
[1mprocess[rviz-3]: started with pid [14073][0m
[1mprocess[car0-4]: started with pid [14074][0m
[1mprocess[car1-5]: started with pid [14075][0m
[1mprocess[cloud-6]: started with pid [14076][0m
[cloud-6] killing on exit
[car1-5] killing on exit
[car0-4] killing on exit
[rviz-3] killing on exit
[visualization-2] killing on exit
[rosout-1] killing on exit
[master] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
[1mdone[0m
