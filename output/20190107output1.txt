sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 0
s is car_state1
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 1.14930295944


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:1


222 self.state_dicts[msg.id][msg.t] is (-3.400575876235962, 74.87210083007812, 4.478606700897217, 13.912565231323242)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7f86341cd638>


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:2




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:3




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:4


self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f86341e84d0>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:5


maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (-2.689279079437256, 72.00595092773438, 4.921684741973877, 13.645729064941406)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9000)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:6




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:7




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
1546870772547
xxx after update is x: 3.4439675808
y: -59.5671615601
theta: 1.55153632164
speed: 13.56224823
id: 0
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sisim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 1
s is car_state0
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 1.40284609795
222 self.state_dicts[msg.id][msg.t] is (3.0943639278411865, -64.30248260498047, 1.5125722885131836, 13.801064491271973)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:1


222 self.state_dicts[msg.id][msg.t] is (3.4810495376586914, -63.305274963378906, 1.6085201501846313, 14.012080192565918)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:2


222 self.state_dicts[msg.id][msg.t] is (2.9414381980895996, -62.76072692871094, 1.5050060749053955, 13.815825462341309)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:3


222 self.state_dicts[msg.id][msg.t] is (3.490907907485962, -62.816802978515625, 1.6076160669326782, 13.988042831420898)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:4


222 self.state_dicts[msg.id][msg.t] is (2.9502806663513184, -61.57564926147461, 1.4668112993240356, 14.032771110534668)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:5


222 self.state_dicts[msg.id][msg.t] is (2.740434169769287, -60.899742126464844, 1.3979928493499756, 13.858563423156738)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:6


222 self.state_dicts[msg.id][msg.t] is (3.2693188190460205, -60.515933990478516, 1.5215202569961548, 13.919302940368652)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:7


222 self.state_dicts[msg.id][msg.t] is (3.443967580795288, -59.567161560058594, 1.5515363216400146, 13.562248229980469)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:8




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
im.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.4439675808
y: -59.5671615601
theta: 1.55153632164
speed: 13.56224823
id: 0
t: 8
1546870772652
xxx after update is x: 3.10142064095
y: -59.3421058655
theta: 1.48605716228
speed: 14.2763748169
id: 0
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:9




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: 3.10142064095
y: -59.3421058655
theta: 1.48605716228
speed: 14.2763748169
id: 0
t: 9
1546870772680
xxx after update is x: 3.40960121155
y: -58.9727516174
theta: 1.47283303738
speed: 14.1438570023
id: 0
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.37765471470053413, 0.4736285922552057]
222 self.state_dicts[msg.id][msg.t] is (-2.9059011936187744, 68.76605224609375, 4.515735149383545, 14.127952575683594)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: 3.40960121155
y: -58.9727516174
theta: 1.47283303738
speed: 14.1438570023
id: 0
t: 10
1546870772753
xxx after update is x: 3.73044013977
y: -58.2021865845
theta: 1.37129604816
speed: 14.1721057892
id: 0
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: 3.73044013977
y: -58.2021865845
theta: 1.37129604816
speed: 14.1721057892
id: 0
t: 11
1546870772835
xxx after update is x: 3.74676918983
y: -57.9142494202
theta: 1.52014660835
speed: 13.9261751175
id: 0
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.533333333333






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: 3.74676918983
y: -57.9142494202
theta: 1.52014660835
speed: 13.9261751175
id: 0
t: 12
1546870772923
xxx after update is x: 3.20244002342
y: -56.86170578
theta: 1.41107428074
speed: 13.8701448441
id: 0
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: 3.20244002342
y: -56.86170578
theta: 1.41107428074
speed: 13.8701448441
id: 0
t: 13
1546870772951
xxx after update is x: 3.17225432396
y: -56.2267150879
theta: 1.52745521069
speed: 14.2320146561
id: 0
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: 3.17225432396
y: -56.2267150879
theta: 1.52745521069
speed: 14.2320146561
id: 0
t: 14
1546870773018
xxx after update is x: 3.10950803757
y: -55.n spin function, finish the n times spin:9


222 self.state_dicts[msg.id][msg.t] is (3.1014206409454346, -59.342105865478516, 1.486057162284851, 14.276374816894531)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:10


self.intersection <utils.Intersection.Intersection instance at 0x7f0285b5ecb0>


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:11




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:12




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:13




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:14


self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7f0285b821b8>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:15


maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:16


maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9001)
222 self.state_dicts[msg.id][msg.t] is (3.0164873600006104, -55.15141296386719, 1.7218811511993408, 13.868661880493164)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed8628883362
theta: 1.52556550503
speed: 13.8849239349
id: 0
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: 3.10950803757
y: -55.8628883362
theta: 1.52556550503
speed: 13.8849239349
id: 0
t: 15
1546870773114
xxx after update is x: 3.01648736
y: -55.1514129639
theta: 1.7218811512
speed: 13.8686618805
id: 0
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:17




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: 3.01648736
y: -55.1514129639
theta: 1.7218811512
speed: 13.8686618805
id: 0
t: 16
1546870773218
xxx after update is x: 2.96403288841
y: -53.8385810852
theta: 1.52176451683
speed: 13.9031476974
id: 0
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 2.96403288841
y: -53.8385810852
theta: 1.52176451683
speed: 13.9031476974
id: 0
t: 17
1546870773218
xxx after update is x: 3.27539849281
y: -54.274433136
theta: 1.53842377663
speed: 13.1333656311
id: 0
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.27539849281
y: -54.274433136
theta: 1.53842377663
speed: 13.1333656311
id: 0
t: 18
1546870773286
xxx after update is x: 3.23409318924
y: -52.882232666
theta: 1.78859126568
speed: 13.5555000305
id: 0
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:19




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.23409318924
y: -52.882232666
theta: 1.78859126568
speed: 13.5555000305
id: 0
t: 19
1546870773351
xxx after update is x: 3.14469742775
y: -52.7409629822
theta: 1.62722170353
speed: 14.0726051331
id: 0
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:20




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:21


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.888888888889






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: 3.14469742775
y: -52.7409629822
theta: 1.62722170353
speed: 14.0726051331
id: 0
t: 20
1546870773501
xxx after update is x: 3.1285943985
y: -51.7840423584
theta: 1.54349184036
speed: 14.0265522003
id: 0
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: 3.1285943985
y: -51.7840423584
theta: 1.54349184036
speed: 14.0265522003
id: 0
t: 21
1546870773502
xxx after update is x: 3.67669939995
y: -51.7958335876
theta: 1.47603785992
speed: 14.2121477127
id: 0
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


go:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:17




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:18




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
1546870773300
xxx after update is x: -3.38788461685
y: 63.5781135559
theta: 4.77741146088
speed: 13.7181377411
id: 1
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: -3.38788461685
y: 63.5781135559
theta: 4.77741146088
speed: 13.7181377411
id: 1
t: 19
1546870773384
xxx after update is x: -3.03325557709
y: 62.7642059326
theta: 4.76050949097
speed: 13.7820310593
id: 1
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: -3.03325557709
y: 62.7642059326
theta: 4.76050949097
speed: 13.7820310593
id: 1
t: 20
1546870773478
xxx after update is x: -2.73037028313
y: 62.0241165161
theta: 4.66719675064
speed: 14.052573204
id: 1
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: -2.73037028313
y: 62.0241165161
theta: 4.66719675064
speed: 14.052573204
id: 1
t: 21
1546870773531
xxx after update is x: -3.20273017883
y: 60.9841041565
theta: 4.66671180725
speed: 13.7682580948
id: 1
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.977777777778






self.maneuver_requested None
xxx before update is x: -3.20273017883
y: 60.9841041565
theta: 4.66671180725
speed: 13.7682580948
id: 1
t: 22
1546870773623
xxx after update is x: -3.58202576637
y: 60.1820678711
theta: 4.61370897293
speed: 14.0281705856
id: 1
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:23




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times sing to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: 3.67669939995
y: -51.7958335876
theta: 1.47603785992
speed: 14.2121477127
id: 0
t: 22
1546870773553
xxx after update is x: 2.96703672409
y: -50.9523010254
theta: 1.51161730289
speed: 13.6312999725
id: 0
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: 2.96703672409
y: -50.9523010254
theta: 1.51161730289
speed: 13.6312999725
id: 0
t: 23
1546870773630
xxx after update is x: 3.17942428589
y: -50.3467750549
theta: 1.66692006588
speed: 13.943977356
id: 0
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3928022918482589, 0.30929902939518045]
222 self.state_dicts[msg.id][msg.t] is (-3.5876424312591553, 59.81694793701172, 4.705036640167236, 13.940450668334961)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: 3.17942428589
y: -50.3467750549
theta: 1.66692006588
speed: 13.943977356
id: 0
t: 24
1546870773684
xxx after update is x: 3.05935168266
y: -49.7929000854
theta: 1.42218089104
speed: 14.1412668228
id: 0
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: 3.05935168266
y: -49.7929000854
theta: 1.42218089104
speed: 14.1412668228
id: 0
t: 25
1546870773750
xxx after update is x: 3.75923132896
y: -48.9801521301
theta: 1.4059163332
speed: 13.8592119217
id: 0
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: 3.75923132896
y: -48.9801521301
theta: 1.4059163332
speed: 13.8592119217
id: 0
t: 26
1546870773819
xxx after update is x: 2.87365794182
y: -48.008102417
theta: 1.52789640427
speed: 14.0813999176
id: 0
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 2.87365794182
y: -48.008102417
theta: 1.52789640427
speed: 14.0813999176
id: 0
t: 27
1546870773881
xxx after update is x: 2.95136141777
y: -47.4958610535
theta: 1.38717639446
speed: 14.1525020599
id: 0
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:28


aaaaaa
risk is [0.3738827344969256, 0.4344951963342316]
222 self.state_dicts[msg.id][msg.t] is (-3.160980463027954, 57.457088470458984, 4.689680576324463, 14.312582969665527)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: 2.951pin:24

xxx before update is x: -3.58202576637
y: 60.1820678711
theta: 4.61370897293
speed: 14.0281705856
id: 1
t: 23
1546870773643
xxx after update is x: -3.58764243126
y: 59.816947937
theta: 4.70503664017
speed: 13.9404506683
id: 1
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion

maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: -3.58764243126
y: 59.816947937
theta: 4.70503664017
speed: 13.9404506683
id: 1
t: 24
1546870773698
xxx after update is x: -3.32846903801
y: 59.5427322388
theta: 4.85398769379
speed: 13.6251106262
id: 1
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: -3.32846903801
y: 59.5427322388
theta: 4.85398769379
speed: 13.6251106262
id: 1
t: 25
1546870773762
xxx after update is x: -2.80971002579
y: 58.3968505859
theta: 4.73258972168
speed: 14.0534114838
id: 1
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.36431091172639707, 0.26459328276363947]
222 self.state_dicts[msg.id][msg.t] is (3.7592313289642334, -48.98015213012695, 1.4059163331985474, 13.859211921691895)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: -2.80971002579
y: 58.3968505859
theta: 4.73258972168
speed: 14.0534114838
id: 1
t: 26
1546870773830
xxx after update is x: -3.55133342743
y: 58.6335029602
theta: 4.69784355164
speed: 13.6240253448
id: 1
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: -3.55133342743
y: 58.6335029602
theta: 4.69784355164
speed: 13.6240253448
id: 1
t: 27
1546870773899
xxx after update is x: -3.16098046303
y: 57.4570884705
theta: 4.68968057632
speed: 14.3125829697
id: 1
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: -3.16098046303
y: 57.4570884705
theta: 4.68968057632
speed: 14.3125829697
id: 1
t: 28
1546870773987
xxx after update is x: -3.69929242134
y: 56.7059669495
theta: 4.95673894882
speed: 13.6579217911
id: 1
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function xxx before update is x: -3.69929242134
y: 56.7059669495
theta: 4.95673894882
speed: 13.6579217911
id: 1
t: 29
1546870774035
xxx after update is x: -3.34859156609
y: 56.9471359253
theta: 4.85164356232
speed: 13.786400795
id: 1
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:30




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: -3.34859156609
y: 56.9471359253
theta: 4.85164356232
speed: 13.786400795
id: 1
t: 30
1546870774093
xxx after update is x: -3.35990023613
y: 55.87890625
theta: 4.69464063644
speed: 14.2058439255
id: 1
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.37777777778






self.maneuver_requested None
aaaaaa
aaaaaabbbbb
risk is [0.3174488607955457, 0]
222 self.state_dicts[msg.id][msg.t] is (3.741013526916504, -46.19788360595703, 1.4837095737457275, 13.828448295593262)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: -3.35990023613
y: 55.87890625
theta: 4.69464063644
speed: 14.2058439255
id: 1
t: 31
1546870774172
xxx after update is x: -2.91163945198
y: 55.1851463318
theta: 4.76925802231
speed: 13.8199663162
id: 1
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: -2.91163945198
y: 55.1851463318
theta: 4.76925802231
speed: 13.8199663162
id: 1
t: 32
1546870774240
xxx after update is x: -2.85943222046
y: 54.5211257935
theta: 4.79191541672
speed: 13.8441181183
id: 1
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: -2.85943222046
y: 54.5211257935
theta: 4.79191541672
speed: 13.8441181183
id: 1
t: 33
1546870774295
xxx after update is x: -3.06838989258
y: 54.003112793
theta: 4.57118558884
speed: 13.6930751801
id: 1
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: -3.06838989258
y: 54.003112793
theta: 4.57118558884
speed: 13.6930751801
id: 1
t: 34
1546870774362
xxx after update is x: -3.60437774658
y: 53.6319961548
theta: 4.63713741302
speed: 14.1707429886
id: 1
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.31317173443712193, 0]
222 self.state_dicts[msg.id][msg.t] is (3.05436141777
y: -47.4958610535
theta: 1.38717639446
speed: 14.1525020599
id: 0
t: 28
1546870773964
xxx after update is x: 3.25769472122
y: -46.9614562988
theta: 1.46502649784
speed: 13.9085245132
id: 0
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: 3.25769472122
y: -46.9614562988
theta: 1.46502649784
speed: 13.9085245132
id: 0
t: 29
1546870774016
xxx after update is x: 3.31501626968
y: -46.4717216492
theta: 1.61269271374
speed: 13.9363555908
id: 0
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.33333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: 3.31501626968
y: -46.4717216492
theta: 1.61269271374
speed: 13.9363555908
id: 0
t: 30
1546870774083
xxx after update is x: 3.74101352692
y: -46.197883606
theta: 1.48370957375
speed: 13.8284482956
id: 0
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: 3.74101352692
y: -46.197883606
theta: 1.48370957375
speed: 13.8284482956
id: 0
t: 31
1546870774149
xxx after update is x: 3.26534819603
y: -45.8186721802
theta: 1.66030466557
speed: 14.0734090805
id: 0
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: 3.26534819603
y: -45.8186721802
theta: 1.66030466557
speed: 14.0734090805
id: 0
t: 32
1546870774215
xxx after update is x: 2.98129200935
y: -45.0444297791
theta: 1.84134221077
speed: 13.696472168
id: 0
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.46412008562534796, 0.2785945760622037]
222 self.state_dicts[msg.id][msg.t] is (-2.8594322204589844, 54.52112579345703, 4.791915416717529, 13.844118118286133)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 2.98129200935
y: -45.0444297791
theta: 1.84134221077
speed: 13.696472168
id: 0
t: 33
1546870774286
xxx after update is x: 3.47687244415
y: -43.6961135864
theta: 1.44547784328
speed: 13.755156517
id: 0
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:34




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: 3.47687244415
y: -43.6961135864
theta: 1.44547784328
speed: 13.755156517
id: 0
t: 34
1546870774355
xxx after update is x: 3.05423736572
y: -43.8148765564
theta: 1.57637965679
speed: 14.1399793625
id: 0
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: 3.05423736572
y: -43.8148765564
theta: 1.57637965679
speed: 14.1399793625
id: 0
t: 35
1546870774420
xxx after update is x: 2.85437965393
y: -42.7094764709
theta: 1.6505228281
speed: 14.1958999634
id: 0
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: 2.85437965393
y: -42.7094764709
theta: 1.6505228281
speed: 14.1958999634
id: 0
t: 36
1546870774480
xxx after update is x: 3.67549610138
y: -41.7701263428
theta: 1.62026870251
speed: 13.8548021317
id: 0
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.30991543649781933, 0.3180870774260684]
222 self.state_dicts[msg.id][msg.t] is (-2.6673717498779297, 51.43165588378906, 4.627791404724121, 13.904014587402344)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.64444444444






self.maneuver_requested None
xxx before update is x: 3.67549610138
y: -41.7701263428
theta: 1.62026870251
speed: 13.8548021317
id: 0
t: 37
1546870774558
xxx after update is x: 3.35990810394
y: -41.3929023743
theta: 1.6941447258
speed: 14.0309295654
id: 0
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:38


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: 3.35990810394
y: -41.3929023743
theta: 1.6941447258
speed: 14.0309295654
id: 0
t: 38
1546870774621
xxx after update is x: 3.16372704506
y: -41.0643463135
theta: 1.59715139866
speed: 13.6411590576
id: 0
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.16372704506
y: -41.0643463135
theta: 1.59715139866
speed: 13.6411590576
id: 0
t: 39
1546870774684
xxx after update is x: 3.38434243202
y: -39.6318244934
theta: 1.55342566967
speed: 13.9393415451
id: 0
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:40




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.38434243202
y: -39.6318244934
theta: 1.55342566967
speed: 13.9393415451
id: 0
t: 40
1546870774800
xxx after update is x: 3.19472980499
y: -39.6621818542
theta: 1.56439137459
speed: 13.6623888016
id: 0
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:41




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.19472980499
y: -39.6621818542
theta: 1.56439137459
speed: 13.6623888016
id: 0
t: 41
1546870774824
xxx after update is x: 3.05571722984
y: -38.6863327026
theta: 1.66020524502
speed: 13.8864536285
id: 0
t: 42
maneuver_negotiatir.py finish the update agent s2373657226562, -43.814876556396484, 1.576379656791687, 14.139979362487793)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: -3.60437774658
y: 53.6319961548
theta: 4.63713741302
speed: 14.1707429886
id: 1
t: 35
1546870774433
xxx after update is x: -2.57853078842
y: 52.6962471008
theta: 4.87254858017
speed: 13.8626365662
id: 1
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.57853078842
y: 52.6962471008
theta: 4.87254858017
speed: 13.8626365662
id: 1
t: 36
1546870774499
xxx after update is x: -2.66737174988
y: 51.4316558838
theta: 4.62779140472
speed: 13.9040145874
id: 1
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:37




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: -2.66737174988
y: 51.4316558838
theta: 4.62779140472
speed: 13.9040145874
id: 1
t: 37
1546870774562
xxx after update is x: -3.05213904381
y: 51.6376800537
theta: 4.89845657349
speed: 13.9404468536
id: 1
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3492229210031966, 0]
222 self.state_dicts[msg.id][msg.t] is (3.359908103942871, -41.39290237426758, 1.6941447257995605, 14.030929565429688)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.05213904381
y: 51.6376800537
theta: 4.89845657349
speed: 13.9404468536
id: 1
t: 38
1546870774635
xxx after update is x: -3.26603293419
y: 50.7852134705
theta: 4.71096515656
speed: 13.8877696991
id: 1
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:39


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.73333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: -3.26603293419
y: 50.7852134705
theta: 4.71096515656
speed: 13.8877696991
id: 1
t: 39
1546870774694
xxx after update is x: -3.14563322067
y: 49.316570282
theta: 4.60437250137
speed: 13.9309129715
id: 1
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:41




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: -3.14563322067
y: 49.316570282
theta: 4.60437250137
speed: 13.9309129715
id: 1
t: 40
1546870774993
xxx after update is x: -2.99891901016
y: 47.4623832703
theta: 4.85161542892
speed: 14.0649499893
id: 1
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.99891901016
y: 47.4623832703
theta: 4.85161542892
speed: 14.0649499893
id: 1
t: 41
1546870774993
xxx after update is x: -3.33269572258
y: 47.8080291748
theta: 4.77296066284
speed: 13.4165763855
id: 1
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: -3.33269572258
y: 47.8080291748
theta: 4.77296066284
speed: 13.4165763855
id: 1
t: 42
1546870775061
xxx after update is x: -3.10545802116
y: 47.2569541931
theta: 4.84741783142
speed: 14.1954956055
id: 1
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.36510229500013686, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3057267665863037, -38.47785949707031, 1.6467244625091553, 14.262838363647461)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: -3.10545802116
y: 47.2569541931
theta: 4.84741783142
speed: 14.1954956055
id: 1
t: 43
1546870775127
xxx after update is x: -2.9260392189
y: 46.4433784485
theta: 4.90557003021
speed: 13.9643821716
id: 1
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.27602829902873854, 0]
222 self.state_dicts[msg.id][msg.t] is (3.6712963581085205, -37.84913635253906, 1.6819260120391846, 14.130777359008789)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.95555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: -2.9260392189
y: 46.4433784485
theta: 4.90557003021
speed: 13.9643821716
id: 1
t: 44
1546870775193
xxx after update is x: -3.11335921288
y: 45.8194236755
theta: 4.5927066803
speed: 13.7652397156
id: 1
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: -3.11335921288
y: 45.8194236755tate from ros funtion
leave the update function 
in spin function, finish the n times spin:42




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.05571722984
y: -38.6863327026
theta: 1.66020524502
speed: 13.8864536285
id: 0
t: 42
1546870774881
xxx after update is x: 3.30572676659
y: -38.4778594971
theta: 1.64672446251
speed: 14.2628383636
id: 0
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:43


aaaaaa
risk is [0.37409671697217256, 0.2711478538677443]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: 3.30572676659
y: -38.4778594971
theta: 1.64672446251
speed: 14.2628383636
id: 0
t: 43
1546870774946
xxx after update is x: 3.67129635811
y: -37.8491363525
theta: 1.68192601204
speed: 14.130777359
id: 0
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: 3.67129635811
y: -37.8491363525
theta: 1.68192601204
speed: 14.130777359
id: 0
t: 44
1546870775013
xxx after update is x: 3.45787167549
y: -37.147315979
theta: 1.53573799133
speed: 13.8062877655
id: 0
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.0






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: 3.45787167549
y: -37.147315979
theta: 1.53573799133
speed: 13.8062877655
id: 0
t: 45
1546870775080
xxx after update is x: 3.30268263817
y: -36.8797454834
theta: 1.55806088448
speed: 13.801530838
id: 0
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.30268263817
y: -36.8797454834
theta: 1.55806088448
speed: 13.801530838
id: 0
t: 46
1546870775148
xxx after update is x: 3.40353941917
y: -35.8906021118
theta: 1.76571834087
speed: 13.820189476
id: 0
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:47




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.40353941917
y: -35.8906021118
theta: 1.76571834087
speed: 13.820189476
id: 0
t: 47
1546870775214
xxx after update is x: 3.07843351364
y: -35.2325820923
theta: 1.42470693588
speed: 13.9281682968
id: 0
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:48




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.07843351364
y: -35.2325820923
theta: 1.42470693588
speed: 13.9281682968
id: 0
t: 48
1546870775280
xxx after update is x: 3.11240410805
y: -34.6746292114
theta: 1.60851097107
speed: 14.072385788
id: 0
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times sp
theta: 4.5927066803
speed: 13.7652397156
id: 1
t: 45
1546870775274
xxx after update is x: -2.95718336105
y: 45.148475647
theta: 4.76966428757
speed: 13.8595304489
id: 1
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: -2.95718336105
y: 45.148475647
theta: 4.76966428757
speed: 13.8595304489
id: 1
t: 46
1546870775330
xxx after update is x: -3.32876563072
y: 44.4748382568
theta: 4.50975036621
speed: 13.6812849045
id: 1
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3368449343686439, 0]
222 self.state_dicts[msg.id][msg.t] is (3.4035394191741943, -35.890602111816406, 1.7657183408737183, 13.820189476013184)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: -3.32876563072
y: 44.4748382568
theta: 4.50975036621
speed: 13.6812849045
id: 1
t: 47
1546870775393
xxx after update is x: -3.57103085518
y: 43.7701263428
theta: 4.6572842598
speed: 13.7850112915
id: 1
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: -3.57103085518
y: 43.7701263428
theta: 4.6572842598
speed: 13.7850112915
id: 1
t: 48
1546870775461
xxx after update is x: -2.94431877136
y: 42.6929855347
theta: 4.73895311356
speed: 14.0499639511
id: 1
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3839698947685407, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1124041080474854, -34.67462921142578, 1.608510971069336, 14.072385787963867)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: -2.94431877136
y: 42.6929855347
theta: 4.73895311356
speed: 14.0499639511
id: 1
t: 49
1546870775536
xxx after update is x: -3.51868224144
y: 42.3963356018
theta: 4.686170578
speed: 13.842171669
id: 1
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.34504330607530226, 0]
222 self.state_dicts[msg.id][msg.t] is (2.6045172214508057, -34.55853271484375, 1.5025566816329956, 14.357354164123535)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: -3.51868224144
y: 42.3963356018
theta: 4.686170578
speed: 13.842171669
id: 1in:49




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.11240410805
y: -34.6746292114
theta: 1.60851097107
speed: 14.072385788
id: 0
t: 49
1546870775349
xxx after update is x: 2.60451722145
y: -34.5585327148
theta: 1.50255668163
speed: 14.3573541641
id: 0
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:50




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 2.60451722145
y: -34.5585327148
theta: 1.50255668163
speed: 14.3573541641
id: 0
t: 50
1546870775415
xxx after update is x: 3.02559137344
y: -33.7627105713
theta: 1.60781705379
speed: 13.8697109222
id: 0
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:51




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.02559137344
y: -33.7627105713
theta: 1.60781705379
speed: 13.8697109222
id: 0
t: 51
1546870775480
xxx after update is x: 3.27357149124
y: -33.063621521
theta: 1.32155907154
speed: 13.8821086884
id: 0
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:52




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.27357149124
y: -33.063621521
theta: 1.32155907154
speed: 13.8821086884
id: 0
t: 52
1546870775546
xxx after update is x: 2.99496388435
y: -32.1960716248
theta: 1.57972693443
speed: 13.8202581406
id: 0
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:53


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.35555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 2.99496388435
y: -32.1960716248
theta: 1.57972693443
speed: 13.8202581406
id: 0
t: 53
1546870775613
xxx after update is x: 2.43879652023
y: -31.6581630707
theta: 1.48392808437
speed: 13.9556427002
id: 0
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:54




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 2.43879652023
y: -31.6581630707
theta: 1.48392808437
speed: 13.9556427002
id: 0
t: 54
1546870775681
xxx after update is x: 3.16432118416
y: -30.7284793854
theta: 1.56154584885
speed: 14.128657341
id: 0
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:55




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.16432118416
y: -30.7284793854
theta: 1.56154584885
speed: 14.128657341
id: 0
t: 55
1546870775746
xxx after update is x: 2.79656648636
y: -30.6157455444
theta: 1.44910860062
speed: 13.8802375793
id: 0
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:56




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiii
t: 50
1546870775596
xxx after update is x: -2.89813899994
y: 42.000415802
theta: 4.46379470825
speed: 13.4845952988
id: 1
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: -2.89813899994
y: 42.000415802
theta: 4.46379470825
speed: 13.4845952988
id: 1
t: 51
1546870775669
xxx after update is x: -3.24940919876
y: 41.2915611267
theta: 4.73159408569
speed: 13.9534082413
id: 1
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.31111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:53


xxx before update is x: -3.24940919876
y: 41.2915611267
theta: 4.73159408569
speed: 13.9534082413
id: 1
t: 52
1546870775731
xxx after update is x: -2.73805856705
y: 40.7618141174
theta: 4.72971534729
speed: 13.8245353699
id: 1
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3073413507210417, 0]
222 self.state_dicts[msg.id][msg.t] is (2.9949638843536377, -32.19607162475586, 1.5797269344329834, 13.820258140563965)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: -2.73805856705
y: 40.7618141174
theta: 4.72971534729
speed: 13.8245353699
id: 1
t: 53
1546870775795
xxx after update is x: -3.15641593933
y: 40.4454078674
theta: 4.8151345253
speed: 14.0590076447
id: 1
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3201596814818344, 0]
222 self.state_dicts[msg.id][msg.t] is (2.4387965202331543, -31.65816307067871, 1.4839280843734741, 13.955642700195312)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: -3.15641593933
y: 40.4454078674
theta: 4.8151345253
speed: 14.0590076447
id: 1
t: 54
1546870775861
xxx after update is x: -2.81484055519
y: 39.2750396729
theta: 4.65669536591
speed: 13.8563146591
id: 1
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: -2.81484055519
y: 39.2750396729
theta: 4.65669536591
speed: 13.8563146591
id: 1
t: 55
1546870775928
xxx after update is x: -3.67515301704
y: 38.7147216797
theta: 4.75550985336
speed: 14.2594413757
id: 1
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.31218334186608865, 0]
222 self.state_dicts[msg.id][msg.t] is (2.7965664863586426, -30.615745544433594, 1.449108600616455, 13.880237579345703)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: -3.67515301704
y: 38.7147216797
theta: 4.75550985336
speed: 14.2594413757
id: 1
t: 56
1546870775993
xxx after update is x: -3.53172540665
y: 38.6327514648
theta: 4.64066267014
speed: 13.7828998566
id: 1
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: -3.53172540665
y: 38.6327514648
theta: 4.64066267014
speed: 13.7828998566
id: 1
t: 57
1546870776061
xxx after update is x: -3.86273932457
y: 37.6307487488
theta: 4.61068868637
speed: 14.0036773682
id: 1
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.301280380997696, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3834893703460693, -29.258209228515625, 1.534263014793396, 14.110394477844238)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: -3.86273932457
y: 37.6307487488
theta: 4.61068868637
speed: 14.0036773682
id: 1
t: 58
1546870776129
xxx after update is x: -3.18638896942
y: 36.9620437622
theta: 4.75678014755
speed: 13.889043808
id: 1
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.284835034915876, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1514792442321777, -28.16514015197754, 1.4968050718307495, 13.956917762756348)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: -3.18638896942
y: 36.9620437622
theta: 4.75678014755
speed: 13.889043808
id: 1
t: 59
1546870776194
xxx after update is x: -3.31867337227
y: 36.8107795715
theta: 4.68304777145
speed: 13.5151443481
id: 1
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.66666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: -3.31867337227
y: 36.8107795715
theta: 4.68304777145
speed: iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 2.79656648636
y: -30.6157455444
theta: 1.44910860062
speed: 13.8802375793
id: 0
t: 56
1546870775814
xxx after update is x: 3.23647141457
y: -29.2794322968
theta: 1.51127159595
speed: 13.9282360077
id: 0
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:57




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.23647141457
y: -29.2794322968
theta: 1.51127159595
speed: 13.9282360077
id: 0
t: 57
1546870775880
xxx after update is x: 3.38348937035
y: -29.2582092285
theta: 1.53426301479
speed: 14.1103944778
id: 0
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:58




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.38348937035
y: -29.2582092285
theta: 1.53426301479
speed: 14.1103944778
id: 0
t: 58
1546870775947
xxx after update is x: 3.15147924423
y: -28.165140152
theta: 1.49680507183
speed: 13.9569177628
id: 0
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:59




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.15147924423
y: -28.165140152
theta: 1.49680507183
speed: 13.9569177628
id: 0
t: 59
1546870776013
xxx after update is x: 3.86600470543
y: -27.952501297
theta: 1.45631682873
speed: 13.9495277405
id: 0
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:60


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.66666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.86600470543
y: -27.952501297
theta: 1.45631682873
speed: 13.9495277405
id: 0
t: 60
1546870776080
xxx after update is x: 3.25658345222
y: -27.3172340393
theta: 1.60476410389
speed: 13.9909887314
id: 0
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:61




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.25658345222
y: -27.3172340393
theta: 1.60476410389
speed: 13.9909887314
id: 0
t: 61
1546870776146
xxx after update is x: 3.15939974785
y: -26.6161975861
theta: 1.67008876801
speed: 13.8136339188
id: 0
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:62




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.15939974785
y: -26.6161975861
theta: 1.67008876801
speed: 13.8136339188
id: 0
t: 62
1546870776213
xxx after update is x: 3.10953903198
y: -26.1833362579
theta: 1.53470766544
speed: 13.7490968704
id: 0
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:63




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.10953903198
y: -26.1833362579
theta: 1.53470766544
speed: 13.7490968704
id: 0
t: 63
15468707713.5151443481
id: 1
t: 60
1546870776262
xxx after update is x: -2.91652607918
y: 35.5838317871
theta: 4.64082050323
speed: 13.7355155945
id: 1
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.35147010762746816, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2565834522247314, -27.31723403930664, 1.6047641038894653, 13.990988731384277)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: -2.91652607918
y: 35.5838317871
theta: 4.64082050323
speed: 13.7355155945
id: 1
t: 61
1546870776332
xxx after update is x: -3.4140856266
y: 35.292766571
theta: 4.73658466339
speed: 13.7757740021
id: 1
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.36466078329397067, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1593997478485107, -26.61619758605957, 1.670088768005371, 13.813633918762207)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: -3.4140856266
y: 35.292766571
theta: 4.73658466339
speed: 13.7757740021
id: 1
t: 62
1546870776395
xxx after update is x: -2.81709384918
y: 34.3852844238
theta: 4.7344455719
speed: 13.7680559158
id: 1
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: -2.81709384918
y: 34.3852844238
theta: 4.7344455719
speed: 13.7680559158
id: 1
t: 63
1546870776460
xxx after update is x: -3.46916413307
y: 34.4236946106
theta: 4.88877630234
speed: 13.5986356735
id: 1
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.34720278240391916, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0346710681915283, -25.274738311767578, 1.5237338542938232, 13.682100296020508)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: -3.46916413307
y: 34.4236946106
theta: 4.88877630234
speed: 13.5986356735
id: 1
t: 64
1546870776532
xxx after update is x: -3.01569008827
y: 33.0534896851
theta: 4.81336832047
speed: 13.7317686081
id: 1
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: -3.01569008827
y: 33.0534896851
theta: 4.81336832047
speed: 13.7317686081
id: 1
t: 65
1546870776600
x6280
xxx after update is x: 3.03467106819
y: -25.2747383118
theta: 1.52373385429
speed: 13.682100296
id: 0
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:64




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.03467106819
y: -25.2747383118
theta: 1.52373385429
speed: 13.682100296
id: 0
t: 64
1546870776346
xxx after update is x: 3.33997869492
y: -24.7501354218
theta: 1.60914170742
speed: 13.5354681015
id: 0
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:65




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.33997869492
y: -24.7501354218
theta: 1.60914170742
speed: 13.5354681015
id: 0
t: 65
1546870776414
xxx after update is x: 3.06525206566
y: -24.3965797424
theta: 1.46773898602
speed: 13.0120573044
id: 0
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:66




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.06525206566
y: -24.3965797424
theta: 1.46773898602
speed: 13.0120573044
id: 0
t: 66
1546870776480
xxx after update is x: 3.11476254463
y: -23.6166877747
theta: 1.70562839508
speed: 12.4525518417
id: 0
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:67




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.11476254463
y: -23.6166877747
theta: 1.70562839508
speed: 12.4525518417
id: 0
t: 67
1546870776546
xxx after update is x: 2.78949356079
y: -23.4846839905
theta: 1.67876303196
speed: 12.4745798111
id: 0
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:68


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.02222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 2.78949356079
y: -23.4846839905
theta: 1.67876303196
speed: 12.4745798111
id: 0
t: 68
1546870776613
xxx after update is x: 3.17512011528
y: -22.4422416687
theta: 1.64020729065
speed: 12.2021799088
id: 0
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:69




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.17512011528
y: -22.4422416687
theta: 1.64020729065
speed: 12.2021799088
id: 0
t: 69
1546870776679
xxx after update is x: 2.80801439285
y: -22.3542537689
theta: 1.48375272751
speed: 12.0801506042
id: 0
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:70




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 2.80801439285
y: -22.3542537689
theta: 1.48375272751
speed: 12.0801506042
id: 0
t: 70
1546870776748
xxx after update is x: 3.12752461433
y: -21.376001358
theta: 1.66490960121
speed: 11.608048439
id: 0
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion
leave thexx after update is x: -2.85954189301
y: 32.5999679565
theta: 4.76943349838
speed: 13.8867959976
id: 1
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: -2.85954189301
y: 32.5999679565
theta: 4.76943349838
speed: 13.8867959976
id: 1
t: 66
1546870776660
xxx after update is x: -2.8842561245
y: 31.7961921692
theta: 4.68170499802
speed: 13.5795669556
id: 1
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.36407222741318246, 0]
222 self.state_dicts[msg.id][msg.t] is (3.114762544631958, -23.616687774658203, 1.7056283950805664, 12.45255184173584)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.97777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: -2.8842561245
y: 31.7961921692
theta: 4.68170499802
speed: 13.5795669556
id: 1
t: 67
1546870776731
xxx after update is x: -3.39097237587
y: 31.0158863068
theta: 4.90022516251
speed: 13.4543447495
id: 1
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: -3.39097237587
y: 31.0158863068
theta: 4.90022516251
speed: 13.4543447495
id: 1
t: 68
1546870776794
xxx after update is x: -3.27554821968
y: 31.0707588196
theta: 4.79377555847
speed: 14.2414569855
id: 1
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.38690320857142674, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1751201152801514, -22.442241668701172, 1.640207290649414, 12.202179908752441)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: -3.27554821968
y: 31.0707588196
theta: 4.79377555847
speed: 14.2414569855
id: 1
t: 69
1546870776861
xxx after update is x: -3.32279658318
y: 30.4763622284
theta: 4.6077337265
speed: 14.1060676575
id: 1
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.27836187021317693, 0]
222 self.state_dicts[msg.id][msg.t] is (2.808014392852783, -22.3542537689209, 1.483752727508545, 12.080150604248047)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin fu update function 
in spin function, finish the n times spin:71




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.12752461433
y: -21.376001358
theta: 1.66490960121
speed: 11.608048439
id: 0
t: 71
1546870776813
xxx after update is x: 2.86498117447
y: -21.4885387421
theta: 1.57449913025
speed: 12.1957178116
id: 0
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:72




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 2.86498117447
y: -21.4885387421
theta: 1.57449913025
speed: 12.1957178116
id: 0
t: 72
1546870776880
xxx after update is x: 3.34115076065
y: -20.4821949005
theta: 1.548173666
speed: 11.6214265823
id: 0
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:73




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:
1546870776947
initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$


hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.34115076065
y: -20.4821949005
theta: 1.548173666
speed: 11.6214265823
id: 0
t: 73
1546870776947
xxx after update is x: 3.08584308624
y: -20.0459384918
theta: 1.59463465214
speed: 10.9022369385
id: 0
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:74


maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 1
current clock is 3.28888888889
!!!!after check statue the self.tag is [3.2888888888888888, 0, 'left']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.28888888889

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.111111111111111, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.28888888889,(3.085843086242676, -20.04593849182129, 1.5946346521377563),10,1,3.28888888889,0,left
!!!!change state to get
GET,0,3.28888888889,(3.085843086242676, -20.04593849182129, 1.5946346521377563),10,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.28888888889
self.communication_details == 0
sending GET,0,3.28888888889,(3.085843086242676, -20.04593849182129, 1.5946346521377563),10,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
finish try maneuver
Received -->>: 
current clock is 3.28888888889




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.28888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '3.15555555556', 'Position': ['(-2.88425612449646', ' 31.796192169189453', ' 4.681704998016357)'], 'Type': 'DENY'}
car 0 received DENY,1,3.15555555556,(-2.88425612449646, 31.796192169189453, 4.681704998016357),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.111111111111111, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, nction, finish the n times spin:71

xxx before update is x: -3.32279658318
y: 30.4763622284
theta: 4.6077337265
speed: 14.1060676575
id: 1
t: 70
1546870776936
xxx after update is x: -3.32719039917
y: 29.2981204987
theta: 4.60105466843
speed: 14.1355018616
id: 1
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion

Received -->>: 
current clock is 3.15555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.15555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '3.28888888889', 'IntendedCourse': 'left', 'Position': ['3.085843086242676', ' -20.04593849182129', ' 1.5946346521377563'], 'TagID': '0', 'Type': 'GET', 'Velocity': '10'}
car 1 received GET,0,3.28888888889,(3.085843086242676, -20.04593849182129, 1.5946346521377563),10,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.146172839506
sender travel direction is:  north
sender earliest entering time is:  1.83693745666
sender last entering time is:  2.24536591095
sender last leaving time is:  4.43431481563
my entering time is:  1.71563751541
my leaving time is:  4.36510219131
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.15555555556
self.communication_details == 0
sending DENY,1,3.15555555556,(-2.88425612449646, 31.796192169189453, 4.681704998016357),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: -3.32719039917
y: 29.2981204987
theta: 4.60105466843
speed: 14.1355018616
id: 1
t: 71
1546870776996
xxx after update is x: -3.77632713318
y: 29.3188896179
theta: 4.72145938873
speed: 13.5339517593
id: 1
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.378302369591682, 0]
222 self.state_dicts[msg.id][msg.t] is (2.864981174468994, -21.48853874206543, 1.5744991302490234, 12.195717811584473)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: -3.77632713318
y: 29.3188896179
theta: 4.72145938873
speed: 13.5339517593
id: 1
t: 72
1546870777064
xxx after update is x: -3.2891471386
y: 28.047624588
theta: 4.89609050751
speed: 13.7124156952
id: 1
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.24444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.24444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '10', 'Sender': '0', 'TagID': '1', 'Time': '3.37777777778', 'Position': ['(3.401055335998535', ' -19.401016235351562', ' 1.6051816new membership =  [3.111111111111111, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: 3.08584308624
y: -20.0459384918
theta: 1.59463465214
speed: 10.9022369385
id: 0
t: 74
1546870777013
xxx after update is x: 3.47194337845
y: -19.7400341034
theta: 1.6434071064
speed: 11.19211483
id: 0
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: 3.47194337845
y: -19.7400341034
theta: 1.6434071064
speed: 11.19211483
id: 0
t: 75
1546870777080
xxx after update is x: 3.401055336
y: -19.4010162354
theta: 1.60518169403
speed: 10.7425813675
id: 0
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.37777777778






self.maneuver_requested left
maneuver_negotiatir.py in the last function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.2, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 3.37777777778
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.2
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,3.37777777778,(3.401055335998535, -19.401016235351562, 1.6051816940307617),10,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 3.37777777778
self.communication_details == 0
sending RELEASE,0,3.37777777778,(3.401055335998535, -19.401016235351562, 1.6051816940307617),10,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: 3.401055336
y: -19.4010162354
theta: 1.60518169403
speed: 10.7425813675
id: 0
t: 76
1546870777181
xxx after update is x: 2.96034550667
y: -18.4809417725
theta: 1.69941413403
speed: 10.5804872513
id: 0
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 2.96034550667
y: -18.4809417725
theta: 1.69941413403
speed: 10.5804872513
id: 0
t: 77
1546870777216
xxx after update is x: 3.29088497162
y: -18.4782600403
theta: 1.5481210947
speed: 9.80865383148
id: 0
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:78




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.29088497162
y: -18.4782600403
theta: 1.5481210947
speed: 9.80865383148
id: 0
t: 78
1546870777280
xxx after update is x: 3.09578585625
y: -17.8433189392
theta: 1.77422475815
speed: 9.90717411041
id: 0
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the 940307617)'], 'Type': 'RELEASE'}

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: -3.2891471386
y: 28.047624588
theta: 4.89609050751
speed: 13.7124156952
id: 1
t: 73
1546870777134
xxx after update is x: -3.24930906296
y: 28.1178836823
theta: 4.79596662521
speed: 13.6046257019
id: 1
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion

car 1 received RELEASE,0,3.37777777778,(3.401055335998535, -19.401016235351562, 1.6051816940307617),10,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




aaaaaa
aaaaaabbbbb
risk is [0.3477378813051438, 0]
222 self.state_dicts[msg.id][msg.t] is (3.085843086242676, -20.04593849182129, 1.5946346521377563, 10.902236938476562)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: -3.24930906296
y: 28.1178836823
theta: 4.79596662521
speed: 13.6046257019
id: 1
t: 74
1546870777196
xxx after update is x: -3.48481822014
y: 26.9342880249
theta: 4.65008831024
speed: 13.9371728897
id: 1
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.33333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: -3.48481822014
y: 26.9342880249
theta: 4.65008831024
speed: 13.9371728897
id: 1
t: 75
1546870777261
xxx after update is x: -3.71641659737
y: 26.9623126984
theta: 4.65583992004
speed: 13.8639783859
id: 1
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3322226932129916, 0]
222 self.state_dicts[msg.id][msg.t] is (3.401055335998535, -19.401016235351562, 1.6051816940307617, 10.742581367492676)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: -3.71641659737
y: 26.9623126984
theta: 4.65583992004
speed: 13.8639783859
id: 1
t: 76
1546870777333
xxx after update is x: -2.98119616508
y: 25.9079837799
theta: 4.78768014908
speed: 14.1056222916
id: 1
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.2570803459377345, 0]
222 self.state_dicts[msg.id][msg.t] is (2.960345506668091, -18.480941772460938, 1.6994141340255737, 10.580487251281738)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sn times spin:79




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.09578585625
y: -17.8433189392
theta: 1.77422475815
speed: 9.90717411041
id: 0
t: 79
1546870777346
xxx after update is x: 3.48485374451
y: -17.5703163147
theta: 1.61933839321
speed: 9.82382392883
id: 0
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:80




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.48485374451
y: -17.5703163147
theta: 1.61933839321
speed: 9.82382392883
id: 0
t: 80
1546870777415
xxx after update is x: 3.59032440186
y: -16.8344745636
theta: 1.37354528904
speed: 9.65242862701
id: 0
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:81




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.59032440186
y: -16.8344745636
theta: 1.37354528904
speed: 9.65242862701
id: 0
t: 81
1546870777480
xxx after update is x: 3.39017820358
y: -16.392578125
theta: 1.40338587761
speed: 9.2657957077
id: 0
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:82




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.39017820358
y: -16.392578125
theta: 1.40338587761
speed: 9.2657957077
id: 0
t: 82
1546870777546
xxx after update is x: 2.99758243561
y: -16.0544033051
theta: 1.5838971138
speed: 9.16215705872
id: 0
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:83




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 2.99758243561
y: -16.0544033051
theta: 1.5838971138
speed: 9.16215705872
id: 0
t: 83
1546870777614
xxx after update is x: 3.06460690498
y: -15.0296869278
theta: 1.59705138206
speed: 8.84656620026
id: 0
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:84


maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.73333333333

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.6, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.73333333333,(3.0646069049835205, -15.02968692779541, 1.5970513820648193),8,1,3.28888888889,0,left
!!!!change state to get
GET,0,3.73333333333,(3.0646069049835205, -15.02968692779541, 1.5970513820648193),8,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.73333333333
self.communication_details == 0
sending GET,0,3.73333333333,(3.0646069049835205, -15.02968692779541, 1.5970513820648193),8,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.98119616508
y: 25.9079837799
theta: 4.78768014908
speed: 14.1056222916
id: 1
t: 77
1546870777395
xxx after update is x: -3.48625707626
y: 25.5891857147
theta: 4.73068714142
speed: 14.3638238907
id: 1
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:78




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: -3.48625707626
y: 25.5891857147
theta: 4.73068714142
speed: 14.3638238907
id: 1
t: 78
1546870777461
xxx after update is x: -3.13333654404
y: 25.1609191895
theta: 4.67588233948
speed: 14.1388444901
id: 1
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.2922254429367256, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0957858562469482, -17.843318939208984, 1.7742247581481934, 9.907174110412598)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:80


xxx before update is x: -3.13333654404
y: 25.1609191895
theta: 4.67588233948
speed: 14.1388444901
id: 1
t: 79
1546870777528
xxx after update is x: -2.69950699806
y: 23.6918621063
theta: 4.63936567307
speed: 13.887295723
id: 1
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: -2.69950699806
y: 23.6918621063
theta: 4.63936567307
speed: 13.887295723
id: 1
t: 80
1546870777594
xxx after update is x: -2.85158395767
y: 23.5814189911
theta: 4.78916692734
speed: 13.7674036026
id: 1
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.27442280007676967, 0]
222 self.state_dicts[msg.id][msg.t] is (3.5903244018554688, -16.834474563598633, 1.3735452890396118, 9.65242862701416)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: -2.85158395767
y: 23.5814189911
theta: 4.78916692734
speed: 13.7674036026
id: 1
t: 81
1546870777660
xxx after update is x: -2.82118725777
y: 23.0894527435
theta: 4.81762266159
speed: 13.6843070984
id: 1
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.64444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.64444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '3.73333333333', 'IntendedCourse': 'left', 'Position': ['3.0646069049835205', ' -15.02968692779541', ' 1.5970513820648193'], 'TagID': '0', 'Type': 'GET', 'Velocity': '8'}
car 1 received GET,0,3.73333333333,(3.0646069049835205, -15.02968692779541, 1.5970513820648193),8,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.165925925926
sender travel direction is:  north
sender earliest entering time is:  1.34833668455
sender last entering time is:  2.16592592593
sender last leaving time is:  4.53922418235
my entering time is:  1.29192207902
my leaving time is:  3.49791823211
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.64444444444
self.communication_details == 0
sending DENY,1,3.64444444444,(-3.48481822013855, 26.934288024902344, 4.650088310241699),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




Received -->>: 
current clock is 3.64444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.64444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '8', 'Sender': '0', 'TagID': '1', 'Time': '3.77777777778', 'Position': ['(3.02669358253479', ' -15.266971588134766', ' 1.7082065343856812)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,3.77777777778,(3.02669358253479, -15.266971588134766, 1.7082065343856812),8,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




aaaaaa
aaaaaabbbbb
risk is [0.18444642254257046, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3901782035827637, -16.392578125, 1.403385877609253, 9.265795707702637)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:83


xxx before update is x: -2.82118725777
y: 23.0894527435
theta: 4.81762266159
speed: 13.6843070984
id: 1
t: 82
1546870777728
xxx after update is x: -3.23444867134
y: 22.2018089294
theta: 4.60158824921
speed: 13.7110700607
id: 1
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.68888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: -3.23444867134
y: 22.2018089294
theta: 4.60158824921
speed: 13.7110700607
id: 1
t: 83
1546870777794
xxx after update is x: -3.22848057747
y: 21.6693115234
theta: 4.69664669037
speed: 13.5303888321
id: 1
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.2689278437472709, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0646069049835205, -15.02968692779541, 1.5970513820648193, 8.846566200256348)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.06460690498
y: -15.0296869278
theta: 1.59705138206
speed: 8.84656620026
id: 0
t: 84
1546870777681
xxx after update is x: 3.02669358253
y: -15.2669715881
theta: 1.70820653439
speed: 8.40605926514
id: 0
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:85


finish try maneuver
Received -->>: 
current clock is 3.77777777778




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.77777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '3.64444444444', 'Position': ['(-3.48481822013855', ' 26.934288024902344', ' 4.650088310241699)'], 'Type': 'DENY'}
car 0 received DENY,1,3.64444444444,(-3.48481822013855, 26.934288024902344, 4.650088310241699),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.6, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.6, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.77777777778






self.maneuver_requested left
maneuver_negotiatir.py in the last function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.6, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 3.77777777778
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.6
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,3.77777777778,(3.02669358253479, -15.266971588134766, 1.7082065343856812),8,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 3.77777777778
self.communication_details == 0
sending RELEASE,0,3.77777777778,(3.02669358253479, -15.266971588134766, 1.7082065343856812),8,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: 3.02669358253
y: -15.2669715881
theta: 1.70820653439
speed: 8.40605926514
id: 0
t: 85
1546870777746
xxx after update is x: 3.63008666039
y: -14.4214172363
theta: 1.63076019287
speed: 8.3370885849
id: 0
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: 3.63008666039
y: -14.4214172363
theta: 1.63076019287
speed: 8.3370885849
id: 0
t: 86
1546870777813
xxx after update is x: 3.19266724586
y: -14.3803024292
theta: 1.49123334885
speed: 7.98248624802
id: 0
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stoppppppppiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.22848057747
y: 21.6693115234
theta: 4.69664669037
speed: 13.5303888321
id: 1
t: 84
1546870777863
xxx after update is x: -2.93386816978
y: 20.6408348083
theta: 4.66499567032
speed: 13.9419488907
id: 1
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:85


aaaaaa
aaaaaabbbbb
risk is [0.319437984852234, 0]
222 self.state_dicts[msg.id][msg.t] is (3.02669358253479, -15.266971588134766, 1.7082065343856812, 8.406059265136719)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: -2.93386816978
y: 20.6408348083
theta: 4.66499567032
speed: 13.9419488907
id: 1
t: 85
1546870777936
xxx after update is x: -3.70863604546
y: 19.8572597504
theta: 4.68966436386
speed: 13.7202911377
id: 1
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: -3.70863604546
y: 19.8572597504
theta: 4.68966436386
speed: 13.7202911377
id: 1
t: 86
1546870777995
xxx after update is x: -3.30185008049
y: 19.7558917999
theta: 4.77767944336
speed: 13.6817932129
id: 1
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.30185008049
y: 19.7558917999
theta: 4.77767944336
speed: 13.6817932129
id: 1
t: 87
1546870778065
xxx after update is x: -3.42525291443
y: 18.8440513611
theta: 4.71990537643
speed: 13.9489383698
id: 1
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:88


aaaaaa
aaaaaabbbbb
risk is [0.23761578294043964, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2055275440216064, -14.22356128692627, 1.6097549200057983, 7.707208633422852)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: -3.42525291443
y: 18.8440513611
theta: 4.71990537643
speed: 13.9489383698
id: 1
t: 88
1546870778129
xxx after update is x: -3.91109395027
y: 18.6485366821
theta: 4.58792638779
speed: 13.8739099503
id: 1
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.09826744529227503, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3980796337127686, -13.259523391723633, 1.4953794479370117, 7.839208126068115)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
xxx before update is x: 3.19266724586
y: -14.3803024292
theta: 1.49123334885
speed: 7.98248624802
id: 0
t: 87
1546870777880
xxx after update is x: 3.20552754402
y: -14.2235612869
theta: 1.60975492001
speed: 7.70720863342
id: 0
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:88




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.20552754402
y: -14.2235612869
theta: 1.60975492001
speed: 7.70720863342
id: 0
t: 88
1546870777946
xxx after update is x: 3.39807963371
y: -13.2595233917
theta: 1.49537944794
speed: 7.83920812607
id: 0
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:89




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.39807963371
y: -13.2595233917
theta: 1.49537944794
speed: 7.83920812607
id: 0
t: 89
1546870778013
xxx after update is x: 3.23344302177
y: -13.6319789886
theta: 1.39581477642
speed: 7.60837078094
id: 0
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:90




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.23344302177
y: -13.6319789886
theta: 1.39581477642
speed: 7.60837078094
id: 0
t: 90
1546870778081
xxx after update is x: 3.08648610115
y: -13.0329875946
theta: 1.54430019855
speed: 7.16244697571
id: 0
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:91




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.08648610115
y: -13.0329875946
theta: 1.54430019855
speed: 7.16244697571
id: 0
t: 91
1546870778146
xxx after update is x: 3.04942274094
y: -12.2537965775
theta: 1.62888514996
speed: 7.3936548233
id: 0
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:92


maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 4.08888888889

maneuver_negotiatir.py get membership, in the get_MR function, start
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.08888888889
membership is [3.911111111111111, True, ['1']]





self.maneuver_requested left

maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.08888888889,(3.0494227409362793, -12.253796577453613, 1.6288851499557495),7,1,3.28888888889,0,left
!!!!change state to get
GET,0,4.08888888889,(3.0494227409362793, -12.253796577453613, 1.6288851499557495),7,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 4.08888888889
self.communication_details == 0
sending GET,0,4.08888888889,(3.0494227409362793, -12.253796577453613, 1.6288851499557495),7,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish
finish try maneuver
Received -->>: 
current clock is 4.08888888889




maneuver_negiiiiiiiiiReceived -->>: 
current clock is 3.95555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.95555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '4.08888888889', 'IntendedCourse': 'left', 'Position': ['3.0494227409362793', ' -12.253796577453613', ' 1.6288851499557495'], 'TagID': '0', 'Type': 'GET', 'Velocity': '7'}
car 1 received GET,0,4.08888888889,(3.0494227409362793, -12.253796577453613, 1.6288851499557495),7,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.181728395062
sender travel direction is:  north
sender earliest entering time is:  1.00512847004
sender last entering time is:  2.18172839506
sender last leaving time is:  4.55502665149
my entering time is:  0.987978591731
my leaving time is:  2.8742287884
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.95555555556
self.communication_details == 0
sending DENY,1,3.95555555556,(-3.2344486713409424, 22.20180892944336, 4.601588249206543),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1





mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.91109395027
y: 18.6485366821
theta: 4.58792638779
speed: 13.8739099503
id: 1
t: 89
1546870778197
xxx after update is x: -3.44344878197
y: 17.8161964417
theta: 4.60393619537
speed: 13.9834489822
id: 1
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:90


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.0






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: -3.44344878197
y: 17.8161964417
theta: 4.60393619537
speed: 13.9834489822
id: 1
t: 90
1546870778262
xxx after update is x: -3.58461070061
y: 17.3766536713
theta: 4.81161165237
speed: 13.7391386032
id: 1
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.26154479793429836, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0864861011505127, -13.032987594604492, 1.5443001985549927, 7.162446975708008)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:92


xxx before update is x: -3.58461070061
y: 17.3766536713
theta: 4.81161165237
speed: 13.7391386032
id: 1
t: 91
1546870778328
xxx after update is x: -3.1562371254
y: 16.5834655762
theta: 4.58988189697
speed: 13.8695831299
id: 1
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiotiatir.py message_processing, it's a long code, start...0




current clock is 4.08888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '3.95555555556', 'Position': ['(-3.2344486713409424', ' 22.20180892944336', ' 4.601588249206543)'], 'Type': 'DENY'}
car 0 received DENY,1,3.95555555556,(-3.2344486713409424, 22.20180892944336, 4.601588249206543),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.911111111111111, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.911111111111111, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: 3.04942274094
y: -12.2537965775
theta: 1.62888514996
speed: 7.3936548233
id: 0
t: 92
1546870778213
xxx after update is x: 3.07067847252
y: -11.9625854492
theta: 1.78565239906
speed: 7.15801095963
id: 0
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: 3.07067847252
y: -11.9625854492
theta: 1.78565239906
speed: 7.15801095963
id: 0
t: 93
1546870778280
xxx after update is x: 3.56477332115
y: -12.1785526276
theta: 1.3569175005
speed: 6.31047201157
id: 0
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.56477332115
y: -12.1785526276
theta: 1.3569175005
speed: 6.31047201157
id: 0
t: 94
1546870778346
xxx after update is x: 2.94144797325
y: -11.3151187897
theta: 1.37853467464
speed: 6.19522857666
id: 0
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:95




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 2.94144797325
y: -11.3151187897
theta: 1.37853467464
speed: 6.19522857666
id: 0
t: 95
1546870778415
xxx after update is x: 3.22417736053
y: -11.3905611038
theta: 1.44657540321
speed: 5.9171795845
id: 0
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:96




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.22417736053
y: -11.3905611038
theta: 1.44657540321
speed: 5.9171795845
id: 0
t: 96
1546870778481
xxx after update is x: 3.57778501511
y: -10.4746227264
theta: 1.43896901608
speed: 6.0908741951
id: 0
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:97




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: -3.1562371254
y: 16.5834655762
theta: 4.58988189697
speed: 13.8695831299
id: 1
t: 92
1546870778394
xxx after update is x: -2.9672896862
y: 16.4059333801
theta: 4.65126132965
speed: 14.3158769608
id: 1
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.22471435146251553, 0]
222 self.state_dicts[msg.id][msg.t] is (3.070678472518921, -11.96258544921875, 1.7856523990631104, 7.158010959625244)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.9672896862
y: 16.4059333801
theta: 4.65126132965
speed: 14.3158769608
id: 1
t: 93
1546870778463
xxx after update is x: -3.57877802849
y: 15.2270088196
theta: 4.8270573616
speed: 13.771487236
id: 1
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:94


aaaaaa
aaaaaabbbbb
risk is [0.24816006141175556, 0]
222 self.state_dicts[msg.id][msg.t] is (3.5647733211517334, -12.178552627563477, 1.3569175004959106, 6.310472011566162)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: -3.57877802849
y: 15.2270088196
theta: 4.8270573616
speed: 13.771487236
id: 1
t: 94
1546870778528
xxx after update is x: -3.22469520569
y: 15.4962348938
theta: 4.84255456924
speed: 13.4748687744
id: 1
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: -3.22469520569
y: 15.4962348938
theta: 4.84255456924
speed: 13.4748687744
id: 1
t: 95
1546870778596
xxx after update is x: -2.95396113396
y: 13.7349643707
theta: 4.73928260803
speed: 13.9869098663
id: 1
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.20965707900170807, 0]
222 self.state_dicts[msg.id][msg.t] is (3.224177360534668, -11.3905611038208, 1.446575403213501, 5.917179584503174)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.95396113396
y: 13.7349643707
theta: 4.73928260803
speed: 13.9869098663
id: 1
t: 96
1546870778665
xxx after update is x: -3.12248682976
y: 13.7090406418
theta: 4.92573738098
speed: 14.0988759995
id: 1
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:97


Received -->>: 
current clock is 4.31111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.31111111111
maneuver_negotiatir.py message_processiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.57778501511
y: -10.4746227264
theta: 1.43896901608
speed: 6.0908741951
id: 0
t: 97
1546870778547
xxx after update is x: 3.56695175171
y: -10.4865112305
theta: 1.28001701832
speed: 5.19653224945
id: 0
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:98




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.56695175171
y: -10.4865112305
theta: 1.28001701832
speed: 5.19653224945
id: 0
t: 98
1546870778613
xxx after update is x: 3.32143759727
y: -10.5251922607
theta: 1.72743535042
speed: 5.56683778763
id: 0
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:99




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.32143759727
y: -10.5251922607
theta: 1.72743535042
speed: 5.56683778763
id: 0
t: 99
1546870778680
xxx after update is x: 3.11582803726
y: -10.0364303589
theta: 1.5439363718
speed: 5.35961389542
id: 0
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:100


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.44444444444






self.maneuver_requested left
maneuver_negotiatir.py in the last function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.266666666666667, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.44444444444
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.26666666667
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,4.44444444444,(3.115828037261963, -10.036430358886719, 1.5439363718032837),5,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 4.44444444444
self.communication_details == 0
sending RELEASE,0,4.44444444444,(3.115828037261963, -10.036430358886719, 1.5439363718032837),5,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: 3.11582803726
y: -10.0364303589
theta: 1.5439363718
speed: 5.35961389542
id: 0
t: 100
1546870778746
xxx after update is x: 3.54680538177
y: -10.0777721405
theta: 1.74877929688
speed: 4.86416578293
id: 0
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.54680538177
y: -10.0777721405
theta: 1.74877929688
speed: 4.86416578293
id: 0
t: 101
1546870778813
xxx after update is x: 3.05288553238
y: -9.4905128479
theta: 1.69918549061
speed: 4.91541099548
id: 0
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:102




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.05288553238
y: -9.4905128479
theta: 1.69918549061
speed: 4.91541099548
iding, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '5', 'Sender': '0', 'TagID': '1', 'Time': '4.44444444444', 'Position': ['(3.115828037261963', ' -10.036430358886719', ' 1.5439363718032837)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.44444444444,(3.115828037261963, -10.036430358886719, 1.5439363718032837),5,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




aaaaaa
aaaaaabbbbb
risk is [0.15300738367146052, 0]
222 self.state_dicts[msg.id][msg.t] is (3.577785015106201, -10.47462272644043, 1.4389690160751343, 6.090874195098877)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: -3.12248682976
y: 13.7090406418
theta: 4.92573738098
speed: 14.0988759995
id: 1
t: 97
1546870778732
xxx after update is x: -3.30199599266
y: 12.6835660934
theta: 4.67138576508
speed: 13.3521099091
id: 1
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.35555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: -3.30199599266
y: 12.6835660934
theta: 4.67138576508
speed: 13.3521099091
id: 1
t: 98
1546870778798
xxx after update is x: -3.18457078934
y: 12.3978586197
theta: 4.72823810577
speed: 14.1448907852
id: 1
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3082124631612573, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3214375972747803, -10.525192260742188, 1.7274353504180908, 5.566837787628174)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: -3.18457078934
y: 12.3978586197
theta: 4.72823810577
speed: 14.1448907852
id: 1
t: 99
1546870778860
xxx after update is x: -3.93648505211
y: 11.6123628616
theta: 4.75879144669
speed: 13.8002586365
id: 1
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: -3.93648505211
y: 11.6123628616
theta: 4.75879144669
speed: 13.8002586365
id: 1
t: 100
1546870778931
xxx after update is x: -3.08854699135
y: 11.3450803757
theta: 4.4857468605
speed: 14.0017795563
id: 1
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.43648724359611096, 0]
222 self.state_dicts[msg.id][msg.t] is (3.5468053817749023, -10.07777214050293, 1.748779296875, 4.864165782928467)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: -3.08854699135
y: 11.3450803757
theta: 4.4857468605
speed: 14.0017795563
id: 1
t: 101
1546870778995
xxx after update is x: -2.98356437683
y: 10.9519586563
theta: 4.78103303909
speed: 13.6558265686
id: 1
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4313623718371149, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0528855323791504, -9.49051284790039, 1.6991854906082153, 4.915410995483398)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: -2.98356437683
y: 10.9519586563
theta: 4.78103303909
speed: 13.6558265686
id: 1
t: 102
1546870779061
xxx after update is x: -3.57144927979
y: 9.92189788818
theta: 4.77520847321
speed: 14.2092828751
id: 1
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: -3.57144927979
y: 9.92189788818
theta: 4.77520847321
speed: 14.2092828751
id: 1
t: 103
1546870779128
xxx after update is x: -3.46763491631
y: 9.65865516663
theta: 4.79541063309
speed: 13.8873386383
id: 1
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4670569223823728, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3925187587738037, -9.655213356018066, 1.525993824005127, 4.644072532653809)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:105


xxx before update is x: -3.46763491631
y: 9.65865516663
theta: 4.79541063309
speed: 13.8873386383
id: 1
t: 104
1546870779193
xxx after update is x: -3.38406252861
y: 8.60108947754
theta: 4.6562833786
speed: 13.9164686203
id: 1
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.66666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.66666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '4.75555555556', 'IntendedCourse': 'left', 'Position': ['2.794185161590576', ' -8.162056922912598', ' 1.5115275382995605'], 'TagID': '0', 'Type': 'GET', 'Velocity': '3'}
car 1 received GET,0,4.75555555556,(2.794185161590576, -8.162056922912598, 1.5115275382995605),3,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , st: 0
t: 102
1546870778880
xxx after update is x: 3.73899936676
y: -9.84204483032
theta: 1.44528877735
speed: 4.80576848984
id: 0
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:103




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.73899936676
y: -9.84204483032
theta: 1.44528877735
speed: 4.80576848984
id: 0
t: 103
1546870778947
xxx after update is x: 3.39251875877
y: -9.65521335602
theta: 1.52599382401
speed: 4.64407253265
id: 0
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:104




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.39251875877
y: -9.65521335602
theta: 1.52599382401
speed: 4.64407253265
id: 0
t: 104
1546870779015
xxx after update is x: 3.76312017441
y: -9.61028766632
theta: 1.61057186127
speed: 3.89283871651
id: 0
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:105




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.76312017441
y: -9.61028766632
theta: 1.61057186127
speed: 3.89283871651
id: 0
t: 105
1546870779079
xxx after update is x: 3.24179315567
y: -9.63218784332
theta: 1.67607116699
speed: 3.73616147041
id: 0
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:106




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.24179315567
y: -9.63218784332
theta: 1.67607116699
speed: 3.73616147041
id: 0
t: 106
1546870779146
xxx after update is x: 2.79418516159
y: -8.16205692291
theta: 1.5115275383
speed: 3.73238182068
id: 0
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:107


maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 4.75555555556

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.5777777777777775, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.75555555556,(2.794185161590576, -8.162056922912598, 1.5115275382995605),3,1,3.28888888889,0,left
!!!!change state to get
GET,0,4.75555555556,(2.794185161590576, -8.162056922912598, 1.5115275382995605),3,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 4.75555555556
self.communication_details == 0
sending GET,0,4.75555555556,(2.794185161590576, -8.162056922912598, 1.5115275382995605),3,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.75555555556






self.maneuver_requested left
maneuver_negotiatir.py in the last function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0
finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
cuart
current time is  0.211358024692
sender travel direction is:  north
sender earliest entering time is:  0.421577575983
sender last entering time is:  2.21135802469
sender last leaving time is:  4.58465628112
my entering time is:  0.293957910316
my leaving time is:  1.45679190825
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 4.66666666667
self.communication_details == 0
sending DENY,1,4.66666666667,(-3.3019959926605225, 12.683566093444824, 4.671385765075684),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: -3.38406252861
y: 8.60108947754
theta: 4.6562833786
speed: 13.9164686203
id: 1
t: 105
1546870779260
xxx after update is x: -3.06358933449
y: 7.86188316345
theta: 4.68699598312
speed: 13.875038147
id: 1
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3129101686030231, 0]
222 self.state_dicts[msg.id][msg.t] is (3.241793155670166, -9.632187843322754, 1.6760711669921875, 3.736161470413208)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.71111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: -3.06358933449
y: 7.86188316345
theta: 4.68699598312
speed: 13.875038147
id: 1
t: 106
1546870779329
xxx after update is x: -3.16334939003
y: 7.88443994522
theta: 4.6891040802
speed: 13.6532115936
id: 1
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.6747834560597021, 0]
222 self.state_dicts[msg.id][msg.t] is (2.794185161590576, -8.162056922912598, 1.5115275382995605, 3.732381820678711)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: -3.16334939003
y: 7.88443994522
theta: 4.6891040802
speed: 13.6532115936
id: 1
t: 107
1546870779394
xxx after update is x: -3.37710189819
y: 6.75459623337
theta: 4.52764606476
speed: 13.721323967
id: 1
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4535186096103094, 0]
222 self.state_dicts[msg.id][msg.t] is (3.697819471359253, -8.62938404083252, 1.5439480543136597, 3.209663152694702)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
rrent clock is 4.75555555556




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 4.75555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '4.66666666667', 'Position': ['(-3.3019959926605225', ' 12.683566093444824', ' 4.671385765075684)'], 'Type': 'DENY'}
car 0 received DENY,1,4.66666666667,(-3.3019959926605225, 12.683566093444824, 4.671385765075684),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.5777777777777775, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [4.5777777777777775, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 2.79418516159
y: -8.16205692291
theta: 1.5115275383
speed: 3.73238182068
id: 0
t: 107
1546870779215
xxx after update is x: 3.69781947136
y: -8.62938404083
theta: 1.54394805431
speed: 3.20966315269
id: 0
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:108




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.69781947136
y: -8.62938404083
theta: 1.54394805431
speed: 3.20966315269
id: 0
t: 108
1546870779280
xxx after update is x: 2.95231437683
y: -8.5365819931
theta: 1.43726587296
speed: 3.33464598656
id: 0
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:109




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 2.95231437683
y: -8.5365819931
theta: 1.43726587296
speed: 3.33464598656
id: 0
t: 109
1546870779347
xxx after update is x: 3.78870391846
y: -8.76078414917
theta: 1.62336134911
speed: 3.41321611404
id: 0
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:110




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.78870391846
y: -8.76078414917
theta: 1.62336134911
speed: 3.41321611404
id: 0
t: 110
1546870779414
xxx after update is x: 2.92520737648
y: -7.75511932373
theta: 1.60549509525
speed: 2.62876319885
id: 0
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:111




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 2.92520737648
y: -7.75511932373
theta: 1.60549509525
speed: 2.62876319885
id: 0
t: 111
1546870779479
xxx after update is x: 3.09102845192
y: -7.98479032516
theta: 1.46519041061
speed: 2.45649194717
id: 0
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:112




going to the update function
sim.py in theleave the update function xxx before update is x: -3.37710189819
y: 6.75459623337
theta: 4.52764606476
speed: 13.721323967
id: 1
t: 108
1546870779461
xxx after update is x: -2.98452425003
y: 6.1565117836
theta: 4.86322164536
speed: 13.5646800995
id: 1
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:109




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:110


xxx before update is x: -2.98452425003
y: 6.1565117836
theta: 4.86322164536
speed: 13.5646800995
id: 1
t: 109
1546870779536
xxx after update is x: -3.46581625938
y: 5.73729562759
theta: 4.70333242416
speed: 13.7206344604
id: 1
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3430152616366638, 0]
222 self.state_dicts[msg.id][msg.t] is (3.7887039184570312, -8.760784149169922, 1.623361349105835, 3.4132161140441895)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:111


xxx before update is x: -3.46581625938
y: 5.73729562759
theta: 4.70333242416
speed: 13.7206344604
id: 1
t: 110
1546870779594
xxx after update is x: -3.71787858009
y: 4.80968332291
theta: 4.82266378403
speed: 14.0017709732
id: 1
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.2015027308487514, 0]
222 self.state_dicts[msg.id][msg.t] is (2.9252073764801025, -7.755119323730469, 1.6054950952529907, 2.628763198852539)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:112


xxx before update is x: -3.71787858009
y: 4.80968332291
theta: 4.82266378403
speed: 14.0017709732
id: 1
t: 111
1546870779662
xxx after update is x: -3.39098834991
y: 4.4093914032
theta: 4.84509134293
speed: 14.1254434586
id: 1
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.97777777778




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.97777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '2', 'Sender': '0', 'TagID': '1', 'Time': '5.11111111111', 'Position': ['(2.8268063068389893', ' -7.369653224945068', ' 1.543704628944397)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,5.11111111111,(2.8268063068389893, -7.369653224945068, 1.543704628944397),2,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:113


xxx before update is x: -3.39098834991
y: 4.4093914032
theta: 4.84509134293
speed: 14.1254434586
id: 1
t: 112
1546870779730
xxx after update  sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.09102845192
y: -7.98479032516
theta: 1.46519041061
speed: 2.45649194717
id: 0
t: 112
1546870779546
xxx after update is x: 3.0113568306
y: -7.92824029922
theta: 1.56387960911
speed: 2.40044498444
id: 0
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:113




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.0113568306
y: -7.92824029922
theta: 1.56387960911
speed: 2.40044498444
id: 0
t: 113
1546870779613
xxx after update is x: 2.79722714424
y: -8.38156604767
theta: 1.63920104504
speed: 2.36136674881
id: 0
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:114




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 2.79722714424
y: -8.38156604767
theta: 1.63920104504
speed: 2.36136674881
id: 0
t: 114
1546870779680
xxx after update is x: 2.82680630684
y: -7.36965322495
theta: 1.54370462894
speed: 2.16324496269
id: 0
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:115


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.11111111111






self.maneuver_requested left
maneuver_negotiatir.py in the last function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.933333333333334, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 5.11111111111
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.93333333333
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,5.11111111111,(2.8268063068389893, -7.369653224945068, 1.543704628944397),2,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 5.11111111111
self.communication_details == 0
sending RELEASE,0,5.11111111111,(2.8268063068389893, -7.369653224945068, 1.543704628944397),2,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: 2.82680630684
y: -7.36965322495
theta: 1.54370462894
speed: 2.16324496269
id: 0
t: 115
1546870779747
xxx after update is x: 3.33048701286
y: -7.83981895447
theta: 1.57881188393
speed: 1.73318040371
id: 0
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.33048701286
y: -7.83981895447
theta: 1.57881188393
speed: 1.73318040371
id: 0
t: 116
1546870779815
xxx after update is x: 3.53200030327
y: -7.18521308899
theta: 1.71670556068
speed: 1.0798279047
id: 0
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:117




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.is x: -3.00603795052
y: 3.92309713364
theta: 4.66556692123
speed: 13.7614002228
id: 1
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.6675503478584127, 0]
222 self.state_dicts[msg.id][msg.t] is (3.011356830596924, -7.9282402992248535, 1.5638796091079712, 2.400444984436035)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.02222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: -3.00603795052
y: 3.92309713364
theta: 4.66556692123
speed: 13.7614002228
id: 1
t: 113
1546870779794
xxx after update is x: -2.70999622345
y: 3.41247916222
theta: 4.7202835083
speed: 13.8946266174
id: 1
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.70999622345
y: 3.41247916222
theta: 4.7202835083
speed: 13.8946266174
id: 1
t: 114
1546870779862
xxx after update is x: -4.06501865387
y: 2.29513263702
theta: 4.79515266418
speed: 13.5857934952
id: 1
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:115


aaaaaa
aaaaaabbbbb
risk is [0.34244832080622056, 0]
222 self.state_dicts[msg.id][msg.t] is (2.8268063068389893, -7.369653224945068, 1.543704628944397, 2.1632449626922607)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: -4.06501865387
y: 2.29513263702
theta: 4.79515266418
speed: 13.5857934952
id: 1
t: 115
1546870779932
xxx after update is x: -3.02324223518
y: 1.73598706722
theta: 4.79224920273
speed: 13.8417062759
id: 1
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.2174036827184813, 0]
222 self.state_dicts[msg.id][msg.t] is (3.330487012863159, -7.839818954467773, 1.5788118839263916, 1.7331804037094116)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: -3.02324223518
y: 1.73598706722
theta: 4.79224920273
speed: 13.8417062759
id: 1
t: 116
1546870779993
xxx after update is x: -3.3994448185
y: 0.83577644825
theta: 4.65200567245
speed: 14.3497676849
id: 1
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.401200370982784, 0]
222 self.state_dicts[msg.id][msg.t] is (3.5320003032684326, -7.185213088989258, 1.716705560684204, 1.079827904701233)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_stat53200030327
y: -7.18521308899
theta: 1.71670556068
speed: 1.0798279047
id: 0
t: 117
1546870779880
xxx after update is x: 3.34476852417
y: -7.3150844574
theta: 1.6125805378
speed: 1.0516769886
id: 0
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:118




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.34476852417
y: -7.3150844574
theta: 1.6125805378
speed: 1.0516769886
id: 0
t: 118
1546870779947
xxx after update is x: 2.92881512642
y: -7.1888756752
theta: 1.66557872295
speed: 0.957867443562
id: 0
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:119




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 2.92881512642
y: -7.1888756752
theta: 1.66557872295
speed: 0.957867443562
id: 0
t: 119
1546870780013
xxx after update is x: 3.48438262939
y: -7.36308193207
theta: 1.55848872662
speed: 0.874342978001
id: 0
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:120




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 3.48438262939
y: -7.36308193207
theta: 1.55848872662
speed: 0.874342978001
id: 0
t: 120
1546870780081
xxx after update is x: 2.73142170906
y: -7.76787185669
theta: 1.60205698013
speed: 0.353663772345
id: 0
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:121




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
stopppppppp
xxx before update is x: 2.73142170906
y: -7.76787185669
theta: 1.60205698013
speed: 0.353663772345
id: 0
t: 121
1546870780147
xxx after update is x: 3.03561997414
y: -7.71496152878
theta: 1.60610091686
speed: -0.112911500037
id: 0
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:122


maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 5.42222222222

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.2444444444444445, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
Empty
self.agents_to_ask is []
message is :GET,0,5.42222222222,(3.0356199741363525, -7.714961528778076, 1.6061009168624878),0,1,3.28888888889,0,left
!!!!change state to get
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.42222222222






self.maneuver_requested left
maneuver_negotiatir.py in the last function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.2444444444444445, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 5.42222222222
(RATE*SLOWDOWN) is 22.5
MR[0] is 5.24444444444
self.TMan is 5
Empty
self.agents_to_ask is []
stopped retry timer
deny not in message
maneuver_negotiatir.py in the domaneuver function - start
finish try mane function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: -3.3994448185
y: 0.83577644825
theta: 4.65200567245
speed: 14.3497676849
id: 1
t: 117
1546870780064
xxx after update is x: -3.65530085564
y: 0.30596023798
theta: 4.78256988525
speed: 13.8150196075
id: 1
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: -3.65530085564
y: 0.30596023798
theta: 4.78256988525
speed: 13.8150196075
id: 1
t: 118
1546870780133
xxx after update is x: -3.17213392258
y: -0.17610861361
theta: 4.70509195328
speed: 13.8453559875
id: 1
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.6176907528907216, 0]
222 self.state_dicts[msg.id][msg.t] is (2.9288151264190674, -7.188875675201416, 1.6655787229537964, 0.957867443561554)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:120


xxx before update is x: -3.17213392258
y: -0.17610861361
theta: 4.70509195328
speed: 13.8453559875
id: 1
t: 119
1546870780194
xxx after update is x: -3.65322589874
y: -0.947920501232
theta: 4.70290613174
speed: 14.2161607742
id: 1
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.43045649417832726, 0]
222 self.state_dicts[msg.id][msg.t] is (3.4843826293945312, -7.363081932067871, 1.5584887266159058, 0.8743429780006409)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:121


xxx before update is x: -3.65322589874
y: -0.947920501232
theta: 4.70290613174
speed: 14.2161607742
id: 1
t: 120
1546870780261
xxx after update is x: -3.16692876816
y: -0.525200843811
theta: 4.5958943367
speed: 13.9310350418
id: 1
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.37777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: -3.16692876816
y: -0.525200843811
theta: 4.5958943367
speed: 13.9310350418
id: 1
t: 121
1546870780333
xxx after update is x: -3.3816754818
y: -1.52199327946
theta: 4.76934766769
speed: 13.6698093414
id: 1
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3993048058566172, 0]
222 self.state_dicts[msg.id][msg.t] is (3.03561997413635euver
added car with id 0 to grantlist. current grantlist:  {0: [6.644444444444444, 'left']}
Doing maneuver
maneuver_negotiatir.py finish the do maneuver function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: 3.03561997414
y: -7.71496152878
theta: 1.60610091686
speed: -0.112911500037
id: 0
t: 122
1546870780213
xxx after update is x: 3.31779718399
y: -7.36199617386
theta: 1.80493342876
speed: 0.178450748324
id: 0
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: 3.31779718399
y: -7.36199617386
theta: 1.80493342876
speed: 0.178450748324
id: 0
t: 123
1546870780280
xxx after update is x: 3.02470827103
y: -7.98213911057
theta: 1.43336081505
speed: -0.00985005870461
id: 0
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:125


xxx before update is x: 3.02470827103
y: -7.98213911057
theta: 1.43336081505
speed: -0.00985005870461
id: 0
t: 124
1546870780346
xxx after update is x: 3.09892964363
y: -7.76539087296
theta: 1.4698381424
speed: 0.38183298707
id: 0
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 3.09892964363
y: -7.76539087296
theta: 1.4698381424
speed: 0.38183298707
id: 0
t: 125
1546870780414
xxx after update is x: 3.04004502296
y: -7.27280139923
theta: 1.40083646774
speed: -0.400837063789
id: 0
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:126




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 3.04004502296
y: -7.27280139923
theta: 1.40083646774
speed: -0.400837063789
id: 0
t: 126
1546870780482
xxx after update is x: 4.03144598007
y: -7.84396362305
theta: 1.56581234932
speed: 0.135246247053
id: 0
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:127




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 4.03144598007
y: -7.84396362305
theta: 1.56581234932
speed: 0.135246247053
id: 0
t: 127
1546870780546
xxx after update is x: 3.5101723671
y: -7.06665945053
theta: 1.70398104191
speed: 0.260500282049
id: 0
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:128




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 3.5101723671
y: -7.06665945053
theta: 1.70398104191
speed: 0.260500282049
id: 0
t: 128
15468707825, -7.714961528778076, 1.6061009168624878, -0.11291150003671646)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: -3.3816754818
y: -1.52199327946
theta: 4.76934766769
speed: 13.6698093414
id: 1
t: 122
1546870780407
xxx after update is x: -2.76642775536
y: -2.16588783264
theta: 4.76832532883
speed: 14.1473302841
id: 1
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4698539295583133, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3177971839904785, -7.361996173858643, 1.8049334287643433, 0.17845074832439423)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: -2.76642775536
y: -2.16588783264
theta: 4.76832532883
speed: 14.1473302841
id: 1
t: 123
1546870780463
xxx after update is x: -3.51113414764
y: -3.5923166275
theta: 4.65846538544
speed: 13.6526947021
id: 1
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:125


xxx before update is x: -3.51113414764
y: -3.5923166275
theta: 4.65846538544
speed: 13.6526947021
id: 1
t: 124
1546870780529
xxx after update is x: -2.69288372993
y: -3.7541911602
theta: 4.74000072479
speed: 14.0430440903
id: 1
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.49494672767620773, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0989296436309814, -7.765390872955322, 1.4698381423950195, 0.3818329870700836)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: -2.69288372993
y: -3.7541911602
theta: 4.74000072479
speed: 14.0430440903
id: 1
t: 125
1546870780595
xxx after update is x: -3.20357966423
y: -4.72732257843
theta: 4.93199968338
speed: 13.6473255157
id: 1
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.42690048417673104, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0400450229644775, -7.272801399230957, 1.40083646774292, -0.4008370637893677)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: -3.20357966423
y: -4.72732257843
theta: 4.93199968338
speed: 13.6473255157
id: 1
t: 126
1546870780661
xxx after update is x: -3.2531208992
y: -4.44138479233
theta: 4.69096899033
speed: 13.8144006729
id: 1
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: -3.2531208992
y: -4.44138479233
theta: 4.69096899033
speed: 13.8144006729
id: 1
t: 127
1546870780731
xxx after update is x: -3.72814488411
y: -5.46564006805
theta: 4.6642165184
speed: 13.9923524857
id: 1
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.5637212946976335, 0]
222 self.state_dicts[msg.id][msg.t] is (3.5101723670959473, -7.066659450531006, 1.7039810419082642, 0.2605002820491791)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:129


xxx before update is x: -3.72814488411
y: -5.46564006805
theta: 4.6642165184
speed: 13.9923524857
id: 1
t: 128
1546870780793
xxx after update is x: -3.38240289688
y: -6.38741254807
theta: 4.59857082367
speed: 13.6794147491
id: 1
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.73333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.39270496932406546, 0]
222 self.state_dicts[msg.id][msg.t] is (2.8557920455932617, -7.576973915100098, 1.5061782598495483, 0.033565159887075424)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: -3.38240289688
y: -6.38741254807
theta: 4.59857082367
speed: 13.6794147491
id: 1
t: 129
1546870780860
xxx after update is x: -3.88909864426
y: -6.96511983871
theta: 4.67408084869
speed: 13.8545913696
id: 1
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:131


xxx before update is x: -3.88909864426
y: -6.96511983871
theta: 4.67408084869
speed: 13.8545913696
id: 1
t: 130
1546870780933
xxx after update is x: -3.59602928162
y: -7.72446775436
theta: 4.77853918076
speed: 14.1692647934
id: 1
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.7378679572127993, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3395254611968994, -7.927981376647949, 1.6687839031219482, 0.1788630187511444)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave t0614
xxx after update is x: 2.85579204559
y: -7.5769739151
theta: 1.50617825985
speed: 0.0335651598871
id: 0
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:129




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 2.85579204559
y: -7.5769739151
theta: 1.50617825985
speed: 0.0335651598871
id: 0
t: 129
1546870780680
xxx after update is x: 3.26479244232
y: -7.56247234344
theta: 1.57171487808
speed: 0.340852618217
id: 0
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:130


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.77777777778






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 3.26479244232
y: -7.56247234344
theta: 1.57171487808
speed: 0.340852618217
id: 0
t: 130
1546870780746
xxx after update is x: 3.3395254612
y: -7.92798137665
theta: 1.66878390312
speed: 0.178863018751
id: 0
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:131




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 3.3395254612
y: -7.92798137665
theta: 1.66878390312
speed: 0.178863018751
id: 0
t: 131
1546870780814
xxx after update is x: 3.39980268478
y: -7.88455629349
theta: 1.74281859398
speed: 0.0291913859546
id: 0
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:132




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 3.39980268478
y: -7.88455629349
theta: 1.74281859398
speed: 0.0291913859546
id: 0
t: 132
1546870780880
xxx after update is x: 3.15868186951
y: -7.44955587387
theta: 1.71615505219
speed: 0.118666216731
id: 0
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:133




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 3.15868186951
y: -7.44955587387
theta: 1.71615505219
speed: 0.118666216731
id: 0
t: 133
1546870780947
xxx after update is x: 3.22378087044
y: -7.41500425339
theta: 1.50535321236
speed: -0.175933375955
id: 0
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:134




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 3.22378087044
y: -7.41500425339
theta: 1.50535321236
speed: -0.175933375955
id: 0
t: 134
1546870781013
xxx after update is x: 3.71261239052
y: -7.31075906754
theta: 1.66224658489
speed: 0.195683389902
id: 0
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:135




going to the update function
sim.py in the sim.py update function 
targetspeed < self.she update function xxx before update is x: -3.59602928162
y: -7.72446775436
theta: 4.77853918076
speed: 14.1692647934
id: 1
t: 131
1546870780995
xxx after update is x: -2.79293298721
y: -8.07883167267
theta: 4.75269412994
speed: 14.0396432877
id: 1
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:132




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:133


xxx before update is x: -2.79293298721
y: -8.07883167267
theta: 4.75269412994
speed: 14.0396432877
id: 1
t: 132
1546870781062
xxx after update is x: -2.81367635727
y: -8.28413772583
theta: 4.75085163116
speed: 13.927652359
id: 1
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.8065837251791009, 0]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.158681869506836, -7.44955587387085, 1.7161550521850586, 0.11866621673107147)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: -2.81367635727
y: -8.28413772583
theta: 4.75085163116
speed: 13.927652359
id: 1
t: 133
1546870781191
xxx after update is x: -3.1416759491
y: -10.0297193527
theta: 4.7480301857
speed: 13.2583608627
id: 1
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.1416759491
y: -10.0297193527
theta: 4.7480301857
speed: 13.2583608627
id: 1
t: 134
1546870781194
xxx after update is x: -3.91372036934
y: -9.98912620544
theta: 4.78425073624
speed: 12.7953691483
id: 1
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:135




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: -3.91372036934
y: -9.98912620544
theta: 4.78425073624
speed: 12.7953691483
id: 1
t: 135
1546870781261
xxx after update is x: -2.50779557228
y: -10.0653495789
theta: 4.78553724289
speed: 13.4589910507
id: 1
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.04444444444






self.maneuver_requested None
aaaaaa
aaaaaabbbbb
risk is [0.7684697964811482, 0.49919999999999787]
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (2.9471724033355713, -7.38635778427124, 1.537328839302063, -0.1154826283454895)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n timespeed:xxxxxxxxxmaneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.0






self.maneuver_requested left
222 self.state_dicts[msg.id][msg.t] is (-2.507795572280884, -10.065349578857422, 4.785537242889404, 13.458991050720215)

hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 3.71261239052
y: -7.31075906754
theta: 1.66224658489
speed: 0.195683389902
id: 0
t: 135
1546870781320
xxx after update is x: 2.94717240334
y: -7.38635778427
theta: 1.5373288393
speed: -0.115482628345
id: 0
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:136




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 2.94717240334
y: -7.38635778427
theta: 1.5373288393
speed: -0.115482628345
id: 0
t: 136
1546870781323
xxx after update is x: 3.14917826653
y: -7.37465524673
theta: 1.43245255947
speed: -0.0798079222441
id: 0
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:137


maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-3.4594433307647705, -11.697720527648926, 4.723709583282471, 13.368992805480957)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: 3.14917826653
y: -7.37465524673
theta: 1.43245255947
speed: -0.0798079222441
id: 0
t: 137
1546870781391
xxx after update is x: 3.11612844467
y: -7.15930175781
theta: 1.48088169098
speed: 0.168065771461
id: 0
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:139


xxx before update is x: 3.11612844467
y: -7.15930175781
theta: 1.48088169098
speed: 0.168065771461
id: 0
t: 138
1546870781460
xxx after update is x: 3.28356266022
y: -7.64879798889
theta: 1.51932477951
speed: 0.576020658016
id: 0
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: 3.28356266022
y: -7.64879798889
theta: 1.51932477951
speed: 0.576020658016
id: 0
t: 139
1546870781524
xxx after update is x: 3.69709539413
y: -7.71151304245
theta: 1.57992660999
speed: 0.639648139477
id: 0
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: 3.69709539413
y: -7.71151304245
theta: 1.57992660999
speed: 0.639648139477
id: 0
t: 140
1546870781594
xxx after update is x: 3.43661212921
y: -7.29149723053
theta: 1.70424640179
speed: 0.918506264687
id: 0
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [1.0, 0.8476758413294581]
222 self.state_dicts[msg.id][m spin:137

xxx before update is x: -2.50779557228
y: -10.0653495789
theta: 4.78553724289
speed: 13.4589910507
id: 1
t: 136
1546870781337
xxx after update is x: -3.45944333076
y: -11.6977205276
theta: 4.72370958328
speed: 13.3689928055
id: 1
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: -3.45944333076
y: -11.6977205276
theta: 4.72370958328
speed: 13.3689928055
id: 1
t: 137
1546870781395
xxx after update is x: -3.57845807076
y: -11.2892217636
theta: 4.71899366379
speed: 13.792673111
id: 1
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:139


xxx before update is x: -3.57845807076
y: -11.2892217636
theta: 4.71899366379
speed: 13.792673111
id: 1
t: 138
1546870781469
xxx after update is x: -2.73136210442
y: -12.4329223633
theta: 4.83220005035
speed: 13.6638240814
id: 1
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: -2.73136210442
y: -12.4329223633
theta: 4.83220005035
speed: 13.6638240814
id: 1
t: 139
1546870781537
xxx after update is x: -3.53211927414
y: -12.6041154861
theta: 4.72376441956
speed: 13.9797401428
id: 1
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.7975127411090529, 0.5327999999999988]
222 self.state_dicts[msg.id][msg.t] is (3.6970953941345215, -7.711513042449951, 1.579926609992981, 0.6396481394767761)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: -3.53211927414
y: -12.6041154861
theta: 4.72376441956
speed: 13.9797401428
id: 1
t: 140
1546870781601
xxx after update is x: -3.26103544235
y: -13.7138652802
theta: 4.70396995544
speed: 14.1902093887
id: 1
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: -3.26103544235
y: -13.7138652802
theta: 4.70396995544
speed: 14.1902093887
id: 1
t: 141
1546870781669
xxx after update is x: -3.45845913887
y: -14.1388692856
theta: 4.60057830811
speed: 13.5049591064
id: 1
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish Falsesg.t] is (-3.261035442352295, -13.713865280151367, 4.703969955444336, 14.19020938873291)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: 3.43661212921
y: -7.29149723053
theta: 1.70424640179
speed: 0.918506264687
id: 0
t: 141
1546870781662
xxx after update is x: 2.77132630348
y: -7.44919967651
theta: 1.73658597469
speed: 1.34187173843
id: 0
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: 2.77132630348
y: -7.44919967651
theta: 1.73658597469
speed: 1.34187173843
id: 0
t: 142
1546870781735
xxx after update is x: 3.20299863815
y: -7.21400022507
theta: 1.75113034248
speed: 1.73154759407
id: 0
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.35604975809114703, 4.107560960633635e-08]
222 self.state_dicts[msg.id][msg.t] is (-2.9656646251678467, -14.686779975891113, 4.863008499145508, 13.900768280029297)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: 3.20299863815
y: -7.21400022507
theta: 1.75113034248
speed: 1.73154759407
id: 0
t: 143
1546870781794
xxx after update is x: 3.42151331902
y: -7.67332077026
theta: 1.58466672897
speed: 1.92450988293
id: 0
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.4






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: 3.42151331902
y: -7.67332077026
theta: 1.58466672897
speed: 1.92450988293
id: 0
t: 144
1546870781859
xxx after update is x: 3.29270195961
y: -6.49455499649
theta: 1.58157265186
speed: 2.14156842232
id: 0
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.002013322191095687, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1840755939483643, -16.063383102416992, 4.719059467315674, 14.005809783935547)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:146


xxx before update is x: 3.29270195961
y: -6.49455499649
theta: 1.58157265186
speed: 2.14156842232
id: 0
t: 145
1546870781928
xxx after update is x: 3.62045955658
y: -7.07295131683
theta: 1.51000881195
speed: 2.2978708744
id: 0
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiii
gooooooo
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: -3.45845913887
y: -14.1388692856
theta: 4.60057830811
speed: 13.5049591064
id: 1
t: 142
1546870781730
xxx after update is x: -2.96566462517
y: -14.6867799759
theta: 4.86300849915
speed: 13.90076828
id: 1
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.2128516210098485, 0.5247999999999986]
222 self.state_dicts[msg.id][msg.t] is (3.202998638153076, -7.214000225067139, 1.7511303424835205, 1.7315475940704346)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: -2.96566462517
y: -14.6867799759
theta: 4.86300849915
speed: 13.90076828
id: 1
t: 143
1546870781797
xxx after update is x: -3.34251952171
y: -14.7348155975
theta: 4.77344989777
speed: 13.5271806717
id: 1
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.4






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: -3.34251952171
y: -14.7348155975
theta: 4.77344989777
speed: 13.5271806717
id: 1
t: 144
1546870781864
xxx after update is x: -3.18407559395
y: -16.0633831024
theta: 4.71905946732
speed: 14.0058097839
id: 1
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:146


xxx before update is x: -3.18407559395
y: -16.0633831024
theta: 4.71905946732
speed: 14.0058097839
id: 1
t: 145
1546870781932
xxx after update is x: -3.0393242836
y: -16.7169475555
theta: 4.77376747131
speed: 14.3133745193
id: 1
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.09213363849843316, 0.5119999999999982]
222 self.state_dicts[msg.id][msg.t] is (3.62045955657959, -7.072951316833496, 1.5100088119506836, 2.2978708744049072)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: -3.0393242836
y: -16.7169475555
theta: 4.77376747131
speed: 14.3133745193
id: 1
t: 146
1546870782004
xxx after update is x: -3.75300621986
y: -17.1375808716
theta: 4.78744125366
speed: 14.1297464371
id: 1
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish Faiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: 3.62045955658
y: -7.07295131683
theta: 1.51000881195
speed: 2.2978708744
id: 0
t: 146
1546870781992
xxx after update is x: 3.50119376183
y: -7.35401725769
theta: 1.51878702641
speed: 2.49775791168
id: 0
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: 3.50119376183
y: -7.35401725769
theta: 1.51878702641
speed: 2.49775791168
id: 0
t: 147
1546870782057
xxx after update is x: 3.16395902634
y: -7.19569921494
theta: 1.40193247795
speed: 3.04667234421
id: 0
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: 3.16395902634
y: -7.19569921494
theta: 1.40193247795
speed: 3.04667234421
id: 0
t: 148
1546870782124
xxx after update is x: 3.1539978981
y: -6.61982250214
theta: 1.65286123753
speed: 3.15347647667
id: 0
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [4.089176815400192e-09, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.518676996231079, -18.414621353149414, 4.716665744781494, 13.947646141052246)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: 3.1539978981
y: -6.61982250214
theta: 1.65286123753
speed: 3.15347647667
id: 0
t: 149
1546870782195
xxx after update is x: 3.11867046356
y: -6.48813199997
theta: 1.46814584732
speed: 3.53325009346
id: 0
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: 3.11867046356
y: -6.48813199997
theta: 1.46814584732
speed: 3.53325009346
id: 0
t: 150
1546870782258
xxx after update is x: 2.79815268517
y: -6.7474770546
theta: 1.67514634132
speed: 3.77827715874
id: 0
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:152


xxx before update is x: 2.79815268517
y: -6.7474770546
theta: 1.67514634132
speed: 3.77827715874
id: 0
t: 151
1546870782334
xxx after update is x: 3.15289115906
y: -6.46263980865
theta: 1.70663690567
speed: 4.28889417648
id: 0
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.75555555556






self.maneuver_requested left
aaaaaa
risk is [9.352734574268146e-56, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.858738660812378, -20.445232391357422, 4.569246292114258, 13.853191375732422)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fmlse
gooooooo
xxx before update is x: -3.75300621986
y: -17.1375808716
theta: 4.78744125366
speed: 14.1297464371
id: 1
t: 147
1546870782069
xxx after update is x: -3.79309844971
y: -17.8943977356
theta: 4.89939117432
speed: 13.9361124039
id: 1
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:148


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.07467295089665825, 0.4895999999999979]
222 self.state_dicts[msg.id][msg.t] is (3.16395902633667, -7.195699214935303, 1.4019324779510498, 3.0466723442077637)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: -3.79309844971
y: -17.8943977356
theta: 4.89939117432
speed: 13.9361124039
id: 1
t: 148
1546870782128
xxx after update is x: -3.51867699623
y: -18.4146213531
theta: 4.71666574478
speed: 13.9476461411
id: 1
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: -3.51867699623
y: -18.4146213531
theta: 4.71666574478
speed: 13.9476461411
id: 1
t: 149
1546870782196
xxx after update is x: -3.56908369064
y: -19.119808197
theta: 4.6638507843
speed: 13.7986888885
id: 1
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: -3.56908369064
y: -19.119808197
theta: 4.6638507843
speed: 13.7986888885
id: 1
t: 150
1546870782260
xxx after update is x: -2.73052191734
y: -19.981546402
theta: 4.74810028076
speed: 13.3954524994
id: 1
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.11977475253000201, 0.5087999999999981]
222 self.state_dicts[msg.id][msg.t] is (2.7981526851654053, -6.747477054595947, 1.6751463413238525, 3.7782771587371826)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:152


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.71111111111






self.maneuver_requested None
xxx before update is x: -2.73052191734
y: -19.981546402
theta: 4.74810028076
speed: 13.3954524994
id: 1
t: 151
1546870782337
xxx after update is x: -2.85873866081
y: -20.4452323914
theta: 4.56924629211
speed: 13.8531913757
id: 1
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:153


xxx before update is x: -2.85873866081
y: -20.4452323914
theta: 4.56924629211
speed: 13.8531913757
id: 1
t: 152
1546870782396
xxx after update is x: -3.0259346962
y: -20.1774806976
theta: 4.69774675369
speed: 14.0627326965
id: 1
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.03479954394367005, 0.479999999999998]
222 self.state_dicts[msg.id][msg.t] is (3.370515823364258, -5.672430515289307, 1.6577664613723755, 4.3422369956970215)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:154


xxx before update is x: -3.0259346962
y: -20.1774806976
theta: 4.69774675369
speed: 14.0627326965
id: 1
t: 153
1546870782469
xxx after update is x: -3.20394897461
y: -21.4969558716
theta: 4.67861509323
speed: 13.9594316483
id: 1
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:155


xxx before update is x: -3.20394897461
y: -21.4969558716
theta: 4.67861509323
speed: 13.9594316483
id: 1
t: 154
1546870782535
xxx after update is x: -3.78645777702
y: -22.2016735077
theta: 4.64310264587
speed: 13.9711971283
id: 1
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: -3.78645777702
y: -22.2016735077
theta: 4.64310264587
speed: 13.9711971283
id: 1
t: 155
1546870782599
xxx after update is x: -2.76561713219
y: -22.7187747955
theta: 4.68324375153
speed: 13.8317594528
id: 1
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.2112368745425448, 0.48639999999999795]
222 self.state_dicts[msg.id][msg.t] is (2.826035261154175, -5.896199703216553, 1.5275592803955078, 5.266653537750244)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: -2.76561713219
y: -22.7187747955
theta: 4.68324375153
speed: 13.8317594528
id: 1
t: 156
1546870782663
xxx after update is x: -3.67722129822
y: -22.8220233917
theta: 4.86810827255
speed: 13.7024011612
id: 1
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: -3.67722129822
y: -22.8220233917
theta: 4.86810827255
speed: = Falsemaneuver_negotiatir.py in the try maneuver function update -. sfinish

call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 3.15289115906
y: -6.46263980865
theta: 1.70663690567
speed: 4.28889417648
id: 0
t: 152
1546870782398
xxx after update is x: 3.37051582336
y: -5.67243051529
theta: 1.65776646137
speed: 4.3422369957
id: 0
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:153




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:154


xxx before update is x: 3.37051582336
y: -5.67243051529
theta: 1.65776646137
speed: 4.3422369957
id: 0
t: 153
1546870782462
xxx after update is x: 3.37118244171
y: -5.65271997452
theta: 1.62152600288
speed: 4.12494707108
id: 0
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:155


xxx before update is x: 3.37118244171
y: -5.65271997452
theta: 1.62152600288
speed: 4.12494707108
id: 0
t: 154
1546870782531
xxx after update is x: 3.21345829964
y: -5.66013145447
theta: 1.66951394081
speed: 4.18530893326
id: 0
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [2.194770400428621e-102, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.7864577770233154, -22.20167350769043, 4.643102645874023, 13.971197128295898)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: 3.21345829964
y: -5.66013145447
theta: 1.66951394081
speed: 4.18530893326
id: 0
t: 155
1546870782591
xxx after update is x: 2.82603526115
y: -5.89619970322
theta: 1.5275592804
speed: 5.26665353775
id: 0
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: 2.82603526115
y: -5.89619970322
theta: 1.5275592804
speed: 5.26665353775
id: 0
t: 156
1546870782660
xxx after update is x: 3.14323139191
y: -5.12146520615
theta: 1.83840692043
speed: 5.2629942894
id: 0
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: 3.14323139191
y: -5.12146520615
theta: 1.83840692043
speed: 5.2629942894
id: 0
t: 157
1546870782732
xxx after update is x: 2.99137973785
y: -4.74936294556
theta: 1.5209300518
speed: 5.56419801712
id: 0
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [2.849355328323986e-103, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.8386118412017822, -24.3255558013916, 4.873155117034912, 13.660316467285156)
if we 13.7024011612
id: 1
t: 157
1546870782728
xxx after update is x: -2.8386118412
y: -24.3255558014
theta: 4.87315511703
speed: 13.6603164673
id: 1
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.052474449946632785, 0.5263999999999986]
222 self.state_dicts[msg.id][msg.t] is (2.991379737854004, -4.749362945556641, 1.5209300518035889, 5.564198017120361)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:159


xxx before update is x: -2.8386118412
y: -24.3255558014
theta: 4.87315511703
speed: 13.6603164673
id: 1
t: 158
1546870782793
xxx after update is x: -3.35616207123
y: -24.3058738708
theta: 4.64128541946
speed: 14.2657356262
id: 1
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.06666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:160


xxx before update is x: -3.35616207123
y: -24.3058738708
theta: 4.64128541946
speed: 14.2657356262
id: 1
t: 159
1546870782862
xxx after update is x: -3.35947275162
y: -25.1183948517
theta: 4.62277078629
speed: 13.7789354324
id: 1
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: -3.35947275162
y: -25.1183948517
theta: 4.62277078629
speed: 13.7789354324
id: 1
t: 160
1546870782932
xxx after update is x: -3.583537817
y: -25.7559013367
theta: 4.5844244957
speed: 14.1117963791
id: 1
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.16065333833604684, 0.5151999999999983]
222 self.state_dicts[msg.id][msg.t] is (2.6449127197265625, -4.031130790710449, 1.862243890762329, 6.29668664932251)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: -3.583537817
y: -25.7559013367
theta: 4.5844244957
speed: 14.1117963791
id: 1
t: 161
1546870782997
xxx after update is x: -3.54344630241
y: -26.5122394562
theta: 4.89494037628
speed: 14.2208576202
id: 1
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:163


xxx before update is x: -3.54344630241
y: -26.5122394562
theta: 4.8949403 have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:159


xxx before update is x: 2.99137973785
y: -4.74936294556
theta: 1.5209300518
speed: 5.56419801712
id: 0
t: 158
1546870782790
xxx after update is x: 3.70135092735
y: -4.28428459167
theta: 1.61506748199
speed: 5.97863435745
id: 0
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.06666666667






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:160


xxx before update is x: 3.70135092735
y: -4.28428459167
theta: 1.61506748199
speed: 5.97863435745
id: 0
t: 159
1546870782860
xxx after update is x: 3.13700151443
y: -4.56614732742
theta: 1.90775871277
speed: 6.58826446533
id: 0
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: 3.13700151443
y: -4.56614732742
theta: 1.90775871277
speed: 6.58826446533
id: 0
t: 160
1546870782938
xxx after update is x: 2.64491271973
y: -4.03113079071
theta: 1.86224389076
speed: 6.29668664932
id: 0
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [6.826919545109836e-186, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5835378170013428, -25.755901336669922, 4.5844244956970215, 14.111796379089355)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: 2.64491271973
y: -4.03113079071
theta: 1.86224389076
speed: 6.29668664932
id: 0
t: 161
1546870783000
xxx after update is x: 2.53239750862
y: -4.12367868423
theta: 1.79208981991
speed: 6.50351476669
id: 0
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: 2.53239750862
y: -4.12367868423
theta: 1.79208981991
speed: 6.50351476669
id: 0
t: 162
1546870783062
xxx after update is x: 2.6710858345
y: -3.39857745171
theta: 1.85142588615
speed: 7.00079727173
id: 0
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:163




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: 2.6710858345
y: -3.39857745171
theta: 1.85142588615
speed: 7.00079727173
id: 0
t: 163
1546870783127
xxx after update is x: 2.34198474884
y: -3.02449989319
theta: 1.9780664444
speed: 6.82879638672
id: 0
t: 164
maneuv7628
speed: 14.2208576202
id: 1
t: 162
1546870783061
xxx after update is x: -2.58754873276
y: -26.7686405182
theta: 4.79695320129
speed: 13.8428449631
id: 1
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: -2.58754873276
y: -26.7686405182
theta: 4.79695320129
speed: 13.8428449631
id: 1
t: 163
1546870783130
xxx after update is x: -3.14425349236
y: -27.5103931427
theta: 4.87142038345
speed: 14.0409927368
id: 1
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0741333097794506, 0.48319999999999796]
222 self.state_dicts[msg.id][msg.t] is (2.341984748840332, -3.0244998931884766, 1.9780664443969727, 6.82879638671875)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:165


xxx before update is x: -3.14425349236
y: -27.5103931427
theta: 4.87142038345
speed: 14.0409927368
id: 1
t: 164
1546870783199
xxx after update is x: -3.39582109451
y: -28.4391174316
theta: 4.66616392136
speed: 14.0355195999
id: 1
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.39582109451
y: -28.4391174316
theta: 4.66616392136
speed: 14.0355195999
id: 1
t: 165
1546870783272
xxx after update is x: -3.73577547073
y: -28.846364975
theta: 4.71965503693
speed: 14.3288526535
id: 1
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:166




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: -3.73577547073
y: -28.846364975
theta: 4.71965503693
speed: 14.3288526535
id: 1
t: 166
1546870783339
xxx after update is x: -3.12307167053
y: -29.8776168823
theta: 4.57710552216
speed: 14.2889528275
id: 1
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.42222222222






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: -3.12307167053
y: -29.8776168823
theta: 4.57710552216
speed: 14.2889528275
id: 1
t: 167
1546870783452
xxx after update is x: -3.46713876724
y: -30.7059307098
theta: 4.75884389877
speed: 13.7556552887
id: 1
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiier_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:165


xxx before update is x: 2.34198474884
y: -3.02449989319
theta: 1.9780664444
speed: 6.82879638672
id: 0
t: 164
1546870783195
xxx after update is x: 3.09555029869
y: -3.08417606354
theta: 1.96672224998
speed: 7.36245059967
id: 0
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [1.2800331064106328e-245, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3958210945129395, -28.439117431640625, 4.666163921356201, 14.03551959991455)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:166


xxx before update is x: 3.09555029869
y: -3.08417606354
theta: 1.96672224998
speed: 7.36245059967
id: 0
t: 165
1546870783268
xxx after update is x: 2.42589044571
y: -2.78905963898
theta: 1.93438410759
speed: 8.04053211212
id: 0
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: 2.42589044571
y: -2.78905963898
theta: 1.93438410759
speed: 8.04053211212
id: 0
t: 166
1546870783335
xxx after update is x: 1.75460398197
y: -2.34012341499
theta: 2.1824798584
speed: 8.01029872894
id: 0
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.42222222222






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: 1.75460398197
y: -2.34012341499
theta: 2.1824798584
speed: 8.01029872894
id: 0
t: 167
1546870783404
xxx after update is x: 2.07577705383
y: -1.87997293472
theta: 2.04376935959
speed: 8.18759727478
id: 0
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4671387672424316, -30.705930709838867, 4.758843898773193, 13.755655288696289)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: 2.07577705383
y: -1.87997293472
theta: 2.04376935959
speed: 8.18759727478
id: 0
t: 168
1546870783476
xxx after update is x: 2.4674038887
y: -1.75768971443
theta: 1.97815859318
speed: 8.56991767883
id: 0
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: 2.iiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: -3.46713876724
y: -30.7059307098
theta: 4.75884389877
speed: 13.7556552887
id: 1
t: 168
1546870783472
xxx after update is x: -2.94430828094
y: -30.5682926178
theta: 4.62510871887
speed: 14.0493249893
id: 1
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.2412258354105148, 0.4943999999999979]
222 self.state_dicts[msg.id][msg.t] is (2.4674038887023926, -1.7576897144317627, 1.9781585931777954, 8.569917678833008)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: -2.94430828094
y: -30.5682926178
theta: 4.62510871887
speed: 14.0493249893
id: 1
t: 169
1546870783537
xxx after update is x: -3.11771416664
y: -31.4923362732
theta: 4.82211971283
speed: 14.0754899979
id: 1
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:171


xxx before update is x: -3.11771416664
y: -31.4923362732
theta: 4.82211971283
speed: 14.0754899979
id: 1
t: 170
1546870783606
xxx after update is x: -3.313611269
y: -32.0084915161
theta: 4.70007944107
speed: 13.926404953
id: 1
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: -3.313611269
y: -32.0084915161
theta: 4.70007944107
speed: 13.926404953
id: 1
t: 171
1546870783675
xxx after update is x: -3.60625648499
y: -32.5354118347
theta: 4.76687765121
speed: 13.8408241272
id: 1
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.524220079034813, 0.5247999999999986]
222 self.state_dicts[msg.id][msg.t] is (0.5229691863059998, -0.6481736302375793, 2.3085689544677734, 9.511712074279785)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:173


xxx before update is x: -3.60625648499
y: -32.5354118347
theta: 4.76687765121
speed: 13.8408241272
id: 1
t: 172
1546870783735
xxx after update is x: -3.05571389198
y: -33.3445625305
theta: 4.81495380402
speed: 14.1604185104
id: 1
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n tim4674038887
y: -1.75768971443
theta: 1.97815859318
speed: 8.56991767883
id: 0
t: 169
1546870783579
xxx after update is x: 2.01703453064
y: -1.90281271935
theta: 2.04780840874
speed: 8.77048873901
id: 0
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:171


xxx before update is x: 2.01703453064
y: -1.90281271935
theta: 2.04780840874
speed: 8.77048873901
id: 0
t: 170
1546870783612
xxx after update is x: 1.28038048744
y: -1.16932296753
theta: 2.25063562393
speed: 9.09783172607
id: 0
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: 1.28038048744
y: -1.16932296753
theta: 2.25063562393
speed: 9.09783172607
id: 0
t: 171
1546870783671
xxx after update is x: 0.522969186306
y: -0.648173630238
theta: 2.30856895447
speed: 9.51171207428
id: 0
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:173


xxx before update is x: 0.522969186306
y: -0.648173630238
theta: 2.30856895447
speed: 9.51171207428
id: 0
t: 172
1546870783729
xxx after update is x: 1.0753954649
y: -0.88240891695
theta: 2.34048056602
speed: 9.64411830902
id: 0
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0557138919830322, -33.34456253051758, 4.814953804016113, 14.160418510437012)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: 1.0753954649
y: -0.88240891695
theta: 2.34048056602
speed: 9.64411830902
id: 0
t: 173
1546870783793
xxx after update is x: 0.910487294197
y: 0.0796182230115
theta: 2.48848962784
speed: 9.65567684174
id: 0
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: 0.910487294197
y: 0.0796182230115
theta: 2.48848962784
speed: 9.65567684174
id: 0
t: 174
1546870783860
xxx after update is x: 0.303120732307
y: 0.0489826239645
theta: 2.5523557663
speed: 10.3065156937
id: 0
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.77777777778






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: 0.303120732307
y: 0.0489826239645
theta: 2.5523557663
speed: 10.3065156937
id: es spin:174

xxx before update is x: -3.05571389198
y: -33.3445625305
theta: 4.81495380402
speed: 14.1604185104
id: 1
t: 173
1546870783795
xxx after update is x: -3.03296661377
y: -34.2030563354
theta: 4.71594667435
speed: 13.8370513916
id: 1
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: -3.03296661377
y: -34.2030563354
theta: 4.71594667435
speed: 13.8370513916
id: 1
t: 174
1546870783872
xxx after update is x: -2.80148744583
y: -34.8228569031
theta: 4.52303600311
speed: 13.5801181793
id: 1
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.3464017772635001, 0.4623999999999981]
222 self.state_dicts[msg.id][msg.t] is (0.3031207323074341, 0.04898262396454811, 2.5523557662963867, 10.30651569366455)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: -2.80148744583
y: -34.8228569031
theta: 4.52303600311
speed: 13.5801181793
id: 1
t: 175
1546870783936
xxx after update is x: -3.3722307682
y: -34.8079376221
theta: 4.59314441681
speed: 13.9186124802
id: 1
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.82222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:177


xxx before update is x: -3.3722307682
y: -34.8079376221
theta: 4.59314441681
speed: 13.9186124802
id: 1
t: 176
1546870783994
xxx after update is x: -3.38218164444
y: -35.4827156067
theta: 4.7439789772
speed: 14.0905847549
id: 1
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.3139700226751094, 0.5103999999999982]
222 self.state_dicts[msg.id][msg.t] is (-0.07632584124803543, 0.8737385272979736, 2.4421396255493164, 10.468443870544434)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: -3.38218164444
y: -35.4827156067
theta: 4.7439789772
speed: 14.0905847549
id: 1
t: 177
1546870784063
xxx after update is x: -3.61156725883
y: -36.7253456116
theta: 4.57196331024
speed: 13.8255186081
id: 1
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin functio0
t: 175
1546870783939
xxx after update is x: -0.371657222509
y: 0.633789181709
theta: 2.55570864677
speed: 10.3615484238
id: 0
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3722307682037354, -34.80793762207031, 4.593144416809082, 13.918612480163574)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: -0.371657222509
y: 0.633789181709
theta: 2.55570864677
speed: 10.3615484238
id: 0
t: 176
1546870784000
xxx after update is x: -0.076325841248
y: 0.873738527298
theta: 2.44213962555
speed: 10.4684438705
id: 0
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:177




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: -0.076325841248
y: 0.873738527298
theta: 2.44213962555
speed: 10.4684438705
id: 0
t: 177
1546870784066
xxx after update is x: 0.102996744215
y: 0.988490760326
theta: 2.57581520081
speed: 11.2456064224
id: 0
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:178




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: 0.102996744215
y: 0.988490760326
theta: 2.57581520081
speed: 11.2456064224
id: 0
t: 178
1546870784130
xxx after update is x: -1.09503173828
y: 1.07418048382
theta: 2.57284522057
speed: 11.3301134109
id: 0
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.428863525390625, -37.148529052734375, 4.795790195465088, 13.884225845336914)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:180


xxx before update is x: -1.09503173828
y: 1.07418048382
theta: 2.57284522057
speed: 11.3301134109
id: 0
t: 179
1546870784192
xxx after update is x: -1.50886666775
y: 1.02212119102
theta: 2.54720306396
speed: 10.8937587738
id: 0
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: -1.50886666775
y: 1.02212119102
theta: 2.54720306396
speed: 10.8937587738
id: 0
t: 180
1546870784261
xxx after update is x: -1.86121928692
y: 1.34135997295
theta: 2.66874933243
speed: 11.832244873
id: 0
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:181


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.484736204147339, -37.41567611694336, 4.759159564971924, 14.00096607208252)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxxn, finish the n times spin:179

xxx before update is x: -3.61156725883
y: -36.7253456116
theta: 4.57196331024
speed: 13.8255186081
id: 1
t: 178
1546870784136
xxx after update is x: -3.42886352539
y: -37.1485290527
theta: 4.79579019547
speed: 13.8842258453
id: 1
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion

************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:180


xxx before update is x: -3.42886352539
y: -37.1485290527
theta: 4.79579019547
speed: 13.8842258453
id: 1
t: 179
1546870784196
xxx after update is x: -3.17802882195
y: -37.5028877258
theta: 4.61993551254
speed: 13.843462944
id: 1
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.28133996821086726, 0.505599999999998]
222 self.state_dicts[msg.id][msg.t] is (-1.5088666677474976, 1.0221211910247803, 2.5472030639648438, 10.893758773803711)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.17802882195
y: -37.5028877258
theta: 4.61993551254
speed: 13.843462944
id: 1
t: 180
1546870784264
xxx after update is x: -3.48473620415
y: -37.4156761169
theta: 4.75915956497
speed: 14.0009660721
id: 1
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:181




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:182


xxx before update is x: -3.48473620415
y: -37.4156761169
theta: 4.75915956497
speed: 14.0009660721
id: 1
t: 181
1546870784327
xxx after update is x: -3.42273402214
y: -38.4986038208
theta: 4.74606990814
speed: 14.1630430222
id: 1
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.2285854432168419, 0.5247999999999986]
222 self.state_dicts[msg.id][msg.t] is (-2.2232210636138916, 2.250624656677246, 2.7868435382843018, 11.775362014770508)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:183


xxx before update is x: -3.42273402214
y: -38.4986038208
theta: 4.74606990814
speed: 14.1630430222
id: 1
t: 182
1546870784399
xxx after update is x: -3.28550767899
y: -39.0627555847
theta: 4.59154415131
speed: 13.6983222961
id: 1
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: -3.28550767899
y: -39.0627555847
theta: 4.59154415131
speed: 13.6983222961
id: 1
t: 183
1546870784464
xxx after update is x: -3
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:182


xxx before update is x: -1.86121928692
y: 1.34135997295
theta: 2.66874933243
speed: 11.832244873
id: 0
t: 181
1546870784332
xxx after update is x: -2.22322106361
y: 2.25062465668
theta: 2.78684353828
speed: 11.7753620148
id: 0
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: -2.22322106361
y: 2.25062465668
theta: 2.78684353828
speed: 11.7753620148
id: 0
t: 182
1546870784397
xxx after update is x: -2.81357836723
y: 2.03663754463
theta: 2.82332134247
speed: 12.7017354965
id: 0
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.13333333333






self.maneuver_requested left
leave the update function 
in spin function, finish the n times spin:183


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: -2.81357836723
y: 2.03663754463
theta: 2.82332134247
speed: 12.7017354965
id: 0
t: 183
1546870784460
xxx after update is x: -2.76084113121
y: 2.44624876976
theta: 2.89012503624
speed: 12.6894330978
id: 0
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.119473457336426, -40.1439208984375, 4.786776065826416, 14.060505867004395)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:185


xxx before update is x: -2.76084113121
y: 2.44624876976
theta: 2.89012503624
speed: 12.6894330978
id: 0
t: 184
1546870784531
xxx after update is x: -3.65973472595
y: 2.58507752419
theta: 2.65788006783
speed: 12.7214746475
id: 0
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: -3.65973472595
y: 2.58507752419
theta: 2.65788006783
speed: 12.7214746475
id: 0
t: 185
1546870784590
xxx after update is x: -4.50938129425
y: 3.32323336601
theta: 2.95551133156
speed: 12.8371133804
id: 0
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: -4.50938129425
y: 3.32323336601
theta: 2.95551133156
speed: 12.8371133804
id: 0
t: 186
1546870784668
xxx after update is x: -4.78118419647
y: 2.5557217598
theta: 2.98953342438
speed: 13.2567176819
id: 0
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4872686862945557, -41.85769271850586, 4.8378424644470215, 14.071476936340332)
if we have all measurements for a certain t.11947345734
y: -40.1439208984
theta: 4.78677606583
speed: 14.060505867
id: 1
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.17777777778






self.maneuver_requested None
aaaaaa
aaaaaabbbbb
risk is [0.33599902115160024, 0.537599999999999]
222 self.state_dicts[msg.id][msg.t] is (-2.760841131210327, 2.446248769760132, 2.890125036239624, 12.689433097839355)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:185


xxx before update is x: -3.11947345734
y: -40.1439208984
theta: 4.78677606583
speed: 14.060505867
id: 1
t: 184
1546870784534
xxx after update is x: -3.12492537498
y: -40.7989692688
theta: 4.76998186111
speed: 13.6168251038
id: 1
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: -3.12492537498
y: -40.7989692688
theta: 4.76998186111
speed: 13.6168251038
id: 1
t: 185
1546870784596
xxx after update is x: -3.28409314156
y: -41.661365509
theta: 4.64972734451
speed: 13.7705993652
id: 1
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.23247182233354016, 0.5119999999999982]
222 self.state_dicts[msg.id][msg.t] is (-4.509381294250488, 3.3232333660125732, 2.9555113315582275, 12.837113380432129)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: -3.28409314156
y: -41.661365509
theta: 4.64972734451
speed: 13.7705993652
id: 1
t: 186
1546870784660
xxx after update is x: -3.48726868629
y: -41.8576927185
theta: 4.83784246445
speed: 14.0714769363
id: 1
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:188


xxx before update is x: -3.48726868629
y: -41.8576927185
theta: 4.83784246445
speed: 14.0714769363
id: 1
t: 187
1546870784738
xxx after update is x: -3.72144651413
y: -41.9439659119
theta: 4.57716941833
speed: 13.5650434494
id: 1
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4895999999999979]
222 self.state_dicts[msg.id][msg.t] is (-4.783603191375732, 3.593571662902832, 2.8587169647216797, 13.081511497497559)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxxime-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:188


xxx before update is x: -4.78118419647
y: 2.5557217598
theta: 2.98953342438
speed: 13.2567176819
id: 0
t: 187
1546870784736
xxx after update is x: -4.78360319138
y: 3.5935716629
theta: 2.85871696472
speed: 13.0815114975
id: 0
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: -4.78360319138
y: 3.5935716629
theta: 2.85871696472
speed: 13.0815114975
id: 0
t: 188
1546870784793
xxx after update is x: -5.99954509735
y: 3.05410170555
theta: 3.18084335327
speed: 13.6929035187
id: 0
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0901715755462646, -43.79029083251953, 4.843029499053955, 14.053192138671875)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
xxx before update is x: -5.99954509735
y: 3.05410170555
theta: 3.18084335327
speed: 13.6929035187
id: 0
t: 189
1546870784864
xxx after update is x: -6.71618461609
y: 3.67063593864
theta: 2.94056081772
speed: 13.5435495377
id: 0
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:190


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.44444444444






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -6.71618461609
y: 3.67063593864
theta: 2.94056081772
speed: 13.5435495377
id: 0
t: 190
1546870784936
xxx after update is x: -7.29797315598
y: 3.26201653481
theta: 3.03953003883
speed: 13.9530954361
id: 0
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:192


xxx before update is x: -7.29797315598
y: 3.26201653481
theta: 3.03953003883
speed: 13.9530954361
id: 0
t: 191
1546870784993
xxx after update is x: -7.45505809784
y: 3.25882101059
theta: 3.1004486084
speed: 13.4365539551
id: 0
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:193


xxx before update is x: -7.45505809784
y: 3.25882101059
theta: 3.1004486084
speed: 13.4365539551
id: 0
t: 192
1546870785061
xxx after update is x: -8.51766586304
y: 3.6178483963
theta: 3.07486653328
speed: 13.6005620956
id: 0
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
aaa
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: -3.72144651413
y: -41.9439659119
theta: 4.57716941833
speed: 13.5650434494
id: 1
t: 188
1546870784801
xxx after update is x: -3.09017157555
y: -43.7902908325
theta: 4.84302949905
speed: 14.0531921387
id: 1
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: -3.09017157555
y: -43.7902908325
theta: 4.84302949905
speed: 14.0531921387
id: 1
t: 189
1546870784874
xxx after update is x: -3.15034770966
y: -43.8306350708
theta: 4.6675567627
speed: 13.7471075058
id: 1
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -3.15034770966
y: -43.8306350708
theta: 4.6675567627
speed: 13.7471075058
id: 1
t: 190
1546870784931
xxx after update is x: -2.94624447823
y: -44.4049797058
theta: 4.71474313736
speed: 14.0335502625
id: 1
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.505599999999998]
222 self.state_dicts[msg.id][msg.t] is (-7.297973155975342, 3.262016534805298, 3.039530038833618, 13.953095436096191)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:192


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.48888888889






self.maneuver_requested None
xxx before update is x: -2.94624447823
y: -44.4049797058
theta: 4.71474313736
speed: 14.0335502625
id: 1
t: 191
1546870784996
xxx after update is x: -3.35792350769
y: -45.003944397
theta: 4.60162258148
speed: 14.2250375748
id: 1
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:193


xxx before update is x: -3.35792350769
y: -45.003944397
theta: 4.60162258148
speed: 14.2250375748
id: 1
t: 192
1546870785066
xxx after update is x: -3.43732905388
y: -45.7491836548
theta: 4.76923704147
speed: 13.8087558746
id: 1
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:194


xxx before update is x: -3.43732905388
y: -45.7491836548
theta: 4.76923704147
speed: 13.8087558746
id: 1
t: 193
1546870785128
xxx after update is x: -3.aaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.437329053878784, -45.749183654785156, 4.769237041473389, 13.808755874633789)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:194


xxx before update is x: -8.51766586304
y: 3.6178483963
theta: 3.07486653328
speed: 13.6005620956
id: 0
t: 193
1546870785131
xxx after update is x: -8.67749404907
y: 3.47811388969
theta: 3.03760623932
speed: 14.1815948486
id: 0
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:195


xxx before update is x: -8.67749404907
y: 3.47811388969
theta: 3.03760623932
speed: 14.1815948486
id: 0
t: 194
1546870785194
xxx after update is x: -9.75877666473
y: 3.58339262009
theta: 3.15315651894
speed: 13.8717079163
id: 0
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
removed car with id 0 from grantlist. currentgrantlist: {}


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:196


xxx before update is x: -9.75877666473
y: 3.58339262009
theta: 3.15315651894
speed: 13.8717079163
id: 0
t: 195
1546870785262
xxx after update is x: -9.80428886414
y: 3.55035090446
theta: 3.23940062523
speed: 13.8458976746
id: 0
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1985037326812744, -47.85146713256836, 4.752154350280762, 13.648236274719238)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -9.80428886414
y: 3.55035090446
theta: 3.23940062523
speed: 13.8458976746
id: 0
t: 196
1546870785327
xxx after update is x: -10.8273029327
y: 3.27764034271
theta: 3.04961156845
speed: 13.6893386841
id: 0
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -10.8273029327
y: 3.27764034271
theta: 3.04961156845
speed: 13.6893386841
id: 0
t: 197
1546870785397
xxx after update is x: -11.6721143723
y: 3.1061770916
theta: 3.24180436134
speed: 13.8501386642
id: 0
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:198


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.8






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -11.6721143723
y: 3.1061770916
theta: 3.24180436134
speed: 13.8501386642
id: 0
t: 198
1546870785466
xxx after update is x: -12.8695135117
y: 3.26065659523
theta: 3.05668377876
speed: 13.8789272308
id: 055790138245
y: -45.9094390869
theta: 4.53132867813
speed: 13.858496666
id: 1
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (-8.677494049072266, 3.478113889694214, 3.0376062393188477, 14.181594848632812)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:195


xxx before update is x: -3.55790138245
y: -45.9094390869
theta: 4.53132867813
speed: 13.858496666
id: 1
t: 194
1546870785200
xxx after update is x: -3.96769380569
y: -47.3344764709
theta: 4.68729782104
speed: 13.784283638
id: 1
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:196


xxx before update is x: -3.96769380569
y: -47.3344764709
theta: 4.68729782104
speed: 13.784283638
id: 1
t: 195
1546870785268
xxx after update is x: -3.19850373268
y: -47.8514671326
theta: 4.75215435028
speed: 13.6482362747
id: 1
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (-9.804288864135742, 3.5503509044647217, 3.239400625228882, 13.845897674560547)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -3.19850373268
y: -47.8514671326
theta: 4.75215435028
speed: 13.6482362747
id: 1
t: 196
1546870785332
xxx after update is x: -3.48117947578
y: -48.482837677
theta: 4.80839920044
speed: 13.7446899414
id: 1
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.48117947578
y: -48.482837677
theta: 4.80839920044
speed: 13.7446899414
id: 1
t: 197
1546870785400
xxx after update is x: -3.56437730789
y: -48.8234634399
theta: 4.75453567505
speed: 13.7229766846
id: 1
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:198




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.56437730789
y: -48.8234634399
theta: 4.75453567505
speed: 13.7229766846
id: 1
t: 198
1546870785474
xxx after update is x: -3.30542302132
y: -49.4278831482
theta: 4.89732599258
speed: 14.0260820389
id: 1
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:199


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48799999999999794]
222 self.state_dicts[msg.id][msg.t] is (-12.869513511657715, 3.2606565952301025, 3.0566837787628174, 13.878927230834961)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.84444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: -3.30542302132
y: -49.4278831482
theta: 4.89732599258
speed: 14.0260820389
id: 1
t: 199
1546870785541
xxx after update is x: -3.83607888222
y: -50.052280426
theta: 4.74731254578
speed: 13.928524971
id: 1
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -3.83607888222
y: -50.052280426
theta: 4.74731254578
speed: 13.928524971
id: 1
t: 200
1546870785602
xxx after update is x: -3.11926484108
y: -50.3237800598
theta: 4.77494239807
speed: 14.2294616699
id: 1
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:202


xxx before update is x: -3.11926484108
y: -50.3237800598
theta: 4.77494239807
speed: 14.2294616699
id: 1
t: 201
1546870785668
xxx after update is x: -3.19635248184
y: -51.5920524597
theta: 4.72292518616
speed: 13.8594121933
id: 1
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.47039999999999804]
222 self.state_dicts[msg.id][msg.t] is (-13.630739212036133, 3.704771041870117, 3.191643238067627, 13.83530044555664)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:203


xxx before update is x: -3.19635248184
y: -51.5920524597
theta: 4.72292518616
speed: 13.8594121933
id: 1
t: 202
1546870785734
xxx after update is x: -3.10433149338
y: -51.200969696
theta: 4.79025745392
speed: 14.1351051331
id: 1
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:204


xxx before update is x: -3.10433149338
y: -51.200969696
theta: 4.79025745392
speed: 14.1351051331
id: 1
t: 203
1546870785799
xxx after update is x: -2.72283220291
y: -52.7636413574
theta: 4.67353773117
speed: 14.0138835907
id: 1
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
leave the update function 
in spin function, finish the n times spin:199




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -12.8695135117
y: 3.26065659523
theta: 3.05668377876
speed: 13.8789272308
id: 0
t: 199
1546870785534
xxx after update is x: -12.6206245422
y: 3.8656334877
theta: 3.16177845001
speed: 13.5244522095
id: 0
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:200


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.8360788822174072, -50.05228042602539, 4.747312545776367, 13.9285249710083)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -12.6206245422
y: 3.8656334877
theta: 3.16177845001
speed: 13.5244522095
id: 0
t: 200
1546870785594
xxx after update is x: -13.6637802124
y: 3.06153249741
theta: 3.07854294777
speed: 13.84694767
id: 0
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:202


xxx before update is x: -13.6637802124
y: 3.06153249741
theta: 3.07854294777
speed: 13.84694767
id: 0
t: 201
1546870785664
xxx after update is x: -13.630739212
y: 3.70477104187
theta: 3.19164323807
speed: 13.8353004456
id: 0
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -13.630739212
y: 3.70477104187
theta: 3.19164323807
speed: 13.8353004456
id: 0
t: 202
1546870785733
xxx after update is x: -14.7726917267
y: 3.5298242569
theta: 3.09261894226
speed: 13.8540124893
id: 0
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:203


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1043314933776855, -51.20096969604492, 4.790257453918457, 14.13510513305664)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -14.7726917267
y: 3.5298242569
theta: 3.09261894226
speed: 13.8540124893
id: 0
t: 203
1546870785793
xxx after update is x: -15.0415077209
y: 3.37819671631
theta: 3.28234672546
speed: 13.9370851517
id: 0
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:204




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -15.0415077209
y: 3.37819671631
theta: 3.28234672546
speed: 13.9370851517
id: 0
t: 204
1546870785858
xxx after update is x: -15.2338256836
y: 3.36505317688
theta: 3.26250.0, 0.505599999999998]
222 self.state_dicts[msg.id][msg.t] is (-15.041507720947266, 3.3781967163085938, 3.282346725463867, 13.937085151672363)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:205


xxx before update is x: -2.72283220291
y: -52.7636413574
theta: 4.67353773117
speed: 14.0138835907
id: 1
t: 204
1546870785865
xxx after update is x: -3.28187036514
y: -53.3045158386
theta: 4.79901695251
speed: 13.9974164963
id: 1
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:206


xxx before update is x: -3.28187036514
y: -53.3045158386
theta: 4.79901695251
speed: 13.9974164963
id: 1
t: 205
1546870785933
xxx after update is x: -3.53217363358
y: -53.6460456848
theta: 4.63796710968
speed: 13.7727651596
id: 1
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5151999999999983]
222 self.state_dicts[msg.id][msg.t] is (-16.650392532348633, 3.3445162773132324, 3.138000011444092, 14.006481170654297)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:207


xxx before update is x: -3.53217363358
y: -53.6460456848
theta: 4.63796710968
speed: 13.7727651596
id: 1
t: 206
1546870786001
xxx after update is x: -2.85038638115
y: -53.7750320435
theta: 4.74398565292
speed: 13.866765976
id: 1
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.2






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.85038638115
y: -53.7750320435
theta: 4.74398565292
speed: 13.866765976
id: 1
t: 207
1546870786078
xxx after update is x: -3.53963828087
y: -55.0202407837
theta: 4.82887887955
speed: 13.801984787
id: 1
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:208




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -3.53963828087
y: -55.0202407837
theta: 4.82887887955
speed: 13.801984787
id: 1
t: 208
1546870786141
xxx after update is x: -3.4929318428
y: -55.7158317566
theta: 4.63396024704
speed: 13.7317237854
id: 1
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5247999999999986]
2529289
speed: 13.7267341614
id: 0
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:205




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:206


xxx before update is x: -15.2338256836
y: 3.36505317688
theta: 3.26250529289
speed: 13.7267341614
id: 0
t: 205
1546870785929
xxx after update is x: -16.6503925323
y: 3.34451627731
theta: 3.13800001144
speed: 14.0064811707
id: 0
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5321736335754395, -53.64604568481445, 4.637967109680176, 13.772765159606934)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.15555555556






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -16.6503925323
y: 3.34451627731
theta: 3.13800001144
speed: 14.0064811707
id: 0
t: 206
1546870786011
xxx after update is x: -16.5781288147
y: 3.37875843048
theta: 3.28430008888
speed: 13.9657344818
id: 0
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:207




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:208


xxx before update is x: -16.5781288147
y: 3.37875843048
theta: 3.28430008888
speed: 13.9657344818
id: 0
t: 207
1546870786059
xxx after update is x: -17.659740448
y: 3.83116459846
theta: 3.15855050087
speed: 13.7752723694
id: 0
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -17.659740448
y: 3.83116459846
theta: 3.15855050087
speed: 13.7752723694
id: 0
t: 208
1546870786127
xxx after update is x: -18.2405204773
y: 3.86104869843
theta: 3.15967273712
speed: 13.8848400116
id: 0
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -18.2405204773
y: 3.86104869843
theta: 3.15967273712
speed: 13.8848400116
id: 0
t: 209
1546870786191
xxx after update is x: -18.5476970673
y: 3.13072443008
theta: 3.13782000542
speed: 13.905626297
id: 0
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:211


xxx before update is x: -18.5476970673
y: 3.13072443008
theta: 3.13782000542
speed: 13.905626297
id: 0
t: 210
1546870786261
xxx after update is x: -19.1696777344
y: 2.94589066505
theta: 3.20701980591
speed: 14.1719007492
id22 self.state_dicts[msg.id][msg.t] is (-18.240520477294922, 3.861048698425293, 3.159672737121582, 13.88484001159668)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -3.4929318428
y: -55.7158317566
theta: 4.63396024704
speed: 13.7317237854
id: 1
t: 209
1546870786204
xxx after update is x: -3.46928215027
y: -56.45936203
theta: 4.76457071304
speed: 14.1196098328
id: 1
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:211


xxx before update is x: -3.46928215027
y: -56.45936203
theta: 4.76457071304
speed: 14.1196098328
id: 1
t: 210
1546870786269
xxx after update is x: -2.99992489815
y: -56.5841598511
theta: 4.70603466034
speed: 13.6982059479
id: 1
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -2.99992489815
y: -56.5841598511
theta: 4.70603466034
speed: 13.6982059479
id: 1
t: 211
1546870786333
xxx after update is x: -3.40712094307
y: -57.7359313965
theta: 4.62077283859
speed: 13.7910346985
id: 1
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:212


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5263999999999986]
222 self.state_dicts[msg.id][msg.t] is (-20.212242126464844, 3.3563201427459717, 3.1320927143096924, 13.927502632141113)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -3.40712094307
y: -57.7359313965
theta: 4.62077283859
speed: 13.7910346985
id: 1
t: 212
1546870786397
xxx after update is x: -3.1664853096
y: -58.1784477234
theta: 4.60801124573
speed: 13.5827798843
id: 1
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:214


xxx before update is x: -3.1664853096
y: -58.1784477234
theta: 4.60801124573
speed: 13.5827798843
id: 1
t: 213
1546870786462
xxx after update is x: -3.02238607407
y: -58.6964874268
theta: 4.77634000778
speed: 14.0948400497
id: 1
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.503999999999998]
222 self.state_dicts[msg.id][msg.t] is (-21.123645782470703, 2.8755953311920166, 3.3119704723358154, 14.063737869262695)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = : 0
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.999924898147583, -56.58415985107422, 4.7060346603393555, 13.698205947875977)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:212


xxx before update is x: -19.1696777344
y: 2.94589066505
theta: 3.20701980591
speed: 14.1719007492
id: 0
t: 211
1546870786338
xxx after update is x: -20.2122421265
y: 3.35632014275
theta: 3.13209271431
speed: 13.9275026321
id: 0
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -20.2122421265
y: 3.35632014275
theta: 3.13209271431
speed: 13.9275026321
id: 0
t: 212
1546870786398
xxx after update is x: -21.2076530457
y: 3.57413434982
theta: 3.1940946579
speed: 13.8489437103
id: 0
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.16648530960083, -58.17844772338867, 4.608011245727539, 13.582779884338379)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -21.2076530457
y: 3.57413434982
theta: 3.1940946579
speed: 13.8489437103
id: 0
t: 213
1546870786460
xxx after update is x: -21.1236457825
y: 2.87559533119
theta: 3.31197047234
speed: 14.0637378693
id: 0
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:214


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.51111111111






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -21.1236457825
y: 2.87559533119
theta: 3.31197047234
speed: 14.0637378693
id: 0
t: 214
1546870786533
xxx after update is x: -22.0846443176
y: 3.00727319717
theta: 3.16164779663
speed: 13.440776825
id: 0
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:215




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:216


xxx before update is x: -22.0846443176
y: 3.00727319717
theta: 3.16164779663
speed: 13.440776825
id: 0
t: 215
1546870786592
xxx after update is x: -22.2410812378
y: 3.39025902748
theta: 3.20450949669
speed: 13.6975603104
id: 0
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:217


xxx before update is x: -22.2410812378
y: 3.390259False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.51111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.02238607407
y: -58.6964874268
theta: 4.77634000778
speed: 14.0948400497
id: 1
t: 214
1546870786543
xxx after update is x: -3.13616490364
y: -59.1630897522
theta: 4.828997612
speed: 13.9454936981
id: 1
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:215


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:216


xxx before update is x: -3.13616490364
y: -59.1630897522
theta: 4.828997612
speed: 13.9454936981
id: 1
t: 215
1546870786600
xxx after update is x: -3.13026499748
y: -59.9463615417
theta: 4.76618719101
speed: 13.7910070419
id: 1
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:217


xxx before update is x: -3.13026499748
y: -59.9463615417
theta: 4.76618719101
speed: 13.7910070419
id: 1
t: 216
1546870786672
xxx after update is x: -2.69462037086
y: -61.0183486938
theta: 4.62735319138
speed: 14.2809371948
id: 1
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (-23.63422203063965, 3.382575035095215, 3.0928213596343994, 14.148815155029297)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:218


xxx before update is x: -2.69462037086
y: -61.0183486938
theta: 4.62735319138
speed: 14.2809371948
id: 1
t: 217
1546870786743
xxx after update is x: -3.01044917107
y: -61.0345649719
theta: 4.54936742783
speed: 13.7654094696
id: 1
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -3.01044917107
y: -61.0345649719
theta: 4.54936742783
speed: 13.7654094696
id: 1
t: 218
1546870786795
xxx after update is x: -3.42219614983
y: -62.0081253052
theta: 4.82517242432
speed: 14.026096344
id: 1
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:220


xxx before upda02748
theta: 3.20450949669
speed: 13.6975603104
id: 0
t: 216
1546870786661
xxx after update is x: -23.6342220306
y: 3.3825750351
theta: 3.09282135963
speed: 14.148815155
id: 0
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.694620370864868, -61.018348693847656, 4.627353191375732, 14.280937194824219)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -23.6342220306
y: 3.3825750351
theta: 3.09282135963
speed: 14.148815155
id: 0
t: 217
1546870786733
xxx after update is x: -23.6208133698
y: 2.92856931686
theta: 3.11001300812
speed: 13.8909511566
id: 0
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:218




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -23.6208133698
y: 2.92856931686
theta: 3.11001300812
speed: 13.8909511566
id: 0
t: 218
1546870786792
xxx after update is x: -24.5393638611
y: 3.07174348831
theta: 3.12378191948
speed: 13.8774013519
id: 0
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:220


xxx before update is x: -24.5393638611
y: 3.07174348831
theta: 3.12378191948
speed: 13.8774013519
id: 0
t: 219
1546870786860
xxx after update is x: -25.4780769348
y: 3.040620327
theta: 3.17973589897
speed: 13.8693523407
id: 0
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4139554500579834, -62.52158737182617, 4.7201409339904785, 13.68455982208252)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -25.4780769348
y: 3.040620327
theta: 3.17973589897
speed: 13.8693523407
id: 0
t: 220
1546870786933
xxx after update is x: -25.6498355865
y: 2.98888015747
theta: 3.15792536736
speed: 13.7986965179
id: 0
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:222


xxx before update is x: -25.6498355865
y: 2.98888015747
theta: 3.15792536736
speed: 13.7986965179
id: 0
t: 221
1546870786999
xxx after update is x: -26.0337600708
y: 2.94161844254
theta: 3.21238923073
speed: 14.0481109619
id: 0
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.86666666667






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiite is x: -3.42219614983
y: -62.0081253052
theta: 4.82517242432
speed: 14.026096344
id: 1
t: 219
1546870786864
xxx after update is x: -3.41395545006
y: -62.5215873718
theta: 4.72014093399
speed: 13.6845598221
id: 1
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4943999999999979]
222 self.state_dicts[msg.id][msg.t] is (-25.478076934814453, 3.0406203269958496, 3.1797358989715576, 13.869352340698242)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -3.41395545006
y: -62.5215873718
theta: 4.72014093399
speed: 13.6845598221
id: 1
t: 220
1546870786928
xxx after update is x: -3.57411646843
y: -62.832950592
theta: 4.72577381134
speed: 14.0800428391
id: 1
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.57411646843
y: -62.832950592
theta: 4.72577381134
speed: 14.0800428391
id: 1
t: 221
1546870787004
xxx after update is x: -3.42236399651
y: -63.4268341064
theta: 4.89660263062
speed: 13.5663385391
id: 1
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:222


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.86666666667






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -3.42236399651
y: -63.4268341064
theta: 4.89660263062
speed: 13.5663385391
id: 1
t: 222
1546870787075
xxx after update is x: -3.38638520241
y: -64.6452331543
theta: 4.79677391052
speed: 13.404132843
id: 1
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:224


xxx before update is x: -3.38638520241
y: -64.6452331543
theta: 4.79677391052
speed: 13.404132843
id: 1
t: 223
1546870787134
xxx after update is x: -3.72576665878
y: -65.488861084
theta: 4.70107412338
speed: 13.7335033417
id: 1
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4943999999999979]
222 self.state_dicts[msg.id][msg.t] is (-27.647905349731445, 3.0793747901916504, 3.134387254714966, 13.883054733276367)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:225


xxx before update is x: -3.72ii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -26.0337600708
y: 2.94161844254
theta: 3.21238923073
speed: 14.0481109619
id: 0
t: 222
1546870787073
xxx after update is x: -26.7811317444
y: 3.70675778389
theta: 3.13680887222
speed: 14.0064058304
id: 0
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:224


xxx before update is x: -26.7811317444
y: 3.70675778389
theta: 3.13680887222
speed: 14.0064058304
id: 0
t: 223
1546870787140
xxx after update is x: -27.6479053497
y: 3.07937479019
theta: 3.13438725471
speed: 13.8830547333
id: 0
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:225


xxx before update is x: -27.6479053497
y: 3.07937479019
theta: 3.13438725471
speed: 13.8830547333
id: 0
t: 224
1546870787194
xxx after update is x: -28.3700618744
y: 3.37218809128
theta: 3.19984507561
speed: 14.0833625793
id: 0
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2406153678894043, -65.25748443603516, 4.740570545196533, 13.89734935760498)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -28.3700618744
y: 3.37218809128
theta: 3.19984507561
speed: 14.0833625793
id: 0
t: 225
1546870787262
xxx after update is x: -28.8118858337
y: 3.39696407318
theta: 3.18095636368
speed: 13.7001781464
id: 0
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:226




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -28.8118858337
y: 3.39696407318
theta: 3.18095636368
speed: 13.7001781464
id: 0
t: 226
1546870787332
xxx after update is x: -29.5555324554
y: 3.81500291824
theta: 3.11260509491
speed: 13.8847494125
id: 0
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:228


xxx before update is x: -29.5555324554
y: 3.81500291824
theta: 3.11260509491
speed: 13.8847494125
id: 0
t: 227
1546870787393
xxx after update is x: -29.7658119202
y: 3.40099453926
theta: 3.06742429733
speed: 14.2177944183
id: 0
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (-3.3716626167297363, -67.11415100097656, 4.765344142913818, 13.90331745147705)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
576665878
y: -65.488861084
theta: 4.70107412338
speed: 13.7335033417
id: 1
t: 224
1546870787204
xxx after update is x: -3.24061536789
y: -65.257484436
theta: 4.7405705452
speed: 13.8973493576
id: 1
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.24061536789
y: -65.257484436
theta: 4.7405705452
speed: 13.8973493576
id: 1
t: 225
1546870787270
xxx after update is x: -3.78728747368
y: -65.8182678223
theta: 4.84224414825
speed: 14.0734205246
id: 1
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:226


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5087999999999981]
222 self.state_dicts[msg.id][msg.t] is (-28.811885833740234, 3.3969640731811523, 3.1809563636779785, 13.700178146362305)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -3.78728747368
y: -65.8182678223
theta: 4.84224414825
speed: 14.0734205246
id: 1
t: 226
1546870787334
xxx after update is x: -3.31461763382
y: -66.9766921997
theta: 4.58000278473
speed: 14.2348060608
id: 1
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:228


xxx before update is x: -3.31461763382
y: -66.9766921997
theta: 4.58000278473
speed: 14.2348060608
id: 1
t: 227
1546870787397
xxx after update is x: -3.37166261673
y: -67.114151001
theta: 4.76534414291
speed: 13.9033174515
id: 1
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -3.37166261673
y: -67.114151001
theta: 4.76534414291
speed: 13.9033174515
id: 1
t: 228
1546870787465
xxx after update is x: -3.59697818756
y: -68.0842666626
theta: 4.73964166641
speed: 13.9937334061
id: 1
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5247999999999986]
222 self.state_dicts[msg.id][msg.t] is (-30.696653366088867, 3.417173385620117, 3.231800079345703, 13.625852584838867)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -3.59697818756
y: -68.0842666626
theta: 4.73964166641
speed: 13.9937334061
id: 1
t: 229
1546870787536
xxx after update is x: -3.21126103401
y: -68.10962677
theta: 4.78955888748
speed: 13.449669838
id: 1
t: 230
maneuver_negotiout
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -29.7658119202
y: 3.40099453926
theta: 3.06742429733
speed: 14.2177944183
id: 0
t: 228
1546870787467
xxx after update is x: -30.6966533661
y: 3.41717338562
theta: 3.23180007935
speed: 13.6258525848
id: 0
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -30.6966533661
y: 3.41717338562
theta: 3.23180007935
speed: 13.6258525848
id: 0
t: 229
1546870787532
xxx after update is x: -31.4726200104
y: 3.53019928932
theta: 3.16093611717
speed: 13.5051870346
id: 0
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.2222222222






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:231


xxx before update is x: -31.4726200104
y: 3.53019928932
theta: 3.16093611717
speed: 13.5051870346
id: 0
t: 230
1546870787590
xxx after update is x: -32.5010032654
y: 4.11541461945
theta: 3.13458323479
speed: 13.9952096939
id: 0
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2638540267944336, -68.70284271240234, 4.713435649871826, 14.124094009399414)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:232


xxx before update is x: -32.5010032654
y: 4.11541461945
theta: 3.13458323479
speed: 13.9952096939
id: 0
t: 231
1546870787660
xxx after update is x: -32.5066261292
y: 2.97326922417
theta: 3.13207817078
speed: 14.0878362656
id: 0
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -32.5066261292
y: 2.97326922417
theta: 3.13207817078
speed: 14.0878362656
id: 0
t: 232
1546870787725
xxx after update is x: -33.399684906
y: 3.19437551498
theta: 3.16860699654
speed: 14.1743783951
id: 0
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -33.399684906
y: 3.19437551498
theta: 3.16860699654
speed: 14.1743783951
id: 0
t: 233
1546870787792
xxx after update is x: -33.7344512939
y: 3.30529284477
theta: 3.01390004158
speed: 13.7167158127
id: 0
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.9505324363708496, -70.5592041015625, 4.6989970207214355, 14.013406753540039)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


goinatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.2222222222






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:231


xxx before update is x: -3.21126103401
y: -68.10962677
theta: 4.78955888748
speed: 13.449669838
id: 1
t: 230
1546870787604
xxx after update is x: -3.26385402679
y: -68.7028427124
theta: 4.71343564987
speed: 14.1240940094
id: 1
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:232


xxx before update is x: -3.26385402679
y: -68.7028427124
theta: 4.71343564987
speed: 14.1240940094
id: 1
t: 231
1546870787664
xxx after update is x: -3.5568344593
y: -70.0836715698
theta: 4.63385343552
speed: 13.8168811798
id: 1
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5487999999999993]
222 self.state_dicts[msg.id][msg.t] is (-32.50662612915039, 2.97326922416687, 3.132078170776367, 14.087836265563965)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -3.5568344593
y: -70.0836715698
theta: 4.63385343552
speed: 13.8168811798
id: 1
t: 232
1546870787730
xxx after update is x: -3.09736728668
y: -70.5433731079
theta: 4.6387052536
speed: 13.760061264
id: 1
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -3.09736728668
y: -70.5433731079
theta: 4.6387052536
speed: 13.760061264
id: 1
t: 233
1546870787793
xxx after update is x: -2.95053243637
y: -70.5592041016
theta: 4.69899702072
speed: 14.0134067535
id: 1
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (-33.73445129394531, 3.305292844772339, 3.0139000415802, 13.716715812683105)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -2.95053243637
y: -70.5592041016
theta: 4.69899702072
speed: 14.0134067535
id: 1
t: 234
1546870787866
xxx after update is x: -2.99537110329
y: -71.7301177979
theta: 4.63419532776
speed: 13.814535141
id: 1
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:236


xxx before update is x: -2.99537110329
y: -71.7301177979
theta: 4.63419532776
speed: 13.814535141
id: 1
t: 235
1546870787932
xxx after update is x: -3.76190900803
y: -71.8646697998
theta: 4.741563797
speed: 13.6727237701
id: 1
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48639999999999795]
222 self.state_dicts[msg.id][msg.t] is (-34.54762649536133, 3.290348768234253, 3.1940219402313232, 14.038493156433105)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.76190900803
y: -71.8646697998
theta: 4.741563797
speed: 13.6727237701
id: 1
t: 236
1546870787997
xxx after update is x: -3.16016173363
y: -73.0777664185
theta: 4.7194185257
speed: 13.7746982574
id: 1
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:237




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -3.16016173363
y: -73.0777664185
theta: 4.7194185257
speed: 13.7746982574
id: 1
t: 237
1546870788069
xxx after update is x: -2.72255825996
y: -73.5524749756
theta: 4.57865476608
speed: 13.7102947235
id: 1
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48639999999999795]
222 self.state_dicts[msg.id][msg.t] is (-35.95719528198242, 3.567793607711792, 3.155137062072754, 13.622940063476562)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.5777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:239


xxx before update is x: -2.72255825996
y: -73.5524749756
theta: 4.57865476608
speed: 13.7102947235
id: 1
t: 238
1546870788130
xxx after update is x: -3.1673977375
y: -74.1334457397
theta: 4.71094560623
speed: 13.9141817093
id: 1
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:240


xxx before update is x: -3.1673977375
y: -74.1334457397
theta: 4.71094560623
speed: 13.9141817093
id: 1
t: 239
1546870788193
xxx after update is x: -3.45486354828
y: -74.8509521484
theta: 4.64214706421
speed: 13.5201702118
id: 1
t: 240
maneuver_negotiatir.py finish the update agent state from rog to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -33.7344512939
y: 3.30529284477
theta: 3.01390004158
speed: 13.7167158127
id: 0
t: 234
1546870787861
xxx after update is x: -34.2337265015
y: 2.77449965477
theta: 3.16792607307
speed: 13.6655025482
id: 0
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -34.2337265015
y: 2.77449965477
theta: 3.16792607307
speed: 13.6655025482
id: 0
t: 235
1546870787934
xxx after update is x: -34.5476264954
y: 3.29034876823
theta: 3.19402194023
speed: 14.0384931564
id: 0
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:236


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.761909008026123, -71.86466979980469, 4.74156379699707, 13.672723770141602)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -34.5476264954
y: 3.29034876823
theta: 3.19402194023
speed: 14.0384931564
id: 0
t: 236
1546870787992
xxx after update is x: -35.2307395935
y: 3.75317502022
theta: 3.06376290321
speed: 13.8003873825
id: 0
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.5333333333






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -35.2307395935
y: 3.75317502022
theta: 3.06376290321
speed: 13.8003873825
id: 0
t: 237
1546870788063
xxx after update is x: -35.957195282
y: 3.56779360771
theta: 3.15513706207
speed: 13.6229400635
id: 0
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.7225582599639893, -73.55247497558594, 4.578654766082764, 13.710294723510742)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:239


xxx before update is x: -35.957195282
y: 3.56779360771
theta: 3.15513706207
speed: 13.6229400635
id: 0
t: 238
1546870788132
xxx after update is x: -37.3351478577
y: 3.60920882225
theta: 3.24769210815
speed: 13.498919487
id: 0
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:240


xxx before update is x: -37.3351478577
y: 3.60920882225
theta: 3.24769210815
speed: 13.498919487
id: 0
t: 239
1546870788199
xxx after ups funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5856000000000003]
222 self.state_dicts[msg.id][msg.t] is (-37.378875732421875, 2.6876769065856934, 3.1398134231567383, 14.039204597473145)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.45486354828
y: -74.8509521484
theta: 4.64214706421
speed: 13.5201702118
id: 1
t: 240
1546870788264
xxx after update is x: -3.20743203163
y: -74.8286819458
theta: 4.70345020294
speed: 14.0554618835
id: 1
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:241




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -3.20743203163
y: -74.8286819458
theta: 4.70345020294
speed: 14.0554618835
id: 1
t: 241
1546870788330
xxx after update is x: -3.17230892181
y: -75.8978118896
theta: 4.83858442307
speed: 13.9475221634
id: 1
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5327999999999988]
222 self.state_dicts[msg.id][msg.t] is (-38.77981948852539, 2.880610942840576, 3.291038751602173, 13.720311164855957)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:243


xxx before update is x: -3.17230892181
y: -75.8978118896
theta: 4.83858442307
speed: 13.9475221634
id: 1
t: 242
1546870788400
xxx after update is x: -2.9275329113
y: -76.9582672119
theta: 4.72444295883
speed: 13.8775396347
id: 1
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:244


xxx before update is x: -2.9275329113
y: -76.9582672119
theta: 4.72444295883
speed: 13.8775396347
id: 1
t: 243
1546870788465
xxx after update is x: -3.54537653923
y: -77.4324417114
theta: 4.78257989883
speed: 13.9459600449
id: 1
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5087999999999981]
222 self.state_dicts[msg.id][msg.t] is (-39.530643463134766, 3.280012845993042, 3.0842862129211426, 13.582019805908203)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:245


xxx before update is x: -3.54537653923
y: -77.4324417114
theta: 4.78257989883
speed: 13.9459600449
id: 1
t: 244
1546870788537
xxx after update is x: -3.30date is x: -37.3788757324
y: 2.68767690659
theta: 3.13981342316
speed: 14.0392045975
id: 0
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:241


xxx before update is x: -37.3788757324
y: 2.68767690659
theta: 3.13981342316
speed: 14.0392045975
id: 0
t: 240
1546870788259
xxx after update is x: -38.2443962097
y: 3.19630479813
theta: 2.97383570671
speed: 13.7073163986
id: 0
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2074320316314697, -74.82868194580078, 4.7034502029418945, 14.055461883544922)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -38.2443962097
y: 3.19630479813
theta: 2.97383570671
speed: 13.7073163986
id: 0
t: 241
1546870788328
xxx after update is x: -38.7798194885
y: 2.88061094284
theta: 3.2910387516
speed: 13.7203111649
id: 0
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:243


xxx before update is x: -38.7798194885
y: 2.88061094284
theta: 3.2910387516
speed: 13.7203111649
id: 0
t: 242
1546870788393
xxx after update is x: -39.42370224
y: 3.10026168823
theta: 3.10751056671
speed: 13.7838420868
id: 0
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:244


xxx before update is x: -39.42370224
y: 3.10026168823
theta: 3.10751056671
speed: 13.7838420868
id: 0
t: 243
1546870788457
xxx after update is x: -39.5306434631
y: 3.28001284599
theta: 3.08428621292
speed: 13.5820198059
id: 0
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5453765392303467, -77.43244171142578, 4.7825798988342285, 13.94596004486084)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:245


xxx before update is x: -39.5306434631
y: 3.28001284599
theta: 3.08428621292
speed: 13.5820198059
id: 0
t: 244
1546870788528
xxx after update is x: -40.1895866394
y: 3.49724459648
theta: 3.11128854752
speed: 13.6683387756
id: 0
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.8888888889






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:246


maneuver_negotiatir.py in the tr300140381
y: -77.4753494263
theta: 4.68015813828
speed: 13.4723844528
id: 1
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:246


xxx before update is x: -3.30300140381
y: -77.4753494263
theta: 4.68015813828
speed: 13.4723844528
id: 1
t: 245
1546870788599
xxx after update is x: -2.895195961
y: -78.2714614868
theta: 4.70452547073
speed: 14.1468172073
id: 1
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.9333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -2.895195961
y: -78.2714614868
theta: 4.70452547073
speed: 14.1468172073
id: 1
t: 246
1546870788665
xxx after update is x: -3.12072181702
y: -79.1802749634
theta: 4.85484313965
speed: 13.9454784393
id: 1
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5087999999999981]
222 self.state_dicts[msg.id][msg.t] is (-41.777801513671875, 3.359339714050293, 3.08052921295166, 14.01949405670166)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -3.12072181702
y: -79.1802749634
theta: 4.85484313965
speed: 13.9454784393
id: 1
t: 247
1546870788733
xxx after update is x: -3.20695853233
y: -79.4235916138
theta: 4.68861961365
speed: 13.8606290817
id: 1
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4943999999999979]
222 self.state_dicts[msg.id][msg.t] is (-42.316123962402344, 3.346389055252075, 3.3738861083984375, 13.415480613708496)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -3.20695853233
y: -79.4235916138
theta: 4.68861961365
speed: 13.8606290817
id: 1
t: 248
1546870788798
xxx after update is x: -3.301633358
y: -80.3539810181
theta: 4.63871002197
speed: 13.7129850388
id: 1
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:250


xxx before update is x: -3.301633358
y: -80.3539810181
theta: 4.63871002197
speed: 13.7129850388
id: 1
t: 249
1546870788864
xxx after update is x: -3.1631166935
y: -80.3935y maneuver function update -. sfinishxxx before update is x: -40.1895866394
y: 3.49724459648
theta: 3.11128854752
speed: 13.6683387756
id: 0
t: 245
1546870788593
xxx after update is x: -40.940448761
y: 3.39807462692
theta: 3.05258464813
speed: 13.8530960083
id: 0
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -40.940448761
y: 3.39807462692
theta: 3.05258464813
speed: 13.8530960083
id: 0
t: 246
1546870788661
xxx after update is x: -41.7778015137
y: 3.35933971405
theta: 3.08052921295
speed: 14.0194940567
id: 0
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1207218170166016, -79.1802749633789, 4.8548431396484375, 13.945478439331055)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -41.7778015137
y: 3.35933971405
theta: 3.08052921295
speed: 14.0194940567
id: 0
t: 247
1546870788734
xxx after update is x: -42.3161239624
y: 3.34638905525
theta: 3.3738861084
speed: 13.4154806137
id: 0
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -42.3161239624
y: 3.34638905525
theta: 3.3738861084
speed: 13.4154806137
id: 0
t: 248
1546870788793
xxx after update is x: -42.8912582397
y: 3.1532394886
theta: 3.16273117065
speed: 13.8876047134
id: 0
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.301633358001709, -80.3539810180664, 4.638710021972656, 13.712985038757324)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -42.8912582397
y: 3.1532394886
theta: 3.16273117065
speed: 13.8876047134
id: 0
t: 249
1546870788859
xxx after update is x: -43.8278923035
y: 2.59804296494
theta: 3.119754076
speed: 13.8890724182
id: 0
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:250




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:251


xxx before update is x: -43.8278923035
y: 2.59804296494
theta: 3.119754076
speed: 13.8890724182
id: 0
t: 250
1546870788930
xxx after update is x: -43.983581543
y: 3.86944556236
theta: 3.27251052856
speed: 13.7387723923
id: 0
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:252

165405
theta: 4.7000541687
speed: 14.0011873245
id: 1
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5087999999999981]
222 self.state_dicts[msg.id][msg.t] is (-43.8278923034668, 2.5980429649353027, 3.1197540760040283, 13.88907241821289)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:251


xxx before update is x: -3.1631166935
y: -80.3935165405
theta: 4.7000541687
speed: 14.0011873245
id: 1
t: 250
1546870788935
xxx after update is x: -3.10578107834
y: -81.185798645
theta: 4.67672491074
speed: 13.6591386795
id: 1
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:252


xxx before update is x: -3.10578107834
y: -81.185798645
theta: 4.67672491074
speed: 13.6591386795
id: 1
t: 251
1546870788997
xxx after update is x: -3.11811685562
y: -82.0943450928
theta: 4.71771526337
speed: 13.9940013885
id: 1
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5343999999999989]
222 self.state_dicts[msg.id][msg.t] is (-44.465728759765625, 3.058551549911499, 3.088186025619507, 13.979802131652832)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:253


xxx before update is x: -3.11811685562
y: -82.0943450928
theta: 4.71771526337
speed: 13.9940013885
id: 1
t: 252
1546870789060
xxx after update is x: -2.54662299156
y: -82.3763885498
theta: 4.74221515656
speed: 14.1108379364
id: 1
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.2444444444






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:254


xxx before update is x: -2.54662299156
y: -82.3763885498
theta: 4.74221515656
speed: 14.1108379364
id: 1
t: 253
1546870789127
xxx after update is x: -3.45293164253
y: -83.5590209961
theta: 4.76372337341
speed: 13.9723300934
id: 1
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
xxx before update is x: -3.45293164253
y: -83.5590209961
theta: 4.76372337341
speed: 13.9723300934
id: 1
t: 254
1546870789199
xxx after update is x: -3.23008155823
y: -83.7219772339
theta: 4.81261014938
speed: 14.0686578751
id: 1
t: 255
maneuver_negotiatir.py finish 
xxx before update is x: -43.983581543
y: 3.86944556236
theta: 3.27251052856
speed: 13.7387723923
id: 0
t: 251
1546870788993
xxx after update is x: -44.4657287598
y: 3.05855154991
theta: 3.08818602562
speed: 13.9798021317
id: 0
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.118116855621338, -82.09434509277344, 4.717715263366699, 13.994001388549805)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:253


xxx before update is x: -44.4657287598
y: 3.05855154991
theta: 3.08818602562
speed: 13.9798021317
id: 0
t: 252
1546870789057
xxx after update is x: -45.5182647705
y: 3.15159010887
theta: 3.11166763306
speed: 13.9247980118
id: 0
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.2444444444






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:254


xxx before update is x: -45.5182647705
y: 3.15159010887
theta: 3.11166763306
speed: 13.9247980118
id: 0
t: 253
1546870789129
xxx after update is x: -46.0657958984
y: 2.81807994843
theta: 3.14802670479
speed: 14.0457286835
id: 0
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:255


xxx before update is x: -46.0657958984
y: 2.81807994843
theta: 3.14802670479
speed: 14.0457286835
id: 0
t: 254
1546870789191
xxx after update is x: -46.9976730347
y: 3.16950798035
theta: 3.23981714249
speed: 13.982966423
id: 0
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.230081558227539, -83.72197723388672, 4.812610149383545, 14.068657875061035)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -46.9976730347
y: 3.16950798035
theta: 3.23981714249
speed: 13.982966423
id: 0
t: 255
1546870789261
xxx after update is x: -47.4542694092
y: 3.28842782974
theta: 3.18264627457
speed: 13.7600774765
id: 0
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:256




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -47.4542694092
y: 3.28842782974
theta: 3.18264627457
speed: 13.7600774765
id: 0
t: 256
1546870789329
xxx after update is x: -47.74609375
y: 2.8516626358
theta: 3.12570476532
speed: 13.9880332947
id: 0
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:257


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.675062417984009, -85.23851776123047, 4the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:255


************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.502399999999998]
222 self.state_dicts[msg.id][msg.t] is (-46.99767303466797, 3.1695079803466797, 3.2398171424865723, 13.982966423034668)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:256


xxx before update is x: -3.23008155823
y: -83.7219772339
theta: 4.81261014938
speed: 14.0686578751
id: 1
t: 255
1546870789263
xxx after update is x: -3.43992042542
y: -84.8322677612
theta: 4.69727468491
speed: 13.878783226
id: 1
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:257


xxx before update is x: -3.43992042542
y: -84.8322677612
theta: 4.69727468491
speed: 13.878783226
id: 1
t: 256
1546870789337
xxx after update is x: -2.67506241798
y: -85.2385177612
theta: 4.52519416809
speed: 13.5943031311
id: 1
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48639999999999795]
222 self.state_dicts[msg.id][msg.t] is (-47.74609375, 2.8516626358032227, 3.125704765319824, 13.988033294677734)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:258


xxx before update is x: -2.67506241798
y: -85.2385177612
theta: 4.52519416809
speed: 13.5943031311
id: 1
t: 257
1546870789393
xxx after update is x: -2.84227991104
y: -85.8862533569
theta: 4.90277290344
speed: 13.6189880371
id: 1
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:259


xxx before update is x: -2.84227991104
y: -85.8862533569
theta: 4.90277290344
speed: 13.6189880371
id: 1
t: 258
1546870789464
xxx after update is x: -3.5437951088
y: -86.3175811768
theta: 4.78661346436
speed: 13.5530366898
id: 1
t: 259
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4639999999999981]
222 self.state_dicts[msg.id][msg.t] is (-49.032405853271484, 2.9230244159698486, 3.141232967376709, 13.772623062133789)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.5111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooo.52519416809082, 13.594303131103516)

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:258


xxx before update is x: -47.74609375
y: 2.8516626358
theta: 3.12570476532
speed: 13.9880332947
id: 0
t: 257
1546870789390
xxx after update is x: -48.9617080688
y: 3.45127511024
theta: 3.13602209091
speed: 14.0116424561
id: 0
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion

if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:259


xxx before update is x: -48.9617080688
y: 3.45127511024
theta: 3.13602209091
speed: 14.0116424561
id: 0
t: 258
1546870789462
xxx after update is x: -49.0324058533
y: 2.92302441597
theta: 3.14123296738
speed: 13.7726230621
id: 0
t: 259
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -49.0324058533
y: 2.92302441597
theta: 3.14123296738
speed: 13.7726230621
id: 0
t: 259
1546870789658
xxx after update is x: -51.3233642578
y: 3.38925909996
theta: 3.22587275505
speed: 14.0182657242
id: 0
t: 260
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.5555555556






self.maneuver_requested left
leave the update function 
in spin function, finish the n times spin:260




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -51.3233642578
y: 3.38925909996
theta: 3.22587275505
speed: 14.0182657242
id: 0
t: 260
1546870789665
xxx after update is x: -50.7884063721
y: 3.65071296692
theta: 2.98679351807
speed: 14.1894855499
id: 0
t: 261
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:261




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -50.7884063721
y: 3.65071296692
theta: 2.98679351807
speed: 14.1894855499
id: 0
t: 261
1546870789668
xxx after update is x: -51.0506324768
y: 3.37664175034
theta: 3.20431828499
speed: 13.7929973602
id: 0
t: 262
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:262


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:263


xxx before update is x: -51.0506324768
y: 3.37664175034
theta: 3.20431828499
speed: 13.7929973602
id: 0
t: 262
1546870789733
xxx after update is x: -51.5151519775
y: 3.1166677475
theta: 3.16986393929
speed: 13.9426574707
id: 0
t: 263
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave theoo
leave the update function 
in spin function, finish the n times spin:260




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:261


xxx before update is x: -3.5437951088
y: -86.3175811768
theta: 4.78661346436
speed: 13.5530366898
id: 1
t: 259
1546870789656
xxx after update is x: -3.1411523819
y: -88.1453170776
theta: 4.73362493515
speed: 13.5824403763
id: 1
t: 260
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.1411523819
y: -88.1453170776
theta: 4.73362493515
speed: 13.5824403763
id: 1
t: 260
1546870789657
xxx after update is x: -3.58027100563
y: -88.7879867554
theta: 4.8180642128
speed: 13.962053299
id: 1
t: 261
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:262


xxx before update is x: -3.58027100563
y: -88.7879867554
theta: 4.8180642128
speed: 13.962053299
id: 1
t: 261
1546870789668
xxx after update is x: -3.48424935341
y: -87.8547744751
theta: 4.68986034393
speed: 13.5131063461
id: 1
t: 262
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:263


xxx before update is x: -3.48424935341
y: -87.8547744751
theta: 4.68986034393
speed: 13.5131063461
id: 1
t: 262
1546870789736
xxx after update is x: -3.21506714821
y: -89.068031311
theta: 4.70544195175
speed: 14.2829637527
id: 1
t: 263
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:264


xxx before update is x: -3.21506714821
y: -89.068031311
theta: 4.70544195175
speed: 14.2829637527
id: 1
t: 263
1546870789798
xxx after update is x: -3.18898367882
y: -89.6321563721
theta: 4.80482244492
speed: 13.6874313354
id: 1
t: 264
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5503999999999993]
222 self.state_dicts[msg.id][msg.t] is (-52.40119934082031, 3.2676827907562256, 3.142732858657837, 14.04780387878418)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:265


xxx before update is x: -3.18898367882
y: -89.6321563721
theta: 4.80482244492
speed: 13.6874313354
id: 1
t: 264
1546870789863
xxx after update is x: -3.34870529175
y: -90.0742950439
theta: 4.7143368721
speed: 14.0496225357
id: 1
t: 265
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiii update function xxx before update is x: -51.5151519775
y: 3.1166677475
theta: 3.16986393929
speed: 13.9426574707
id: 0
t: 263
1546870789838
xxx after update is x: -52.4011993408
y: 3.26768279076
theta: 3.14273285866
speed: 14.0478038788
id: 0
t: 264
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:264




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:265


xxx before update is x: -52.4011993408
y: 3.26768279076
theta: 3.14273285866
speed: 14.0478038788
id: 0
t: 264
1546870789857
xxx after update is x: -52.4409065247
y: 3.14943695068
theta: 3.10999774933
speed: 13.758307457
id: 0
t: 265
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.348705291748047, -90.07429504394531, 4.71433687210083, 14.049622535705566)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:266


xxx before update is x: -52.4409065247
y: 3.14943695068
theta: 3.10999774933
speed: 13.758307457
id: 0
t: 265
1546870789927
xxx after update is x: -54.0062522888
y: 2.99016046524
theta: 3.17483997345
speed: 13.446969986
id: 0
t: 266
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:267


xxx before update is x: -54.0062522888
y: 2.99016046524
theta: 3.17483997345
speed: 13.446969986
id: 0
t: 266
1546870789991
xxx after update is x: -53.9747085571
y: 2.96485376358
theta: 3.08367705345
speed: 13.614320755
id: 0
t: 267
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:268


xxx before update is x: -53.9747085571
y: 2.96485376358
theta: 3.08367705345
speed: 13.614320755
id: 0
t: 267
1546870790067
xxx after update is x: -54.6419487
y: 3.03853726387
theta: 2.93274950981
speed: 13.8658018112
id: 0
t: 268
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.8509998321533203, -92.15494537353516, 4.7237701416015625, 13.921001434326172)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:269


xxx before update is x: -54.6419487
y: 3.03853726387
theta: 2.93274950981
speed: 13.8658018112
id: 0
t: 268
1546870790124
xxx after update is x: -55.413318634
y: 3.24289417267
theta: 3.1570110321
speed: 14.053147316
id: 0
t: 269
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.9555555556






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:266


xxx before update is x: -3.34870529175
y: -90.0742950439
theta: 4.7143368721
speed: 14.0496225357
id: 1
t: 265
1546870789931
xxx after update is x: -3.15265130997
y: -90.7783508301
theta: 4.78560590744
speed: 14.1084346771
id: 1
t: 266
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4943999999999979]
222 self.state_dicts[msg.id][msg.t] is (-54.00625228881836, 2.9901604652404785, 3.174839973449707, 13.446969985961914)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:267


xxx before update is x: -3.15265130997
y: -90.7783508301
theta: 4.78560590744
speed: 14.1084346771
id: 1
t: 266
1546870789996
xxx after update is x: -3.36201405525
y: -91.2303924561
theta: 4.76463937759
speed: 13.848531723
id: 1
t: 267
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:268


xxx before update is x: -3.36201405525
y: -91.2303924561
theta: 4.76463937759
speed: 13.848531723
id: 1
t: 267
1546870790066
xxx after update is x: -2.85099983215
y: -92.1549453735
theta: 4.7237701416
speed: 13.9210014343
id: 1
t: 268
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:269


xxx before update is x: -2.85099983215
y: -92.1549453735
theta: 4.7237701416
speed: 13.9210014343
id: 1
t: 268
1546870790133
xxx after update is x: -2.96128201485
y: -92.8796386719
theta: 4.69315338135
speed: 13.7581920624
id: 1
t: 269
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.9555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:270


xxx before update is x: -2.96128201485
y: -92.8796386719
theta: 4.69315338135
speed: 13.7581920624
id: 1
t: 269
1546870790197
xxx after update is x: -3.43079924583
y: -93.4951934814
theta: 4.73989009857
speed: 14.0878486633
id: 1
t: 270
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5263999999999986]
222 self.state_dicts[msg.id][msg.t] is (-56.239105224609375, 2.996140956878662, 3.0198159217834473, 13.854336738586426)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -55.413318634
y: 3.24289417267
theta: 3.1570110321
speed: 14.053147316
id: 0
t: 269
1546870790200
xxx after update is x: -56.2391052246
y: 2.99614095688
theta: 3.01981592178
speed: 13.8543367386
id: 0
t: 270
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:270


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:271


xxx before update is x: -56.2391052246
y: 2.99614095688
theta: 3.01981592178
speed: 13.8543367386
id: 0
t: 270
1546870790259
xxx after update is x: -56.7917747498
y: 2.90695548058
theta: 3.04531145096
speed: 14.0916309357
id: 0
t: 271
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:272


xxx before update is x: -56.7917747498
y: 2.90695548058
theta: 3.04531145096
speed: 14.0916309357
id: 0
t: 271
1546870790340
xxx after update is x: -57.5711746216
y: 3.17767930031
theta: 3.18623566628
speed: 13.6869020462
id: 0
t: 272
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2143454551696777, -95.30297088623047, 4.588642597198486, 14.145981788635254)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:273


xxx before update is x: -57.5711746216
y: 3.17767930031
theta: 3.18623566628
speed: 13.6869020462
id: 0
t: 272
1546870790400
xxx after update is x: -58.4388504028
y: 3.15859770775
theta: 3.06475615501
speed: 13.730890274
id: 0
t: 273
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:274


xxx before update is x: -58.4388504028
y: 3.15859770775
theta: 3.06475615501
speed: 13.730890274
id: 0
t: 273
1546870790459
xxx after update is x: -59.1684913635
y: 3.49831390381
theta: 3.21013474464
speed: 13.6990127563
id: 0
t: 274
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:275


xxx before update is x: -59.1684913635
y: 3.49831390381
theta: 3.21013474464
speed: 13.6990127563
id: 0
t: 274
1546870790532
xxx after update is x: -59.1539573669
y: 3.35968971252
theta: 3.02361941338
speed: 13.7208766937
id: 0
t: 275
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.542520046234131, -96.06546783447266, 4.77027702331543, 13.649332046508789)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed <iiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:271


xxx before update is x: -3.43079924583
y: -93.4951934814
theta: 4.73989009857
speed: 14.0878486633
id: 1
t: 270
1546870790268
xxx after update is x: -2.77143955231
y: -93.7251663208
theta: 4.6528468132
speed: 13.7019729614
id: 1
t: 271
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:272


xxx before update is x: -2.77143955231
y: -93.7251663208
theta: 4.6528468132
speed: 13.7019729614
id: 1
t: 271
1546870790339
xxx after update is x: -3.21434545517
y: -95.3029708862
theta: 4.5886425972
speed: 14.1459817886
id: 1
t: 272
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:273


xxx before update is x: -3.21434545517
y: -95.3029708862
theta: 4.5886425972
speed: 14.1459817886
id: 1
t: 272
1546870790394
xxx after update is x: -3.47656035423
y: -95.1729660034
theta: 4.61862373352
speed: 13.695315361
id: 1
t: 273
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5231999999999986]
222 self.state_dicts[msg.id][msg.t] is (-58.43885040283203, 3.158597707748413, 3.064756155014038, 13.730890274047852)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:274


xxx before update is x: -3.47656035423
y: -95.1729660034
theta: 4.61862373352
speed: 13.695315361
id: 1
t: 273
1546870790465
xxx after update is x: -2.87105178833
y: -95.8296661377
theta: 4.82071256638
speed: 13.8153409958
id: 1
t: 274
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:275


xxx before update is x: -2.87105178833
y: -95.8296661377
theta: 4.82071256638
speed: 13.8153409958
id: 1
t: 274
1546870790531
xxx after update is x: -3.54252004623
y: -96.0654678345
theta: 4.77027702332
speed: 13.6493320465
id: 1
t: 275
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4927999999999979]
222 self.state_dicts[msg.id][msg.t] is (-59.15395736694336, 3.359689712524414, 3.0236194133758545, 13.720876693725586)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:276


xxx before update is x: -3.54252004623
y self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -59.1539573669
y: 3.35968971252
theta: 3.02361941338
speed: 13.7208766937
id: 0
t: 275
1546870790594
xxx after update is x: -59.792339325
y: 2.87151670456
theta: 3.08486485481
speed: 13.9757480621
id: 0
t: 276
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:276




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:277


xxx before update is x: -59.792339325
y: 2.87151670456
theta: 3.08486485481
speed: 13.9757480621
id: 0
t: 276
1546870790659
xxx after update is x: -60.027469635
y: 2.69436573982
theta: 3.33474993706
speed: 13.8057336807
id: 0
t: 277
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1392927169799805, -96.38691711425781, 4.6205267906188965, 14.078146934509277)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.3111111111






self.maneuver_requested left


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:278


xxx before update is x: -60.027469635
y: 2.69436573982
theta: 3.33474993706
speed: 13.8057336807
id: 0
t: 277
1546870790729
xxx after update is x: -60.9224662781
y: 3.66010713577
theta: 3.13058042526
speed: 13.8561601639
id: 0
t: 278
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:279


xxx before update is x: -60.9224662781
y: 3.66010713577
theta: 3.13058042526
speed: 13.8561601639
id: 0
t: 278
1546870790790
xxx after update is x: -61.2165527344
y: 3.52508211136
theta: 3.16618943214
speed: 14.0296554565
id: 0
t: 279
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:280


xxx before update is x: -61.2165527344
y: 3.52508211136
theta: 3.16618943214
speed: 14.0296554565
id: 0
t: 279
1546870790861
xxx after update is x: -61.9417152405
y: 3.18845081329
theta: 3.15630483627
speed: 13.7849178314
id: 0
t: 280
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1715142726898193, -99.31656646728516, 4.762747287750244, 14.122495651245117)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:281


xxx before update is x: -61.9417152405
y: 3.18845081329
theta: 3.15630483627
speed: 13.7849178314
id: 0
t: 280
1546870790933
xxx after update is x: -62.9797668457
y: 3.51795697212
theta: 3.01075959206
speed: 13: -96.0654678345
theta: 4.77027702332
speed: 13.6493320465
id: 1
t: 275
1546870790602
xxx after update is x: -2.80401754379
y: -96.7105484009
theta: 4.62607622147
speed: 13.909532547
id: 1
t: 276
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:277


xxx before update is x: -2.80401754379
y: -96.7105484009
theta: 4.62607622147
speed: 13.909532547
id: 1
t: 276
1546870790665
xxx after update is x: -3.13929271698
y: -96.3869171143
theta: 4.62052679062
speed: 14.0781469345
id: 1
t: 277
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.3111111111
risk is [0.0, 0.505599999999998]





self.maneuver_requested None

222 self.state_dicts[msg.id][msg.t] is (-60.027469635009766, 2.6943657398223877, 3.334749937057495, 13.805733680725098)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:278


xxx before update is x: -3.13929271698
y: -96.3869171143
theta: 4.62052679062
speed: 14.0781469345
id: 1
t: 277
1546870790730
xxx after update is x: -3.45882153511
y: -98.2665939331
theta: 4.76193666458
speed: 13.708729744
id: 1
t: 278
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:279


xxx before update is x: -3.45882153511
y: -98.2665939331
theta: 4.76193666458
speed: 13.708729744
id: 1
t: 278
1546870790800
xxx after update is x: -3.19791913033
y: -98.6035919189
theta: 4.77831935883
speed: 14.0272102356
id: 1
t: 279
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5167999999999984]
222 self.state_dicts[msg.id][msg.t] is (-61.216552734375, 3.5250821113586426, 3.166189432144165, 14.029655456542969)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:280


xxx before update is x: -3.19791913033
y: -98.6035919189
theta: 4.77831935883
speed: 14.0272102356
id: 1
t: 279
1546870790862
xxx after update is x: -3.17151427269
y: -99.3165664673
theta: 4.76274728775
speed: 14.1224956512
id: 1
t: 280
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:281


xxx before update is x: -3.17151427269
y: -99.3165664673
theta: 4.76274728775
speed: 14.1224956512
id: 1
t: 280
1546870790944
xxx after update is x: -3.32641768456
y: -100.728157043
theta: 4.76510906219
speed: 13.8598060608
id: 1
t: 281
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-62.979766845703125, 3.5179569721221924, 3.0107595920562744, 13.737471580505371)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:282


xxx before update is x: -3.32641768456
y: -100.728157043
theta: 4.76510906219
speed: 13.8598060608
id: 1
t: 281
1546870790997
xxx after update is x: -3.29894924164
y: -100.314315796
theta: 4.72514152527
speed: 14.1316003799
id: 1
t: 282
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:283


xxx before update is x: -3.29894924164
y: -100.314315796
theta: 4.72514152527
speed: 14.1316003799
id: 1
t: 282
1546870791070
xxx after update is x: -3.11819219589
y: -101.303405762
theta: 4.57248020172
speed: 13.917840004
id: 1
t: 283
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.5777777778






self.maneuver_requested None
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4895999999999979]
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
mmmmmmmmmmmmmmmmmmmmmmmmmm
1
watch sender False
sender_not going go finish False
gooooooo
leave the update function 
in spin function, finish the n times spin:284


.7374715805
id: 0
t: 281
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -62.9797668457
y: 3.51795697212
theta: 3.01075959206
speed: 13.7374715805
id: 0
t: 281
1546870790996
xxx after update is x: -63.5555305481
y: 3.30771303177
theta: 3.13368415833
speed: 13.7947034836
id: 0
t: 282
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:282


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2989492416381836, -100.31431579589844, 4.725141525268555, 14.131600379943848)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
xxx before update is x: -63.5555305481
y: 3.30771303177
theta: 3.13368415833
speed: 13.7947034836
id: 0
t: 282
1546870791061
xxx after update is x: -63.8765220642
y: 3.37482357025
theta: 3.13564109802
speed: 14.0896577835
id: 0
t: 283
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:283


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.5777777778






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.0, 0.0]
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.5777777778






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
 self.man_init:
0
True
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:284


... logging to /home/lu/.ros/log/3c2716fc-1287-11e9-8bf4-000c291801fc/roslaunch-ubuntu-4557.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch
[1mstarted roslaunch server http://ubuntu:44879/[0m

SUMMARY
========

PARAMETERS
 * /enable_negotiator: True
 * /file_prefix: 
 * /nr_cars: 2
 * /plot: False
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /save: False

NODES
  /
    car0 (virtual_blinker/sim.py)
    car1 (virtual_blinker/sim.py)
    cloud (virtual_blinker/cloud.py)
    rviz (rviz/rviz)
    visualization (virtual_blinker/visualization.py)

auto-starting new master
[1mprocess[master]: started with pid [4567][0m
[1mROS_MASTER_URI=http://localhost:11311[0m
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch http://localhost:11311
[1msetting /run_id to 3c2716fc-1287-11e9-8bf4-000c291801fc[0m
[1mprocess[rosout-1]: started with pid [4588][0m
started core service [/rosout]
[1mprocess[visualization-2]: started with pid [4591][0m
[1mprocess[rviz-3]: started with pid [4598][0m
[1mprocess[car0-4]: started with pid [4608][0m
[1mprocess[car1-5]: started with pid [4609][0m
[1mprocess[cloud-6]: started with pid [4610][0m
[cloud-6] killing on exit
[car1-5] killing on exit
[car0-4] killing on exit
[rviz-3] killing on exit
[visualization-2] killing on exit
[rosout-1] killing on exit
[master] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
[1mdone[0m
