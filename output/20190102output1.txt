sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 1
s is car_state0
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.498220920563


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:1


222 self.state_dicts[msg.id][msg.t] is (3.327591896057129, -64.692626953125, 1.416100025177002, 14.387722969055176)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7fd47ce2a9e0>
self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7fd47ce4dd88>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333
maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9001)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:2


222 self.state_dicts[msg.id][msg.t] is (3.0908455848693848, -63.97466278076172, 1.4597586393356323, 13.634066581726074)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: -2.76271533966
y: 63.4583053589
theta: 4.68389844894
speed: 13.9529561996
id: 1
t: 2
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:3


xxx before update is x: -2.76271533966
y: 63.4583053589
theta: 4.68389844894
speed: 13.9529561996
id: 1
t: 2
xxx after update is x: -3.64286541939
y: 62.9933891296
theta: 4.75375080109
speed: 14.234667778
id: 1
t: 3
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:4


xxx before update is x: -3.64286541939
y: 62.9933891296
theta: 4.75375080109
speed: 14.234667778
id: 1
t: 3
xxx after update is x: -3.21104288101
y: 62.8858680725
theta: 4.76493692398
speed: 13.6483726501
id: 1
t: 4
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:5


xxx before update is x: -3.21104288101
y: 62.8858680725
theta: 4.76493692398
speed: 13.6483726501
id: 1
t: 4
xxx after update is x: -3.30657577515
y: 61.5538444519
theta: 4.70202541351
speed: 13.6468734741
id: 1
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.4792230763224792, 0.392960295086008sim.py in the sim.py main function
sim.py in the sim.py car function 
self.id is 0
s is car_state1
cm.CarState is <class 'virtual_blinker.msg._CarState.CarState'>
sim.py call from the state_sub_topics stateCallback
in the sim.py spin function 
diff 0.442267894745
222 self.state_dicts[msg.id][msg.t] is (-3.2168681621551514, 64.09903717041016, 4.689655780792236, 13.419146537780762)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:1




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:2


222 self.state_dicts[msg.id][msg.t] is (-2.7627153396606445, 63.45830535888672, 4.683898448944092, 13.952956199645996)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:True
self.fm:
self.intersection <utils.Intersection.Intersection instance at 0x7fe6bdaf05a8>
self.risk_estimator <risk_estimation.driver.RiskEstimator instance at 0x7fe6bdb0f3b0>
run maneuver negotiator
maneuver_negotiatir.py in the maneuver negotiator. py init function - - start
call clock function
current clock is 0.0
maneuver_negotiatir.py call the clock(), give the clock to self.agent_state
maneuver_negotiatir.py in the maneuver negotiator. py init function finish
maneuver_negotiatir.py in the maneuver negotiatir.py the initialize function -- start
maneuver_negotiatir.py call setup_ros function
maneuver_negotiatir.py start the setip_ros function 
maneuver_negotiatir.py start the setip_ros function  222222
maneuver_negotiatir.py start the setip_ros function  3333333


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:3


maneuver_negotiatir.py start the setip_ros function  44444
maneuver_negotiatir.py finish the setip_ros function 
maneuver_negotiatir.py start thread that listens on network for udp packets from other cars
maneuver_negotiatir.py start a thread to udp massage
maneuver_negotiatir.py in the maneuver_negotiatir.py the initialize function -- finish
222 self.state_dicts[msg.id][msg.t] is (-3.6428654193878174, 62.99338912963867, 4.753750801086426, 14.234667778015137)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py start udp_msg_processor funtion
udp thread: binding to ('127.0.0.1', 9000)


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:4




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:5


xxx before update is x: 1
y: 1
theta: 1
speed: 1
id: 1
t: 0
xxx after update is x: 3.06542134285
y: -61.709602356
theta: 1.42728376389
speed: 13.5366239548
id: 0
t: 5
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:6


xxx before update is x: 3.06542134285
y: -61.709602356
theta: 1.42728376389
speed: 13.5366239548
id: 0
t: 5
xxx after update is x: 3.111587286
y: -61.0943069458
theta: 1.59544670582
speed: 14.0493535995
id: 0
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.4102516100484993, 0.31491967455568237]
222 self.state_dicts[msg.id][msg.t] is (-3.2026963233947754, 61.46612548828125, 4.695960521697998, 13.649815559387207)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin functi66]
222 self.state_dicts[msg.id][msg.t] is (3.0654213428497314, -61.70960235595703, 1.427283763885498, 13.53662395477295)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -3.30657577515
y: 61.5538444519
theta: 4.70202541351
speed: 13.6468734741
id: 1
t: 5
xxx after update is x: -3.20269632339
y: 61.4661254883
theta: 4.6959605217
speed: 13.6498155594
id: 1
t: 6
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:6




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:7


xxx before update is x: -3.20269632339
y: 61.4661254883
theta: 4.6959605217
speed: 13.6498155594
id: 1
t: 6
xxx after update is x: -3.46078896523
y: 60.4756698608
theta: 4.90608882904
speed: 14.0789337158
id: 1
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.42710094119971986, 0]
222 self.state_dicts[msg.id][msg.t] is (3.3794288635253906, -60.493011474609375, 1.4419962167739868, 13.64027214050293)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: -3.46078896523
y: 60.4756698608
theta: 4.90608882904
speed: 14.0789337158
id: 1
t: 7
xxx after update is x: -3.22621178627
y: 60.0068435669
theta: 4.61633014679
speed: 13.8073997498
id: 1
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.355555555556






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: -3.22621178627
y: 60.0068435669
theta: 4.61633014679
speed: 13.8073997498
id: 1
t: 8
xxx after update is x: -3.40753078461
y: 59.3895492554
theta: 4.63671064377
speed: 14.1625795364
id: 1
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -3.40753078461
y: 59.3895492554
theta: 4.63671064377
speed: 14.1625795364
id: 1
t: 9
xxx after update is x: -3.61798429489
y: 58.956867218
theta: 4.7038898468
speed: 13.7651815414
id: 1
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:10


aaaaaa
aaaaaabbbbb
risk is [0.32500037837846973, 0]
222 self.state_dicts[msg.id][msg.t] is (2.564642906188965, -59.18236541748047, 1.5411229133605957, 13.837252616882324)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: -3.61798429489
y: 58.956867218
theta: 4.7038898468
speed: 13.7651815414
id: 1
t: 10
xxx after update is x: -3.07245898247
y: 57.9971885681
theta: 4.56541633606
speed: 14.016043663
id: 1
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.son, finish the n times spin:7

xxx before update is x: 3.111587286
y: -61.0943069458
theta: 1.59544670582
speed: 14.0493535995
id: 0
t: 6
xxx after update is x: 3.37942886353
y: -60.4930114746
theta: 1.44199621677
speed: 13.6402721405
id: 0
t: 7
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:8


xxx before update is x: 3.37942886353
y: -60.4930114746
theta: 1.44199621677
speed: 13.6402721405
id: 0
t: 7
xxx after update is x: 3.14609456062
y: -60.5754432678
theta: 1.59963822365
speed: 13.6783971786
id: 0
t: 8
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:9


xxx before update is x: 3.14609456062
y: -60.5754432678
theta: 1.59963822365
speed: 13.6783971786
id: 0
t: 8
xxx after update is x: 3.28805232048
y: -59.6021652222
theta: 1.52100884914
speed: 13.8922309875
id: 0
t: 9
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:10


xxx before update is x: 3.28805232048
y: -59.6021652222
theta: 1.52100884914
speed: 13.8922309875
id: 0
t: 9
xxx after update is x: 2.56464290619
y: -59.1823654175
theta: 1.54112291336
speed: 13.8372526169
id: 0
t: 10
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.444444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.2913453330645208, 0.33386505865503985]
222 self.state_dicts[msg.id][msg.t] is (-3.6179842948913574, 58.95686721801758, 4.703889846801758, 13.765181541442871)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:11


xxx before update is x: 2.56464290619
y: -59.1823654175
theta: 1.54112291336
speed: 13.8372526169
id: 0
t: 10
xxx after update is x: 3.51768946648
y: -58.485660553
theta: 1.62772369385
speed: 13.8530263901
id: 0
t: 11
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: 3.51768946648
y: -58.485660553
theta: 1.62772369385
speed: 13.8530263901
id: 0
t: 11
xxx after update is x: 2.92256879807
y: -57.2112808228
theta: 1.64325165749
speed: 14.2749443054
id: 0
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: 2.92256879807
y: -57.2112808228
theta: 1.64325165749
speed: 14.2749443054
id: 0
t: 12
xxx after update is x: 2.93744134903
y: -56.9599914551
theta: 1.52072632313
speed: 14.1488342285
id: 0
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: 2.93744134903
y: -56.9599914551
theta: 1.52072632313
speed: 14.1488342285
id: 0
t: 13
xxx after update is x: 3.31778454781
y: -56.4600753784
theta: 1.61124074459
speed: 13.6557836533
id: 0
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going topeed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:12


xxx before update is x: -3.07245898247
y: 57.9971885681
theta: 4.56541633606
speed: 14.016043663
id: 1
t: 11
xxx after update is x: -3.0794839859
y: 57.2742385864
theta: 4.76881408691
speed: 13.8002147675
id: 1
t: 12
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:13


xxx before update is x: -3.0794839859
y: 57.2742385864
theta: 4.76881408691
speed: 13.8002147675
id: 1
t: 12
xxx after update is x: -3.94013214111
y: 56.346824646
theta: 4.47972583771
speed: 14.0616083145
id: 1
t: 13
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3496616620017069, 0]
222 self.state_dicts[msg.id][msg.t] is (2.937441349029541, -56.959991455078125, 1.5207263231277466, 14.148834228515625)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:14


xxx before update is x: -3.94013214111
y: 56.346824646
theta: 4.47972583771
speed: 14.0616083145
id: 1
t: 13
xxx after update is x: -3.49638700485
y: 56.5903930664
theta: 4.80857992172
speed: 14.0536108017
id: 1
t: 14
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: -3.49638700485
y: 56.5903930664
theta: 4.80857992172
speed: 14.0536108017
id: 1
t: 14
xxx after update is x: -3.29079866409
y: 55.4897956848
theta: 4.94501018524
speed: 14.1705656052
id: 1
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: -3.29079866409
y: 55.4897956848
theta: 4.94501018524
speed: 14.1705656052
id: 1
t: 15
xxx after update is x: -3.59750962257
y: 55.3174324036
theta: 4.75445270538
speed: 14.1375494003
id: 1
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.711111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: -3.59750962257
y: 55.3174324036
theta: 4.75445270538
speed: 14.1375494003
id: 1
t: 16
xxx after update is x: -3.01512145996
y: 54.5662002563
theta: 4.7667427063
speed: 13.9449987411
id: 1
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: -3.01512145996
y: 54.5662002563
theta: 4.7667427063
speed: 13.9449987411
id: 1
t: 17
xxx after update is x: -3.11271119118
y: 53.9867935181
theta: 4.6210808754
speed: 14.1608905792
id: 1
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3508833679625489, 0]
222 self.state_dicts[msg.id][msg.t] is (2.979952096939087, -53.56119155883789, 1.5942097902297974, 14.114276885986328)
if we have all measurements for a certain time-stamp perform risk es the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:15


xxx before update is x: 3.31778454781
y: -56.4600753784
theta: 1.61124074459
speed: 13.6557836533
id: 0
t: 14
xxx after update is x: 3.69223046303
y: -55.8798599243
theta: 1.58419156075
speed: 14.1480798721
id: 0
t: 15
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:16


xxx before update is x: 3.69223046303
y: -55.8798599243
theta: 1.58419156075
speed: 14.1480798721
id: 0
t: 15
xxx after update is x: 3.30002737045
y: -55.0144004822
theta: 1.66255545616
speed: 14.2042789459
id: 0
t: 16
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3574714968041786, 0.42432396728370253]
222 self.state_dicts[msg.id][msg.t] is (-3.5975096225738525, 55.31743240356445, 4.754452705383301, 14.13754940032959)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:17


xxx before update is x: 3.30002737045
y: -55.0144004822
theta: 1.66255545616
speed: 14.2042789459
id: 0
t: 16
xxx after update is x: 3.17308497429
y: -54.7443008423
theta: 1.65374565125
speed: 13.9330635071
id: 0
t: 17
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:18


xxx before update is x: 3.17308497429
y: -54.7443008423
theta: 1.65374565125
speed: 13.9330635071
id: 0
t: 17
xxx after update is x: 2.97995209694
y: -53.5611915588
theta: 1.59420979023
speed: 14.114276886
id: 0
t: 18
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 0.8






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: 2.97995209694
y: -53.5611915588
theta: 1.59420979023
speed: 14.114276886
id: 0
t: 18
xxx after update is x: 3.52334904671
y: -52.7769775391
theta: 1.41130805016
speed: 13.7689609528
id: 0
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: 3.52334904671
y: -52.7769775391
theta: 1.41130805016
speed: 13.7689609528
id: 0
t: 19
xxx after update is x: 3.05999183655
y: -52.4325485229
theta: 1.59198665619
speed: 13.9747581482
id: 0
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: 3.05999183655
y: -52.4325485229
theta: 1.59198665619
speed: 13.9747581482
id: 0
t: 20
xxx after update is x: 2.95320153236
y: -51.9412117004
theta: 1.42511081696
speed: 13.8863544464
id: 0
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3246946514230741, 0.3226632304023103]
222 self.state_dicts[msg.id][msg.t] is (-3.3980934619903564, 51.851497650146484, 4.482570171356201, 13.93195629119873)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update funtimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:19


xxx before update is x: -3.11271119118
y: 53.9867935181
theta: 4.6210808754
speed: 14.1608905792
id: 1
t: 18
xxx after update is x: -2.81240558624
y: 52.5930366516
theta: 4.60229301453
speed: 14.4291505814
id: 1
t: 19
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:20


xxx before update is x: -2.81240558624
y: 52.5930366516
theta: 4.60229301453
speed: 14.4291505814
id: 1
t: 19
xxx after update is x: -3.12711215019
y: 52.7384109497
theta: 4.67657995224
speed: 13.8496026993
id: 1
t: 20
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:21


xxx before update is x: -3.12711215019
y: 52.7384109497
theta: 4.67657995224
speed: 13.8496026993
id: 1
t: 20
xxx after update is x: -3.39809346199
y: 51.8514976501
theta: 4.48257017136
speed: 13.9319562912
id: 1
t: 21
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3330936400462574, 0]
222 self.state_dicts[msg.id][msg.t] is (2.9532015323638916, -51.94121170043945, 1.4251108169555664, 13.886354446411133)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: -3.39809346199
y: 51.8514976501
theta: 4.48257017136
speed: 13.9319562912
id: 1
t: 21
xxx after update is x: -2.75632834435
y: 51.8940353394
theta: 4.64849615097
speed: 13.573179245
id: 1
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: -2.75632834435
y: 51.8940353394
theta: 4.64849615097
speed: 13.573179245
id: 1
t: 22
xxx after update is x: -3.44180560112
y: 50.7670669556
theta: 4.84464359283
speed: 13.5412797928
id: 1
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: -3.44180560112
y: 50.7670669556
theta: 4.84464359283
speed: 13.5412797928
id: 1
t: 23
xxx after update is x: -3.5135512352
y: 50.3653488159
theta: 4.84080553055
speed: 13.9173336029
id: 1
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.368374210388917, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0303826332092285, -50.3134765625, 1.591907024383545, 13.862852096557617)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.06666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: -3.5135512352
y: 50.3653488159
theta: 4.8408ction
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:22


xxx before update is x: 2.95320153236
y: -51.9412117004
theta: 1.42511081696
speed: 13.8863544464
id: 0
t: 21
xxx after update is x: 3.69691538811
y: -51.1824417114
theta: 1.6625534296
speed: 13.8145189285
id: 0
t: 22
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:23


xxx before update is x: 3.69691538811
y: -51.1824417114
theta: 1.6625534296
speed: 13.8145189285
id: 0
t: 22
xxx after update is x: 3.42124819756
y: -50.7801246643
theta: 1.70818185806
speed: 13.8353204727
id: 0
t: 23
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:24


xxx before update is x: 3.42124819756
y: -50.7801246643
theta: 1.70818185806
speed: 13.8353204727
id: 0
t: 23
xxx after update is x: 3.03038263321
y: -50.3134765625
theta: 1.59190702438
speed: 13.8628520966
id: 0
t: 24
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:25


xxx before update is x: 3.03038263321
y: -50.3134765625
theta: 1.59190702438
speed: 13.8628520966
id: 0
t: 24
xxx after update is x: 3.1511490345
y: -49.5423088074
theta: 1.60669672489
speed: 13.8592844009
id: 0
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.41231976329245745, 0.2947034976733512]
222 self.state_dicts[msg.id][msg.t] is (-3.4596571922302246, 50.15248489379883, 4.602902412414551, 13.95932388305664)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.11111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: 3.1511490345
y: -49.5423088074
theta: 1.60669672489
speed: 13.8592844009
id: 0
t: 25
xxx after update is x: 3.22557044029
y: -48.9076271057
theta: 1.5724221468
speed: 13.5484027863
id: 0
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: 3.22557044029
y: -48.9076271057
theta: 1.5724221468
speed: 13.5484027863
id: 0
t: 26
xxx after update is x: 3.61827111244
y: -48.2601623535
theta: 1.51061499119
speed: 13.8539419174
id: 0
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: 3.61827111244
y: -48.2601623535
theta: 1.51061499119
speed: 13.8539419174
id: 0
t: 27
xxx after update is x: 3.31069397926
y: -47.5778312683
theta: 1.59252440929
speed: 13.9368934631
id: 0
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: 3.31069397926
y: -47.5778312683
theta: 1.59252440929
speed: 13.9368934631
id: 0
t: 28
xxx after update is x: 3.45093774796
y: -47.1123046875
t0553055
speed: 13.9173336029
id: 1
t: 24
xxx after update is x: -3.45965719223
y: 50.1524848938
theta: 4.60290241241
speed: 13.9593238831
id: 1
t: 25
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:26


xxx before update is x: -3.45965719223
y: 50.1524848938
theta: 4.60290241241
speed: 13.9593238831
id: 1
t: 25
xxx after update is x: -2.93265938759
y: 48.7139091492
theta: 4.87616252899
speed: 13.8783130646
id: 1
t: 26
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:27


xxx before update is x: -2.93265938759
y: 48.7139091492
theta: 4.87616252899
speed: 13.8783130646
id: 1
t: 26
xxx after update is x: -3.50895619392
y: 48.8276443481
theta: 4.50759363174
speed: 13.5895462036
id: 1
t: 27
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3719160501010744, 0]
222 self.state_dicts[msg.id][msg.t] is (3.6182711124420166, -48.260162353515625, 1.5106149911880493, 13.853941917419434)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:28


xxx before update is x: -3.50895619392
y: 48.8276443481
theta: 4.50759363174
speed: 13.5895462036
id: 1
t: 27
xxx after update is x: -2.80025959015
y: 47.812122345
theta: 4.77611207962
speed: 13.8334445953
id: 1
t: 28
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:29


xxx before update is x: -2.80025959015
y: 47.812122345
theta: 4.77611207962
speed: 13.8334445953
id: 1
t: 28
xxx after update is x: -3.12966656685
y: 46.5686340332
theta: 4.83195400238
speed: 14.2206811905
id: 1
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4044979777844027, 0]
222 self.state_dicts[msg.id][msg.t] is (3.4509377479553223, -47.1123046875, 1.4893182516098022, 14.123339653015137)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: -3.12966656685
y: 46.5686340332
theta: 4.83195400238
speed: 14.2206811905
id: 1
t: 29
xxx after update is x: -2.7254960537
y: 46.561416626
theta: 4.64213037491
speed: 13.6010494232
id: 1
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: -2.7254960537
y: 46.561416626
theta: 4.64213037491
speed: 13.6010494232
id: 1
t: 30
xxx after update is x: -2.83502459526
y: 45.8757171631
theta: 4.70887899399
speed: 14.3027820587
id: 1
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: -2.83502459526
y: 45.8757171631
theta: 4.70887899399
speed: 14.3027820587
id: 1
t: 31
xxx afteheta: 1.48931825161
speed: 14.123339653
id: 0
t: 29
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3711928579383506, 0.3927005404853081]
222 self.state_dicts[msg.id][msg.t] is (-3.129666566848755, 46.568634033203125, 4.831954002380371, 14.220681190490723)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:30


xxx before update is x: 3.45093774796
y: -47.1123046875
theta: 1.48931825161
speed: 14.123339653
id: 0
t: 29
xxx after update is x: 3.65806627274
y: -46.0821037292
theta: 1.32034313679
speed: 14.0922307968
id: 0
t: 30
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:31


xxx before update is x: 3.65806627274
y: -46.0821037292
theta: 1.32034313679
speed: 14.0922307968
id: 0
t: 30
xxx after update is x: 3.71569013596
y: -46.1353225708
theta: 1.53723192215
speed: 13.9016284943
id: 0
t: 31
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:32


xxx before update is x: 3.71569013596
y: -46.1353225708
theta: 1.53723192215
speed: 13.9016284943
id: 0
t: 31
xxx after update is x: 3.12152385712
y: -45.0455780029
theta: 1.50125360489
speed: 13.817522049
id: 0
t: 32
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.12152385712
y: -45.0455780029
theta: 1.50125360489
speed: 13.817522049
id: 0
t: 32
xxx after update is x: 3.49858117104
y: -44.6183433533
theta: 1.32805097103
speed: 14.1089611053
id: 0
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:33


aaaaaa
risk is [0.33672657615725404, 0.29252455734587113]
222 self.state_dicts[msg.id][msg.t] is (-3.5218262672424316, 44.411678314208984, 4.6736979484558105, 13.951594352722168)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.46666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: 3.49858117104
y: -44.6183433533
theta: 1.32805097103
speed: 14.1089611053
id: 0
t: 33
xxx after update is x: 3.27360129356
y: -43.7425117493
theta: 1.62632071972
speed: 14.135342598
id: 0
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: 3.27360129356
y: -43.7425117493
theta: 1.62632071972
speed: 14.135342598
id: 0
t: 34
xxx after update is x: 3.21084856987
y: -43.0499000549
theta: 1.57937896252
speed: 13.8284730911
id: 0
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: 3.21084856987
y: -43.0499000549
theta: 1.57937896252
speed: 13.8284730911
id: 0
t: 35
xxx after update is x: 3.02770376205
y: -42.1934280396
theta:r update is x: -4.00632238388
y: 45.3708992004
theta: 4.75012922287
speed: 13.9499311447
id: 1
t: 32maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.42222222222






self.maneuver_requested None

maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.3511032171367383, 0]
222 self.state_dicts[msg.id][msg.t] is (3.121523857116699, -45.04557800292969, 1.501253604888916, 13.817522048950195)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:33


xxx before update is x: -4.00632238388
y: 45.3708992004
theta: 4.75012922287
speed: 13.9499311447
id: 1
t: 32
xxx after update is x: -3.52182626724
y: 44.4116783142
theta: 4.67369794846
speed: 13.9515943527
id: 1
t: 33
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:34


xxx before update is x: -3.52182626724
y: 44.4116783142
theta: 4.67369794846
speed: 13.9515943527
id: 1
t: 33
xxx after update is x: -3.08658099174
y: 44.0441551208
theta: 4.78815603256
speed: 14.183429718
id: 1
t: 34
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:35


xxx before update is x: -3.08658099174
y: 44.0441551208
theta: 4.78815603256
speed: 14.183429718
id: 1
t: 34
xxx after update is x: -2.92307877541
y: 43.0798683167
theta: 4.76822471619
speed: 13.8328056335
id: 1
t: 35
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.34205154070005817, 0]
222 self.state_dicts[msg.id][msg.t] is (3.210848569869995, -43.04990005493164, 1.5793789625167847, 13.828473091125488)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:36


xxx before update is x: -2.92307877541
y: 43.0798683167
theta: 4.76822471619
speed: 13.8328056335
id: 1
t: 35
xxx after update is x: -2.86120390892
y: 42.7899169922
theta: 4.59752559662
speed: 13.9377555847
id: 1
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: -2.86120390892
y: 42.7899169922
theta: 4.59752559662
speed: 13.9377555847
id: 1
t: 36
xxx after update is x: -3.8750576973
y: 41.8765068054
theta: 4.81348562241
speed: 14.1300325394
id: 1
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: -3.8750576973
y: 41.8765068054
theta: 4.81348562241
speed: 14.1300325394
id: 1
t: 37
xxx after update is x: -3.27346992493
y: 41.7757835388
theta: 4.74691915512
speed: 14.0368738174
id: 1
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3394154440001561, 0]
222 self.state_dicts[msg.id][msg.t] is (2.8063976764678955, -41.5384407043457, 1.5860196352005005, 13.8791227340 1.69225108624
speed: 13.9675760269
id: 0
t: 36
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.39183108517754633, 0.36050222279955185]
222 self.state_dicts[msg.id][msg.t] is (-2.861203908920288, 42.7899169921875, 4.597525596618652, 13.937755584716797)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:37


xxx before update is x: 3.02770376205
y: -42.1934280396
theta: 1.69225108624
speed: 13.9675760269
id: 0
t: 36
xxx after update is x: 3.11627292633
y: -42.2847671509
theta: 1.52982223034
speed: 13.9321174622
id: 0
t: 37
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:38


xxx before update is x: 3.11627292633
y: -42.2847671509
theta: 1.52982223034
speed: 13.9321174622
id: 0
t: 37
xxx after update is x: 2.80639767647
y: -41.5384407043
theta: 1.5860196352
speed: 13.8791227341
id: 0
t: 38
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: 2.80639767647
y: -41.5384407043
theta: 1.5860196352
speed: 13.8791227341
id: 0
t: 38
xxx after update is x: 3.59968090057
y: -40.3161430359
theta: 1.36948370934
speed: 13.5944223404
id: 0
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: 3.59968090057
y: -40.3161430359
theta: 1.36948370934
speed: 13.5944223404
id: 0
t: 39
xxx after update is x: 3.47607755661
y: -40.3378334045
theta: 1.59150123596
speed: 13.7586393356
id: 0
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3620468590366595, 0.32331050005992434]
222 self.state_dicts[msg.id][msg.t] is (-3.2326536178588867, 40.32898712158203, 4.6572794914245605, 13.896621704101562)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: 3.47607755661
y: -40.3378334045
theta: 1.59150123596
speed: 13.7586393356
id: 0
t: 40
xxx after update is x: 3.1692006588
y: -39.0937995911
theta: 1.41427898407
speed: 14.2141170502
id: 0
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.82222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: 3.1692006588
y: -39.0937995911
theta: 1.41427898407
speed: 14.2141170502
id: 0
t: 41
xxx after update is x: 3.40818309784
y: -38.7738723755
theta: 1.55598032475
speed: 13.8862085342
id: 0
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:43


xxx before update is x: 3.40818309784
y: -38.7738723755
theta: 1.55598032475
speed: 13.8862085342
id: 0
t: 42
xxx after update is x: 3.34256911278
y: -38.4597015381
theta: 1.6069824)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:39


xxx before update is x: -3.27346992493
y: 41.7757835388
theta: 4.74691915512
speed: 14.0368738174
id: 1
t: 38
xxx after update is x: -3.35082125664
y: 41.0737762451
theta: 4.56114339828
speed: 13.7752132416
id: 1
t: 39
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 1.73333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:40


xxx before update is x: -3.35082125664
y: 41.0737762451
theta: 4.56114339828
speed: 13.7752132416
id: 1
t: 39
xxx after update is x: -3.23265361786
y: 40.3289871216
theta: 4.65727949142
speed: 13.8966217041
id: 1
t: 40
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:41


xxx before update is x: -3.23265361786
y: 40.3289871216
theta: 4.65727949142
speed: 13.8966217041
id: 1
t: 40
xxx after update is x: -3.1325647831
y: 39.7763404846
theta: 4.94370698929
speed: 13.9792404175
id: 1
t: 41
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3879084811631719, 0]
222 self.state_dicts[msg.id][msg.t] is (3.1692006587982178, -39.09379959106445, 1.4142789840698242, 14.214117050170898)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:42


xxx before update is x: -3.1325647831
y: 39.7763404846
theta: 4.94370698929
speed: 13.9792404175
id: 1
t: 41
xxx after update is x: -3.41831803322
y: 39.2776107788
theta: 4.72910070419
speed: 14.1645927429
id: 1
t: 42
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -3.41831803322
y: 39.2776107788
theta: 4.72910070419
speed: 14.1645927429
id: 1
t: 42
xxx after update is x: -3.46424984932
y: 38.5420646667
theta: 4.80562973022
speed: 13.7857351303
id: 1
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:43




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: -3.46424984932
y: 38.5420646667
theta: 4.80562973022
speed: 13.7857351303
id: 1
t: 43
xxx after update is x: -3.228474617
y: 37.3226051331
theta: 4.77819108963
speed: 14.059923172
id: 1
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: -3.228474617
y: 37.3226051331
theta: 4.77819108963
speed: 14.059923172
id: 1
t: 44
xxx after update is x: -3.06251573563
y: 36.9903793335
theta: 4.76708555222
speed: 13.7049274445
id: 1
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
a047161579
speed: 14.0398988724
id: 0
t: 43
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.4746253492653165, 0.35549574662905487]
222 self.state_dicts[msg.id][msg.t] is (-3.464249849319458, 38.54206466674805, 4.805629730224609, 13.785735130310059)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:44


xxx before update is x: 3.34256911278
y: -38.4597015381
theta: 1.60047161579
speed: 14.0398988724
id: 0
t: 43
xxx after update is x: 3.28300762177
y: -37.8121490479
theta: 1.49829530716
speed: 13.8540201187
id: 0
t: 44
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:45


xxx before update is x: 3.28300762177
y: -37.8121490479
theta: 1.49829530716
speed: 13.8540201187
id: 0
t: 44
xxx after update is x: 3.52852606773
y: -37.4595794678
theta: 1.51245522499
speed: 14.0747814178
id: 0
t: 45
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: 3.52852606773
y: -37.4595794678
theta: 1.51245522499
speed: 14.0747814178
id: 0
t: 45
xxx after update is x: 3.16616725922
y: -36.9208755493
theta: 1.39340817928
speed: 13.8491544724
id: 0
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: 3.16616725922
y: -36.9208755493
theta: 1.39340817928
speed: 13.8491544724
id: 0
t: 46
xxx after update is x: 2.60366106033
y: -36.3711509705
theta: 1.58748483658
speed: 13.7675085068
id: 0
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: 2.60366106033
y: -36.3711509705
theta: 1.58748483658
speed: 13.7675085068
id: 0
t: 47
xxx after update is x: 3.710272789
y: -35.3032341003
theta: 1.52210199833
speed: 13.7767896652
id: 0
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.36869515995522695, 0.35142914307167394]
222 self.state_dicts[msg.id][msg.t] is (-3.3687705993652344, 35.56977081298828, 4.7804365158081055, 13.850309371948242)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.13333333333






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:49


maneuver_negotiatir.py in the try maneuver function update -. sfinish
xxx before update is x: 3.710272789
y: -35.3032341003
theta: 1.52210199833
speed: 13.7767896652
id: 0
t: 48
xxx after update is x: 2.95583128929
y: -34.5411529541
theta: 1.62573742867
speed: 13.6489210129
id: 0
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: 2.95583128929
y: -34.5411529541
theta: 1.62573742867
speed: 13.6489210129
id: 0
t: 49
xxx after update is x: 3.43595528603
y: -33.880645752
theta: 1.6848824aaaaabbbbb
risk is [0.3168113179674362, 0]
222 self.state_dicts[msg.id][msg.t] is (3.5285260677337646, -37.45957946777344, 1.5124552249908447, 14.07478141784668)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:46


xxx before update is x: -3.06251573563
y: 36.9903793335
theta: 4.76708555222
speed: 13.7049274445
id: 1
t: 45
xxx after update is x: -3.1761469841
y: 36.830039978
theta: 4.83228254318
speed: 14.1015777588
id: 1
t: 46
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:47


xxx before update is x: -3.1761469841
y: 36.830039978
theta: 4.83228254318
speed: 14.1015777588
id: 1
t: 46
xxx after update is x: -3.63843083382
y: 35.74193573
theta: 4.94003486633
speed: 13.6849470139
id: 1
t: 47
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3808291004037481, 0]
222 self.state_dicts[msg.id][msg.t] is (2.603661060333252, -36.371150970458984, 1.5874848365783691, 13.767508506774902)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.08888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:48


xxx before update is x: -3.63843083382
y: 35.74193573
theta: 4.94003486633
speed: 13.6849470139
id: 1
t: 47
xxx after update is x: -3.36877059937
y: 35.569770813
theta: 4.78043651581
speed: 13.8503093719
id: 1
t: 48
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:49


xxx before update is x: -3.36877059937
y: 35.569770813
theta: 4.78043651581
speed: 13.8503093719
id: 1
t: 48
xxx after update is x: -2.77724885941
y: 34.5712509155
theta: 4.74267101288
speed: 13.9505977631
id: 1
t: 49
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4345963196512735, 0]
222 self.state_dicts[msg.id][msg.t] is (2.955831289291382, -34.54115295410156, 1.6257374286651611, 13.648921012878418)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:50


xxx before update is x: -2.77724885941
y: 34.5712509155
theta: 4.74267101288
speed: 13.9505977631
id: 1
t: 49
xxx after update is x: -3.11466670036
y: 34.5431404114
theta: 4.71915149689
speed: 13.6131105423
id: 1
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: -3.11466670036
y: 34.5431404114
theta: 4.71915149689
speed: 13.6131105423
id: 1
t: 50
xxx after update is x: -3.10607147217
y: 33.6181983948
theta: 4.68277740479
speed: 14.0948963165
id: 1
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3633083767050242
speed: 13.7858219147
id: 0
t: 50
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:51


xxx before update is x: 3.43595528603
y: -33.880645752
theta: 1.68488240242
speed: 13.7858219147
id: 0
t: 50
xxx after update is x: 3.08108186722
y: -33.3069076538
theta: 1.46072781086
speed: 14.0040473938
id: 0
t: 51
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: 3.08108186722
y: -33.3069076538
theta: 1.46072781086
speed: 14.0040473938
id: 0
t: 51
xxx after update is x: 3.23261165619
y: -32.5720329285
theta: 1.44257497787
speed: 13.6925344467
id: 0
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.4122617964573108, 0.36864971605798125]
222 self.state_dicts[msg.id][msg.t] is (-3.4471049308776855, 32.76615905761719, 4.669081211090088, 14.126518249511719)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.23261165619
y: -32.5720329285
theta: 1.44257497787
speed: 13.6925344467
id: 0
t: 52
xxx after update is x: 3.1733174324
y: -31.9518585205
theta: 1.57908141613
speed: 14.3705701828
id: 0
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:53




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: 3.1733174324
y: -31.9518585205
theta: 1.57908141613
speed: 14.3705701828
id: 0
t: 53
xxx after update is x: 3.51514148712
y: -31.13215065
theta: 1.48154616356
speed: 14.1653184891
id: 0
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:55


xxx before update is x: 3.51514148712
y: -31.13215065
theta: 1.48154616356
speed: 14.1653184891
id: 0
t: 54
xxx after update is x: 2.70542097092
y: -31.0548782349
theta: 1.62948024273
speed: 13.9472837448
id: 0
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: 2.70542097092
y: -31.0548782349
theta: 1.62948024273
speed: 13.9472837448
id: 0
t: 55
xxx after update is x: 2.9154279232
y: -31.0072956085
theta: 1.6265181303
speed: 13.6420450211
id: 0
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.36362171194842513, 0.4005062293065609]
222 self.state_dicts[msg.id][msg.t] is (-3.156155824661255, 30.12717628479004, 4.657444953918457, 13.904753684997559)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.48888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: 2.9154279232
y: -31.0072956085
theta: 1.6265181303
speed: 13.6420450211
id: 0
t: 56
xxx after update is x: 3.153247118
y: -30.2053623199
theta: 1.53198003769
speed: 14.1642, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0810818672180176, -33.306907653808594, 1.4607278108596802, 14.004047393798828)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:52


xxx before update is x: -3.10607147217
y: 33.6181983948
theta: 4.68277740479
speed: 14.0948963165
id: 1
t: 51
xxx after update is x: -3.44710493088
y: 32.7661590576
theta: 4.66908121109
speed: 14.1265182495
id: 1
t: 52
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:53


xxx before update is x: -3.44710493088
y: 32.7661590576
theta: 4.66908121109
speed: 14.1265182495
id: 1
t: 52
xxx after update is x: -3.24077129364
y: 32.1923294067
theta: 4.71831941605
speed: 14.0281486511
id: 1
t: 53
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:54


xxx before update is x: -3.24077129364
y: 32.1923294067
theta: 4.71831941605
speed: 14.0281486511
id: 1
t: 53
xxx after update is x: -3.26532745361
y: 31.1549816132
theta: 4.73683023453
speed: 13.8301868439
id: 1
t: 54
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.38224111604807964, 0]
222 self.state_dicts[msg.id][msg.t] is (3.515141487121582, -31.132150650024414, 1.48154616355896, 14.165318489074707)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:55


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.4






self.maneuver_requested None
xxx before update is x: -3.26532745361
y: 31.1549816132
theta: 4.73683023453
speed: 13.8301868439
id: 1
t: 54
xxx after update is x: -3.67529964447
y: 31.4116306305
theta: 4.89635038376
speed: 14.3475799561
id: 1
t: 55
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:56


xxx before update is x: -3.67529964447
y: 31.4116306305
theta: 4.89635038376
speed: 14.3475799561
id: 1
t: 55
xxx after update is x: -3.15615582466
y: 30.1271762848
theta: 4.65744495392
speed: 13.904753685
id: 1
t: 56
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:57


xxx before update is x: -3.15615582466
y: 30.1271762848
theta: 4.65744495392
speed: 13.904753685
id: 1
t: 56
xxx after update is x: -3.69382429123
y: 30.6402854919
theta: 4.46989345551
speed: 13.8074684143
id: 1
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3963289881531092, 0]
222 self.state_dicts[msg.id][msg.t] is (3.153247117996216, -30.20536231994629, 1.531980037689209, 14.076434135437012)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -3.69382429123
y: 30.6402854919
theta: 4.46989345551
speed: 13.8074684143
id: 1
t: 57
xxx after update is x: -2.86781477928
y: 28.7373752594
theta: 4.78420639038
speed: 13.7287101746
id: 1
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:58




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:59


xxx before update is x: -2.86781477928
y: 28.7373752594
theta: 4.78420639038
speed: 13.7287101746
id: 1
t: 58
xxx after update is x: -3.37929654121
y: 27.9389400482
theta: 4.70228815079
speed: 14.2169322968
id: 1
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: -3.37929654121
y: 27.9389400482
theta: 4.70228815079
speed: 14.2169322968
id: 1
t: 59
xxx after update is x: -3.75350308418
y: 27.7007827759
theta: 4.85509681702
speed: 14.0398302078
id: 1
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3633190043573249, 0]
222 self.state_dicts[msg.id][msg.t] is (3.7009358406066895, -27.83359718322754, 1.4504945278167725, 14.020440101623535)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: -3.75350308418
y: 27.7007827759
theta: 4.85509681702
speed: 14.0398302078
id: 1
t: 60
xxx after update is x: -3.48166012764
y: 27.0072841644
theta: 4.66784143448
speed: 14.036649704
id: 1
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: -3.48166012764
y: 27.0072841644
theta: 4.66784143448
speed: 14.036649704
id: 1
t: 61
xxx after update is x: -3.40325284004
y: 26.8171100616
theta: 4.78345918655
speed: 14.1400365829
id: 1
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.75555555556






self.maneuver_requested None
aaaaaa
aaaaaabbbbb
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.29454239248774483, 0]
222 self.state_dicts[msg.id][msg.t] is (2.938896656036377, -26.936601638793945, 1.4994665384292603, 13.87111759185791)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: -3.40325284004
y: 26.8171100616
theta: 4.78345918655
speed: 14.1400365829
id: 1
t: 62
xxx after update is x: -3.14967536926
y: 25.8718509674
theta: 4.60559034348
speed: 13.9619722366
id: 1
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: -3.14967536926
y: 25.8718509674
theta: 4.60559034348
speed: 13.9619722366
id: 1
t: 63
xxx after update is x: -3.32494258881
y: 25.1109790802
theta: 4.60452079773
speed: 13.7737064360764341354
id: 0
t: 57
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:58


xxx before update is x: 3.153247118
y: -30.2053623199
theta: 1.53198003769
speed: 14.0764341354
id: 0
t: 57
xxx after update is x: 3.27897810936
y: -28.8851146698
theta: 1.62391483784
speed: 13.8699960709
id: 0
t: 58
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
xxx before update is x: 3.27897810936
y: -28.8851146698
theta: 1.62391483784
speed: 13.8699960709
id: 0
t: 58
xxx after update is x: 3.61086153984
y: -28.6565074921
theta: 1.55900084972
speed: 13.8978223801
id: 0
t: 59
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:59




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:60


xxx before update is x: 3.61086153984
y: -28.6565074921
theta: 1.55900084972
speed: 13.8978223801
id: 0
t: 59
xxx after update is x: 3.70093584061
y: -27.8335971832
theta: 1.45049452782
speed: 14.0204401016
id: 0
t: 60
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.40189792840590766, 0.4303820774481318]
222 self.state_dicts[msg.id][msg.t] is (-3.7535030841827393, 27.700782775878906, 4.855096817016602, 14.039830207824707)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
leave the update function 
in spin function, finish the n times spin:61


xxx before update is x: 3.70093584061
y: -27.8335971832
theta: 1.45049452782
speed: 14.0204401016
id: 0
t: 60
xxx after update is x: 3.1300599575
y: -27.4964790344
theta: 1.56078505516
speed: 13.7917757034
id: 0
t: 61
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:62


xxx before update is x: 3.1300599575
y: -27.4964790344
theta: 1.56078505516
speed: 13.7917757034
id: 0
t: 61
xxx after update is x: 2.93889665604
y: -26.9366016388
theta: 1.49946653843
speed: 13.8711175919
id: 0
t: 62
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:63


xxx before update is x: 2.93889665604
y: -26.9366016388
theta: 1.49946653843
speed: 13.8711175919
id: 0
t: 62
xxx after update is x: 3.01769065857
y: -26.3853778839
theta: 1.44800031185
speed: 13.7650279999
id: 0
t: 63
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:64


xxx before update is x: 3.01769065857
y: -26.3853778839
theta: 1.44800031185
speed: 13.7650279999
id: 0
t: 63
xxx after update is x: 3.32971119881
y: -25.5381908417
theta: 1.47331809998
speed: 13.4238815308
id: 0
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.3805403953985955, 0.4053840294232803]
222 self.state_dicts[msg.id][msg.t] is (-3.3249425888061523, 25.110979080200195, 4.604520797729492, 13.773706436157227)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 2.84444444444






self.maneuver_requested None
maneuver2
id: 1
t: 64
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: -3.32494258881
y: 25.1109790802
theta: 4.60452079773
speed: 13.7737064362
id: 1
t: 64
xxx after update is x: -3.02922916412
y: 24.0822372437
theta: 4.67633008957
speed: 14.2085123062
id: 1
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.326842103793998, 0]
222 self.state_dicts[msg.id][msg.t] is (3.2684550285339355, -24.742874145507812, 1.5472972393035889, 13.274908065795898)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -3.02922916412
y: 24.0822372437
theta: 4.67633008957
speed: 14.2085123062
id: 1
t: 65
xxx after update is x: -3.17827510834
y: 24.5815620422
theta: 4.73350191116
speed: 13.7278728485
id: 1
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:66




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: -3.17827510834
y: 24.5815620422
theta: 4.73350191116
speed: 13.7278728485
id: 1
t: 66
xxx after update is x: -3.18417215347
y: 23.5496768951
theta: 4.73128461838
speed: 13.7606372833
id: 1
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: -3.18417215347
y: 23.5496768951
theta: 4.73128461838
speed: 13.7606372833
id: 1
t: 67
xxx after update is x: -3.44324707985
y: 22.7564678192
theta: 4.71205425262
speed: 13.6309509277
id: 1
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.32061158916241156, 0]
222 self.state_dicts[msg.id][msg.t] is (3.0692901611328125, -23.585283279418945, 1.5575119256973267, 12.22035026550293)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: -3.44324707985
y: 22.7564678192
theta: 4.71205425262
speed: 13.6309509277
id: 1
t: 68
xxx after update is x: -2.97151947021
y: 22.5059890747
theta: 4.73418998718
speed: 14.006731987
id: 1
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: -2.97151947021
y: 22.5059890747
theta: 4.73418998718
speed: 14.006731987
id: 1
t: 69
xxx after update is x: -3.76610374451
y: 22.0732727051
theta: 4.80000495911
speed: 13.3848781586
id: 1
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.11111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: -3.76610374451
y: _negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:65


xxx before update is x: 3.32971119881
y: -25.5381908417
theta: 1.47331809998
speed: 13.4238815308
id: 0
t: 64
xxx after update is x: 3.26845502853
y: -24.7428741455
theta: 1.5472972393
speed: 13.2749080658
id: 0
t: 65
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:66


xxx before update is x: 3.26845502853
y: -24.7428741455
theta: 1.5472972393
speed: 13.2749080658
id: 0
t: 65
xxx after update is x: 3.58281612396
y: -24.2479515076
theta: 1.73941504955
speed: 12.9151926041
id: 0
t: 66
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:67


xxx before update is x: 3.58281612396
y: -24.2479515076
theta: 1.73941504955
speed: 12.9151926041
id: 0
t: 66
xxx after update is x: 2.88243079185
y: -23.6107177734
theta: 1.64195525646
speed: 12.7684526443
id: 0
t: 67
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:68


xxx before update is x: 2.88243079185
y: -23.6107177734
theta: 1.64195525646
speed: 12.7684526443
id: 0
t: 67
xxx after update is x: 3.06929016113
y: -23.5852832794
theta: 1.5575119257
speed: 12.2203502655
id: 0
t: 68
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.24602399422976903, 0.391004009823874]
222 self.state_dicts[msg.id][msg.t] is (-3.443247079849243, 22.756467819213867, 4.712054252624512, 13.630950927734375)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:69


xxx before update is x: 3.06929016113
y: -23.5852832794
theta: 1.5575119257
speed: 12.2203502655
id: 0
t: 68
xxx after update is x: 3.4818212986
y: -22.0076942444
theta: 1.69143843651
speed: 12.2728242874
id: 0
t: 69
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:70


xxx before update is x: 3.4818212986
y: -22.0076942444
theta: 1.69143843651
speed: 12.2728242874
id: 0
t: 69
xxx after update is x: 2.92822170258
y: -22.3667049408
theta: 1.49438488483
speed: 11.7486124039
id: 0
t: 70
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:71


xxx before update is x: 2.92822170258
y: -22.3667049408
theta: 1.49438488483
speed: 11.7486124039
id: 0
t: 70
xxx after update is x: 3.29585599899
y: -21.4334621429
theta: 1.8011111021
speed: 11.6578722
id: 0
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.15555555556






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: 3.29585599899
y: -21.4334621429
theta: 1.8011111021
speed: 11.6578722
id: 0
t: 71
xxx after update is x: 3.29962325096
y: -21.2141246796
theta: 1.40013670921
speed: 11.6915969849
id: 0
t: 72
maneuver_n22.0732727051
theta: 4.80000495911
speed: 13.3848781586
id: 1
t: 70
xxx after update is x: -2.72622394562
y: 20.4970264435
theta: 4.72833442688
speed: 13.8655252457
id: 1
t: 71
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.22305949038816258, 0]
222 self.state_dicts[msg.id][msg.t] is (3.29585599899292, -21.433462142944336, 1.801111102104187, 11.657872200012207)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:72


xxx before update is x: -2.72622394562
y: 20.4970264435
theta: 4.72833442688
speed: 13.8655252457
id: 1
t: 71
xxx after update is x: -2.81401276588
y: 20.7502765656
theta: 4.74165534973
speed: 13.9988536835
id: 1
t: 72
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:73


xxx before update is x: -2.81401276588
y: 20.7502765656
theta: 4.74165534973
speed: 13.9988536835
id: 1
t: 72
xxx after update is x: -3.15735077858
y: 20.1603374481
theta: 4.73702907562
speed: 13.5945415497
id: 1
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.237549705965169, 0]
222 self.state_dicts[msg.id][msg.t] is (3.184483051300049, -20.249828338623047, 1.553314208984375, 11.237595558166504)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: -3.15735077858
y: 20.1603374481
theta: 4.73702907562
speed: 13.5945415497
id: 1
t: 73
xxx after update is x: -3.27993822098
y: 19.2400493622
theta: 4.78168964386
speed: 13.8713312149
id: 1
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.28888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.28888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '3.28888888889', 'IntendedCourse': 'left', 'Position': ['3.5800585746765137', ' -19.852087020874023', ' 1.640535593032837'], 'TagID': '0', 'Type': 'GET', 'Velocity': '11'}
car 1 received GET,0,3.28888888889,(3.5800585746765137, -19.852087020874023, 1.640535593032837),11,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.146172839506
sender travel direction is:  north
sender earliest entering time is:  1.81341615212
sender last entering time is:  2.23589388754
sender last leaving time is:  4.44056520012
my entering time is:  0.995011949139
my leaving time is:  2.92385105877
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.28888888889
self.communication_details == 0
sending DENY,1,3.28888888889,(-3.766103744506836, 22.073272705078125, 4.800004959106445),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the siegotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.2546360161418382, 0.35718199469851253]
222 self.state_dicts[msg.id][msg.t] is (-2.8140127658843994, 20.750276565551758, 4.741655349731445, 13.99885368347168)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
xxx before update is x: 3.29962325096
y: -21.2141246796
theta: 1.40013670921
speed: 11.6915969849
id: 0
t: 72
xxx after update is x: 3.1844830513
y: -20.2498283386
theta: 1.55331420898
speed: 11.2375955582
id: 0
t: 73
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:73




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
if not self.man_init and self.course.hasPassedRequestLine(self.x, self.y) and self.id == 0:
initiating trymaneuver, start communication between the two cars $$$$$$$$$$$$$$$$$$$$$$$


 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:74


xxx before update is x: 3.1844830513
y: -20.2498283386
theta: 1.55331420898
speed: 11.2375955582
id: 0
t: 73
xxx after update is x: 3.58005857468
y: -19.8520870209
theta: 1.64053559303
speed: 11.1950283051
id: 0
t: 74
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 1
current clock is 3.28888888889
!!!!after check statue the self.tag is [3.2888888888888888, 0, 'left']
2.self.status is 1
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.28888888889

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.2, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.28888888889,(3.5800585746765137, -19.852087020874023, 1.640535593032837),11,1,3.28888888889,0,left
!!!!change state to get
GET,0,3.28888888889,(3.5800585746765137, -19.852087020874023, 1.640535593032837),11,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.28888888889
self.communication_details == 0
sending GET,0,3.28888888889,(3.5800585746765137, -19.852087020874023, 1.640535593032837),11,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
Received -->>: 
current clock is 3.28888888889




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.28888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '3.28888888889', 'Position': ['(-3.766103744506836', ' 22.073272705078125', ' 4.800004959106445)'], 'Type': 'DENY'}
car 0 received DENY,1,3.28888888889,(-3.766103744506836, 22.073272705078125, 4.800004959106445),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.2888888888888888, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.2888888888888888, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




finish try maneuver


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: 3.58005857468
y: -19.8520870209
theta: 1.64053559303
speed: 11.1950283051
id: 0
t: 74
xxx after update is x: 3.28598737717
y: -18.2439899445
theta: 1.5161075592
speed: 10.8744812012
id: 0
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: 3.28598737717
y: -18.2439899445
theta: 1.5161075592
speed: 10.8744812012
id: 0
t: 75
xxx after update is x: 3.4287416935
y: -19.3391132355
theta: 1.60392296314
speed: 10.8556909561
id: 0
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.168346730445393, 0.06272743722784012]
222 self.state_dicts[msg.id][msg.t] is (-3.3166959285736084, 18.257280349731445, 4.699905872344971, 14.047701835632324)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: 3.4287416935
y: -19.3391132355
theta: 1.60392296314
speed: 10.8556909561
id: 0
t: 76
xxx after update is x: 3.23407125473
y: -18.3860054016
theta: 1.71244299412
speed: 10.6244955063
id: 0
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:78


xxx before update is x: 3.23407125473
y: -18.3860054016
theta: 1.71244299412
speed: 10.6244955063
id: 0
t: 77
xxx after update is x: 2.93652009964
y: -18.3752803802
theta: 1.43947315216
speed: 10.4204835892
id: 0
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: 2.93652009964
y: -18.3752803802
theta: 1.43947315216
speed: 10.4204835892
id: 0
t: 78
xxx after update is x: 3.50993895531
y: -17.6297187805
theta: 1.65367424488
speed: 9.97361850739
id: 0
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.51111111111






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.466666666666667, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 3.51111111111
(RATE*SLOWDOWN) is 22.5
MR[0] is 3.46666666667
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,3.51111111111,(3.509938955307007, -17.629718780517578, 1.6536742448806763),9,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 3.51111111111
self.communication_details == 0
sending RELEASE,0,3.51111111111,(3.509938955307007, -17.629718780517578, 1.6536742448806763),9,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
aaaaaazzzzz
risk is [0.28906336078790534, 0.10829334233588382]
222 self.state_dicts[msg.id][msg.t] is (-3.630307674407959, 16.73407745361328, 4.793067455291748, 13.858325004577637)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the updam.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:75


xxx before update is x: -3.27993822098
y: 19.2400493622
theta: 4.78168964386
speed: 13.8713312149
id: 1
t: 74
xxx after update is x: -2.63393211365
y: 18.0635223389
theta: 4.74207639694
speed: 13.84815979
id: 1
t: 75
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.2533256338258668, 0]
222 self.state_dicts[msg.id][msg.t] is (3.285987377166748, -18.243989944458008, 1.5161075592041016, 10.874481201171875)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:76


xxx before update is x: -2.63393211365
y: 18.0635223389
theta: 4.74207639694
speed: 13.84815979
id: 1
t: 75
xxx after update is x: -3.31669592857
y: 18.2572803497
theta: 4.69990587234
speed: 14.0477018356
id: 1
t: 76
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:77


xxx before update is x: -3.31669592857
y: 18.2572803497
theta: 4.69990587234
speed: 14.0477018356
id: 1
t: 76
xxx after update is x: -3.21914577484
y: 17.0315971375
theta: 4.83948469162
speed: 14.502831459
id: 1
t: 77
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:78


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.42222222222






self.maneuver_requested None
xxx before update is x: -3.21914577484
y: 17.0315971375
theta: 4.83948469162
speed: 14.502831459
id: 1
t: 77
xxx after update is x: -2.58052802086
y: 16.684967041
theta: 4.65851163864
speed: 14.0071468353
id: 1
t: 78
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.37608404516122734, 0]
222 self.state_dicts[msg.id][msg.t] is (2.9365200996398926, -18.375280380249023, 1.4394731521606445, 10.420483589172363)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:79


xxx before update is x: -2.58052802086
y: 16.684967041
theta: 4.65851163864
speed: 14.0071468353
id: 1
t: 78
xxx after update is x: -3.63030767441
y: 16.7340774536
theta: 4.79306745529
speed: 13.8583250046
id: 1
t: 79
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 3.51111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.51111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '9', 'Sender': '0', 'TagID': '1', 'Time': '3.51111111111', 'Position': ['(3.509938955307007', ' -17.629718780517578', ' 1.6536742448806763)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,3.51111111111,(3.509938955307007, -17.629718780517578, 1.6536742448806763),9,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gte function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:80


xxx before update is x: 3.50993895531
y: -17.6297187805
theta: 1.65367424488
speed: 9.97361850739
id: 0
t: 79
xxx after update is x: 3.40793466568
y: -17.3885612488
theta: 1.54758417606
speed: 10.0431098938
id: 0
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: 3.40793466568
y: -17.3885612488
theta: 1.54758417606
speed: 10.0431098938
id: 0
t: 80
xxx after update is x: 2.70333576202
y: -16.5785655975
theta: 1.44062387943
speed: 9.83124732971
id: 0
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:82


xxx before update is x: 2.70333576202
y: -16.5785655975
theta: 1.44062387943
speed: 9.83124732971
id: 0
t: 81
xxx after update is x: 3.609582901
y: -15.7984857559
theta: 1.52170622349
speed: 9.15658569336
id: 0
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
xxx before update is x: 3.609582901
y: -15.7984857559
theta: 1.52170622349
speed: 9.15658569336
id: 0
t: 82
xxx after update is x: 3.23695707321
y: -15.8284902573
theta: 1.5951744318
speed: 9.04516601562
id: 0
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:83




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: 3.23695707321
y: -15.8284902573
theta: 1.5951744318
speed: 9.04516601562
id: 0
t: 83
xxx after update is x: 3.50410580635
y: -15.7442417145
theta: 1.5164372921
speed: 8.74707698822
id: 0
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: 3.50410580635
y: -15.7442417145
theta: 1.5164372921
speed: 8.74707698822
id: 0
t: 84
xxx after update is x: 3.83646631241
y: -14.9496183395
theta: 1.63744616508
speed: 8.84074306488
id: 0
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.20212416952206363, 0.05864076531548312]
222 self.state_dicts[msg.id][msg.t] is (-3.381201982498169, 12.7308988571167, 4.842926979064941, 14.026077270507812)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: 3.83646631241
y: -14.9496183395
theta: 1.63744616508
speed: 8.84074306488
id: 0
t: 85
xxx after update is x: 2.76643753052
y: -14.7377223969
theta: 1.67275512218
speed: 8.8962097168
id: 0
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: 2.76643753052
y: -14.7377223969
theta: 1.67275512218
speed: 8.8962097168
id: 0
t: 86
xxx after update is x: 3.4749777317
y: -14.0569257736
theta: 1.69246268272
speed: 8.18181705475
id: 0ooooooo
leave the update function 
in spin function, finish the n times spin:80


xxx before update is x: -3.63030767441
y: 16.7340774536
theta: 4.79306745529
speed: 13.8583250046
id: 1
t: 79
xxx after update is x: -3.39212059975
y: 15.6530971527
theta: 4.64521360397
speed: 13.8757390976
id: 1
t: 80
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.6807217714804368, 0]
222 self.state_dicts[msg.id][msg.t] is (3.4079346656799316, -17.388561248779297, 1.5475841760635376, 10.043109893798828)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:81


xxx before update is x: -3.39212059975
y: 15.6530971527
theta: 4.64521360397
speed: 13.8757390976
id: 1
t: 80
xxx after update is x: -2.81138920784
y: 15.0549278259
theta: 4.73885583878
speed: 14.0239248276
id: 1
t: 81
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:82




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:83




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:84


xxx before update is x: -2.81138920784
y: 15.0549278259
theta: 4.73885583878
speed: 14.0239248276
id: 1
t: 81
xxx after update is x: -3.11340022087
y: 13.0318565369
theta: 4.87313461304
speed: 13.898065567
id: 1
t: 82
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.11340022087
y: 13.0318565369
theta: 4.87313461304
speed: 13.898065567
id: 1
t: 82
xxx after update is x: -3.66682815552
y: 12.7235431671
theta: 4.8083782196
speed: 14.1542396545
id: 1
t: 83
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.66682815552
y: 12.7235431671
theta: 4.8083782196
speed: 14.1542396545
id: 1
t: 83
xxx after update is x: -3.69910669327
y: 12.7585830688
theta: 4.60398721695
speed: 13.9467163086
id: 1
t: 84
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:85


xxx before update is x: -3.69910669327
y: 12.7585830688
theta: 4.60398721695
speed: 13.9467163086
id: 1
t: 84
xxx after update is x: -3.3812019825
y: 12.7308988571
theta: 4.84292697906
speed: 14.0260772705
id: 1
t: 85
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.77777777778






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:86


xxx before update is x: -3.3812019825
y: 12.7308988571
theta: 4.84292697906
speed: 14.0260772705
id: 1
t: 85
xxx after update is x: -3.58316922188
y: 11.2604923248
theta: 4.71058320999
speed: 13.9860229492
id: 1
t: 86
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:87


xxx before update is x: -3.58316922188
y: 11.2604923248
theta: 4.
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 3.86666666667

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.8222222222222224, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,3.86666666667,(3.474977731704712, -14.056925773620605, 1.692462682723999),8,1,3.28888888889,0,left
!!!!change state to get
GET,0,3.86666666667,(3.474977731704712, -14.056925773620605, 1.692462682723999),8,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 3.86666666667
self.communication_details == 0
sending GET,0,3.86666666667,(3.474977731704712, -14.056925773620605, 1.692462682723999),8,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 3.86666666667






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0
finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 3.86666666667




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 3.86666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '14', 'Sender': '1', 'TagID': '1', 'Time': '3.86666666667', 'Position': ['(-3.381201982498169', ' 12.7308988571167', ' 4.842926979064941)'], 'Type': 'DENY'}
car 0 received DENY,1,3.86666666667,(-3.381201982498169, 12.7308988571167, 4.842926979064941),14,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [3.8666666666666667, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [3.8666666666666667, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: 3.4749777317
y: -14.0569257736
theta: 1.69246268272
speed: 8.18181705475
id: 0
t: 87
xxx after update is x: 2.94724607468
y: -13.7657203674
theta: 1.55688989162
speed: 7.92582035065
id: 0
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaazzzzz
risk is [0.27731370427082225, 0.07667406057914775]
222 self.state_dicts[msg.id][msg.t] is (-3.8024890422821045, 10.714062690734863, 4.52532958984375, 13.830306053161621)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: 2.94724607468
y: -13.7657203674
theta: 1.55688989162
speed: 7.92582035065
id: 0
t: 88
xxx after update is x: 3.20833563805
y: -13.5752344131
theta: 1.4846752882
speed: 7.4774274826
id: 0
t:71058320999
speed: 13.9860229492
id: 1
t: 86
xxx after update is x: -3.10729670525
y: 12.1192922592
theta: 4.79608392715
speed: 14.0396661758
id: 1
t: 87
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4976945412481982, 0]
222 self.state_dicts[msg.id][msg.t] is (3.474977731704712, -14.056925773620605, 1.692462682723999, 8.181817054748535)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
current clock is 3.86666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 3.86666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '3.86666666667', 'IntendedCourse': 'left', 'Position': ['3.474977731704712', ' -14.056925773620605', ' 1.692462682723999'], 'TagID': '0', 'Type': 'GET', 'Velocity': '8'}
car 1 received GET,0,3.86666666667,(3.474977731704712, -14.056925773620605, 1.692462682723999),8,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.171851851852
sender travel direction is:  north
sender earliest entering time is:  1.23579322727
sender last entering time is:  2.17185185185
sender last leaving time is:  4.54515010828
my entering time is:  0.504440894516
my leaving time is:  1.91702993718
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 3.86666666667
self.communication_details == 0
sending DENY,1,3.86666666667,(-3.381201982498169, 12.7308988571167, 4.842926979064941),14,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:88


xxx before update is x: -3.10729670525
y: 12.1192922592
theta: 4.79608392715
speed: 14.0396661758
id: 1
t: 87
xxx after update is x: -3.80248904228
y: 10.7140626907
theta: 4.52532958984
speed: 13.8303060532
id: 1
t: 88
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:89


xxx before update is x: -3.80248904228
y: 10.7140626907
theta: 4.52532958984
speed: 13.8303060532
id: 1
t: 88
xxx after update is x: -3.30834817886
y: 10.2786588669
theta: 4.65807247162
speed: 14.1731481552
id: 1
t: 89
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:90


xxx before update is x: -3.30834817886
y: 10.2786588669
theta: 4.65807247162
speed: 14.1731481552
id: 1
t: 89
xxx after update is x: -3.03276014328
y: 9.96681880951
theta: 4.68598937988
speed: 14.0766544342
id: 1
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: -3.03276014328
y: 9.96681880951
theta: 4.68598937988
speed: 14.0766544342
id: 1
t: 90
xxx after update is x: -3.30548667908
y: 8.518459 89
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
xxx before update is x: 3.20833563805
y: -13.5752344131
theta: 1.4846752882
speed: 7.4774274826
id: 0
t: 89
xxx after update is x: 3.80363225937
y: -13.3892154694
theta: 1.64480209351
speed: 7.67841434479
id: 0
t: 90
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:90




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:91


xxx before update is x: 3.80363225937
y: -13.3892154694
theta: 1.64480209351
speed: 7.67841434479
id: 0
t: 90
xxx after update is x: 3.01195788383
y: -12.747964859
theta: 1.62559056282
speed: 7.27186012268
id: 0
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
xxx before update is x: 3.01195788383
y: -12.747964859
theta: 1.62559056282
speed: 7.27186012268
id: 0
t: 91
xxx after update is x: 3.31879734993
y: -12.8357686996
theta: 1.33710765839
speed: 7.20780467987
id: 0
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:92


risk is [0.5073901239946531, 0.0060485098216866325]
222 self.state_dicts[msg.id][msg.t] is (-2.9216949939727783, 7.58705472946167, 4.83441686630249, 13.584223747253418)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: 3.31879734993
y: -12.8357686996
theta: 1.33710765839
speed: 7.20780467987
id: 0
t: 92
xxx after update is x: 2.99572753906
y: -12.2168722153
theta: 1.53272092342
speed: 6.52076911926
id: 0
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:94


xxx before update is x: 2.99572753906
y: -12.2168722153
theta: 1.53272092342
speed: 6.52076911926
id: 0
t: 93
xxx after update is x: 3.55834412575
y: -12.1606292725
theta: 1.5029463768
speed: 6.62889909744
id: 0
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: 3.55834412575
y: -12.1606292725
theta: 1.5029463768
speed: 6.62889909744
id: 0
t: 94
xxx after update is x: 2.90902972221
y: -11.1557703018
theta: 1.56142699718
speed: 6.61237287521
id: 0
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.22222222222






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.222222222222222, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.22222222222
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.22222222222
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,4.22222222222,(2.909029722213745, -11.155770301818848, 1.5614269971847534),6,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
cur32007
theta: 4.76303482056
speed: 13.755947113
id: 1
t: 91
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.2869019500976812, 0]
222 self.state_dicts[msg.id][msg.t] is (3.011957883834839, -12.747964859008789, 1.6255905628204346, 7.271860122680664)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:92


xxx before update is x: -3.30548667908
y: 8.51845932007
theta: 4.76303482056
speed: 13.755947113
id: 1
t: 91
xxx after update is x: -2.92169499397
y: 7.58705472946
theta: 4.8344168663
speed: 13.5842237473
id: 1
t: 92
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:93


xxx before update is x: -2.92169499397
y: 7.58705472946
theta: 4.8344168663
speed: 13.5842237473
id: 1
t: 92
xxx after update is x: -3.52351665497
y: 7.39687871933
theta: 4.7385597229
speed: 13.9764900208
id: 1
t: 93
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.6421025433827177, 0]
222 self.state_dicts[msg.id][msg.t] is (2.9957275390625, -12.216872215270996, 1.532720923423767, 6.520769119262695)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -3.52351665497
y: 7.39687871933
theta: 4.7385597229
speed: 13.9764900208
id: 1
t: 93
xxx after update is x: -3.35507822037
y: 7.09251737595
theta: 4.8410115242
speed: 14.070356369
id: 1
t: 94
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:94


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.17777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:95


xxx before update is x: -3.35507822037
y: 7.09251737595
theta: 4.8410115242
speed: 14.070356369
id: 1
t: 94
xxx after update is x: -3.18966221809
y: 6.51082181931
theta: 4.80673885345
speed: 13.6697072983
id: 1
t: 95
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.22222222222




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.22222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '6', 'Sender': '0', 'TagID': '1', 'Time': '4.22222222222', 'Position': ['(2.909029722213745', ' -11.155770301818848', ' 1.5614269971847534)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.22222222222,(2.909029722213745, -11.155770301818848, 1.5614269971847534),6,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: -3.18966221809
y: 6.51082181931
theta: 4.80673885345
speed: 13.6697072983
id: 1
t: 95
xxx after update is x: -3.53792691231
y: 5.78129053116
theta: 4.78693437576
speed: 14.0440006256
id: 1
t: 96
maneuver_negotiatir.py finish the update arent clock is 4.22222222222
self.communication_details == 0
sending RELEASE,0,4.22222222222,(2.909029722213745, -11.155770301818848, 1.5614269971847534),6,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.4325086593181085, 0.04038426901105832]
222 self.state_dicts[msg.id][msg.t] is (-3.189662218093872, 6.51082181930542, 4.80673885345459, 13.669707298278809)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:96


xxx before update is x: 2.90902972221
y: -11.1557703018
theta: 1.56142699718
speed: 6.61237287521
id: 0
t: 95
xxx after update is x: 2.69811940193
y: -11.3537836075
theta: 1.4823359251
speed: 5.9002327919
id: 0
t: 96
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:97


xxx before update is x: 2.69811940193
y: -11.3537836075
theta: 1.4823359251
speed: 5.9002327919
id: 0
t: 96
xxx after update is x: 2.95168662071
y: -10.6914615631
theta: 1.3955783844
speed: 5.92128515244
id: 0
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
xxx before update is x: 2.95168662071
y: -10.6914615631
theta: 1.3955783844
speed: 5.92128515244
id: 0
t: 97
xxx after update is x: 2.82155585289
y: -11.128947258
theta: 1.45059072971
speed: 5.4680223465
id: 0
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:98


risk is [0.392900897846154, 0.037977702552921495]
222 self.state_dicts[msg.id][msg.t] is (-3.285076856613159, 4.157408714294434, 4.623841762542725, 14.209590911865234)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: 2.82155585289
y: -11.128947258
theta: 1.45059072971
speed: 5.4680223465
id: 0
t: 98
xxx after update is x: 3.37538361549
y: -10.7369098663
theta: 1.67156386375
speed: 5.66489982605
id: 0
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: 3.37538361549
y: -10.7369098663
theta: 1.67156386375
speed: 5.66489982605
id: 0
t: 99
xxx after update is x: 3.23971056938
y: -10.1123933792
theta: 1.70141267776
speed: 5.10500097275
id: 0
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
xxx before update is x: 3.23971056938
y: -10.1123933792
theta: 1.70141267776
speed: 5.10500097275
id: 0
t: 100
xxx after update is x: 2.78526329994
y: -9.61259937286
theta: 1.46831738949
speed: 5.19085979462
id: 0
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:101


aaaaaazzzzz
risk is [0.3831540665218585, 0.025726346424242437]
222 self.state_dicts[msg.id][msg.t] is (-3.1034858226776123, 2.482848882675171, 4.463599681854248, 13.741621971130371)
if we have all measurements for a certain time-stamp perform risk estimation
selfgent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.44763701827835656, 0]
222 self.state_dicts[msg.id][msg.t] is (2.6981194019317627, -11.35378360748291, 1.4823359251022339, 5.900232791900635)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:97


xxx before update is x: -3.53792691231
y: 5.78129053116
theta: 4.78693437576
speed: 14.0440006256
id: 1
t: 96
xxx after update is x: -2.87473750114
y: 5.306204319
theta: 4.69059944153
speed: 13.5020112991
id: 1
t: 97
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:98


xxx before update is x: -2.87473750114
y: 5.306204319
theta: 4.69059944153
speed: 13.5020112991
id: 1
t: 97
xxx after update is x: -3.28507685661
y: 4.15740871429
theta: 4.62384176254
speed: 14.2095909119
id: 1
t: 98
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.3267631618503237, 0]
222 self.state_dicts[msg.id][msg.t] is (2.8215558528900146, -11.128947257995605, 1.45059072971344, 5.468022346496582)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:99


xxx before update is x: -3.28507685661
y: 4.15740871429
theta: 4.62384176254
speed: 14.2095909119
id: 1
t: 98
xxx after update is x: -2.73964190483
y: 3.46788311005
theta: 4.73564767838
speed: 14.0135307312
id: 1
t: 99
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:100


xxx before update is x: -2.73964190483
y: 3.46788311005
theta: 4.73564767838
speed: 14.0135307312
id: 1
t: 99
xxx after update is x: -3.09076786041
y: 3.5721218586
theta: 4.60667705536
speed: 13.8435487747
id: 1
t: 100
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:101


xxx before update is x: -3.09076786041
y: 3.5721218586
theta: 4.60667705536
speed: 13.8435487747
id: 1
t: 100
xxx after update is x: -3.10348582268
y: 2.48284888268
theta: 4.46359968185
speed: 13.7416219711
id: 1
t: 101
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.25094992370722224, 0]
222 self.state_dicts[msg.id][msg.t] is (2.7852632999420166, -9.61259937286377, 1.4683173894882202, 5.190859794616699)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.48888888889






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: -3.10348582268
y: 2.48284888268
theta: 4.46359968185
speed: 13.7416219711
id: 1
t: 101
xxx after update is x: -3.54328227043
y: 1.89655959606
theta: 4.51690340042
speed: 13.830581665
id: 1
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfin.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:102


xxx before update is x: 2.78526329994
y: -9.61259937286
theta: 1.46831738949
speed: 5.19085979462
id: 0
t: 101
xxx after update is x: 3.54812836647
y: -9.83562469482
theta: 1.55977666378
speed: 5.17220830917
id: 0
t: 102
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:103


maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 4.53333333333

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.533333333333333, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,4.53333333333,(3.548128366470337, -9.835624694824219, 1.5597766637802124),5,1,3.28888888889,0,left
!!!!change state to get
GET,0,4.53333333333,(3.548128366470337, -9.835624694824219, 1.5597766637802124),5,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 4.53333333333
self.communication_details == 0
sending GET,0,4.53333333333,(3.548128366470337, -9.835624694824219, 1.5597766637802124),5,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.53333333333






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0
xxx before update is x: 3.54812836647
y: -9.83562469482
theta: 1.55977666378
speed: 5.17220830917
id: 0
t: 102
xxx after update is x: 2.96338605881
y: -9.62582874298
theta: 1.37021481991
speed: 4.54069471359
id: 0
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.57777777778




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 4.57777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is DENY, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '4.57777777778', 'Position': ['(-3.1034858226776123', ' 2.482848882675171', ' 4.463599681854248)'], 'Type': 'DENY'}
car 0 received DENY,1,4.57777777778,(-3.1034858226776123, 2.482848882675171, 4.463599681854248),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.533333333333333, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [4.533333333333333, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing function, it's a long code, finish0




maneuver_negotiatir.py in the try maneuver function update -. sfinish
finish try maneuver


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: 2.96338605881
y: -9.62582874298
thish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:103


xxx before update is x: -3.54328227043
y: 1.89655959606
theta: 4.51690340042
speed: 13.830581665
id: 1
t: 102
xxx after update is x: -3.79888916016
y: 1.26283144951
theta: 4.80369567871
speed: 13.711971283
id: 1
t: 103
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 4.57777777778




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.57777777778
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '4.53333333333', 'IntendedCourse': 'left', 'Position': ['3.548128366470337', ' -9.835624694824219', ' 1.5597766637802124'], 'TagID': '0', 'Type': 'GET', 'Velocity': '5'}
car 1 received GET,0,4.53333333333,(3.548128366470337, -9.835624694824219, 1.5597766637802124),5,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.201481481481
sender travel direction is:  north
sender earliest entering time is:  0.630942029396
sender last entering time is:  2.20148148148
sender last leaving time is:  4.57477973791
my entering time is:  0.201481481481
my leaving time is:  0.835960901402
i have left the intersection:  False
finish not_conflicted
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, woshishui wozainali
maneuver_negotiatir.py start the update_agent_message
current clock is 4.57777777778
self.communication_details == 0
sending DENY,1,4.57777777778,(-3.1034858226776123, 2.482848882675171, 4.463599681854248),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




aaaaaa
aaaaaabbbbb
risk is [0.1973319210904322, 0]
222 self.state_dicts[msg.id][msg.t] is (2.963386058807373, -9.625828742980957, 1.370214819908142, 4.540694713592529)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:104


xxx before update is x: -3.79888916016
y: 1.26283144951
theta: 4.80369567871
speed: 13.711971283
id: 1
t: 103
xxx after update is x: -3.10480093956
y: 0.948409318924
theta: 4.69145917892
speed: 13.9855823517
id: 1
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:105


xxx before update is x: -3.10480093956
y: 0.948409318924
theta: 4.69145917892
speed: 13.9855823517
id: 1
t: 104
xxx after update is x: -3.68486881256
y: 0.533068239689
theta: 4.666056633
speed: 14.1335496902
id: 1
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:106


xxx before update is x: -3.68486881256
y: 0.533068239689
theta: 4.666056633
speed: 14.1335496902
id: 1
t: 105
xxx after update is x: -3.37870502472
y: -0.298675626516
theta: 4.72575712204
speed: 13.8883123398
id: 1
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.6232781221818197, 0]
222 self.state_dicts[msg.id][msg.t] is (3.23eta: 1.37021481991
speed: 4.54069471359
id: 0
t: 103
xxx after update is x: 2.97364830971
y: -9.82281303406
theta: 1.58734762669
speed: 4.623483181
id: 0
t: 104
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.4844612690611653, 1.7969847302576202e-05]
222 self.state_dicts[msg.id][msg.t] is (-3.1048009395599365, 0.9484093189239502, 4.6914591789245605, 13.98558235168457)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:105


xxx before update is x: 2.97364830971
y: -9.82281303406
theta: 1.58734762669
speed: 4.623483181
id: 0
t: 104
xxx after update is x: 3.40103769302
y: -8.8113193512
theta: 1.53629803658
speed: 4.39456796646
id: 0
t: 105
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
xxx before update is x: 3.40103769302
y: -8.8113193512
theta: 1.53629803658
speed: 4.39456796646
id: 0
t: 105
xxx after update is x: 3.23478579521
y: -9.53284358978
theta: 1.45427131653
speed: 3.60699677467
id: 0
t: 106
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:106




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: 3.23478579521
y: -9.53284358978
theta: 1.45427131653
speed: 3.60699677467
id: 0
t: 106
xxx after update is x: 3.6721329689
y: -8.55225086212
theta: 1.43358564377
speed: 3.60956954956
id: 0
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.3196383904707635, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.534740447998047, -1.0425485372543335, 4.785945892333984, 13.752586364746094)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: 3.6721329689
y: -8.55225086212
theta: 1.43358564377
speed: 3.60956954956
id: 0
t: 107
xxx after update is x: 3.62680983543
y: -8.55971431732
theta: 1.40163803101
speed: 3.3359568119
id: 0
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: 3.62680983543
y: -8.55971431732
theta: 1.40163803101
speed: 3.3359568119
id: 0
t: 108
xxx after update is x: 3.46738696098
y: -8.98157691956
theta: 1.78701269627
speed: 3.18636965752
id: 0
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
xxx before update is x: 3.46738696098
y: -8.98157691956
theta: 1.78701269627
speed: 3.18636965752
id: 0
t: 109
xxx after update is x: 3.07571148872
y: -7.65268373489
theta: 1.57196986675
speed: 3.10737776756
id: 0
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:110


risk is [0.663070640402794, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.011000871658325, -3.011242151260376, 4.683776378631592, 13.784483909606934)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function upd4785795211792, -9.532843589782715, 1.4542713165283203, 3.606996774673462)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:107


xxx before update is x: -3.37870502472
y: -0.298675626516
theta: 4.72575712204
speed: 13.8883123398
id: 1
t: 106
xxx after update is x: -3.534740448
y: -1.04254853725
theta: 4.78594589233
speed: 13.7525863647
id: 1
t: 107
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:108


xxx before update is x: -3.534740448
y: -1.04254853725
theta: 4.78594589233
speed: 13.7525863647
id: 1
t: 107
xxx after update is x: -2.98058891296
y: -1.98860490322
theta: 4.58483076096
speed: 13.8166151047
id: 1
t: 108
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.6488580645991149, 0]
222 self.state_dicts[msg.id][msg.t] is (3.62680983543396, -8.559714317321777, 1.4016380310058594, 3.3359568119049072)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:109


xxx before update is x: -2.98058891296
y: -1.98860490322
theta: 4.58483076096
speed: 13.8166151047
id: 1
t: 108
xxx after update is x: -3.59468317032
y: -2.77834796906
theta: 4.70511388779
speed: 13.4800796509
id: 1
t: 109
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 4.84444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:110


xxx before update is x: -3.59468317032
y: -2.77834796906
theta: 4.70511388779
speed: 13.4800796509
id: 1
t: 109
xxx after update is x: -3.01100087166
y: -3.01124215126
theta: 4.68377637863
speed: 13.7844839096
id: 1
t: 110
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.4864172878235878, 0]
222 self.state_dicts[msg.id][msg.t] is (3.075711488723755, -7.652683734893799, 1.5719698667526245, 3.107377767562866)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
current clock is 4.88888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 4.88888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '3', 'Sender': '0', 'TagID': '1', 'Time': '4.88888888889', 'Position': ['(3.075711488723755', ' -7.652683734893799', ' 1.5719698667526245)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,4.88888888889,(3.075711488723755, -7.652683734893799, 1.5719698667526245),3,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:111


xxx before update is x: -3.01100087166
y: -3.01124215126
theta: 4.68377637863
speed: 13.7844839096
id: 1
t: 110
xxx after update is x: -ate -. strat
current clock is 4.88888888889






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [4.888888888888889, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 4.88888888889
(RATE*SLOWDOWN) is 22.5
MR[0] is 4.88888888889
self.TMan is 5
self.agents_to_ask is ['1']
stopped retry timer
!!!!change state to TRYGET
RELEASE,0,4.88888888889,(3.075711488723755, -7.652683734893799, 1.5719698667526245),3,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 4.88888888889
self.communication_details == 0
sending RELEASE,0,4.88888888889,(3.075711488723755, -7.652683734893799, 1.5719698667526245),3,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:111


xxx before update is x: 3.07571148872
y: -7.65268373489
theta: 1.57196986675
speed: 3.10737776756
id: 0
t: 110
xxx after update is x: 3.22590470314
y: -7.99518156052
theta: 1.41086232662
speed: 2.91829299927
id: 0
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:112


xxx before update is x: 3.22590470314
y: -7.99518156052
theta: 1.41086232662
speed: 2.91829299927
id: 0
t: 111
xxx after update is x: 3.40071940422
y: -8.29977798462
theta: 1.4614700079
speed: 2.54317474365
id: 0
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:113


xxx before update is x: 3.40071940422
y: -8.29977798462
theta: 1.4614700079
speed: 2.54317474365
id: 0
t: 112
xxx after update is x: 3.4671432972
y: -8.01254081726
theta: 1.6300675869
speed: 2.13991165161
id: 0
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.5341954623821978, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3231401443481445, -4.456827163696289, 4.695566654205322, 13.911117553710938)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: 3.4671432972
y: -8.01254081726
theta: 1.6300675869
speed: 2.13991165161
id: 0
t: 113
xxx after update is x: 3.03999900818
y: -8.24153804779
theta: 1.57839596272
speed: 2.17524337769
id: 0
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:115


xxx before update is x: 3.03999900818
y: -8.24153804779
theta: 1.57839596272
speed: 2.17524337769
id: 0
t: 114
xxx after update is x: 3.25709366798
y: -7.86793756485
theta: 1.50174605846
speed: 1.64591145515
id: 0
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:116


xxx before update is x: 3.25709366798
y: -7.86793756485
theta: 1.50174605846
speed: 1.64591145515
id:4.00851297379
y: -3.35184335709
theta: 4.79895734787
speed: 13.6148271561
id: 1
t: 111
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:112


xxx before update is x: -4.00851297379
y: -3.35184335709
theta: 4.79895734787
speed: 13.6148271561
id: 1
t: 111
xxx after update is x: -3.05493187904
y: -4.39701461792
theta: 4.83814954758
speed: 14.1448059082
id: 1
t: 112
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -3.05493187904
y: -4.39701461792
theta: 4.83814954758
speed: 14.1448059082
id: 1
t: 112
xxx after update is x: -3.32314014435
y: -4.4568271637
theta: 4.69556665421
speed: 13.9111175537
id: 1
t: 113
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:113


aaaaaa
aaaaaabbbbb
risk is [0.4619128793437827, 0]
222 self.state_dicts[msg.id][msg.t] is (3.4671432971954346, -8.012540817260742, 1.6300675868988037, 2.139911651611328)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:114


xxx before update is x: -3.32314014435
y: -4.4568271637
theta: 4.69556665421
speed: 13.9111175537
id: 1
t: 113
xxx after update is x: -2.87580990791
y: -5.90012121201
theta: 4.67096424103
speed: 13.569688797
id: 1
t: 114
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:115


xxx before update is x: -2.87580990791
y: -5.90012121201
theta: 4.67096424103
speed: 13.569688797
id: 1
t: 114
xxx after update is x: -2.8960852623
y: -6.35984039307
theta: 4.60894775391
speed: 13.8877639771
id: 1
t: 115
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.6549117355803494, 0]
222 self.state_dicts[msg.id][msg.t] is (3.257093667984009, -7.8679375648498535, 1.5017460584640503, 1.645911455154419)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -2.8960852623
y: -6.35984039307
theta: 4.60894775391
speed: 13.8877639771
id: 1
t: 115
xxx after update is x: -3.34903931618
y: -6.90825748444
theta: 4.68511772156
speed: 13.7491464615
id: 1
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:116




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: -3.34903931618
y: -6.90825748444
theta: 4.68511772156
speed: 13.7491464615
id: 1
t: 116
xxx after update is x: -3.28080368042
y: -6.99117088318
theta: 4.66866970062
speed: 13.9710407257
id: 1
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.2






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.6091476300893408, 0]
222 self.state_dicts[msg.id][msg.t] is (3.5115346908569336, -8.039311408996582, 1.525099515914917, 1.4722700 0
t: 115
xxx after update is x: 3.00024986267
y: -7.64433765411
theta: 1.55497312546
speed: 1.41363990307
id: 0
t: 116
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.6850329731790882, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.349039316177368, -6.908257484436035, 4.685117721557617, 13.749146461486816)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:117


xxx before update is x: 3.00024986267
y: -7.64433765411
theta: 1.55497312546
speed: 1.41363990307
id: 0
t: 116
xxx after update is x: 3.51153469086
y: -8.039311409
theta: 1.52509951591
speed: 1.4722700119
id: 0
t: 117
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: 3.51153469086
y: -8.039311409
theta: 1.52509951591
speed: 1.4722700119
id: 0
t: 117
xxx after update is x: 2.74571108818
y: -7.44710111618
theta: 1.74873507023
speed: 1.26023042202
id: 0
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the t_retry function, all agnets in resopnse agnet set can not reached
reached retry trymaneuver
maneuver_negotiatir.py in the trymaneuver function - start$$$$$$$$$$$$$$$$$$$$$$$

1.self.status is 6
2.self.status is 6
change normal to tryget(for the case tryget, it doesn't need to chcnge)
current clock is 5.24444444444

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.2, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

( self.agent_state[0]/(RATE*SLOWDOWN) < MR[0] + 2*self.TMan) and MR[1] == 1
self.agents_to_ask is ['1']
message is :GET,0,5.24444444444,(2.745711088180542, -7.44710111618042, 1.7487350702285767),1,1,3.28888888889,0,left
!!!!change state to get
GET,0,5.24444444444,(2.745711088180542, -7.44710111618042, 1.7487350702285767),1,1,3.28888888889,0,left
maneuver_negotiatir.py start the update_agent_message
current clock is 5.24444444444
self.communication_details == 0
sending GET,0,5.24444444444,(2.745711088180542, -7.44710111618042, 1.7487350702285767),1,1,3.28888888889,0,left to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.24444444444






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
1
maneuver_negotiatir.py the R response set is not empty, so return 0, why 0, is that car 0
Received -->>: 
current clock is 5.24444444444




maneuver_negotiatir.py message_processing, it's a long code, start...0




current clock is 5.24444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GRANT, meaasge dict is {'TagTime': '13', 'Sender': '1', 'TagID': '1', 'Time': '5.24444444444', 'Position': ['(-3.280803680419922', ' -6.991170883178711', ' 4.668669700622559)'], 'Type': 'GRANT'}
car 0 received GRANT,1,5.24444444444,(-3.280803680419922, -6.991170883178711, 4.668669700622559),13,1,0,0 from  car1
status: 2

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.2, True, ['1']]
maneuver_negotiatir.py get membership, in the get_MR function, finish

maneuver_negotiatir.py message_processing,in request processing, exisiting membership = set(['1']) 
maneuver_negotiatir.py message_processing,in request processing, new membership =  [5.2, True, '1']
maneuver_negotiatir.py message_processing,in request processing, new R = set(['1'])




maneuver_negotiatir.py in the message processing fun119018555)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:118


xxx before update is x: -3.28080368042
y: -6.99117088318
theta: 4.66866970062
speed: 13.9710407257
id: 1
t: 117
xxx after update is x: -3.39763402939
y: -7.81587409973
theta: 4.6950712204
speed: 14.1941671371
id: 1
t: 118
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 5.24444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 5.24444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
maneuver_negotiatir.py message_processing,message type is GET, meaasge dict is {'Acc': '1', 'TagTime': '3.28888888889', 'Sender': '0', 'Time': '5.24444444444', 'IntendedCourse': 'left', 'Position': ['2.745711088180542', ' -7.44710111618042', ' 1.7487350702285767'], 'TagID': '0', 'Type': 'GET', 'Velocity': '1'}
car 1 received GET,0,5.24444444444,(2.745711088180542, -7.44710111618042, 1.7487350702285767),1,1,3.28888888889,0,left from  car0
status: 1
maneuver_negotiatir.py message_processing, (m_dict[Type] == GET)
maneuver_negotiatir.py in no conflict funtion , start
current time is  0.233086419753
maneuver_negotiatir.py message_processing, no conflict
maneuver_negotiatir.py message_processing, not conlicted
maneuver_negotiatir.py message_processing,!!dd342 change status to GRANT
self.grantID is 0
GRANT,1,5.24444444444,(-3.280803680419922, -6.991170883178711, 4.668669700622559),13,1,0,0
added car with id 0 to grantlist. current grantlist:  {0: [10.11111111111111, 'left']}
maneuver_negotiatir.py start the update_agent_message
current clock is 5.24444444444
self.communication_details == 0
sending GRANT,1,5.24444444444,(-3.280803680419922, -6.991170883178711, 4.668669700622559),13,1,0,0 to car 0 from car 1
maneuver_negotiatir.py finish the update_agent_message
current clock is 5.24444444444




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: -3.39763402939
y: -7.81587409973
theta: 4.6950712204
speed: 14.1941671371
id: 1
t: 118
xxx after update is x: -3.13455963135
y: -8.81443881989
theta: 4.79750394821
speed: 13.5517206192
id: 1
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:120


xxx before update is x: -3.13455963135
y: -8.81443881989
theta: 4.79750394821
speed: 13.5517206192
id: 1
t: 119
xxx after update is x: -3.37133455276
y: -8.9812002182
theta: 4.57060575485
speed: 13.4661407471
id: 1
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.7658356706125408, 0]
222 self.state_dicts[msg.id][msg.t] is (3.222090005874634, -7.053812503814697, 1.4270612001419067, 0.4865826666355133)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:121


xxx before update is x: -3.37133455276
y: -8.9812002182
theta: 4.57060575485
speed: 13.4661407471
id: 1
t: 120
xxx after update is x: -3.13162755966
y: -9.77984619141
theta: 4.62805604935
speed: 14.0330152512
id: 1
t: 121
maneuver_negotiatir.py finishction, it's a long code, finish0




finish try maneuver
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:119


xxx before update is x: 2.74571108818
y: -7.44710111618
theta: 1.74873507023
speed: 1.26023042202
id: 0
t: 118
xxx after update is x: 3.54122662544
y: -7.26266956329
theta: 1.52054071426
speed: 0.888642787933
id: 0
t: 119
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.6871759336322687, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1345596313476562, -8.814438819885254, 4.79750394821167, 13.55172061920166)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:120


xxx before update is x: 3.54122662544
y: -7.26266956329
theta: 1.52054071426
speed: 0.888642787933
id: 0
t: 119
xxx after update is x: 3.22209000587
y: -7.05381250381
theta: 1.42706120014
speed: 0.486582666636
id: 0
t: 120
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
xxx before update is x: 3.22209000587
y: -7.05381250381
theta: 1.42706120014
speed: 0.486582666636
id: 0
t: 120
xxx after update is x: 3.62614154816
y: -7.11786413193
theta: 1.73163211346
speed: 0.100509859622
id: 0
t: 121
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:121




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: 3.62614154816
y: -7.11786413193
theta: 1.73163211346
speed: 0.100509859622
id: 0
t: 121
xxx after update is x: 3.01508402824
y: -8.00137329102
theta: 1.55442976952
speed: 0.171608254313
id: 0
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.5655082949133394, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1638784408569336, -10.89157485961914, 4.637765884399414, 14.031139373779297)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: 3.01508402824
y: -8.00137329102
theta: 1.55442976952
speed: 0.171608254313
id: 0
t: 122
xxx after update is x: 3.56496334076
y: -7.00986194611
theta: 1.58200800419
speed: -0.349323868752
id: 0
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
stopppppppp
xxx before update is x: 3.56496334076
y: -7.00986194611
theta: 1.58200800419
speed: -0.349323868752
id: 0
t: 123
xxx after update is x: 2.80848264694
y: -7.40451622009
theta: 1.64481198788
speed: -0.120716787875
id: 0
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:124




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:125


xxx before update is x: 2.80848264694
y: -7.40451622009
theta: 1.64481198788
speed: -0.120716787875
id: 0
t: 124
xxx after update is x: 3.68707561493
y: -7.46631479263
theta: 1.50557768345
speed: -0.140299484134
id: the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:122


xxx before update is x: -3.13162755966
y: -9.77984619141
theta: 4.62805604935
speed: 14.0330152512
id: 1
t: 121
xxx after update is x: -3.16387844086
y: -10.8915748596
theta: 4.6377658844
speed: 14.0311393738
id: 1
t: 122
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.8363596605020219, 0]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.0150840282440186, -8.001373291015625, 1.5544297695159912, 0.17160825431346893)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:123


xxx before update is x: -3.16387844086
y: -10.8915748596
theta: 4.6377658844
speed: 14.0311393738
id: 1
t: 122
xxx after update is x: -3.48647117615
y: -11.1385374069
theta: 4.69046115875
speed: 13.0777778625
id: 1
t: 123
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:124


xxx before update is x: -3.48647117615
y: -11.1385374069
theta: 4.69046115875
speed: 13.0777778625
id: 1
t: 123
xxx after update is x: -3.65635251999
y: -11.6545476913
theta: 4.8920583725
speed: 13.8604135513
id: 1
t: 124
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.8511495730895045, 0.5119999999999982]
Stops!
222 self.state_dicts[msg.id][msg.t] is (2.8084826469421387, -7.404516220092773, 1.644811987876892, -0.12071678787469864)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:125


xxx before update is x: -3.65635251999
y: -11.6545476913
theta: 4.8920583725
speed: 13.8604135513
id: 1
t: 124
xxx after update is x: -3.3189637661
y: -12.1788663864
theta: 4.83047819138
speed: 13.7758550644
id: 1
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.55555555556






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: -3.3189637661
y: -12.1788663864
theta: 4.83047819138
speed: 13.7758550644
id: 1
t: 125
xxx after update is x: -3.6564514637
y: -12.6868982315
theta: 4.78449487686
speed: 13.8566980362
id: 1
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: -3.6564514637
y: -12.6868982315
theta: 4.78449487686
speed: 13.8566980362
id: 1
t: 126
xxx after update is x: -3.12546133995
y: -13.3075456619
theta: 4.62095689774
speed: 13.7577886581
id: 1
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.8753725897808016, 0.5167999999999984]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.09084153175354, -7.483644485473 0
t: 125
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.9406868953822733, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3189637660980225, -12.178866386413574, 4.830478191375732, 13.77585506439209)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:126


xxx before update is x: 3.68707561493
y: -7.46631479263
theta: 1.50557768345
speed: -0.140299484134
id: 0
t: 125
xxx after update is x: 3.09387850761
y: -7.81448793411
theta: 1.45908033848
speed: -0.182744368911
id: 0
t: 126
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.6






self.maneuver_requested left
maneuver_negotiatir.py in the lat function
0
maneuver_negotiatir.py the R response set is empty, so return 1, why 1. what 1 means, is that car 1
last

maneuver_negotiatir.py get membership, in the get_MR function, start
membership is [5.555555555555555, True, []]
maneuver_negotiatir.py get membership, in the get_MR function, finish

self.agent_state[0] is 5.6
(RATE*SLOWDOWN) is 22.5
MR[0] is 5.55555555556
self.TMan is 5
Empty
self.agents_to_ask is []
stopped retry timer
deny not in message
maneuver_negotiatir.py in the domaneuver function - start
added car with id 0 to grantlist. current grantlist:  {0: [10.422222222222222, 'left']}
Doing maneuver
maneuver_negotiatir.py finish the do maneuver function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:127


xxx before update is x: 3.09387850761
y: -7.81448793411
theta: 1.45908033848
speed: -0.182744368911
id: 0
t: 126
xxx after update is x: 3.09084153175
y: -7.48364448547
theta: 1.79612636566
speed: -0.0958340466022
id: 0
t: 127
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: 3.09084153175
y: -7.48364448547
theta: 1.79612636566
speed: -0.0958340466022
id: 0
t: 127
xxx after update is x: 3.3371553421
y: -7.67499399185
theta: 1.50614285469
speed: 0.18286408484
id: 0
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.8580555203610446, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0912296772003174, -14.281052589416504, 4.729935646057129, 13.547654151916504)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
xxx before update is x: 3.3371553421
y: -7.67499399185
theta: 1.50614285469
speed: 0.18286408484
id: 0
t: 128
xxx after update is x: 3.14625358582
y: -6.74260139465
theta: 1.47443783283
speed: 0.395708113909
id: 0
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:129




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
xxx before update is x: 3.14625358582
y: -6.74260139465
theta: 1.47443783283
speed: 0.395708113909
id: 0
t: 129
xxx after update is x: 3.0954105854
y: -6.81113576889
theta: 1.51802098751
speed: 0.968559086323
id: 0
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update functi633, 1.796126365661621, -0.09583404660224915)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:128


xxx before update is x: -3.12546133995
y: -13.3075456619
theta: 4.62095689774
speed: 13.7577886581
id: 1
t: 127
xxx after update is x: -3.0912296772
y: -14.2810525894
theta: 4.72993564606
speed: 13.5476541519
id: 1
t: 128
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -3.0912296772
y: -14.2810525894
theta: 4.72993564606
speed: 13.5476541519
id: 1
t: 128
xxx after update is x: -3.18539047241
y: -14.1470212936
theta: 4.7629032135
speed: 13.700553894
id: 1
t: 129
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:129


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:130


xxx before update is x: -3.18539047241
y: -14.1470212936
theta: 4.7629032135
speed: 13.700553894
id: 1
t: 129
xxx after update is x: -3.24506020546
y: -14.8938961029
theta: 4.77701282501
speed: 13.8111190796
id: 1
t: 130
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.8892303154312161, 0.4943999999999979]
Stops!
222 self.state_dicts[msg.id][msg.t] is (3.0954105854034424, -6.811135768890381, 1.5180209875106812, 0.9685590863227844)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
(self.id == 1):
gooooooo
xxx before update is x: -3.24506020546
y: -14.8938961029
theta: 4.77701282501
speed: 13.8111190796
id: 1
t: 130
xxx after update is x: -3.10550570488
y: -16.1775913239
theta: 4.63141155243
speed: 13.584487915
id: 1
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:131




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: -3.10550570488
y: -16.1775913239
theta: 4.63141155243
speed: 13.584487915
id: 1
t: 131
xxx after update is x: -3.20068192482
y: -16.6884765625
theta: 4.695291996
speed: 13.9088010788
id: 1
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.86666666667






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.039125881325952426, 0.475199999999998]
222 self.state_dicts[msg.id][msg.t] is (3.5271105766296387, -7.0651350021362305, 1.565737009048462, 1.2451292276382446)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:133


xxx before update is x: -3.20068192482
y: -16.6884765625
theta: 4.695291996
speed: 13.9088010788
id: 1
t: 132
xxx after update is x: -3.71956014633
y: -17.1689243317
theta: 4.42587375641
speed: 14.1511192322
id: 1
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion


gon 
in spin function, finish the n times spin:130




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:131


xxx before update is x: 3.0954105854
y: -6.81113576889
theta: 1.51802098751
speed: 0.968559086323
id: 0
t: 130
xxx after update is x: 3.24526143074
y: -7.22468709946
theta: 1.69284248352
speed: 1.28703892231
id: 0
t: 131
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.8192486033452929, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1055057048797607, -16.17759132385254, 4.631411552429199, 13.584487915039062)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:132


xxx before update is x: 3.24526143074
y: -7.22468709946
theta: 1.69284248352
speed: 1.28703892231
id: 0
t: 131
xxx after update is x: 3.52711057663
y: -7.06513500214
theta: 1.56573700905
speed: 1.24512922764
id: 0
t: 132
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:133


xxx before update is x: 3.52711057663
y: -7.06513500214
theta: 1.56573700905
speed: 1.24512922764
id: 0
t: 132
xxx after update is x: 3.37421941757
y: -7.4301943779
theta: 1.55491304398
speed: 1.94276368618
id: 0
t: 133
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 5.91111111111






self.maneuver_requested left
xxx before update is x: 3.37421941757
y: -7.4301943779
theta: 1.55491304398
speed: 1.94276368618
id: 0
t: 133
xxx after update is x: 3.45213365555
y: -6.98585414886
theta: 1.59568202496
speed: 1.7619613409
id: 0
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:134


maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.0561725599011922, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.9872756004333496, -17.667659759521484, 4.678803443908691, 13.97791862487793)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:135


xxx before update is x: 3.45213365555
y: -6.98585414886
theta: 1.59568202496
speed: 1.7619613409
id: 0
t: 134
xxx after update is x: 3.50157117844
y: -7.33756160736
theta: 1.51520860195
speed: 1.86433696747
id: 0
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: 3.50157117844
y: -7.33756160736
theta: 1.51520860195
speed: 1.86433696747
id: 0
t: 135
xxx after update is x: 3.08881592751
y: -6.98567676544
theta: 1.52362310886
speed: 2.4863615036
id: 0
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the updaoing to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:134


xxx before update is x: -3.71956014633
y: -17.1689243317
theta: 4.42587375641
speed: 14.1511192322
id: 1
t: 133
xxx after update is x: -2.98727560043
y: -17.6676597595
theta: 4.67880344391
speed: 13.9779186249
id: 1
t: 134
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:135


xxx before update is x: -2.98727560043
y: -17.6676597595
theta: 4.67880344391
speed: 13.9779186249
id: 1
t: 134
xxx after update is x: -3.42865228653
y: -18.7828884125
theta: 4.50418710709
speed: 13.9809675217
id: 1
t: 135
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [7.040738014456536e-07, 0.503999999999998]
222 self.state_dicts[msg.id][msg.t] is (3.5015711784362793, -7.33756160736084, 1.5152086019515991, 1.8643369674682617)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:136


xxx before update is x: -3.42865228653
y: -18.7828884125
theta: 4.50418710709
speed: 13.9809675217
id: 1
t: 135
xxx after update is x: -3.01140165329
y: -18.4672966003
theta: 4.92264032364
speed: 13.8461694717
id: 1
t: 136
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:137


xxx before update is x: -3.01140165329
y: -18.4672966003
theta: 4.92264032364
speed: 13.8461694717
id: 1
t: 136
xxx after update is x: -3.52494215965
y: -19.6925830841
theta: 4.59686422348
speed: 14.1098947525
id: 1
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [9.232827233754003e-19, 0.5103999999999982]
222 self.state_dicts[msg.id][msg.t] is (3.1342718601226807, -7.0277628898620605, 1.7214057445526123, 2.917818784713745)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: -3.52494215965
y: -19.6925830841
theta: 4.59686422348
speed: 14.1098947525
id: 1
t: 137
xxx after update is x: -3.31588625908
y: -19.3681907654
theta: 4.69596147537
speed: 13.6180820465
id: 1
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:139


xxx before update is x: -3.31588625908
y: -19.3681907654
theta: 4.69596147537
speed: 13.6180820465
id: 1
t: 138
xxx after update is x: -3.57350277901
y: -21.0901908875
theta: 4.55889225006
speed: 13.8788394928
id: 1
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [9.911328050064146e-47, 0.476799999999998]
222 self.state_dicts[msg.id][msg.t] is (2.993079662322998, -6.805134296417236, 1.6167755126953125, 3.3233799934387207)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_statete function xxx before update is x: 3.08881592751
y: -6.98567676544
theta: 1.52362310886
speed: 2.4863615036
id: 0
t: 136
xxx after update is x: 3.13427186012
y: -7.02776288986
theta: 1.72140574455
speed: 2.91781878471
id: 0
t: 137
maneuver_negotiatir.py finish the update agent state from ros funtion

in spin function, finish the n times spin:137


aaaaaa
risk is [1.4067733994992797e-06, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.52494215965271, -19.692583084106445, 4.596864223480225, 14.109894752502441)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:138


xxx before update is x: 3.13427186012
y: -7.02776288986
theta: 1.72140574455
speed: 2.91781878471
id: 0
t: 137
xxx after update is x: 3.39218640327
y: -7.14157915115
theta: 1.63321042061
speed: 2.7713534832
id: 0
t: 138
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
xxx before update is x: 3.39218640327
y: -7.14157915115
theta: 1.63321042061
speed: 2.7713534832
id: 0
t: 138
xxx after update is x: 2.99307966232
y: -6.80513429642
theta: 1.6167755127
speed: 3.32337999344
id: 0
t: 139
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:139


aaaaaa
risk is [3.9936509672448164e-47, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.573502779006958, -21.090190887451172, 4.558892250061035, 13.878839492797852)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: 2.99307966232
y: -6.80513429642
theta: 1.6167755127
speed: 3.32337999344
id: 0
t: 139
xxx after update is x: 3.14243412018
y: -6.47330760956
theta: 1.66717302799
speed: 3.29070520401
id: 0
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: 3.14243412018
y: -6.47330760956
theta: 1.66717302799
speed: 3.29070520401
id: 0
t: 140
xxx after update is x: 2.97716784477
y: -6.53058004379
theta: 1.54979658127
speed: 3.87191510201
id: 0
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.26666666667






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: 2.97716784477
y: -6.53058004379
theta: 1.54979658127
speed: 3.87191510201
id: 0
t: 141
xxx after update is x: 3.31360411644
y: -6.02863693237
theta: 1.51545679569
speed: 3.95843720436
id: 0
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [3.193188747866208e-61, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.450144052505493, -22.673717498779297, 4.76279878616333, 13.522083282470703)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targ function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:140


xxx before update is x: -3.57350277901
y: -21.0901908875
theta: 4.55889225006
speed: 13.8788394928
id: 1
t: 139
xxx after update is x: -3.1356511116
y: -20.8760356903
theta: 4.89214372635
speed: 13.6643199921
id: 1
t: 140
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.22222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:141


xxx before update is x: -3.1356511116
y: -20.8760356903
theta: 4.89214372635
speed: 13.6643199921
id: 1
t: 140
xxx after update is x: -3.67687726021
y: -22.1926879883
theta: 4.63451242447
speed: 13.7638969421
id: 1
t: 141
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [2.809041490725876e-61, 0.5087999999999981]
222 self.state_dicts[msg.id][msg.t] is (2.977167844772339, -6.530580043792725, 1.5497965812683105, 3.871915102005005)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:142


xxx before update is x: -3.67687726021
y: -22.1926879883
theta: 4.63451242447
speed: 13.7638969421
id: 1
t: 141
xxx after update is x: -3.45014405251
y: -22.6737174988
theta: 4.76279878616
speed: 13.5220832825
id: 1
t: 142
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: -3.45014405251
y: -22.6737174988
theta: 4.76279878616
speed: 13.5220832825
id: 1
t: 142
xxx after update is x: -3.62689375877
y: -23.2270145416
theta: 4.65360355377
speed: 14.1413011551
id: 1
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [9.866602703105033e-84, 0.5295999999999987]
222 self.state_dicts[msg.id][msg.t] is (2.980280637741089, -5.53631591796875, 1.7317548990249634, 4.3507466316223145)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: -3.62689375877
y: -23.2270145416
theta: 4.65360355377
speed: 14.1413011551
id: 1
t: 143
xxx after update is x: -3.38797712326
y: -23.6309375763
theta: 4.76685476303
speed: 13.9536895752
id: 1
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: -3.38797712326
y: -23.6309375763
theta: 4.76685476303
speed: 13.9536895752
id: 1
t: 144
xxx after update is x: -3.22626709938
y: -24.3829536438
theta: 4.77007198334
speed: 13.7286272049
id: 1
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
!!! change status from grant to normal
current clock is 6.44444444etspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:143


xxx before update is x: 3.31360411644
y: -6.02863693237
theta: 1.51545679569
speed: 3.95843720436
id: 0
t: 142
xxx after update is x: 2.98028063774
y: -5.53631591797
theta: 1.73175489902
speed: 4.35074663162
id: 0
t: 143
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:144


xxx before update is x: 2.98028063774
y: -5.53631591797
theta: 1.73175489902
speed: 4.35074663162
id: 0
t: 143
xxx after update is x: 3.59093976021
y: -5.2032289505
theta: 1.76938760281
speed: 4.30931758881
id: 0
t: 144
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [6.221549155126434e-90, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.387977123260498, -23.630937576293945, 4.766854763031006, 13.953689575195312)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:145


xxx before update is x: 3.59093976021
y: -5.2032289505
theta: 1.76938760281
speed: 4.30931758881
id: 0
t: 144
xxx after update is x: 3.21300625801
y: -5.87276363373
theta: 1.60051167011
speed: 4.94163513184
id: 0
t: 145
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:146


xxx before update is x: 3.21300625801
y: -5.87276363373
theta: 1.60051167011
speed: 4.94163513184
id: 0
t: 145
xxx after update is x: 3.17783856392
y: -5.67578125
theta: 1.82566952705
speed: 5.09211158752
id: 0
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: 3.17783856392
y: -5.67578125
theta: 1.82566952705
speed: 5.09211158752
id: 0
t: 146
xxx after update is x: 2.96671128273
y: -5.19438028336
theta: 1.72472751141
speed: 5.30996370316
id: 0
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [1.1023406339357127e-113, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.980046510696411, -25.03777503967285, 4.746169090270996, 14.165528297424316)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:148


xxx before update is x: 2.96671128273
y: -5.19438028336
theta: 1.72472751141
speed: 5.30996370316
id: 0
t: 147
xxx after update is x: 3.19156861305
y: -5.35149478912
theta: 1.59692311287
speed: 5.5249915123
id: 0
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: 3.19156861305
y: -5.35149478912
theta: 1.59692311287
speed: 5.5249915123
id: 0
t: 148
xxx after update is x: 3.41684126854
y: -4.59953212738
theta: 1.82949864864
speed: 5.77071762085
id: 0
t: 149
maneuver_negotiatir.py finish the update agen444
!!!threading.Timer
tgarnt done


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:146


xxx before update is x: -3.22626709938
y: -24.3829536438
theta: 4.77007198334
speed: 13.7286272049
id: 1
t: 145
xxx after update is x: -3.46267724037
y: -25.0472221375
theta: 4.8024187088
speed: 13.6417484283
id: 1
t: 146
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [4.343689567282417e-112, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (3.1778385639190674, -5.67578125, 1.825669527053833, 5.092111587524414)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:147


xxx before update is x: -3.46267724037
y: -25.0472221375
theta: 4.8024187088
speed: 13.6417484283
id: 1
t: 146
xxx after update is x: -2.9800465107
y: -25.0377750397
theta: 4.74616909027
speed: 14.1655282974
id: 1
t: 147
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -2.9800465107
y: -25.0377750397
theta: 4.74616909027
speed: 14.1655282974
id: 1
t: 147
xxx after update is x: -3.696195364
y: -26.6469364166
theta: 4.63535785675
speed: 13.7315168381
id: 1
t: 148
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.57777777778






self.maneuver_requested None
leave the update function 
in spin function, finish the n times spin:148


maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [2.3077254532008457e-149, 0.5231999999999986]
222 self.state_dicts[msg.id][msg.t] is (3.191568613052368, -5.351494789123535, 1.5969231128692627, 5.524991512298584)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:149


xxx before update is x: -3.696195364
y: -26.6469364166
theta: 4.63535785675
speed: 13.7315168381
id: 1
t: 148
xxx after update is x: -3.15605401993
y: -27.1130638123
theta: 4.63517618179
speed: 14.1357278824
id: 1
t: 149
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: -3.15605401993
y: -27.1130638123
theta: 4.63517618179
speed: 14.1357278824
id: 1
t: 149
xxx after update is x: -3.14136767387
y: -27.2163543701
theta: 4.87234735489
speed: 13.9550905228
id: 1
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [6.518890184218349e-176, 0.502399999999998]
222 self.state_dicts[msg.id][msg.t] is (3.170780897140503, -4.481457233428955, 1.9138151407241821, 6.371501445770264)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: -3.14136767387
y: -27.216354370t state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.62222222222






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [8.867588913858159e-166, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1560540199279785, -27.11306381225586, 4.635176181793213, 14.135727882385254)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:150


xxx before update is x: 3.41684126854
y: -4.59953212738
theta: 1.82949864864
speed: 5.77071762085
id: 0
t: 149
xxx after update is x: 3.17078089714
y: -4.48145723343
theta: 1.91381514072
speed: 6.37150144577
id: 0
t: 150
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:151


xxx before update is x: 3.17078089714
y: -4.48145723343
theta: 1.91381514072
speed: 6.37150144577
id: 0
t: 150
xxx after update is x: 2.91986465454
y: -4.24165773392
theta: 1.74281179905
speed: 5.85765838623
id: 0
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:152


xxx before update is x: 2.91986465454
y: -4.24165773392
theta: 1.74281179905
speed: 5.85765838623
id: 0
t: 151
xxx after update is x: 3.13826274872
y: -4.39273834229
theta: 1.86992299557
speed: 6.33910655975
id: 0
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [1.0366546388033983e-201, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.576016902923584, -28.77570915222168, 4.783008575439453, 13.84071159362793)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:153


xxx before update is x: 3.13826274872
y: -4.39273834229
theta: 1.86992299557
speed: 6.33910655975
id: 0
t: 152
xxx after update is x: 3.03692865372
y: -4.05737781525
theta: 1.82969081402
speed: 6.73049879074
id: 0
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:154


xxx before update is x: 3.03692865372
y: -4.05737781525
theta: 1.82969081402
speed: 6.73049879074
id: 0
t: 153
xxx after update is x: 2.41296863556
y: -4.34125518799
theta: 1.95253670216
speed: 6.78573560715
id: 0
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [5.306811313629637e-242, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.262723684310913, -30.188169479370117, 4.678335666656494, 13.679681777954102)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:155


xxx before update is x: 2.41296863556
y: -4.34125518799
theta: 1.95253670216
speed: 6.78573560715
id: 0
t: 154
xxx after update is x: 3.22635364532
y: -3.78522443771
the1
theta: 4.87234735489
speed: 13.9550905228
id: 1
t: 150
xxx after update is x: -3.23778820038
y: -27.8476390839
theta: 4.59391307831
speed: 13.5040140152
id: 1
t: 151
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:152


xxx before update is x: -3.23778820038
y: -27.8476390839
theta: 4.59391307831
speed: 13.5040140152
id: 1
t: 151
xxx after update is x: -3.57601690292
y: -28.7757091522
theta: 4.78300857544
speed: 13.8407115936
id: 1
t: 152
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [3.218397018649574e-244, 0.45119999999999816]
222 self.state_dicts[msg.id][msg.t] is (3.1382627487182617, -4.392738342285156, 1.8699229955673218, 6.339106559753418)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:153


xxx before update is x: -3.57601690292
y: -28.7757091522
theta: 4.78300857544
speed: 13.8407115936
id: 1
t: 152
xxx after update is x: -3.28337097168
y: -29.1397018433
theta: 4.69422721863
speed: 13.7597122192
id: 1
t: 153
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the tgrant function, this function is the same as the paper
tgarnt done
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:154


xxx before update is x: -3.28337097168
y: -29.1397018433
theta: 4.69422721863
speed: 13.7597122192
id: 1
t: 153
xxx after update is x: -3.26272368431
y: -30.1881694794
theta: 4.67833566666
speed: 13.679681778
id: 1
t: 154
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [2.3940038459643094e-242, 0.4943999999999979]
222 self.state_dicts[msg.id][msg.t] is (2.412968635559082, -4.341255187988281, 1.952536702156067, 6.785735607147217)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:155


xxx before update is x: -3.26272368431
y: -30.1881694794
theta: 4.67833566666
speed: 13.679681778
id: 1
t: 154
xxx after update is x: -3.03289246559
y: -30.5308170319
theta: 4.71712875366
speed: 14.0037231445
id: 1
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.88888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: -3.03289246559
y: -30.5308170319
theta: 4.71712875366
speed: 14.0037231445
id: 1
t: 155
xxx after update is x: -3.46118330956
y: -31.0668296814
theta: 4.74530601501
speed: 14.1738624573
id: 1
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [9.997086534491664e-278, 0.48479999999999795]
222 self.state_dicts[msg.id][msg.t] is (2.3226335048675537, -3.1055376529693604, 2.0484778881073, 7.720817565917969)
if we have all measurements for a certain time-stamp perform risk estimation
sta: 2.11156058311
speed: 7.45791006088
id: 0
t: 155
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:156


xxx before update is x: 3.22635364532
y: -3.78522443771
theta: 2.11156058311
speed: 7.45791006088
id: 0
t: 155
xxx after update is x: 2.32263350487
y: -3.10553765297
theta: 2.04847788811
speed: 7.72081756592
id: 0
t: 156
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [1.9571927197660759e-277, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4611833095550537, -31.066829681396484, 4.745306015014648, 14.17386245727539)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: 2.32263350487
y: -3.10553765297
theta: 2.04847788811
speed: 7.72081756592
id: 0
t: 156
xxx after update is x: 2.33593082428
y: -2.66750764847
theta: 1.91475403309
speed: 7.72006464005
id: 0
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 6.97777777778






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: 2.33593082428
y: -2.66750764847
theta: 1.91475403309
speed: 7.72006464005
id: 0
t: 157
xxx after update is x: 2.66896510124
y: -2.36509299278
theta: 2.13764595985
speed: 8.20036315918
id: 0
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:159


xxx before update is x: 2.66896510124
y: -2.36509299278
theta: 2.13764595985
speed: 8.20036315918
id: 0
t: 158
xxx after update is x: 1.70394325256
y: -2.09367966652
theta: 2.13267087936
speed: 8.45030021667
id: 0
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.9014713764190674, -33.002838134765625, 4.662285804748535, 13.820079803466797)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:160


xxx before update is x: 1.70394325256
y: -2.09367966652
theta: 2.13267087936
speed: 8.45030021667
id: 0
t: 159
xxx after update is x: 1.75600910187
y: -1.28939926624
theta: 2.22892808914
speed: 8.79390144348
id: 0
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: 1.75600910187
y: -1.28939926624
theta: 2.22892808914
speed: 8.79390144348
id: 0
t: 160
xxx after update is x: 1.19067537785
y: -1.06638801098
theta: 2.27421855927
speed: 8.75199317932
id: 0
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.974980115890503, -33.6829299elf.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:157


xxx before update is x: -3.46118330956
y: -31.0668296814
theta: 4.74530601501
speed: 14.1738624573
id: 1
t: 156
xxx after update is x: -3.71577167511
y: -31.8738517761
theta: 4.76790857315
speed: 14.198217392
id: 1
t: 157
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:158


xxx before update is x: -3.71577167511
y: -31.8738517761
theta: 4.76790857315
speed: 14.198217392
id: 1
t: 157
xxx after update is x: -3.82144546509
y: -32.7680931091
theta: 4.73231840134
speed: 14.1707134247
id: 1
t: 158
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5439999999999992]
222 self.state_dicts[msg.id][msg.t] is (2.6689651012420654, -2.3650929927825928, 2.137645959854126, 8.200363159179688)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:159


xxx before update is x: -3.82144546509
y: -32.7680931091
theta: 4.73231840134
speed: 14.1707134247
id: 1
t: 158
xxx after update is x: -2.90147137642
y: -33.0028381348
theta: 4.66228580475
speed: 13.8200798035
id: 1
t: 159
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -2.90147137642
y: -33.0028381348
theta: 4.66228580475
speed: 13.8200798035
id: 1
t: 159
xxx after update is x: -3.6093943119
y: -33.5650863647
theta: 5.00594806671
speed: 13.7405719757
id: 1
t: 160
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:160


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.503999999999998]
222 self.state_dicts[msg.id][msg.t] is (1.7560091018676758, -1.289399266242981, 2.2289280891418457, 8.793901443481445)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:161


xxx before update is x: -3.6093943119
y: -33.5650863647
theta: 5.00594806671
speed: 13.7405719757
id: 1
t: 160
xxx after update is x: -2.97498011589
y: -33.6829299927
theta: 4.67444992065
speed: 13.9637527466
id: 1
t: 161
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: -2.97498011589
y: -33.6829299927
theta: 4.67444992065
speed: 13.9637527466
id: 1
t: 161
xxx after update is x: -2.76759672165
y: -34.9334373474
theta: 4.65150594711
speed: 13.9700670242
id: 1
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.481599999999998]
222 self.state_dicts[msg.id][msg.t] is (1.2267591953277588, -0.8614470958709717, 2.0835156440734863, 9.254477500915527)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_sta9267578, 4.674449920654297, 13.963752746582031)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:162


xxx before update is x: 1.19067537785
y: -1.06638801098
theta: 2.27421855927
speed: 8.75199317932
id: 0
t: 161
xxx after update is x: 1.22675919533
y: -0.861447095871
theta: 2.08351564407
speed: 9.25447750092
id: 0
t: 162
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:163


xxx before update is x: 1.22675919533
y: -0.861447095871
theta: 2.08351564407
speed: 9.25447750092
id: 0
t: 162
xxx after update is x: 0.907287240028
y: -0.905969083309
theta: 2.26944637299
speed: 9.48914813995
id: 0
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.042553663253784, -35.537532806396484, 4.718264102935791, 13.469137191772461)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: 0.907287240028
y: -0.905969083309
theta: 2.26944637299
speed: 9.48914813995
id: 0
t: 163
xxx after update is x: 1.23144733906
y: -0.0237048082054
theta: 2.46801733971
speed: 9.54214477539
id: 0
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.28888888889






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:165


xxx before update is x: 1.23144733906
y: -0.0237048082054
theta: 2.46801733971
speed: 9.54214477539
id: 0
t: 164
xxx after update is x: 0.316478729248
y: 0.03032024391
theta: 2.28411388397
speed: 10.2811841965
id: 0
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:166


xxx before update is x: 0.316478729248
y: 0.03032024391
theta: 2.28411388397
speed: 10.2811841965
id: 0
t: 165
xxx after update is x: 0.507269620895
y: 0.382102578878
theta: 2.44288921356
speed: 10.0780258179
id: 0
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.003582715988159, -37.013702392578125, 4.7902350425720215, 13.87084674835205)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: 0.507269620895
y: 0.382102578878
theta: 2.44288921356
speed: 10.0780258179
id: 0
t: 166
xxx after update is x: -0.534356176853
y: 0.521687507629
theta: 2.54234790802
speed: 10.8647384644
id: 0
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in thte function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:163


xxx before update is x: -2.76759672165
y: -34.9334373474
theta: 4.65150594711
speed: 13.9700670242
id: 1
t: 162
xxx after update is x: -3.04255366325
y: -35.5375328064
theta: 4.71826410294
speed: 13.4691371918
id: 1
t: 163
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.24444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:164


xxx before update is x: -3.04255366325
y: -35.5375328064
theta: 4.71826410294
speed: 13.4691371918
id: 1
t: 163
xxx after update is x: -3.12881755829
y: -35.4290847778
theta: 4.74960660934
speed: 14.0201797485
id: 1
t: 164
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.46879999999999805]
222 self.state_dicts[msg.id][msg.t] is (1.2314473390579224, -0.023704808205366135, 2.468017339706421, 9.542144775390625)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:165


xxx before update is x: -3.12881755829
y: -35.4290847778
theta: 4.74960660934
speed: 14.0201797485
id: 1
t: 164
xxx after update is x: -3.44516682625
y: -36.9220314026
theta: 4.59865427017
speed: 13.7534427643
id: 1
t: 165
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:166


xxx before update is x: -3.44516682625
y: -36.9220314026
theta: 4.59865427017
speed: 13.7534427643
id: 1
t: 165
xxx after update is x: -3.00358271599
y: -37.0137023926
theta: 4.79023504257
speed: 13.8708467484
id: 1
t: 166
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48479999999999795]
222 self.state_dicts[msg.id][msg.t] is (0.5072696208953857, 0.3821025788784027, 2.4428892135620117, 10.078025817871094)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:167


xxx before update is x: -3.00358271599
y: -37.0137023926
theta: 4.79023504257
speed: 13.8708467484
id: 1
t: 166
xxx after update is x: -3.18503451347
y: -38.5280151367
theta: 4.92651557922
speed: 13.9785337448
id: 1
t: 167
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: -3.18503451347
y: -38.5280151367
theta: 4.92651557922
speed: 13.9785337448
id: 1
t: 167
xxx after update is x: -3.38295793533
y: -38.803150177
theta: 4.71338748932
speed: 14.1887588501
id: 1
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (-0.6760230660438538, 0.87860101461e sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:168


xxx before update is x: -0.534356176853
y: 0.521687507629
theta: 2.54234790802
speed: 10.8647384644
id: 0
t: 167
xxx after update is x: -0.676023066044
y: 0.878601014614
theta: 2.53453803062
speed: 10.7870149612
id: 0
t: 168
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.382957935333252, -38.80315017700195, 4.713387489318848, 14.188758850097656)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:169


xxx before update is x: -0.676023066044
y: 0.878601014614
theta: 2.53453803062
speed: 10.7870149612
id: 0
t: 168
xxx after update is x: -1.37685263157
y: 1.50746691227
theta: 2.55534791946
speed: 11.3472671509
id: 0
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: -1.37685263157
y: 1.50746691227
theta: 2.55534791946
speed: 11.3472671509
id: 0
t: 169
xxx after update is x: -1.64626443386
y: 1.46882355213
theta: 2.5556409359
speed: 11.4274740219
id: 0
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:171


xxx before update is x: -1.64626443386
y: 1.46882355213
theta: 2.5556409359
speed: 11.4274740219
id: 0
t: 170
xxx after update is x: -1.88302326202
y: 2.34348535538
theta: 2.75041842461
speed: 11.5594577789
id: 0
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4085114002227783, -40.34235382080078, 4.9003143310546875, 13.91517162322998)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: -1.88302326202
y: 2.34348535538
theta: 2.75041842461
speed: 11.5594577789
id: 0
t: 171
xxx after update is x: -2.45672035217
y: 2.55903291702
theta: 2.57084608078
speed: 11.9559469223
id: 0
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.64444444444






self.maneuver_requested left
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:173


xxx before update is x: -2.45672035217
y: 2.55903291702
theta: 2.57084608078
speed: 11.9559469223
id: 0
t: 172
xxx after update is x: -3.34969210625
y: 2.12444448471
theta: 2.62361240387
speed: 12.0591802597
id: 0
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0667808055877686, -42.262413024902344, 4.606870174407959, 14.188080787658691)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state functio41052, 2.5345380306243896, 10.787014961242676)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -3.38295793533
y: -38.803150177
theta: 4.71338748932
speed: 14.1887588501
id: 1
t: 168
xxx after update is x: -3.08238053322
y: -39.9427337646
theta: 4.70633888245
speed: 13.7167568207
id: 1
t: 169
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:169




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:170


xxx before update is x: -3.08238053322
y: -39.9427337646
theta: 4.70633888245
speed: 13.7167568207
id: 1
t: 169
xxx after update is x: -3.50502634048
y: -40.1204414368
theta: 4.77335786819
speed: 13.9372682571
id: 1
t: 170
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5359999999999989]
222 self.state_dicts[msg.id][msg.t] is (-1.6462644338607788, 1.4688235521316528, 2.555640935897827, 11.427474021911621)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:171


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.55555555556






self.maneuver_requested None
xxx before update is x: -3.50502634048
y: -40.1204414368
theta: 4.77335786819
speed: 13.9372682571
id: 1
t: 170
xxx after update is x: -3.40851140022
y: -40.3423538208
theta: 4.90031433105
speed: 13.9151716232
id: 1
t: 171
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:172


xxx before update is x: -3.40851140022
y: -40.3423538208
theta: 4.90031433105
speed: 13.9151716232
id: 1
t: 171
xxx after update is x: -3.32411050797
y: -41.3480682373
theta: 4.72577953339
speed: 13.9053297043
id: 1
t: 172
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4959999999999979]
222 self.state_dicts[msg.id][msg.t] is (-2.4567203521728516, 2.559032917022705, 2.5708460807800293, 11.955946922302246)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:173


xxx before update is x: -3.32411050797
y: -41.3480682373
theta: 4.72577953339
speed: 13.9053297043
id: 1
t: 172
xxx after update is x: -3.06678080559
y: -42.2624130249
theta: 4.60687017441
speed: 14.1880807877
id: 1
t: 173
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: -3.06678080559
y: -42.2624130249
theta: 4.60687017441
speed: 14.1880807877
id: 1
t: 173
xxx after update is x: -3.5148100853
y: -42.1025085449
theta: 4.65995931625
speed: 14.1790437698
id: 1
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion
************n


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:174


xxx before update is x: -3.34969210625
y: 2.12444448471
theta: 2.62361240387
speed: 12.0591802597
id: 0
t: 173
xxx after update is x: -3.44668769836
y: 2.58486413956
theta: 2.8286948204
speed: 12.58020401
id: 0
t: 174
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: -3.44668769836
y: 2.58486413956
theta: 2.8286948204
speed: 12.58020401
id: 0
t: 174
xxx after update is x: -3.49929213524
y: 2.67581319809
theta: 2.87115621567
speed: 12.7515420914
id: 0
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.277029275894165, -43.12150573730469, 4.859720230102539, 13.979446411132812)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: -3.49929213524
y: 2.67581319809
theta: 2.87115621567
speed: 12.7515420914
id: 0
t: 175
xxx after update is x: -4.68480539322
y: 3.12785291672
theta: 2.84357738495
speed: 13.2728691101
id: 0
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:177


xxx before update is x: -4.68480539322
y: 3.12785291672
theta: 2.84357738495
speed: 13.2728691101
id: 0
t: 176
xxx after update is x: -4.91380882263
y: 3.3160443306
theta: 2.90950536728
speed: 13.2295866013
id: 0
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: -4.91380882263
y: 3.3160443306
theta: 2.90950536728
speed: 13.2295866013
id: 0
t: 177
xxx after update is x: -5.97933292389
y: 2.89055514336
theta: 3.00507688522
speed: 13.2475595474
id: 0
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5012288093566895, -44.907875061035156, 4.766504287719727, 14.243732452392578)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: -5.97933292389
y: 2.89055514336
theta: 3.00507688522
speed: 13.2475595474
id: 0
t: 178
xxx after update is x: -6.21854782104
y: 3.36961197853
theta: 2.96538949013
speed: 13.3598108292
id: 0
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
True
middle
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:180


xxx before update is x: -6.21854782104
y: 3.36961197853
theta: 2.96538949013
speed: 13.3598108292
id: 0
t: 179
xxx after update is x: -6.38078737259
y: 3.22972774506
theta: 3.16148757935
speed: 13.7179613113
id: 0
t: 180
maneunormalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:175


xxx before update is x: -3.5148100853
y: -42.1025085449
theta: 4.65995931625
speed: 14.1790437698
id: 1
t: 174
xxx after update is x: -3.27702927589
y: -43.1215057373
theta: 4.8597202301
speed: 13.9794464111
id: 1
t: 175
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5247999999999986]
222 self.state_dicts[msg.id][msg.t] is (-3.4992921352386475, 2.6758131980895996, 2.8711562156677246, 12.751542091369629)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:176


xxx before update is x: -3.27702927589
y: -43.1215057373
theta: 4.8597202301
speed: 13.9794464111
id: 1
t: 175
xxx after update is x: -3.37230491638
y: -43.3433685303
theta: 4.75384187698
speed: 14.0507764816
id: 1
t: 176
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:177


xxx before update is x: -3.37230491638
y: -43.3433685303
theta: 4.75384187698
speed: 14.0507764816
id: 1
t: 176
xxx after update is x: -2.50040960312
y: -44.6097221375
theta: 4.90146112442
speed: 13.6395711899
id: 1
t: 177
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4895999999999979]
222 self.state_dicts[msg.id][msg.t] is (-4.913808822631836, 3.316044330596924, 2.9095053672790527, 13.229586601257324)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:178


xxx before update is x: -2.50040960312
y: -44.6097221375
theta: 4.90146112442
speed: 13.6395711899
id: 1
t: 177
xxx after update is x: -3.50122880936
y: -44.907875061
theta: 4.76650428772
speed: 14.2437324524
id: 1
t: 178
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 7.91111111111






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5183999999999984]
222 self.state_dicts[msg.id][msg.t] is (-5.97933292388916, 2.8905551433563232, 3.0050768852233887, 13.247559547424316)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:179


xxx before update is x: -3.50122880936
y: -44.907875061
theta: 4.76650428772
speed: 14.2437324524
id: 1
t: 178
xxx after update is x: -3.56817746162
y: -45.1799087524
theta: 4.80648994446
speed: 13.9836483002
id: 1
t: 179
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:180


xxx before update is x: -3.56817746162
y: -45.1799087524
theta: 4.80648994446
speed: 13.9836483002
id: 1
t: 179
xxx after update is x: -3.16778326035
y: -45.7691574097
theta: 4.71063041687
speed: 14.0128078461
id: 1
t: 180
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 8.0




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 8.0
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '8.0', 'Position': ['(-6.380787372589111', ' 3.2297277450561523', ' 3.161487579345703)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,8.0,(-6.380787372589111, 3.2297277450561523, 3.161487579345703),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:181


xxx before update is x: -3.16778326035
y: -45.7691574097
theta: 4.71063041687
speed: 14.0128078461
id: 1
t: 180
xxx after update is x: -3.22172427177
y: -46.6199645996
theta: 4.82110595703
speed: 13.4328403473
id: 1
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 0.5359999999999989]
222 self.state_dicts[msg.id][msg.t] is (-6.927949905395508, 3.892714500427246, 3.035087823867798, 13.724047660827637)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:182


xxx before update is x: -3.22172427177
y: -46.6199645996
theta: 4.82110595703
speed: 13.4328403473
id: 1
t: 181
xxx after update is x: -3.15669298172
y: -47.4128913879
theta: 4.70898914337
speed: 13.6463766098
id: 1
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:183


xxx before update is x: -3.15669298172
y: -47.4128913879
theta: 4.70898914337
speed: 13.6463766098
id: 1
t: 182
xxx after update is x: -3.56017661095
y: -48.4224472046
theta: 4.76954698563
speed: 13.9956731796
id: 1
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48479999999999795]
222 self.state_dicts[msg.id][msg.t] is (-8.802084922790527, 3.434922695159912, 3.1340274810791016, 13.698123931884766)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: -3.56017661095
y: -48.4224472046
theta: 4.76954698563
speed: 13.9956731796
id: 1
t: 183
xxx after update is x: -3.43267941475
y: -48.8216247559
theta: 4.65797662735
speed: 13.5757913589
id: 1
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5087999999999981]
222 self.state_dicts[msg.id][msg.t] is (-9.579730033874512, 3.7060296535491943, 3.0634922981262207, 14.181404113769531)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin functionver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.0






self.maneuver_requested left
RELEASE,0,8.0,(-6.380787372589111, 3.2297277450561523, 3.161487579345703),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 8.0
self.communication_details == 0
sending RELEASE,0,8.0,(-6.380787372589111, 3.2297277450561523, 3.161487579345703),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
aaaaaa
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.167783260345459, -45.76915740966797, 4.710630416870117, 14.012807846069336)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
stopppppppp
leave the update function 
in spin function, finish the n times spin:181


xxx before update is x: -6.38078737259
y: 3.22972774506
theta: 3.16148757935
speed: 13.7179613113
id: 0
t: 180
xxx after update is x: -6.9279499054
y: 3.89271450043
theta: 3.03508782387
speed: 13.7240476608
id: 0
t: 181
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:182


xxx before update is x: -6.9279499054
y: 3.89271450043
theta: 3.03508782387
speed: 13.7240476608
id: 0
t: 181
xxx after update is x: -8.17822742462
y: 3.3492629528
theta: 3.25251626968
speed: 13.7362976074
id: 0
t: 182
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:183


xxx before update is x: -8.17822742462
y: 3.3492629528
theta: 3.25251626968
speed: 13.7362976074
id: 0
t: 182
xxx after update is x: -8.80208492279
y: 3.43492269516
theta: 3.13402748108
speed: 13.6981239319
id: 0
t: 183
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5601766109466553, -48.422447204589844, 4.769546985626221, 13.995673179626465)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:184


xxx before update is x: -8.80208492279
y: 3.43492269516
theta: 3.13402748108
speed: 13.6981239319
id: 0
t: 183
xxx after update is x: -9.57973003387
y: 3.70602965355
theta: 3.06349229813
speed: 14.1814041138
id: 0
t: 184
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:185


xxx before update is x: -9.57973003387
y: 3.70602965355
theta: 3.06349229813
speed: 14.1814041138
id: 0
t: 184
xxx after update is x: -9.321600914
y: 3.71359419823
theta: 3.18680500984
speed: 13.7293167114
id: 0
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4431087970733643, -48.9050178527832, 4.641622543334961, 13.618535041809082)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed, finish the n times spin:185

xxx before update is x: -3.43267941475
y: -48.8216247559
theta: 4.65797662735
speed: 13.5757913589
id: 1
t: 184
xxx after update is x: -3.44310879707
y: -48.9050178528
theta: 4.64162254333
speed: 13.6185350418
id: 1
t: 185
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: -3.44310879707
y: -48.9050178528
theta: 4.64162254333
speed: 13.6185350418
id: 1
t: 185
xxx after update is x: -3.02277565002
y: -48.9755134583
theta: 4.54704761505
speed: 13.9884691238
id: 1
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.26666666667






self.maneuver_requested None
aaaaaa
aaaaaabbbbb
maneuver_negotiatir.py in the try maneuver function update -. sfinish
risk is [0.0, 0.49919999999999787]
222 self.state_dicts[msg.id][msg.t] is (-10.122664451599121, 2.992750644683838, 3.1024651527404785, 13.810885429382324)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: -3.02277565002
y: -48.9755134583
theta: 4.54704761505
speed: 13.9884691238
id: 1
t: 186
xxx after update is x: -3.56181979179
y: -50.0446815491
theta: 4.8061466217
speed: 13.7169828415
id: 1
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 8.31111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 8.31111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '8.31111111111', 'Position': ['(-10.318934440612793', ' 3.7317795753479004', ' 3.1657419204711914)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,8.31111111111,(-10.318934440612793, 3.7317795753479004, 3.1657419204711914),14,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:188


xxx before update is x: -3.56181979179
y: -50.0446815491
theta: 4.8061466217
speed: 13.7169828415
id: 1
t: 187
xxx after update is x: -3.42000889778
y: -50.9774055481
theta: 4.53912734985
speed: 14.0808591843
id: 1
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.539199999999999]
222 self.state_dicts[msg.id][msg.t] is (-11.50273323059082, 3.8188626766204834, 3.151494264602661, 14.038036346435547)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: -3.42000889778
y: -50.9774055481
theta: 4.53912734985
speed: 14.0808591843
id: 1
t: 188
xxx after update is x: -3.00203704834
y: -51.1131858826
theta: 4.61102247238
speed: 13.7446022034
id: 1
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(sel < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:186


xxx before update is x: -9.321600914
y: 3.71359419823
theta: 3.18680500984
speed: 13.7293167114
id: 0
t: 185
xxx after update is x: -10.1226644516
y: 2.99275064468
theta: 3.10246515274
speed: 13.8108854294
id: 0
t: 186
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:187


xxx before update is x: -10.1226644516
y: 2.99275064468
theta: 3.10246515274
speed: 13.8108854294
id: 0
t: 186
xxx after update is x: -10.3189344406
y: 3.73177957535
theta: 3.16574192047
speed: 14.1796293259
id: 0
t: 187
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.31111111111






self.maneuver_requested left
RELEASE,0,8.31111111111,(-10.318934440612793, 3.7317795753479004, 3.1657419204711914),14,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 8.31111111111
self.communication_details == 0
sending RELEASE,0,8.31111111111,(-10.318934440612793, 3.7317795753479004, 3.1657419204711914),14,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:188


xxx before update is x: -10.3189344406
y: 3.73177957535
theta: 3.16574192047
speed: 14.1796293259
id: 0
t: 187
xxx after update is x: -11.5027332306
y: 3.81886267662
theta: 3.1514942646
speed: 14.0380363464
id: 0
t: 188
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.420008897781372, -50.9774055480957, 4.539127349853516, 14.080859184265137)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:189


xxx before update is x: -11.5027332306
y: 3.81886267662
theta: 3.1514942646
speed: 14.0380363464
id: 0
t: 188
xxx after update is x: -11.8907804489
y: 4.00999212265
theta: 3.34666585922
speed: 13.9800004959
id: 0
t: 189
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: -11.8907804489
y: 4.00999212265
theta: 3.34666585922
speed: 13.9800004959
id: 0
t: 189
xxx after update is x: -12.8516807556
y: 3.8293390274
theta: 3.11047816277
speed: 14.3424806595
id: 0
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.186668872833252, -52.46556091308594, 4.647007465362549, 13.840167045593262)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -12.8516807556
y: 3.8293390274
theta: 3.11047816277
speed: 14.3424806595
id: 0
t: 190
xxx after update is x: -13.3704242706
y: 3.41553139687
theta: 3.19660639763
speed: 13.931678772
id: 0
t: 19f.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:190


xxx before update is x: -3.00203704834
y: -51.1131858826
theta: 4.61102247238
speed: 13.7446022034
id: 1
t: 189
xxx after update is x: -3.18666887283
y: -52.4655609131
theta: 4.64700746536
speed: 13.8401670456
id: 1
t: 190
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.49919999999999787]
222 self.state_dicts[msg.id][msg.t] is (-12.851680755615234, 3.829339027404785, 3.110478162765503, 14.342480659484863)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:191


xxx before update is x: -3.18666887283
y: -52.4655609131
theta: 4.64700746536
speed: 13.8401670456
id: 1
t: 190
xxx after update is x: -3.02325701714
y: -53.2583465576
theta: 4.5170674324
speed: 14.1635599136
id: 1
t: 191
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:192


xxx before update is x: -3.02325701714
y: -53.2583465576
theta: 4.5170674324
speed: 14.1635599136
id: 1
t: 191
xxx after update is x: -3.53926420212
y: -52.7297782898
theta: 4.47075080872
speed: 13.9639501572
id: 1
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5247999999999986]
222 self.state_dicts[msg.id][msg.t] is (-13.936206817626953, 3.4059946537017822, 3.187894344329834, 13.75240707397461)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:193


xxx before update is x: -3.53926420212
y: -52.7297782898
theta: 4.47075080872
speed: 13.9639501572
id: 1
t: 192
xxx after update is x: -3.00369286537
y: -53.7933883667
theta: 4.79805088043
speed: 13.7057523727
id: 1
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
removed car with id 0 from grantlist. currentgrantlist: {}


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:194


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.57777777778






self.maneuver_requested None
xxx before update is x: -3.00369286537
y: -53.7933883667
theta: 4.79805088043
speed: 13.7057523727
id: 1
t: 193
xxx after update is x: -3.14277005196
y: -55.7653388977
theta: 4.60243701935
speed: 14.0930118561
id: 1
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -3.14277005196
y: -55.7653388977
theta: 4.60243701935
speed: 14.0930118561
id: 1
t: 194
xxx after update is x: -2.93622970581
y: -55.6959571838
theta: 4.65243577957
speed: 14.1294536591
id: 1
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:195




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -2.93622970581
y: -55.6959571838
theta: 4.65243577957
speed: 14.1294536591
id: 1
t: 195
xxx1
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:192


xxx before update is x: -13.3704242706
y: 3.41553139687
theta: 3.19660639763
speed: 13.931678772
id: 0
t: 191
xxx after update is x: -13.9362068176
y: 3.4059946537
theta: 3.18789434433
speed: 13.752407074
id: 0
t: 192
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
aaaaaa
risk is [0.0, 0.0]
xxx before update is x: -13.9362068176
y: 3.4059946537
theta: 3.18789434433
speed: 13.752407074
id: 0
t: 192
xxx after update is x: -14.6727876663
y: 3.56389093399
theta: 3.23322463036
speed: 13.97078228
id: 0
t: 193
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:193




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:194


xxx before update is x: -14.6727876663
y: 3.56389093399
theta: 3.23322463036
speed: 13.97078228
id: 0
t: 193
xxx after update is x: -16.228012085
y: 3.86119818687
theta: 3.1280374527
speed: 13.924864769
id: 0
t: 194
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (-3.1427700519561768, -55.76533889770508, 4.6024370193481445, 14.093011856079102)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.62222222222






self.maneuver_requested left
RELEASE,0,8.62222222222,(-16.228012084960938, 3.8611981868743896, 3.128037452697754),13,1,3.28888888889,0

going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -16.228012085
y: 3.86119818687
theta: 3.1280374527
speed: 13.924864769
id: 0
t: 194
xxx after update is x: -16.5694408417
y: 3.50867581367
theta: 3.08830690384
speed: 13.8774366379
id: 0
t: 195
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:195




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -16.5694408417
y: 3.50867581367
theta: 3.08830690384
speed: 13.8774366379
id: 0
t: 195
xxx after update is x: -17.3036518097
y: 3.4149479866
theta: 3.05979013443
speed: 14.0735588074
id: 0
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion

maneuver_negotiatir.py start the update_agent_message
current clock is 8.71111111111
self.communication_details == 0
sending RELEASE,0,8.62222222222,(-16.228012084960938, 3.8611981868743896, 3.128037452697754),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
leave the update function 
in spin function, finish the n times spin:196


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -17.3036518097
y: 3.4149479866
theta: 3.05979013443
speed: 14.0735588074
id: 0
t: 196
xxx after update is x: -16.7888526917
y: 3.71128892899
theta: 3.03998589516
speed: 13.7516469955
id: 0
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update functi after update is x: -3.08306360245
y: -56.3176231384
theta: 4.77428817749
speed: 13.7867183685
id: 1
t: 196
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:196


Received -->>: 
current clock is 8.71111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 8.71111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '8.62222222222', 'Position': ['(-16.228012084960938', ' 3.8611981868743896', ' 3.128037452697754)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,8.62222222222,(-16.228012084960938, 3.8611981868743896, 3.128037452697754),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:197


xxx before update is x: -3.08306360245
y: -56.3176231384
theta: 4.77428817749
speed: 13.7867183685
id: 1
t: 196
xxx after update is x: -3.25123262405
y: -56.6223678589
theta: 4.64161109924
speed: 13.5497674942
id: 1
t: 197
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.45119999999999816]
222 self.state_dicts[msg.id][msg.t] is (-16.78885269165039, 3.7112889289855957, 3.0399858951568604, 13.751646995544434)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:198


xxx before update is x: -3.25123262405
y: -56.6223678589
theta: 4.64161109924
speed: 13.5497674942
id: 1
t: 197
xxx after update is x: -2.86118984222
y: -57.118850708
theta: 4.80853891373
speed: 13.9203748703
id: 1
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:199


xxx before update is x: -2.86118984222
y: -57.118850708
theta: 4.80853891373
speed: 13.9203748703
id: 1
t: 198
xxx after update is x: -2.87515854836
y: -57.8165588379
theta: 4.72338485718
speed: 14.1651058197
id: 1
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (-18.65497398376465, 3.7241249084472656, 3.191601276397705, 13.561797142028809)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: -2.87515854836
y: -57.8165588379
theta: 4.72338485718
speed: 14.1651058197
id: 1
t: 199
xxx after update is x: -3.35741019249
y: -58.5923118591
theta: 4.82029724121
speed: 13.7449569702
id: 1
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -3.35741019249
y: -58.5923118591
theta: 4.82029724121
speed: 13.7449569702
id: 1
t: 200
xxx after update is x: -3.02303409576
y: -58.5860824585
theta: 4.6946on 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:198


xxx before update is x: -16.7888526917
y: 3.71128892899
theta: 3.03998589516
speed: 13.7516469955
id: 0
t: 197
xxx after update is x: -17.5982608795
y: 3.03921461105
theta: 2.9462826252
speed: 13.8094120026
id: 0
t: 198
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.861189842224121, -57.11885070800781, 4.808538913726807, 13.920374870300293)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:199


xxx before update is x: -17.5982608795
y: 3.03921461105
theta: 2.9462826252
speed: 13.8094120026
id: 0
t: 198
xxx after update is x: -18.6549739838
y: 3.72412490845
theta: 3.1916012764
speed: 13.561797142
id: 0
t: 199
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:200


xxx before update is x: -18.6549739838
y: 3.72412490845
theta: 3.1916012764
speed: 13.561797142
id: 0
t: 199
xxx after update is x: -18.7075786591
y: 3.43990254402
theta: 3.1541531086
speed: 13.6590871811
id: 0
t: 200
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.357410192489624, -58.59231185913086, 4.8202972412109375, 13.744956970214844)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:201


xxx before update is x: -18.7075786591
y: 3.43990254402
theta: 3.1541531086
speed: 13.6590871811
id: 0
t: 200
xxx after update is x: -19.6492576599
y: 3.52714300156
theta: 3.32797908783
speed: 13.8195075989
id: 0
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion
removed car with id 0 from grantlist. currentgrantlist: {}


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:202


xxx before update is x: -19.6492576599
y: 3.52714300156
theta: 3.32797908783
speed: 13.8195075989
id: 0
t: 201
xxx after update is x: -19.8927268982
y: 2.8467669487
theta: 3.26345062256
speed: 13.633849144
id: 0
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:203


xxx before update is x: -19.8927268982
y: 2.8467669487
theta: 3.26345062256
speed: 13.633849144
id: 0
t: 202
xxx after update is x: -21.0545139313
y: 3.21169996262
theta: 3.0557205677
speed: 14.0668716431
id: 0
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.29123592376709, -60.32193374633789, 4.729560375213623, 14.003249168395996)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finis721077
speed: 14.0996875763
id: 1
t: 201
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (-19.64925765991211, 3.5271430015563965, 3.32797908782959, 13.819507598876953)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:202


xxx before update is x: -3.02303409576
y: -58.5860824585
theta: 4.6946721077
speed: 14.0996875763
id: 1
t: 201
xxx after update is x: -3.79631495476
y: -59.7663574219
theta: 4.79739761353
speed: 14.0662746429
id: 1
t: 202
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 8.97777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:203


xxx before update is x: -3.79631495476
y: -59.7663574219
theta: 4.79739761353
speed: 14.0662746429
id: 1
t: 202
xxx after update is x: -3.29123592377
y: -60.3219337463
theta: 4.72956037521
speed: 14.0032491684
id: 1
t: 203
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48639999999999795]
222 self.state_dicts[msg.id][msg.t] is (-21.054513931274414, 3.211699962615967, 3.055720567703247, 14.066871643066406)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:204


xxx before update is x: -3.29123592377
y: -60.3219337463
theta: 4.72956037521
speed: 14.0032491684
id: 1
t: 203
xxx after update is x: -3.62513136864
y: -60.7690963745
theta: 4.69329738617
speed: 14.2211256027
id: 1
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 9.06666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 9.06666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '9.06666666667', 'Position': ['(-21.65803337097168', ' 3.441638708114624', ' 3.119086742401123)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,9.06666666667,(-21.65803337097168, 3.441638708114624, 3.119086742401123),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:205


xxx before update is x: -3.62513136864
y: -60.7690963745
theta: 4.69329738617
speed: 14.2211256027
id: 1
t: 204
xxx after update is x: -3.2346637249
y: -61.0250053406
theta: 4.71331977844
speed: 14.0717840195
id: 1
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4927999999999979]
222 self.state_dicts[msg.id][msg.t] is (-22.66012954711914, 2.8489444255828857, 2.9571707248687744, 14.022340774536133)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = Falh the n times spin:204

xxx before update is x: -21.0545139313
y: 3.21169996262
theta: 3.0557205677
speed: 14.0668716431
id: 0
t: 203
xxx after update is x: -21.658033371
y: 3.44163870811
theta: 3.1190867424
speed: 13.855714798
id: 0
t: 204
maneuver_negotiatir.py finish the update agent state from ros funtion

maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.06666666667






self.maneuver_requested left
RELEASE,0,9.06666666667,(-21.65803337097168, 3.441638708114624, 3.119086742401123),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 9.06666666667
self.communication_details == 0
sending RELEASE,0,9.06666666667,(-21.65803337097168, 3.441638708114624, 3.119086742401123),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:205


xxx before update is x: -21.658033371
y: 3.44163870811
theta: 3.1190867424
speed: 13.855714798
id: 0
t: 204
xxx after update is x: -22.6601295471
y: 2.84894442558
theta: 2.95717072487
speed: 14.0223407745
id: 0
t: 205
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.234663724899292, -61.02500534057617, 4.713319778442383, 14.071784019470215)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:206


xxx before update is x: -22.6601295471
y: 2.84894442558
theta: 2.95717072487
speed: 14.0223407745
id: 0
t: 205
xxx after update is x: -22.6605491638
y: 3.47421264648
theta: 3.18494105339
speed: 13.7801485062
id: 0
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:207


xxx before update is x: -22.6605491638
y: 3.47421264648
theta: 3.18494105339
speed: 13.7801485062
id: 0
t: 206
xxx after update is x: -23.1168117523
y: 3.7539536953
theta: 2.91145062447
speed: 13.7267827988
id: 0
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:208


xxx before update is x: -23.1168117523
y: 3.7539536953
theta: 2.91145062447
speed: 13.7267827988
id: 0
t: 207
xxx after update is x: -23.9683971405
y: 3.56801271439
theta: 3.14503073692
speed: 13.7798528671
id: 0
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1367602348327637, -63.537109375, 4.725070953369141, 14.029277801513672)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -23.9683971405
y: 3.56801271439
theta: 3.14503073692
speed: 13.7798528671
id: 0
t: 208
xxx after update is x: -24.2695446014
y: 2.52523779869
theta: 3.22882223129
speed: 13.7614545822
id: 0
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py updase
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:206


xxx before update is x: -3.2346637249
y: -61.0250053406
theta: 4.71331977844
speed: 14.0717840195
id: 1
t: 205
xxx after update is x: -3.16939616203
y: -62.0497322083
theta: 4.7075252533
speed: 13.7432413101
id: 1
t: 206
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:207


xxx before update is x: -3.16939616203
y: -62.0497322083
theta: 4.7075252533
speed: 13.7432413101
id: 1
t: 206
xxx after update is x: -3.4861536026
y: -62.7834663391
theta: 4.80227661133
speed: 13.8769855499
id: 1
t: 207
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (-23.116811752319336, 3.753953695297241, 2.9114506244659424, 13.72678279876709)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:208


xxx before update is x: -3.4861536026
y: -62.7834663391
theta: 4.80227661133
speed: 13.8769855499
id: 1
t: 207
xxx after update is x: -3.13676023483
y: -63.537109375
theta: 4.72507095337
speed: 14.0292778015
id: 1
t: 208
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:209


xxx before update is x: -3.13676023483
y: -63.537109375
theta: 4.72507095337
speed: 14.0292778015
id: 1
t: 208
xxx after update is x: -3.46786260605
y: -63.5144386292
theta: 4.76705789566
speed: 14.1503744125
id: 1
t: 209
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5103999999999982]
222 self.state_dicts[msg.id][msg.t] is (-24.26954460144043, 2.525237798690796, 3.2288222312927246, 13.761454582214355)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.28888888889






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -3.46786260605
y: -63.5144386292
theta: 4.76705789566
speed: 14.1503744125
id: 1
t: 209
xxx after update is x: -2.52202939987
y: -64.1175613403
theta: 4.71856546402
speed: 13.9522838593
id: 1
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:211


xxx before update is x: -2.52202939987
y: -64.1175613403
theta: 4.71856546402
speed: 13.9522838593
id: 1
t: 210
xxx after update is x: -3.20388531685
y: -64.9618682861
theta: 4.70619249344
speed: 13.914727211
id: 1
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5167999999999984]
222 self.state_dicts[msg.id][msg.t] is (-25.917991638183594, 3.11520te function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:210


xxx before update is x: -24.2695446014
y: 2.52523779869
theta: 3.22882223129
speed: 13.7614545822
id: 0
t: 209
xxx after update is x: -24.7231559753
y: 3.7579536438
theta: 3.14477300644
speed: 13.7870807648
id: 0
t: 210
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.522029399871826, -64.11756134033203, 4.718565464019775, 13.95228385925293)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:211


xxx before update is x: -24.7231559753
y: 3.7579536438
theta: 3.14477300644
speed: 13.7870807648
id: 0
t: 210
xxx after update is x: -25.9179916382
y: 3.11520671844
theta: 3.13901782036
speed: 13.896894455
id: 0
t: 211
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:212


xxx before update is x: -25.9179916382
y: 3.11520671844
theta: 3.13901782036
speed: 13.896894455
id: 0
t: 211
xxx after update is x: -26.2950000763
y: 3.18399620056
theta: 3.22223734856
speed: 13.9328384399
id: 0
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.42222222222






self.maneuver_requested left
RELEASE,0,9.42222222222,(-26.295000076293945, 3.1839962005615234, 3.2222373485565186),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 9.42222222222
self.communication_details == 0
sending RELEASE,0,9.42222222222,(-26.295000076293945, 3.1839962005615234, 3.2222373485565186),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -26.2950000763
y: 3.18399620056
theta: 3.22223734856
speed: 13.9328384399
id: 0
t: 212
xxx after update is x: -26.5351486206
y: 2.74704813957
theta: 3.13474392891
speed: 13.7899427414
id: 0
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1836347579956055, -65.94036865234375, 4.631943225860596, 13.927967071533203)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:214


xxx before update is x: -26.5351486206
y: 2.74704813957
theta: 3.13474392891
speed: 13.7899427414
id: 0
t: 213
xxx after update is x: -27.5291290283
y: 3.28991389275
theta: 3.28487300873
speed: 14.1014127731
id: 0
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:215


xxx before update is x: -27.5291290283
y: 3.28991389275
theta: 3.28487300873
speed: 14.1014127731
id: 0
t: 214
xxx after update is x: -28.5143432617
y: 3.38676786423
theta: 3.19646883011
spee6718444824, 3.1390178203582764, 13.896894454956055)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:212


xxx before update is x: -3.20388531685
y: -64.9618682861
theta: 4.70619249344
speed: 13.914727211
id: 1
t: 211
xxx after update is x: -2.47581624985
y: -65.6595611572
theta: 4.87967634201
speed: 13.8616771698
id: 1
t: 212
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 9.42222222222




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 9.42222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '9.42222222222', 'Position': ['(-26.295000076293945', ' 3.1839962005615234', ' 3.2222373485565186)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,9.42222222222,(-26.295000076293945, 3.1839962005615234, 3.2222373485565186),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (-26.295000076293945, 3.1839962005615234, 3.2222373485565186, 13.932838439941406)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:213


xxx before update is x: -2.47581624985
y: -65.6595611572
theta: 4.87967634201
speed: 13.8616771698
id: 1
t: 212
xxx after update is x: -3.183634758
y: -65.9403686523
theta: 4.63194322586
speed: 13.9279670715
id: 1
t: 213
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:214


xxx before update is x: -3.183634758
y: -65.9403686523
theta: 4.63194322586
speed: 13.9279670715
id: 1
t: 213
xxx after update is x: -2.74720168114
y: -66.7660064697
theta: 4.66095876694
speed: 13.849032402
id: 1
t: 214
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:215


xxx before update is x: -2.74720168114
y: -66.7660064697
theta: 4.66095876694
speed: 13.849032402
id: 1
t: 214
xxx after update is x: -3.21842908859
y: -67.3950805664
theta: 4.73863458633
speed: 13.8520545959
id: 1
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 0.481599999999998]
222 self.state_dicts[msg.id][msg.t] is (-28.51434326171875, 3.386767864227295, 3.1964688301086426, 14.020977020263672)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:216


xxx before update is x: -3.21842908859
y: -67.3950805664
theta: 4.73863458633
speed: 13.8520545959
id: 1
t: 215
xxx after update is x: -3.86430454254
y: -68.5021972656
theta: 4.62097406387
speed: 13.7791833878
id: 1
t: 216
maneuver_negotiatir.py finisd: 14.0209770203
id: 0
t: 215
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2184290885925293, -67.39508056640625, 4.7386345863342285, 13.852054595947266)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:216


xxx before update is x: -28.5143432617
y: 3.38676786423
theta: 3.19646883011
speed: 14.0209770203
id: 0
t: 215
xxx after update is x: -28.6967544556
y: 3.33151197433
theta: 3.22077608109
speed: 13.7229957581
id: 0
t: 216
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:217


xxx before update is x: -28.6967544556
y: 3.33151197433
theta: 3.22077608109
speed: 13.7229957581
id: 0
t: 216
xxx after update is x: -29.6281871796
y: 3.8540263176
theta: 3.20996332169
speed: 14.15097332
id: 0
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:218


xxx before update is x: -29.6281871796
y: 3.8540263176
theta: 3.20996332169
speed: 14.15097332
id: 0
t: 217
xxx after update is x: -29.5881557465
y: 3.73998785019
theta: 3.1899638176
speed: 14.2698478699
id: 0
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1128897666931152, -68.68345642089844, 4.506234169006348, 13.947824478149414)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -29.5881557465
y: 3.73998785019
theta: 3.1899638176
speed: 14.2698478699
id: 0
t: 218
xxx after update is x: -30.8049488068
y: 3.07228350639
theta: 3.05196690559
speed: 13.9737901688
id: 0
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.73333333333






self.maneuver_requested left
RELEASE,0,9.73333333333,(-30.804948806762695, 3.0722835063934326, 3.051966905593872),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 9.73333333333
self.communication_details == 0
sending RELEASE,0,9.73333333333,(-30.804948806762695, 3.0722835063934326, 3.051966905593872),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:220


xxx before update is x: -30.8049488068
y: 3.07228350639
theta: 3.05196690559
speed: 13.9737901688
id: 0
t: 219
xxx after update is x: -31.2753677368
y: 2.95288252831
theta: 3.27849006653
speed: 13.9751977921
id: 0
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.5831356048583984, -70.40249633789062, 4.687939167022705, 13.856606483459473)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call uh the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -3.86430454254
y: -68.5021972656
theta: 4.62097406387
speed: 13.7791833878
id: 1
t: 216
xxx after update is x: -2.9684920311
y: -68.350189209
theta: 4.74788331985
speed: 14.1228923798
id: 1
t: 217
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:217


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5183999999999984]
222 self.state_dicts[msg.id][msg.t] is (-29.62818717956543, 3.8540263175964355, 3.209963321685791, 14.150973320007324)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 9.64444444444






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:218


xxx before update is x: -2.9684920311
y: -68.350189209
theta: 4.74788331985
speed: 14.1228923798
id: 1
t: 217
xxx after update is x: -3.11288976669
y: -68.6834564209
theta: 4.50623416901
speed: 13.9478244781
id: 1
t: 218
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:219


xxx before update is x: -3.11288976669
y: -68.6834564209
theta: 4.50623416901
speed: 13.9478244781
id: 1
t: 218
xxx after update is x: -3.48014044762
y: -70.0149841309
theta: 4.61421537399
speed: 13.9825677872
id: 1
t: 219
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48319999999999796]
222 self.state_dicts[msg.id][msg.t] is (-30.804948806762695, 3.0722835063934326, 3.051966905593872, 13.973790168762207)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
current clock is 9.73333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 9.73333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '9.73333333333', 'Position': ['(-30.804948806762695', ' 3.0722835063934326', ' 3.051966905593872)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,9.73333333333,(-30.804948806762695, 3.0722835063934326, 3.051966905593872),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:220


xxx before update is x: -3.48014044762
y: -70.0149841309
theta: 4.61421537399
speed: 13.9825677872
id: 1
t: 219
xxx after update is x: -3.58313560486
y: -70.4024963379
theta: 4.68793916702
speed: 13.8566064835
id: 1
t: 220
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -3.58313560486
y: -70.4024963379
theta: 4.68793916702
speed: 13.8566064835
id: 1
t: 220
xxx after update is x: -3.04356122017
y: -71.3249511719
theta: 4.76190328598
speed: 13.9279565811
id: 1
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5087999999999981]
222 self.state_dicts[msg.id][msg.t] is (-31.78971290588379, 3.8796322345733643, 3.10146427154541, 14.35220718383789)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:222


xxx before update is x: -3.04356122017
y: -71.3249511719
theta: 4.76190328598
speed: 13.9279565811
id: 1
t: 221
xxx after update is x: -3.09936523438
y: -72.1322250366
theta: 4.68272972107
speed: 13.8847608566
id: 1
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -3.09936523438
y: -72.1322250366
theta: 4.68272972107
speed: 13.8847608566
id: 1
t: 222
xxx after update is x: -3.7996866703
y: -72.9575500488
theta: 4.89761161804
speed: 14.1817960739
id: 1
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-32.682273864746094, 3.663503408432007, 3.4209609031677246, 13.661946296691895)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:224


xxx before update is x: -3.7996866703
y: -72.9575500488
theta: 4.89761161804
speed: 14.1817960739
id: 1
t: 223
xxx after update is x: -3.24885296822
y: -72.6465682983
theta: 4.68332767487
speed: 13.7116689682
id: 1
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5167999999999984]
222 self.state_dicts[msg.id][msg.t] is (-33.714359283447266, 3.402151346206665, 3.1238722801208496, 13.69935417175293)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:225


xxx before update is x: -3.24885296822
y: -72.6465682983
theta: 4.68332767487
speed: 13.7116689682
id: 1
t: 224
xxx after update is x: -2.85304427147
y: -74.6732559204
theta: 4.53154659271
speed: 13.9253416061
id: 1
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.0






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:226


xxx before update is x: -2.85304427147
y: -74.6732559204
theta: 4.53154659271
speed: 13.9253416061
id: 1
t: 225
xxx after update is x: -2.59926581383
y: -74.4633865356
theta: 4.65048265457
speed: 14.1757974625
id: 1
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-34.932003021240234, 3.2406857013702393, 3.160487651824951, 13.98459243774414)
if we have all measpdate_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:221


xxx before update is x: -31.2753677368
y: 2.95288252831
theta: 3.27849006653
speed: 13.9751977921
id: 0
t: 220
xxx after update is x: -31.7897129059
y: 3.87963223457
theta: 3.10146427155
speed: 14.3522071838
id: 0
t: 221
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:222


xxx before update is x: -31.7897129059
y: 3.87963223457
theta: 3.10146427155
speed: 14.3522071838
id: 0
t: 221
xxx after update is x: -32.4871788025
y: 3.55021739006
theta: 3.22454333305
speed: 13.9281616211
id: 0
t: 222
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:223


xxx before update is x: -32.4871788025
y: 3.55021739006
theta: 3.22454333305
speed: 13.9281616211
id: 0
t: 222
xxx after update is x: -32.6822738647
y: 3.66350340843
theta: 3.42096090317
speed: 13.6619462967
id: 0
t: 223
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.7996866703033447, -72.95755004882812, 4.897611618041992, 14.181796073913574)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:224


xxx before update is x: -32.6822738647
y: 3.66350340843
theta: 3.42096090317
speed: 13.6619462967
id: 0
t: 223
xxx after update is x: -33.7143592834
y: 3.40215134621
theta: 3.12387228012
speed: 13.6993541718
id: 0
t: 224
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:225


xxx before update is x: -33.7143592834
y: 3.40215134621
theta: 3.12387228012
speed: 13.6993541718
id: 0
t: 224
xxx after update is x: -34.5371284485
y: 3.17201519012
theta: 3.1020116806
speed: 13.7533016205
id: 0
t: 225
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.853044271469116, -74.67325592041016, 4.531546592712402, 13.925341606140137)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:226


xxx before update is x: -34.5371284485
y: 3.17201519012
theta: 3.1020116806
speed: 13.7533016205
id: 0
t: 225
xxx after update is x: -34.9320030212
y: 3.24068570137
theta: 3.16048765182
speed: 13.9845924377
id: 0
t: 226
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -34.9320030212
y: 3.24068570137
theta: 3.16048765182
speed: 13.9845924377
id: 0
t: 226
xxx after update is x: -35.7904891968
y: 3.03529810905
theta: 3.11363506317
speed: 13.9660167694
id: 0
t:urements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:227


xxx before update is x: -2.59926581383
y: -74.4633865356
theta: 4.65048265457
speed: 14.1757974625
id: 1
t: 226
xxx after update is x: -3.28116178513
y: -74.9859161377
theta: 4.83618831635
speed: 13.8849420547
id: 1
t: 227
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 10.0888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 10.0888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '10.0888888889', 'Position': ['(-35.790489196777344', ' 3.0352981090545654', ' 3.1136350631713867)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,10.0888888889,(-35.790489196777344, 3.0352981090545654, 3.1136350631713867),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:228


xxx before update is x: -3.28116178513
y: -74.9859161377
theta: 4.83618831635
speed: 13.8849420547
id: 1
t: 227
xxx after update is x: -3.46295285225
y: -75.5539245605
theta: 4.67523765564
speed: 13.5721940994
id: 1
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -3.46295285225
y: -75.5539245605
theta: 4.67523765564
speed: 13.5721940994
id: 1
t: 228
xxx after update is x: -3.4258377552
y: -76.2527084351
theta: 4.79165506363
speed: 13.4494075775
id: 1
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.49919999999999787]
222 self.state_dicts[msg.id][msg.t] is (-37.126861572265625, 3.4645421504974365, 3.1036856174468994, 13.997116088867188)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -3.4258377552
y: -76.2527084351
theta: 4.79165506363
speed: 13.4494075775
id: 1
t: 229
xxx after update is x: -3.34380078316
y: -76.9829025269
theta: 4.7285618782
speed: 14.0028753281
id: 1
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:231


xxx before update is x: -3.34380078316
y: -76.9829025269
theta: 4.7285618782
speed: 14.0028753281
id: 1
t: 230
xxx after update is x: -2.77534484863
y: -77.35572052
theta: 4.75470161438
speed: 13.670791626
id: 1
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.49919999999999787]
222 self.state_dicts[msg.id][msg.t] is (-37.95634460449219, 3.7492728233337402, 3.0793960094451904, 14.273292541503906)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update fun 227
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.0888888889






self.maneuver_requested left
RELEASE,0,10.0888888889,(-35.790489196777344, 3.0352981090545654, 3.1136350631713867),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 10.0888888889
self.communication_details == 0
sending RELEASE,0,10.0888888889,(-35.790489196777344, 3.0352981090545654, 3.1136350631713867),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2811617851257324, -74.98591613769531, 4.836188316345215, 13.884942054748535)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:228


xxx before update is x: -35.7904891968
y: 3.03529810905
theta: 3.11363506317
speed: 13.9660167694
id: 0
t: 227
xxx after update is x: -35.9725265503
y: 3.16657567024
theta: 3.14043664932
speed: 13.8716154099
id: 0
t: 228
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:229


xxx before update is x: -35.9725265503
y: 3.16657567024
theta: 3.14043664932
speed: 13.8716154099
id: 0
t: 228
xxx after update is x: -37.1268615723
y: 3.4645421505
theta: 3.10368561745
speed: 13.9971160889
id: 0
t: 229
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.425837755203247, -76.2527084350586, 4.79165506362915, 13.449407577514648)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:230


xxx before update is x: -37.1268615723
y: 3.4645421505
theta: 3.10368561745
speed: 13.9971160889
id: 0
t: 229
xxx after update is x: -37.438495636
y: 3.26356959343
theta: 3.12458539009
speed: 13.5500545502
id: 0
t: 230
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:231


xxx before update is x: -37.438495636
y: 3.26356959343
theta: 3.12458539009
speed: 13.5500545502
id: 0
t: 230
xxx after update is x: -37.9563446045
y: 3.74927282333
theta: 3.07939600945
speed: 14.2732925415
id: 0
t: 231
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:232


xxx before update is x: -37.9563446045
y: 3.74927282333
theta: 3.07939600945
speed: 14.2732925415
id: 0
t: 231
xxx after update is x: -38.4643783569
y: 3.2553293705
theta: 3.26242828369
speed: 13.7310791016
id: 0
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2446136474609375, -78.00859069824219, 4.701411724090576, 13.912227630615234)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


gction
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:232


xxx before update is x: -2.77534484863
y: -77.35572052
theta: 4.75470161438
speed: 13.670791626
id: 1
t: 231
xxx after update is x: -3.24461364746
y: -78.0085906982
theta: 4.70141172409
speed: 13.9122276306
id: 1
t: 232
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -3.24461364746
y: -78.0085906982
theta: 4.70141172409
speed: 13.9122276306
id: 1
t: 232
xxx after update is x: -3.20888280869
y: -78.3898925781
theta: 4.74971580505
speed: 13.4069643021
id: 1
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion
risk is [0.0, 0.505599999999998]
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.3555555556
222 self.state_dicts[msg.id][msg.t] is (-39.518516540527344, 3.46140193939209, 3.326836585998535, 13.97584056854248)





self.maneuver_requested None

if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -3.20888280869
y: -78.3898925781
theta: 4.74971580505
speed: 13.4069643021
id: 1
t: 233
xxx after update is x: -3.26753115654
y: -79.3866271973
theta: 4.69609165192
speed: 13.9263725281
id: 1
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -3.26753115654
y: -79.3866271973
theta: 4.69609165192
speed: 13.9263725281
id: 1
t: 234
xxx after update is x: -2.8469684124
y: -79.6820144653
theta: 4.72942113876
speed: 13.7519235611
id: 1
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 10.4444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 10.4444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '10.4444444444', 'Position': ['(-39.970252990722656', ' 3.039072036743164', ' 2.9952869415283203)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,10.4444444444,(-39.970252990722656, 3.039072036743164, 2.9952869415283203),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5247999999999986]
222 self.state_dicts[msg.id][msg.t] is (-39.970252990722656, 3.039072036743164, 2.9952869415283203, 13.753408432006836)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:236


xxx before update is x: -2.8469684124
y: -79.6820144653
theta: 4.72942113876
speed: 13.7519235611
id: 1
t: 235
xxx after update is x: -3.29947495461
y: -80.5648193359
theta: 4.70117855072
speed: 13.7481384277
id: 1
t: 236
maneuver_negotiatir.py finish the updatoing to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:233


xxx before update is x: -38.4643783569
y: 3.2553293705
theta: 3.26242828369
speed: 13.7310791016
id: 0
t: 232
xxx after update is x: -39.5185165405
y: 3.46140193939
theta: 3.326836586
speed: 13.9758405685
id: 0
t: 233
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:234


xxx before update is x: -39.5185165405
y: 3.46140193939
theta: 3.326836586
speed: 13.9758405685
id: 0
t: 233
xxx after update is x: -40.2278594971
y: 3.4531545639
theta: 3.14302229881
speed: 13.6648540497
id: 0
t: 234
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.267531156539917, -79.38662719726562, 4.696091651916504, 13.926372528076172)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:235


xxx before update is x: -40.2278594971
y: 3.4531545639
theta: 3.14302229881
speed: 13.6648540497
id: 0
t: 234
xxx after update is x: -39.9702529907
y: 3.03907203674
theta: 2.99528694153
speed: 13.753408432
id: 0
t: 235
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.4444444444






self.maneuver_requested left
RELEASE,0,10.4444444444,(-39.970252990722656, 3.039072036743164, 2.9952869415283203),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 10.4444444444
self.communication_details == 0
sending RELEASE,0,10.4444444444,(-39.970252990722656, 3.039072036743164, 2.9952869415283203),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:236


xxx before update is x: -39.9702529907
y: 3.03907203674
theta: 2.99528694153
speed: 13.753408432
id: 0
t: 235
xxx after update is x: -40.4779586792
y: 3.40054917336
theta: 3.11504817009
speed: 13.7897205353
id: 0
t: 236
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -40.4779586792
y: 3.40054917336
theta: 3.11504817009
speed: 13.7897205353
id: 0
t: 236
xxx after update is x: -41.7205543518
y: 3.10559368134
theta: 3.34719729424
speed: 13.7199754715
id: 0
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3299832344055176, -81.4591293334961, 4.805169582366943, 13.813237190246582)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -41.7205543518
y: 3.10559368134
theta: 3.34719729424
speed: 13.7199754715
id: 0
t: 237
xxx after update is x: -42.2435340e agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:237


xxx before update is x: -3.29947495461
y: -80.5648193359
theta: 4.70117855072
speed: 13.7481384277
id: 1
t: 236
xxx after update is x: -3.32998323441
y: -81.4591293335
theta: 4.80516958237
speed: 13.8132371902
id: 1
t: 237
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5151999999999983]
222 self.state_dicts[msg.id][msg.t] is (-41.72055435180664, 3.105593681335449, 3.3471972942352295, 13.719975471496582)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:238


xxx before update is x: -3.32998323441
y: -81.4591293335
theta: 4.80516958237
speed: 13.8132371902
id: 1
t: 237
xxx after update is x: -3.91763520241
y: -81.6633682251
theta: 4.72727203369
speed: 13.9482450485
id: 1
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:239


xxx before update is x: -3.91763520241
y: -81.6633682251
theta: 4.72727203369
speed: 13.9482450485
id: 1
t: 238
xxx after update is x: -3.24593663216
y: -82.2446899414
theta: 4.67441177368
speed: 14.2732896805
id: 1
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (-43.542137145996094, 2.8255388736724854, 3.172056198120117, 13.743520736694336)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -3.24593663216
y: -82.2446899414
theta: 4.67441177368
speed: 14.2732896805
id: 1
t: 239
xxx after update is x: -3.12363886833
y: -83.6280822754
theta: 4.70840978622
speed: 13.8763713837
id: 1
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:240


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.6666666667






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:241


xxx before update is x: -3.12363886833
y: -83.6280822754
theta: 4.70840978622
speed: 13.8763713837
id: 1
t: 240
xxx after update is x: -3.61829304695
y: -83.5108337402
theta: 4.65831661224
speed: 13.8895950317
id: 1
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.45119999999999816]
222 self.state_dicts[msg.id][msg.t] is (-44.134315490722656, 3.476168632507324, 3.2413506507873535, 13.911519050598145)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -3.61829304695
y: -83.5108337402
theta: 4.65831661224
speed: 13.8895950881
y: 3.508644104
theta: 3.20696306229
speed: 14.107419014
id: 0
t: 238
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:239


xxx before update is x: -42.2435340881
y: 3.508644104
theta: 3.20696306229
speed: 14.107419014
id: 0
t: 238
xxx after update is x: -43.542137146
y: 2.82553887367
theta: 3.17205619812
speed: 13.7435207367
id: 0
t: 239
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:240


xxx before update is x: -43.542137146
y: 2.82553887367
theta: 3.17205619812
speed: 13.7435207367
id: 0
t: 239
xxx after update is x: -43.4121322632
y: 3.36584162712
theta: 3.26713109016
speed: 14.2581224442
id: 0
t: 240
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:241


xxx before update is x: -43.4121322632
y: 3.36584162712
theta: 3.26713109016
speed: 14.2581224442
id: 0
t: 240
xxx after update is x: -44.1343154907
y: 3.47616863251
theta: 3.24135065079
speed: 13.9115190506
id: 0
t: 241
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.618293046951294, -83.51083374023438, 4.658316612243652, 13.889595031738281)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:242


xxx before update is x: -44.1343154907
y: 3.47616863251
theta: 3.24135065079
speed: 13.9115190506
id: 0
t: 241
xxx after update is x: -44.8946685791
y: 3.5146791935
theta: 3.1279706955
speed: 14.1118412018
id: 0
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 10.7555555556






self.maneuver_requested left
RELEASE,0,10.7555555556,(-44.89466857910156, 3.514679193496704, 3.1279706954956055),14,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 10.7555555556
self.communication_details == 0
sending RELEASE,0,10.7555555556,(-44.89466857910156, 3.514679193496704, 3.1279706954956055),14,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:243


xxx before update is x: -44.8946685791
y: 3.5146791935
theta: 3.1279706955
speed: 14.1118412018
id: 0
t: 242
xxx after update is x: -45.6607055664
y: 3.29647254944
theta: 2.97895598412
speed: 13.8062496185
id: 0
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.7047526836395264, -85.15218353271484, 4.780278205871582, 13.947942733764648)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:244


317
id: 1
t: 241
xxx after update is x: -2.82998013496
y: -84.1169967651
theta: 4.77136564255
speed: 13.9084396362
id: 1
t: 242
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
Received -->>: 
current clock is 10.7555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 10.7555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '10.7555555556', 'Position': ['(-44.89466857910156', ' 3.514679193496704', ' 3.1279706954956055)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,10.7555555556,(-44.89466857910156, 3.514679193496704, 3.1279706954956055),14,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4927999999999979]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:243


xxx before update is x: -2.82998013496
y: -84.1169967651
theta: 4.77136564255
speed: 13.9084396362
id: 1
t: 242
xxx after update is x: -3.70475268364
y: -85.1521835327
theta: 4.78027820587
speed: 13.9479427338
id: 1
t: 243
maneuver_negotiatir.py finish the update agent state from ros funtion
222 self.state_dicts[msg.id][msg.t] is (-45.66070556640625, 3.2964725494384766, 2.9789559841156006, 13.806249618530273)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:244


xxx before update is x: -3.70475268364
y: -85.1521835327
theta: 4.78027820587
speed: 13.9479427338
id: 1
t: 243
xxx after update is x: -2.9301173687
y: -85.6863098145
theta: 4.72492361069
speed: 14.0531044006
id: 1
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -2.9301173687
y: -85.6863098145
theta: 4.72492361069
speed: 14.0531044006
id: 1
t: 244
xxx after update is x: -3.79611206055
y: -86.0115585327
theta: 4.6999502182
speed: 13.6698646545
id: 1
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:245


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.476799999999998]
222 self.state_dicts[msg.id][msg.t] is (-46.373077392578125, 3.1292736530303955, 3.1450397968292236, 14.159282684326172)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:246


xxx before update is x: -3.79611206055
y: -86.0115585327
theta: 4.6999502182
speed: 13.6698646545
id: 1
t: 245
xxx after update is x: -3.9090487957
y: -87.1473312378
theta: 4.71461296082
speed: 13.6449337006
id: 1
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -3.9090487957
y: -87.1473312378
theta: 4.71461296082
speed: 13.6449337006
id: 1
t: 246
xxx after update is x: -3.24324059486
y: -86.966583252
theta: 4.62134313583
speed: 13.7931127548
id: 1
t: 247
maneuver_negotiatir.xxx before update is x: -45.6607055664
y: 3.29647254944
theta: 2.97895598412
speed: 13.8062496185
id: 0
t: 243
xxx after update is x: -46.0987167358
y: 3.34830784798
theta: 3.24734020233
speed: 14.0687475204
id: 0
t: 244
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:245


xxx before update is x: -46.0987167358
y: 3.34830784798
theta: 3.24734020233
speed: 14.0687475204
id: 0
t: 244
xxx after update is x: -46.3730773926
y: 3.12927365303
theta: 3.14503979683
speed: 14.1592826843
id: 0
t: 245
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:246


xxx before update is x: -46.3730773926
y: 3.12927365303
theta: 3.14503979683
speed: 14.1592826843
id: 0
t: 245
xxx after update is x: -47.186126709
y: 3.29345059395
theta: 3.02234721184
speed: 14.1660385132
id: 0
t: 246
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.9090487957000732, -87.14733123779297, 4.71461296081543, 13.644933700561523)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:247


xxx before update is x: -47.186126709
y: 3.29345059395
theta: 3.02234721184
speed: 14.1660385132
id: 0
t: 246
xxx after update is x: -47.7571411133
y: 3.28152060509
theta: 3.10423064232
speed: 13.7778043747
id: 0
t: 247
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -47.7571411133
y: 3.28152060509
theta: 3.10423064232
speed: 13.7778043747
id: 0
t: 247
xxx after update is x: -48.9552230835
y: 3.25679540634
theta: 3.17348527908
speed: 13.9907007217
id: 0
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -48.9552230835
y: 3.25679540634
theta: 3.17348527908
speed: 13.9907007217
id: 0
t: 248
xxx after update is x: -48.8844680786
y: 3.64772677422
theta: 3.1450047493
speed: 13.9123344421
id: 0
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2202117443084717, -88.66313934326172, 4.542013168334961, 14.084298133850098)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:250


xxx before update is x: -48.8844680786
y: 3.64772677422
theta: 3.1450047493
speed: 13.9123344421
id: 0
t: 249
xxx after update is x: -50.50548172
y: 3.36424684525
theta: 3.10742998123
speed: 14.2282533646
id: 0
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.1111111111






self.maneuver_requested left
RELEASE,0,11.1111111111,(-50.505481719py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5103999999999982]
222 self.state_dicts[msg.id][msg.t] is (-47.75714111328125, 3.2815206050872803, 3.1042306423187256, 13.777804374694824)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:248


xxx before update is x: -3.24324059486
y: -86.966583252
theta: 4.62134313583
speed: 13.7931127548
id: 1
t: 247
xxx after update is x: -3.20412182808
y: -88.0059509277
theta: 4.73306512833
speed: 13.7754325867
id: 1
t: 248
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.0222222222






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:249


xxx before update is x: -3.20412182808
y: -88.0059509277
theta: 4.73306512833
speed: 13.7754325867
id: 1
t: 248
xxx after update is x: -3.22021174431
y: -88.6631393433
theta: 4.54201316833
speed: 14.0842981339
id: 1
t: 249
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5183999999999984]
222 self.state_dicts[msg.id][msg.t] is (-48.88446807861328, 3.6477267742156982, 3.1450047492980957, 13.912334442138672)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -3.22021174431
y: -88.6631393433
theta: 4.54201316833
speed: 14.0842981339
id: 1
t: 249
xxx after update is x: -3.35980606079
y: -88.7489547729
theta: 4.80232810974
speed: 13.8576793671
id: 1
t: 250
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:250


Received -->>: 
current clock is 11.1111111111




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 11.1111111111
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '11.1111111111', 'Position': ['(-50.5054817199707', ' 3.3642468452453613', ' 3.1074299812316895)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,11.1111111111,(-50.5054817199707, 3.3642468452453613, 3.1074299812316895),14,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:251


xxx before update is x: -3.35980606079
y: -88.7489547729
theta: 4.80232810974
speed: 13.8576793671
id: 1
t: 250
xxx after update is x: -3.47991347313
y: -89.4169158936
theta: 4.67696809769
speed: 14.0671358109
id: 1
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.502399999999998]
222 self.state_dicts[msg.id][msg.t] is (-50.192291259765625, 3.085855007171631, 3.16642689704895, 14.0252103805542)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
9707, 3.3642468452453613, 3.1074299812316895),14,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 11.1111111111
self.communication_details == 0
sending RELEASE,0,11.1111111111,(-50.5054817199707, 3.3642468452453613, 3.1074299812316895),14,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -50.50548172
y: 3.36424684525
theta: 3.10742998123
speed: 14.2282533646
id: 0
t: 250
xxx after update is x: -50.1922912598
y: 3.08585500717
theta: 3.16642689705
speed: 14.0252103806
id: 0
t: 251
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:251


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4799134731292725, -89.41691589355469, 4.676968097686768, 14.06713581085205)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:252


xxx before update is x: -50.1922912598
y: 3.08585500717
theta: 3.16642689705
speed: 14.0252103806
id: 0
t: 251
xxx after update is x: -51.1080665588
y: 2.78979539871
theta: 3.12478280067
speed: 13.8090629578
id: 0
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:253


xxx before update is x: -51.1080665588
y: 2.78979539871
theta: 3.12478280067
speed: 13.8090629578
id: 0
t: 252
xxx after update is x: -51.2630500793
y: 2.90156888962
theta: 3.34506845474
speed: 13.6738843918
id: 0
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:254


xxx before update is x: -51.2630500793
y: 2.90156888962
theta: 3.34506845474
speed: 13.6738843918
id: 0
t: 253
xxx after update is x: -52.6045074463
y: 3.24346995354
theta: 2.99580788612
speed: 13.9601583481
id: 0
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.716909408569336, -92.1052474975586, 4.754828453063965, 13.625470161437988)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:255


xxx before update is x: -52.6045074463
y: 3.24346995354
theta: 2.99580788612
speed: 13.9601583481
id: 0
t: 254
xxx after update is x: -52.4353599548
y: 3.53812098503
theta: 3.06069135666
speed: 13.8648719788
id: 0
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:256


xxx before update is x: -52.4353599548
y: 3.53812098503
theta: 3.06069135666
speed: 13.8648719788
id: 0
t: 255
xxx after update is x: -53.3352737427
y: 3.54053258896
theta: 3.04868102074
speed: 13.7330579758
id: 0
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -3.47991347313
y: -89.4169158936
theta: 4.67696809769
speed: 14.0671358109
id: 1
t: 251
xxx after update is x: -3.81818294525
y: -90.5180892944
theta: 4.50548601151
speed: 13.9157295227
id: 1
t: 252
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:252




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:253


xxx before update is x: -3.81818294525
y: -90.5180892944
theta: 4.50548601151
speed: 13.9157295227
id: 1
t: 252
xxx after update is x: -3.00568032265
y: -91.278793335
theta: 4.77368021011
speed: 13.802312851
id: 1
t: 253
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48639999999999795]
222 self.state_dicts[msg.id][msg.t] is (-51.2630500793457, 2.90156888961792, 3.3450684547424316, 13.673884391784668)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:254


xxx before update is x: -3.00568032265
y: -91.278793335
theta: 4.77368021011
speed: 13.802312851
id: 1
t: 253
xxx after update is x: -2.71690940857
y: -92.1052474976
theta: 4.75482845306
speed: 13.6254701614
id: 1
t: 254
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:255


xxx before update is x: -2.71690940857
y: -92.1052474976
theta: 4.75482845306
speed: 13.6254701614
id: 1
t: 254
xxx after update is x: -3.51531767845
y: -92.8247528076
theta: 4.6080827713
speed: 13.5615253448
id: 1
t: 255
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4927999999999979]
222 self.state_dicts[msg.id][msg.t] is (-52.435359954833984, 3.538120985031128, 3.0606913566589355, 13.864871978759766)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:256


xxx before update is x: -3.51531767845
y: -92.8247528076
theta: 4.6080827713
speed: 13.5615253448
id: 1
t: 255
xxx after update is x: -2.82238912582
y: -92.6391601562
theta: 4.64087438583
speed: 13.7891902924
id: 1
t: 256
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.3777777778






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:257


xxx before update is x: -2.82238912582
y: -92.6391601562
theta: 4.64087438583
speed: 13.7891902924
id: 1
t: 256
xxx after update is x: -3.1814994812
y: -93.7221603394
theta: 4.68909931183
speed: 14.1152639389
id: 1
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4639999999999981]
222 self.state_dicts[msg.id][msg.t] is (-53.700164794921875, 2.968862533569336, 3.4513280391693115, 13.991771697998047)
if we ha, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.8223891258239746, -92.63916015625, 4.64087438583374, 13.789190292358398)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:257


xxx before update is x: -53.3352737427
y: 3.54053258896
theta: 3.04868102074
speed: 13.7330579758
id: 0
t: 256
xxx after update is x: -53.7001647949
y: 2.96886253357
theta: 3.45132803917
speed: 13.991771698
id: 0
t: 257
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:258


xxx before update is x: -53.7001647949
y: 2.96886253357
theta: 3.45132803917
speed: 13.991771698
id: 0
t: 257
xxx after update is x: -54.406879425
y: 3.02960515022
theta: 2.9506444931
speed: 13.8065738678
id: 0
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.4666666667






self.maneuver_requested left
RELEASE,0,11.4666666667,(-54.40687942504883, 3.0296051502227783, 2.9506444931030273),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 11.4666666667
self.communication_details == 0
sending RELEASE,0,11.4666666667,(-54.40687942504883, 3.0296051502227783, 2.9506444931030273),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -54.406879425
y: 3.02960515022
theta: 2.9506444931
speed: 13.8065738678
id: 0
t: 258
xxx after update is x: -55.4380760193
y: 3.45718240738
theta: 3.10989356041
speed: 14.0050134659
id: 0
t: 259
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:259


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.9908294677734375, -94.81039428710938, 4.7180352210998535, 13.83614444732666)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:260


xxx before update is x: -55.4380760193
y: 3.45718240738
theta: 3.10989356041
speed: 14.0050134659
id: 0
t: 259
xxx after update is x: -56.2080192566
y: 3.04877924919
theta: 3.01638674736
speed: 13.6999807358
id: 0
t: 260
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:261


xxx before update is x: -56.2080192566
y: 3.04877924919
theta: 3.01638674736
speed: 13.6999807358
id: 0
t: 260
xxx after update is x: -56.4349632263
y: 3.26912069321
theta: 3.04787325859
speed: 14.2223072052
id: 0
t: 261
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:262


xxx before update is x: -56.4349632263
y: 3.26912069321
theta: 3.04787325859
speed: 14.2223072052
id: 0
t: 261
xxx after update is x: -57.1257171631
y: 3.528288ve all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:258


xxx before update is x: -3.1814994812
y: -93.7221603394
theta: 4.68909931183
speed: 14.1152639389
id: 1
t: 257
xxx after update is x: -3.48224639893
y: -94.4554748535
theta: 4.50134420395
speed: 13.719950676
id: 1
t: 258
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 11.4666666667




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 11.4666666667
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '11.4666666667', 'Position': ['(-54.40687942504883', ' 3.0296051502227783', ' 2.9506444931030273)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,11.4666666667,(-54.40687942504883, 3.0296051502227783, 2.9506444931030273),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -3.48224639893
y: -94.4554748535
theta: 4.50134420395
speed: 13.719950676
id: 1
t: 258
xxx after update is x: -2.99082946777
y: -94.8103942871
theta: 4.7180352211
speed: 13.8361444473
id: 1
t: 259
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:259


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:260


xxx before update is x: -2.99082946777
y: -94.8103942871
theta: 4.7180352211
speed: 13.8361444473
id: 1
t: 259
xxx after update is x: -3.57070040703
y: -95.7176437378
theta: 4.59817886353
speed: 13.9812088013
id: 1
t: 260
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48479999999999795]
222 self.state_dicts[msg.id][msg.t] is (-56.2080192565918, 3.048779249191284, 3.0163867473602295, 13.699980735778809)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:261


xxx before update is x: -3.57070040703
y: -95.7176437378
theta: 4.59817886353
speed: 13.9812088013
id: 1
t: 260
xxx after update is x: -3.1747033596
y: -96.0928955078
theta: 4.77874326706
speed: 13.8264474869
id: 1
t: 261
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4943999999999979]
222 self.state_dicts[msg.id][msg.t] is (-56.43496322631836, 3.269120693206787, 3.0478732585906982, 14.222307205200195)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:262


xxx before update is x: -3.1747033596
y: -96.0928955078
theta: 4.77874326706
speed: 13.8264474869
id: 1
t: 261
xxx after update is x: -3.32950878143
y: -97.0194244385
theta: 4.5908870697
speed: 13.9017496109
id: 1
t: 262
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:263


xxx before update is x: -3.32950878143
y: -97.0194244385
theta: 4.5908870697
speed: 13.9017496109
id: 1
t: 262
xxx after update is x: -3.46164941788
y: -96.90599823
theta: 4.98918151855
speed: 13.5583467484
id: 1
t: 263
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-57.75239181518555, 3.118708848953247, 3.067086935043335, 13.917989730834961)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.6888888889






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:264


xxx before update is x: -3.46164941788
y: -96.90599823
theta: 4.98918151855
speed: 13.5583467484
id: 1
t: 263
xxx after update is x: -2.92884993553
y: -98.399772644
theta: 4.39916658401
speed: 13.9468803406
id: 1
t: 264
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:265


xxx before update is x: -2.92884993553
y: -98.399772644
theta: 4.39916658401
speed: 13.9468803406
id: 1
t: 264
xxx after update is x: -3.05219745636
y: -98.525680542
theta: 4.78818416595
speed: 13.6797246933
id: 1
t: 265
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4975999999999979]
222 self.state_dicts[msg.id][msg.t] is (-59.612281799316406, 3.1820120811462402, 3.070014238357544, 13.950823783874512)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
xxx before update is x: -3.05219745636
y: -98.525680542
theta: 4.78818416595
speed: 13.6797246933
id: 1
t: 265
xxx after update is x: -3.06740021706
y: -99.1496429443
theta: 4.66069364548
speed: 14.1322755814
id: 1
t: 266
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 11.8222222222




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 11.8222222222
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '11.7777777778', 'Position': ['(-59.612281799316406', ' 3.1820120811462402', ' 3.070014238357544)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,11.7777777778,(-59.612281799316406, 3.1820120811462402, 3.070014238357544),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




leave the update function 
in spin function, finish the n times spin:266




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:267


xxx before update is x: -3.06740021706
y: -99.1496429443
theta: 4.66069364548
speed: 14.1322755814
id: 1
t: 266
xxx after update is x: -3.09215760231
y: -99.768371582
theta: 4.41804599762
speed: 14.0964374542
id: 1
t: 267
maneuver_negotiatir.py finish the updat84125
theta: 3.04236459732
speed: 13.878616333
id: 0
t: 262
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3295087814331055, -97.01942443847656, 4.590887069702148, 13.901749610900879)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:263


xxx before update is x: -57.1257171631
y: 3.52828884125
theta: 3.04236459732
speed: 13.878616333
id: 0
t: 262
xxx after update is x: -57.7523918152
y: 3.11870884895
theta: 3.06708693504
speed: 13.9179897308
id: 0
t: 263
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:264


xxx before update is x: -57.7523918152
y: 3.11870884895
theta: 3.06708693504
speed: 13.9179897308
id: 0
t: 263
xxx after update is x: -58.5665245056
y: 3.11622452736
theta: 3.09530735016
speed: 13.6927146912
id: 0
t: 264
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:265


xxx before update is x: -58.5665245056
y: 3.11622452736
theta: 3.09530735016
speed: 13.6927146912
id: 0
t: 264
xxx after update is x: -59.6122817993
y: 3.18201208115
theta: 3.07001423836
speed: 13.9508237839
id: 0
t: 265
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0521974563598633, -98.52568054199219, 4.78818416595459, 13.67972469329834)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 11.7777777778






self.maneuver_requested left
RELEASE,0,11.7777777778,(-59.612281799316406, 3.1820120811462402, 3.070014238357544),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 11.7777777778
self.communication_details == 0
sending RELEASE,0,11.7777777778,(-59.612281799316406, 3.1820120811462402, 3.070014238357544),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:266


xxx before update is x: -59.6122817993
y: 3.18201208115
theta: 3.07001423836
speed: 13.9508237839
id: 0
t: 265
xxx after update is x: -59.199180603
y: 3.25643754005
theta: 3.1262242794
speed: 13.6729478836
id: 0
t: 266
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:267


xxx before update is x: -59.199180603
y: 3.25643754005
theta: 3.1262242794
speed: 13.6729478836
id: 0
t: 266
xxx after update is x: -60.2026481628
y: 3.13840770721
theta: 3.2166466713
speed: 13.6876878738
id: 0
t: 267
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0921576023101807, -99.76837158203125, 4.418045997619629, 14.096437454223633)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:e agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.505599999999998]
222 self.state_dicts[msg.id][msg.t] is (-60.2026481628418, 3.1384077072143555, 3.216646671295166, 13.687687873840332)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:268


xxx before update is x: -3.09215760231
y: -99.768371582
theta: 4.41804599762
speed: 14.0964374542
id: 1
t: 267
xxx after update is x: -2.97723674774
y: -100.730751038
theta: 4.87427043915
speed: 13.8641138077
id: 1
t: 268
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:269


xxx before update is x: -2.97723674774
y: -100.730751038
theta: 4.87427043915
speed: 13.8641138077
id: 1
t: 268
xxx after update is x: -2.45667409897
y: -101.210418701
theta: 4.89740991592
speed: 13.9369249344
id: 1
t: 269
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5007999999999979]
222 self.state_dicts[msg.id][msg.t] is (-61.433128356933594, 3.5820157527923584, 3.101614475250244, 13.748604774475098)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:270


xxx before update is x: -2.45667409897
y: -101.210418701
theta: 4.89740991592
speed: 13.9369249344
id: 1
t: 269
xxx after update is x: -3.19398474693
y: -101.990692139
theta: 4.75345516205
speed: 13.9207239151
id: 1
t: 270
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:271


xxx before update is x: -3.19398474693
y: -101.990692139
theta: 4.75345516205
speed: 13.9207239151
id: 1
t: 270
xxx after update is x: -3.42926669121
y: -101.979232788
theta: 4.65488386154
speed: 13.8095808029
id: 1
t: 271
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.0444444444






self.maneuver_requested None
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5263999999999986]
222 self.state_dicts[msg.id][msg.t] is (-62.773033142089844, 3.5834262371063232, 3.2374701499938965, 14.0358247756958)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:272


xxx before update is x: -3.42926669121
y: -101.979232788
theta: 4.65488386154
speed: 13.8095808029
id: 1
t: 271
xxx after update is x: -3.37527894974
y: -102.887443542
theta: 4.65711688995
speed: 13.7298374176
id: 1
t: 272
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:273


xxx before update is x: -3.37527894974
y: -102.887443542
theta: 4.65711688995
speed: 13.7298374176
iFalse
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:268


xxx before update is x: -60.2026481628
y: 3.13840770721
theta: 3.2166466713
speed: 13.6876878738
id: 0
t: 267
xxx after update is x: -60.8150939941
y: 3.06976914406
theta: 3.30038189888
speed: 14.0173101425
id: 0
t: 268
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:269


xxx before update is x: -60.8150939941
y: 3.06976914406
theta: 3.30038189888
speed: 14.0173101425
id: 0
t: 268
xxx after update is x: -61.4331283569
y: 3.58201575279
theta: 3.10161447525
speed: 13.7486047745
id: 0
t: 269
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:270


xxx before update is x: -61.4331283569
y: 3.58201575279
theta: 3.10161447525
speed: 13.7486047745
id: 0
t: 269
xxx after update is x: -62.1739578247
y: 2.82362318039
theta: 3.23066115379
speed: 14.1003847122
id: 0
t: 270
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.1939847469329834, -101.99069213867188, 4.75345516204834, 13.920723915100098)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:271


xxx before update is x: -62.1739578247
y: 2.82362318039
theta: 3.23066115379
speed: 14.1003847122
id: 0
t: 270
xxx after update is x: -62.7730331421
y: 3.58342623711
theta: 3.23747014999
speed: 14.0358247757
id: 0
t: 271
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:272


xxx before update is x: -62.7730331421
y: 3.58342623711
theta: 3.23747014999
speed: 14.0358247757
id: 0
t: 271
xxx after update is x: -63.3536148071
y: 2.93146848679
theta: 3.11476349831
speed: 14.1374130249
id: 0
t: 272
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.375278949737549, -102.88744354248047, 4.657116889953613, 13.729837417602539)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:273


xxx before update is x: -63.3536148071
y: 2.93146848679
theta: 3.11476349831
speed: 14.1374130249
id: 0
t: 272
xxx after update is x: -63.6709289551
y: 3.28198266029
theta: 2.93532133102
speed: 14.3652944565
id: 0
t: 273
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.1333333333






self.maneuver_requested left
RELEASE,0,12.1333333333,(-63.670928955078125, 3.281982660293579, 2.93532133102417),14,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 12.1333333333
self.communication_details == 0
sending RELEASE,0,12.1333333333,(-63.670928955078125d: 1
t: 272
xxx after update is x: -3.81847834587
y: -103.812934875
theta: 4.86902570724
speed: 13.485455513
id: 1
t: 273
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.479999999999998]
222 self.state_dicts[msg.id][msg.t] is (-63.670928955078125, 3.281982660293579, 2.93532133102417, 14.365294456481934)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
current clock is 12.1333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 12.1333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '12.1333333333', 'Position': ['(-63.670928955078125', ' 3.281982660293579', ' 2.93532133102417)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,12.1333333333,(-63.670928955078125, 3.281982660293579, 2.93532133102417),14,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:274


xxx before update is x: -3.81847834587
y: -103.812934875
theta: 4.86902570724
speed: 13.485455513
id: 1
t: 273
xxx after update is x: -3.44725990295
y: -104.247520447
theta: 4.66020154953
speed: 14.0337753296
id: 1
t: 274
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:275


xxx before update is x: -3.44725990295
y: -104.247520447
theta: 4.66020154953
speed: 14.0337753296
id: 1
t: 274
xxx after update is x: -2.88810110092
y: -105.134918213
theta: 4.80114126205
speed: 13.5563831329
id: 1
t: 275
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:276


xxx before update is x: -2.88810110092
y: -105.134918213
theta: 4.80114126205
speed: 13.5563831329
id: 1
t: 275
xxx after update is x: -3.04372000694
y: -105.351547241
theta: 4.60821437836
speed: 14.0692996979
id: 1
t: 276
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5103999999999982]
222 self.state_dicts[msg.id][msg.t] is (-65.90215301513672, 3.120223045349121, 3.25331449508667, 13.603200912475586)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:277


xxx before update is x: -3.04372000694
y: -105.351547241
theta: 4.60821437836
speed: 14.0692996979
id: 1
t: 276
xxx after update is x: -3.41401386261
y: -105.97996521
theta: 4.63132619858
speed: 14.2044439316
id: 1
t: 277
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.537599999999999]
222 self.state_dicts[msg.id][msg.t] is (-66.32792663574219, 3.2685227394104004, 3.102947235107422, 14.089323043823242)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxx, 3.281982660293579, 2.93532133102417),14,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:274


xxx before update is x: -63.6709289551
y: 3.28198266029
theta: 2.93532133102
speed: 14.3652944565
id: 0
t: 273
xxx after update is x: -64.6675109863
y: 3.37253117561
theta: 3.08182668686
speed: 13.7077493668
id: 0
t: 274
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:275


xxx before update is x: -64.6675109863
y: 3.37253117561
theta: 3.08182668686
speed: 13.7077493668
id: 0
t: 274
xxx after update is x: -65.1344833374
y: 3.03513765335
theta: 3.0713596344
speed: 13.9021205902
id: 0
t: 275
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.888101100921631, -105.13491821289062, 4.801141262054443, 13.55638313293457)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -65.1344833374
y: 3.03513765335
theta: 3.0713596344
speed: 13.9021205902
id: 0
t: 275
xxx after update is x: -65.9021530151
y: 3.12022304535
theta: 3.25331449509
speed: 13.6032009125
id: 0
t: 276
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:276




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:277


xxx before update is x: -65.9021530151
y: 3.12022304535
theta: 3.25331449509
speed: 13.6032009125
id: 0
t: 276
xxx after update is x: -66.3279266357
y: 3.26852273941
theta: 3.10294723511
speed: 14.0893230438
id: 0
t: 277
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.4140138626098633, -105.97996520996094, 4.631326198577881, 14.20444393157959)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:278


xxx before update is x: -66.3279266357
y: 3.26852273941
theta: 3.10294723511
speed: 14.0893230438
id: 0
t: 277
xxx after update is x: -67.3461380005
y: 3.50329875946
theta: 3.2353386879
speed: 13.971364975
id: 0
t: 278
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:279


xxx before update is x: -67.3461380005
y: 3.50329875946
theta: 3.2353386879
speed: 13.971364975
id: 0
t: 278
xxx after update is x: -67.9253387451
y: 3.5091407299
theta: 3.2051782608
speed: 14.0758285522
id: 0
t: 279
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3749234676361084, -106.70654296875, 4.597267150878906, 13.973995208740234)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call updxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:278


xxx before update is x: -3.41401386261
y: -105.97996521
theta: 4.63132619858
speed: 14.2044439316
id: 1
t: 277
xxx after update is x: -3.51997280121
y: -106.925041199
theta: 4.72213172913
speed: 14.0506010056
id: 1
t: 278
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:279


xxx before update is x: -3.51997280121
y: -106.925041199
theta: 4.72213172913
speed: 14.0506010056
id: 1
t: 278
xxx after update is x: -3.37492346764
y: -106.706542969
theta: 4.59726715088
speed: 13.9739952087
id: 1
t: 279
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.4






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.479999999999998]
222 self.state_dicts[msg.id][msg.t] is (-67.92533874511719, 3.509140729904175, 3.2051782608032227, 14.075828552246094)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:280


xxx before update is x: -3.37492346764
y: -106.706542969
theta: 4.59726715088
speed: 13.9739952087
id: 1
t: 279
xxx after update is x: -3.59489202499
y: -107.132377625
theta: 4.86362600327
speed: 14.0421533585
id: 1
t: 280
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:281


xxx before update is x: -3.59489202499
y: -107.132377625
theta: 4.86362600327
speed: 14.0421533585
id: 1
t: 280
xxx after update is x: -3.31699776649
y: -108.350822449
theta: 4.65505218506
speed: 13.8977651596
id: 1
t: 281
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 12.4888888889




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 12.4888888889
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '12.4888888889', 'Position': ['(-68.9416275024414', ' 3.222846269607544', ' 3.163628101348877)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,12.4888888889,(-68.9416275024414, 3.222846269607544, 3.163628101348877),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:282


xxx before update is x: -3.31699776649
y: -108.350822449
theta: 4.65505218506
speed: 13.8977651596
id: 1
t: 281
xxx after update is x: -3.20953702927
y: -109.520637512
theta: 4.55714321136
speed: 13.8757095337
id: 1
t: 282
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5455999999999992]
222 self.state_dicts[msg.id][msg.t] is (-69.67305755615234, 3.855222702026367, 3.247293710708618, 14.022047996520996)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py upate_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:280


xxx before update is x: -67.9253387451
y: 3.5091407299
theta: 3.2051782608
speed: 14.0758285522
id: 0
t: 279
xxx after update is x: -68.0576553345
y: 3.48062610626
theta: 2.92292833328
speed: 13.791428566
id: 0
t: 280
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:281


xxx before update is x: -68.0576553345
y: 3.48062610626
theta: 2.92292833328
speed: 13.791428566
id: 0
t: 280
xxx after update is x: -68.9416275024
y: 3.22284626961
theta: 3.16362810135
speed: 13.9524440765
id: 0
t: 281
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.4888888889






self.maneuver_requested left
RELEASE,0,12.4888888889,(-68.9416275024414, 3.222846269607544, 3.163628101348877),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 12.4888888889
self.communication_details == 0
sending RELEASE,0,12.4888888889,(-68.9416275024414, 3.222846269607544, 3.163628101348877),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:282


xxx before update is x: -68.9416275024
y: 3.22284626961
theta: 3.16362810135
speed: 13.9524440765
id: 0
t: 281
xxx after update is x: -69.6730575562
y: 3.85522270203
theta: 3.24729371071
speed: 14.0220479965
id: 0
t: 282
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.2095370292663574, -109.52063751220703, 4.557143211364746, 13.875709533691406)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:283


xxx before update is x: -69.6730575562
y: 3.85522270203
theta: 3.24729371071
speed: 14.0220479965
id: 0
t: 282
xxx after update is x: -70.1172561646
y: 3.47113037109
theta: 3.08497333527
speed: 14.1098222733
id: 0
t: 283
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:284


xxx before update is x: -70.1172561646
y: 3.47113037109
theta: 3.08497333527
speed: 14.1098222733
id: 0
t: 283
xxx after update is x: -70.7075042725
y: 2.95001363754
theta: 3.38192844391
speed: 13.9046163559
id: 0
t: 284
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:285


xxx before update is x: -70.7075042725
y: 2.95001363754
theta: 3.38192844391
speed: 13.9046163559
id: 0
t: 284
xxx after update is x: -71.0764389038
y: 3.16153788567
theta: 3.03909373283
speed: 14.0326471329
id: 0
t: 285
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.0668745040893555, -110.8311996459961, 4.53date function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:283


xxx before update is x: -3.20953702927
y: -109.520637512
theta: 4.55714321136
speed: 13.8757095337
id: 1
t: 282
xxx after update is x: -2.97956418991
y: -109.417709351
theta: 4.66662454605
speed: 13.8236198425
id: 1
t: 283
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.47039999999999804]
222 self.state_dicts[msg.id][msg.t] is (-70.11725616455078, 3.47113037109375, 3.0849733352661133, 14.109822273254395)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:284


xxx before update is x: -2.97956418991
y: -109.417709351
theta: 4.66662454605
speed: 13.8236198425
id: 1
t: 283
xxx after update is x: -2.88583087921
y: -109.828765869
theta: 4.80445384979
speed: 14.0912799835
id: 1
t: 284
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:285


xxx before update is x: -2.88583087921
y: -109.828765869
theta: 4.80445384979
speed: 14.0912799835
id: 1
t: 284
xxx after update is x: -3.06687450409
y: -110.831199646
theta: 4.53883218765
speed: 13.8684740067
id: 1
t: 285
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.48479999999999795]
222 self.state_dicts[msg.id][msg.t] is (-71.0764389038086, 3.1615378856658936, 3.0390937328338623, 14.032647132873535)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:286


xxx before update is x: -3.06687450409
y: -110.831199646
theta: 4.53883218765
speed: 13.8684740067
id: 1
t: 285
xxx after update is x: -3.39397573471
y: -111.702346802
theta: 4.65072154999
speed: 13.9755439758
id: 1
t: 286
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.7111111111






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:287


xxx before update is x: -3.39397573471
y: -111.702346802
theta: 4.65072154999
speed: 13.9755439758
id: 1
t: 286
xxx after update is x: -3.1840159893
y: -112.250717163
theta: 4.77890396118
speed: 13.8544845581
id: 1
t: 287
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. sfinish
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (-72.80862426757812, 3.6509463787078857, 3.44960355758667, 14.12590217590332)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:288


xxx before update is x: -3.1840159893
y: -112.250717163
theta: 4.77890396118
speed: 13.8544845581
id: 1
t: 287
xxx after update is x: -2.93649697304
y: -112.722373962
theta: 4.7694835668832187652588, 13.868474006652832)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:286


xxx before update is x: -71.0764389038
y: 3.16153788567
theta: 3.03909373283
speed: 14.0326471329
id: 0
t: 285
xxx after update is x: -71.4049377441
y: 3.66922283173
theta: 2.97011065483
speed: 13.7590847015
id: 0
t: 286
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:287


xxx before update is x: -71.4049377441
y: 3.66922283173
theta: 2.97011065483
speed: 13.7590847015
id: 0
t: 286
xxx after update is x: -72.8086242676
y: 3.65094637871
theta: 3.44960355759
speed: 14.1259021759
id: 0
t: 287
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.184015989303589, -112.25071716308594, 4.778903961181641, 13.854484558105469)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:288


xxx before update is x: -72.8086242676
y: 3.65094637871
theta: 3.44960355759
speed: 14.1259021759
id: 0
t: 287
xxx after update is x: -73.9698181152
y: 3.30939531326
theta: 3.13172483444
speed: 14.1928272247
id: 0
t: 288
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:289


xxx before update is x: -73.9698181152
y: 3.30939531326
theta: 3.13172483444
speed: 14.1928272247
id: 0
t: 288
xxx after update is x: -74.286895752
y: 3.99479007721
theta: 3.22290205956
speed: 14.1904315948
id: 0
t: 289
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 12.8444444444






self.maneuver_requested left
RELEASE,0,12.8444444444,(-74.28689575195312, 3.9947900772094727, 3.2229020595550537),14,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 12.8444444444
self.communication_details == 0
sending RELEASE,0,12.8444444444,(-74.28689575195312, 3.9947900772094727, 3.2229020595550537),14,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:290


xxx before update is x: -74.286895752
y: 3.99479007721
theta: 3.22290205956
speed: 14.1904315948
id: 0
t: 289
xxx after update is x: -74.503112793
y: 2.73487687111
theta: 3.11053514481
speed: 14.29251194
id: 0
t: 290
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.88285756111145, -113.68538665771484, 4.666301727294922, 13.50995922088623)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function28
speed: 13.6839485168
id: 1
t: 288
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:289


xxx before update is x: -2.93649697304
y: -112.722373962
theta: 4.76948356628
speed: 13.6839485168
id: 1
t: 288
xxx after update is x: -3.69508361816
y: -112.883773804
theta: 4.75341367722
speed: 13.8302268982
id: 1
t: 289
maneuver_negotiatir.py finish the update agent state from ros funtion
Received -->>: 
current clock is 12.8444444444




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 12.8444444444
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '14', 'Sender': '0', 'TagID': '1', 'Time': '12.8444444444', 'Position': ['(-74.28689575195312', ' 3.9947900772094727', ' 3.2229020595550537)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,12.8444444444,(-74.28689575195312, 3.9947900772094727, 3.2229020595550537),14,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4911999999999979]
222 self.state_dicts[msg.id][msg.t] is (-74.28689575195312, 3.9947900772094727, 3.2229020595550537, 14.190431594848633)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:290


xxx before update is x: -3.69508361816
y: -112.883773804
theta: 4.75341367722
speed: 13.8302268982
id: 1
t: 289
xxx after update is x: -2.88285756111
y: -113.685386658
theta: 4.66630172729
speed: 13.5099592209
id: 1
t: 290
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:291


xxx before update is x: -2.88285756111
y: -113.685386658
theta: 4.66630172729
speed: 13.5099592209
id: 1
t: 290
xxx after update is x: -3.03197669983
y: -115.037307739
theta: 4.81029129028
speed: 14.0668334961
id: 1
t: 291
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5071999999999981]
222 self.state_dicts[msg.id][msg.t] is (-75.4319839477539, 3.9649646282196045, 3.034775733947754, 13.7510347366333)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:292


xxx before update is x: -3.03197669983
y: -115.037307739
theta: 4.81029129028
speed: 14.0668334961
id: 1
t: 291
xxx after update is x: -3.357401371
y: -115.265213013
theta: 4.80643081665
speed: 13.9886579514
id: 1
t: 292
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:293


xxx before update is x: -3.357401371
y: -115.265213013
theta: 4.80643081665
speed: 13.9886579514
id: 1
t: 292
xxx after update is x: -3.60224413872
y: -115.527870178
theta: 4.76244926453
speed: 13.8987159729
id: 1
t: 293
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight************, finish the n times spin:291

xxx before update is x: -74.503112793
y: 2.73487687111
theta: 3.11053514481
speed: 14.29251194
id: 0
t: 290
xxx after update is x: -75.4319839478
y: 3.96496462822
theta: 3.03477573395
speed: 13.7510347366
id: 0
t: 291
maneuver_negotiatir.py finish the update agent state from ros funtion



going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -75.4319839478
y: 3.96496462822
theta: 3.03477573395
speed: 13.7510347366
id: 0
t: 291
xxx after update is x: -76.1011886597
y: 2.91189312935
theta: 3.08621263504
speed: 13.9199008942
id: 0
t: 292
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:292


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.3574013710021973, -115.26521301269531, 4.806430816650391, 13.98865795135498)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:293


xxx before update is x: -76.1011886597
y: 2.91189312935
theta: 3.08621263504
speed: 13.9199008942
id: 0
t: 292
xxx after update is x: -76.2001113892
y: 3.05103063583
theta: 3.09281730652
speed: 13.6532535553
id: 0
t: 293
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:294


xxx before update is x: -76.2001113892
y: 3.05103063583
theta: 3.09281730652
speed: 13.6532535553
id: 0
t: 293
xxx after update is x: -77.5087966919
y: 3.29208898544
theta: 3.123960495
speed: 14.1050662994
id: 0
t: 294
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:295


xxx before update is x: -77.5087966919
y: 3.29208898544
theta: 3.123960495
speed: 14.1050662994
id: 0
t: 294
xxx after update is x: -77.3564834595
y: 2.79460406303
theta: 2.97516226768
speed: 14.0984859467
id: 0
t: 295
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -77.3564834595
y: 2.79460406303
theta: 2.97516226768
speed: 14.0984859467
id: 0
t: 295
xxx after update is x: -77.9822235107
y: 3.35712337494
theta: 3.19507622719
speed: 13.9656648636
id: 0
t: 296
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:296


aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-2.7200722694396973, -117.47945404052734, 4.76544713973999, 13.93641471862793)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.1555555556






self.maneuver_requested left
RELEASE,0,13.1555555556,(-77.98222351074219, 3.357123374938965, 3.1950762271881104),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 13.1555555556
self.communication_details == 0
sending RELEASE,0,13.1555555556,(-77.98222351074219, 3.357123374938965, 3.1950762271881104),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in**********maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.0222222222






self.maneuver_requested None


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:294




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:295




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:296


xxx before update is x: -3.60224413872
y: -115.527870178
theta: 4.76244926453
speed: 13.8987159729
id: 1
t: 293
xxx after update is x: -2.74348187447
y: -117.436157227
theta: 4.5958147049
speed: 13.9864530563
id: 1
t: 294
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -2.74348187447
y: -117.436157227
theta: 4.5958147049
speed: 13.9864530563
id: 1
t: 294
xxx after update is x: -3.63056278229
y: -117.104919434
theta: 4.70472574234
speed: 14.0516271591
id: 1
t: 295
maneuver_negotiatir.py finish the update agent state from ros funtion
xxx before update is x: -3.63056278229
y: -117.104919434
theta: 4.70472574234
speed: 14.0516271591
id: 1
t: 295
xxx after update is x: -2.72007226944
y: -117.479454041
theta: 4.76544713974
speed: 13.9364147186
id: 1
t: 296
maneuver_negotiatir.py finish the update agent state from ros funtion

maneuver_negotiatir.py in the try maneuver function update -. sfinish
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5295999999999987]
222 self.state_dicts[msg.id][msg.t] is (-77.98222351074219, 3.357123374938965, 3.1950762271881104, 13.965664863586426)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function
Received -->>: 
current clock is 13.1555555556




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.1555555556
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '13.1555555556', 'Position': ['(-77.98222351074219', ' 3.357123374938965', ' 3.1950762271881104)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,13.1555555556,(-77.98222351074219, 3.357123374938965, 3.1950762271881104),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:297


xxx before update is x: -2.72007226944
y: -117.479454041
theta: 4.76544713974
speed: 13.9364147186
id: 1
t: 296
xxx after update is x: -3.27339458466
y: -118.29447937
theta: 4.72507429123
speed: 13.7088346481
id: 1
t: 297
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:298


xxx before update is x: -3.27339458466
y: -118.29447937
theta: 4.72507429123
speed: 13.7088346481
id: 1
t: 297
xxx after update is x: -3.69745635986
y: -119.092498779
theta: 4.90682077408
speed: 14.0827884674
id: 1
t: 298
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.5776000000000001]
222 self.state_dicts[msg.id][msg.t] is (-79.76522827148438, 3.4872326850891113, 3.31752347946167, 13.910343170166016)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:297


xxx before update is x: -77.9822235107
y: 3.35712337494
theta: 3.19507622719
speed: 13.9656648636
id: 0
t: 296
xxx after update is x: -79.0289459229
y: 3.05574393272
theta: 3.05279874802
speed: 13.5107059479
id: 0
t: 297
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:298


xxx before update is x: -79.0289459229
y: 3.05574393272
theta: 3.05279874802
speed: 13.5107059479
id: 0
t: 297
xxx after update is x: -79.7652282715
y: 3.48723268509
theta: 3.31752347946
speed: 13.9103431702
id: 0
t: 298
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]
222 self.state_dicts[msg.id][msg.t] is (-3.6974563598632812, -119.09249877929688, 4.906820774078369, 14.082788467407227)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:299


xxx before update is x: -79.7652282715
y: 3.48723268509
theta: 3.31752347946
speed: 13.9103431702
id: 0
t: 298
xxx after update is x: -79.8338241577
y: 3.2323653698
theta: 3.13722491264
speed: 13.8741235733
id: 0
t: 299
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:300


xxx before update is x: -79.8338241577
y: 3.2323653698
theta: 3.13722491264
speed: 13.8741235733
id: 0
t: 299
xxx after update is x: -81.0545120239
y: 3.09770941734
theta: 3.15755319595
speed: 13.914689064
id: 0
t: 300
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:301


xxx before update is x: -81.0545120239
y: 3.09770941734
theta: 3.15755319595
speed: 13.914689064
id: 0
t: 300
xxx after update is x: -80.9498443604
y: 2.83911681175
theta: 3.09807419777
speed: 13.934876442
id: 0
t: 301
maneuver_negotiatir.py finish the update agent state from ros funtion
aaaaaa
risk is [0.0, 0.0]


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -80.9498443604
y: 2.83911681175
theta: 3.09807419777
speed: 13.934876442
id: 0
t: 301
xxx after update is x: -82.1189346313
y: 3.64818286896
theta: 3.22732424736
speed: 14.1469163895
id: 0
t: 302
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:302




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -82.1189346313
y: 3.64818286896
theta: 3.22732424736
speed: 14.1469163895
id: 0
t: 302
xxx after update is x: -82.6819534302
y: 2.86137914658
theta: 3.09978365898
speed: 14.0600337982
id: 0
t: 303
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:303




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -82.6819534302
y: 2.86137914658
theta: 3.09978365898
speed: 14.060033798_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:299


xxx before update is x: -3.69745635986
y: -119.092498779
theta: 4.90682077408
speed: 14.0827884674
id: 1
t: 298
xxx after update is x: -3.46007227898
y: -119.327934265
theta: 4.72834873199
speed: 13.7218437195
id: 1
t: 299
maneuver_negotiatir.py finish the update agent state from ros funtion
************normalize weight**********************
aaaaaa
aaaaaabbbbb
risk is [0.0, 0.502399999999998]
222 self.state_dicts[msg.id][msg.t] is (-79.83382415771484, 3.232365369796753, 3.1372249126434326, 13.874123573303223)
if we have all measurements for a certain time-stamp perform risk estimation
self.fm:False
 self.fm = False
call update_state function


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
(self.id == 1):
gooooooo
leave the update function 
in spin function, finish the n times spin:300


xxx before update is x: -3.46007227898
y: -119.327934265
theta: 4.72834873199
speed: 13.7218437195
id: 1
t: 299
xxx after update is x: -2.81177759171
y: -119.899108887
theta: 4.69624900818
speed: 13.5834369659
id: 1
t: 300
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:301


************normalize weight**********************


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:302


aaaaaa
aaaaaabbbbb
risk is [0.0, 0.4943999999999979]
222 self.state_dicts[msg.id][msg.t] is (-82.11893463134766, 3.6481828689575195, 3.2273242473602295, 14.146916389465332)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:303


222 self.state_dicts[msg.id][msg.t] is (-82.68195343017578, 2.8613791465759277, 3.0997836589813232, 14.060033798217773)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:304


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
222 self.state_dicts[msg.id][msg.t] is (-83.03659057617188, 3.2089998722076416, 3.19092059135437, 13.857553482055664)
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '13.5111111111', 'Position': ['(-83.03659057617188', ' 3.2089998722076416', ' 3.19092059135437)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,13.5111111111,(-83.03659057617188, 3.2089998722076416, 3.19092059135437),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:305


222 self.state_dicts[msg.id][msg.t] is (-83.66715240478516, 3.134517192840576, 3.0005404949188232, 13.567983627319336)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:306


222 self.state_dicts[msg.id][msg.t] is (-84.34941101074219, 3.492924690246582, 3.1573121547698975, 14.053221702575684)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:307


222 self.state_dicts[msg.id][msg.t] is (-85.57746124267578, 3.867532
id: 0
t: 303
xxx after update is x: -83.0365905762
y: 3.20899987221
theta: 3.19092059135
speed: 13.8575534821
id: 0
t: 304
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:304


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.5111111111






self.maneuver_requested left
RELEASE,0,13.5111111111,(-83.03659057617188, 3.2089998722076416, 3.19092059135437),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 13.5111111111
self.communication_details == 0
sending RELEASE,0,13.5111111111,(-83.03659057617188, 3.2089998722076416, 3.19092059135437),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -83.0365905762
y: 3.20899987221
theta: 3.19092059135
speed: 13.8575534821
id: 0
t: 304
xxx after update is x: -83.6671524048
y: 3.13451719284
theta: 3.00054049492
speed: 13.5679836273
id: 0
t: 305
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:305




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -83.6671524048
y: 3.13451719284
theta: 3.00054049492
speed: 13.5679836273
id: 0
t: 305
xxx after update is x: -84.3494110107
y: 3.49292469025
theta: 3.15731215477
speed: 14.0532217026
id: 0
t: 306
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:306




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -84.3494110107
y: 3.49292469025
theta: 3.15731215477
speed: 14.0532217026
id: 0
t: 306
xxx after update is x: -85.5774612427
y: 3.86753368378
theta: 3.17452168465
speed: 13.9877319336
id: 0
t: 307
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:307




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -85.5774612427
y: 3.86753368378
theta: 3.17452168465
speed: 13.9877319336
id: 0
t: 307
xxx after update is x: -85.3633346558
y: 3.09784007072
theta: 3.04551362991
speed: 13.589266777
id: 0
t: 308
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:308




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -85.3633346558
y: 3.09784007072
theta: 3.04551362991
speed: 13.589266777
id: 0
t: 308
xxx after update is x: -86.0344314575
y: 3.09572291374
theta: 3.18331885338
speed: 14.0367689133
id: 0
t: 309
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:309




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -86.0344314575
y: 3.09572291374
theta: 3.18331885338
speed: 14.0367689133
id: 0
t: 309
xxx after update is x: -87.2072525024
y: 3.11627674103
theta: 3.06550741196
speed: 13.8714885712
id: 0
t: 310
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:310




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -87.2072525024
y: 3.11627674103
theta: 3.06550741196
speed: 13.8714885712
id: 0
t: 310
xxx after update is x: -87.6232681274
y: 3.31211042404
theta: 3.10990071297
speed: 13.9477424622
id: 0
t: 311
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:311




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.8222222222






self.maneuver_requested left
RELEASE,0,13.8222222222,(-87.6232681274414, 3.312110424041748, 3.109900712966919),13,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 13.8222222222
self.communication_details == 0
sending RELEASE,0,13.8222222222,(-87.6232681274414, 3.312110424041748, 3.109900712966919),13,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
xxx before update is x: -87.6232681274
y: 3.31211042404
theta: 3.10990071297
speed: 13.9477424622
id: 0
t: 311
xxx after update is x: -87.9046096802
y: 2.95650625229
theta: 2.99721741676
speed: 13.7698755264
id: 0
t: 312
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:312


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -87.9046096802
y: 2.95650625229
theta: 2.99721741676
speed: 13.7698755264
id: 0
t: 312
xxx after update is x: -88.6481246948
y: 3.60741758347
theta: 3.04646515846
speed: 13.8288831711
id: 0
t: 313
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:313




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -88.6481246948
y: 3.60741758347
theta: 3.04646515846
speed: 13.8288831711
id: 0
t: 313
xxx after update is x: -88.7275161743
y: 3.2539100647
theta: 3.12882423401
speed: 13.5716438293
id: 0
t: 314
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:314




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -88.7275161743
y: 3.2539100647
theta: 3.12882423401
speed: 13.5716438293
id: 0
t: 314
xxx after update is x: -90.1023406982
y: 2.94134402275
theta: 3.12216162682
speed: 13.5507965088
id: 0
t: 315
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:315




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -90.1023406982
y: 2.94134402275
theta: 3.12216162682
speed: 13.5507965088
id: 0
t: 315
xxx after update is x: -90.5214767456
y: 2.94413232803
theta: 2.99243807793
speed: 13.0326137543
id: 0
t: 316
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:316




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -90.5214767456
y: 2.94413232803
theta: 2.99243807793
speed: 13.0326137543
id: 0
t: 316
xxx after update is x: -91.1058425903
y: 2.74504637718
theta: 3.01165509224
speed: 12.7404527664
id: 0
t: 317
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:317




going to the update function
sim.py in the sim.py update function 
ta36837768555, 3.1745216846466064, 13.98773193359375)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:308


222 self.state_dicts[msg.id][msg.t] is (-85.36333465576172, 3.0978400707244873, 3.04551362991333, 13.589266777038574)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:309


222 self.state_dicts[msg.id][msg.t] is (-86.03443145751953, 3.0957229137420654, 3.183318853378296, 14.036768913269043)
222 self.state_dicts[msg.id][msg.t] is (-87.2072525024414, 3.116276741027832, 3.065507411956787, 13.871488571166992)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:310


222 self.state_dicts[msg.id][msg.t] is (-87.6232681274414, 3.312110424041748, 3.109900712966919, 13.947742462158203)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:311


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:312


222 self.state_dicts[msg.id][msg.t] is (-87.90460968017578, 2.9565062522888184, 2.9972174167633057, 13.769875526428223)
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '13', 'Sender': '0', 'TagID': '1', 'Time': '13.8222222222', 'Position': ['(-87.6232681274414', ' 3.312110424041748', ' 3.109900712966919)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,13.8222222222,(-87.6232681274414, 3.312110424041748, 3.109900712966919),13,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:313


222 self.state_dicts[msg.id][msg.t] is (-88.64812469482422, 3.607417583465576, 3.0464651584625244, 13.828883171081543)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:314


222 self.state_dicts[msg.id][msg.t] is (-88.7275161743164, 3.2539100646972656, 3.128824234008789, 13.571643829345703)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:315


222 self.state_dicts[msg.id][msg.t] is (-90.10234069824219, 2.9413440227508545, 3.122161626815796, 13.550796508789062)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:316


222 self.state_dicts[msg.id][msg.t] is (-90.52147674560547, 2.9441323280334473, 2.9924380779266357, 13.032613754272461)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:317


222 self.state_dicts[msg.id][msg.t] is (-91.10584259033203, 2.745046377182007, 3.01165509223938, 12.740452766418457)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:318


222 self.state_dicts[msg.id][msg.t] is (-91.37541961669922, 3.1359100341796875, 3.2096924781799316, 12.636621475219727)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:319


222 self.state_dicts[msg.id][msg.t] is (-92.20912170410156, rgetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -91.1058425903
y: 2.74504637718
theta: 3.01165509224
speed: 12.7404527664
id: 0
t: 317
xxx after update is x: -91.3754196167
y: 3.13591003418
theta: 3.20969247818
speed: 12.6366214752
id: 0
t: 318
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:318




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -91.3754196167
y: 3.13591003418
theta: 3.20969247818
speed: 12.6366214752
id: 0
t: 318
xxx after update is x: -92.2091217041
y: 3.12288618088
theta: 3.17664718628
speed: 12.3456754684
id: 0
t: 319
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:319


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.1777777778






self.maneuver_requested left
RELEASE,0,14.1777777778,(-92.20912170410156, 3.1228861808776855, 3.176647186279297),12,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 14.1777777778
self.communication_details == 0
sending RELEASE,0,14.1777777778,(-92.20912170410156, 3.1228861808776855, 3.176647186279297),12,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -92.2091217041
y: 3.12288618088
theta: 3.17664718628
speed: 12.3456754684
id: 0
t: 319
xxx after update is x: -92.8156967163
y: 3.47968959808
theta: 3.26313066483
speed: 11.9790611267
id: 0
t: 320
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:320




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -92.8156967163
y: 3.47968959808
theta: 3.26313066483
speed: 11.9790611267
id: 0
t: 320
xxx after update is x: -93.2591171265
y: 3.33492517471
theta: 3.15814137459
speed: 11.436589241
id: 0
t: 321
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:321




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -93.2591171265
y: 3.33492517471
theta: 3.15814137459
speed: 11.436589241
id: 0
t: 321
xxx after update is x: -93.6469573975
y: 3.43502283096
theta: 3.17678165436
speed: 11.2316513062
id: 0
t: 322
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:322




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -93.6469573975
y: 3.43502283096
theta: 3.17678165436
speed: 11.2316513062
id: 0
t: 322
xxx after update is x: -94.5431442261
y: 3.55456900597
theta: 3.14115095139
speed: 11.3485174179
id: 0
t: 323
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:323




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -94.5431442261
y: 3.55456900597
theta: 3.14115095139
speed: 11.3485174179
id: 0
t: 323
xxx after update is x: -94.7551193237
y: 3.14722704887
theta: 3.08184552193
speed: 10.8378429413
id: 0
t: 324
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:324




going to the update funct3.1228861808776855, 3.176647186279297, 12.345675468444824)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '12', 'Sender': '0', 'TagID': '1', 'Time': '14.1777777778', 'Position': ['(-92.20912170410156', ' 3.1228861808776855', ' 3.176647186279297)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,14.1777777778,(-92.20912170410156, 3.1228861808776855, 3.176647186279297),12,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:320


222 self.state_dicts[msg.id][msg.t] is (-92.8156967163086, 3.479689598083496, 3.2631306648254395, 11.979061126708984)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:321


222 self.state_dicts[msg.id][msg.t] is (-93.25911712646484, 3.3349251747131348, 3.1581413745880127, 11.436589241027832)
222 self.state_dicts[msg.id][msg.t] is (-93.64695739746094, 3.4350228309631348, 3.17678165435791, 11.231651306152344)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:322


222 self.state_dicts[msg.id][msg.t] is (-94.54314422607422, 3.5545690059661865, 3.141150951385498, 11.348517417907715)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:323


222 self.state_dicts[msg.id][msg.t] is (-94.75511932373047, 3.1472270488739014, 3.08184552192688, 10.83784294128418)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:324


222 self.state_dicts[msg.id][msg.t] is (-95.46072387695312, 3.3740317821502686, 3.2005200386047363, 10.663814544677734)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:325




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:326


222 self.state_dicts[msg.id][msg.t] is (-95.6011734008789, 3.136542797088623, 3.084491014480591, 10.924256324768066)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-96.06485748291016, 3.257087230682373, 3.1345252990722656, 10.231908798217773)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:327


Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '10', 'Sender': '0', 'TagID': '1', 'Time': '14.5333333333', 'Position': ['(-96.06485748291016', ' 3.257087230682373', ' 3.1345252990722656)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,14.5333333333,(-96.06485748291016, 3.257087230682373, 3.1345252990722656),10,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update funion
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -94.7551193237
y: 3.14722704887
theta: 3.08184552193
speed: 10.8378429413
id: 0
t: 324
xxx after update is x: -95.460723877
y: 3.37403178215
theta: 3.2005200386
speed: 10.6638145447
id: 0
t: 325
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:325




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -95.460723877
y: 3.37403178215
theta: 3.2005200386
speed: 10.6638145447
id: 0
t: 325
xxx after update is x: -95.6011734009
y: 3.13654279709
theta: 3.08449101448
speed: 10.9242563248
id: 0
t: 326
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:326




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -95.6011734009
y: 3.13654279709
theta: 3.08449101448
speed: 10.9242563248
id: 0
t: 326
xxx after update is x: -96.0648574829
y: 3.25708723068
theta: 3.13452529907
speed: 10.2319087982
id: 0
t: 327
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:327


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.5333333333






self.maneuver_requested left
RELEASE,0,14.5333333333,(-96.06485748291016, 3.257087230682373, 3.1345252990722656),10,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 14.5333333333
self.communication_details == 0
sending RELEASE,0,14.5333333333,(-96.06485748291016, 3.257087230682373, 3.1345252990722656),10,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:328


xxx before update is x: -96.0648574829
y: 3.25708723068
theta: 3.13452529907
speed: 10.2319087982
id: 0
t: 327
xxx after update is x: -97.1726989746
y: 3.70416307449
theta: 3.20735120773
speed: 9.90812587738
id: 0
t: 328
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:329


xxx before update is x: -97.1726989746
y: 3.70416307449
theta: 3.20735120773
speed: 9.90812587738
id: 0
t: 328
xxx after update is x: -97.1361312866
y: 3.24476408958
theta: 3.13962554932
speed: 9.52762985229
id: 0
t: 329
maneuver_negotiatir.py finish the update agent state from ros funtion


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -97.1361312866
y: 3.24476408958
theta: 3.13962554932
speed: 9.52762985229
id: 0
t: 329
xxx after update is x: -97.3340454102
y: 3.55193400383
theta: 3.26504087448
speed: 8.87226200104
id: 0
t: 330
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:330




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -97.3340454102
y: 3.55193400383
theta: 3.26504087448
speed: 8.87226200104
id: 0
t: 330
xxx after update is x: -98.3206710815
y: 3.06229782104
theta: 3.03131246567
speed: 9.21920204163
id: 0
t: 331
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:331




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -98.3206710815
y: 3.06229782104
theta: 3.03131246567
speed: 9.21920204163
id: 0
t: 331
xxx after update is x: -98.4754257202
y: 3.34137654305
theta: 3.22989082336
speed: 8.94915008545
id: 0
t: 332
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:332




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -98.4754257202
y: 3.34137654305
theta: 3.22989082336
speed: 8.94915008545
id: 0
t: 332
xxx after update is x: -98.7353210449
y: 2.67844486237
theta: 3.07360291481
speed: 8.45016288757
id: 0
t: 333
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:333




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -98.7353210449
y: 2.67844486237
theta: 3.07360291481
speed: 8.45016288757
id: 0
t: 333
xxx after update is x: -98.7818603516
y: 3.54055309296
theta: 3.14845561981
speed: 8.20945453644
id: 0
t: 334
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:334


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 14.8444444444






self.maneuver_requested left
RELEASE,0,14.8444444444,(-98.7818603515625, 3.540553092956543, 3.1484556198120117),8,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 14.8444444444
self.communication_details == 0
sending RELEASE,0,14.8444444444,(-98.7818603515625, 3.540553092956543, 3.1484556198120117),8,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -98.7818603516
y: 3.54055309296
theta: 3.14845561981
speed: 8.20945453644
id: 0
t: 334
xxx after update is x: -98.9677505493
y: 4.02953958511
theta: 3.11150145531
speed: 7.7160153389
id: 0
t: 335
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:335




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -98.9677505493
y: 4.02953958511
theta: 3.11150145531
speed: 7.7160153389
id: 0
t: 335
xxx after update is x: -99.5894622803
y: 3.44770073891
theta: 3.11323571205
speed: 7.97656679153
id: 0
t: 336
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:336




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -99.5894622803
y: 3.44770073891
theta: 3.11323571205
speed: 7.97656679153
id: 0
t: 336
xxx after update is x: -99.6482086182
y: 3.23202109337
theta: 3.17614269257
speed: 7.23942518234
id: 0
t: 337
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:337




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -99.6482086182
y: 3.23202109337
theta: 3.17614269257
speed: 7.23942518234
id: 0
t: 337
xxx after update is x: -100.183479309
y: 3.13172888756
theta: 3.00546908379
speed: 6.87655496597
id: 0
t: 338
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:328


222 self.state_dicts[msg.id][msg.t] is (-97.17269897460938, 3.704163074493408, 3.2073512077331543, 9.908125877380371)
222 self.state_dicts[msg.id][msg.t] is (-97.1361312866211, 3.2447640895843506, 3.1396255493164062, 9.527629852294922)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:329




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:330


222 self.state_dicts[msg.id][msg.t] is (-97.33404541015625, 3.551934003829956, 3.265040874481201, 8.872262001037598)
222 self.state_dicts[msg.id][msg.t] is (-98.32067108154297, 3.062297821044922, 3.0313124656677246, 9.219202041625977)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:331


222 self.state_dicts[msg.id][msg.t] is (-98.47542572021484, 3.341376543045044, 3.229890823364258, 8.949150085449219)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:332


222 self.state_dicts[msg.id][msg.t] is (-98.73532104492188, 2.6784448623657227, 3.0736029148101807, 8.450162887573242)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:333


222 self.state_dicts[msg.id][msg.t] is (-98.7818603515625, 3.540553092956543, 3.1484556198120117, 8.209454536437988)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:334


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '8', 'Sender': '0', 'TagID': '1', 'Time': '14.8444444444', 'Position': ['(-98.7818603515625', ' 3.540553092956543', ' 3.1484556198120117)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,14.8444444444,(-98.7818603515625, 3.540553092956543, 3.1484556198120117),8,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




222 self.state_dicts[msg.id][msg.t] is (-98.9677505493164, 4.029539585113525, 3.111501455307007, 7.716015338897705)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:335




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:336


222 self.state_dicts[msg.id][msg.t] is (-99.58946228027344, 3.4477007389068604, 3.1132357120513916, 7.976566791534424)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:337


222 self.state_dicts[msg.id][msg.t] is (-99.64820861816406, 3.2320210933685303, 3.176142692565918, 7.239425182342529)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:338


222 self.state_dicts[msg.id][msg.t] is (-100.18347930908203, 3.1317288875579834, 3.0054690837860107, 6.8765549659729)
222 self.state_dicts[msg.id][msg.t] is (-100.74781799316406, 3.339785099029541, 3.0382425785064697, 6.9279398918151855)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:339




going to the update funcction 
in spin function, finish the n times spin:338




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -100.183479309
y: 3.13172888756
theta: 3.00546908379
speed: 6.87655496597
id: 0
t: 338
xxx after update is x: -100.747817993
y: 3.33978509903
theta: 3.03824257851
speed: 6.92793989182
id: 0
t: 339
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:339




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -100.747817993
y: 3.33978509903
theta: 3.03824257851
speed: 6.92793989182
id: 0
t: 339
xxx after update is x: -101.66217804
y: 3.61410355568
theta: 3.0298037529
speed: 6.78828668594
id: 0
t: 340
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:340




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -101.66217804
y: 3.61410355568
theta: 3.0298037529
speed: 6.78828668594
id: 0
t: 340
xxx after update is x: -101.361816406
y: 3.73474645615
theta: 3.26610183716
speed: 6.45231246948
id: 0
t: 341
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:341




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -101.361816406
y: 3.73474645615
theta: 3.26610183716
speed: 6.45231246948
id: 0
t: 341
xxx after update is x: -102.027206421
y: 2.72536897659
theta: 3.09566736221
speed: 6.30413722992
id: 0
t: 342
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:342


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 15.2






self.maneuver_requested left
RELEASE,0,15.2,(-102.02720642089844, 2.7253689765930176, 3.0956673622131348),6,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 15.2
self.communication_details == 0
sending RELEASE,0,15.2,(-102.02720642089844, 2.7253689765930176, 3.0956673622131348),6,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -102.027206421
y: 2.72536897659
theta: 3.09566736221
speed: 6.30413722992
id: 0
t: 342
xxx after update is x: -101.83506012
y: 2.94210290909
theta: 3.07902622223
speed: 6.03421163559
id: 0
t: 343
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:343




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -101.83506012
y: 2.94210290909
theta: 3.07902622223
speed: 6.03421163559
id: 0
t: 343
xxx after update is x: -102.330825806
y: 3.02054357529
theta: 3.07049775124
speed: 5.41220140457
id: 0
t: 344
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:344




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -102.330825806
y: 3.02054357529
theta: 3.07049775124
speed: 5.41220140457
id: 0
t: 344
xxx after update is x: -101.923210144
y: 3.44590592384
theta: 3.16941642761
speed: 5.68952512741
id: 0
t: 345
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the updation
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:340


222 self.state_dicts[msg.id][msg.t] is (-101.66217803955078, 3.6141035556793213, 3.02980375289917, 6.7882866859436035)
222 self.state_dicts[msg.id][msg.t] is (-101.36181640625, 3.7347464561462402, 3.266101837158203, 6.452312469482422)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:341


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:342


222 self.state_dicts[msg.id][msg.t] is (-102.02720642089844, 2.7253689765930176, 3.0956673622131348, 6.304137229919434)
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '6', 'Sender': '0', 'TagID': '1', 'Time': '15.2', 'Position': ['(-102.02720642089844', ' 2.7253689765930176', ' 3.0956673622131348)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,15.2,(-102.02720642089844, 2.7253689765930176, 3.0956673622131348),6,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:343


222 self.state_dicts[msg.id][msg.t] is (-101.8350601196289, 2.9421029090881348, 3.079026222229004, 6.0342116355896)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:344


222 self.state_dicts[msg.id][msg.t] is (-102.33082580566406, 3.0205435752868652, 3.070497751235962, 5.412201404571533)
222 self.state_dicts[msg.id][msg.t] is (-101.92321014404297, 3.445905923843384, 3.1694164276123047, 5.689525127410889)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:345




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:346


222 self.state_dicts[msg.id][msg.t] is (-103.11425018310547, 3.233048915863037, 3.0182735919952393, 5.125345230102539)
222 self.state_dicts[msg.id][msg.t] is (-102.88713073730469, 3.1773080825805664, 2.8937582969665527, 4.511570930480957)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:347




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:348


222 self.state_dicts[msg.id][msg.t] is (-102.72020721435547, 2.5094552040100098, 3.1277518272399902, 4.114434242248535)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:349


222 self.state_dicts[msg.id][msg.t] is (-102.91321563720703, 3.0189666748046875, 3.1615211963653564, 4.478391170501709)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTte function 
in spin function, finish the n times spin:345




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -101.923210144
y: 3.44590592384
theta: 3.16941642761
speed: 5.68952512741
id: 0
t: 345
xxx after update is x: -103.114250183
y: 3.23304891586
theta: 3.018273592
speed: 5.1253452301
id: 0
t: 346
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:346




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -103.114250183
y: 3.23304891586
theta: 3.018273592
speed: 5.1253452301
id: 0
t: 346
xxx after update is x: -102.887130737
y: 3.17730808258
theta: 2.89375829697
speed: 4.51157093048
id: 0
t: 347
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:347




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -102.887130737
y: 3.17730808258
theta: 2.89375829697
speed: 4.51157093048
id: 0
t: 347
xxx after update is x: -102.720207214
y: 2.50945520401
theta: 3.12775182724
speed: 4.11443424225
id: 0
t: 348
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:348




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -102.720207214
y: 2.50945520401
theta: 3.12775182724
speed: 4.11443424225
id: 0
t: 348
xxx after update is x: -102.913215637
y: 3.0189666748
theta: 3.16152119637
speed: 4.4783911705
id: 0
t: 349
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:349


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 15.5111111111






self.maneuver_requested left
RELEASE,0,15.5111111111,(-102.91321563720703, 3.0189666748046875, 3.1615211963653564),4,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 15.5111111111
self.communication_details == 0
sending RELEASE,0,15.5111111111,(-102.91321563720703, 3.0189666748046875, 3.1615211963653564),4,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -102.913215637
y: 3.0189666748
theta: 3.16152119637
speed: 4.4783911705
id: 0
t: 349
xxx after update is x: -103.796875
y: 3.16325473785
theta: 3.10692477226
speed: 4.18807268143
id: 0
t: 350
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:350




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -103.796875
y: 3.16325473785
theta: 3.10692477226
speed: 4.18807268143
id: 0
t: 350
xxx after update is x: -103.592071533
y: 2.50549793243
theta: 3.24050617218
speed: 3.69439601898
id: 0
t: 351
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:351




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -103.592071533
y: 2.50549793243
theta: 3.24050617218
speed: 3.69439601898
id: 0
t: 351
xxx after update is x: -103.703453064
y: 3.44238090515
theta: 3.1667702198
speed: 3.33366179466
id: 0
t: 352
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:352




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -103.703453064
y: 3.44238090515
theta: 3.1667702198
speed: 3.33366179466
id: 0
t: 352
xxx after update is x: -104.19670105
y: 3.46419000626
theta: 3.22162604332
speed: 3.38170838356
id: 0
t: 353
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:353




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.19670105
y: 3.46419000626
theta: 3.22162604332
speed: 3.38170838356
id: 0
t: 353
xxx after update is x: -104.039382935
y: 2.97097277641
theta: 3.11661434174
speed: 3.18611860275
id: 0
t: 354
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:354




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.039382935
y: 2.97097277641
theta: 3.11661434174
speed: 3.18611860275
id: 0
t: 354
xxx after update is x: -104.562850952
y: 3.49573922157
theta: 3.16125512123
speed: 2.63915228844
id: 0
t: 355
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:355




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.562850952
y: 3.49573922157
theta: 3.16125512123
speed: 2.63915228844
id: 0
t: 355
xxx after update is x: -104.296447754
y: 3.04440236092
theta: 3.07669711113
speed: 2.01281929016
id: 0
t: 356
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:356




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.296447754
y: 3.04440236092
theta: 3.07669711113
speed: 2.01281929016
id: 0
t: 356
xxx after update is x: -104.440567017
y: 2.95170879364
theta: 2.98810100555
speed: 2.04140138626
id: 0
t: 357
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:357


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 15.8666666667






self.maneuver_requested left
RELEASE,0,15.8666666667,(-104.44056701660156, 2.9517087936401367, 2.988101005554199),2,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 15.8666666667
self.communication_details == 0
sending RELEASE,0,15.8666666667,(-104.44056701660156, 2.9517087936401367, 2.988101005554199),2,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.440567017
y: 2.95170879364
theta: 2.98810100555
speed: 2.04140138626
id: 0
t: 357
xxx after update is x: -105.018501282
y: 3.28888607025
theta: 3.12175178528
speed: 1.81537687778
id: 0
t: 358
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:358




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.018501282
y: 3.28888607025
theta: 3.12175178528
speed: 1.81537687778
id: 0
t: 358
xxx after update is x: -104.552909851
y: 2.73665189743
theta: 3.10330104828
speed: 1.63737666607
id: 0
t: 359
maneuver_nime': '4', 'Sender': '0', 'TagID': '1', 'Time': '15.5111111111', 'Position': ['(-102.91321563720703', ' 3.0189666748046875', ' 3.1615211963653564)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,15.5111111111,(-102.91321563720703, 3.0189666748046875, 3.1615211963653564),4,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:350


222 self.state_dicts[msg.id][msg.t] is (-103.796875, 3.163254737854004, 3.1069247722625732, 4.188072681427002)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:351


222 self.state_dicts[msg.id][msg.t] is (-103.59207153320312, 2.505497932434082, 3.240506172180176, 3.6943960189819336)
222 self.state_dicts[msg.id][msg.t] is (-103.70345306396484, 3.442380905151367, 3.1667702198028564, 3.3336617946624756)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:352




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:353


222 self.state_dicts[msg.id][msg.t] is (-104.19670104980469, 3.4641900062561035, 3.221626043319702, 3.3817083835601807)
222 self.state_dicts[msg.id][msg.t] is (-104.03938293457031, 2.970972776412964, 3.11661434173584, 3.1861186027526855)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:354


222 self.state_dicts[msg.id][msg.t] is (-104.56285095214844, 3.495739221572876, 3.161255121231079, 2.6391522884368896)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:355


222 self.state_dicts[msg.id][msg.t] is (-104.29644775390625, 3.0444023609161377, 3.0766971111297607, 2.012819290161133)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:356


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:357


222 self.state_dicts[msg.id][msg.t] is (-104.44056701660156, 2.9517087936401367, 2.988101005554199, 2.0414013862609863)
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '2', 'Sender': '0', 'TagID': '1', 'Time': '15.8666666667', 'Position': ['(-104.44056701660156', ' 2.9517087936401367', ' 2.988101005554199)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,15.8666666667,(-104.44056701660156, 2.9517087936401367, 2.988101005554199),2,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:358


222 self.state_dicts[msg.id][msg.t] is (-105.01850128173828, 3.288886070251465, 3.1217517852783203, 1.815376877784729)
222 self.state_dicts[msg.id][msg.t] is (-104.55290985107422, 2.73665189743042, 3.1033010482788086, 1.6373766660690308)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:359


222 self.state_dicts[msg.id][msg.t] is (-104.62471008300781, 3.4358608722686768, 3.1888225078582764, 1.42304277egotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:359




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.552909851
y: 2.73665189743
theta: 3.10330104828
speed: 1.63737666607
id: 0
t: 359
xxx after update is x: -104.624710083
y: 3.43586087227
theta: 3.18882250786
speed: 1.4230427742
id: 0
t: 360
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:360




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.624710083
y: 3.43586087227
theta: 3.18882250786
speed: 1.4230427742
id: 0
t: 360
xxx after update is x: -105.324783325
y: 3.41376113892
theta: 3.23953652382
speed: 1.17881608009
id: 0
t: 361
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:361




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.324783325
y: 3.41376113892
theta: 3.23953652382
speed: 1.17881608009
id: 0
t: 361
xxx after update is x: -104.887969971
y: 3.25338315964
theta: 3.17166519165
speed: 0.614471495152
id: 0
t: 362
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:362




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.887969971
y: 3.25338315964
theta: 3.17166519165
speed: 0.614471495152
id: 0
t: 362
xxx after update is x: -105.189506531
y: 2.92419219017
theta: 3.07611584663
speed: 0.670318007469
id: 0
t: 363
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:363




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.189506531
y: 2.92419219017
theta: 3.07611584663
speed: 0.670318007469
id: 0
t: 363
xxx after update is x: -104.858764648
y: 3.56384301186
theta: 2.93232798576
speed: 0.642891347408
id: 0
t: 364
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:364


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 16.1777777778






self.maneuver_requested left
RELEASE,0,16.1777777778,(-104.8587646484375, 3.563843011856079, 2.93232798576355),0,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 16.1777777778
self.communication_details == 0
sending RELEASE,0,16.1777777778,(-104.8587646484375, 3.563843011856079, 2.93232798576355),0,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.858764648
y: 3.56384301186
theta: 2.93232798576
speed: 0.642891347408
id: 0
t: 364
xxx after update is x: -105.137283325
y: 3.32462263107
theta: 3.17412757874
speed: -0.00650046346709
id: 0
t: 365
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:365




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.137283325
y: 3.32462263107
theta: 3.17412757874
speed: -0.00650046346709
id: 0
t: 365
xxx after update is x: -104.821769714
y: 3.43651580811
theta: 3.265242004395)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:360




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:361


222 self.state_dicts[msg.id][msg.t] is (-105.32478332519531, 3.4137611389160156, 3.2395365238189697, 1.1788160800933838)
222 self.state_dicts[msg.id][msg.t] is (-104.88796997070312, 3.253383159637451, 3.1716651916503906, 0.6144714951515198)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:362




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:363


222 self.state_dicts[msg.id][msg.t] is (-105.18950653076172, 2.924192190170288, 3.076115846633911, 0.6703180074691772)
222 self.state_dicts[msg.id][msg.t] is (-104.8587646484375, 3.563843011856079, 2.93232798576355, 0.6428913474082947)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:364


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '16.1777777778', 'Position': ['(-104.8587646484375', ' 3.563843011856079', ' 2.93232798576355)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,16.1777777778,(-104.8587646484375, 3.563843011856079, 2.93232798576355),0,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:365


222 self.state_dicts[msg.id][msg.t] is (-105.13728332519531, 3.324622631072998, 3.1741275787353516, -0.006500463467091322)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:366


222 self.state_dicts[msg.id][msg.t] is (-104.82176971435547, 3.4365158081054688, 3.2652904987335205, -0.031071987003087997)
222 self.state_dicts[msg.id][msg.t] is (-104.4905776977539, 2.992450714111328, 3.3566741943359375, 0.13130806386470795)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:367


222 self.state_dicts[msg.id][msg.t] is (-104.9755630493164, 3.4389076232910156, 3.255375862121582, 0.2866668105125427)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:368




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:369


222 self.state_dicts[msg.id][msg.t] is (-104.81713104248047, 3.091007709503174, 3.2017316818237305, -0.06563623994588852)
222 self.state_dicts[msg.id][msg.t] is (-104.73079681396484, 3.2468926906585693, 3.122037172317505, -0.2414337396621704)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:370




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:371


222 self.state_dicts[msg.id][msg.t] is (-105.48309326171875, 2.7359440326690674, 2.9976656436920166, 0.395305871963501)
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock 9049873
speed: -0.0310719870031
id: 0
t: 366
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:366




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.821769714
y: 3.43651580811
theta: 3.26529049873
speed: -0.0310719870031
id: 0
t: 366
xxx after update is x: -104.490577698
y: 2.99245071411
theta: 3.35667419434
speed: 0.131308063865
id: 0
t: 367
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:367




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.490577698
y: 2.99245071411
theta: 3.35667419434
speed: 0.131308063865
id: 0
t: 367
xxx after update is x: -104.975563049
y: 3.43890762329
theta: 3.25537586212
speed: 0.286666810513
id: 0
t: 368
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:368




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.975563049
y: 3.43890762329
theta: 3.25537586212
speed: 0.286666810513
id: 0
t: 368
xxx after update is x: -104.817131042
y: 3.0910077095
theta: 3.20173168182
speed: -0.0656362399459
id: 0
t: 369
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:369




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.817131042
y: 3.0910077095
theta: 3.20173168182
speed: -0.0656362399459
id: 0
t: 369
xxx after update is x: -104.730796814
y: 3.24689269066
theta: 3.12203717232
speed: -0.241433739662
id: 0
t: 370
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:370




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.730796814
y: 3.24689269066
theta: 3.12203717232
speed: -0.241433739662
id: 0
t: 370
xxx after update is x: -105.483093262
y: 2.73594403267
theta: 2.99766564369
speed: 0.395305871964
id: 0
t: 371
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:371




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.483093262
y: 2.73594403267
theta: 2.99766564369
speed: 0.395305871964
id: 0
t: 371
xxx after update is x: -105.234153748
y: 3.8081600666
theta: 3.2762029171
speed: 0.253991246223
id: 0
t: 372
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:372


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 16.5333333333






self.maneuver_requested left
RELEASE,0,16.5333333333,(-105.2341537475586, 3.8081600666046143, 3.276202917098999),0,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 16.5333333333
self.communication_details == 0
sending RELEASE,0,16.5333333333,(-105.2341537475586, 3.8081600666046143, 3.276202917098999),0,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.234153748
y: 3.8081600666
theta: 3.2762029171
speed: 0.253991246223
id: 0
t: 372
xxx after update is x: -105.272247314
y: 3.26563334465
theta: 3.18197917938
speed: 0.079786375165
id: 0
t: 373
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:373




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.272247314
y: 3.26563334465
theta: 3.18197917938
speed: 0.079786375165
id: 0
t: 373
xxx after update is x: -105.117179871
y: 3.44142866135
theta: 3.16078782082
speed: -0.100319713354
id: 0
t: 374
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:374




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.117179871
y: 3.44142866135
theta: 3.16078782082
speed: -0.100319713354
id: 0
t: 374
xxx after update is x: -104.865005493
y: 3.03677392006
theta: 3.01522779465
speed: -0.254375994205
id: 0
t: 375
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:375




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.865005493
y: 3.03677392006
theta: 3.01522779465
speed: -0.254375994205
id: 0
t: 375
xxx after update is x: -104.712127686
y: 3.21586894989
theta: 3.29324626923
speed: 0.0846804305911
id: 0
t: 376
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:376




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.712127686
y: 3.21586894989
theta: 3.29324626923
speed: 0.0846804305911
id: 0
t: 376
xxx after update is x: -104.923149109
y: 2.83031582832
theta: 3.0923948288
speed: -0.122335039079
id: 0
t: 377
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:377




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.923149109
y: 2.83031582832
theta: 3.0923948288
speed: -0.122335039079
id: 0
t: 377
xxx after update is x: -104.635818481
y: 2.77128052711
theta: 3.23030138016
speed: -0.145134180784
id: 0
t: 378
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:378




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.635818481
y: 2.77128052711
theta: 3.23030138016
speed: -0.145134180784
id: 0
t: 378
xxx after update is x: -104.793823242
y: 3.37069225311
theta: 3.27060770988
speed: -0.0928490683436
id: 0
t: 379
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:379


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 16.8444444444






self.maneuver_requested left
RELEASE,0,16.8444444444,(-104.7938232421875, 3.370692253112793, 3.2706077098846436),0,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 16.8444444444
self.communication_details == 0
sending RELEASE,0,16.8444444444,(-104.7938232421875, 3.370692253112793, 3.2706077098846436),0,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
tais 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:372


222 self.state_dicts[msg.id][msg.t] is (-105.2341537475586, 3.8081600666046143, 3.276202917098999, 0.2539912462234497)
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '16.5333333333', 'Position': ['(-105.2341537475586', ' 3.8081600666046143', ' 3.276202917098999)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,16.5333333333,(-105.2341537475586, 3.8081600666046143, 3.276202917098999),0,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:373


222 self.state_dicts[msg.id][msg.t] is (-105.27224731445312, 3.2656333446502686, 3.181979179382324, 0.07978637516498566)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:374


222 self.state_dicts[msg.id][msg.t] is (-105.11717987060547, 3.4414286613464355, 3.16078782081604, -0.10031971335411072)
222 self.state_dicts[msg.id][msg.t] is (-104.86500549316406, 3.036773920059204, 3.015227794647217, -0.25437599420547485)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:375


222 self.state_dicts[msg.id][msg.t] is (-104.71212768554688, 3.2158689498901367, 3.293246269226074, 0.08468043059110641)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:376


222 self.state_dicts[msg.id][msg.t] is (-104.92314910888672, 2.8303158283233643, 3.0923948287963867, -0.1223350390791893)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:377




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:378


222 self.state_dicts[msg.id][msg.t] is (-104.63581848144531, 2.771280527114868, 3.2303013801574707, -0.14513418078422546)
222 self.state_dicts[msg.id][msg.t] is (-104.7938232421875, 3.370692253112793, 3.2706077098846436, -0.09284906834363937)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:379


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '16.8444444444', 'Position': ['(-104.7938232421875', ' 3.370692253112793', ' 3.2706077098846436)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,16.8444444444,(-104.7938232421875, 3.370692253112793, 3.2706077098846436),0,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:380


222 sergetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.793823242
y: 3.37069225311
theta: 3.27060770988
speed: -0.0928490683436
id: 0
t: 379
xxx after update is x: -105.001556396
y: 3.25559329987
theta: 3.25776100159
speed: 0.116131357849
id: 0
t: 380
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:380




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.001556396
y: 3.25559329987
theta: 3.25776100159
speed: 0.116131357849
id: 0
t: 380
xxx after update is x: -105.192558289
y: 3.72242450714
theta: 3.36110305786
speed: -0.236393809319
id: 0
t: 381
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:381




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.192558289
y: 3.72242450714
theta: 3.36110305786
speed: -0.236393809319
id: 0
t: 381
xxx after update is x: -105.246109009
y: 2.89893698692
theta: 3.03201031685
speed: 0.148849844933
id: 0
t: 382
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:382




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.246109009
y: 2.89893698692
theta: 3.03201031685
speed: 0.148849844933
id: 0
t: 382
xxx after update is x: -104.839935303
y: 3.40888237953
theta: 3.17233252525
speed: 0.172762125731
id: 0
t: 383
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:383




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.839935303
y: 3.40888237953
theta: 3.17233252525
speed: 0.172762125731
id: 0
t: 383
xxx after update is x: -104.773849487
y: 3.27928161621
theta: 3.04683279991
speed: 0.0962747186422
id: 0
t: 384
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:384




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.773849487
y: 3.27928161621
theta: 3.04683279991
speed: 0.0962747186422
id: 0
t: 384
xxx after update is x: -105.079399109
y: 3.24396896362
theta: 3.11202859879
speed: 0.488208353519
id: 0
t: 385
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:385




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.079399109
y: 3.24396896362
theta: 3.11202859879
speed: 0.488208353519
id: 0
t: 385
xxx after update is x: -104.644790649
y: 3.36669635773
theta: 3.10737586021
speed: 0.139035344124
id: 0
t: 386
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:386




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.644790649
y: 3.36669635773
theta: 3.10737586021
speed: 0.139035344124
id: 0
t: 386
xxx after update is x: -105.251930237
y: 3.05635809898
theta: 3.16828083992
speed: -0.0384549833834
id: 0
t: 387
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:387


maneuver_negotiatir.py in the try maneulf.state_dicts[msg.id][msg.t] is (-105.00155639648438, 3.2555932998657227, 3.257761001586914, 0.11613135784864426)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:381


222 self.state_dicts[msg.id][msg.t] is (-105.19255828857422, 3.7224245071411133, 3.361103057861328, -0.23639380931854248)
222 self.state_dicts[msg.id][msg.t] is (-105.24610900878906, 2.8989369869232178, 3.032010316848755, 0.14884984493255615)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:382


222 self.state_dicts[msg.id][msg.t] is (-104.83993530273438, 3.4088823795318604, 3.172332525253296, 0.17276212573051453)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:383


222 self.state_dicts[msg.id][msg.t] is (-104.77384948730469, 3.2792816162109375, 3.046832799911499, 0.0962747186422348)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:384




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:385


222 self.state_dicts[msg.id][msg.t] is (-105.07939910888672, 3.243968963623047, 3.1120285987854004, 0.4882083535194397)
222 self.state_dicts[msg.id][msg.t] is (-104.64479064941406, 3.366696357727051, 3.1073758602142334, 0.13903534412384033)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:386


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:387


222 self.state_dicts[msg.id][msg.t] is (-105.2519302368164, 3.0563580989837646, 3.168280839920044, -0.03845498338341713)
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '17.2', 'Position': ['(-105.2519302368164', ' 3.0563580989837646', ' 3.168280839920044)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,17.2,(-105.2519302368164, 3.0563580989837646, 3.168280839920044),0,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




222 self.state_dicts[msg.id][msg.t] is (-105.23794555664062, 3.593564987182617, 3.121363401412964, 0.2936077117919922)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:388




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:389


222 self.state_dicts[msg.id][msg.t] is (-105.18314361572266, 2.6629762649536133, 3.0038952827453613, -0.0476289838552475)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:390


222 self.state_dicts[msg.id][msg.t] is (-105.04683685302734, 3.4786880016326904, 3.1319406032562256, -0.16270916163921356)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:391


222 self.state_dicts[msg.id][msg.t] is (-105.26010131835938, 3.5122547149658203, 3.250483512878418, -0.0745275542140007)
222 self.state_dicts[msg.id][msg.t] is (-105.2320556640625, 3.571819543838501, 3.2317638397216797, -0.2085973024368286)


going tover function update -. strat
current clock is 17.2






self.maneuver_requested left
RELEASE,0,17.2,(-105.2519302368164, 3.0563580989837646, 3.168280839920044),0,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 17.2
self.communication_details == 0
sending RELEASE,0,17.2,(-105.2519302368164, 3.0563580989837646, 3.168280839920044),0,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.251930237
y: 3.05635809898
theta: 3.16828083992
speed: -0.0384549833834
id: 0
t: 387
xxx after update is x: -105.237945557
y: 3.59356498718
theta: 3.12136340141
speed: 0.293607711792
id: 0
t: 388
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:388




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.237945557
y: 3.59356498718
theta: 3.12136340141
speed: 0.293607711792
id: 0
t: 388
xxx after update is x: -105.183143616
y: 2.66297626495
theta: 3.00389528275
speed: -0.0476289838552
id: 0
t: 389
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:389




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.183143616
y: 2.66297626495
theta: 3.00389528275
speed: -0.0476289838552
id: 0
t: 389
xxx after update is x: -105.046836853
y: 3.47868800163
theta: 3.13194060326
speed: -0.162709161639
id: 0
t: 390
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:390




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.046836853
y: 3.47868800163
theta: 3.13194060326
speed: -0.162709161639
id: 0
t: 390
xxx after update is x: -105.260101318
y: 3.51225471497
theta: 3.25048351288
speed: -0.074527554214
id: 0
t: 391
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:391




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.260101318
y: 3.51225471497
theta: 3.25048351288
speed: -0.074527554214
id: 0
t: 391
xxx after update is x: -105.232055664
y: 3.57181954384
theta: 3.23176383972
speed: -0.208597302437
id: 0
t: 392
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:392




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.232055664
y: 3.57181954384
theta: 3.23176383972
speed: -0.208597302437
id: 0
t: 392
xxx after update is x: -105.291000366
y: 3.1798043251
theta: 3.02071452141
speed: 0.0465534105897
id: 0
t: 393
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:393




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.291000366
y: 3.1798043251
theta: 3.02071452141
speed: 0.0465534105897
id: 0
t: 393
xxx after update is x: -104.739395142
y: 3.20921349525
theta: 3.24822711945
speed: 0.00766369793564
id: 0
t: 394
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:394


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 17.5111111111






self.maneuver_requested left
RELEASE,0,17.5111111111,(-104.73939514160156, 3.2092134952545166, 3.248227119445801),0,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 17.5111111111
self.communication_details == 0
sending RELEASE,0,17.5111111111,(-104.73939514160156, 3.2092134952545166, 3.248227119445801),0,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.739395142
y: 3.20921349525
theta: 3.24822711945
speed: 0.00766369793564
id: 0
t: 394
xxx after update is x: -104.767181396
y: 3.36532902718
theta: 3.11107492447
speed: -0.329038888216
id: 0
t: 395
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:395


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.767181396
y: 3.36532902718
theta: 3.11107492447
speed: -0.329038888216
id: 0
t: 395
xxx after update is x: -104.950134277
y: 3.37667393684
theta: 3.15689754486
speed: 0.0905245020986
id: 0
t: 396
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:396




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.950134277
y: 3.37667393684
theta: 3.15689754486
speed: 0.0905245020986
id: 0
t: 396
xxx after update is x: -104.900276184
y: 3.03227591515
theta: 3.17911744118
speed: -0.0452958568931
id: 0
t: 397
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:397




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.900276184
y: 3.03227591515
theta: 3.17911744118
speed: -0.0452958568931
id: 0
t: 397
xxx after update is x: -105.192726135
y: 3.52686333656
theta: 3.28952860832
speed: 0.130169600248
id: 0
t: 398
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:398




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.192726135
y: 3.52686333656
theta: 3.28952860832
speed: 0.130169600248
id: 0
t: 398
xxx after update is x: -104.664375305
y: 3.53206586838
theta: 3.1592695713
speed: 0.0242053996772
id: 0
t: 399
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:399




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.664375305
y: 3.53206586838
theta: 3.1592695713
speed: 0.0242053996772
id: 0
t: 399
xxx after update is x: -105.450668335
y: 2.98874616623
theta: 3.13523340225
speed: 0.105703487992
id: 0
t: 400
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:400




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.450668335
y: 2.98874616623
theta: 3.13523340225
speed: 0.105703487992
id: 0
t: 400
xxx after update is x: -104.721084595
y: 2.92147994041
theta: 2 the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:392


222 self.state_dicts[msg.id][msg.t] is (-105.29100036621094, 3.1798043251037598, 3.020714521408081, 0.04655341058969498)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:393


222 self.state_dicts[msg.id][msg.t] is (-104.73939514160156, 3.2092134952545166, 3.248227119445801, 0.007663697935640812)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:394


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:395


Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '17.5111111111', 'Position': ['(-104.73939514160156', ' 3.2092134952545166', ' 3.248227119445801)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,17.5111111111,(-104.73939514160156, 3.2092134952545166, 3.248227119445801),0,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




222 self.state_dicts[msg.id][msg.t] is (-104.76718139648438, 3.3653290271759033, 3.111074924468994, -0.3290388882160187)
222 self.state_dicts[msg.id][msg.t] is (-104.95013427734375, 3.376673936843872, 3.15689754486084, 0.09052450209856033)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:396


222 self.state_dicts[msg.id][msg.t] is (-104.90027618408203, 3.032275915145874, 3.179117441177368, -0.04529585689306259)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:397


222 self.state_dicts[msg.id][msg.t] is (-105.1927261352539, 3.5268633365631104, 3.2895286083221436, 0.1301696002483368)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:398


222 self.state_dicts[msg.id][msg.t] is (-104.66437530517578, 3.5320658683776855, 3.1592695713043213, 0.024205399677157402)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:399




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:400


222 self.state_dicts[msg.id][msg.t] is (-105.45066833496094, 2.988746166229248, 3.1352334022521973, 0.10570348799228668)
222 self.state_dicts[msg.id][msg.t] is (-104.72108459472656, 2.9214799404144287, 2.913203716278076, -0.015639198943972588)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:401


222 self.state_dicts[msg.id][msg.t] is (-105.11314392089844, 3.4222612380981445, 3.042004346847534, 0.4511409103870392)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:402


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.33333.91320371628
speed: -0.015639198944
id: 0
t: 401
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:401




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.721084595
y: 2.92147994041
theta: 2.91320371628
speed: -0.015639198944
id: 0
t: 401
xxx after update is x: -105.113143921
y: 3.4222612381
theta: 3.04200434685
speed: 0.451140910387
id: 0
t: 402
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:402


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 17.8666666667






self.maneuver_requested left
RELEASE,0,17.8666666667,(-105.11314392089844, 3.4222612380981445, 3.042004346847534),0,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 17.8666666667
self.communication_details == 0
sending RELEASE,0,17.8666666667,(-105.11314392089844, 3.4222612380981445, 3.042004346847534),0,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.113143921
y: 3.4222612381
theta: 3.04200434685
speed: 0.451140910387
id: 0
t: 402
xxx after update is x: -105.152519226
y: 3.5220489502
theta: 3.17133975029
speed: -0.109424419701
id: 0
t: 403
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:403




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.152519226
y: 3.5220489502
theta: 3.17133975029
speed: -0.109424419701
id: 0
t: 403
xxx after update is x: -104.66608429
y: 3.15536308289
theta: 3.01851892471
speed: 0.0078715858981
id: 0
t: 404
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:404




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.66608429
y: 3.15536308289
theta: 3.01851892471
speed: 0.0078715858981
id: 0
t: 404
xxx after update is x: -104.795043945
y: 3.2494289875
theta: 3.06037831306
speed: 0.164597898722
id: 0
t: 405
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:405




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.795043945
y: 3.2494289875
theta: 3.06037831306
speed: 0.164597898722
id: 0
t: 405
xxx after update is x: -105.088035583
y: 2.937687397
theta: 3.0838329792
speed: 0.209079146385
id: 0
t: 406
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:406




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.088035583
y: 2.937687397
theta: 3.0838329792
speed: 0.209079146385
id: 0
t: 406
xxx after update is x: -105.129272461
y: 3.40361094475
theta: 3.03730416298
speed: -0.238291397691
id: 0
t: 407
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:407




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.129272461
y: 3.40361094475
the33333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '17.8666666667', 'Position': ['(-105.11314392089844', ' 3.4222612380981445', ' 3.042004346847534)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,17.8666666667,(-105.11314392089844, 3.4222612380981445, 3.042004346847534),0,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:403


222 self.state_dicts[msg.id][msg.t] is (-105.15251922607422, 3.5220489501953125, 3.171339750289917, -0.1094244197010994)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:404


222 self.state_dicts[msg.id][msg.t] is (-104.66608428955078, 3.155363082885742, 3.0185189247131348, 0.00787158589810133)
222 self.state_dicts[msg.id][msg.t] is (-104.7950439453125, 3.2494289875030518, 3.060378313064575, 0.16459789872169495)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:405


222 self.state_dicts[msg.id][msg.t] is (-105.0880355834961, 2.937687397003174, 3.0838329792022705, 0.20907914638519287)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:406




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:407


222 self.state_dicts[msg.id][msg.t] is (-105.1292724609375, 3.403610944747925, 3.037304162979126, -0.238291397690773)
222 self.state_dicts[msg.id][msg.t] is (-104.95265197753906, 2.854611396789551, 3.1683714389801025, 0.48826077580451965)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:408


222 self.state_dicts[msg.id][msg.t] is (-105.30081176757812, 3.0179412364959717, 3.175837993621826, 0.25624075531959534)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:409


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:410


222 self.state_dicts[msg.id][msg.t] is (-104.85371398925781, 3.050823926925659, 3.2382454872131348, 0.1529967486858368)
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '18.2222222222', 'Position': ['(-104.85371398925781', ' 3.050823926925659', ' 3.2382454872131348)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,18.2222222222,(-104.85371398925781, 3.050823926925659, 3.2382454872131348),0,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:411


222 self.state_dicts[msg.id][msg.t] is (-104.57560729980469, 3.323951482772827, 3.1164820194244385, 0.1414516121149063)
222 self.state_dicts[msg.id][msg.t] is (-105.02600860595703, 3.1572139263153076, 3.0780446529388428, -0.2653641104698181)


going to the update function
sim.py ita: 3.03730416298
speed: -0.238291397691
id: 0
t: 407
xxx after update is x: -104.952651978
y: 2.85461139679
theta: 3.16837143898
speed: 0.488260775805
id: 0
t: 408
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:408




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.952651978
y: 2.85461139679
theta: 3.16837143898
speed: 0.488260775805
id: 0
t: 408
xxx after update is x: -105.300811768
y: 3.0179412365
theta: 3.17583799362
speed: 0.25624075532
id: 0
t: 409
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:409




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.300811768
y: 3.0179412365
theta: 3.17583799362
speed: 0.25624075532
id: 0
t: 409
xxx after update is x: -104.853713989
y: 3.05082392693
theta: 3.23824548721
speed: 0.152996748686
id: 0
t: 410
maneuver_negotiatir.py finish the update agent state from ros funtion
maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 18.2222222222






self.maneuver_requested left
RELEASE,0,18.2222222222,(-104.85371398925781, 3.050823926925659, 3.2382454872131348),0,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 18.2222222222
self.communication_details == 0
sending RELEASE,0,18.2222222222,(-104.85371398925781, 3.050823926925659, 3.2382454872131348),0,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
leave the update function 
in spin function, finish the n times spin:410


maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.853713989
y: 3.05082392693
theta: 3.23824548721
speed: 0.152996748686
id: 0
t: 410
xxx after update is x: -104.5756073
y: 3.32395148277
theta: 3.11648201942
speed: 0.141451612115
id: 0
t: 411
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:411




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.5756073
y: 3.32395148277
theta: 3.11648201942
speed: 0.141451612115
id: 0
t: 411
xxx after update is x: -105.026008606
y: 3.15721392632
theta: 3.07804465294
speed: -0.26536411047
id: 0
t: 412
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:412




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.026008606
y: 3.15721392632
theta: 3.07804465294
speed: -0.26536411047
id: 0
t: 412
xxx after update is x: -105.269981384
y: 3.21051716805
theta: 3.22646474838
speed: -0.0134345572442
id: 0
t: 413
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:413




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.269981384
y: 3.21051716805
theta: 3.22646474838
speed: -0.0134345572442
id: 0
t: 413
xxx after update is x: -104.780303955
y: 3.30798387527
theta: 3.15285015106
speed: 0.162289097905
id: 0
t: 414
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:414




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.780303955
y: 3.30798387527
theta: 3.15285015106
speed: 0.162289097905
id: 0
t: 414
xxx after update is x: -104.814460754
y: 3.03770685196
theta: 3.12396502495
speed: 0.246903210878
id: 0
t: 415
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:415




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.814460754
y: 3.03770685196
theta: 3.12396502495
speed: 0.246903210878
id: 0
t: 415
xxx after update is x: -104.79196167
y: 3.0244038105
theta: 3.17141056061
speed: -0.115117266774
id: 0
t: 416
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:416




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.79196167
y: 3.0244038105
theta: 3.17141056061
speed: -0.115117266774
id: 0
t: 416
xxx after update is x: -105.312088013
y: 3.32191705704
theta: 3.13876271248
speed: 0.133608281612
id: 0
t: 417
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:417


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 18.5333333333






self.maneuver_requested left
RELEASE,0,18.5333333333,(-105.31208801269531, 3.3219170570373535, 3.1387627124786377),0,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 18.5333333333
self.communication_details == 0
sending RELEASE,0,18.5333333333,(-105.31208801269531, 3.3219170570373535, 3.1387627124786377),0,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.312088013
y: 3.32191705704
theta: 3.13876271248
speed: 0.133608281612
id: 0
t: 417
xxx after update is x: -105.200492859
y: 3.41141700745
theta: 3.10578012466
speed: 0.0512927956879
id: 0
t: 418
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:418




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.200492859
y: 3.41141700745
theta: 3.10578012466
speed: 0.0512927956879
id: 0
t: 418
xxx after update is x: -104.900314331
y: 3.73467612267
theta: 3.29934382439
speed: 0.27811357379
id: 0
t: 419
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:419




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.900314331
y: 3.73467612267
theta: 3.29934382439
speed: 0.27811357379
id: 0
t: 419
xxx after update is x: -104.90801239
y: 3.12433481216
theta: 3.23737883568
speed: 0.00499118026346
id: 0
t: 420
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:420




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.90801239
y: 3.12433481216
theta: 3.23737883568
speed: 0.00499118026346
id: 0
t: 420
xxx after update is x: -104.687034607
y: 3.35279393196
theta: 3.17174935341
speed: -0.191789284348
id: 0
t: 421
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin n the sim.py update function 
leave the update function 
in spin function, finish the n times spin:412


222 self.state_dicts[msg.id][msg.t] is (-105.26998138427734, 3.210517168045044, 3.2264647483825684, -0.013434557244181633)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:413


222 self.state_dicts[msg.id][msg.t] is (-104.78030395507812, 3.307983875274658, 3.1528501510620117, 0.162289097905159)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:414




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:415


222 self.state_dicts[msg.id][msg.t] is (-104.81446075439453, 3.0377068519592285, 3.12396502494812, 0.2469032108783722)
222 self.state_dicts[msg.id][msg.t] is (-104.79196166992188, 3.0244038105010986, 3.17141056060791, -0.11511726677417755)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:416


222 self.state_dicts[msg.id][msg.t] is (-105.31208801269531, 3.3219170570373535, 3.1387627124786377, 0.13360828161239624)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:417


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '18.5333333333', 'Position': ['(-105.31208801269531', ' 3.3219170570373535', ' 3.1387627124786377)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,18.5333333333,(-105.31208801269531, 3.3219170570373535, 3.1387627124786377),0,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1




222 self.state_dicts[msg.id][msg.t] is (-105.20049285888672, 3.411417007446289, 3.1057801246643066, 0.051292795687913895)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:418


222 self.state_dicts[msg.id][msg.t] is (-104.90031433105469, 3.7346761226654053, 3.2993438243865967, 0.27811357378959656)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:419


222 self.state_dicts[msg.id][msg.t] is (-104.90801239013672, 3.1243348121643066, 3.2373788356781006, 0.0049911802634596825)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:420




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:421


222 self.state_dicts[msg.id][msg.t] is (-104.6870346069336, 3.3527939319610596, 3.1717493534088135, -0.19178928434848785)
222 self.state_dicts[msg.id][msg.t] is (-104.51889038085938, 3.2629847526550293, 3.240208387374878, 0.0007378767477348447)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:422


222 self.state_dicts[msg.id][msg.t] is (-104.81307220458984, 2.9565589427948, 3.053295373916626, -0.2620697617530823)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:423


222 self.state_dicts[msg.id][msg.t] is (-104.51435852050781, 3.683407783508301, 3.00044584274292, 0.02114639803767function, finish the n times spin:421




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.687034607
y: 3.35279393196
theta: 3.17174935341
speed: -0.191789284348
id: 0
t: 421
xxx after update is x: -104.518890381
y: 3.26298475266
theta: 3.24020838737
speed: 0.000737876747735
id: 0
t: 422
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:422




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.518890381
y: 3.26298475266
theta: 3.24020838737
speed: 0.000737876747735
id: 0
t: 422
xxx after update is x: -104.813072205
y: 2.95655894279
theta: 3.05329537392
speed: -0.262069761753
id: 0
t: 423
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:423




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.813072205
y: 2.95655894279
theta: 3.05329537392
speed: -0.262069761753
id: 0
t: 423
xxx after update is x: -104.514358521
y: 3.68340778351
theta: 3.00044584274
speed: 0.0211463980377
id: 0
t: 424
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:424




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.514358521
y: 3.68340778351
theta: 3.00044584274
speed: 0.0211463980377
id: 0
t: 424
xxx after update is x: -105.052047729
y: 3.55743145943
theta: 3.18946003914
speed: -0.0845405012369
id: 0
t: 425
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:425


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 18.8888888889






self.maneuver_requested left
RELEASE,0,18.8888888889,(-105.05204772949219, 3.55743145942688, 3.189460039138794),0,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 18.8888888889
self.communication_details == 0
sending RELEASE,0,18.8888888889,(-105.05204772949219, 3.55743145942688, 3.189460039138794),0,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.052047729
y: 3.55743145943
theta: 3.18946003914
speed: -0.0845405012369
id: 0
t: 425
xxx after update is x: -105.403846741
y: 2.9735019207
theta: 3.10091018677
speed: 0.283643215895
id: 0
t: 426
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:426




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.403846741
y: 2.9735019207
theta: 3.10091018677
speed: 0.283643215895
id: 0
t: 426
xxx after update is x: -104.522377014
y: 3.52249145508
theta: 3.14606761932
speed: 0.0999619215727
id: 0
t: 427
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:427




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.522377014
y: 3.52249145508
theta: 3.14606761932
speed: 0.0999619215727
id: 0
t: 427
xxx after update is x: -104.974754333
y: 3.23688435555
theta: 2.95842623711
speed:2043)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:424


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
222 self.state_dicts[msg.id][msg.t] is (-105.05204772949219, 3.55743145942688, 3.189460039138794, -0.08454050123691559)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:425


Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '18.8888888889', 'Position': ['(-105.05204772949219', ' 3.55743145942688', ' 3.189460039138794)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,18.8888888889,(-105.05204772949219, 3.55743145942688, 3.189460039138794),0,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in the message processing function, it's a long code, finish1






going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:426


222 self.state_dicts[msg.id][msg.t] is (-105.40384674072266, 2.9735019207000732, 3.100910186767578, 0.2836432158946991)
222 self.state_dicts[msg.id][msg.t] is (-104.52237701416016, 3.522491455078125, 3.1460676193237305, 0.09996192157268524)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:427


222 self.state_dicts[msg.id][msg.t] is (-104.9747543334961, 3.236884355545044, 2.9584262371063232, -0.34665045142173767)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:428




going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:429


222 self.state_dicts[msg.id][msg.t] is (-104.97926330566406, 3.4253408908843994, 3.0848422050476074, -0.054146658629179)
222 self.state_dicts[msg.id][msg.t] is (-105.26941680908203, 3.2729811668395996, 3.13662052154541, 0.10931451618671417)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:430


222 self.state_dicts[msg.id][msg.t] is (-105.4246826171875, 3.163437604904175, 3.194239616394043, 0.1074923574924469)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:431


222 self.state_dicts[msg.id][msg.t] is (-105.13883972167969, 3.2019729614257812, 3.0239803791046143, 0.005492262542247772)


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:432


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish
Received -->>: 
current clock is 13.3333333333




maneuver_negotiatir.py message_processing, it's a long code, start...1




current clock is 13.3333333333
maneuver_negotiatir.py message_processing, curtime-t <= self.TD) .True
maneuver_negotiatir.py message_processing, self.communication_details != 1
message type is RELEASE, meaasge dict is {'TagTime': '0', 'Sender': '0', 'TagID': '1', 'Time': '19.2', 'Position': ['(-105.13883972167969', ' 3.2019729614257812', ' 3.0239803791046143)'], 'Type': 'RELEASE'}
car 1 received RELEASE,0,19.2,(-105.13883972167969, 3.2019729614257812, 3.0239803791046143),0,1,3.28888888889,0 from  car0
status: 1




maneuver_negotiatir.py in t -0.346650451422
id: 0
t: 428
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:428




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.974754333
y: 3.23688435555
theta: 2.95842623711
speed: -0.346650451422
id: 0
t: 428
xxx after update is x: -104.979263306
y: 3.42534089088
theta: 3.08484220505
speed: -0.0541466586292
id: 0
t: 429
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:429




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -104.979263306
y: 3.42534089088
theta: 3.08484220505
speed: -0.0541466586292
id: 0
t: 429
xxx after update is x: -105.269416809
y: 3.27298116684
theta: 3.13662052155
speed: 0.109314516187
id: 0
t: 430
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:430




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.269416809
y: 3.27298116684
theta: 3.13662052155
speed: 0.109314516187
id: 0
t: 430
xxx after update is x: -105.424682617
y: 3.1634376049
theta: 3.19423961639
speed: 0.107492357492
id: 0
t: 431
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:431




going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
xxx before update is x: -105.424682617
y: 3.1634376049
theta: 3.19423961639
speed: 0.107492357492
id: 0
t: 431
xxx after update is x: -105.138839722
y: 3.20197296143
theta: 3.0239803791
speed: 0.00549226254225
id: 0
t: 432
maneuver_negotiatir.py finish the update agent state from ros funtion
leave the update function 
in spin function, finish the n times spin:432


maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 19.2






self.maneuver_requested left
RELEASE,0,19.2,(-105.13883972167969, 3.2019729614257812, 3.0239803791046143),0,1,3.28888888889,0
maneuver_negotiatir.py start the update_agent_message
current clock is 19.2
self.communication_details == 0
sending RELEASE,0,19.2,(-105.13883972167969, 3.2019729614257812, 3.0239803791046143),0,1,3.28888888889,0 to car 1 from car 0
maneuver_negotiatir.py finish the update_agent_message
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
targetspeed < self.speed:xxxxxxxxx
 self.man_init:
False
out
gogogogoogogoogo
leave the update function 
in spin function, finish the n times spin:433


he message processing function, it's a long code, finish1




maneuver_negotiatir.py in the try maneuver function update -. strat
current clock is 13.3333333333






self.maneuver_requested None
maneuver_negotiatir.py in the try maneuver function update -. sfinish


going to the update function
sim.py in the sim.py update function 
leave the update function 
in spin function, finish the n times spin:433


... logging to /home/lu/.ros/log/73e0c646-0e7d-11e9-bb7c-000c291801fc/roslaunch-ubuntu-8326.log
Checking log directory for disk usage. This may take awhile.
Press Ctrl-C to interrupt
Done checking log file disk usage. Usage is <1GB.
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch
[1mstarted roslaunch server http://ubuntu:36617/[0m

SUMMARY
========

PARAMETERS
 * /enable_negotiator: True
 * /file_prefix: 
 * /nr_cars: 2
 * /plot: False
 * /rosdistro: kinetic
 * /rosversion: 1.12.14
 * /save: False

NODES
  /
    car0 (virtual_blinker/sim.py)
    car1 (virtual_blinker/sim.py)
    cloud (virtual_blinker/cloud.py)
    rviz (rviz/rviz)
    visualization (virtual_blinker/visualization.py)

auto-starting new master
[1mprocess[master]: started with pid [8336][0m
[1mROS_MASTER_URI=http://localhost:11311[0m
]2;/home/lu/catkin_ws/src/virtual_blinker/sim.launch http://localhost:11311
[1msetting /run_id to 73e0c646-0e7d-11e9-bb7c-000c291801fc[0m
[1mprocess[rosout-1]: started with pid [8356][0m
started core service [/rosout]
[1mprocess[visualization-2]: started with pid [8374][0m
[1mprocess[rviz-3]: started with pid [8375][0m
[1mprocess[car0-4]: started with pid [8376][0m
[1mprocess[car1-5]: started with pid [8377][0m
[1mprocess[cloud-6]: started with pid [8378][0m
[cloud-6] killing on exit
[car1-5] killing on exit
[car0-4] killing on exit
[rviz-3] killing on exit
[visualization-2] killing on exit
[rosout-1] killing on exit
[master] killing on exit
shutting down processing monitor...
... shutting down processing monitor complete
[1mdone[0m
